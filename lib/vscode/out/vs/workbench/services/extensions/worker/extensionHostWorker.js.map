{"version":3,"sources":["vs/workbench/services/extensions/worker/fake","vs/workbench/services/extensions/worker/vs/base/common/marked/marked.js","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/assert.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/collections.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/decorators.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/errors.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/arrays.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/functional.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/idGenerator.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/iterator.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/json.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/jsonFormatter.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/jsonEdit.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/lifecycle.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/linkedList.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/event.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/cancellation.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/numbers.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/platform.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/process.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/path.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/comparers.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/stopwatch.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/stream.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/strings.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/buffer.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/hash.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/types.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/objects.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/uint.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/uri.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/marshalling.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/filters.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/codicon.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/codicons.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/htmlContent.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/labels.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/uriIpc.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/uuid.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/core/characterClassifier.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/core/position.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/core/range.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/core/selection.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/model.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/model/wordHelper.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/modes/languageConfiguration.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/modes/languageSelector.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/modes/linkComputer.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/modes/tokenizationRegistry.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/model/mirrorTextModel.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/errorMessage.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/base/common/severity.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/config/editorOptions.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/services/modeService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/services/modelService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/modes/languageFeatureRegistry.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/editor/common/modes.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/commands/common/commands.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/files/common/files.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/log/common/log.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/markers/common/markers.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/progress/common/progress.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/remote/common/remoteHosts.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/workspaces/common/workspaces.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/platform/workspace/common/workspace.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/server/browser/worker.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/cache.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostInitDataService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostMemento.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostRpcService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostStoragePaths.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTypes.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDocumentData.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTheming.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostUriTransformerService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/shared/semanticTokensDto.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/shared/webview.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostCodeInsets.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/common/resources.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/contrib/debug/common/abstractDebugAdapter.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/contrib/debug/common/debugUtils.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostNotebookConcatDocument.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/contrib/tasks/common/taskService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/contrib/terminal/common/terminal.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalDataBuffering.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/configurationResolver/common/variableResolver.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/editor/common/editorService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTypeConverters.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/apiCommands.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostApiCommands.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDocumentSaveParticipant.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostProgress.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTextEditor.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/extensionDescriptionRegistry.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/extensionHostProtocol.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/extensions.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostExtensionActivator.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTreeViews.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/lazyPromise.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/proxyIdentifier.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHost.protocol.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/server/browser/extHostNodeProxy.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostApiDeprecationService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostAuthentication.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostClipboard.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostCommands.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostComments.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDecorations.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDiagnostics.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDialogs.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDocumentContentProviders.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDocuments.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDocumentsAndEditors.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostFileSystem.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostFileSystemEventService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostLabelService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostLanguageFeatures.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostLanguages.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostMessageService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostNotebook.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostOutput.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostQuickOpen.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostSCM.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostStatusBar.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostStorage.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTerminalService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTextEditors.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTimeline.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTunnelService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostUrls.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostWebview.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostWindow.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/node/extHostStoragePaths.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/worker/extHostLogService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/rpcProtocol.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/search/common/search.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostWorkspace.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostConfiguration.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostExtensionService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostDebugService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostRequireInterceptor.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostTask.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/extensionHostMain.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/search/common/fileSearchManager.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/search/common/textSearchManager.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHostSearch.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/common/extHost.api.impl.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/api/worker/extHostExtensionService.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/worker/extHost.services.ts","vs/workbench/services/extensions/worker/file:/repo/lib/vscode/src/vs/workbench/services/extensions/worker/extensionHostWorker.ts"],"names":["__marked_exports","__m","__M","deps","result","i","len","length","exports","ok","value","message","Error","hasOwnProperty","Object","prototype","values","from","key","call","push","size","count","first","forEach","callback","groupBy","data","groupFn","create","element","target","fromMap","original","SetMap","[object Object]","this","map","Map","get","Set","set","add","delete","fn","createDecorator","mapFn","descriptor","fnKey","memoizeId","createMemoizer","memoizeKeyPrefix","self","undefined","console","warn","memoizeKey","args","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","Date","now","ErrorHandler","listeners","unexpectedErrorHandler","e","stack","listener","_removeListener","splice","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","error","name","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","NotImplementedError","super","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","n","topStep","m","pop","j","firstIndex","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","to","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","elem","distinctES6","has","uniqueFilter","lastIndex","notFoundValue","index","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","indexer","merger","t","reduce","r","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","asArray","getRandomElement","once","_this","didCall","arguments","IdGenerator","prefix","_prefix","_lastId","defaultGenerator","Iterable","_empty","freeze","empty","single","iterable","Symbol","iterator","next","some","iterables","consume","atMost","POSITIVE_INFINITY","consumed","done","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","digits","hexValue","ch","charCodeAt","scanNext","code","isWhitespace","fromCharCode","isLineBreak","substring","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","JSON","parse","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","sep","last","path","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","children","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","replace","join","repeat","s","getEOL","charAt","eol","isEOL","format","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","content","nChars","tabSize","computeIndentLevel","indentValue","lineBreak","indentLevel","insertSpaces","scanner","json_1","hasError","newLineAndIndent","editOperations","addEdit","startOffset","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","setProperty","originalPath","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","stringify","newProperty","edit","removalIndex","toRemove","newText","applyEdit","begin","jsonFormatter_1","edits","curr","max","removeProperty","applyEdits","sortedEdits","arrays_1","diff","lastModifiedOffset","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","dispose","disposables","d","isDisposable","thing","combinedDisposable","toDisposable","DisposableStore","_toDispose","_isDisposed","DISABLE_DISPOSED_WARNING","_store","MutableDisposable","_value","ReferenceCollection","references","reference","counter","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","all","catch","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","context","bind","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","iLimitedTask","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","block","newline","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","Lexer","tokens","links","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","getRegex","bullet","_tag","_comment","lex","src","loose","cap","bull","listStart","listItems","space","tag","l","isordered","istask","ischecked","exec","rtrim","lang","trim","depth","header","splitCells","align","cells","test","ordered","match","RegExp","smartLists","checked","sanitize","pre","sanitizer","toLowerCase","href","title","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","encode","escapeTest","escapeReplace","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","parseInt","regex","opt","val","cleanUrl","base","prot","decodeURIComponent","originIndependentUrl","baseUrls","resolveUrl","encodeURI","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","prevCapZero","out","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","body","listitem","checkbox","tablerow","tablecell","flags","baseUrl","inlineText","reverse","tok","peek","parseText","row","cell","errMsg","silent","originalSlug","&","<",">","\"","'","tableRow","str","invert","suffLen","currChar","substr","setOptions","getDefaults","parser","lexer","inlineLexer","define","clamp","rot","modulo","Counter","MovingAverage","_n","_val","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","isElectronRenderer","process","versions","electron","navigator","platform","rawNlsConfig","env","nlsConfig","resolved","availableLanguages","locale","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","translationsConfigFile","_globals","global","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","Uint8Array","view","Uint16Array","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","_format","pathObject","dir","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","intlFileNameCollator","async_1","collator","Intl","Collator","numeric","sensitivity","collatorIsNumeric","resolvedOptions","compareFileNames","caseSensitive","getValue","FileNameMatch","extractNameAndExtension","comparePathComponents","compareByPrefix","lookFor","elementAName","elementBName","elementAPrefixMatch","startsWith","elementBPrefixMatch","noIntlCompareFileNames","oneName","oneExtension","otherName","otherExtension","compareFileExtensions","comparePaths","oneParts","path_1","otherParts","lastOne","lastOther","endOne","endOther","compareAnything","prefixCompare","elementASuffixMatch","endsWith","localeCompare","hasPerformanceNow","performance","StopWatch","highResolution","_highResolution","_startTime","_now","_stopTime","newWriteableStream","WriteableStreamImpl","isReadableStream","pause","resume","destroy","every","state","flowing","ended","destroyed","flowData","flowErrors","flowEnd","write","fullDataBuffer","consumeReadable","readable","chunks","chunk","read","consumeReadableWithLimit","maxChunks","lastReadChunk","consumeStream","stream","consumeStreamWithLimit","wrapperStream","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","pad","char","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","group","isNaN","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","regexp","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","safeBtoa","btoa","encodeURIComponent","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","readUInt16LE","writeUInt16LE","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","toSlashes","osPath","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","indexOfPath","hash","hashVal","numberHash","initialHashVal","keys","stringHash","objectHash","booleanHash","SHA1Constant","leftRotate","bits","totalBits","fill","dest","toHexString","bitsize","leftPad","Hasher","StringSHA1","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","buff","buffLen","leftoverHighSurrogate","_push","_step","_wrapUp","ml","setUint32","bigBlock32","_bigBlock32","getUint32","f","ArrayBuffer","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","assertType","condition","assertIsDefined","assertAllDefined","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","types_1","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","getOrDefault","baseValue","targetValue","Constants","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","change","_URI","percentDecode","components","uri","pathFragment","newPath","file","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","replacer","revive","uri_1","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeSettings","webviewPanel","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","location","pathname","forEachable","getOrSet","mapToString","entries","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","UriIteratorState","UriIterator","_states","_stateIdx","network_1","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","iter","oldElement","_nodeIterator","_forEach","ResourceMap","toStringTag","toKey","clb","thisArg","tuple","resourceMap","Touch","LinkedMap","_map","_head","_tail","touch","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","or","word","wordToMatchAgainst","_matchesPrefix","matchesContiguousSubString","matchesSubString","_matchesSubString","isLower","isUpper","matchesStrictPrefix","matchesPrefix","wordSeparators","isWordSeparator","isAlphanumeric","head","nextAnchor","camelCaseWord","_matchesCamelCase","nextUpperIndex","matchesCamelCase","upper","lower","whitespace","isCamelCasePattern","analysis","alpha","upperPercent","lowerPercent","alphaPercent","numericPercent","analyzeCamelCaseWord","isCamelCaseWord","isUpperCaseWord","_matchesWords","contiguous","nextWordIndex","nextWord","matchesWords","fuzzyContiguousFilter","fuzzySeparateFilter","fuzzyRegExpCache","map_1","createMatches","score","_maxLen","matchesFuzzy","enableSeparateSubstringMatching","matchesFuzzy2","fuzzyScore","anyScore","lowPattern","_patternPos","lowWord","_wordPos","patternPos","wordPos","initTable","thisRow","_table","_scores","_arrows","_debug","printTable","patternLen","wordLen","isSeparatorAtPos","isUpperCaseAtPos","wordLow","isPatternInWord","patternLow","Arrow","patternStart","wordStart","firstMatchCanBeWeak","column","hasStrongFirstMatch","_doScore","diag","printTables","_matchesCount","_topScore","_wordStart","_firstMatchCanBeWeak","_findAllMatches2","total","lastMatched","simpleMatchCount","arrow","_topMatch2","isWhitespaceAtPos","FuzzyScore","Default","fuzzyScoreWithPermutations","aggressive","tries","movingPatternPos","newPattern","nextTypoPermutation","swap1","swap2","fuzzyScoreGracefulAggressive","fuzzyScoreGraceful","codiconStartMarker","parseCodicons","firstCodiconIndex","codiconOffsets","textWithoutCodicons","appendChars","chars","codiconsOffset","nextChar","currentCodiconStart","currentCodiconValue","doParseCodicons","matchesFuzzyCodiconAware","filters_1","wordToMatchAgainstWithoutCodiconsTrimmed","leadingWhitespaceOffset","codiconOffset","_registry","_icons","_onDidRegister","icon","onDidRegister","iconRegistry","registerIcon","Codicon","definition","classNames","cssSelector","character","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tagAdd","tagRemove","person","personAdd","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","comment","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","primitiveSquare","pencil","info","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","repoSync","sync","clone","desktopDownload","beaker","microscope","vm","deviceDesktop","fileText","more","ellipsis","kebabHorizontal","mailReply","reply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","repl","zap","symbolEvent","stop","variable","symbolVariable","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","checklist","chevronDown","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circleOutline","debugBreakpointUnverified","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","collapseAll","colorMode","commentDiscussion","compareChanges","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueClosed","issueReopened","issues","italic","jersey","json","kebabVertical","law","lightbulbAutofix","linkExternal","listOrdered","listUnordered","liveShare","loading","mailRead","mail","markdown","megaphone","mention","milestone","mortarBoard","multipleWindows","mute","noNewline","note","octoface","openPreview","package_","paintcan","pin","play","plug","preserveCase","preview","project","pulse","question","radioTower","reactions","refresh","remoteExplorer","remote","replaceAll","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","vmActive","vmOutline","vmRunning","watch","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","debugStackframeDot","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","debugAlternate","callIncoming","callOutgoing","menu","expandAll","feedback","groupByRefType","ungroupByRefType","account","bellDot","debugConsole","library","runAll","syncIgnored","pinned","githubInverted","debugAlt2","debugAlt","escapeCodiconsRegex","escapeCodicons","markdownEscapedCodiconsRegex","markdownEscapeEscapedCodicons","markdownUnescapeCodiconsRegex","markdownUnescapeCodicons","codicon","renderCodiconsRegex","renderCodicons","animation","stripCodiconsRegex","stripCodicons","codicon_1","preWhitespace","postWhitespace","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","MarkdownString","isTrustedOrOptions","_isTrusted","_supportThemeIcons","isTrusted","_b","supportThemeIcons","codicons_1","langId","isMarkdownString","markdownStringEqual","isEmptyMarkdownString","oneOrMany","markedStringsEquals","removeMarkdownEscapes","parseHrefAndDimensions","dimensions","splitted","parameters","heightFromParams","widthFromParams","height","width","widthIsFinite","isFinite","heightIsFinite","originalFSPath","hasToIgnoreCase","parentCandidate","isEqualAuthority","a1","a2","hasTrailingPathSeparator","fsp","relativePath","caseInsensitivePath","fromPath","toPath","getComparisonKey","basenameOrAuthority","second","ignoreFragment","p1","p2","joinPath","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forUris","glob_1","rootExpression","findSubstr","toLocalResource","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","userHome","tildify","getBaseLabel","normalizedUserHomeCached","normalizedUserHome","normalized","untildify","unc","Type","shorten","pathSeparator","shortenedPaths","pathIndex","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","label","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","remoteAuthority","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformOutgoing","transformIncomingURIs","transformAndReviveIncomingURIs","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","CharacterClassifier","_defaultValue","uint_1","_asciiMap","_createAsciiMap","asciiMap","Boolean","CharacterSet","_actual","Position","lineNumber","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","position_1","getStartPosition","collapseToStart","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","SelectionDirection","Selection","range_1","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","selectionsEqual","getDirection","sel","direction","OverviewRulerLane","MinimapPosition","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TextModelResolvedOptions","indentSize","defaultEOL","trimAutoWhitespace","newOpts","FindMatch","TrackedRangeStickiness","ModelConstants","ValidAnnotatedEditOperation","identifier","forceMoveMarkers","isAutoWhitespaceEdit","_isTracked","ApplyEditsResult","reverseEdits","changes","trimAutoWhitespaceLineNumbers","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","createWordRegExp","ensureValidWordDefinition","wordDefinition","_defaultConfig","maxLen","windowSize","timeBudget","_findRegexMatchEnclosingPosition","stopPos","matchIndex","getWordAtText","textOffset","config","prevRegexIndex","regexIndex","thisMatch","IndentAction","StandardAutoClosingPairConditional","open","_standardTokenMask","notIn","standardToken","selector","candidateUri","candidateLanguage","candidateIsSynchronized","hasAccessToAllModels","State","Uint8Matrix","rows","cols","col","StateMachine","edges","maxCharCode","maxState","states","_maxCharCode","currentState","_stateMachine","CharacterClass","_classifier","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","model","stateMachine","characterClassifier_1","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","_createLink","nextState","computeLinks","TokenizationRegistryImpl","_promises","_onDidChange","onDidChange","_colorMap","languages","changedLanguages","changedColorMap","support","supportPromise","registration","isDisposed","register","colorMap","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","insertValues","oldValues","oldPrefixSum","insertValuesLen","cnt","maxCnt","_getAccumulatedValue","accumulatedValue","getTotalValue","midStop","midStart","MirrorTextModel","lines","versionId","_uri","_lines","_eol","_versionId","_lineStarts","version","_acceptDeleteRange","_acceptInsertText","eolLength","linesLength","lineStartValues","prefixSumComputer_1","lineIndex","newValue","changeValue","_setLineText","removeValues","insertText","insertLines","newLengths","nls","exceptionToErrorMessage","exception","verbose","localize","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","types","detail","Severity","_warning","_warn","_info","_displayStrings","Warning","Info","fromValue","Ignore","default","TextEditorCursorStyle","EditorAutoIndentStrategy","MINIMAP_GUTTER_WIDTH","ConfigurationChangedEvent","_values","ValidatedEditorOptions","option","BaseEditorOption","ComputedEditorOption","SimpleEditorOption","EditorBooleanOption","boolean","EditorIntOption","minimum","maximum","clampedInt","EditorFloatOption","validationFn","parseFloat","float","EditorStringOption","string","EditorStringEnumOption","allowedValues","enum","_allowedValues","stringSet","EditorEnumOption","defaultStringValue","convert","_convert","TextEditorCursorBlinkingStyle","cursorStyleToString","cursorStyle","Line","Block","Underline","LineThin","BlockOutline","UnderlineThin","EditorFontLigatures","OFF","anyOf","description","ON","RenderMinimap","EditorLayoutInfoComputer","computeLayout","outerWidth","outerHeight","lineHeight","fontInfo","viewLineCount","lineNumbersDigitCount","typicalHalfwidthCharacterWidth","maxDigitWidth","pixelRatio","typicalViewportLineCount","extraLinesBeyondLastLine","scrollBeyondLastLine","desiredRatio","minimapLineCount","showGlyphMargin","showLineNumbers","renderType","lineNumbersMinChars","minimap","minimapEnabled","enabled","minimapSide","side","minimapRenderCharacters","renderCharacters","minimapScale","scale","minimapMaxColumn","maxColumn","minimapSize","scrollbar","verticalScrollbarWidth","verticalScrollbarSize","verticalScrollbarHasArrows","verticalHasArrows","scrollbarArrowSize","arrowSize","horizontalScrollbarHeight","horizontalScrollbarSize","rawLineDecorationsWidth","folding","lineDecorationsWidth","multiple","lineNumbersWidth","digitCount","glyphMarginWidth","glyphMarginLeft","lineNumbersLeft","decorationsLeft","contentLeft","remainingWidth","baseCharHeight","renderMinimap","minimapLeft","minimapWidth","minimapCanvasInnerWidth","minimapCanvasOuterWidth","minimapCanvasInnerHeight","minimapCanvasOuterHeight","contentWidth","minimapHeightIsEditorHeight","minimapIsSampling","minimapLineHeight","minimapCharWidth","minimapWidthMultiplier","computeContainedMinimapLineCount","effectiveMinimapHeight","ceil","configuredFontScale","verticalArrowSize","decorationsWidth","viewportColumn","overviewRuler","RenderLineNumbersType","filterValidationDecorations","renderValidationDecorations","_scrollbarVisibilityFromString","visibility","WrappingIndent","editorOptionsRegistry","EDITOR_FONT_DEFAULTS","fontFamily","fontWeight","fontSize","letterSpacing","EDITOR_MODEL_DEFAULTS","detectIndentation","largeFileOptimizations","EditorOption","EditorOptions","acceptSuggestionOnCommitCharacter","markdownDescription","acceptSuggestionOnEnter","markdownEnumDescriptions","accessibilitySupport","enumDescriptions","accessibilityPageSize","ariaLabel","autoClosingBrackets","autoClosingOvertype","autoClosingQuotes","autoIndent","automaticLayout","autoSurround","codeLens","colorDecorators","columnSelection","comments","insertSpace","editor.comments.insertSpace","_input","contextmenu","copyWithSyntaxHighlighting","cursorBlinking","cursorBlinkingStyle","cursorSmoothCaretAnimation","cursorSurroundingLines","cursorSurroundingLinesStyle","cursorWidth","disableLayerHinting","disableMonospaceOptimizations","dragAndDrop","emptySelectionClipboard","extraEditorClassName","fastScrollSensitivity","seedSearchStringFromSelection","autoFindInSelection","globalFindClipboard","addExtraSpaceOnTop","editor.find.seedSearchStringFromSelection","editor.find.autoFindInSelection","editor.find.globalFindClipboard","included","editor.find.addExtraSpaceOnTop","editor.find.loop","fixedOverflowWidgets","foldingStrategy","foldingHighlight","unfoldOnClickAfterEndOfLine","fontLigatures2","formatOnPaste","formatOnType","glyphMargin","gotoLocation","multipleDefinitions","multipleTypeDefinitions","multipleDeclarations","multipleImplementations","multipleReferences","alternativeDefinitionCommand","alternativeTypeDefinitionCommand","alternativeDeclarationCommand","alternativeImplementationCommand","alternativeReferenceCommand","jsonSubset","editor.gotoLocation.multiple","deprecationMessage","editor.gotoLocation.multipleDefinitions","editor.gotoLocation.multipleTypeDefinitions","editor.gotoLocation.multipleDeclarations","editor.gotoLocation.multipleImplementations","editor.gotoLocation.multipleReferences","editor.gotoLocation.alternativeDefinitionCommand","editor.gotoLocation.alternativeTypeDefinitionCommand","editor.gotoLocation.alternativeDeclarationCommand","editor.gotoLocation.alternativeImplementationCommand","editor.gotoLocation.alternativeReferenceCommand","_c","_d","_e","hideCursorInOverviewRuler","highlightActiveIndentGuide","hover","sticky","editor.hover.enabled","editor.hover.delay","editor.hover.sticky","inDiffEditor","editor.lightbulb.enabled","lineNumbers","renderFn","matchBrackets","showSlider","editor.minimap.enabled","editor.minimap.size","editor.minimap.side","editor.minimap.showSlider","editor.minimap.scale","editor.minimap.renderCharacters","editor.minimap.maxColumn","mouseStyle","mouseWheelScrollSensitivity","mouseWheelZoom","multiCursorMergeOverlapping","multiCursorModifier","multiCursorPaste","occurrencesHighlight","overviewRulerBorder","overviewRulerLanes","padding","bottom","editor.padding.top","editor.padding.bottom","parameterHints","cycle","editor.parameterHints.enabled","editor.parameterHints.cycle","peekWidgetDefaultFocus","definitionLinkOpensInPeek","quickSuggestions","properties","opts","quickSuggestionsDelay","readOnly","renameOnType","renderControlCharacters","renderIndentGuides","renderFinalNewline","renderLineHighlight","renderLineHighlightOnlyWhenFocus","renderWhitespace","revealHorizontalRightPadding","roundedSelection","rulers","columnSchema","color","_element","vertical","horizontal","useShadows","horizontalHasArrows","horizontalSliderSize","verticalSliderSize","handleMouseWheel","alwaysConsumeMouseWheel","scrollBeyondLastColumn","scrollPredominantAxis","selectionClipboard","selectionHighlight","selectOnLineNumbers","showFoldingControls","showUnused","snippetSuggestions","smoothScrolling","stopRenderingLineAfter","suggest","insertMode","filterGraceful","snippetsPreventQuickSuggestions","localityBonus","shareSuggestSelections","showIcons","maxVisibleSuggestions","showMethods","showFunctions","showConstructors","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showSnippets","showUsers","showIssues","statusBar","visible","editor.suggest.insertMode","editor.suggest.filterGraceful","editor.suggest.localityBonus","editor.suggest.shareSuggestSelections","editor.suggest.snippetsPreventQuickSuggestions","editor.suggest.showIcons","editor.suggest.maxVisibleSuggestions","editor.suggest.filteredTypes","editor.suggest.showMethods","editor.suggest.showFunctions","editor.suggest.showConstructors","editor.suggest.showFields","editor.suggest.showVariables","editor.suggest.showClasses","editor.suggest.showStructs","editor.suggest.showInterfaces","editor.suggest.showModules","editor.suggest.showProperties","editor.suggest.showEvents","editor.suggest.showOperators","editor.suggest.showUnits","editor.suggest.showValues","editor.suggest.showConstants","editor.suggest.showEnums","editor.suggest.showEnumMembers","editor.suggest.showKeywords","editor.suggest.showWords","editor.suggest.showColors","editor.suggest.showFiles","editor.suggest.showReferences","editor.suggest.showCustomcolors","editor.suggest.showFolders","editor.suggest.showTypeParameters","editor.suggest.showSnippets","editor.suggest.showUsers","editor.suggest.showIssues","editor.suggest.statusBar.visible","suggestFontSize","suggestLineHeight","suggestOnTriggerCharacters","suggestSelection","tabCompletion","useTabStops","wordHelper_1","wordWrapBreakAfterCharacters","wordWrapBreakBeforeCharacters","wordWrapColumn","wordWrapMinified","wrappingIndent","wrappingStrategy","editorClassName","className","tabFocusMode","layoutInfo","wrappingInfo","bareWrappingInfo","isWordWrapMinified","isViewportWrapping","wrappingColumn","isDominatedByLongLines","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","isIExtensionIdentifier","uuid","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","manifest","contributes","localizations","areSameExtensions","ExtensionIdentifierWithVersion","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","extension","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","malicious","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","registerSingleton","descriptors_1","getSingletonServiceDescriptors","incoming","outgoing","Graph","_hashFn","_nodes","fromNode","lookupOrInsertNode","toNode","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IModeService","instantiation_1","IModelService","shouldSynchronizeModel","isTooLargeForSyncing","isForSimpleWidget","isExclusive","exclusive","LanguageFeatureRegistry","_clock","_entries","provider","entry","_score","_time","_lastCandidate","_updateScores","_orderedForEach","lastBucket","lastBucketScore","getLanguageIdentifier","languageSelector_1","modelService_1","_compareByScoreAndTime","LanguageId","LanguageIdentifier","FontStyle","ColorId","StandardTokenType","MetadataConsts","TokenMetadata","getForeground","fontStyle","getFontStyle","foreground","CompletionItemKind","completionKindToCssClass","completionKindFromString","strict","CompletionItemTag","CompletionItemInsertTextRule","CompletionTriggerKind","CodeActionTriggerType","SignatureHelpTriggerKind","DocumentHighlightKind","isLocationLink","isUri","isIRange","originSelectionRange","targetSelectionRange","SymbolKind","SymbolTag","SymbolKinds","byName","byKind","toCssClassName","symbolName","FoldingRangeKind","Comment","Imports","Region","WorkspaceFileEdit","is","newUri","oldUri","WorkspaceTextEdit","CommentThreadCollapsibleState","CommentMode","ReferenceProviderRegistry","languageFeatureRegistry_1","RenameProviderRegistry","CompletionProviderRegistry","SignatureHelpProviderRegistry","HoverProviderRegistry","EvaluatableExpressionProviderRegistry","DocumentSymbolProviderRegistry","DocumentHighlightProviderRegistry","OnTypeRenameProviderRegistry","DefinitionProviderRegistry","DeclarationProviderRegistry","ImplementationProviderRegistry","TypeDefinitionProviderRegistry","CodeLensProviderRegistry","CodeActionProviderRegistry","DocumentFormattingEditProviderRegistry","DocumentRangeFormattingEditProviderRegistry","OnTypeFormattingEditProviderRegistry","LinkProviderRegistry","ColorProviderRegistry","SelectionRangeRegistry","FoldingRangeProviderRegistry","DocumentSemanticTokensProviderRegistry","DocumentRangeSemanticTokensProviderRegistry","TokenizationRegistry","tokenizationRegistry_1","ICommandService","CommandsRegistry","_commands","_onDidRegisterCommand","onDidRegisterCommand","idOrCommand","registerCommand","actualHandler","accessor","commands","removeFn","oldId","newId","executeCommand","iterator_1","getCommand","NullCommandService","_serviceBrand","onWillExecuteCommand","onDidExecuteCommand","STATIC_VALUES","ContextKeyExprType","ContextKeyExpr","ContextKeyFalseExpr","INSTANCE","ContextKeyTrueExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyRegexExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","ContextKeyOrExpr","serialized","_deserializeOrExpression","pieces","_deserializeAndExpression","_deserializeOne","serializedOne","_deserializeValue","_deserializeRegexValue","serializedValue","caseIgnoreFlag","mapFnc","staticValue","mapDefined","mapEquals","mapNotEquals","mapNot","thisSource","otherSource","mapRegex","ContextKeyNotRegexExpr","evaluate","_expr","_normalizeArr","hasTrue","serialize","negate","hasFalse","terminals","LEFT","RIGHT","and","RawContextKey","createKey","getContextKeyValue","not","notEquals","IContextKeyService","SET_CONTEXT_COMMAND_ID","IEnvironmentService","BACKUPS","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","nls_1","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","checkForChangeType","getOfType","hasType","isParent","FileOperationResult","AutoSaveConfiguration","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","stat","mtime","whenProviderRegistered","fileService","canHandleResource","disposable","onDidChangeFileSystemProviderRegistrations","ServiceCollection","service","instanceOrDescriptor","_enableTracing","CyclicDependencyError","InstantiationService","services","serviceCollection_1","_services","_parent","_trace","Trace","traceInvocation","_done","isOptional","_getOrCreateServiceInstance","ctorOrDescriptor","rest","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","roots","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","_target","TraceType","_start","_dep","_None","child","dur","_totals","causedCreation","printChild","trace","nested","toFixed","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","_onDidChangeLogLevel","_register","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","LogServiceAdapter","adapter","consoleLog","extractMessage","errorMessage_1","ConsoleLogInMainService","client","MultiplexLogService","logServices","logService","critical","DelegatedLogService","NullLogService","getLogLevel","environmentService","Off","MarkerSeverity","MarkerTag","fromSeverity","severity","severity_1","Hint","toSeverity","IMarkerData","emptyString","makeKeyOptionalMessage","markerData","useMessage","makeKey","IMarkerService","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","onDidClose","onDidChangeVisibility","actions","IProgressService","ProgressLocation","emptyProgressRunner","Progress","LongRunningOperation","progressIndicator","currentOperationId","currentOperationDisposables","progressDelay","newOperationId","newOperationToken","currentProgressTimeout","currentProgressRunner","show","doStop","isCurrent","operationId","IEditorProgressService","Registry","Assert","Types","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultOverridesConfigurationNode","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","scope","allOf","defaultConfigurations","defaultConfiguration","propertySchema","$ref","overrideIdentifier","updateOverridePropertyPatternKey","propertyKeys","validateProperty","markdownDeprecationMessage","subNodes","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","getConfigurationValue","settingPath","component","accessSetting","overrideIdentifierFromKey","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","updated","value1","contents","value2","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","fromOverride","toOverride","toOverrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","parseErrors","filterByScope","filterOverriddenProperties","getScope","UserSettings","userSettingsResource","onDidFilesChange","readFile","parseContent","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","memory","workspaceConfiguration","folderConfigurations","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","RemoteAuthorityResolverErrorCode","IRemoteAuthorityResolverService","RemoteAuthorityResolverError","_message","_code","_detail","isHandled","NotAvailable","setPrototypeOf","TemporarilyNotAvailable","NoResolverFound","REMOTE_HOST_SCHEME","getRemoteAuthority","getRemoteName","isRecentFolder","isStoredWorkspaceFolder","isRawFileWorkspaceFolder","isRawUriWorkspaceFolder","isSingleFolderWorkspaceIdentifier","WORKSPACE_EXTENSION","WORKSPACE_FILTER","UNTITLED_WORKSPACE_NAME","IWorkspacesService","isRecentWorkspace","isRecentFile","reviveWorkspaceIdentifier","configPath","isWorkspaceIdentifier","workspaceIdentifier","toWorkspaceIdentifier","isUntitledWorkspace","untitledWorkspacesHome","isSingleFolderWorkspaceInitializationPayload","WORKSPACE_SUFFIX","hasWorkspaceFileExtension","SLASH","getStoredWorkspaceFolder","folderURI","forceAbsolute","folderName","targetConfigFolderURI","useSlashForPath","folderPath","labels_1","extpath_1","storedFolders","rewriteWorkspaceFileForNewLocation","rawWorkspaceContents","configPathURI","isFromUntitledWorkspace","targetConfigPathURI","storedWorkspace","doParseStoredWorkspace","sourceConfigFolder","targetConfigFolder","rewrittenFolders","slashForPath","absolute","jsonEdit","newContent","remoteHosts_1","restoreRecentlyOpened","workspaces","restoreGracefully","func","storedRecents","workspaces3","workspaceLabels","configURIPath","folderUri","workspaces2","isLegacySerializedWorkspace","isUriComponents","files2","fileLabels","fileUri","toStoreData","recents","hasLabel","recent","IWorkspaceContextService","WorkbenchState","IWorkspace","isIWorkspace","IWorkspaceFolder","isIWorkspaceFolder","toResource","Workspace","_id","_configuration","_foldersMap","_folders","updateFoldersMap","WorkspaceFolder","resources","toWorkspaceFolder","toWorkspaceFolders","configuredFolders","workspaceConfigFile","relativeTo","configuredFolder","workspaces_1","comparisonKey","loadCommonJSModule","module","activationTimesBuilder","nodeProxy","fetchUri","protocol","extensionLocation","response","fetch","status","node_browser_1","Client","logger","init","handshake","arrayBuffer","rfs","requirefs_1","fromTar","provide","modules","mod","codeLoadingStart","require","codeLoadingStop","Cache","_idPool","logDebugInfo","pid","enableDebugLogging","IExtHostInitDataService","ExtensionMemento","storage","_shared","_storage","_init","_storageListener","onDidChangeStorage","shared","whenReady","IExtHostRpcService","ExtHostRpcService","rpcProtocol","getProxy","assertRegistered","IExtensionStoragePaths","es5ClassCompat","Reflect","construct","getOwnPropertyDescriptor","Disposable_1","callOnDispose","_callOnDispose","__classPrivateFieldSet","inDisposables","__classPrivateFieldGet","__decorate","Position_1","_line","_character","positions","TypeError","isAfter","lineDeltaOrChange","characterDelta","lineDelta","lineOrChange","Range_1","startLineOrStart","startColumnOrEnd","endLine","_end","isPosition","positionOrRange","Max","Min","isSingleLine","startOrChange","Selection_1","anchorLineOrAnchor","anchorColumnOrActive","activeLine","activeColumn","active","_anchor","_active","isRange","isReversed","ResolvedAuthority","remoteAuthorityResolver_1","handled","EndOfLine","EnvironmentVariableMutatorType","TextEdit","TextEdit_1","_range","_newText","newEol","_newEol","WorkspaceEdit","_edits","_type","textEdits","textEdit","SnippetString","SnippetString_1","_tabstop","_escape","number","DiagnosticSeverity","DiagnosticTag","Location","Location_1","rangeOrPosition","DiagnosticRelatedInformation","Diagnostic","tags","relatedInformation","Hover","htmlContent_1","DocumentHighlight","Text","SymbolInformation","SymbolInformation_1","rangeOrContainer","locationOrUri","containerName","DocumentSymbol","DocumentSymbol_1","selectionRange","CodeActionTrigger","CodeAction","CodeActionKind","CodeActionKind_1","Empty","QuickFix","append","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","SelectionRange","CallHierarchyItem","CallHierarchyIncomingCall","fromRanges","CallHierarchyOutgoingCall","CodeLens","isResolved","CodeInset","ParameterInformation","documentation","SignatureInformation","SignatureHelp","activeSignature","activeParameter","signatures","CompletionItem","label2","sortText","filterText","preselect","CompletionList","isIncomplete","ViewColumn","StatusBarAlignment","TextEditorLineNumbersStyle","TextDocumentSaveReason","TextEditorRevealType","TextEditorSelectionChangeKind","DecorationRangeBehavior","Keyboard","Mouse","Command","DocumentLink","Color","red","green","blue","ColorInformation","ColorPresentation","ColorFormat","SourceControlInputBoxValidationType","TaskRevealKind","TaskPanelKind","TaskGroup","TaskGroup_1","Clean","Build","Rebuild","Test","computeTaskExecutionId","ProcessExecution","varg1","varg2","_args","_process","props","ShellExecution","arg0","_command","_commandLine","commandLine","TaskScope","ShellQuoting","CustomExecution","_callback","uuid_1","Task","Task_1","arg3","arg4","arg5","arg6","problemMatchers","__deprecated","_definition","_source","execution","Global","_problemMatchers","_hasDefinedMatchers","_isBackground","_presentationOptions","_runOptions","__id","_deprecated","_scope","computeDefinitionBasedOnExecution","_execution","ProcessType","computeId","ShellType","ExtensionCallbackType","EmptyType","hasDefinedMatchers","isBackground","_group","presentationOptions","runOptions","TreeItem","collapsibleState","TreeItemCollapsibleState","resourceUri","ThemeIcon","File","Folder","ThemeColor","RelativePattern","baseFolder","Breakpoint","hitCondition","logMessage","SourceBreakpoint","FunctionBreakpoint","functionName","DataBreakpoint","dataId","canPersist","DebugAdapterExecutable","DebugAdapterServer","DebugAdapterInlineImplementation","impl","implementation","EvaluatableExpression","FileSystemError","FileSystemError_1","uriOrMessage","files_1","terminator","captureStackTrace","messageOrUri","FoldingRange","SemanticTokensLegend","tokenTypes","tokenModifiers","SemanticTokensBuilder","legend","_prevLine","_prevChar","_dataIsSortedAndDeltaEncoded","_dataLen","_tokenTypeStrToInt","_tokenModifierStrToInt","_hasLegend","_pushEncoded","tokenType","nTokenType","nTokenModifiers","tokenModifier","tokenCount","prevLine","prevChar","pushLine","pushChar","aLine","bLine","srcOffset","dstOffset","resultId","SemanticTokens","_sortAndDeltaEncode","SemanticTokensEdit","SemanticTokensEdits","DebugConsoleMode","DebugConfigurationProviderTriggerKind","QuickInputButtons","Back","iconPath","ExtensionKind","Decoration","letter","bubble","priority","ColorTheme","ColorThemeKind","CellKind","CellOutputKind","NotebookCellRunState","TimelineItem","timestamp","_modeId2WordDefinition","getWordDefinitionFor","modeId","setWordDefinitionFor","ExtHostDocumentData","mirrorTextModel_1","proxy","languageId","isDirty","_proxy","_languageId","_isDirty","assert_1","_document","fileName","isUntitled","isClosed","_save","getText","_getTextInRange","extHostTypes_1","LF","CRLF","lineAt","lineOrPos","_lineAt","offsetAt","_offsetAt","positionAt","_positionAt","validateRange","ran","_validateRange","validatePosition","_validatePosition","getWordRangeAtPosition","_getWordRangeAtPosition","newLanguageId","$trySaveDocument","lineEnding","startLineIndex","endLineIndex","resultLines","lineOrPosition","ExtHostDocumentLine","_ensureLineStarts","getAccumulatedValue","getIndexOf","lineLength","hasChanged","maxCharacter","_position","wordAtText","isLastLine","_text","_isLastLine","rangeIncludingLineBreak","firstNonWhitespaceCharacterIndex","isEmptyOrWhitespace","ExtHostTheming","_extHostRpc","Dark","_onDidChangeActiveColorTheme","activeColorTheme","Light","HighContrast","onDidChangeActiveColorTheme","__param","extHostRpcService_1","IURITransformerService","URITransformerService","transformOutgoingURI","transformOutgoingScheme","EncodedSemanticTokensType","reverseEndianness","b0","b1","b2","b3","encodeSemanticTokensDto","semanticTokens","deltas","encodeSemanticTokensDtoSize","uint8Arr","buffer_1","toLittleEndianBuffer","decodeSemanticTokensDto","fromLittleEndianBuffer","deltaCount","asWebviewUri","initData","webviewResourceRoot","withoutScheme","ExtHostEditorInsets","_editors","_initData","_handlePool","_disposables","_insets","onDidChangeVisibleTextEditors","visibleEditor","getVisibleTextEditors","editor","inset","apiEditor","that","onDidReceiveMessage","onDidDispose","webview","_uuid","_html","webview_1","cspSource","webviewCspSource","$setOptions","$setHtml","$postMessage","$disposeEditorInset","$createEditorInset","ResourceContextKey","contextKeyService","_fileService","_modeService","_schemeKey","Scheme","bindTo","_filenameKey","Filename","_langIdKey","LangId","_resourceKey","Resource","_extensionKey","Extension","_hasResource","HasResource","_isFileSystemResource","IsFileSystemResource","onDidCreateMode","getModeIdByFilepathOrFirstLine","_uriEquals","contextkey_1","modeService_1","globFn","shouldUpdate","contextService","_onExpressionChange","onExpressionChange","mapRootToParsedExpression","mapRootToExpressionConfig","updateExcludes","registerListeners","onDidChangeConfiguration","onDidChangeWorkspaceFolders","fromEvent","rootExcludes","NO_ROOT","globalExcludes","expressionForRoot","resourcePathToMatch","workspace_1","AbstractDebugAdapter","pendingRequests","_onError","_onExit","onExit","eventCallback","messageCallback","requestCallback","seq","internalSend","request","request_seq","success","processQueue","messageA","messageB","needsTaskBoundaryBetween","typ","sendMessage","_formatPIIRegexp","getExtensionHostDebugSession","session","adapterProxy","parentSession","formatPII","excludePII","isSessionAttach","isDebuggerMainContribution","dbg","program","runtime","getExactExpressionStartAndEnd","lineContent","looseStart","looseEnd","matchingExpression","subExpression","subExpressionResult","stringToUri","sourceReference","uriToString","u","convertPaths","fixSourcePath","breakpoint","stackFrames","frame","breakpoints","bp","compareOrders","convertToDAPaths","toUri","fixPath","objects_1","toDA","convertToVSCPaths","getVisibleAndSorted","presentation","hidden","order","matchGlobUniversal","glob","getMimeTypeOrder","mimeType","userDisplayOrder","documentDisplayOrder","defaultOrder","NOTEBOOK_DISPLAY_ORDER","ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER","notebookDocumentMetadataDefaults","editable","runnable","cellEditable","cellRunnable","hasExecutionOrder","displayOrder","MimeTypeRendererResolver","NotebookCellsChangeType","CellEditType","CellUri","generate","notebook","equal","mimeTypeSupportedByCore","sortMimeTypes","mimeTypes","NOTEBOOK_EDITOR_CURSOR_BOUNDARY","ExtHostNotebookConcatDocument","extHostNotebooks","extHostDocuments","_notebook","_selector","_isClosed","onDidChangeDocument","cellIdx","_cells","findIndex","_cellLengths","_cellLines","onDidChangeNotebookDocument","cellLengths","cellLineCounts","cellKind","notebookCommon_1","Code","locationAt","startCell","endCell","locationOrOffset","translate","startIdx","endIdx","startPos","endPos","ITaskService","USER_TASKS_GROUP_KEY","TERMINAL_VIEW_ID","KEYBINDING_CONTEXT_TERMINAL_IS_OPEN","KEYBINDING_CONTEXT_TERMINAL_FOCUS","KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY","KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE","KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED","toNegated","KEYBINDING_CONTEXT_TERMINAL_A11Y_TREE_FOCUS","KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED","KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED","KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE","KEYBINDING_CONTEXT_TERMINAL_FIND_NOT_VISIBLE","KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_FIND_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_NOT_FOCUSED","IS_WORKSPACE_SHELL_ALLOWED_STORAGE_KEY","NEVER_MEASURE_RENDER_TIME_STORAGE_KEY","EXT_HOST_CREATION_DELAY","ITerminalNativeService","TerminalCursorStyle","BLOCK","LINE","UNDERLINE","TERMINAL_CONFIG_SECTION","TERMINAL_ACTION_CATEGORY","DEFAULT_LETTER_SPACING","MINIMUM_LETTER_SPACING","DEFAULT_LINE_HEIGHT","SHELL_PATH_INVALID_EXIT_CODE","SHELL_PATH_DIRECTORY_EXIT_CODE","SHELL_CWD_INVALID_EXIT_CODE","LEGACY_CONSOLE_MODE_EXIT_CODE","ProcessState","LinuxDistro","TitleEventSource","TERMINAL_COMMAND_ID","DEFAULT_COMMANDS_TO_SKIP_SHELL","TerminalDataBufferer","_terminalBufferMap","throttleBy","timeoutId","_flushBuffer","AbstractVariableResolverService","_context","_envVariables","_contributedVariables","ev","recursiveResolve","commandValueMapping","resolvedVariables","windows","osx","linux","resolveAnyBase","newConfig","variables","resolution","resolveString","replaced","VARIABLE_REGEXP","resolvedValue","evaluateSingleVariable","argument","getFilePath","filePath","getFolderUri","withArg","getWorkspaceFolderCount","resolveFromMap","getLineNumber","selectedText","getSelectedText","ep","getExecPath","VARIABLE_REGEXP_SINGLE","IEditorService","ACTIVE_GROUP","SIDE_GROUP","ThemableDecorationAttachmentRenderOptions","ThemableDecorationRenderOptions","GlobPattern","isDecorationOptionsArr","something","isDecorationOptions","pathOrURIToURI","Unnecessary","Deprecated","markers_1","Information","One","Beside","editorService_1","_uriMassage","part","marshalling_1","fromMany","markup","htmlContent","resUris","uris","collectUri","fromStrict","fromRangeOrRangeWithMessage","ranges","hoverMessage","renderOptions","contentText","contentIconPath","border","borderColor","textDecoration","backgroundColor","margin","outline","outlineColor","outlineStyle","outlineWidth","borderRadius","borderSpacing","borderStyle","borderWidth","cursor","opacity","gutterIconPath","gutterIconSize","overviewRulerColor","OpenOpen","ClosedClosed","OpenClosed","ClosedOpen","DecorationRenderOptions","isWholeLine","rangeBehavior","overviewRulerLane","light","dark","documents","allEntries","doc","getDocument","modelVersionId","renameFile","_fromMapping","Module","Namespace","Package","Class","Method","Property","Field","Constructor","Enum","Interface","Function","Variable","Constant","Key","Null","EnumMember","Struct","Operator","TypeParameter","WorkspaceSymbol","_sessionId","_itemId","DefinitionLink","definitionLink","targetUri","targetRange","documentHighlight","occurrence","TriggerCharacter","TriggerForIncompleteCompletions","Invoke","CompletionContext","triggerKind","triggerCharacter","Unit","Value","Keyword","Snippet","Reference","Issue","User","suggestion","converter","commitCharacters","editorRange","inserting","replacing","keepWhitespace","insertTextRules","additionalTextEdits","fromInternal","help","tooltip","colorPresentation","cp","reason","AfterDelay","Manual","FocusOut","style","Relative","On","loc","viewId","SourceControl","Window","Notification","modes","TextEditorOptions","preserveFocus","LanguageSelector","extLevel","log_1","mainLevel","adjustHandler","commands_1","OpenFolderAPICommand","forceNewWindow","forceReuseWindow","noRecentEntry","uriToOpen","workspaceUri","ID","execute","NewWindowAPICommand","commandOptions","reuseWindow","DiffAPICommand","typeConverters","viewColumn","OpenAPICommand","columnOrOptions","OpenWithAPICommand","viewType","removeRecentlyOpened","RemoveFromRecentlyOpenedAPICommand","OpenIssueReporter","commandArgs","extensionId","recentEntry","workspacesService","getWorkspaceIdentifier","addRecentlyOpened","getRecentlyOpened","SetEditorLayoutAPICommand","layout","required","orientation","groups","environment_1","isExtensionDevelopment","extensionTestsLocationURI","ApiCommandArgument","Uri","ApiCommandResult","ApiCommand","internalId","apiArgs","internalArgs","internalResult","_getCommandHandlerDesc","returns","newCommands","tryMapWith","MergedInfo","symbol","mapLocationOrLocationLink","ExtHostApiCommands","registerCommands","_executeDocumentRenameProvider","_executeSignatureHelpProvider","_executeCompletionItemProvider","_executeCodeActionProvider","_executeCodeLensProvider","_executeDocumentLinkProvider","_executeDocumentColorProvider","_executeColorPresentationProvider","apiCommands_1","newName","rejectReason","maxItemsToResolve","suggestions","incomplete","ci","rangeOrSelection","isSelection","codeAction","_isSynthetic","isPreferred","itemResolveCount","ExtHostDocumentSaveParticipant","_logService","_documents","_mainThreadEditors","_thresholds","_callbacks","_badListeners","WeakMap","didTimeoutHandle","_deliverEventAsyncAndBlameBadListeners","extHostTypeConverters_1","stubEvent","_deliverEventAsync","promises","t1","dto","$tryApplyWorkspaceEdit","ExtHostProgress","_handles","_mapHandleToCancellationSource","cancellable","displayName","$startProgress","_withProgress","progressEnd","$progressEnd","ProgressCallback","progress_1","throttledReport","$progressReport","decorators_1","currentValue","increment","mergeProgress","TextEditorDecorationType","_Keys","nextId","$registerTextEditorDecorationType","TypeConverters","$removeTextEditorDecorationType","idGenerator_1","TextEditorEdit","_collectedEdits","_setEndOfLine","_finalized","_documentVersionId","_undoStopBefore","undoStopBefore","_undoStopAfter","undoStopAfter","documentVersionId","setEndOfLine","_throwIfFinalized","_pushEdit","validRange","endOfLine","ExtHostTextEditorOptions","_accept","_tabSize","_indentSize","_insertSpaces","_cursorStyle","_lineNumbers","_validateTabSize","_warnOnError","$trySetOptions","_validateIndentSize","_validateInsertSpaces","newOptions","bulkConfigurationUpdate","hasUpdate","ExtHostTextEditor","selections","visibleRanges","_documentData","_selections","_visibleRanges","_viewColumn","_hasDecorationsForKey","$tryShowEditor","$tryHideEditor","_trySetSelection","decorationType","willBeEmpty","_runOnProxy","$trySetDecorations","_ranges","$trySetDecorationsFast","revealType","$tryRevealRange","$trySetSelections","_applyEdit","editBuilder","editData","finalize","editRanges","$tryApplyEdits","snippet","where","posOrRange","$tryInsertSnippet","DeltaExtensionsResult","removedDueToLooping","ExtensionDescriptionRegistry","extensionDescriptions","_extensionDescriptions","_initialize","extensionCmp","_extensionsMap","_extensionsArr","_activationMap","extensionDescription","activationEvents","activationEvent","extensionIds","toKeep","toAdd","looping","_findLoopingExtensions","toRemoveSet","G","_arcs","_nodesSet","_nodesArr","addNode","good","getArcs","descs","_depId","depId","addArc","getNodes","madeProgress","nodes","hasOnlyGoodArcs","SortBucket","aSortBucket","isBuiltin","isUnderDevelopment","bSortBucket","aLastSegment","bLastSegment","MessageType","createMessageOfType","isMessageOfType","nullExtensionDescription","enableProposedApi","engines","IExtensionService","MissingDependencyError","ActivationTimes","codeLoadingTime","activateCallTime","activateResolvedTime","activationReason","throwProposedApiError","ExtensionPointContribution","ExtensionHostLogFileName","checkProposedApiEnabled","toExtension","extensionManagementUtil_1","NullExtensionService","onDidRegisterExtensions","onDidChangeExtensionsStatus","onDidChangeExtensions","onWillActivateByEvent","onDidChangeResponsiveChange","_activationEvent","_extPoint","_tryEnableInspector","_env","_severity","_msg","_extensionId","_reason","_codeLoadingTime","_activateCallTime","_activateResolvedTime","_activationReason","_err","NO_OP_VOID_PROMISE","ExtensionActivationTimes","startup","NONE","ExtensionActivationTimesBuilder","_startup","_codeLoadingStart","_codeLoadingStop","_activateCallStart","_activateCallStop","_activateResolveStart","_activateResolveStop","_delta","ActivatedExtension","activationFailed","activationFailedError","activationTimes","subscriptions","EmptyExtension","activate","deactivate","HostExtension","FailedExtension","activationError","ExtensionsActivator","registry","resolvedExtensions","hostExtensions","_resolvedExtensionsSet","_hostExtensionsMap","_host","_activatingExtensions","_activatedExtensions","_alreadyActivatedEvents","extensionKey","activatedExtension","activateExtensions","getExtensionDescriptionsForActivationEvent","_activateExtensions","getExtensionDescription","currentActivation","greenExtensions","redExtensions","currentExtension","onExtensionActivationError","extensions_2","depIds","currentExtensionGetsGreenLight","lenJ","dep","depDesc","greenMap","_handleActivateRequest","redExtensionKey","_activateExtension","currentlyActivatingExtension","newlyActivatingExtension","actualActivateExtension","toTreeItemLabel","highlights","ExtHostTreeViews","isTreeViewItemHandleArg","$treeViewId","$treeItemHandle","treeViews","registerArgumentProcessor","processArgument","convertArgument","treeDataProvider","treeView","createTreeView","createExtHostTreeView","onDidCollapseElement","onDidExpandElement","selectedElements","onDidChangeSelection","reveal","treeViewId","treeItemHandle","getChildren","expanded","setExpanded","treeItemHandles","setSelection","isVisible","setVisible","ExtHostTreeView","getExtensionElement","elements","_visible","_selectedHandles","_onDidExpandElement","_onDidCollapseElement","_onDidChangeSelection","_onDidChangeVisibility","_onDidChangeData","refreshPromise","refreshQueue","views","refreshingPromise","promiseCallback","dataProvider","$registerTreeViewDataProvider","showCollapseAll","canSelectMany","onDidChangeTreeData","_promiseCallback","$setMessage","parentHandle","parentElement","childrenNodes","getChildrenNodes","fetchChildrenNodes","select","focus","expand","getParent","resolveUnknownParentChain","parentChain","resolveTreeNode","treeNode","$reveal","$setTitle","resolveParent","parentNode","getTreeItem","extTreeItem","createHandle","cachedElement","parentNodeOrHandle","clearChildren","createAndRegisterTreeNode","$refresh","handlesToRefresh","getHandlesToRefresh","refreshHandles","elementsToUpdate","elementNode","currentNode","handlesToUpdate","itemHandles","itemsToRefresh","refreshNode","extElement","createTreeNode","updateNodeCache","addNodeToCache","addNodeToParentCache","extensionTreeItem","getLightIconPath","toInternal","contextValue","iconDark","getDarkIconPath","themeIcon","returnFirst","ID_HANDLE_PREFIX","treeItemLabel","LABEL_HANDLE_PREFIX","elementId","existingHandle","getIconPath","childNode","childElement","LazyPromise","_actualOk","_actualErr","_hasValue","_hasErr","_ensureActual","ProxyIdentifier","isMain","sid","nid","createMainContextProxyIdentifier","createExtHostContextProxyIdentifier","getStringIdentifierForProxy","UIKind","WebviewEditorCapabilities","ObjectIdentifier","of","IdObject","ISuggestDataDtoField","ISuggestResultDtoField","reviveWorkspaceEditDto","MainContext","MainThreadAuthentication","proxyIdentifier_1","MainThreadClipboard","MainThreadCommands","MainThreadComments","MainThreadConfiguration","MainThreadConsole","MainThreadDebugService","MainThreadDecorations","MainThreadDiagnostics","MainThreadDialogs","MainThreadDocuments","MainThreadDocumentContentProviders","MainThreadTextEditors","MainThreadEditorInsets","MainThreadErrors","MainThreadTreeViews","MainThreadDownloadService","MainThreadKeytar","MainThreadLanguageFeatures","MainThreadLanguages","MainThreadLog","MainThreadMessageService","MainThreadOutputService","MainThreadProgress","MainThreadQuickOpen","MainThreadStatusBar","MainThreadStorage","MainThreadTelemetry","MainThreadTerminalService","MainThreadWebviews","MainThreadUrls","MainThreadWorkspace","MainThreadFileSystem","MainThreadExtensionService","MainThreadSCM","MainThreadSearch","MainThreadTask","MainThreadWindow","MainThreadLabelService","MainThreadNotebook","MainThreadNodeProxy","MainThreadTheming","MainThreadTunnelService","MainThreadTimeline","ExtHostContext","ExtHostCommands","ExtHostConfiguration","ExtHostDiagnostics","ExtHostDebugService","ExtHostDecorations","ExtHostDocumentsAndEditors","ExtHostDocuments","ExtHostDocumentContentProviders","ExtHostEditors","ExtHostFileSystem","ExtHostFileSystemEventService","ExtHostLanguageFeatures","ExtHostQuickOpen","ExtHostExtensionService","ExtHostLogService","ExtHostTerminalService","ExtHostSCM","ExtHostSearch","ExtHostTask","ExtHostWorkspace","ExtHostWindow","ExtHostWebviews","ExtHostComments","ExtHostStorage","ExtHostUrls","ExtHostOutputService","ExtHosLabelService","ExtHostNotebook","ExtHostNodeProxy","ExtHostTunnelService","ExtHostAuthentication","ExtHostTimeline","rpc","_onMessage","onMessage","_onClose","onClose","_onDown","onDown","_onUp","onUp","extHost_protocol_1","$send","IExtHostNodeProxy","IExtHostApiDeprecationService","ExtHostApiDeprecationService","_extHostLogService","_reportedUsages","_telemetryShape","extHostProtocol","apiId","migrationSuggestion","getUsageKey","$publicLog2","NullApiDeprecationService","_apiId","_extension","_warningMessage","mainContext","_authenticationProviders","_onDidChangeAuthenticationProviders","onDidChangeAuthenticationProviders","_onDidChangeSessions","onDidChangeSessions","providerIds","ids","requestingExtension","providerId","orderedScopes","getSessions","getAccessToken","$getSessionsPrompt","extensionName","$loginPrompt","login","$setTrustedExtension","sessionId","logout","$onDidChangeSessions","$registerAuthenticationProvider","$unregisterAuthenticationProvider","authProvider","ExtHostClipboard","$readText","$writeText","extHostRpc","_converter","CommandsConverter","_argumentProcessors","extHostTypeConverter","isIPosition","processor","$registerCommand","extHostTypes","$unregisterCommand","_doExecuteCommand","_executeContributedCommand","toArgs","$executeCommand","filterUnderscoreCommands","$getCommands","_cache","_cachIdPool","_delegatingCommandId","_executeConvertedCommand","$ident","actualCmd","IExtHostCommands","_commentControllers","_commentControllersByExtension","commentController","commentControlHandle","commentThread","getCommentThread","commentThreadHandle","thread","commentUniqueId","getCommentByUniqueId","handlePool","ExtHostCommentController","commentControllers","commentControllerHandle","uriComponents","$createCommentThreadTemplate","threadHandle","$updateCommentThreadTemplate","$deleteCommentThread","commentingRangeProvider","provideCommentingRanges","reaction","reactionHandler","vscodeComment","uniqueIdInThread","authorHasReacted","hasReacted","convertFromReaction","ExtHostCommentThread","_commentController","_comments","commentHandle","modifications","_onDidUpdateCommentThread","onDidUpdateCommentThread","_commentsMap","_acceptInputDisposables","$createCommentThread","_localDisposables","_isDiposed","eventuallyUpdateCommentThread","threadId","_contextValue","newComments","_collapseState","newState","modified","formattedModifications","cmt","commentsMap","author","mode","userName","userIconPath","commentReactions","convertToReaction","convertToModeComment","collapseState","Expanded","Collapsed","convertToCollapsibleState","$updateCommentThread","uniqueId","_threads","$registerCommentController","_reactionHandler","$updateCommentControllerFeatures","$unregisterCommentController","_provider","$registerDecorationProvider","onDidChangeDecorations","$onDidChange","$unregisterDecorationProvider","requests","provideDecoration","IExtHostDecorations","DiagnosticCollection","_owner","_maxDiagnosticsPerFile","_onDidChangeDiagnostics","$clear","_checkDisposed","diagnostics","toSync","lastUri","_compareIndexedTuplesByUri","currentDiagnostics","marker","orderLoop","diagnostic","$changeMany","_collections","onDidChangeDiagnostics","_debouncer","_mapper","loggingProxy","owner","_getDiagnostics","collection","_mirrorCollection","markers","ExtHostDialogs","$showOpenDialog","filepaths","$showSaveDialog","filepath","ExtHostDocumentContentProvider","_documentsAndEditors","_documentContentProviders","$registerTextContentProvider","$provideTextDocumentContent","equalLines","$onVirtualDocumentChange","$unregisterTextContentProvider","provideTextDocumentContent","documentsAndEditors","_onDidAddDocument","_onDidRemoveDocument","_onDidChangeDocument","_onDidSaveDocument","onDidAddDocument","onDidRemoveDocument","onDidSaveDocument","_documentLoader","onDidRemoveDocuments","onDidAddDocuments","allDocuments","getDocumentData","cached","$tryOpenDocument","$tryCreateDocument","oldModeId","newModeId","_acceptLanguageId","$acceptDirtyStateChanged","_acceptIsDirty","contentChanges","onEvents","rangeOffset","rangeLength","extHostDocumentData_1","_activeEditorId","_onDidAddDocuments","_onDidRemoveDocuments","_onDidChangeVisibleTextEditors","_onDidChangeActiveTextEditor","onDidChangeActiveTextEditor","removedDocuments","addedDocuments","removedEditors","assert","documentData","EOL","addedEditors","documentUri","extHostTextEditor_1","editorPosition","newActiveEditor","allEditors","activeEditor","IExtHostDocumentsAndEditors","FsLinkProvider","_schemes","schemes","prevScheme","prevState","lastState","linkComputer_1","_initStateMachine","docLink","typeConverter","ConsumerFileSystem","$stat","_handleError","$readdir","$mkdir","$readFile","$writeFile","$delete","recursive","useTrash","$rename","$copy","_extHostLanguageFeatures","_linkProvider","_fsProvider","_usedSchemes","_watches","fileSystem","_linkProviderRegistration","registerDocumentLinkProvider","_registerLinkProviderIfNotYetRegistered","isCaseSensitive","isReadonly","copy","$registerFileSystemProvider","onDidChangeFile","mapped","newType","Changed","Created","Deleted","$onFileSystemChange","$unregisterProvider","ctime","_getFsProvider","_asIStat","readDirectory","writeFile","rename","createDirectory","fd","FileSystemWatcher","dispatcher","globPattern","ignoreCreateEvents","ignoreChangeEvents","ignoreDeleteEvents","_onDidCreate","_onDidDelete","_config","created","deleted","_disposable","onDidCreate","onDidDelete","_extHostDocumentsAndEditors","_mainThreadTextEditors","_onFileSystemEvent","_onDidRenameFile","_onDidCreateFile","_onDidDeleteFile","_onWillRenameFile","_onWillCreateFile","_onWillDeleteFile","onDidRenameFile","onDidCreateFile","onDidDeleteFile","_createWillExecuteEvent","wrappedListener","_fireWillEvent","fireAsync","allEdits","ExtHostLabelService","formatter","$registerResourceLabelFormatter","$unregisterResourceLabelFormatter","DocumentSymbolAdapter","provideDocumentSymbols","typeConvert","_asDocumentSymbolTree","infos","compareTo","parentStack","CodeLensAdapter","cache_1","provideCodeLenses","lenses","cacheId","lens","resolveCodeLens","newLens","_badCmd","cachedId","convertToLocationLinks","DefinitionAdapter","provideDefinition","DeclarationAdapter","provideDeclaration","ImplementationAdapter","provideImplementation","TypeDefinitionAdapter","provideTypeDefinition","HoverAdapter","provideHover","EvaluatableExpressionAdapter","provideEvaluatableExpression","DocumentHighlightAdapter","provideDocumentHighlights","OnTypeRenameAdapter","provideOnTypeRenameRanges","ReferenceAdapter","provideReferences","CodeActionAdapter","_diagnostics","_apiDeprecation","selection_1","isISelection","allDiagnostics","getDiagnostics","intersection","_maxCodeActionsPerFile","codeActionContext","only","provideCodeActions","commandsOrActions","_isCommand","disabled","DocumentFormattingAdapter","provideDocumentFormattingEdits","RangeFormattingAdapter","provideDocumentRangeFormattingEdits","OnTypeFormattingAdapter","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","NavigateTypeAdapter","_symbolCache","_resultCache","symbols","provideWorkspaceSymbols","resolveWorkspaceSymbol","RenameAdapter","prepareRename","provideRenameEdits","_asMessage","rangeOrLocation","placeholder","SemanticTokensPreviousResult","DocumentSemanticTokensAdapter","_nextResultId","_previousResults","previousResultId","previousResult","provideDocumentSemanticTokensEdits","provideDocumentSemanticTokens","_fixProvidedSemanticTokens","_send","_convertToEdits","semanticColoringResultId","_isSemanticTokens","_isCorrectSemanticTokens","_isSemanticTokensEdits","_isCorrectSemanticTokensEdits","newResult","oldData","oldLength","newData","newLength","maxCommonPrefixLength","maxCommonSuffixLength","semanticTokensDto_1","DocumentRangeSemanticTokensAdapter","provideDocumentRangeSemanticTokens","SuggestAdapter","_telemetry","_didWarnMust","_didWarnShould","resolveCompletionItem","replaceRange","insertRange","itemsOrList","provideCompletionItems","supportsResolving","completions","_convertCompletionItem","_mustNotChange","_mustNotChangeHash","_mayNotChange","_mayNotChangeHash","resolvedItem","_mustNotChangeIndex","_mustNotChangeDiff","_mayNotChangeIndex","_mayNotChangeDiff","defaultInsertRange","defaultReplaceRange","g","thisArr","SignatureHelpAdapter","vscodeContext","reviveContext","provideSignatureHelp","activeSignatureHelp","revivedSignatureHelp","saved","LinkProviderAdapter","provideDocumentLinks","resolveDocumentLink","ColorProviderAdapter","provideDocumentColors","colors","provideColorPresentations","FoldingProviderAdapter","provideFoldingRanges","SelectionRangeAdapter","provideSelectionRanges","allProviderRanges","allResults","oneResult","CallHierarchyAdapter","prepareCallHierarchy","_cacheAndConvertItem","itemId","_itemFromCache","calls","provideCallHierarchyIncomingCalls","provideCallHierarchyOutgoingCalls","AdapterData","uriTransformer","apiDeprecationService","_adapter","_uriTransformer","_doTransformDocumentSelector","$serialized","_transformScheme","$unregister","fallbackValue","_nextHandle","_addNewAdapter","_extLabel","$registerDocumentSymbolProvider","_transformDocumentSelector","_createDisposable","_withAdapter","eventHandle","onDidChangeCodeLenses","$registerCodeLensSupport","$emitCodeLensEvent","releaseCodeLenses","$registerDefinitionSupport","$registerDeclarationSupport","$registerImplementationSupport","$registerTypeDefinitionSupport","$registerHoverProvider","$registerEvaluatableExpressionProvider","$registerDocumentHighlightProvider","stopPattern","serializedStopPattern","_serializeRegExp","$registerOnTypeRenameProvider","$registerReferenceSupport","store","$registerQuickFixSupport","providedKinds","providedCodeActionKinds","releaseCodeActions","$registerDocumentFormattingSupport","$registerRangeFormattingSupport","triggerCharacters","$registerOnTypeFormattingSupport","$registerNavigateTypeSupport","releaseWorkspaceSymbols","$registerRenameSupport","resolveRenameLocation","onDidChangeSemanticTokens","$registerDocumentSemanticTokensProvider","$emitDocumentSemanticTokensEvent","releaseDocumentSemanticColoring","$registerDocumentRangeSemanticTokensProvider","$registerSuggestSupport","releaseCompletionItems","metadataOrTriggerChars","retriggerCharacters","$registerSignatureHelpProvider","releaseSignatureHelp","$registerDocumentLinkProvider","provideLinks","resolveLink","releaseLinks","$registerDocumentColorProvider","provideColors","colorInfo","$registerFoldingRangeProvider","$registerSelectionRangeProvider","$registerCallHierarchyProvider","prepareSession","provideCallsTo","provideCallsFrom","releaseSession","indentationRule","decreaseIndentPattern","increaseIndentPattern","indentNextLinePattern","unIndentedLinePattern","onEnterRule","beforeText","afterText","oneLineAboveText","action","onEnterRules","_serializeOnEnterRule","wordPattern","__electricCharacterSupport","__characterPairSupport","serializedConfiguration","brackets","indentationRules","_serializeIndentationRule","_serializeOnEnterRules","$setLanguageConfiguration","wordDefinitions","regexSource","regexFlags","ExtHostLanguages","$getLanguages","$changeLanguage","ExtHostMessageService","optionsOrFirstItem","modal","isCloseAffordance","$showMessage","getObservable","_receiver","ExtHostCell","outputs","_metadata","_onDidChangeOutputs","onDidChangeOutputs","_outputMapping","_outputs","observableMetadata","_metadataChangeListener","updateMetadata","newOutputs","diffs","newMetadata","$updateNotebookCellMetadata","ExtHostNotebookDocument","renderingHandler","_cellDisposableMapping","_languages","_displayOrder","newLanguages","$updateNotebookLanguages","newOrder","$updateNotebookMetadata","ModelChange","$spliceNotebookCells","Move","$moveCell","newIdx","CellClearOutput","$clearCellOutputs","CellsClearOutput","$clearAllCellOutputs","ChangeLanguage","$changeCellLanguage","newCells","extCell","attachTextDocument","eventuallyUpdateCellOutputs","renderers","outputDtos","transformedOutputs","outputKind","Rich","transformMimeTypes","orderedMimeTypes","pickedMimeTypeIndex","rendererId","$spliceNotebookCellOutputs","coreDisplayOrder","outputDisplayOrder","sorted","userOrder","orderMimeTypes","handlers","findBestMatchedRenderer","renderedOutput","render","cellHandle","textDocument","detachTextDocument","NotebookEditorCellEdit","_renderers","editType","Insert","Delete","ExtHostNotebookEditor","_onDidReceiveMessage","attachCellTextDocument","detachCellTextDocument","compressedEdits","compressedEditsIndex","ExtHostNotebookOutputRenderer","subTypes","ExtHostNotebookController","_notebookProviders","_notebookContentProviders","_notebookOutputRenderers","_onDidChangeNotebookDocument","_onDidOpenNotebookDocument","onDidOpenNotebookDocument","documentHandle","notebookEditor","notebookHandle","getCell","_outputDisplayOrder","activeNotebookDocument","_activeNotebookDocument","activeNotebookEditor","_activeNotebookEditor","extHostRenderer","$registerNotebookRenderer","preloads","$unregisterNotebookRenderer","$registerNotebookProvider","$unregisterNotebookProvider","revivedUri","$createNotebookDocument","notebookFromNotebookContentProvider","_resolveNotebookFromContentProvider","resolveNotebook","executeCell","accpetModelChanged","firstCell","AbstractExtHostOutputChannel","_onDidAppend","onDidAppend","$register","_offset","$update","till","columnOrPreserveFocus","$close","$dispose","ExtHostPushOutputChannel","$append","ExtHostLogFileOutputChannel","LazyOutputChannel","_channel","channel","appendLine","hide","channelId","IExtHostOutputService","_sessions","_instances","_workspace","itemsOrItemsPromise","_onDidSelectItem","itemsPromise","quickPickWidget","$show","placeHolder","matchOnDescription","matchOnDetail","ignoreFocusLost","ignoreFocusOut","canPickMany","widgetClosedMarker","widgetClosedPromise","pickItems","picked","alwaysShow","onDidSelectItem","$setItems","h","$setError","_validateInput","validateInput","$input","selectedFolder","workspaceFolders","getWorkspaceFolders2","ExtHostQuickPick","ExtHostInputBox","_fireDidChangeValue","_fireDidAccept","handles","_fireDidChangeActive","_fireDidChangeSelection","_fireDidTriggerButton","_fireDidHide","ExtHostQuickInput","_onDidDispose","_nextId","_expectingHide","_enabled","_busy","_ignoreFocusOut","_buttons","_handlesToButtons","_onDidAcceptEmitter","_onDidChangeValueEmitter","_onDidTriggerButtonEmitter","_onDidHideEmitter","_pendingUpdate","onDidChangeValue","onDidAccept","onDidTriggerButton","onDidHide","update","step","_steps","totalSteps","_totalSteps","busy","_placeholder","buttons","button","getIconUris","_updateTimeout","dispatchUpdate","$createOrUpdate","getIconUri","getDarkIconUri","getLightIconUri","onDispose","_items","_handlesToItems","_itemsToHandles","_canSelectMany","_matchOnDescription","_matchOnDetail","_sortByLabel","_activeItems","_onDidChangeActiveEmitter","_selectedItems","_onDidChangeSelectionEmitter","onDidChangeActive","sortByLabel","activeItems","selectedItems","_password","password","prompt","_prompt","validationMessage","_validationMessage","getIconResource","decorations","compareResourceThemableDecorations","aPath","bPath","comparers_1","compareResourceStates","strikeThrough","faded","compareResourceStatesDecorations","commandEquals","compareArgs","ExtHostSCMInputBox","_sourceControlHandle","$setInputBoxValue","updateValue","$setInputBoxPlaceholder","$setValidationProviderIsEnabled","$setInputBoxVisibility","ExtHostSourceControlResourceGroup","_resourceHandlePool","_resourceStates","_resourceStatesMap","_resourceStatesCommandsMap","_onDidUpdateResourceStates","onDidUpdateResourceStates","_handlesSnapshot","_resourceSnapshot","_hideWhenEmpty","$registerGroup","$updateGroupLabel","hideWhenEmpty","$updateGroup","resourceStates","sourceUri","iconUri","lightIconUri","darkIconUri","icons","rawResource","rawResourceSplices","reverseSplices","handlesToDelete","$unregisterGroup","ExtHostSourceControl","_rootUri","_groups","_count","_quickDiffProvider","_commitTemplate","_acceptInputCommand","_statusBarDisposables","_statusBarCommands","_selected","updatedResourceGroups","_inputBox","$registerSourceControl","rootUri","inputBox","$updateSourceControl","quickDiffProvider","hasQuickDiffProvider","commitTemplate","acceptInputCommand","statusBarCommands","selected","updateListener","eventuallyUpdateResourceStates","_takeResourceStateSnapshot","$spliceResourceStates","$unregisterSourceControl","_sourceControls","_sourceControlsByExtension","_onDidChangeActiveProvider","_selectedSourceControlHandles","sourceControlHandle","getResourceGroup","groupHandle","getResourceState","onDidChangeActiveProvider","sourceControls","provideOriginalResource","$onInputBoxValueChange","$executeResourceCommand","cursorPosition","selectedSourceControlHandles","setSelectionState","ExtHostStatusBarEntry","alignment","Left","_internalCommandRegistration","ID_GEN","_statusId","_statusName","_alignment","_priority","_tooltip","_color","fromApi","_timeoutHandle","$setEntry","StatusBarMessage","_messages","_item","createStatusBarEntry","MIN_VALUE","_update","ExtHostStatusBar","_statusMessage","timeoutOrThenable","setMessage","_onDidChangeStorage","$getValue","$setValue","IExtHostStorage","IExtHostTerminalService","BaseExtHostTerminal","_queuedRequests","_idPromise","_idPromiseComplete","_queueApiRequest","ApiRequest","ExtHostTerminal","_creationOptions","isOpen","_pidPromise","_pidPromiseComplete","shellPath","shellArgs","waitOnExit","strictEnv","hideFromUser","$createTerminal","_runQueuedRequests","isExtensionTerminal","exitStatus","_exitStatus","_cols","_rows","columns","processId","creationOptions","addNewLine","$sendText","$hide","ExtHostPseudoterminal","_pty","_onProcessData","onProcessData","_onProcessExit","onProcessExit","_onProcessReady","_onProcessTitleChanged","onProcessTitleChanged","_onProcessOverrideDimensions","onProcessReady","onProcessOverrideDimensions","handleInput","setDimensions","initialDimensions","onDidWrite","onDidOverrideDimensions","BaseExtHostTerminalService","_terminals","_terminalProcesses","_terminalProcessDisposables","_extensionTerminalAwaitingStart","_getTerminalPromises","_linkHandlers","_onDidCloseTerminal","_onDidOpenTerminal","_onDidChangeActiveTerminal","_onDidChangeTerminalDimensions","_bufferer","terminalDataBuffering_1","$sendProcessData","_onDidWriteTerminalData","$startSendingDataEvents","$stopSendingDataEvents","activeTerminal","_activeTerminal","onDidCloseTerminal","onDidOpenTerminal","onDidChangeActiveTerminal","onDidChangeTerminalDimensions","onDidWriteTerminalData","pty","createExtensionTerminal","_setupExtHostProcessListeners","_getTerminalByIdEventually","resize","extHostTerminal","_getTerminalObjectById","exitCode","_getTerminalObjectIndexById","setExitCode","shellLaunchConfigDto","executable","_setProcessId","openPromise","startSendingEvents","$sendProcessReady","$sendProcessTitle","startBuffering","$sendOverrideDimensions","awaitingStart","immediate","shutdown","getInitialCwd","initialCwd","$sendProcessInitialCwd","getCwd","$sendProcessCwd","$startHandlingLinks","$stopHandlingLinks","_getTerminalById","it","handleLink","stopBuffering","processDiposable","$sendProcessExit","_createGetTerminalPromise","terminal_1","EnvironmentVariableCollection","_persistent","_onDidChangeCollection","persistent","onDidChangeCollection","_setIfDiffers","Replace","Append","Prepend","mutator","WorkerExtHostTerminalService","useAutomationShell","configProvider","activeWorkspaceRootUriComponents","isWorkspaceShellAllowed","isAllowed","collections","extHostDocumentsAndEditors","_onDidChangeTextEditorSelection","_onDidChangeTextEditorOptions","_onDidChangeTextEditorVisibleRanges","_onDidChangeTextEditorViewColumn","onDidChangeTextEditorSelection","onDidChangeTextEditorOptions","onDidChangeTextEditorVisibleRanges","onDidChangeTextEditorViewColumn","$tryShowTextDocument","getEditor","textEditor","_acceptOptions","_acceptSelections","_acceptVisibleRanges","_acceptViewColumn","$getDiffInformation","IExtHostTimeline","getUriKey","_providers","_itemsBySourceAndUriMap","internalOptions","provideTimeline","commandConverter","timelineDisposables","convertTimelineItem","$emitTimelineChangeEvent","itemsBySourceAndUriMap","registerTimelineProviderCore","resetCache","convertItem","sourceMap","cacheResults","itemsByUri","uriKey","__rest","$registerTimelineProvider","$unregisterTimelineProvider","TunnelDto","fromApiTunnel","tunnel","remoteAddress","localAddress","fromServiceTunnel","tunnelRemoteHost","tunnelRemotePort","IExtHostTunnelService","onDidChangeTunnels","forward","candidates","$tunnelServiceReady","tunnelOptions","HandlePool","$registerUriHandler","$unregisterUriHandler","handleUri","$createAppUri","WebviewEditorType","ExtHostWebview","deprecationService","_handle_1","_proxy_1","_deprecationService_1","_hasCalledAsWebviewUri","_onMessageEmitter","assertNotDisposed","convertWebviewOptions","ExtHostWebviewEditor","editorOptions","_handle_2","_proxy_2","_viewType","_webview","_options_1","_iconPath","_isDisposed_1","_onDidChangeViewState","onDidChangeViewState","$disposeWebview","$setIconPath","CustomDocumentStoreEntry","_storagePath","_backupCounter","editId","getEdit","undo","disposeBackup","redo","editIds","hash_1","hashPath","backup","_backup","CustomDocumentStore","storagePath","EditorProviderStore","_deprecationService","_extHostDocuments","_extensionStoragePaths","_webviewPanels","_serializers","_editorProviders","showOptions","webviewShowOptions","newHandle","$createWebviewPanel","toExtensionData","panel","serializer","$registerSerializer","$unregisterSerializer","addTextProvider","$registerTextEditorProvider","webviewOptions","supportsMove","moveCustomTextEditor","addCustomProvider","supportEditing","onDidChangeCustomDocument","getCustomDocumentEntry","isEditEvent","$onDidEdit","$onContentChange","$registerCustomEditorProvider","supportsMultipleEditorsPerDocument","$unregisterEditorProvider","getWebviewPanel","newStates","stateA","stateB","_updateViewState","webviewHandle","revivedPanel","deserializeWebviewPanel","backupId","cancellation","revivedResource","openCustomDocument","storageRoot","globalValue","resolveCustomEditor","resolveCustomTextEditor","resourceComponents","disposeEdits","newResourceComponents","getCustomEditorProvider","revertCustomDocument","saveCustomDocument","targetResource","saveCustomDocumentAs","backupCustomDocument","getNewBackupUri","updateBackup","localResourceRoots","getDefaultLocalResourceRoots","getWorkspaceFolders","_onDidChangeWindowState","onDidChangeWindowState","_state","InitialState","$getWindowVisibility","isFocused","$onDidChangeWindowFocus","focused","stringOrUri","uriAsString","$openUri","$asExternalUri","ExtensionStoragePaths","_environment","environment","_getOrCreateWorkspaceStoragePath","globalStorageHome","appSettingsHome","storageName","extHostInitDataService_1","_logFile","logFile","$log","RequestInitiator","ResponsiveState","RPCProtocol","_onDidChangeResponsiveState","onDidChangeResponsiveState","_protocol","_logger","_uriReplacer","createURIReplacer","_locals","_proxies","_lastMessageId","_cancelInvokedHandlers","_pendingRPCReplies","_responsiveState","_unacknowledgedCount","_unresponsiveTime","_asyncCheckUresponsive","_checkUnresponsive","_receiveOneMessage","msgId","resolveErr","req","UNRESPONSIVE_TIME","_setResponsiveState","newResponsiveState","responsiveState","uriIpc_1","rpcId","_createProxy","myArgs","_remoteCall","rawmsg","msgLength","MessageBuffer","messageType","readUInt32","MessageIO","deserializeRequestJSONArgs","_receiveRequest","deserializeRequestMixedArgs","logIncoming","_onDidReceiveAcknowledge","_receiveCancel","_receiveReply","deserializeReplyOKJSON","deserializeReplyOKVSBuffer","deserializeReplyErrError","_receiveReplyErr","usesCancellationToken","callId","cancellationTokenSource","_invokeHandler","serializeAcknowledged","logOutgoing","send","serializeReplyOK","serializeReplyErr","pendingReply","resolveOk","_doInvokeHandler","actor","cancellationToken","serializedRequestArguments","serializeRequestArguments","lazyPromise_1","serializeCancel","_onWillSendRequest","serializeRequest","messageSize","writeUInt32","strByteLength","buffLength","arrType","sizeLongString","sizeVSBuffer","writeLongString","writeVSBuffer","arrLen","readLongString","readVSBuffer","_arrayContainsBufferOrUndefined","massagedArgs","massagedArgsType","argsType","serializedArgs","_requestMixedArgs","_requestJSONArgs","methodBuff","argsBuff","sizeUInt8","sizeShortString","writeShortString","readShortString","sizeMixedArray","writeMixedArray","rawargs","readMixedArray","rawarg","_serializeReplyOKEmpty","_serializeReplyOKVSBuffer","_serializeReplyOKJSON","resBuff","_serializeReplyErrEror","_serializeReplyErrEmpty","errBuff","ArgType","SearchErrorCode","isFileMatch","VIEWLET_ID","PANEL_ID","VIEW_ID","SEARCH_EXCLUDE_CONFIG","ISearchService","SearchProviderType","QueryType","resultIsMatch","isProgressMessage","SearchCompletionExitCode","FileMatch","TextSearchMatch","previewOptions","matchLines","isSingleLineRange","firstMatchLine","SearchRange","oneRange","leadingChars","charsPerLine","previewStart","previewText","endColInPreview","oneLineRange","OneLineRange","getExcludes","includeSearchExcludes","fileExcludes","searchExcludes","allExcludes","SearchSortOrder","createResourceExcludeMatcher","instantiationService","createInstance","affectsConfiguration","pathIncludedInQuery","queryProps","excludePattern","includePattern","usingSearchPaths","folderQueries","fq","searchPath","relPath","SearchError","deserializeSearchError","errorMsg","details","serializeSearchError","searchError","isSerializedSearchComplete","isSerializedSearchSuccess","isSerializedFileMatch","isFilePatternMatch","normalizedFilePatternLowercase","pathToMatch","SerializableFileMatch","numMatches","resolvePatternsForProvider","globalPattern","folderPattern","merged","QueryGlobTester","folderQuery","_parsedIncludeExpression","_excludeExpression","_parsedExcludeExpression","includeExpression","testPath","excluded","hasSiblingClauses","isFolderEqual","folderA","folderB","compareWorkspaceFolderByUri","compareWorkspaceFolderByUriAndNameAndIndex","oldFolders","newFolders","oldSortedFolders","newSortedFolders","ExtHostWorkspaceImpl","_isUntitled","_workspaceFolders","_structure","previousConfirmedWorkspace","previousUnconfirmedWorkspace","newWorkspaceFolders","oldWorkspace","folderData","existingFolder","_findFolder","f1","f2","folderUriToFind","_onDidChangeWorkspace","onDidChangeWorkspace","_activeSearchCallbacks","_requestIdProvider","numbers_1","_barrier","_messageService","_confirmedWorkspace","$acceptWorkspaceData","wait","_actualWorkspace","workspaceFile","_unconfirmedWorkspace","workspaceFoldersToAdd","validatedDistinctWorkspaceFoldersToAdd","folderToAdd","currentWorkspaceFolders","otherFolder","extName","$updateWorkspaceFolders","notification_1","trySetWorkspaceFolders","resolveWorkspaceFolder","pathOrUri","includeWorkspace","toExtHostWorkspace","include","maxResults","excludePatternOrDisregardExcludes","includeFolder","parseSearchInclude","$startFileSearch","requestId","getNext","queryOptions","ignoreSymlinks","followSymlinks","disregardIgnoreFiles","useIgnoreFiles","disregardGlobalIgnoreFiles","useGlobalIgnoreFiles","disregardExcludeSettings","useDefaultExcludes","fileEncoding","encoding","afterContext","beforeContext","search_1","$startTextSearch","includeUntitled","$saveAll","$resolveProxy","IExtHostWorkspace","lookUp","tree","scopeToOverrides","isResourceLanguage","isLanguage","isWorkspaceFolder","extHostWorkspace","_extHostWorkspace","ExtHostConfigProvider","getConfigProvider","$acceptConfigurationChanged","extHostWorkspace_1","_onDidChangeConfiguration","configurationModels_1","_configurationScopes","_toMap","configurationScopes","toData","_toConfigurationChangeEvent","_toReadonlyValue","_validateConfigurationAccess","clonedConfig","cloneOnWriteProxy","clonedTarget","cloneTarget","deleteProperty","extHostConfigurationTarget","scopeToLanguage","parseConfigurationTarget","$updateConfigurationOption","$removeConfigurationOption","defaultLanguageValue","globalLanguageValue","_f","workspaceLanguageValue","_g","workspaceFolderLanguageValue","_h","languageIds","readonlyProxy","isExtensible","preventExtensions","extensionIdText","IExtHostConfiguration","IHostUtils","AbstractExtHostExtensionService","instaService","hostUtils","extHostContext","extHostConfiguration","extHostTunnelService","extHostTerminalService","_hostUtils","_extHostContext","_extHostConfiguration","_nodeProxy","_extHostTunnelService","_extHostTerminalService","_mainThreadWorkspaceProxy","_mainThreadTelemetryProxy","_mainThreadExtensionsProxy","_almostReadyToRunExtensions","_readyToStartExtensionHost","_readyToRunExtensions","extensionDescriptionRegistry_1","extHostStorage_1","_instaService","createChild","_activator","extHostExtensionActivator_1","$onExtensionActivationError","$activateExtension","_extensionPathIndex","_resolvers","_started","_beforeAlmostReadyToRunExtensions","waitForInitializeCall","autoStart","_startExtensionHost","allPromises","getAllExtensionDescriptions","isActivated","_deactivate","activateByEvent","activateById","_activateById","getActivatedExtension","forPaths","main","realpath","$onWillActivateExtension","_doActivateExtension","$onDidActivateExtension","_logExtensionActivationTimes","outcome","getTelemetryActivationEvent","_loadCommonJSModule","_loadExtensionContext","_callActivate","globalState","extHostMemento_1","workspaceState","extensionUri","extensionPath","globalStoragePath","asAbsolutePath","logPath","logsLocation","environmentVariableCollection","getEnvironmentVariableCollection","extensionModule","_callActivateOptional","extensionExports","build","activateCallStart","activateResult","activateCallStop","activateResolveStart","activateResolveStop","_activateByEvent","_handleWorkspaceContainsEagerExtensions","_handleWorkspaceContainsEagerExtension","fileNames","globPatterns","localWithRemote","isRemote","fileNameOrGlob","fileNamePromise","_activateIfFileName","globPatternPromise","_activateIfGlobPatterns","exists","tokenSource","searchP","$checkExists","WORKSPACE_CONTAINS_TIMEOUT","_doHandleExtensionTests","extensionDevelopmentLocationURI","extensionTestsPath","testRunner","requireError","runResult","failures","_gracefulExit","$onExtensionHostExit","exit","_handleEagerExtensions","_handleExtensionTests","authorityPrefix","resolver","resolveAttempt","authorityPlusIndex","setTunnelExtensionFunctions","extensionHostEnv","tunnelInformation","environmentTunnels","enabledExtensionIds","keepOnly","trie","getExtensionPathIndex","realpathValue","deltaExtensions","extHostConfiguration_1","extHostStoragePaths_1","extHostNodeProxy_1","extHostTunnelService_1","extHostTerminalService_1","extensionVersion","reasonId","IExtHostExtensionService","IExtHostDebugService","ExtHostDebugServiceBase","extHostRpcService","_workspaceService","_extensionService","_editorsService","_configurationService","_commandService","_debugSessions","_configProviderHandleCounter","_configProviders","_adapterFactoryHandleCounter","_adapterFactories","_trackerFactoryHandleCounter","_trackerFactories","_aexCommands","_debugAdapters","_debugAdaptersTrackers","_onDidStartDebugSession","_onDidTerminateDebugSession","_onDidChangeActiveDebugSession","_onDidReceiveDebugSessionCustomEvent","_debugServiceProxy","_onDidChangeBreakpoints","startBreakpoints","_activeDebugConsole","ExtHostDebugConsole","_breakpoints","_breakpointEventsActive","getExtensionRegistry","extensionRegistry","registerAllDebugTypes","onDidStartDebugSession","onDidTerminateDebugSession","onDidChangeActiveDebugSession","activeDebugSession","_activeDebugSession","onDidReceiveDebugSessionCustomEvent","activeDebugConsole","debugTypes","ed","debuggers","debugUtils_1","adapterExecutableCommand","$registerDebugTypes","onDidChangeBreakpoints","breakpoints0","fireBreakpointChanges","dtos","$registerBreakpoints","fids","dids","$unregisterBreakpoints","nameOrConfig","$startDebugging","parentSessionID","consoleMode","MergeWithParent","debugAdapterExecutable","$registerDebugConfigurationProvider","provideDebugConfigurations","resolveDebugConfiguration","resolveDebugConfigurationWithSubstitutedVariables","$unregisterDebugConfigurationProvider","definesDebugType","getAdapterDescriptorFactoryByType","$registerDebugAdapterDescriptorFactory","$unregisterDebugAdapterDescriptorFactory","editorService","ExtHostVariableResolverService","_variableResolver","createVariableResolver","ws","resolveAny","DirectDebugAdapter","debugAdapterHandle","sessionDto","mythis","getSession","getAdapterDescriptor","daDescriptor","adapterDescriptor","convertToDto","da","createDebugAdapter","debugAdapter","getDebugAdapterTrackers","tracker","_signService","createSignService","signature","sign","sendResponse","onDidSendMessage","$acceptDAMessage","$acceptDAError","$acceptDAExit","onWillStartSession","startSession","onWillReceiveMessage","onWillStopSession","stopSession","bpd","fbp","sbp","configProviderHandle","getConfigProviderByHandle","debugConfigurations","debugConfiguration","adapterFactoryHandle","adapterDescriptorFactory","getAdapterDescriptorFactoryByHandle","_acceptNameChanged","ee","createDebugAdapterTracker","trackers","MultiTracker","serverPort","debugServer","pair","createDebugAdapterDescriptor","daExecutableFromPackage","aex","ae","$startBreakpointEvents","ds","ExtHostDebugSession","$sessionCached","_folderUri","extHostExtensionService_1","extHostDocumentsAndEditors_1","extHostCommands_1","_workspaceFolder","$setDebugSessionName","$customDebugAdapterRequest","$appendDebugConsole","variableResolver_1","getConfiguration","abstractDebugAdapter_1","acceptMessage","handleMessage","WorkerExtHostDebugService","workspaceService","extensionService","editorsService","commandService","RequireInterceptor","_apiFactory","_extensionRegistry","_extHostExtensionService","_factories","_alternatives","_installInterceptor","extensionPaths","VSCodeNodeModuleFactory","KeytarNodeModuleFactory","OpenNodeModuleFactory","appUriScheme","interceptor","nodeModuleName","moduleName","alternativeModuleName","_extensionPaths","_configProvider","_extApiImpl","_request","apiImpl","_defaultApiImpl","extensionPathsPretty","rpcService","mainThreadKeytar","appRoot","process_1","alternativeNames","_impl","getPassword","$getPassword","setPassword","$setPassword","deletePassword","$deletePassword","findPassword","$findPassword","findCredentials","$findCredentials","_appUriScheme","_mainThreadTelemetry","mainThreadWindow","callOriginal","allowTunneling","sendShimmingTelemetry","_original","sendNoForwardTelemetry","TaskDefinitionDTO","TaskPresentationOptionsDTO","ProcessExecutionOptionsDTO","ProcessExecutionDTO","ShellExecutionOptionsDTO","ShellExecutionDTO","CustomExecutionDTO","TaskDTO","TaskFilterDTO","customExecution","TaskHandleDTO","taskService_1","reevaluateOnRerun","tasks","converted","Objects","TaskExecutionImpl","_tasks","_task","terminateTask","TaskExecutionDTO","workspaceProvider","ExtHostTaskBase","_onDidExecuteTask","_onDidTerminateTask","_onDidTaskProcessStarted","_onDidTaskProcessEnded","_workspaceProvider","_editorService","_terminalService","_handleCounter","_handlers","_taskExecutions","_providedCustomExecutions2","_notProvidedCustomExecutions","_activeCustomExecutions2","nextHandle","$registerTaskProvider","$unregisterTaskProvider","$registerTaskSystem","$fetchTasks","taskExecutions","$terminateTask","onDidStartTask","terminalId","attachPtyToTerminal","resolveDefinition","_lastStartedTask","getTaskExecution","onDidEndTask","customExecutionComplete","onDidStartTaskProcess","onDidEndTaskProcess","validTypes","taskIdPromises","fetchPromise","provideTasks","provideTasksInternal","taskDTO","resolvedTask","resolveTask","checkDeprecation","resolvedTaskDTO","addCustomExecution","resolveTaskInternal","isProvided","$createTaskId","taskExecution","taskToCreate","createdResult","iteratorResult","extHostApiDeprecationService_1","WorkerExtHostTask","registerTaskSystem","$executeTask","taskDTOs","toResolve","IExtHostTask","ExtensionHostMain","_isTerminating","rpcProtocol_1","_transform","extHostUriTransformerService_1","instantiationService_1","invokeFunction","initialize","stackTraceLimit","extensionErrors","prepareStackTrace","stackTrace","stackTraceMessage","getFileName","mainThreadExtensions","mainThreadErrors","$onExtensionRuntimeError","$onUnexpectedError","extensionsDeactivated","deactivateAll","extDevLocs","FileSearchEngine","sessionToken","isLimitHit","resultCount","isCanceled","filePattern","activeCancellationTokens","globalExcludePattern","_onResult","onResult","limitHit","extraFileResources","extraFile","extraFileStr","matchFile","searchInFolder","stats","getSearchOptionsForFolder","initDirectoryTree","queryTester","noSiblingsClauses","hasSiblingExcludeClauses","providerSW","_resolve","stopwatch_1","provideFileSearchResults","providerTime","elapsed","postProcessSW","addDirectoryEntries","matchDirectoryTree","postProcessTime","includes","excludes","rootEntries","pathToEntries","relativeFile","matchDirectory","includedInQuerySync","sub","FileSearchManager","sessions","onBatch","sessionTokenSource","getSessionTokenSource","cacheKey","engine","doSearch","BATCH_SIZE","rawMatchToSearchItem","fromCache","detailStats","batchSize","onResultBatch","TextSearchManager","fileUtils","collector","onProgress","TextSearchResultsCollector","folderIdx","resultSize","extensionResultIsMatch","trimResultToSize","newResultSize","someFolderHitLImit","rangesArr","matchesArr","testingPs","validateProviderResult","readdir","includedInQuery","searchOptions","provideTextSearchResults","patternInfo","isRegExp","isWordMatch","isMultiline","patternInfoToQuery","contentPattern","toCanonicalName","maxFileSize","usePCRE2","_currentFolderIdx","_currentFileMatch","_batchedCollector","BatchedCollector","sendItems","_currentUri","pushToCollector","extensionResultToFrontendResult","addItem","maxBatchSize","cb","totalNumberCompleted","addItemToBatch","addItemsToBatch","onUpdate","START_BATCH_AFTER_COUNT","timeoutHandle","TIMEOUT","IExtHostSearch","_textSearchProvider","_textSearchUsedSchemes","_fileSearchProvider","_fileSearchUsedSchemes","_fileSearchManager","fileSearchManager_1","$registerTextSearchProvider","$registerFileSearchProvider","rawQuery","reviveQuery","fileSearch","$handleFileMatch","clearCache","createTextSearchManager","$handleTextMatch","textSearchManager_1","reviveFolderQuery","rawFolderQuery","createApiFactoryAndRegisterActors","extHostStorage","extensionStoragePaths","extHostLogService","extHostNodeProxy","extHostApiDeprecation","extHostDecorations","extHostDecorations_1","extHostCommands","extHostDebugService","extHostDebugService_1","extHostSearch","extHostSearch_1","extHostTask","extHostTask_1","extHostOutputService","extHostOutput_1","extHostUrls","extHostUrls_1","extHostDocuments_1","extHostDocumentContentProviders","extHostDocumentContentProviders_1","extHostDocumentSaveParticipant","extHostDocumentSaveParticipant_1","extHostEditors","extHostTextEditors_1","extHostTreeViews","extHostTreeViews_1","extHostEditorInsets","extHostCodeInsets_1","extHostDiagnostics","extHostDiagnostics_1","extHostLanguageFeatures","extHostLanguageFeatures_1","extHostFileSystem","extHostFileSystem_1","extHostFileSystemEvent","extHostFileSystemEventService_1","extHostQuickOpen","extHostQuickOpen_1","extHostSCM","extHostSCM_1","extHostComment","extHostComments_1","extHostWindow","extHostWindow_1","extHostProgress","extHostProgress_1","extHostLabelService","extHostLabelService_1","extHostNotebook","extHostNotebook_1","extHostTheming","extHostTheming_1","extHostAuthentication","extHostAuthentication_1","extHostTimeline","extHostTimeline_1","extHostWebviews","extHostWebview_1","collections_1","extHostClipboard","extHostClipboard_1","extHostMessageService","extHostMessageService_1","extHostDialogs","extHostDialogs_1","extHostStatusBar","extHostStatusBar_1","extHostLanguages","extHostLanguages_1","extHostApiCommands_1","checkSelector","informOnce","perform","authentication","registerAuthenticationProvider","registerTextEditorCommand","activeTextEditor","getActiveTextEditor","registerDiffInformationCommand","getDiffInformation","getCommands","filterInternal","machineId","telemetryInfo","appLanguage","appName","uriScheme","clipboard","shell","getDefaultShell","openExternal","openUri","asExternalUri","createAppUri","remoteName","uiKind","extensionKind","UI","createDiagnosticCollection","getLanguages","setTextDocumentLanguage","changeLanguage","registerCodeActionsProvider","registerCodeActionProvider","registerCodeLensProvider","registerDefinitionProvider","registerDeclarationProvider","registerImplementationProvider","registerTypeDefinitionProvider","registerHoverProvider","registerEvaluatableExpressionProvider","registerDocumentHighlightProvider","registerOnTypeRenameProvider","registerReferenceProvider","registerRenameProvider","registerDocumentSymbolProvider","registerWorkspaceSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","firstTriggerCharacter","moreTriggerCharacters","registerDocumentSemanticTokensProvider","registerDocumentRangeSemanticTokensProvider","registerSignatureHelpProvider","firstItem","remaining","registerCompletionItemProvider","registerColorProvider","registerFoldingRangeProvider","registerSelectionRangeProvider","registerCallHierarchyProvider","setLanguageConfiguration","visibleTextEditors","documentOrUri","documentPromise","openTextDocument","showTextDocument","createTextEditorDecorationType","showInformationMessage","showMessage","showWarningMessage","showErrorMessage","showQuickPick","showWorkspaceFolderPick","showInputBox","showInput","showOpenDialog","showSaveDialog","alignmentOrOptions","setStatusBarMessage","withScmProgress","withProgress","createOutputChannel","createWebviewPanel","createWebviewTextEditorInset","createWebviewEditorInset","createTerminal","nameOrOptions","createTerminalFromOptions","registerTerminalLinkHandler","registerLinkHandler","registerTreeDataProvider","registerWebviewPanelSerializer","registerCustomEditorProvider","registerCustomEditorProvider2","registerDecorationProvider","registerUriHandler","createQuickPick","createInputBox","rootPath","getPath","updateWorkspaceFolders","asRelativePath","getRelativePath","findFiles","findTextInFiles","optionsOrCallback","callbackOrToken","applyWorkspaceEdit","createFileSystemWatcher","ignoreCreate","ignoreChange","ignoreDelete","textDocuments","getAllDocumentData","uriOrFileNameOrOptions","uriPromise","createDocumentData","ensureDocumentData","onDidOpenTextDocument","onDidCloseTextDocument","onDidChangeTextDocument","onDidSaveTextDocument","onWillSaveTextDocument","getOnWillSaveTextDocumentEvent","registerTextDocumentContentProvider","registerTaskProvider","registerFileSystemProvider","fs","registerFileSearchProvider","registerTextSearchProvider","registerRemoteAuthorityResolver","registerResourceLabelFormatter","onDidCreateFiles","onDidDeleteFiles","onDidRenameFiles","onWillCreateFiles","getOnWillCreateFileEvent","onWillDeleteFiles","getOnWillDeleteFileEvent","onWillRenameFiles","getOnWillRenameFileEvent","openTunnel","tunnels","getTunnels","registerTimelineProvider","scm","getLastInputBox","createSourceControl","createCommentController","registerDebugConfigurationProvider","debugType","Initial","registerDebugAdapterDescriptorFactory","registerDebugAdapterTrackerFactory","startDebugging","parentSessionOrOptions","addBreakpoints","removeBreakpoints","asDebugSourceUri","fetchTasks","executeTask","registerNotebookProvider","registerNotebookContentProvider","registerNotebookOutputRenderer","outputFilter","createConcatTextDocument","extHostNotebookConcatDocument_1","EventEmitter","CustomExecution2","languageConfiguration","model_1","Task2","editorOptions_1","TreeItem2","originExtensionId","_originExtensionId","_identifier","packageJSON","isActive","api","getExtensionExports","activateByIdWithErrors","WorkerRequireInterceptor","extHostRequireInterceptor_1","alternative","load","apiFactory","extHost_api_impl_1","_fakeModules","install","worker_1","getModule","suffix","statusText","initFn","_exports","_module","_require","extHostLogService_1","extHostExtensionService_2","extHostStoragePaths_2","nativeClose","nativePostMessage","nativeAddEventLister","addEventLister","hostUtil","_path","ExtensionWorker","terminating","extensionHostProtocol_1","onTerminate","vsbuf","extHostMain","extensionHostMain_1","terminate"],"mappings":"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AAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA;AACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IAC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","file":"extensionHostWorker.js","sourcesContent":["}).call(this);","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n// BEGIN MONACOCHANGE\nvar __marked_exports;\n// END MONACOCHANGE\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace(/\\{2,\\}/g, '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger () {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function (value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\n// BEGIN MONACOCHANGE\n// if (typeof module !== 'undefined' && typeof exports === 'object') {\n//   module.exports = marked;\n// } else if (typeof define === 'function' && define.amd) {\n//   define(function() { return marked; });\n// } else {\n//   root.marked = marked;\n// }\n// })(this || (typeof window !== 'undefined' ? window : global));\n__marked_exports = marked;\n}).call(this);\n\n// ESM-comment-begin\ndefine(\"vs/base/common/marked/marked\", function() { return __marked_exports; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\n// export var marked = __marked_exports;\n// export var Parser = __marked_exports.Parser;\n// export var parser = __marked_exports.parser;\n// export var Renderer = __marked_exports.Renderer;\n// export var TextRenderer = __marked_exports.TextRenderer;\n// export var Lexer = __marked_exports.Lexer;\n// export var lexer = __marked_exports.lexer;\n// export var InlineLexer = __marked_exports.InlineLexer;\n// export var inlineLexer = __marked_exports.inlineLexer;\n// export var parse = __marked_exports.parse;\n// ESM-uncomment-end\n// END MONACOCHANGE\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport type IStringDictionary<V> = Record<string, V>;\n\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport type INumberDictionary<V> = Record<number, V>;\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given dictionary.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function size<T>(from: IStringDictionary<T> | INumberDictionary<T>): number {\n\tlet count = 0;\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nexport function first<T>(from: IStringDictionary<T> | INumberDictionary<T>): T | undefined {\n\tfor (const key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\treturn (from as any)[key];\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Iterates over each entry in the provided dictionary. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result: IStringDictionary<T[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}\n\n\nexport class SetMap<K, V> {\n\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * @deprecated ES6: use `Array.findIndex`\n */\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class IdGenerator {\n\n\tprivate _prefix: string;\n\tprivate _lastId: number;\n\n\tconstructor(prefix: string) {\n\t\tthis._prefix = prefix;\n\t\tthis._lastId = 0;\n\t}\n\n\tpublic nextId(): string {\n\t\treturn this._prefix + (++this._lastId);\n\t}\n}\n\nexport const defaultGenerator = new IdGenerator('id#');","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createScanner, SyntaxKind, ScanError } from './json';\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize?: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * The default 'end of line' character. If not set, '\\n' is used as default.\n\t */\n\teol?: string;\n}\n\n/**\n * Represents a text modification\n */\nexport interface Edit {\n\t/**\n\t * The start offset of the modification.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the modification. Must not be negative. Empty length represents an *insert*.\n\t */\n\tlength: number;\n\t/**\n\t * The new content. Empty content represents a *remove*.\n\t */\n\tcontent: string;\n}\n\n/**\n * A text range in the document\n*/\nexport interface Range {\n\t/**\n\t * The start offset of the range.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the range. Must not be negative.\n\t */\n\tlength: number;\n}\n\n\nexport function format(documentText: string, range: Range | undefined, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet formatText: string;\n\tlet formatTextStart: number;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\n\t\tformatTextStart = rangeStart;\n\t\twhile (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n\t\t\tformatTextStart--;\n\t\t}\n\t\tlet endOffset = rangeEnd;\n\t\twhile (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n\t\t\tendOffset++;\n\t\t}\n\t\tformatText = documentText.substring(formatTextStart, endOffset);\n\t\tinitialIndentLevel = computeIndentLevel(formatText, options);\n\t} else {\n\t\tformatText = documentText;\n\t\tinitialIndentLevel = 0;\n\t\tformatTextStart = 0;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t}\n\tconst eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize || 4);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tconst scanner = createScanner(formatText, false);\n\tlet hasError = false;\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === SyntaxKind.Trivia || token === SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\thasError = token === SyntaxKind.Unknown || scanner.getTokenError() !== ScanError.None;\n\t\treturn token;\n\t}\n\tconst editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\n\tif (firstToken !== SyntaxKind.EOF) {\n\t\tconst firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\tconst initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, formatTextStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tconst commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\t\treplaceContent = secondToken === SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.CommaToken:\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\t\tif (secondToken === SyntaxKind.ColonToken) {\n\t\t\t\t\t\treplaceContent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// fall through\n\t\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tcase SyntaxKind.CloseBraceToken:\n\t\t\t\tcase SyntaxKind.CloseBracketToken:\n\t\t\t\t\tif (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t} else if (secondToken !== SyntaxKind.CommaToken && secondToken !== SyntaxKind.EOF) {\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thasError = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tconst secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nexport function getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nexport function isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParseError, Node, JSONPath, Segment, parseTree, findNodeAtLocation } from './json';\nimport { Edit, format, isEOL, FormattingOptions } from './jsonFormatter';\nimport { mergeSort } from 'vs/base/common/arrays';\n\n\nexport function removeProperty(text: string, path: JSONPath, formattingOptions: FormattingOptions): Edit[] {\n\treturn setProperty(text, path, undefined, formattingOptions);\n}\n\nexport function setProperty(text: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions, getInsertionIndex?: (properties: string[]) => number): Edit[] {\n\tconst path = originalPath.slice();\n\tconst errors: ParseError[] = [];\n\tconst root = parseTree(text, errors);\n\tlet parent: Node | undefined = undefined;\n\n\tlet lastSegment: Segment | undefined = undefined;\n\twhile (path.length > 0) {\n\t\tlastSegment = path.pop();\n\t\tparent = findNodeAtLocation(root, path);\n\t\tif (parent === undefined && value !== undefined) {\n\t\t\tif (typeof lastSegment === 'string') {\n\t\t\t\tvalue = { [lastSegment]: value };\n\t\t\t} else {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!parent) {\n\t\t// empty document\n\t\tif (value === undefined) { // delete\n\t\t\tthrow new Error('Can not delete in empty document');\n\t\t}\n\t\treturn withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n\t} else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n\t\tconst existing = findNodeAtLocation(parent, [lastSegment]);\n\t\tif (existing !== undefined) {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\tif (!existing.parent) {\n\t\t\t\t\tthrow new Error('Malformed AST');\n\t\t\t\t}\n\t\t\t\tconst propertyIndex = parent.children.indexOf(existing.parent);\n\t\t\t\tlet removeBegin: number;\n\t\t\t\tlet removeEnd = existing.parent.offset + existing.parent.length;\n\t\t\t\tif (propertyIndex > 0) {\n\t\t\t\t\t// remove the comma of the previous node\n\t\t\t\t\tconst previous = parent.children[propertyIndex - 1];\n\t\t\t\t\tremoveBegin = previous.offset + previous.length;\n\t\t\t\t} else {\n\t\t\t\t\tremoveBegin = parent.offset + 1;\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\t// remove the comma of the next node\n\t\t\t\t\t\tconst next = parent.children[1];\n\t\t\t\t\t\tremoveEnd = next.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n\t\t\t} else {\n\t\t\t\t// set value of existing property\n\t\t\t\treturn withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\treturn []; // property does not exist, nothing to do\n\t\t\t}\n\t\t\tconst newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n\t\t\tconst index = getInsertionIndex ? getInsertionIndex(parent.children.map(p => p.children![0].value)) : parent.children.length;\n\t\t\tlet edit: Edit;\n\t\t\tif (index > 0) {\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t} else if (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n\t\tif (value !== undefined) {\n\t\t\t// Insert\n\t\t\tconst newProperty = `${JSON.stringify(value)}`;\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 0 || lastSegment === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n\t\t\t} else {\n\t\t\t\tconst index = lastSegment === -1 || lastSegment > parent.children.length ? parent.children.length : lastSegment;\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t} else {\n\t\t\t//Removal\n\t\t\tconst removalIndex = lastSegment;\n\t\t\tconst toRemove = parent.children[removalIndex];\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 1) {\n\t\t\t\t// only item\n\t\t\t\tedit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n\t\t\t} else if (parent.children.length - 1 === removalIndex) {\n\t\t\t\t// last item\n\t\t\t\tconst previous = parent.children[removalIndex - 1];\n\t\t\t\tconst offset = previous.offset + previous.length;\n\t\t\t\tconst parentEndOffset = parent.offset + parent.length;\n\t\t\t\tedit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n\t\t\t} else {\n\t\t\t\tedit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else {\n\t\tthrow new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n\t}\n}\n\nexport function withFormatting(text: string, edit: Edit, formattingOptions: FormattingOptions): Edit[] {\n\t// apply the edit\n\tlet newText = applyEdit(text, edit);\n\n\t// format the new text\n\tlet begin = edit.offset;\n\tlet end = edit.offset + edit.content.length;\n\tif (edit.length === 0 || edit.content.length === 0) { // insert or remove\n\t\twhile (begin > 0 && !isEOL(newText, begin - 1)) {\n\t\t\tbegin--;\n\t\t}\n\t\twhile (end < newText.length && !isEOL(newText, end)) {\n\t\t\tend++;\n\t\t}\n\t}\n\n\tconst edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n\n\t// apply the formatting edits and track the begin and end offsets of the changes\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\tconst curr = edits[i];\n\t\tnewText = applyEdit(newText, curr);\n\t\tbegin = Math.min(begin, curr.offset);\n\t\tend = Math.max(end, curr.offset + curr.length);\n\t\tend += curr.content.length - curr.length;\n\t}\n\t// create a single edit with all changes\n\tconst editLength = text.length - (newText.length - end) - begin;\n\treturn [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\n\nexport function applyEdit(text: string, edit: Edit): string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function applyEdits(text: string, edits: Edit[]): string {\n\tlet sortedEdits = mergeSort(edits, (a, b) => {\n\t\tconst diff = a.offset - b.offset;\n\t\tif (diff === 0) {\n\t\t\treturn a.length - b.length;\n\t\t}\n\t\treturn diff;\n\t});\n\tlet lastModifiedOffset = text.length;\n\tfor (let i = sortedEdits.length - 1; i >= 0; i--) {\n\t\tlet e = sortedEdits[i];\n\t\tif (e.offset + e.length <= lastModifiedOffset) {\n\t\t\ttext = applyEdit(text, e);\n\t\t} else {\n\t\t\tthrow new Error('Overlapping edit');\n\t\t}\n\t\tlastModifiedOffset = e.offset;\n\t}\n\treturn text;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T> {\n\tlet promiseResolve: (() => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.();\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.min(Math.max(value, min), max);\n}\n\nexport function rot(index: number, modulo: number): number {\n\treturn (modulo + (index % modulo)) % modulo;\n}\n\nexport class Counter {\n\tprivate _next = 0;\n\n\tgetNext(): number {\n\t\treturn this._next++;\n\t}\n}\n\nexport class MovingAverage {\n\n\tprivate _n = 1;\n\tprivate _val = 0;\n\n\tupdate(value: number): this {\n\t\tthis._val = this._val + (value - this._val) / this._n;\n\t\tthis._n += 1;\n\t\treturn this;\n\t}\n\n\tget value(): number {\n\t\treturn this._val;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { sep } from 'vs/base/common/path';\nimport { IdleValue } from 'vs/base/common/async';\n\nconst intlFileNameCollator: IdleValue<{ collator: Intl.Collator, collatorIsNumeric: boolean }> = new IdleValue(() => {\n\tconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\treturn {\n\t\tcollator: collator,\n\t\tcollatorIsNumeric: collator.resolvedOptions().numeric\n\t};\n});\n\nexport function compareFileNames(one: string | null, other: string | null, caseSensitive = false): number {\n\tconst a = one || '';\n\tconst b = other || '';\n\tconst result = intlFileNameCollator.getValue().collator.compare(a, b);\n\n\t// Using the numeric option in the collator will\n\t// make compare(`foo1`, `foo01`) === 0. We must disambiguate.\n\tif (intlFileNameCollator.getValue().collatorIsNumeric && result === 0 && a !== b) {\n\t\treturn a < b ? -1 : 1;\n\t}\n\n\treturn result;\n}\n\nconst FileNameMatch = /^(.*?)(\\.([^.]*))?$/;\n\nexport function noIntlCompareFileNames(one: string | null, other: string | null, caseSensitive = false): number {\n\tif (!caseSensitive) {\n\t\tone = one && one.toLowerCase();\n\t\tother = other && other.toLowerCase();\n\t}\n\n\tconst [oneName, oneExtension] = extractNameAndExtension(one);\n\tconst [otherName, otherExtension] = extractNameAndExtension(other);\n\n\tif (oneName !== otherName) {\n\t\treturn oneName < otherName ? -1 : 1;\n\t}\n\n\tif (oneExtension === otherExtension) {\n\t\treturn 0;\n\t}\n\n\treturn oneExtension < otherExtension ? -1 : 1;\n}\n\nexport function compareFileExtensions(one: string | null, other: string | null): number {\n\tconst [oneName, oneExtension] = extractNameAndExtension(one);\n\tconst [otherName, otherExtension] = extractNameAndExtension(other);\n\n\tlet result = intlFileNameCollator.getValue().collator.compare(oneExtension, otherExtension);\n\n\tif (result === 0) {\n\t\t// Using the numeric option in the collator will\n\t\t// make compare(`foo1`, `foo01`) === 0. We must disambiguate.\n\t\tif (intlFileNameCollator.getValue().collatorIsNumeric && oneExtension !== otherExtension) {\n\t\t\treturn oneExtension < otherExtension ? -1 : 1;\n\t\t}\n\n\t\t// Extensions are equal, compare filenames\n\t\tresult = intlFileNameCollator.getValue().collator.compare(oneName, otherName);\n\n\t\tif (intlFileNameCollator.getValue().collatorIsNumeric && result === 0 && oneName !== otherName) {\n\t\t\treturn oneName < otherName ? -1 : 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction extractNameAndExtension(str?: string | null): [string, string] {\n\tconst match = str ? FileNameMatch.exec(str) as Array<string> : ([] as Array<string>);\n\n\treturn [(match && match[1]) || '', (match && match[3]) || ''];\n}\n\nfunction comparePathComponents(one: string, other: string, caseSensitive = false): number {\n\tif (!caseSensitive) {\n\t\tone = one && one.toLowerCase();\n\t\tother = other && other.toLowerCase();\n\t}\n\n\tif (one === other) {\n\t\treturn 0;\n\t}\n\n\treturn one < other ? -1 : 1;\n}\n\nexport function comparePaths(one: string, other: string, caseSensitive = false): number {\n\tconst oneParts = one.split(sep);\n\tconst otherParts = other.split(sep);\n\n\tconst lastOne = oneParts.length - 1;\n\tconst lastOther = otherParts.length - 1;\n\tlet endOne: boolean, endOther: boolean;\n\n\tfor (let i = 0; ; i++) {\n\t\tendOne = lastOne === i;\n\t\tendOther = lastOther === i;\n\n\t\tif (endOne && endOther) {\n\t\t\treturn compareFileNames(oneParts[i], otherParts[i], caseSensitive);\n\t\t} else if (endOne) {\n\t\t\treturn -1;\n\t\t} else if (endOther) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst result = comparePathComponents(oneParts[i], otherParts[i], caseSensitive);\n\n\t\tif (result !== 0) {\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport function compareAnything(one: string, other: string, lookFor: string): number {\n\tconst elementAName = one.toLowerCase();\n\tconst elementBName = other.toLowerCase();\n\n\t// Sort prefix matches over non prefix matches\n\tconst prefixCompare = compareByPrefix(one, other, lookFor);\n\tif (prefixCompare) {\n\t\treturn prefixCompare;\n\t}\n\n\t// Sort suffix matches over non suffix matches\n\tconst elementASuffixMatch = elementAName.endsWith(lookFor);\n\tconst elementBSuffixMatch = elementBName.endsWith(lookFor);\n\tif (elementASuffixMatch !== elementBSuffixMatch) {\n\t\treturn elementASuffixMatch ? -1 : 1;\n\t}\n\n\t// Understand file names\n\tconst r = compareFileNames(elementAName, elementBName);\n\tif (r !== 0) {\n\t\treturn r;\n\t}\n\n\t// Compare by name\n\treturn elementAName.localeCompare(elementBName);\n}\n\nexport function compareByPrefix(one: string, other: string, lookFor: string): number {\n\tconst elementAName = one.toLowerCase();\n\tconst elementBName = other.toLowerCase();\n\n\t// Sort prefix matches over non prefix matches\n\tconst elementAPrefixMatch = elementAName.startsWith(lookFor);\n\tconst elementBPrefixMatch = elementBName.startsWith(lookFor);\n\tif (elementAPrefixMatch !== elementBPrefixMatch) {\n\t\treturn elementAPrefixMatch ? -1 : 1;\n\t}\n\n\t// Same prefix: Sort shorter matches to the top to have those on top that match more precisely\n\telse if (elementAPrefixMatch && elementBPrefixMatch) {\n\t\tif (elementAName.length < elementBName.length) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (elementAName.length > elementBName.length) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\treturn 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : new Date().getTime();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t */\n\twrite(data: T): void;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer);\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tconstructor(private reducer: IReducer<T>) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: IReducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlet wrapperStream: WriteableStream<T> | undefined = undefined;\n\n\t\tstream.on('data', data => {\n\n\t\t\t// If we reach maxChunks, we start to return a stream\n\t\t\t// and make sure that any data we have already read\n\t\t\t// is in it as well\n\t\t\tif (!wrapperStream && chunks.length === maxChunks) {\n\t\t\t\twrapperStream = newWriteableStream(reducer);\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.write(data);\n\n\t\t\t\treturn resolve(wrapperStream);\n\t\t\t}\n\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.write(data);\n\t\t\t} else {\n\t\t\t\tchunks.push(data);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('error', error => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.error(error);\n\t\t\t} else {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('end', () => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.end();\n\t\t\t} else {\n\t\t\t\treturn resolve(reducer(chunks));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * @deprecated ES6: use `String.startsWith`\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated ES6: use `String.endsWith`\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\n/**\n * @deprecated ES6\n */\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj: any, hashVal = 0): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(0, 937);\n\t\tdefault:\n\t\t\treturn numberHash(0, 617);\n\t}\n}\n\nfunction numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => hash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn hash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\nexport class Hasher {\n\n\tprivate _value = 0;\n\n\tget value(): number {\n\t\treturn this._value;\n\t}\n\n\thash(obj: any): number {\n\t\tthis._value = hash(obj, this._value);\n\t\treturn this._value;\n\t}\n}\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction fill(dest: Uint8Array, index: number = 0, count: number = dest.byteLength, value: number = 0): void {\n\tfor (let i = 0; i < count; i++) {\n\t\tdest[index + i] = value;\n\t}\n}\n\nfunction leftPad(value: string, length: number, char: string = '0'): string {\n\twhile (value.length < length) {\n\t\tvalue = char + value;\n\t}\n\treturn value;\n}\n\nfunction toHexString(value: number, bitsize: number = 32): string {\n\treturn leftPad((value >>> 0).toString(16), bitsize / 4);\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tfill(this._buff, this._buffLen);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tfill(this._buff);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n * todo@joh use toJSON-results\n */\nexport type Dto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: T[K] extends Function\n\t? never\n\t: UriDto<T[K]> };\n\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\n/**\n * @deprecated ES6\n */\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { regExpFlags } from 'vs/base/common/strings';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\nexport function revive(obj: any, depth = 0): any {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return URI.revive(obj);\n\t\t\tcase 2: return new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\t// NOTE@coder: Use fsPath for Windows support.\n\t\tlet query = `path=${encodeURIComponent(uri.fsPath)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\n\n/**\n * @deprecated ES6: use `[...SetOrMap.values()]`\n */\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\n/**\n * @deprecated ES6: use `[...map.keys()]`\n */\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\t//todo@jrieken the case-sensitive logic is copied form `resources.ts#hasToIgnoreCase`\n\t\t\t// which cannot be used because it depends on this\n\t\t\tconst caseSensitive = key.scheme === Schemas.file && isLinux;\n\t\t\tthis._pathIterator = new PathIterator(false, caseSensitive);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator());\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<K, V>): Iterator<V> {\n\t\tlet res: { done: false; value: V; };\n\t\tlet idx: number;\n\t\tlet data: V[];\n\t\tconst next = (): IteratorResult<V> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: V, index: K) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<K, V> | undefined, callback: (value: V, index: K) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V>{\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { LRUCache } from 'vs/base/common/map';\nimport * as strings from 'vs/base/common/strings';\n\nexport interface IFilter {\n\t// Returns null if word doesn't match.\n\t(word: string, wordToMatchAgainst: string): IMatch[] | null;\n}\n\nexport interface IMatch {\n\tstart: number;\n\tend: number;\n}\n\n// Combined filters\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter: IFilter[]): IFilter {\n\treturn function (word: string, wordToMatchAgainst: string): IMatch[] | null {\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tconst match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (match) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n\n// Prefix\n\nexport const matchesStrictPrefix: IFilter = _matchesPrefix.bind(undefined, false);\nexport const matchesPrefix: IFilter = _matchesPrefix.bind(undefined, true);\n\nfunction _matchesPrefix(ignoreCase: boolean, word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tif (!wordToMatchAgainst || wordToMatchAgainst.length < word.length) {\n\t\treturn null;\n\t}\n\n\tlet matches: boolean;\n\tif (ignoreCase) {\n\t\tmatches = strings.startsWithIgnoreCase(wordToMatchAgainst, word);\n\t} else {\n\t\tmatches = wordToMatchAgainst.indexOf(word) === 0;\n\t}\n\n\tif (!matches) {\n\t\treturn null;\n\t}\n\n\treturn word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n\n// Contiguous Substring\n\nexport function matchesContiguousSubString(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tconst index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n\tif (index === -1) {\n\t\treturn null;\n\t}\n\n\treturn [{ start: index, end: index + word.length }];\n}\n\n// Substring\n\nexport function matchesSubString(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\treturn _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\n\nfunction _matchesSubString(word: string, wordToMatchAgainst: string, i: number, j: number): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === wordToMatchAgainst.length) {\n\t\treturn null;\n\t} else {\n\t\tif (word[i] === wordToMatchAgainst[j]) {\n\t\t\tlet result: IMatch[] | null = null;\n\t\t\tif (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n\t\t\t\treturn join({ start: j, end: j + 1 }, result);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\treturn _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n\t}\n}\n\n// CamelCase\n\nfunction isLower(code: number): boolean {\n\treturn CharCode.a <= code && code <= CharCode.z;\n}\n\nexport function isUpper(code: number): boolean {\n\treturn CharCode.A <= code && code <= CharCode.Z;\n}\n\nfunction isNumber(code: number): boolean {\n\treturn CharCode.Digit0 <= code && code <= CharCode.Digit9;\n}\n\nfunction isWhitespace(code: number): boolean {\n\treturn (\n\t\tcode === CharCode.Space\n\t\t|| code === CharCode.Tab\n\t\t|| code === CharCode.LineFeed\n\t\t|| code === CharCode.CarriageReturn\n\t);\n}\n\nconst wordSeparators = new Set<number>();\n'`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?'\n\t.split('')\n\t.forEach(s => wordSeparators.add(s.charCodeAt(0)));\n\nfunction isWordSeparator(code: number): boolean {\n\treturn isWhitespace(code) || wordSeparators.has(code);\n}\n\nfunction charactersMatch(codeA: number, codeB: number): boolean {\n\treturn (codeA === codeB) || (isWordSeparator(codeA) && isWordSeparator(codeB));\n}\n\nfunction isAlphanumeric(code: number): boolean {\n\treturn isLower(code) || isUpper(code) || isNumber(code);\n}\n\nfunction join(head: IMatch, tail: IMatch[]): IMatch[] {\n\tif (tail.length === 0) {\n\t\ttail = [head];\n\t} else if (head.end === tail[0].start) {\n\t\ttail[0].start = head.start;\n\t} else {\n\t\ttail.unshift(head);\n\t}\n\treturn tail;\n}\n\nfunction nextAnchor(camelCaseWord: string, start: number): number {\n\tfor (let i = start; i < camelCaseWord.length; i++) {\n\t\tconst c = camelCaseWord.charCodeAt(i);\n\t\tif (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn camelCaseWord.length;\n}\n\nfunction _matchesCamelCase(word: string, camelCaseWord: string, i: number, j: number): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === camelCaseWord.length) {\n\t\treturn null;\n\t} else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result: IMatch[] | null = null;\n\t\tlet nextUpperIndex = j + 1;\n\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n\t\twhile (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n\t\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n\t\t\tnextUpperIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\ninterface ICamelCaseAnalysis {\n\tupperPercent: number;\n\tlowerPercent: number;\n\talphaPercent: number;\n\tnumericPercent: number;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction analyzeCamelCaseWord(word: string): ICamelCaseAnalysis {\n\tlet upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isAlphanumeric(code)) { alpha++; }\n\t\tif (isNumber(code)) { numeric++; }\n\t}\n\n\tconst upperPercent = upper / word.length;\n\tconst lowerPercent = lower / word.length;\n\tconst alphaPercent = alpha / word.length;\n\tconst numericPercent = numeric / word.length;\n\n\treturn { upperPercent, lowerPercent, alphaPercent, numericPercent };\n}\n\nfunction isUpperCaseWord(analysis: ICamelCaseAnalysis): boolean {\n\tconst { upperPercent, lowerPercent } = analysis;\n\treturn lowerPercent === 0 && upperPercent > 0.6;\n}\n\nfunction isCamelCaseWord(analysis: ICamelCaseAnalysis): boolean {\n\tconst { upperPercent, lowerPercent, alphaPercent, numericPercent } = analysis;\n\treturn lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word: string): boolean {\n\tlet upper = 0, lower = 0, code = 0, whitespace = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isWhitespace(code)) { whitespace++; }\n\t}\n\n\tif ((upper === 0 || lower === 0) && whitespace === 0) {\n\t\treturn word.length <= 30;\n\t} else {\n\t\treturn upper <= 5;\n\t}\n}\n\nexport function matchesCamelCase(word: string, camelCaseWord: string): IMatch[] | null {\n\tif (!camelCaseWord) {\n\t\treturn null;\n\t}\n\n\tcamelCaseWord = camelCaseWord.trim();\n\n\tif (camelCaseWord.length === 0) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCasePattern(word)) {\n\t\treturn null;\n\t}\n\n\tif (camelCaseWord.length > 60) {\n\t\treturn null;\n\t}\n\n\tconst analysis = analyzeCamelCaseWord(camelCaseWord);\n\n\tif (!isCamelCaseWord(analysis)) {\n\t\tif (!isUpperCaseWord(analysis)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tcamelCaseWord = camelCaseWord.toLowerCase();\n\t}\n\n\tlet result: IMatch[] | null = null;\n\tlet i = 0;\n\n\tword = word.toLowerCase();\n\twhile (i < camelCaseWord.length && (result = _matchesCamelCase(word, camelCaseWord, 0, i)) === null) {\n\t\ti = nextAnchor(camelCaseWord, i + 1);\n\t}\n\n\treturn result;\n}\n\n// Matches beginning of words supporting non-ASCII languages\n// If `contiguous` is true then matches word with beginnings of the words in the target. E.g. \"pul\" will match \"Git: Pull\"\n// Otherwise also matches sub string of the word with beginnings of the words in the target. E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n// Useful in cases where the target is words (e.g. command labels)\n\nexport function matchesWords(word: string, target: string, contiguous: boolean = false): IMatch[] | null {\n\tif (!target || target.length === 0) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] | null = null;\n\tlet i = 0;\n\n\tword = word.toLowerCase();\n\ttarget = target.toLowerCase();\n\twhile (i < target.length && (result = _matchesWords(word, target, 0, i, contiguous)) === null) {\n\t\ti = nextWord(target, i + 1);\n\t}\n\n\treturn result;\n}\n\nfunction _matchesWords(word: string, target: string, i: number, j: number, contiguous: boolean): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === target.length) {\n\t\treturn null;\n\t} else if (!charactersMatch(word.charCodeAt(i), target.charCodeAt(j))) {\n\t\treturn null;\n\t} else {\n\t\tlet result: IMatch[] | null = null;\n\t\tlet nextWordIndex = j + 1;\n\t\tresult = _matchesWords(word, target, i + 1, j + 1, contiguous);\n\t\tif (!contiguous) {\n\t\t\twhile (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n\t\t\t\tresult = _matchesWords(word, target, i + 1, nextWordIndex, contiguous);\n\t\t\t\tnextWordIndex++;\n\t\t\t}\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\nfunction nextWord(word: string, start: number): number {\n\tfor (let i = start; i < word.length; i++) {\n\t\tif (isWordSeparator(word.charCodeAt(i)) ||\n\t\t\t(i > 0 && isWordSeparator(word.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn word.length;\n}\n\n// Fuzzy\n\nconst fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache = new LRUCache<string, RegExp>(10000); // bounded to 10000 elements\n\nexport function matchesFuzzy(word: string, wordToMatchAgainst: string, enableSeparateSubstringMatching = false): IMatch[] | null {\n\tif (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n\t\treturn null; // return early for invalid input\n\t}\n\n\t// Form RegExp for wildcard matches\n\tlet regexp = fuzzyRegExpCache.get(word);\n\tif (!regexp) {\n\t\tregexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n\t\tfuzzyRegExpCache.set(word, regexp);\n\t}\n\n\t// RegExp Filter\n\tconst match = regexp.exec(wordToMatchAgainst);\n\tif (match) {\n\t\treturn [{ start: match.index, end: match.index + match[0].length }];\n\t}\n\n\t// Default Filter\n\treturn enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n\n/**\n * Match pattern againt word in a fuzzy way. As in IntelliSense and faster and more\n * powerfull than `matchesFuzzy`\n */\nexport function matchesFuzzy2(pattern: string, word: string): IMatch[] | null {\n\tconst score = fuzzyScore(pattern, pattern.toLowerCase(), 0, word, word.toLowerCase(), 0, true);\n\treturn score ? createMatches(score) : null;\n}\n\nexport function anyScore(pattern: string, lowPattern: string, _patternPos: number, word: string, lowWord: string, _wordPos: number): FuzzyScore {\n\tconst result = fuzzyScore(pattern, lowPattern, 0, word, lowWord, 0, true);\n\tif (result) {\n\t\treturn result;\n\t}\n\tlet matches = 0;\n\tlet score = 0;\n\tlet idx = _wordPos;\n\tfor (let patternPos = 0; patternPos < lowPattern.length && patternPos < _maxLen; ++patternPos) {\n\t\tconst wordPos = lowWord.indexOf(lowPattern.charAt(patternPos), idx);\n\t\tif (wordPos >= 0) {\n\t\t\tscore += 1;\n\t\t\tmatches += 2 ** wordPos;\n\t\t\tidx = wordPos + 1;\n\n\t\t} else if (matches !== 0) {\n\t\t\t// once we have started matching things\n\t\t\t// we need to match the remaining pattern\n\t\t\t// characters\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn [score, matches, _wordPos];\n}\n\n//#region --- fuzzyScore ---\n\nexport function createMatches(score: undefined | FuzzyScore): IMatch[] {\n\tif (typeof score === 'undefined') {\n\t\treturn [];\n\t}\n\n\tconst matches = score[1].toString(2);\n\tconst wordStart = score[2];\n\tconst res: IMatch[] = [];\n\n\tfor (let pos = wordStart; pos < _maxLen; pos++) {\n\t\tif (matches[matches.length - (pos + 1)] === '1') {\n\t\t\tconst last = res[res.length - 1];\n\t\t\tif (last && last.end === pos) {\n\t\t\t\tlast.end = pos + 1;\n\t\t\t} else {\n\t\t\t\tres.push({ start: pos, end: pos + 1 });\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nconst _maxLen = 128;\n\nfunction initTable() {\n\tconst table: number[][] = [];\n\tconst row: number[] = [0];\n\tfor (let i = 1; i <= _maxLen; i++) {\n\t\trow.push(-i);\n\t}\n\tfor (let i = 0; i <= _maxLen; i++) {\n\t\tconst thisRow = row.slice(0);\n\t\tthisRow[0] = -i;\n\t\ttable.push(thisRow);\n\t}\n\treturn table;\n}\n\nconst _table = initTable();\nconst _scores = initTable();\nconst _arrows = <Arrow[][]>initTable();\nconst _debug = false;\n\nfunction printTable(table: number[][], pattern: string, patternLen: number, word: string, wordLen: number): string {\n\tfunction pad(s: string, n: number, pad = ' ') {\n\t\twhile (s.length < n) {\n\t\t\ts = pad + s;\n\t\t}\n\t\treturn s;\n\t}\n\tlet ret = ` |   |${word.split('').map(c => pad(c, 3)).join('|')}\\n`;\n\n\tfor (let i = 0; i <= patternLen; i++) {\n\t\tif (i === 0) {\n\t\t\tret += ' |';\n\t\t} else {\n\t\t\tret += `${pattern[i - 1]}|`;\n\t\t}\n\t\tret += table[i].slice(0, wordLen + 1).map(n => pad(n.toString(), 3)).join('|') + '\\n';\n\t}\n\treturn ret;\n}\n\nfunction printTables(pattern: string, patternStart: number, word: string, wordStart: number): void {\n\tpattern = pattern.substr(patternStart);\n\tword = word.substr(wordStart);\n\tconsole.log(printTable(_table, pattern, pattern.length, word, word.length));\n\tconsole.log(printTable(_arrows, pattern, pattern.length, word, word.length));\n\tconsole.log(printTable(_scores, pattern, pattern.length, word, word.length));\n}\n\nfunction isSeparatorAtPos(value: string, index: number): boolean {\n\tif (index < 0 || index >= value.length) {\n\t\treturn false;\n\t}\n\tconst code = value.charCodeAt(index);\n\tswitch (code) {\n\t\tcase CharCode.Underline:\n\t\tcase CharCode.Dash:\n\t\tcase CharCode.Period:\n\t\tcase CharCode.Space:\n\t\tcase CharCode.Slash:\n\t\tcase CharCode.Backslash:\n\t\tcase CharCode.SingleQuote:\n\t\tcase CharCode.DoubleQuote:\n\t\tcase CharCode.Colon:\n\t\tcase CharCode.DollarSign:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction isWhitespaceAtPos(value: string, index: number): boolean {\n\tif (index < 0 || index >= value.length) {\n\t\treturn false;\n\t}\n\tconst code = value.charCodeAt(index);\n\tswitch (code) {\n\t\tcase CharCode.Space:\n\t\tcase CharCode.Tab:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction isUpperCaseAtPos(pos: number, word: string, wordLow: string): boolean {\n\treturn word[pos] !== wordLow[pos];\n}\n\nexport function isPatternInWord(patternLow: string, patternPos: number, patternLen: number, wordLow: string, wordPos: number, wordLen: number): boolean {\n\twhile (patternPos < patternLen && wordPos < wordLen) {\n\t\tif (patternLow[patternPos] === wordLow[wordPos]) {\n\t\t\tpatternPos += 1;\n\t\t}\n\t\twordPos += 1;\n\t}\n\treturn patternPos === patternLen; // pattern must be exhausted\n}\n\nconst enum Arrow { Top = 0b1, Diag = 0b10, Left = 0b100 }\n\n/**\n * A tuple of three values.\n * 0. the score\n * 1. the matches encoded as bitmask (2^53)\n * 2. the offset at which matching started\n */\nexport type FuzzyScore = [number, number, number];\n\nexport namespace FuzzyScore {\n\t/**\n\t * No matches and value `-100`\n\t */\n\texport const Default: [-100, 0, 0] = <[-100, 0, 0]>Object.freeze([-100, 0, 0]);\n\n\texport function isDefault(score?: FuzzyScore): score is [-100, 0, 0] {\n\t\treturn !score || (score[0] === -100 && score[1] === 0 && score[2] === 0);\n\t}\n}\n\nexport interface FuzzyScorer {\n\t(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined;\n}\n\nexport function fuzzyScore(pattern: string, patternLow: string, patternStart: number, word: string, wordLow: string, wordStart: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\n\tconst patternLen = pattern.length > _maxLen ? _maxLen : pattern.length;\n\tconst wordLen = word.length > _maxLen ? _maxLen : word.length;\n\n\tif (patternStart >= patternLen || wordStart >= wordLen || (patternLen - patternStart) > (wordLen - wordStart)) {\n\t\treturn undefined;\n\t}\n\n\t// Run a simple check if the characters of pattern occur\n\t// (in order) at all in word. If that isn't the case we\n\t// stop because no match will be possible\n\tif (!isPatternInWord(patternLow, patternStart, patternLen, wordLow, wordStart, wordLen)) {\n\t\treturn undefined;\n\t}\n\n\tlet row: number = 1;\n\tlet column: number = 1;\n\tlet patternPos = patternStart;\n\tlet wordPos = wordStart;\n\n\tlet hasStrongFirstMatch = false;\n\n\t// There will be a match, fill in tables\n\tfor (row = 1, patternPos = patternStart; patternPos < patternLen; row++, patternPos++) {\n\n\t\tfor (column = 1, wordPos = wordStart; wordPos < wordLen; column++, wordPos++) {\n\n\t\t\tconst score = _doScore(pattern, patternLow, patternPos, patternStart, word, wordLow, wordPos);\n\n\t\t\tif (patternPos === patternStart && score > 1) {\n\t\t\t\thasStrongFirstMatch = true;\n\t\t\t}\n\n\t\t\t_scores[row][column] = score;\n\n\t\t\tconst diag = _table[row - 1][column - 1] + (score > 1 ? 1 : score);\n\t\t\tconst top = _table[row - 1][column] + -1;\n\t\t\tconst left = _table[row][column - 1] + -1;\n\n\t\t\tif (left >= top) {\n\t\t\t\t// left or diag\n\t\t\t\tif (left > diag) {\n\t\t\t\t\t_table[row][column] = left;\n\t\t\t\t\t_arrows[row][column] = Arrow.Left;\n\t\t\t\t} else if (left === diag) {\n\t\t\t\t\t_table[row][column] = left;\n\t\t\t\t\t_arrows[row][column] = Arrow.Left | Arrow.Diag;\n\t\t\t\t} else {\n\t\t\t\t\t_table[row][column] = diag;\n\t\t\t\t\t_arrows[row][column] = Arrow.Diag;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// top or diag\n\t\t\t\tif (top > diag) {\n\t\t\t\t\t_table[row][column] = top;\n\t\t\t\t\t_arrows[row][column] = Arrow.Top;\n\t\t\t\t} else if (top === diag) {\n\t\t\t\t\t_table[row][column] = top;\n\t\t\t\t\t_arrows[row][column] = Arrow.Top | Arrow.Diag;\n\t\t\t\t} else {\n\t\t\t\t\t_table[row][column] = diag;\n\t\t\t\t\t_arrows[row][column] = Arrow.Diag;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (_debug) {\n\t\tprintTables(pattern, patternStart, word, wordStart);\n\t}\n\n\tif (!hasStrongFirstMatch && !firstMatchCanBeWeak) {\n\t\treturn undefined;\n\t}\n\n\t_matchesCount = 0;\n\t_topScore = -100;\n\t_wordStart = wordStart;\n\t_firstMatchCanBeWeak = firstMatchCanBeWeak;\n\n\t_findAllMatches2(row - 1, column - 1, patternLen === wordLen ? 1 : 0, 0, false);\n\tif (_matchesCount === 0) {\n\t\treturn undefined;\n\t}\n\n\treturn [_topScore, _topMatch2, wordStart];\n}\n\nfunction _doScore(pattern: string, patternLow: string, patternPos: number, patternStart: number, word: string, wordLow: string, wordPos: number) {\n\tif (patternLow[patternPos] !== wordLow[wordPos]) {\n\t\treturn -1;\n\t}\n\tif (wordPos === (patternPos - patternStart)) {\n\t\t// common prefix: `foobar <-> foobaz`\n\t\t//                            ^^^^^\n\t\tif (pattern[patternPos] === word[wordPos]) {\n\t\t\treturn 7;\n\t\t} else {\n\t\t\treturn 5;\n\t\t}\n\t} else if (isUpperCaseAtPos(wordPos, word, wordLow) && (wordPos === 0 || !isUpperCaseAtPos(wordPos - 1, word, wordLow))) {\n\t\t// hitting upper-case: `foo <-> forOthers`\n\t\t//                              ^^ ^\n\t\tif (pattern[patternPos] === word[wordPos]) {\n\t\t\treturn 7;\n\t\t} else {\n\t\t\treturn 5;\n\t\t}\n\t} else if (isSeparatorAtPos(wordLow, wordPos) && (wordPos === 0 || !isSeparatorAtPos(wordLow, wordPos - 1))) {\n\t\t// hitting a separator: `. <-> foo.bar`\n\t\t//                                ^\n\t\treturn 5;\n\n\t} else if (isSeparatorAtPos(wordLow, wordPos - 1) || isWhitespaceAtPos(wordLow, wordPos - 1)) {\n\t\t// post separator: `foo <-> bar_foo`\n\t\t//                              ^^^\n\t\treturn 5;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\nlet _matchesCount: number = 0;\nlet _topMatch2: number = 0;\nlet _topScore: number = 0;\nlet _wordStart: number = 0;\nlet _firstMatchCanBeWeak: boolean = false;\n\nfunction _findAllMatches2(row: number, column: number, total: number, matches: number, lastMatched: boolean): void {\n\n\tif (_matchesCount >= 10 || total < -25) {\n\t\t// stop when having already 10 results, or\n\t\t// when a potential alignment as already 5 gaps\n\t\treturn;\n\t}\n\n\tlet simpleMatchCount = 0;\n\n\twhile (row > 0 && column > 0) {\n\n\t\tconst score = _scores[row][column];\n\t\tconst arrow = _arrows[row][column];\n\n\t\tif (arrow === Arrow.Left) {\n\t\t\t// left -> no match, skip a word character\n\t\t\tcolumn -= 1;\n\t\t\tif (lastMatched) {\n\t\t\t\ttotal -= 5; // new gap penalty\n\t\t\t} else if (matches !== 0) {\n\t\t\t\ttotal -= 1; // gap penalty after first match\n\t\t\t}\n\t\t\tlastMatched = false;\n\t\t\tsimpleMatchCount = 0;\n\n\t\t} else if (arrow & Arrow.Diag) {\n\n\t\t\tif (arrow & Arrow.Left) {\n\t\t\t\t// left\n\t\t\t\t_findAllMatches2(\n\t\t\t\t\trow,\n\t\t\t\t\tcolumn - 1,\n\t\t\t\t\tmatches !== 0 ? total - 1 : total, // gap penalty after first match\n\t\t\t\t\tmatches,\n\t\t\t\t\tlastMatched\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// diag\n\t\t\ttotal += score;\n\t\t\trow -= 1;\n\t\t\tcolumn -= 1;\n\t\t\tlastMatched = true;\n\n\t\t\t// match -> set a 1 at the word pos\n\t\t\tmatches += 2 ** (column + _wordStart);\n\n\t\t\t// count simple matches and boost a row of\n\t\t\t// simple matches when they yield in a\n\t\t\t// strong match.\n\t\t\tif (score === 1) {\n\t\t\t\tsimpleMatchCount += 1;\n\n\t\t\t\tif (row === 0 && !_firstMatchCanBeWeak) {\n\t\t\t\t\t// when the first match is a weak\n\t\t\t\t\t// match we discard it\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// boost\n\t\t\t\ttotal += 1 + (simpleMatchCount * (score - 1));\n\t\t\t\tsimpleMatchCount = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\ttotal -= column >= 3 ? 9 : column * 3; // late start penalty\n\n\t// dynamically keep track of the current top score\n\t// and insert the current best score at head, the rest at tail\n\t_matchesCount += 1;\n\tif (total > _topScore) {\n\t\t_topScore = total;\n\t\t_topMatch2 = matches;\n\t}\n}\n\n//#endregion\n\n\n//#region --- graceful ---\n\nexport function fuzzyScoreGracefulAggressive(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\treturn fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, true, firstMatchCanBeWeak);\n}\n\nexport function fuzzyScoreGraceful(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\treturn fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, false, firstMatchCanBeWeak);\n}\n\nfunction fuzzyScoreWithPermutations(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, aggressive: boolean, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\tlet top = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, firstMatchCanBeWeak);\n\n\tif (top && !aggressive) {\n\t\t// when using the original pattern yield a result we`\n\t\t// return it unless we are aggressive and try to find\n\t\t// a better alignment, e.g. `cno` -> `^co^ns^ole` or `^c^o^nsole`.\n\t\treturn top;\n\t}\n\n\tif (pattern.length >= 3) {\n\t\t// When the pattern is long enough then try a few (max 7)\n\t\t// permutations of the pattern to find a better match. The\n\t\t// permutations only swap neighbouring characters, e.g\n\t\t// `cnoso` becomes `conso`, `cnsoo`, `cnoos`.\n\t\tconst tries = Math.min(7, pattern.length - 1);\n\t\tfor (let movingPatternPos = patternPos + 1; movingPatternPos < tries; movingPatternPos++) {\n\t\t\tconst newPattern = nextTypoPermutation(pattern, movingPatternPos);\n\t\t\tif (newPattern) {\n\t\t\t\tconst candidate = fuzzyScore(newPattern, newPattern.toLowerCase(), patternPos, word, lowWord, wordPos, firstMatchCanBeWeak);\n\t\t\t\tif (candidate) {\n\t\t\t\t\tcandidate[0] -= 3; // permutation penalty\n\t\t\t\t\tif (!top || candidate[0] > top[0]) {\n\t\t\t\t\t\ttop = candidate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn top;\n}\n\nfunction nextTypoPermutation(pattern: string, patternPos: number): string | undefined {\n\n\tif (patternPos + 1 >= pattern.length) {\n\t\treturn undefined;\n\t}\n\n\tconst swap1 = pattern[patternPos];\n\tconst swap2 = pattern[patternPos + 1];\n\n\tif (swap1 === swap2) {\n\t\treturn undefined;\n\t}\n\n\treturn pattern.slice(0, patternPos)\n\t\t+ swap2\n\t\t+ swap1\n\t\t+ pattern.slice(patternPos + 2);\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { matchesFuzzy, IMatch } from 'vs/base/common/filters';\nimport { ltrim } from 'vs/base/common/strings';\n\nexport const codiconStartMarker = '$(';\n\nexport interface IParsedCodicons {\n\treadonly text: string;\n\treadonly codiconOffsets?: readonly number[];\n}\n\nexport function parseCodicons(text: string): IParsedCodicons {\n\tconst firstCodiconIndex = text.indexOf(codiconStartMarker);\n\tif (firstCodiconIndex === -1) {\n\t\treturn { text }; // return early if the word does not include an codicon\n\t}\n\n\treturn doParseCodicons(text, firstCodiconIndex);\n}\n\nfunction doParseCodicons(text: string, firstCodiconIndex: number): IParsedCodicons {\n\tconst codiconOffsets: number[] = [];\n\tlet textWithoutCodicons: string = '';\n\n\tfunction appendChars(chars: string) {\n\t\tif (chars) {\n\t\t\ttextWithoutCodicons += chars;\n\n\t\t\tfor (const _ of chars) {\n\t\t\t\tcodiconOffsets.push(codiconsOffset); // make sure to fill in codicon offsets\n\t\t\t}\n\t\t}\n\t}\n\n\tlet currentCodiconStart = -1;\n\tlet currentCodiconValue: string = '';\n\tlet codiconsOffset = 0;\n\n\tlet char: string;\n\tlet nextChar: string;\n\n\tlet offset = firstCodiconIndex;\n\tconst length = text.length;\n\n\t// Append all characters until the first codicon\n\tappendChars(text.substr(0, firstCodiconIndex));\n\n\t// example: $(file-symlink-file) my cool $(other-codicon) entry\n\twhile (offset < length) {\n\t\tchar = text[offset];\n\t\tnextChar = text[offset + 1];\n\n\t\t// beginning of codicon: some value $( <--\n\t\tif (char === codiconStartMarker[0] && nextChar === codiconStartMarker[1]) {\n\t\t\tcurrentCodiconStart = offset;\n\n\t\t\t// if we had a previous potential codicon value without\n\t\t\t// the closing ')', it was actually not an codicon and\n\t\t\t// so we have to add it to the actual value\n\t\t\tappendChars(currentCodiconValue);\n\n\t\t\tcurrentCodiconValue = codiconStartMarker;\n\n\t\t\toffset++; // jump over '('\n\t\t}\n\n\t\t// end of codicon: some value $(some-codicon) <--\n\t\telse if (char === ')' && currentCodiconStart !== -1) {\n\t\t\tconst currentCodiconLength = offset - currentCodiconStart + 1; // +1 to include the closing ')'\n\t\t\tcodiconsOffset += currentCodiconLength;\n\t\t\tcurrentCodiconStart = -1;\n\t\t\tcurrentCodiconValue = '';\n\t\t}\n\n\t\t// within codicon\n\t\telse if (currentCodiconStart !== -1) {\n\t\t\t// Make sure this is a real codicon name\n\t\t\tif (/^[a-z0-9\\-]$/i.test(char)) {\n\t\t\t\tcurrentCodiconValue += char;\n\t\t\t} else {\n\t\t\t\t// This is not a real codicon, treat it as text\n\t\t\t\tappendChars(currentCodiconValue);\n\n\t\t\t\tcurrentCodiconStart = -1;\n\t\t\t\tcurrentCodiconValue = '';\n\t\t\t}\n\t\t}\n\n\t\t// any value outside of codicons\n\t\telse {\n\t\t\tappendChars(char);\n\t\t}\n\n\t\toffset++;\n\t}\n\n\t// if we had a previous potential codicon value without\n\t// the closing ')', it was actually not an codicon and\n\t// so we have to add it to the actual value\n\tappendChars(currentCodiconValue);\n\n\treturn { text: textWithoutCodicons, codiconOffsets };\n}\n\nexport function matchesFuzzyCodiconAware(query: string, target: IParsedCodicons, enableSeparateSubstringMatching = false): IMatch[] | null {\n\tconst { text, codiconOffsets } = target;\n\n\t// Return early if there are no codicon markers in the word to match against\n\tif (!codiconOffsets || codiconOffsets.length === 0) {\n\t\treturn matchesFuzzy(query, text, enableSeparateSubstringMatching);\n\t}\n\n\t// Trim the word to match against because it could have leading\n\t// whitespace now if the word started with an codicon\n\tconst wordToMatchAgainstWithoutCodiconsTrimmed = ltrim(text, ' ');\n\tconst leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutCodiconsTrimmed.length;\n\n\t// match on value without codicons\n\tconst matches = matchesFuzzy(query, wordToMatchAgainstWithoutCodiconsTrimmed, enableSeparateSubstringMatching);\n\n\t// Map matches back to offsets with codicons and trimming\n\tif (matches) {\n\t\tfor (const match of matches) {\n\t\t\tconst codiconOffset = codiconOffsets[match.start + leadingWhitespaceOffset] /* codicon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n\t\t\tmatch.start += codiconOffset;\n\t\t\tmatch.end += codiconOffset;\n\t\t}\n\t}\n\n\treturn matches;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { codiconStartMarker } from 'vs/base/common/codicon';\nimport { Emitter, Event } from 'vs/base/common/event';\n\nexport interface IIconRegistry {\n\treadonly all: IterableIterator<Codicon>;\n\treadonly onDidRegister: Event<Codicon>;\n\tget(id: string): Codicon | undefined;\n}\n\nclass Registry implements IIconRegistry {\n\n\tprivate readonly _icons = new Map<string, Codicon>();\n\tprivate readonly _onDidRegister = new Emitter<Codicon>();\n\n\tpublic add(icon: Codicon) {\n\t\tif (!this._icons.has(icon.id)) {\n\t\t\tthis._icons.set(icon.id, icon);\n\t\t\tthis._onDidRegister.fire(icon);\n\t\t} else {\n\t\t\tconsole.error(`Duplicate registration of codicon ${icon.id}`);\n\t\t}\n\t}\n\n\tpublic get(id: string): Codicon | undefined {\n\t\treturn this._icons.get(id);\n\t}\n\n\tpublic get all(): IterableIterator<Codicon> {\n\t\treturn this._icons.values();\n\t}\n\n\tpublic get onDidRegister(): Event<Codicon> {\n\t\treturn this._onDidRegister.event;\n\t}\n}\n\nconst _registry = new Registry();\n\nexport const iconRegistry: IIconRegistry = _registry;\n\nexport function registerIcon(id: string, def: Codicon) {\n\treturn new Codicon(id, def);\n}\n\nexport class Codicon {\n\tconstructor(public readonly id: string, public readonly definition: Codicon | IconDefinition) {\n\t\t_registry.add(this);\n\t}\n\tpublic get classNames() { return 'codicon codicon-' + this.id; }\n\tpublic get cssSelector() { return '.codicon.codicon-' + this.id; }\n}\n\ninterface IconDefinition {\n\tcharacter: string;\n}\n\nexport namespace Codicon {\n\n\t// built-in icons, with image name\n\texport const add = new Codicon('add', { character: '\\\\ea60' });\n\texport const plus = new Codicon('plus', { character: '\\\\ea60' });\n\texport const gistNew = new Codicon('gist-new', { character: '\\\\ea60' });\n\texport const repoCreate = new Codicon('repo-create', { character: '\\\\ea60' });\n\texport const lightbulb = new Codicon('lightbulb', { character: '\\\\ea61' });\n\texport const lightBulb = new Codicon('light-bulb', { character: '\\\\ea61' });\n\texport const repo = new Codicon('repo', { character: '\\\\ea62' });\n\texport const repoDelete = new Codicon('repo-delete', { character: '\\\\ea62' });\n\texport const gistFork = new Codicon('gist-fork', { character: '\\\\ea63' });\n\texport const repoForked = new Codicon('repo-forked', { character: '\\\\ea63' });\n\texport const gitPullRequest = new Codicon('git-pull-request', { character: '\\\\ea64' });\n\texport const gitPullRequestAbandoned = new Codicon('git-pull-request-abandoned', { character: '\\\\ea64' });\n\texport const recordKeys = new Codicon('record-keys', { character: '\\\\ea65' });\n\texport const keyboard = new Codicon('keyboard', { character: '\\\\ea65' });\n\texport const tag = new Codicon('tag', { character: '\\\\ea66' });\n\texport const tagAdd = new Codicon('tag-add', { character: '\\\\ea66' });\n\texport const tagRemove = new Codicon('tag-remove', { character: '\\\\ea66' });\n\texport const person = new Codicon('person', { character: '\\\\ea67' });\n\texport const personAdd = new Codicon('person-add', { character: '\\\\ea67' });\n\texport const personFollow = new Codicon('person-follow', { character: '\\\\ea67' });\n\texport const personOutline = new Codicon('person-outline', { character: '\\\\ea67' });\n\texport const personFilled = new Codicon('person-filled', { character: '\\\\ea67' });\n\texport const gitBranch = new Codicon('git-branch', { character: '\\\\ea68' });\n\texport const gitBranchCreate = new Codicon('git-branch-create', { character: '\\\\ea68' });\n\texport const gitBranchDelete = new Codicon('git-branch-delete', { character: '\\\\ea68' });\n\texport const sourceControl = new Codicon('source-control', { character: '\\\\ea68' });\n\texport const mirror = new Codicon('mirror', { character: '\\\\ea69' });\n\texport const mirrorPublic = new Codicon('mirror-public', { character: '\\\\ea69' });\n\texport const star = new Codicon('star', { character: '\\\\ea6a' });\n\texport const starAdd = new Codicon('star-add', { character: '\\\\ea6a' });\n\texport const starDelete = new Codicon('star-delete', { character: '\\\\ea6a' });\n\texport const starEmpty = new Codicon('star-empty', { character: '\\\\ea6a' });\n\texport const comment = new Codicon('comment', { character: '\\\\ea6b' });\n\texport const commentAdd = new Codicon('comment-add', { character: '\\\\ea6b' });\n\texport const alert = new Codicon('alert', { character: '\\\\ea6c' });\n\texport const warning = new Codicon('warning', { character: '\\\\ea6c' });\n\texport const search = new Codicon('search', { character: '\\\\ea6d' });\n\texport const searchSave = new Codicon('search-save', { character: '\\\\ea6d' });\n\texport const logOut = new Codicon('log-out', { character: '\\\\ea6e' });\n\texport const signOut = new Codicon('sign-out', { character: '\\\\ea6e' });\n\texport const logIn = new Codicon('log-in', { character: '\\\\ea6f' });\n\texport const signIn = new Codicon('sign-in', { character: '\\\\ea6f' });\n\texport const eye = new Codicon('eye', { character: '\\\\ea70' });\n\texport const eyeUnwatch = new Codicon('eye-unwatch', { character: '\\\\ea70' });\n\texport const eyeWatch = new Codicon('eye-watch', { character: '\\\\ea70' });\n\texport const circleFilled = new Codicon('circle-filled', { character: '\\\\ea71' });\n\texport const primitiveDot = new Codicon('primitive-dot', { character: '\\\\ea71' });\n\texport const closeDirty = new Codicon('close-dirty', { character: '\\\\ea71' });\n\texport const debugBreakpoint = new Codicon('debug-breakpoint', { character: '\\\\ea71' });\n\texport const debugBreakpointDisabled = new Codicon('debug-breakpoint-disabled', { character: '\\\\ea71' });\n\texport const debugHint = new Codicon('debug-hint', { character: '\\\\ea71' });\n\texport const primitiveSquare = new Codicon('primitive-square', { character: '\\\\ea72' });\n\texport const edit = new Codicon('edit', { character: '\\\\ea73' });\n\texport const pencil = new Codicon('pencil', { character: '\\\\ea73' });\n\texport const info = new Codicon('info', { character: '\\\\ea74' });\n\texport const issueOpened = new Codicon('issue-opened', { character: '\\\\ea74' });\n\texport const gistPrivate = new Codicon('gist-private', { character: '\\\\ea75' });\n\texport const gitForkPrivate = new Codicon('git-fork-private', { character: '\\\\ea75' });\n\texport const lock = new Codicon('lock', { character: '\\\\ea75' });\n\texport const mirrorPrivate = new Codicon('mirror-private', { character: '\\\\ea75' });\n\texport const close = new Codicon('close', { character: '\\\\ea76' });\n\texport const removeClose = new Codicon('remove-close', { character: '\\\\ea76' });\n\texport const x = new Codicon('x', { character: '\\\\ea76' });\n\texport const repoSync = new Codicon('repo-sync', { character: '\\\\ea77' });\n\texport const sync = new Codicon('sync', { character: '\\\\ea77' });\n\texport const clone = new Codicon('clone', { character: '\\\\ea78' });\n\texport const desktopDownload = new Codicon('desktop-download', { character: '\\\\ea78' });\n\texport const beaker = new Codicon('beaker', { character: '\\\\ea79' });\n\texport const microscope = new Codicon('microscope', { character: '\\\\ea79' });\n\texport const vm = new Codicon('vm', { character: '\\\\ea7a' });\n\texport const deviceDesktop = new Codicon('device-desktop', { character: '\\\\ea7a' });\n\texport const file = new Codicon('file', { character: '\\\\ea7b' });\n\texport const fileText = new Codicon('file-text', { character: '\\\\ea7b' });\n\texport const more = new Codicon('more', { character: '\\\\ea7c' });\n\texport const ellipsis = new Codicon('ellipsis', { character: '\\\\ea7c' });\n\texport const kebabHorizontal = new Codicon('kebab-horizontal', { character: '\\\\ea7c' });\n\texport const mailReply = new Codicon('mail-reply', { character: '\\\\ea7d' });\n\texport const reply = new Codicon('reply', { character: '\\\\ea7d' });\n\texport const organization = new Codicon('organization', { character: '\\\\ea7e' });\n\texport const organizationFilled = new Codicon('organization-filled', { character: '\\\\ea7e' });\n\texport const organizationOutline = new Codicon('organization-outline', { character: '\\\\ea7e' });\n\texport const newFile = new Codicon('new-file', { character: '\\\\ea7f' });\n\texport const fileAdd = new Codicon('file-add', { character: '\\\\ea7f' });\n\texport const newFolder = new Codicon('new-folder', { character: '\\\\ea80' });\n\texport const fileDirectoryCreate = new Codicon('file-directory-create', { character: '\\\\ea80' });\n\texport const trash = new Codicon('trash', { character: '\\\\ea81' });\n\texport const trashcan = new Codicon('trashcan', { character: '\\\\ea81' });\n\texport const history = new Codicon('history', { character: '\\\\ea82' });\n\texport const clock = new Codicon('clock', { character: '\\\\ea82' });\n\texport const folder = new Codicon('folder', { character: '\\\\ea83' });\n\texport const fileDirectory = new Codicon('file-directory', { character: '\\\\ea83' });\n\texport const symbolFolder = new Codicon('symbol-folder', { character: '\\\\ea83' });\n\texport const logoGithub = new Codicon('logo-github', { character: '\\\\ea84' });\n\texport const markGithub = new Codicon('mark-github', { character: '\\\\ea84' });\n\texport const github = new Codicon('github', { character: '\\\\ea84' });\n\texport const terminal = new Codicon('terminal', { character: '\\\\ea85' });\n\texport const console = new Codicon('console', { character: '\\\\ea85' });\n\texport const repl = new Codicon('repl', { character: '\\\\ea85' });\n\texport const zap = new Codicon('zap', { character: '\\\\ea86' });\n\texport const symbolEvent = new Codicon('symbol-event', { character: '\\\\ea86' });\n\texport const error = new Codicon('error', { character: '\\\\ea87' });\n\texport const stop = new Codicon('stop', { character: '\\\\ea87' });\n\texport const variable = new Codicon('variable', { character: '\\\\ea88' });\n\texport const symbolVariable = new Codicon('symbol-variable', { character: '\\\\ea88' });\n\texport const array = new Codicon('array', { character: '\\\\ea8a' });\n\texport const symbolArray = new Codicon('symbol-array', { character: '\\\\ea8a' });\n\texport const symbolModule = new Codicon('symbol-module', { character: '\\\\ea8b' });\n\texport const symbolPackage = new Codicon('symbol-package', { character: '\\\\ea8b' });\n\texport const symbolNamespace = new Codicon('symbol-namespace', { character: '\\\\ea8b' });\n\texport const symbolObject = new Codicon('symbol-object', { character: '\\\\ea8b' });\n\texport const symbolMethod = new Codicon('symbol-method', { character: '\\\\ea8c' });\n\texport const symbolFunction = new Codicon('symbol-function', { character: '\\\\ea8c' });\n\texport const symbolConstructor = new Codicon('symbol-constructor', { character: '\\\\ea8c' });\n\texport const symbolBoolean = new Codicon('symbol-boolean', { character: '\\\\ea8f' });\n\texport const symbolNull = new Codicon('symbol-null', { character: '\\\\ea8f' });\n\texport const symbolNumeric = new Codicon('symbol-numeric', { character: '\\\\ea90' });\n\texport const symbolNumber = new Codicon('symbol-number', { character: '\\\\ea90' });\n\texport const symbolStructure = new Codicon('symbol-structure', { character: '\\\\ea91' });\n\texport const symbolStruct = new Codicon('symbol-struct', { character: '\\\\ea91' });\n\texport const symbolParameter = new Codicon('symbol-parameter', { character: '\\\\ea92' });\n\texport const symbolTypeParameter = new Codicon('symbol-type-parameter', { character: '\\\\ea92' });\n\texport const symbolKey = new Codicon('symbol-key', { character: '\\\\ea93' });\n\texport const symbolText = new Codicon('symbol-text', { character: '\\\\ea93' });\n\texport const symbolReference = new Codicon('symbol-reference', { character: '\\\\ea94' });\n\texport const goToFile = new Codicon('go-to-file', { character: '\\\\ea94' });\n\texport const symbolEnum = new Codicon('symbol-enum', { character: '\\\\ea95' });\n\texport const symbolValue = new Codicon('symbol-value', { character: '\\\\ea95' });\n\texport const symbolRuler = new Codicon('symbol-ruler', { character: '\\\\ea96' });\n\texport const symbolUnit = new Codicon('symbol-unit', { character: '\\\\ea96' });\n\texport const activateBreakpoints = new Codicon('activate-breakpoints', { character: '\\\\ea97' });\n\texport const archive = new Codicon('archive', { character: '\\\\ea98' });\n\texport const arrowBoth = new Codicon('arrow-both', { character: '\\\\ea99' });\n\texport const arrowDown = new Codicon('arrow-down', { character: '\\\\ea9a' });\n\texport const arrowLeft = new Codicon('arrow-left', { character: '\\\\ea9b' });\n\texport const arrowRight = new Codicon('arrow-right', { character: '\\\\ea9c' });\n\texport const arrowSmallDown = new Codicon('arrow-small-down', { character: '\\\\ea9d' });\n\texport const arrowSmallLeft = new Codicon('arrow-small-left', { character: '\\\\ea9e' });\n\texport const arrowSmallRight = new Codicon('arrow-small-right', { character: '\\\\ea9f' });\n\texport const arrowSmallUp = new Codicon('arrow-small-up', { character: '\\\\eaa0' });\n\texport const arrowUp = new Codicon('arrow-up', { character: '\\\\eaa1' });\n\texport const bell = new Codicon('bell', { character: '\\\\eaa2' });\n\texport const bold = new Codicon('bold', { character: '\\\\eaa3' });\n\texport const book = new Codicon('book', { character: '\\\\eaa4' });\n\texport const bookmark = new Codicon('bookmark', { character: '\\\\eaa5' });\n\texport const debugBreakpointConditionalUnverified = new Codicon('debug-breakpoint-conditional-unverified', { character: '\\\\eaa6' });\n\texport const debugBreakpointConditional = new Codicon('debug-breakpoint-conditional', { character: '\\\\eaa7' });\n\texport const debugBreakpointConditionalDisabled = new Codicon('debug-breakpoint-conditional-disabled', { character: '\\\\eaa7' });\n\texport const debugBreakpointDataUnverified = new Codicon('debug-breakpoint-data-unverified', { character: '\\\\eaa8' });\n\texport const debugBreakpointData = new Codicon('debug-breakpoint-data', { character: '\\\\eaa9' });\n\texport const debugBreakpointDataDisabled = new Codicon('debug-breakpoint-data-disabled', { character: '\\\\eaa9' });\n\texport const debugBreakpointLogUnverified = new Codicon('debug-breakpoint-log-unverified', { character: '\\\\eaaa' });\n\texport const debugBreakpointLog = new Codicon('debug-breakpoint-log', { character: '\\\\eaab' });\n\texport const debugBreakpointLogDisabled = new Codicon('debug-breakpoint-log-disabled', { character: '\\\\eaab' });\n\texport const briefcase = new Codicon('briefcase', { character: '\\\\eaac' });\n\texport const broadcast = new Codicon('broadcast', { character: '\\\\eaad' });\n\texport const browser = new Codicon('browser', { character: '\\\\eaae' });\n\texport const bug = new Codicon('bug', { character: '\\\\eaaf' });\n\texport const calendar = new Codicon('calendar', { character: '\\\\eab0' });\n\texport const caseSensitive = new Codicon('case-sensitive', { character: '\\\\eab1' });\n\texport const check = new Codicon('check', { character: '\\\\eab2' });\n\texport const checklist = new Codicon('checklist', { character: '\\\\eab3' });\n\texport const chevronDown = new Codicon('chevron-down', { character: '\\\\eab4' });\n\texport const chevronLeft = new Codicon('chevron-left', { character: '\\\\eab5' });\n\texport const chevronRight = new Codicon('chevron-right', { character: '\\\\eab6' });\n\texport const chevronUp = new Codicon('chevron-up', { character: '\\\\eab7' });\n\texport const chromeClose = new Codicon('chrome-close', { character: '\\\\eab8' });\n\texport const chromeMaximize = new Codicon('chrome-maximize', { character: '\\\\eab9' });\n\texport const chromeMinimize = new Codicon('chrome-minimize', { character: '\\\\eaba' });\n\texport const chromeRestore = new Codicon('chrome-restore', { character: '\\\\eabb' });\n\texport const circleOutline = new Codicon('circle-outline', { character: '\\\\eabc' });\n\texport const debugBreakpointUnverified = new Codicon('debug-breakpoint-unverified', { character: '\\\\eabc' });\n\texport const circleSlash = new Codicon('circle-slash', { character: '\\\\eabd' });\n\texport const circuitBoard = new Codicon('circuit-board', { character: '\\\\eabe' });\n\texport const clearAll = new Codicon('clear-all', { character: '\\\\eabf' });\n\texport const clippy = new Codicon('clippy', { character: '\\\\eac0' });\n\texport const closeAll = new Codicon('close-all', { character: '\\\\eac1' });\n\texport const cloudDownload = new Codicon('cloud-download', { character: '\\\\eac2' });\n\texport const cloudUpload = new Codicon('cloud-upload', { character: '\\\\eac3' });\n\texport const code = new Codicon('code', { character: '\\\\eac4' });\n\texport const collapseAll = new Codicon('collapse-all', { character: '\\\\eac5' });\n\texport const colorMode = new Codicon('color-mode', { character: '\\\\eac6' });\n\texport const commentDiscussion = new Codicon('comment-discussion', { character: '\\\\eac7' });\n\texport const compareChanges = new Codicon('compare-changes', { character: '\\\\eac8' });\n\texport const creditCard = new Codicon('credit-card', { character: '\\\\eac9' });\n\texport const dash = new Codicon('dash', { character: '\\\\eacc' });\n\texport const dashboard = new Codicon('dashboard', { character: '\\\\eacd' });\n\texport const database = new Codicon('database', { character: '\\\\eace' });\n\texport const debugContinue = new Codicon('debug-continue', { character: '\\\\eacf' });\n\texport const debugDisconnect = new Codicon('debug-disconnect', { character: '\\\\ead0' });\n\texport const debugPause = new Codicon('debug-pause', { character: '\\\\ead1' });\n\texport const debugRestart = new Codicon('debug-restart', { character: '\\\\ead2' });\n\texport const debugStart = new Codicon('debug-start', { character: '\\\\ead3' });\n\texport const debugStepInto = new Codicon('debug-step-into', { character: '\\\\ead4' });\n\texport const debugStepOut = new Codicon('debug-step-out', { character: '\\\\ead5' });\n\texport const debugStepOver = new Codicon('debug-step-over', { character: '\\\\ead6' });\n\texport const debugStop = new Codicon('debug-stop', { character: '\\\\ead7' });\n\texport const debug = new Codicon('debug', { character: '\\\\ead8' });\n\texport const deviceCameraVideo = new Codicon('device-camera-video', { character: '\\\\ead9' });\n\texport const deviceCamera = new Codicon('device-camera', { character: '\\\\eada' });\n\texport const deviceMobile = new Codicon('device-mobile', { character: '\\\\eadb' });\n\texport const diffAdded = new Codicon('diff-added', { character: '\\\\eadc' });\n\texport const diffIgnored = new Codicon('diff-ignored', { character: '\\\\eadd' });\n\texport const diffModified = new Codicon('diff-modified', { character: '\\\\eade' });\n\texport const diffRemoved = new Codicon('diff-removed', { character: '\\\\eadf' });\n\texport const diffRenamed = new Codicon('diff-renamed', { character: '\\\\eae0' });\n\texport const diff = new Codicon('diff', { character: '\\\\eae1' });\n\texport const discard = new Codicon('discard', { character: '\\\\eae2' });\n\texport const editorLayout = new Codicon('editor-layout', { character: '\\\\eae3' });\n\texport const emptyWindow = new Codicon('empty-window', { character: '\\\\eae4' });\n\texport const exclude = new Codicon('exclude', { character: '\\\\eae5' });\n\texport const extensions = new Codicon('extensions', { character: '\\\\eae6' });\n\texport const eyeClosed = new Codicon('eye-closed', { character: '\\\\eae7' });\n\texport const fileBinary = new Codicon('file-binary', { character: '\\\\eae8' });\n\texport const fileCode = new Codicon('file-code', { character: '\\\\eae9' });\n\texport const fileMedia = new Codicon('file-media', { character: '\\\\eaea' });\n\texport const filePdf = new Codicon('file-pdf', { character: '\\\\eaeb' });\n\texport const fileSubmodule = new Codicon('file-submodule', { character: '\\\\eaec' });\n\texport const fileSymlinkDirectory = new Codicon('file-symlink-directory', { character: '\\\\eaed' });\n\texport const fileSymlinkFile = new Codicon('file-symlink-file', { character: '\\\\eaee' });\n\texport const fileZip = new Codicon('file-zip', { character: '\\\\eaef' });\n\texport const files = new Codicon('files', { character: '\\\\eaf0' });\n\texport const filter = new Codicon('filter', { character: '\\\\eaf1' });\n\texport const flame = new Codicon('flame', { character: '\\\\eaf2' });\n\texport const foldDown = new Codicon('fold-down', { character: '\\\\eaf3' });\n\texport const foldUp = new Codicon('fold-up', { character: '\\\\eaf4' });\n\texport const fold = new Codicon('fold', { character: '\\\\eaf5' });\n\texport const folderActive = new Codicon('folder-active', { character: '\\\\eaf6' });\n\texport const folderOpened = new Codicon('folder-opened', { character: '\\\\eaf7' });\n\texport const gear = new Codicon('gear', { character: '\\\\eaf8' });\n\texport const gift = new Codicon('gift', { character: '\\\\eaf9' });\n\texport const gistSecret = new Codicon('gist-secret', { character: '\\\\eafa' });\n\texport const gist = new Codicon('gist', { character: '\\\\eafb' });\n\texport const gitCommit = new Codicon('git-commit', { character: '\\\\eafc' });\n\texport const gitCompare = new Codicon('git-compare', { character: '\\\\eafd' });\n\texport const gitMerge = new Codicon('git-merge', { character: '\\\\eafe' });\n\texport const githubAction = new Codicon('github-action', { character: '\\\\eaff' });\n\texport const githubAlt = new Codicon('github-alt', { character: '\\\\eb00' });\n\texport const globe = new Codicon('globe', { character: '\\\\eb01' });\n\texport const grabber = new Codicon('grabber', { character: '\\\\eb02' });\n\texport const graph = new Codicon('graph', { character: '\\\\eb03' });\n\texport const gripper = new Codicon('gripper', { character: '\\\\eb04' });\n\texport const heart = new Codicon('heart', { character: '\\\\eb05' });\n\texport const home = new Codicon('home', { character: '\\\\eb06' });\n\texport const horizontalRule = new Codicon('horizontal-rule', { character: '\\\\eb07' });\n\texport const hubot = new Codicon('hubot', { character: '\\\\eb08' });\n\texport const inbox = new Codicon('inbox', { character: '\\\\eb09' });\n\texport const issueClosed = new Codicon('issue-closed', { character: '\\\\eb0a' });\n\texport const issueReopened = new Codicon('issue-reopened', { character: '\\\\eb0b' });\n\texport const issues = new Codicon('issues', { character: '\\\\eb0c' });\n\texport const italic = new Codicon('italic', { character: '\\\\eb0d' });\n\texport const jersey = new Codicon('jersey', { character: '\\\\eb0e' });\n\texport const json = new Codicon('json', { character: '\\\\eb0f' });\n\texport const kebabVertical = new Codicon('kebab-vertical', { character: '\\\\eb10' });\n\texport const key = new Codicon('key', { character: '\\\\eb11' });\n\texport const law = new Codicon('law', { character: '\\\\eb12' });\n\texport const lightbulbAutofix = new Codicon('lightbulb-autofix', { character: '\\\\eb13' });\n\texport const linkExternal = new Codicon('link-external', { character: '\\\\eb14' });\n\texport const link = new Codicon('link', { character: '\\\\eb15' });\n\texport const listOrdered = new Codicon('list-ordered', { character: '\\\\eb16' });\n\texport const listUnordered = new Codicon('list-unordered', { character: '\\\\eb17' });\n\texport const liveShare = new Codicon('live-share', { character: '\\\\eb18' });\n\texport const loading = new Codicon('loading', { character: '\\\\eb19' });\n\texport const location = new Codicon('location', { character: '\\\\eb1a' });\n\texport const mailRead = new Codicon('mail-read', { character: '\\\\eb1b' });\n\texport const mail = new Codicon('mail', { character: '\\\\eb1c' });\n\texport const markdown = new Codicon('markdown', { character: '\\\\eb1d' });\n\texport const megaphone = new Codicon('megaphone', { character: '\\\\eb1e' });\n\texport const mention = new Codicon('mention', { character: '\\\\eb1f' });\n\texport const milestone = new Codicon('milestone', { character: '\\\\eb20' });\n\texport const mortarBoard = new Codicon('mortar-board', { character: '\\\\eb21' });\n\texport const move = new Codicon('move', { character: '\\\\eb22' });\n\texport const multipleWindows = new Codicon('multiple-windows', { character: '\\\\eb23' });\n\texport const mute = new Codicon('mute', { character: '\\\\eb24' });\n\texport const noNewline = new Codicon('no-newline', { character: '\\\\eb25' });\n\texport const note = new Codicon('note', { character: '\\\\eb26' });\n\texport const octoface = new Codicon('octoface', { character: '\\\\eb27' });\n\texport const openPreview = new Codicon('open-preview', { character: '\\\\eb28' });\n\texport const package_ = new Codicon('package', { character: '\\\\eb29' });\n\texport const paintcan = new Codicon('paintcan', { character: '\\\\eb2a' });\n\texport const pin = new Codicon('pin', { character: '\\\\eb2b' });\n\texport const play = new Codicon('play', { character: '\\\\eb2c' });\n\texport const run = new Codicon('run', { character: '\\\\eb2c' });\n\texport const plug = new Codicon('plug', { character: '\\\\eb2d' });\n\texport const preserveCase = new Codicon('preserve-case', { character: '\\\\eb2e' });\n\texport const preview = new Codicon('preview', { character: '\\\\eb2f' });\n\texport const project = new Codicon('project', { character: '\\\\eb30' });\n\texport const pulse = new Codicon('pulse', { character: '\\\\eb31' });\n\texport const question = new Codicon('question', { character: '\\\\eb32' });\n\texport const quote = new Codicon('quote', { character: '\\\\eb33' });\n\texport const radioTower = new Codicon('radio-tower', { character: '\\\\eb34' });\n\texport const reactions = new Codicon('reactions', { character: '\\\\eb35' });\n\texport const references = new Codicon('references', { character: '\\\\eb36' });\n\texport const refresh = new Codicon('refresh', { character: '\\\\eb37' });\n\texport const regex = new Codicon('regex', { character: '\\\\eb38' });\n\texport const remoteExplorer = new Codicon('remote-explorer', { character: '\\\\eb39' });\n\texport const remote = new Codicon('remote', { character: '\\\\eb3a' });\n\texport const remove = new Codicon('remove', { character: '\\\\eb3b' });\n\texport const replaceAll = new Codicon('replace-all', { character: '\\\\eb3c' });\n\texport const replace = new Codicon('replace', { character: '\\\\eb3d' });\n\texport const repoClone = new Codicon('repo-clone', { character: '\\\\eb3e' });\n\texport const repoForcePush = new Codicon('repo-force-push', { character: '\\\\eb3f' });\n\texport const repoPull = new Codicon('repo-pull', { character: '\\\\eb40' });\n\texport const repoPush = new Codicon('repo-push', { character: '\\\\eb41' });\n\texport const report = new Codicon('report', { character: '\\\\eb42' });\n\texport const requestChanges = new Codicon('request-changes', { character: '\\\\eb43' });\n\texport const rocket = new Codicon('rocket', { character: '\\\\eb44' });\n\texport const rootFolderOpened = new Codicon('root-folder-opened', { character: '\\\\eb45' });\n\texport const rootFolder = new Codicon('root-folder', { character: '\\\\eb46' });\n\texport const rss = new Codicon('rss', { character: '\\\\eb47' });\n\texport const ruby = new Codicon('ruby', { character: '\\\\eb48' });\n\texport const saveAll = new Codicon('save-all', { character: '\\\\eb49' });\n\texport const saveAs = new Codicon('save-as', { character: '\\\\eb4a' });\n\texport const save = new Codicon('save', { character: '\\\\eb4b' });\n\texport const screenFull = new Codicon('screen-full', { character: '\\\\eb4c' });\n\texport const screenNormal = new Codicon('screen-normal', { character: '\\\\eb4d' });\n\texport const searchStop = new Codicon('search-stop', { character: '\\\\eb4e' });\n\texport const server = new Codicon('server', { character: '\\\\eb50' });\n\texport const settingsGear = new Codicon('settings-gear', { character: '\\\\eb51' });\n\texport const settings = new Codicon('settings', { character: '\\\\eb52' });\n\texport const shield = new Codicon('shield', { character: '\\\\eb53' });\n\texport const smiley = new Codicon('smiley', { character: '\\\\eb54' });\n\texport const sortPrecedence = new Codicon('sort-precedence', { character: '\\\\eb55' });\n\texport const splitHorizontal = new Codicon('split-horizontal', { character: '\\\\eb56' });\n\texport const splitVertical = new Codicon('split-vertical', { character: '\\\\eb57' });\n\texport const squirrel = new Codicon('squirrel', { character: '\\\\eb58' });\n\texport const starFull = new Codicon('star-full', { character: '\\\\eb59' });\n\texport const starHalf = new Codicon('star-half', { character: '\\\\eb5a' });\n\texport const symbolClass = new Codicon('symbol-class', { character: '\\\\eb5b' });\n\texport const symbolColor = new Codicon('symbol-color', { character: '\\\\eb5c' });\n\texport const symbolConstant = new Codicon('symbol-constant', { character: '\\\\eb5d' });\n\texport const symbolEnumMember = new Codicon('symbol-enum-member', { character: '\\\\eb5e' });\n\texport const symbolField = new Codicon('symbol-field', { character: '\\\\eb5f' });\n\texport const symbolFile = new Codicon('symbol-file', { character: '\\\\eb60' });\n\texport const symbolInterface = new Codicon('symbol-interface', { character: '\\\\eb61' });\n\texport const symbolKeyword = new Codicon('symbol-keyword', { character: '\\\\eb62' });\n\texport const symbolMisc = new Codicon('symbol-misc', { character: '\\\\eb63' });\n\texport const symbolOperator = new Codicon('symbol-operator', { character: '\\\\eb64' });\n\texport const symbolProperty = new Codicon('symbol-property', { character: '\\\\eb65' });\n\texport const wrench = new Codicon('wrench', { character: '\\\\eb65' });\n\texport const wrenchSubaction = new Codicon('wrench-subaction', { character: '\\\\eb65' });\n\texport const symbolSnippet = new Codicon('symbol-snippet', { character: '\\\\eb66' });\n\texport const tasklist = new Codicon('tasklist', { character: '\\\\eb67' });\n\texport const telescope = new Codicon('telescope', { character: '\\\\eb68' });\n\texport const textSize = new Codicon('text-size', { character: '\\\\eb69' });\n\texport const threeBars = new Codicon('three-bars', { character: '\\\\eb6a' });\n\texport const thumbsdown = new Codicon('thumbsdown', { character: '\\\\eb6b' });\n\texport const thumbsup = new Codicon('thumbsup', { character: '\\\\eb6c' });\n\texport const tools = new Codicon('tools', { character: '\\\\eb6d' });\n\texport const triangleDown = new Codicon('triangle-down', { character: '\\\\eb6e' });\n\texport const triangleLeft = new Codicon('triangle-left', { character: '\\\\eb6f' });\n\texport const triangleRight = new Codicon('triangle-right', { character: '\\\\eb70' });\n\texport const triangleUp = new Codicon('triangle-up', { character: '\\\\eb71' });\n\texport const twitter = new Codicon('twitter', { character: '\\\\eb72' });\n\texport const unfold = new Codicon('unfold', { character: '\\\\eb73' });\n\texport const unlock = new Codicon('unlock', { character: '\\\\eb74' });\n\texport const unmute = new Codicon('unmute', { character: '\\\\eb75' });\n\texport const unverified = new Codicon('unverified', { character: '\\\\eb76' });\n\texport const verified = new Codicon('verified', { character: '\\\\eb77' });\n\texport const versions = new Codicon('versions', { character: '\\\\eb78' });\n\texport const vmActive = new Codicon('vm-active', { character: '\\\\eb79' });\n\texport const vmOutline = new Codicon('vm-outline', { character: '\\\\eb7a' });\n\texport const vmRunning = new Codicon('vm-running', { character: '\\\\eb7b' });\n\texport const watch = new Codicon('watch', { character: '\\\\eb7c' });\n\texport const whitespace = new Codicon('whitespace', { character: '\\\\eb7d' });\n\texport const wholeWord = new Codicon('whole-word', { character: '\\\\eb7e' });\n\texport const window = new Codicon('window', { character: '\\\\eb7f' });\n\texport const wordWrap = new Codicon('word-wrap', { character: '\\\\eb80' });\n\texport const zoomIn = new Codicon('zoom-in', { character: '\\\\eb81' });\n\texport const zoomOut = new Codicon('zoom-out', { character: '\\\\eb82' });\n\texport const listFilter = new Codicon('list-filter', { character: '\\\\eb83' });\n\texport const listFlat = new Codicon('list-flat', { character: '\\\\eb84' });\n\texport const listSelection = new Codicon('list-selection', { character: '\\\\eb85' });\n\texport const selection = new Codicon('selection', { character: '\\\\eb85' });\n\texport const listTree = new Codicon('list-tree', { character: '\\\\eb86' });\n\texport const debugBreakpointFunctionUnverified = new Codicon('debug-breakpoint-function-unverified', { character: '\\\\eb87' });\n\texport const debugBreakpointFunction = new Codicon('debug-breakpoint-function', { character: '\\\\eb88' });\n\texport const debugBreakpointFunctionDisabled = new Codicon('debug-breakpoint-function-disabled', { character: '\\\\eb88' });\n\texport const debugStackframeActive = new Codicon('debug-stackframe-active', { character: '\\\\eb89' });\n\texport const debugStackframeDot = new Codicon('debug-stackframe-dot', { character: '\\\\eb8a' });\n\texport const debugStackframe = new Codicon('debug-stackframe', { character: '\\\\eb8b' });\n\texport const debugStackframeFocused = new Codicon('debug-stackframe-focused', { character: '\\\\eb8b' });\n\texport const debugBreakpointUnsupported = new Codicon('debug-breakpoint-unsupported', { character: '\\\\eb8c' });\n\texport const symbolString = new Codicon('symbol-string', { character: '\\\\eb8d' });\n\texport const debugReverseContinue = new Codicon('debug-reverse-continue', { character: '\\\\eb8e' });\n\texport const debugStepBack = new Codicon('debug-step-back', { character: '\\\\eb8f' });\n\texport const debugRestartFrame = new Codicon('debug-restart-frame', { character: '\\\\eb90' });\n\texport const debugAlternate = new Codicon('debug-alternate', { character: '\\\\eb91' });\n\texport const callIncoming = new Codicon('call-incoming', { character: '\\\\eb92' });\n\texport const callOutgoing = new Codicon('call-outgoing', { character: '\\\\eb93' });\n\texport const menu = new Codicon('menu', { character: '\\\\eb94' });\n\texport const expandAll = new Codicon('expand-all', { character: '\\\\eb95' });\n\texport const feedback = new Codicon('feedback', { character: '\\\\eb96' });\n\texport const groupByRefType = new Codicon('group-by-ref-type', { character: '\\\\eb97' });\n\texport const ungroupByRefType = new Codicon('ungroup-by-ref-type', { character: '\\\\eb98' });\n\texport const account = new Codicon('account', { character: '\\\\eb99' });\n\texport const bellDot = new Codicon('bell-dot', { character: '\\\\eb9a' });\n\texport const debugConsole = new Codicon('debug-console', { character: '\\\\eb9b' });\n\texport const library = new Codicon('library', { character: '\\\\eb9c' });\n\texport const output = new Codicon('output', { character: '\\\\eb9d' });\n\texport const runAll = new Codicon('run-all', { character: '\\\\eb9e' });\n\texport const syncIgnored = new Codicon('sync-ignored', { character: '\\\\eb9f' });\n\texport const pinned = new Codicon('pinned', { character: '\\\\eba0' });\n\texport const githubInverted = new Codicon('github-inverted', { character: '\\\\eba1' });\n\texport const debugAlt2 = new Codicon('debug-alt-2', { character: '\\\\f101' });\n\texport const debugAlt = new Codicon('debug-alt', { character: '\\\\f102' });\n}\n\n\n\n\nconst escapeCodiconsRegex = /(\\\\)?\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)/gi;\nexport function escapeCodicons(text: string): string {\n\treturn text.replace(escapeCodiconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\n\nconst markdownEscapedCodiconsRegex = /\\\\\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)/gi;\nexport function markdownEscapeEscapedCodicons(text: string): string {\n\t// Need to add an extra \\ for escaping in markdown\n\treturn text.replace(markdownEscapedCodiconsRegex, match => `\\\\${match}`);\n}\n\nconst markdownUnescapeCodiconsRegex = /(\\\\)?\\$\\\\\\(([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?)\\\\\\)/gi;\nexport function markdownUnescapeCodicons(text: string): string {\n\treturn text.replace(markdownUnescapeCodiconsRegex, (match, escaped, codicon) => escaped ? match : `$(${codicon})`);\n}\n\nconst renderCodiconsRegex = /(\\\\)?\\$\\((([a-z0-9\\-]+?)(?:~([a-z0-9\\-]*?))?)\\)/gi;\nexport function renderCodicons(text: string): string {\n\treturn text.replace(renderCodiconsRegex, (_, escaped, codicon, name, animation) => {\n\t\treturn escaped\n\t\t\t? `$(${codicon})`\n\t\t\t: `<span class=\"codicon codicon-${name}${animation ? ` codicon-animation-${animation}` : ''}\"></span>`;\n\t});\n}\n\nconst stripCodiconsRegex = /(\\s)?(\\\\)?\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)(\\s)?/gi;\nexport function stripCodicons(text: string): string {\n\tif (text.indexOf(codiconStartMarker) === -1) {\n\t\treturn text;\n\t}\n\n\treturn text.replace(stripCodiconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { UriComponents } from 'vs/base/common/uri';\nimport { escapeCodicons } from 'vs/base/common/codicons';\n\nexport interface IMarkdownString {\n\treadonly value: string;\n\treadonly isTrusted?: boolean;\n\treadonly supportThemeIcons?: boolean;\n\turis?: { [href: string]: UriComponents };\n}\n\nexport class MarkdownString implements IMarkdownString {\n\tprivate readonly _isTrusted: boolean;\n\tprivate readonly _supportThemeIcons: boolean;\n\n\tconstructor(\n\t\tprivate _value: string = '',\n\t\tisTrustedOrOptions: boolean | { isTrusted?: boolean, supportThemeIcons?: boolean } = false,\n\t) {\n\t\tif (typeof isTrustedOrOptions === 'boolean') {\n\t\t\tthis._isTrusted = isTrustedOrOptions;\n\t\t\tthis._supportThemeIcons = false;\n\t\t}\n\t\telse {\n\t\t\tthis._isTrusted = isTrustedOrOptions.isTrusted ?? false;\n\t\t\tthis._supportThemeIcons = isTrustedOrOptions.supportThemeIcons ?? false;\n\t\t}\n\n\t}\n\n\tget value() { return this._value; }\n\tget isTrusted() { return this._isTrusted; }\n\tget supportThemeIcons() { return this._supportThemeIcons; }\n\n\tappendText(value: string): MarkdownString {\n\t\t// escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n\t\tthis._value += (this._supportThemeIcons ? escapeCodicons(value) : value)\n\t\t\t.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n\t\t\t.replace('\\n', '\\n\\n');\n\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): MarkdownString {\n\t\tthis._value += value;\n\n\t\treturn this;\n\t}\n\n\tappendCodeblock(langId: string, code: string): MarkdownString {\n\t\tthis._value += '\\n```';\n\t\tthis._value += langId;\n\t\tthis._value += '\\n';\n\t\tthis._value += code;\n\t\tthis._value += '\\n```\\n';\n\t\treturn this;\n\t}\n}\n\nexport function isEmptyMarkdownString(oneOrMany: IMarkdownString | IMarkdownString[] | null | undefined): boolean {\n\tif (isMarkdownString(oneOrMany)) {\n\t\treturn !oneOrMany.value;\n\t} else if (Array.isArray(oneOrMany)) {\n\t\treturn oneOrMany.every(isEmptyMarkdownString);\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function isMarkdownString(thing: any): thing is IMarkdownString {\n\tif (thing instanceof MarkdownString) {\n\t\treturn true;\n\t} else if (thing && typeof thing === 'object') {\n\t\treturn typeof (<IMarkdownString>thing).value === 'string'\n\t\t\t&& (typeof (<IMarkdownString>thing).isTrusted === 'boolean' || (<IMarkdownString>thing).isTrusted === undefined)\n\t\t\t&& (typeof (<IMarkdownString>thing).supportThemeIcons === 'boolean' || (<IMarkdownString>thing).supportThemeIcons === undefined);\n\t}\n\treturn false;\n}\n\nexport function markedStringsEquals(a: IMarkdownString | IMarkdownString[], b: IMarkdownString | IMarkdownString[]): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else if (Array.isArray(a) && Array.isArray(b)) {\n\t\treturn equals(a, b, markdownStringEqual);\n\t} else if (isMarkdownString(a) && isMarkdownString(b)) {\n\t\treturn markdownStringEqual(a, b);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction markdownStringEqual(a: IMarkdownString, b: IMarkdownString): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else {\n\t\treturn a.value === b.value && a.isTrusted === b.isTrusted && a.supportThemeIcons === b.supportThemeIcons;\n\t}\n}\n\nexport function removeMarkdownEscapes(text: string): string {\n\tif (!text) {\n\t\treturn text;\n\t}\n\treturn text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\n\nexport function parseHrefAndDimensions(href: string): { href: string, dimensions: string[] } {\n\tconst dimensions: string[] = [];\n\tconst splitted = href.split('|').map(s => s.trim());\n\thref = splitted[0];\n\tconst parameters = splitted[1];\n\tif (parameters) {\n\t\tconst heightFromParams = /height=(\\d+)/.exec(parameters);\n\t\tconst widthFromParams = /width=(\\d+)/.exec(parameters);\n\t\tconst height = heightFromParams ? heightFromParams[1] : '';\n\t\tconst width = widthFromParams ? widthFromParams[1] : '';\n\t\tconst widthIsFinite = isFinite(parseInt(width));\n\t\tconst heightIsFinite = isFinite(parseInt(height));\n\t\tif (widthIsFinite) {\n\t\t\tdimensions.push(`width=\"${width}\"`);\n\t\t}\n\t\tif (heightIsFinite) {\n\t\t\tdimensions.push(`height=\"${height}\"`);\n\t\t}\n\t}\n\treturn { href, dimensions };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n/**\n * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n * URI queries are included, fragments are ignored.\n */\nexport function getComparisonKey(resource: URI, caseInsensitivePath = hasToIgnoreCase(resource)): string {\n\tlet path = resource.path || '/';\n\tif (caseInsensitivePath) {\n\t\tpath = path.toLowerCase();\n\t}\n\treturn resource.with({ authority: resource.authority.toLowerCase(), path: path, fragment: null }).toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * URI queries must match, fragments are ignored.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase) && base.query === parentCandidate.query;\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path || '/', parentCandidate.path || '/', ignoreCase, '/') && base.query === parentCandidate.query;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests whether the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\n/**\n * Tests whether two resources are the same.  URI queries must match, fragments are ignored unless requested.\n */\nexport function isEqual(first: URI | undefined, second: URI | undefined, caseInsensitivePath = hasToIgnoreCase(first), ignoreFragment = true): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn (p1 === p2 || caseInsensitivePath && equalsIgnoreCase(p1, p2)) && first.query === second.query && (ignoreFragment || first.fragment === second.fragment);\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tlet dirname;\n\tif (resource.scheme === Schemas.file) {\n\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t} else {\n\t\tdirname = paths.posix.dirname(resource.path);\n\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t}\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === 'file') {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, caseInsensitivePath = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (caseInsensitivePath) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI, expression: ParsedExpression }> = TernarySearchTree.forUris<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { posix, normalize, win32, sep } from 'vs/base/common/path';\nimport { startsWithIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { Schemas } from './network';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tconstructor(private readonly remoteAuthority: string) {\n\t}\n\n\t// NOTE@coder: Coming in from the browser it'll be vscode-remote so it needs\n\t// to be transformed into file.\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.vscodeRemote\n\t\t\t? toJSON(URI.file(uri.path))\n\t\t\t: uri;\n\t}\n\n\t// NOTE@coder: Going out to the browser it'll be file so it needs to be\n\t// transformed into vscode-remote.\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? toJSON(URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path: uri.path }))\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path:uri.path })\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn scheme === Schemas.file\n\t\t\t? Schemas.vscodeRemote\n\t\t\t: scheme;\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/base/common/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprotected _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprotected _map: Map<number, number>;\n\n\tprotected _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tlet defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tlet value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tlet aLineNumber = a.lineNumber | 0;\n\t\tlet bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tlet aColumn = a.column | 0;\n\t\t\tlet bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tlet otherStartLineNumber = b.startLineNumber;\n\t\tlet otherStartColumn = b.startColumn;\n\t\tlet otherEndLineNumber = b.endLineNumber;\n\t\tlet otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn Range.getEndPosition(this);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic static getEndPosition(range: IRange): Position {\n\t\treturn new Position(range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn Range.getStartPosition(this);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic static getStartPosition(range: IRange): Position {\n\t\treturn new Position(range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\treadonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\treadonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\treadonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\treadonly positionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport const enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic readonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic readonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic readonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic readonly positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Get the position at `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic getPosition(): Position {\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from one or two positions\n\t */\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Selection {\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel: ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IModelContentChange, IModelContentChangedEvent, IModelDecorationsChangedEvent, IModelLanguageChangedEvent, IModelLanguageConfigurationChangedEvent, IModelOptionsChangedEvent, IModelTokensChangedEvent, ModelRawContentChangedEvent } from 'vs/editor/common/model/textModelEvents';\nimport { SearchData } from 'vs/editor/common/model/textModelSearch';\nimport { LanguageId, LanguageIdentifier, FormattingOptions } from 'vs/editor/common/modes';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { MultilineTokens, MultilineTokens2 } from 'vs/editor/common/model/tokensStore';\nimport { TextChange } from 'vs/editor/common/model/textChange';\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Position in the minimap to render the decoration.\n */\nexport enum MinimapPosition {\n\tInline = 1,\n\tGutter = 2\n}\n\nexport interface IDecorationOptions {\n\t/**\n\t * CSS color to render.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tcolor: string | ThemeColor | undefined;\n\t/**\n\t * CSS color to render.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tdarkColor?: string | ThemeColor;\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationOverviewRulerOptions extends IDecorationOptions {\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: OverviewRulerLane;\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationMinimapOptions extends IDecorationOptions {\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: MinimapPosition;\n}\n\n/**\n * Options for a model decoration.\n */\nexport interface IModelDecorationOptions {\n\t/**\n\t * Customize the growing behavior of the decoration when typing at the edges of the decoration.\n\t * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tstickiness?: TrackedRangeStickiness;\n\t/**\n\t * CSS class name describing the decoration.\n\t */\n\tclassName?: string | null;\n\t/**\n\t * Message to be rendered when hovering over the glyph margin decoration.\n\t */\n\tglyphMarginHoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Array of MarkdownString to render as the decoration message.\n\t */\n\thoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Should the decoration expand to encompass a whole line.\n\t */\n\tisWholeLine?: boolean;\n\t/**\n\t * Always render the decoration (even when the range it encompasses is collapsed).\n\t * @internal\n\t */\n\tshowIfCollapsed?: boolean;\n\t/**\n\t * Collapse the decoration if its entire range is being replaced via an edit.\n\t * @internal\n\t */\n\tcollapseOnReplaceEdit?: boolean;\n\t/**\n\t * Specifies the stack order of a decoration.\n\t * A decoration with greater stack order is always in front of a decoration with a lower stack order.\n\t */\n\tzIndex?: number;\n\t/**\n\t * If set, render this decoration in the overview ruler.\n\t */\n\toverviewRuler?: IModelDecorationOverviewRulerOptions | null;\n\t/**\n\t * If set, render this decoration in the minimap.\n\t */\n\tminimap?: IModelDecorationMinimapOptions | null;\n\t/**\n\t * If set, the decoration will be rendered in the glyph margin with this CSS class name.\n\t */\n\tglyphMarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name.\n\t */\n\tlinesDecorationsClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name, but only for the first line in case of line wrapping.\n\t */\n\tfirstLineDecorationClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the margin (covering its full width) with this CSS class name.\n\t */\n\tmarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t * Please use this only for CSS rules that must impact the text. For example, use `className`\n\t * to have a background color decoration.\n\t */\n\tinlineClassName?: string | null;\n\t/**\n\t * If there is an `inlineClassName` which affects letter spacing.\n\t */\n\tinlineClassNameAffectsLetterSpacing?: boolean;\n\t/**\n\t * If set, the decoration will be rendered before the text with this CSS class name.\n\t */\n\tbeforeContentClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered after the text with this CSS class name.\n\t */\n\tafterContentClassName?: string | null;\n}\n\n/**\n * New model decorations.\n */\nexport interface IModelDeltaDecoration {\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * A decoration in the model.\n */\nexport interface IModelDecoration {\n\t/**\n\t * Identifier for a decoration.\n\t */\n\treadonly id: string;\n\t/**\n\t * Identifier for a decoration's owner.\n\t */\n\treadonly ownerId: number;\n\t/**\n\t * Range that this decoration covers.\n\t */\n\treadonly range: Range;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\treadonly options: IModelDecorationOptions;\n}\n\n/**\n * An accessor that can add, change or remove model decorations.\n * @internal\n */\nexport interface IModelDecorationsChangeAccessor {\n\t/**\n\t * Add a new decoration.\n\t * @param range Range that this decoration covers.\n\t * @param options Options associated with this decoration.\n\t * @return An unique identifier associated with this decoration.\n\t */\n\taddDecoration(range: IRange, options: IModelDecorationOptions): string;\n\t/**\n\t * Change the range that an existing decoration covers.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newRange The new range that this decoration covers.\n\t */\n\tchangeDecoration(id: string, newRange: IRange): void;\n\t/**\n\t * Change the options associated with an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newOptions The new options associated with this decoration.\n\t */\n\tchangeDecorationOptions(id: string, newOptions: IModelDecorationOptions): void;\n\t/**\n\t * Remove an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t */\n\tremoveDecoration(id: string): void;\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[]): string[];\n}\n\n/**\n * Word inside a model.\n */\nexport interface IWordAtPosition {\n\t/**\n\t * The word.\n\t */\n\treadonly word: string;\n\t/**\n\t * The column where the word starts.\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * The column where the word ends.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport const enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * An identifier for a single edit operation.\n * @internal\n */\nexport interface ISingleEditOperationIdentifier {\n\t/**\n\t * Identifier major\n\t */\n\tmajor: number;\n\t/**\n\t * Identifier minor\n\t */\n\tminor: number;\n}\n\n/**\n * A single edit operation, that acts as a simple replace.\n * i.e. Replace text at `range` with `text` in model.\n */\nexport interface ISingleEditOperation {\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string | null;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n}\n\n/**\n * A single edit operation, that has an identifier.\n */\nexport interface IIdentifiedSingleEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier?: ISingleEditOperationIdentifier | null;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string | null;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n\t/**\n\t * This indicates that this operation is inserting automatic whitespace\n\t * that can be removed on next model edit operation if `config.trimAutoWhitespace` is true.\n\t * @internal\n\t */\n\tisAutoWhitespaceEdit?: boolean;\n\t/**\n\t * This indicates that this operation is in a set of operations that are tracked and should not be \"simplified\".\n\t * @internal\n\t */\n\t_isTracked?: boolean;\n}\n\nexport interface IValidEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier: ISingleEditOperationIdentifier | null;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: Range;\n\t/**\n\t * The text to replace with. This can be empty to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * @internal\n\t */\n\ttextChange: TextChange;\n}\n\n/**\n * A callback that can compute the cursor state after applying a series of edit operations.\n */\nexport interface ICursorStateComputer {\n\t/**\n\t * A callback that can compute the resulting cursors state after some edit operations have been executed.\n\t */\n\t(inverseEditOperations: IValidEditOperation[]): Selection[] | null;\n}\n\nexport class TextModelResolvedOptions {\n\t_textModelResolvedOptionsBrand: void;\n\n\treadonly tabSize: number;\n\treadonly indentSize: number;\n\treadonly insertSpaces: boolean;\n\treadonly defaultEOL: DefaultEndOfLine;\n\treadonly trimAutoWhitespace: boolean;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(src: {\n\t\ttabSize: number;\n\t\tindentSize: number;\n\t\tinsertSpaces: boolean;\n\t\tdefaultEOL: DefaultEndOfLine;\n\t\ttrimAutoWhitespace: boolean;\n\t}) {\n\t\tthis.tabSize = Math.max(1, src.tabSize | 0);\n\t\tthis.indentSize = src.tabSize | 0;\n\t\tthis.insertSpaces = Boolean(src.insertSpaces);\n\t\tthis.defaultEOL = src.defaultEOL | 0;\n\t\tthis.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: TextModelResolvedOptions): boolean {\n\t\treturn (\n\t\t\tthis.tabSize === other.tabSize\n\t\t\t&& this.indentSize === other.indentSize\n\t\t\t&& this.insertSpaces === other.insertSpaces\n\t\t\t&& this.defaultEOL === other.defaultEOL\n\t\t\t&& this.trimAutoWhitespace === other.trimAutoWhitespace\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts: TextModelResolvedOptions): IModelOptionsChangedEvent {\n\t\treturn {\n\t\t\ttabSize: this.tabSize !== newOpts.tabSize,\n\t\t\tindentSize: this.indentSize !== newOpts.indentSize,\n\t\t\tinsertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n\t\t\ttrimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITextModelCreationOptions {\n\ttabSize: number;\n\tindentSize: number;\n\tinsertSpaces: boolean;\n\tdetectIndentation: boolean;\n\ttrimAutoWhitespace: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n\tisForSimpleWidget: boolean;\n\tlargeFileOptimizations: boolean;\n}\n\nexport interface ITextModelUpdateOptions {\n\ttabSize?: number;\n\tindentSize?: number;\n\tinsertSpaces?: boolean;\n\ttrimAutoWhitespace?: boolean;\n}\n\nexport class FindMatch {\n\t_findMatchBrand: void;\n\n\tpublic readonly range: Range;\n\tpublic readonly matches: string[] | null;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(range: Range, matches: string[] | null) {\n\t\tthis.range = range;\n\t\tthis.matches = matches;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IFoundBracket {\n\trange: Range;\n\topen: string[];\n\tclose: string[];\n\tisOpen: boolean;\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport const enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3,\n}\n\n/**\n * @internal\n */\nexport interface IActiveIndentGuideInfo {\n\tstartLineNumber: number;\n\tendLineNumber: number;\n\tindent: number;\n}\n\n/**\n * Text snapshot that works like an iterator.\n * Will try to return chunks of roughly ~64KB size.\n * Will return null when finished.\n *\n * @internal\n */\nexport interface ITextSnapshot {\n\tread(): string | null;\n}\n\n/**\n * A model.\n */\nexport interface ITextModel {\n\n\t/**\n\t * Gets the resource associated with this editor model.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * A unique identifier associated with this model.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * This model is constructed for a simple widget code editor.\n\t * @internal\n\t */\n\treadonly isForSimpleWidget: boolean;\n\n\t/**\n\t * If true, the text model might contain RTL.\n\t * If false, the text model **contains only** contain LTR.\n\t * @internal\n\t */\n\tmightContainRTL(): boolean;\n\n\t/**\n\t * If true, the text model might contain non basic ASCII.\n\t * If false, the text model **contains only** basic ASCII.\n\t * @internal\n\t */\n\tmightContainNonBasicASCII(): boolean;\n\n\t/**\n\t * Get the resolved options for this model.\n\t */\n\tgetOptions(): TextModelResolvedOptions;\n\n\t/**\n\t * Get the formatting options for this model.\n\t * @internal\n\t */\n\tgetFormattingOptions(): FormattingOptions;\n\n\t/**\n\t * Get the current version id of the model.\n\t * Anytime a change happens to the model (even undo/redo),\n\t * the version id is incremented.\n\t */\n\tgetVersionId(): number;\n\n\t/**\n\t * Get the alternative version id of the model.\n\t * This alternative version id is not always incremented,\n\t * it will return the same values in the case of undo-redo.\n\t */\n\tgetAlternativeVersionId(): number;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValue(newValue: string): void;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t * @internal\n\t */\n\tsetValueFromTextBuffer(newValue: ITextBuffer): void;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text.\n\t */\n\tgetValue(eol?: EndOfLinePreference, preserveBOM?: boolean): string;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text snapshot (it is safe to consume it asynchronously).\n\t * @internal\n\t */\n\tcreateSnapshot(preserveBOM?: boolean): ITextSnapshot;\n\n\t/**\n\t * Get the length of the text stored in this model.\n\t */\n\tgetValueLength(eol?: EndOfLinePreference, preserveBOM?: boolean): number;\n\n\t/**\n\t * Check if the raw text stored in this model equals another raw text.\n\t * @internal\n\t */\n\tequalsTextBuffer(other: ITextBuffer): boolean;\n\n\t/**\n\t * Get the underling text buffer.\n\t * @internal\n\t */\n\tgetTextBuffer(): ITextBuffer;\n\n\t/**\n\t * Get the text in a certain range.\n\t * @param range The range describing what text to get.\n\t * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @return The text.\n\t */\n\tgetValueInRange(range: IRange, eol?: EndOfLinePreference): string;\n\n\t/**\n\t * Get the length of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t * @return The text length.\n\t */\n\tgetValueLengthInRange(range: IRange): number;\n\n\t/**\n\t * Get the character count of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t */\n\tgetCharacterCountInRange(range: IRange): number;\n\n\t/**\n\t * Splits characters in two buckets. First bucket (A) is of characters that\n\t * sit in lines with length < `LONG_LINE_BOUNDARY`. Second bucket (B) is of\n\t * characters that sit in lines with length >= `LONG_LINE_BOUNDARY`.\n\t * If count(B) > count(A) return true. Returns false otherwise.\n\t * @internal\n\t */\n\tisDominatedByLongLines(): boolean;\n\n\t/**\n\t * Get the number of lines in the model.\n\t */\n\tgetLineCount(): number;\n\n\t/**\n\t * Get the text for a certain line.\n\t */\n\tgetLineContent(lineNumber: number): string;\n\n\t/**\n\t * Get the text length for a certain line.\n\t */\n\tgetLineLength(lineNumber: number): number;\n\n\t/**\n\t * Get the text for all lines.\n\t */\n\tgetLinesContent(): string[];\n\n\t/**\n\t * Get the end of line sequence predominantly used in the text buffer.\n\t * @return EOL char sequence (e.g.: '\\n' or '\\r\\n').\n\t */\n\tgetEOL(): string;\n\n\t/**\n\t * Get the minimum legal column for line at `lineNumber`\n\t */\n\tgetLineMinColumn(lineNumber: number): number;\n\n\t/**\n\t * Get the maximum legal column for line at `lineNumber`\n\t */\n\tgetLineMaxColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column before the first non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column after the last non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Create a valid position,\n\t */\n\tvalidatePosition(position: IPosition): Position;\n\n\t/**\n\t * Advances the given position by the given offset (negative offsets are also accepted)\n\t * and returns it as a new valid position.\n\t *\n\t * If the offset and position are such that their combination goes beyond the beginning or\n\t * end of the model, throws an exception.\n\t *\n\t * If the offset is such that the new position would be in the middle of a multi-byte\n\t * line terminator, throws an exception.\n\t */\n\tmodifyPosition(position: IPosition, offset: number): Position;\n\n\t/**\n\t * Create a valid range.\n\t */\n\tvalidateRange(range: IRange): Range;\n\n\t/**\n\t * Converts the position to a zero-based offset.\n\t *\n\t * The position will be [adjusted](#TextDocument.validatePosition).\n\t *\n\t * @param position A position.\n\t * @return A valid zero-based offset.\n\t */\n\tgetOffsetAt(position: IPosition): number;\n\n\t/**\n\t * Converts a zero-based offset to a position.\n\t *\n\t * @param offset A zero-based offset.\n\t * @return A valid [position](#Position).\n\t */\n\tgetPositionAt(offset: number): Position;\n\n\t/**\n\t * Get a range covering the entire model\n\t */\n\tgetFullModelRange(): Range;\n\n\t/**\n\t * Returns if the model was disposed or not.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * @internal\n\t */\n\ttokenizeViewport(startLineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * This model is so large that it would not be a good idea to sync it over\n\t * to web workers or other places.\n\t * @internal\n\t */\n\tisTooLargeForSyncing(): boolean;\n\n\t/**\n\t * The file is so large, that even tokenization is disabled.\n\t * @internal\n\t */\n\tisTooLargeForTokenization(): boolean;\n\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString: string, searchOnlyEditableRange: boolean, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchScope Limit the searching to only search inside this range.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if no matches have been found.\n\t */\n\tfindMatches(searchString: string, searchScope: IRange, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model for the next match. Loops to the beginning of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the next match is. It is null if no next match has been found.\n\t */\n\tfindNextMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\t/**\n\t * Search the model for the previous match. Loops to the end of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the previous match is. It is null if no previous match has been found.\n\t */\n\tfindPreviousMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\n\t/**\n\t * @internal\n\t */\n\tsetTokens(tokens: MultilineTokens[]): void;\n\n\t/**\n\t * @internal\n\t */\n\tsetSemanticTokens(tokens: MultilineTokens2[] | null, isComplete: boolean): void;\n\n\t/**\n\t * @internal\n\t */\n\tsetPartialSemanticTokens(range: Range, tokens: MultilineTokens2[] | null): void;\n\n\t/**\n\t * @internal\n\t */\n\thasSemanticTokens(): boolean;\n\n\t/**\n\t * Flush all tokenization state.\n\t * @internal\n\t */\n\tresetTokenization(): void;\n\n\t/**\n\t * Force tokenization information for `lineNumber` to be accurate.\n\t * @internal\n\t */\n\tforceTokenization(lineNumber: number): void;\n\n\t/**\n\t * If it is cheap, force tokenization information for `lineNumber` to be accurate.\n\t * This is based on a heuristic.\n\t * @internal\n\t */\n\ttokenizeIfCheap(lineNumber: number): void;\n\n\t/**\n\t * Check if calling `forceTokenization` for this `lineNumber` will be cheap (time-wise).\n\t * This is based on a heuristic.\n\t * @internal\n\t */\n\tisCheapToTokenize(lineNumber: number): boolean;\n\n\t/**\n\t * Get the tokens for the line `lineNumber`.\n\t * The tokens might be inaccurate. Use `forceTokenization` to ensure accurate tokens.\n\t * @internal\n\t */\n\tgetLineTokens(lineNumber: number): LineTokens;\n\n\t/**\n\t * Get the language associated with this model.\n\t * @internal\n\t */\n\tgetLanguageIdentifier(): LanguageIdentifier;\n\n\t/**\n\t * Get the language associated with this model.\n\t */\n\tgetModeId(): string;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t * @internal\n\t */\n\tsetMode(languageIdentifier: LanguageIdentifier): void;\n\n\t/**\n\t * Returns the real (inner-most) language mode at a given position.\n\t * The result might be inaccurate. Use `forceTokenization` to ensure accurate tokens.\n\t * @internal\n\t */\n\tgetLanguageIdAtPosition(lineNumber: number, column: number): LanguageId;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position: IPosition): IWordAtPosition | null;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position: IPosition): IWordAtPosition;\n\n\t/**\n\t * Find the matching bracket of `request` up, counting brackets.\n\t * @param request The bracket we're searching for\n\t * @param position The position at which to start the search.\n\t * @return The range of the matching bracket, or null if the bracket match was not found.\n\t * @internal\n\t */\n\tfindMatchingBracketUp(bracket: string, position: IPosition): Range | null;\n\n\t/**\n\t * Find the first bracket in the model before `position`.\n\t * @param position The position at which to start the search.\n\t * @return The info for the first bracket before `position`, or null if there are no more brackets before `positions`.\n\t * @internal\n\t */\n\tfindPrevBracket(position: IPosition): IFoundBracket | null;\n\n\t/**\n\t * Find the first bracket in the model after `position`.\n\t * @param position The position at which to start the search.\n\t * @return The info for the first bracket after `position`, or null if there are no more brackets after `positions`.\n\t * @internal\n\t */\n\tfindNextBracket(position: IPosition): IFoundBracket | null;\n\n\t/**\n\t * Find the enclosing brackets that contain `position`.\n\t * @param position The position at which to start the search.\n\t * @internal\n\t */\n\tfindEnclosingBrackets(position: IPosition, maxDuration?: number): [Range, Range] | null;\n\n\t/**\n\t * Given a `position`, if the position is on top or near a bracket,\n\t * find the matching bracket of that bracket and return the ranges of both brackets.\n\t * @param position The position at which to look for a bracket.\n\t * @internal\n\t */\n\tmatchBracket(position: IPosition): [Range, Range] | null;\n\n\t/**\n\t * @internal\n\t */\n\tgetActiveIndentGuide(lineNumber: number, minLineNumber: number, maxLineNumber: number): IActiveIndentGuideInfo;\n\n\t/**\n\t * @internal\n\t */\n\tgetLinesIndentGuides(startLineNumber: number, endLineNumber: number): number[];\n\n\t/**\n\t * Change the decorations. The callback will be called with a change accessor\n\t * that becomes invalid as soon as the callback finishes executing.\n\t * This allows for all events to be queued up until the change\n\t * is completed. Returns whatever the callback returns.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @internal\n\t */\n\tchangeDecorations<T>(callback: (changeAccessor: IModelDecorationsChangeAccessor) => T, ownerId?: number): T | null;\n\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[], ownerId?: number): string[];\n\n\t/**\n\t * Remove all decorations that have been added with this specific ownerId.\n\t * @param ownerId The owner id to search for.\n\t * @internal\n\t */\n\tremoveAllDecorationsWithOwnerId(ownerId: number): void;\n\n\t/**\n\t * Get the options associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration options or null if the decoration was not found.\n\t */\n\tgetDecorationOptions(id: string): IModelDecorationOptions | null;\n\n\t/**\n\t * Get the range associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration range or null if the decoration was not found.\n\t */\n\tgetDecorationRange(id: string): Range | null;\n\n\t/**\n\t * Gets all the decorations for the line `lineNumber` as an array.\n\t * @param lineNumber The line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLineDecorations(lineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLinesDecorations(startLineNumber: number, endLineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\n\t * So for now it returns all the decorations on the same line as `range`.\n\t * @param range The range to search in\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetDecorationsInRange(range: IRange, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetAllDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations that should be rendered in the overview ruler as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetOverviewRulerDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * @internal\n\t */\n\t_getTrackedRange(id: string): Range | null;\n\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: null, newStickiness: TrackedRangeStickiness): null;\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: Range, newStickiness: TrackedRangeStickiness): string;\n\n\t/**\n\t * Normalize a string containing whitespace according to indentation rules (converts to spaces or to tabs).\n\t */\n\tnormalizeIndentation(str: string): string;\n\n\t/**\n\t * Change the options of this model.\n\t */\n\tupdateOptions(newOpts: ITextModelUpdateOptions): void;\n\n\t/**\n\t * Detect the indentation options for this model from its content.\n\t */\n\tdetectIndentation(defaultInsertSpaces: boolean, defaultTabSize: number): void;\n\n\t/**\n\t * Push a stack element onto the undo stack. This acts as an undo/redo point.\n\t * The idea is to use `pushEditOperations` to edit the model and then to\n\t * `pushStackElement` to create an undo/redo stop point.\n\t */\n\tpushStackElement(): void;\n\n\t/**\n\t * Push edit operations, basically editing the model. This is the preferred way\n\t * of editing the model. The edit operations will land on the undo stack.\n\t * @param beforeCursorState The cursor state before the edit operations. This cursor state will be returned when `undo` or `redo` are invoked.\n\t * @param editOperations The edit operations.\n\t * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.\n\t * @return The cursor state returned by the `cursorStateComputer`.\n\t */\n\tpushEditOperations(beforeCursorState: Selection[] | null, editOperations: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer): Selection[] | null;\n\n\t/**\n\t * Change the end of line sequence. This is the preferred way of\n\t * changing the eol sequence. This will land on the undo stack.\n\t */\n\tpushEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Edit the model without adding the edits to the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.\n\t * @param operations The edit operations.\n\t * @return If desired, the inverse edit operations, that, when applied, will bring the model back to the previous state.\n\t */\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[]): void;\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[], computeUndoEdits: false): void;\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[], computeUndoEdits: true): IValidEditOperation[];\n\n\t/**\n\t * Change the end of line sequence without recording in the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEOL for the preferred way.\n\t */\n\tsetEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * @internal\n\t */\n\t_applyUndo(changes: TextChange[], eol: EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void;\n\n\t/**\n\t * @internal\n\t */\n\t_applyRedo(changes: TextChange[], eol: EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void;\n\n\t/**\n\t * Undo edit operations until the first previous stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the redo stack.\n\t * @internal\n\t */\n\tundo(): void;\n\n\t/**\n\t * Is there anything in the undo stack?\n\t * @internal\n\t */\n\tcanUndo(): boolean;\n\n\t/**\n\t * Redo edit operations until the next stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the undo stack.\n\t * @internal\n\t */\n\tredo(): void;\n\n\t/**\n\t * Is there anything in the redo stack?\n\t * @internal\n\t */\n\tcanRedo(): boolean;\n\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t * @event\n\t */\n\tonDidChangeRawContentFast(listener: (e: ModelRawContentChangedEvent) => void): IDisposable;\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t * @event\n\t */\n\tonDidChangeRawContent(listener: (e: ModelRawContentChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the contents of the model have changed.\n\t * @event\n\t */\n\tonDidChangeContent(listener: (e: IModelContentChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when decorations of the model have changed.\n\t * @event\n\t */\n\tonDidChangeDecorations(listener: (e: IModelDecorationsChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the model options have changed.\n\t * @event\n\t */\n\tonDidChangeOptions(listener: (e: IModelOptionsChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the language associated with the model has changed.\n\t * @event\n\t */\n\tonDidChangeLanguage(listener: (e: IModelLanguageChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the language configuration associated with the model has changed.\n\t * @event\n\t */\n\tonDidChangeLanguageConfiguration(listener: (e: IModelLanguageConfigurationChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the tokens associated with the model have changed.\n\t * @event\n\t * @internal\n\t */\n\tonDidChangeTokens(listener: (e: IModelTokensChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the model has been attached to the first editor or detached from the last editor.\n\t * @event\n\t * @internal\n\t */\n\tonDidChangeAttached(listener: () => void): IDisposable;\n\t/**\n\t * An event emitted right before disposing the model.\n\t * @event\n\t */\n\tonWillDispose(listener: () => void): IDisposable;\n\n\t/**\n\t * Destroy this model. This will unbind the model from the mode\n\t * and make all necessary clean-up to release this object to the GC.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeAttached(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeDetached(): void;\n\n\t/**\n\t * Returns if this model is attached to an editor or not.\n\t * @internal\n\t */\n\tisAttachedToEditor(): boolean;\n\n\t/**\n\t * Returns the count of editors this model is attached to.\n\t * @internal\n\t */\n\tgetAttachedEditorCount(): number;\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferBuilder {\n\tacceptChunk(chunk: string): void;\n\tfinish(): ITextBufferFactory;\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferFactory {\n\tcreate(defaultEOL: DefaultEndOfLine): ITextBuffer;\n\tgetFirstLineText(lengthLimit: number): string;\n}\n\n/**\n * @internal\n */\nexport const enum ModelConstants {\n\tFIRST_LINE_DETECTION_LENGTH_LIMIT = 1000\n}\n\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation implements IIdentifiedSingleEditOperation {\n\tconstructor(\n\t\tpublic readonly identifier: ISingleEditOperationIdentifier | null,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly text: string | null,\n\t\tpublic readonly forceMoveMarkers: boolean,\n\t\tpublic readonly isAutoWhitespaceEdit: boolean,\n\t\tpublic readonly _isTracked: boolean,\n\t) { }\n}\n\n/**\n * @internal\n */\nexport interface IReadonlyTextBuffer {\n\tonDidChangeContent: Event<void>;\n\tequals(other: ITextBuffer): boolean;\n\tmightContainRTL(): boolean;\n\tmightContainNonBasicASCII(): boolean;\n\tgetBOM(): string;\n\tgetEOL(): string;\n\n\tgetOffsetAt(lineNumber: number, column: number): number;\n\tgetPositionAt(offset: number): Position;\n\tgetRangeAt(offset: number, length: number): Range;\n\n\tgetValueInRange(range: Range, eol: EndOfLinePreference): string;\n\tcreateSnapshot(preserveBOM: boolean): ITextSnapshot;\n\tgetValueLengthInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetCharacterCountInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetLength(): number;\n\tgetLineCount(): number;\n\tgetLinesContent(): string[];\n\tgetLineContent(lineNumber: number): string;\n\tgetLineCharCode(lineNumber: number, index: number): number;\n\tgetLineLength(lineNumber: number): number;\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[];\n}\n\n/**\n * @internal\n */\nexport interface ITextBuffer extends IReadonlyTextBuffer {\n\tsetEOL(newEOL: '\\r\\n' | '\\n'): void;\n\tapplyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult;\n}\n\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n\n\tconstructor(\n\t\tpublic readonly reverseEdits: IValidEditOperation[] | null,\n\t\tpublic readonly changes: IInternalModelContentChange[],\n\t\tpublic readonly trimAutoWhitespaceLineNumbers: number[] | null\n\t) { }\n\n}\n\n/**\n * @internal\n */\nexport interface IInternalModelContentChange extends IModelContentChange {\n\trange: Range;\n\tforceMoveMarkers: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWordAtPosition } from 'vs/editor/common/model';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif ((wordDefinition as any).unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nconst _defaultConfig = {\n\tmaxLen: 1000,\n\twindowSize: 15,\n\ttimeBudget: 150\n};\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number, config = _defaultConfig): IWordAtPosition | null {\n\n\tif (text.length > config.maxLen) {\n\t\t// don't throw strings that long at the regexp\n\t\t// but use a sub-string in which a word must occur\n\t\tlet start = column - config.maxLen / 2;\n\t\tif (start < 0) {\n\t\t\ttextOffset += column;\n\t\t\tstart = 0;\n\t\t} else {\n\t\t\ttextOffset += start;\n\t\t}\n\t\ttext = text.substring(start, column + config.maxLen / 2);\n\t\treturn getWordAtText(column, wordDefinition, text, textOffset, config);\n\t}\n\n\tconst t1 = Date.now();\n\tconst pos = column - 1 - textOffset;\n\n\tlet prevRegexIndex = -1;\n\tlet match: RegExpMatchArray | null = null;\n\n\tfor (let i = 1; ; i++) {\n\t\t// check time budget\n\t\tif (Date.now() - t1 >= config.timeBudget) {\n\t\t\t// break;\n\t\t}\n\n\t\t// reset the index at which the regexp should start matching, also know where it\n\t\t// should stop so that subsequent search don't repeat previous searches\n\t\tconst regexIndex = pos - config.windowSize * i;\n\t\twordDefinition.lastIndex = Math.max(0, regexIndex);\n\t\tconst thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n\n\t\tif (!thisMatch && match) {\n\t\t\t// stop: we have something\n\t\t\tbreak;\n\t\t}\n\n\t\tmatch = thisMatch;\n\n\t\t// stop: searched at start\n\t\tif (regexIndex <= 0) {\n\t\t\tbreak;\n\t\t}\n\t\tprevRegexIndex = regexIndex;\n\t}\n\n\tif (match) {\n\t\tlet result = {\n\t\t\tword: match[0],\n\t\t\tstartColumn: textOffset + 1 + match.index!,\n\t\t\tendColumn: textOffset + 1 + match.index! + match[0].length\n\t\t};\n\t\twordDefinition.lastIndex = 0;\n\t\treturn result;\n\t}\n\n\treturn null;\n}\n\nfunction _findRegexMatchEnclosingPosition(wordDefinition: RegExp, text: string, pos: number, stopPos: number): RegExpMatchArray | null {\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn match;\n\t\t} else if (stopPos > 0 && matchIndex > stopPos) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StandardTokenType } from 'vs/editor/common/modes';\n\n/**\n * Describes how comments for a language work.\n */\nexport interface CommentRule {\n\t/**\n\t * The line comment token, like `// this is a comment`\n\t */\n\tlineComment?: string | null;\n\t/**\n\t * The block comment character pair, like `/* block comment *&#47;`\n\t */\n\tblockComment?: CharacterPair | null;\n}\n\n/**\n * The language configuration interface defines the contract between extensions and\n * various editor features, like automatic bracket insertion, automatic indentation etc.\n */\nexport interface LanguageConfiguration {\n\t/**\n\t * The language's comment settings.\n\t */\n\tcomments?: CommentRule;\n\t/**\n\t * The language's brackets.\n\t * This configuration implicitly affects pressing Enter around these brackets.\n\t */\n\tbrackets?: CharacterPair[];\n\t/**\n\t * The language's word definition.\n\t * If the language supports Unicode identifiers (e.g. JavaScript), it is preferable\n\t * to provide a word definition that uses exclusion of known separators.\n\t * e.g.: A regex that matches anything except known separators (and dot is allowed to occur in a floating point number):\n\t *   /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n\t */\n\twordPattern?: RegExp;\n\t/**\n\t * The language's indentation settings.\n\t */\n\tindentationRules?: IndentationRule;\n\t/**\n\t * The language's rules to be evaluated when pressing Enter.\n\t */\n\tonEnterRules?: OnEnterRule[];\n\t/**\n\t * The language's auto closing pairs. The 'close' character is automatically inserted with the\n\t * 'open' character is typed. If not set, the configured brackets will be used.\n\t */\n\tautoClosingPairs?: IAutoClosingPairConditional[];\n\t/**\n\t * The language's surrounding pairs. When the 'open' character is typed on a selection, the\n\t * selected string is surrounded by the open and close characters. If not set, the autoclosing pairs\n\t * settings will be used.\n\t */\n\tsurroundingPairs?: IAutoClosingPair[];\n\n\t/**\n\t * Defines what characters must be after the cursor for bracket or quote autoclosing to occur when using the \\'languageDefined\\' autoclosing setting.\n\t *\n\t * This is typically the set of characters which can not start an expression, such as whitespace, closing brackets, non-unary operators, etc.\n\t */\n\tautoCloseBefore?: string;\n\n\t/**\n\t * The language's folding rules.\n\t */\n\tfolding?: FoldingRules;\n\n\t/**\n\t * **Deprecated** Do not use.\n\t *\n\t * @deprecated Will be replaced by a better API soon.\n\t */\n\t__electricCharacterSupport?: {\n\t\tdocComment?: IDocComment;\n\t};\n}\n\n/**\n * Describes indentation rules for a language.\n */\nexport interface IndentationRule {\n\t/**\n\t * If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches).\n\t */\n\tdecreaseIndentPattern: RegExp;\n\t/**\n\t * If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).\n\t */\n\tincreaseIndentPattern: RegExp;\n\t/**\n\t * If a line matches this pattern, then **only the next line** after it should be indented once.\n\t */\n\tindentNextLinePattern?: RegExp | null;\n\t/**\n\t * If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.\n\t */\n\tunIndentedLinePattern?: RegExp | null;\n\n}\n\n/**\n * Describes language specific folding markers such as '#region' and '#endregion'.\n * The start and end regexes will be tested against the contents of all lines and must be designed efficiently:\n * - the regex should start with '^'\n * - regexp flags (i, g) are ignored\n */\nexport interface FoldingMarkers {\n\tstart: RegExp;\n\tend: RegExp;\n}\n\n/**\n * Describes folding rules for a language.\n */\nexport interface FoldingRules {\n\t/**\n\t * Used by the indentation based strategy to decide whether empty lines belong to the previous or the next block.\n\t * A language adheres to the off-side rule if blocks in that language are expressed by their indentation.\n\t * See [wikipedia](https://en.wikipedia.org/wiki/Off-side_rule) for more information.\n\t * If not set, `false` is used and empty lines belong to the previous block.\n\t */\n\toffSide?: boolean;\n\n\t/**\n\t * Region markers used by the language.\n\t */\n\tmarkers?: FoldingMarkers;\n}\n\n/**\n * Describes a rule to be evaluated when pressing Enter.\n */\nexport interface OnEnterRule {\n\t/**\n\t * This rule will only execute if the text before the cursor matches this regular expression.\n\t */\n\tbeforeText: RegExp;\n\t/**\n\t * This rule will only execute if the text after the cursor matches this regular expression.\n\t */\n\tafterText?: RegExp;\n\t/**\n\t * This rule will only execute if the text above the this line matches this regular expression.\n\t */\n\toneLineAboveText?: RegExp;\n\t/**\n\t * The action to execute.\n\t */\n\taction: EnterAction;\n}\n\n/**\n * Definition of documentation comments (e.g. Javadoc/JSdoc)\n */\nexport interface IDocComment {\n\t/**\n\t * The string that starts a doc comment (e.g. '/**')\n\t */\n\topen: string;\n\t/**\n\t * The string that appears on the last line and closes the doc comment (e.g. ' * /').\n\t */\n\tclose?: string;\n}\n\n/**\n * A tuple of two characters, like a pair of\n * opening and closing brackets.\n */\nexport type CharacterPair = [string, string];\n\nexport interface IAutoClosingPair {\n\topen: string;\n\tclose: string;\n}\n\nexport interface IAutoClosingPairConditional extends IAutoClosingPair {\n\tnotIn?: string[];\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone = 0,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent = 1,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent = 2,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent = 3\n}\n\n/**\n * Describes what to do when pressing Enter.\n */\nexport interface EnterAction {\n\t/**\n\t * Describe what to do with the indentation.\n\t */\n\tindentAction: IndentAction;\n\t/**\n\t * Describes text to be appended after the new line and after the indentation.\n\t */\n\tappendText?: string;\n\t/**\n\t * Describes the number of characters to remove from the new line's indentation.\n\t */\n\tremoveText?: number;\n}\n\n/**\n * @internal\n */\nexport interface CompleteEnterAction {\n\t/**\n\t * Describe what to do with the indentation.\n\t */\n\tindentAction: IndentAction;\n\t/**\n\t * Describes text to be appended after the new line and after the indentation.\n\t */\n\tappendText: string;\n\t/**\n\t * Describes the number of characters to remove from the new line's indentation.\n\t */\n\tremoveText: number;\n\t/**\n\t * The line's indentation minus removeText\n\t */\n\tindentation: string;\n}\n\n/**\n * @internal\n */\nexport class StandardAutoClosingPairConditional {\n\t_standardAutoClosingPairConditionalBrand: void;\n\n\treadonly open: string;\n\treadonly close: string;\n\tprivate readonly _standardTokenMask: number;\n\n\tconstructor(source: IAutoClosingPairConditional) {\n\t\tthis.open = source.open;\n\t\tthis.close = source.close;\n\n\t\t// initially allowed in all tokens\n\t\tthis._standardTokenMask = 0;\n\n\t\tif (Array.isArray(source.notIn)) {\n\t\t\tfor (let i = 0, len = source.notIn.length; i < len; i++) {\n\t\t\t\tconst notIn: string = source.notIn[i];\n\t\t\t\tswitch (notIn) {\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tthis._standardTokenMask |= StandardTokenType.String;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'comment':\n\t\t\t\t\t\tthis._standardTokenMask |= StandardTokenType.Comment;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'regex':\n\t\t\t\t\t\tthis._standardTokenMask |= StandardTokenType.RegEx;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic isOK(standardToken: StandardTokenType): boolean {\n\t\treturn (this._standardTokenMask & <number>standardToken) === 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRelativePattern, match as matchGlobPattern } from 'vs/base/common/glob';\nimport { URI } from 'vs/base/common/uri'; // TODO@Alex\n\nexport interface LanguageFilter {\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string | IRelativePattern;\n\t/**\n\t * This provider is implemented in the UI thread.\n\t */\n\thasAccessToAllModels?: boolean;\n\texclusive?: boolean;\n}\n\nexport type LanguageSelector = string | LanguageFilter | Array<string | LanguageFilter>;\n\nexport function score(selector: LanguageSelector | undefined, candidateUri: URI, candidateLanguage: string, candidateIsSynchronized: boolean): number {\n\n\tif (Array.isArray(selector)) {\n\t\t// array -> take max individual value\n\t\tlet ret = 0;\n\t\tfor (const filter of selector) {\n\t\t\tconst value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized);\n\t\t\tif (value === 10) {\n\t\t\t\treturn value; // already at the highest\n\t\t\t}\n\t\t\tif (value > ret) {\n\t\t\t\tret = value;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t} else if (typeof selector === 'string') {\n\n\t\tif (!candidateIsSynchronized) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// short-hand notion, desugars to\n\t\t// 'fooLang' -> { language: 'fooLang'}\n\t\t// '*' -> { language: '*' }\n\t\tif (selector === '*') {\n\t\t\treturn 5;\n\t\t} else if (selector === candidateLanguage) {\n\t\t\treturn 10;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\n\t} else if (selector) {\n\t\t// filter -> select accordingly, use defaults for scheme\n\t\tconst { language, pattern, scheme, hasAccessToAllModels } = selector;\n\n\t\tif (!candidateIsSynchronized && !hasAccessToAllModels) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet ret = 0;\n\n\t\tif (scheme) {\n\t\t\tif (scheme === candidateUri.scheme) {\n\t\t\t\tret = 10;\n\t\t\t} else if (scheme === '*') {\n\t\t\t\tret = 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (language) {\n\t\t\tif (language === candidateLanguage) {\n\t\t\t\tret = 10;\n\t\t\t} else if (language === '*') {\n\t\t\t\tret = Math.max(ret, 5);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (pattern) {\n\t\t\tif (pattern === candidateUri.fsPath || matchGlobPattern(pattern, candidateUri.fsPath)) {\n\t\t\t\tret = 10;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\nimport { ILink } from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n\tInvalid = 0,\n\tStart = 1,\n\tH = 2,\n\tHT = 3,\n\tHTT = 4,\n\tHTTP = 5,\n\tF = 6,\n\tFI = 7,\n\tFIL = 8,\n\tBeforeColon = 9,\n\tAfterColon = 10,\n\tAlmostThere = 11,\n\tEnd = 12,\n\tAccept = 13,\n\tLastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class Uint8Matrix {\n\n\tprivate readonly _data: Uint8Array;\n\tpublic readonly rows: number;\n\tpublic readonly cols: number;\n\n\tconstructor(rows: number, cols: number, defaultValue: number) {\n\t\tconst data = new Uint8Array(rows * cols);\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\n\t\t\tdata[i] = defaultValue;\n\t\t}\n\n\t\tthis._data = data;\n\t\tthis.rows = rows;\n\t\tthis.cols = cols;\n\t}\n\n\tpublic get(row: number, col: number): number {\n\t\treturn this._data[row * this.cols + col];\n\t}\n\n\tpublic set(row: number, col: number, value: number): void {\n\t\tthis._data[row * this.cols + col] = value;\n\t}\n}\n\nexport class StateMachine {\n\n\tprivate readonly _states: Uint8Matrix;\n\tprivate readonly _maxCharCode: number;\n\n\tconstructor(edges: Edge[]) {\n\t\tlet maxCharCode = 0;\n\t\tlet maxState = State.Invalid;\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tif (chCode > maxCharCode) {\n\t\t\t\tmaxCharCode = chCode;\n\t\t\t}\n\t\t\tif (from > maxState) {\n\t\t\t\tmaxState = from;\n\t\t\t}\n\t\t\tif (to > maxState) {\n\t\t\t\tmaxState = to;\n\t\t\t}\n\t\t}\n\n\t\tmaxCharCode++;\n\t\tmaxState++;\n\n\t\tlet states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tstates.set(from, chCode, to);\n\t\t}\n\n\t\tthis._states = states;\n\t\tthis._maxCharCode = maxCharCode;\n\t}\n\n\tpublic nextState(currentState: State, chCode: number): State {\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\n\t\t\treturn State.Invalid;\n\t\t}\n\t\treturn this._states.get(currentState, chCode);\n\t}\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n\tif (_stateMachine === null) {\n\t\t_stateMachine = new StateMachine([\n\t\t\t[State.Start, CharCode.h, State.H],\n\t\t\t[State.Start, CharCode.H, State.H],\n\t\t\t[State.Start, CharCode.f, State.F],\n\t\t\t[State.Start, CharCode.F, State.F],\n\n\t\t\t[State.H, CharCode.t, State.HT],\n\t\t\t[State.H, CharCode.T, State.HT],\n\n\t\t\t[State.HT, CharCode.t, State.HTT],\n\t\t\t[State.HT, CharCode.T, State.HTT],\n\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\n\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.F, CharCode.i, State.FI],\n\t\t\t[State.F, CharCode.I, State.FI],\n\n\t\t\t[State.FI, CharCode.l, State.FIL],\n\t\t\t[State.FI, CharCode.L, State.FIL],\n\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\n\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\n\t\t]);\n\t}\n\treturn _stateMachine;\n}\n\n\nconst enum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n\tif (_classifier === null) {\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\treturn _classifier;\n}\n\nexport class LinkComputer {\n\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = classifier.get(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t// Handle links enclosed in parens, square brackets and curlys.\n\t\tif (linkBeginIndex > 0) {\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n\t\t\tif (\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n\t\t\t) {\n\t\t\t\t// Do not end in ) if ( is before the link start\n\t\t\t\t// Do not end in ] if [ is before the link start\n\t\t\t\t// Do not end in } if { is before the link start\n\t\t\t\tlastIncludedCharIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n\t\tconst classifier = getClassifier();\n\n\t\tlet result: ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet linkBeginChCode = 0;\n\t\t\tlet state = State.Start;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet inSquareBrackets = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\t\t\t\tconst chCode = line.charCodeAt(j);\n\n\t\t\t\tif (state === State.Accept) {\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase CharCode.OpenParen:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseParen:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\n\t\t\t\t\t\t\tinSquareBrackets = true;\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\n\t\t\t\t\t\t\tinSquareBrackets = false;\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\t\t\t\t\t\tcase CharCode.SingleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.BackTick:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Asterisk:\n\t\t\t\t\t\t\t// `*` terminates a link if the link began with `*`\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Asterisk) ? CharacterClass.ForceTermination : CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Pipe:\n\t\t\t\t\t\t\t// `|` terminates a link if the link began with `|`\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Pipe) ? CharacterClass.ForceTermination : CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Space:\n\t\t\t\t\t\t\t// ` ` allow space in between [ and ]\n\t\t\t\t\t\t\tchClass = (inSquareBrackets ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === State.End) {\n\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\n\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = State.Accept;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\n\t\t\t\t\tif (state === State.Invalid) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = State.Start;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t\tlinkBeginChCode = chCode;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === State.Accept) {\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ColorId, ITokenizationRegistry, ITokenizationSupport, ITokenizationSupportChangedEvent } from 'vs/editor/common/modes';\nimport { withUndefinedAsNull } from 'vs/base/common/types';\nimport { keys } from 'vs/base/common/map';\n\nexport class TokenizationRegistryImpl implements ITokenizationRegistry {\n\n\tprivate readonly _map = new Map<string, ITokenizationSupport>();\n\tprivate readonly _promises = new Map<string, Thenable<void>>();\n\n\tprivate readonly _onDidChange = new Emitter<ITokenizationSupportChangedEvent>();\n\tpublic readonly onDidChange: Event<ITokenizationSupportChangedEvent> = this._onDidChange.event;\n\n\tprivate _colorMap: Color[] | null;\n\n\tconstructor() {\n\t\tthis._colorMap = null;\n\t}\n\n\tpublic fire(languages: string[]): void {\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: languages,\n\t\t\tchangedColorMap: false\n\t\t});\n\t}\n\n\tpublic register(language: string, support: ITokenizationSupport) {\n\t\tthis._map.set(language, support);\n\t\tthis.fire([language]);\n\t\treturn toDisposable(() => {\n\t\t\tif (this._map.get(language) !== support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._map.delete(language);\n\t\t\tthis.fire([language]);\n\t\t});\n\t}\n\n\tpublic registerPromise(language: string, supportPromise: Thenable<ITokenizationSupport | null>): IDisposable {\n\n\t\tlet registration: IDisposable | null = null;\n\t\tlet isDisposed: boolean = false;\n\n\t\tthis._promises.set(language, supportPromise.then(support => {\n\t\t\tthis._promises.delete(language);\n\t\t\tif (isDisposed || !support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tregistration = this.register(language, support);\n\t\t}));\n\n\t\treturn toDisposable(() => {\n\t\t\tisDisposed = true;\n\t\t\tif (registration) {\n\t\t\t\tregistration.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getPromise(language: string): Thenable<ITokenizationSupport> | null {\n\t\tconst support = this.get(language);\n\t\tif (support) {\n\t\t\treturn Promise.resolve(support);\n\t\t}\n\t\tconst promise = this._promises.get(language);\n\t\tif (promise) {\n\t\t\treturn promise.then(_ => this.get(language)!);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get(language: string): ITokenizationSupport | null {\n\t\treturn withUndefinedAsNull(this._map.get(language));\n\t}\n\n\tpublic setColorMap(colorMap: Color[]): void {\n\t\tthis._colorMap = colorMap;\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: keys(this._map),\n\t\t\tchangedColorMap: true\n\t\t});\n\t}\n\n\tpublic getColorMap(): Color[] | null {\n\t\treturn this._colorMap;\n\t}\n\n\tpublic getDefaultBackground(): Color | null {\n\t\tif (this._colorMap && this._colorMap.length > ColorId.DefaultBackground) {\n\t\t\treturn this._colorMap[ColorId.DefaultBackground];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint32 } from 'vs/base/common/uint';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index: number, remainder: number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic changeValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcnt = toUint32(cnt);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet maxCnt = oldValues.length - startIndex;\n\t\tif (cnt >= maxCnt) {\n\t\t\tcnt = maxCnt;\n\t\t}\n\n\t\tif (cnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - cnt);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getAccumulatedValue(index);\n\t}\n\n\tprivate _getAccumulatedValue(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalValue();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IModelContentChange } from 'vs/editor/common/model/textModelEvents';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n}\n\nexport class MirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\treturn this._lines.join(this._eol);\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\tconst _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as platform from 'vs/base/common/platform';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport { FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { Constants } from 'vs/base/common/uint';\nimport { USUAL_WORD_SEPARATORS } from 'vs/editor/common/model/wordHelper';\nimport { AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDimension } from 'vs/editor/common/editorCommon';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\n\n//#region typed options\n\n/**\n * Configuration options for auto closing quotes and brackets\n */\nexport type EditorAutoClosingStrategy = 'always' | 'languageDefined' | 'beforeWhitespace' | 'never';\n\n/**\n * Configuration options for auto wrapping quotes and brackets\n */\nexport type EditorAutoSurroundStrategy = 'languageDefined' | 'quotes' | 'brackets' | 'never';\n\n/**\n * Configuration options for typing over closing quotes or brackets\n */\nexport type EditorAutoClosingOvertypeStrategy = 'always' | 'auto' | 'never';\n\n/**\n * Configuration options for auto indentation in the editor\n */\nexport const enum EditorAutoIndentStrategy {\n\tNone = 0,\n\tKeep = 1,\n\tBrackets = 2,\n\tAdvanced = 3,\n\tFull = 4\n}\n\n/**\n * Configuration options for the editor.\n */\nexport interface IEditorOptions {\n\t/**\n\t * This editor is used inside a diff editor.\n\t */\n\tinDiffEditor?: boolean;\n\t/**\n\t * The aria label for the editor's textarea (when it is focused).\n\t */\n\tariaLabel?: string;\n\t/**\n\t * Render vertical lines at the specified columns.\n\t * Defaults to empty array.\n\t */\n\trulers?: (number | IRulerOption)[];\n\t/**\n\t * A string containing the word separators used when doing word navigation.\n\t * Defaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?\n\t */\n\twordSeparators?: string;\n\t/**\n\t * Enable Linux primary clipboard.\n\t * Defaults to true.\n\t */\n\tselectionClipboard?: boolean;\n\t/**\n\t * Control the rendering of line numbers.\n\t * If it is a function, it will be invoked when rendering a line number and the return value will be rendered.\n\t * Otherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\n\t * Otherwise, line numbers will not be rendered.\n\t * Defaults to `on`.\n\t */\n\tlineNumbers?: LineNumbersType;\n\t/**\n\t * Controls the minimal number of visible leading and trailing lines surrounding the cursor.\n\t * Defaults to 0.\n\t*/\n\tcursorSurroundingLines?: number;\n\t/**\n\t * Controls when `cursorSurroundingLines` should be enforced\n\t * Defaults to `default`, `cursorSurroundingLines` is not enforced when cursor position is changed\n\t * by mouse.\n\t*/\n\tcursorSurroundingLinesStyle?: 'default' | 'all';\n\t/**\n\t * Render last line number when the file ends with a newline.\n\t * Defaults to true.\n\t*/\n\trenderFinalNewline?: boolean;\n\t/**\n\t * Should the corresponding line be selected when clicking on the line number?\n\t * Defaults to true.\n\t */\n\tselectOnLineNumbers?: boolean;\n\t/**\n\t * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n\t * Defaults to 5.\n\t */\n\tlineNumbersMinChars?: number;\n\t/**\n\t * Enable the rendering of the glyph margin.\n\t * Defaults to true in vscode and to false in monaco-editor.\n\t */\n\tglyphMargin?: boolean;\n\t/**\n\t * The width reserved for line decorations (in px).\n\t * Line decorations are placed between line numbers and the editor content.\n\t * You can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\n\t * Defaults to 10.\n\t */\n\tlineDecorationsWidth?: number | string;\n\t/**\n\t * When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\n\t * This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\n\t * Defaults to 30 (px).\n\t */\n\trevealHorizontalRightPadding?: number;\n\t/**\n\t * Render the editor selection with rounded borders.\n\t * Defaults to true.\n\t */\n\troundedSelection?: boolean;\n\t/**\n\t * Class name to be added to the editor.\n\t */\n\textraEditorClassName?: string;\n\t/**\n\t * Should the editor be read only.\n\t * Defaults to false.\n\t */\n\treadOnly?: boolean;\n\t/**\n\t * Rename matching regions on type.\n\t * Defaults to false.\n\t */\n\trenameOnType?: boolean;\n\t/**\n\t * Should the editor render validation decorations.\n\t * Defaults to editable.\n\t */\n\trenderValidationDecorations?: 'editable' | 'on' | 'off';\n\t/**\n\t * Control the behavior and rendering of the scrollbars.\n\t */\n\tscrollbar?: IEditorScrollbarOptions;\n\t/**\n\t * Control the behavior and rendering of the minimap.\n\t */\n\tminimap?: IEditorMinimapOptions;\n\t/**\n\t * Control the behavior of the find widget.\n\t */\n\tfind?: IEditorFindOptions;\n\t/**\n\t * Display overflow widgets as `fixed`.\n\t * Defaults to `false`.\n\t */\n\tfixedOverflowWidgets?: boolean;\n\t/**\n\t * The number of vertical lanes the overview ruler should render.\n\t * Defaults to 3.\n\t */\n\toverviewRulerLanes?: number;\n\t/**\n\t * Controls if a border should be drawn around the overview ruler.\n\t * Defaults to `true`.\n\t */\n\toverviewRulerBorder?: boolean;\n\t/**\n\t * Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\n\t * Defaults to 'blink'.\n\t */\n\tcursorBlinking?: 'blink' | 'smooth' | 'phase' | 'expand' | 'solid';\n\t/**\n\t * Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\n\t * Defaults to false.\n\t */\n\tmouseWheelZoom?: boolean;\n\t/**\n\t * Control the mouse pointer style, either 'text' or 'default' or 'copy'\n\t * Defaults to 'text'\n\t */\n\tmouseStyle?: 'text' | 'default' | 'copy';\n\t/**\n\t * Enable smooth caret animation.\n\t * Defaults to false.\n\t */\n\tcursorSmoothCaretAnimation?: boolean;\n\t/**\n\t * Control the cursor style, either 'block' or 'line'.\n\t * Defaults to 'line'.\n\t */\n\tcursorStyle?: 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin';\n\t/**\n\t * Control the width of the cursor when cursorStyle is set to 'line'\n\t */\n\tcursorWidth?: number;\n\t/**\n\t * Enable font ligatures.\n\t * Defaults to false.\n\t */\n\tfontLigatures?: boolean | string;\n\t/**\n\t * Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers.\n\t * The usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.\n\t * Defaults to false.\n\t */\n\tdisableLayerHinting?: boolean;\n\t/**\n\t * Disable the optimizations for monospace fonts.\n\t * Defaults to false.\n\t */\n\tdisableMonospaceOptimizations?: boolean;\n\t/**\n\t * Should the cursor be hidden in the overview ruler.\n\t * Defaults to false.\n\t */\n\thideCursorInOverviewRuler?: boolean;\n\t/**\n\t * Enable that scrolling can go one screen size after the last line.\n\t * Defaults to true.\n\t */\n\tscrollBeyondLastLine?: boolean;\n\t/**\n\t * Enable that scrolling can go beyond the last column by a number of columns.\n\t * Defaults to 5.\n\t */\n\tscrollBeyondLastColumn?: number;\n\t/**\n\t * Enable that the editor animates scrolling to a position.\n\t * Defaults to false.\n\t */\n\tsmoothScrolling?: boolean;\n\t/**\n\t * Enable that the editor will install an interval to check if its container dom node size has changed.\n\t * Enabling this might have a severe performance impact.\n\t * Defaults to false.\n\t */\n\tautomaticLayout?: boolean;\n\t/**\n\t * Control the wrapping of the editor.\n\t * When `wordWrap` = \"off\", the lines will never wrap.\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\n\t * Defaults to \"off\".\n\t */\n\twordWrap?: 'off' | 'on' | 'wordWrapColumn' | 'bounded';\n\t/**\n\t * Control the wrapping of the editor.\n\t * When `wordWrap` = \"off\", the lines will never wrap.\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\n\t * Defaults to 80.\n\t */\n\twordWrapColumn?: number;\n\t/**\n\t * Force word wrapping when the text appears to be of a minified/generated file.\n\t * Defaults to true.\n\t */\n\twordWrapMinified?: boolean;\n\t/**\n\t * Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\n\t * Defaults to 'same' in vscode and to 'none' in monaco-editor.\n\t */\n\twrappingIndent?: 'none' | 'same' | 'indent' | 'deepIndent';\n\t/**\n\t * Controls the wrapping strategy to use.\n\t * Defaults to 'simple'.\n\t */\n\twrappingStrategy?: 'simple' | 'advanced';\n\t/**\n\t * Configure word wrapping characters. A break will be introduced before these characters.\n\t * Defaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'.\n\t */\n\twordWrapBreakBeforeCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters.\n\t * Defaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'.\n\t */\n\twordWrapBreakAfterCharacters?: string;\n\t/**\n\t * Performance guard: Stop rendering a line after x characters.\n\t * Defaults to 10000.\n\t * Use -1 to never stop rendering\n\t */\n\tstopRenderingLineAfter?: number;\n\t/**\n\t * Configure the editor's hover.\n\t */\n\thover?: IEditorHoverOptions;\n\t/**\n\t * Enable detecting links and making them clickable.\n\t * Defaults to true.\n\t */\n\tlinks?: boolean;\n\t/**\n\t * Enable inline color decorators and color picker rendering.\n\t */\n\tcolorDecorators?: boolean;\n\t/**\n\t * Control the behaviour of comments in the editor.\n\t */\n\tcomments?: IEditorCommentsOptions;\n\t/**\n\t * Enable custom contextmenu.\n\t * Defaults to true.\n\t */\n\tcontextmenu?: boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * FastScrolling mulitplier speed when pressing `Alt`\n\t * Defaults to 5.\n\t */\n\tfastScrollSensitivity?: number;\n\t/**\n\t * Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad.\n\t * Defaults to true.\n\t */\n\tscrollPredominantAxis?: boolean;\n\t/**\n\t * Enable that the selection with the mouse and keys is doing column selection.\n\t * Defaults to false.\n\t */\n\tcolumnSelection?: boolean;\n\t/**\n\t * The modifier to be used to add multiple cursors with the mouse.\n\t * Defaults to 'alt'\n\t */\n\tmultiCursorModifier?: 'ctrlCmd' | 'alt';\n\t/**\n\t * Merge overlapping selections.\n\t * Defaults to true\n\t */\n\tmultiCursorMergeOverlapping?: boolean;\n\t/**\n\t * Configure the behaviour when pasting a text with the line count equal to the cursor count.\n\t * Defaults to 'spread'.\n\t */\n\tmultiCursorPaste?: 'spread' | 'full';\n\t/**\n\t * Configure the editor's accessibility support.\n\t * Defaults to 'auto'. It is best to leave this to 'auto'.\n\t */\n\taccessibilitySupport?: 'auto' | 'off' | 'on';\n\t/**\n\t * Controls the number of lines in the editor that can be read out by a screen reader\n\t */\n\taccessibilityPageSize?: number;\n\t/**\n\t * Suggest options.\n\t */\n\tsuggest?: ISuggestOptions;\n\t/**\n\t *\n\t */\n\tgotoLocation?: IGotoLocationOptions;\n\t/**\n\t * Enable quick suggestions (shadow suggestions)\n\t * Defaults to true.\n\t */\n\tquickSuggestions?: boolean | IQuickSuggestionsOptions;\n\t/**\n\t * Quick suggestions show delay (in ms)\n\t * Defaults to 10 (ms)\n\t */\n\tquickSuggestionsDelay?: number;\n\t/**\n\t * Controls the spacing around the editor.\n\t */\n\tpadding?: IEditorPaddingOptions;\n\t/**\n\t * Parameter hint options.\n\t */\n\tparameterHints?: IEditorParameterHintOptions;\n\t/**\n\t * Options for auto closing brackets.\n\t * Defaults to language defined behavior.\n\t */\n\tautoClosingBrackets?: EditorAutoClosingStrategy;\n\t/**\n\t * Options for auto closing quotes.\n\t * Defaults to language defined behavior.\n\t */\n\tautoClosingQuotes?: EditorAutoClosingStrategy;\n\t/**\n\t * Options for typing over closing quotes or brackets.\n\t */\n\tautoClosingOvertype?: EditorAutoClosingOvertypeStrategy;\n\t/**\n\t * Options for auto surrounding.\n\t * Defaults to always allowing auto surrounding.\n\t */\n\tautoSurround?: EditorAutoSurroundStrategy;\n\t/**\n\t * Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\n\t * Defaults to advanced.\n\t */\n\tautoIndent?: 'none' | 'keep' | 'brackets' | 'advanced' | 'full';\n\t/**\n\t * Enable format on type.\n\t * Defaults to false.\n\t */\n\tformatOnType?: boolean;\n\t/**\n\t * Enable format on paste.\n\t * Defaults to false.\n\t */\n\tformatOnPaste?: boolean;\n\t/**\n\t * Controls if the editor should allow to move selections via drag and drop.\n\t * Defaults to false.\n\t */\n\tdragAndDrop?: boolean;\n\t/**\n\t * Enable the suggestion box to pop-up on trigger characters.\n\t * Defaults to true.\n\t */\n\tsuggestOnTriggerCharacters?: boolean;\n\t/**\n\t * Accept suggestions on ENTER.\n\t * Defaults to 'on'.\n\t */\n\tacceptSuggestionOnEnter?: 'on' | 'smart' | 'off';\n\t/**\n\t * Accept suggestions on provider defined characters.\n\t * Defaults to true.\n\t */\n\tacceptSuggestionOnCommitCharacter?: boolean;\n\t/**\n\t * Enable snippet suggestions. Default to 'true'.\n\t */\n\tsnippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n\t/**\n\t * Copying without a selection copies the current line.\n\t */\n\temptySelectionClipboard?: boolean;\n\t/**\n\t * Syntax highlighting is copied.\n\t */\n\tcopyWithSyntaxHighlighting?: boolean;\n\t/**\n\t * The history mode for suggestions.\n\t */\n\tsuggestSelection?: 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix';\n\t/**\n\t * The font size for the suggest widget.\n\t * Defaults to the editor font size.\n\t */\n\tsuggestFontSize?: number;\n\t/**\n\t * The line height for the suggest widget.\n\t * Defaults to the editor line height.\n\t */\n\tsuggestLineHeight?: number;\n\t/**\n\t * Enable tab completion.\n\t */\n\ttabCompletion?: 'on' | 'off' | 'onlySnippets';\n\t/**\n\t * Enable selection highlight.\n\t * Defaults to true.\n\t */\n\tselectionHighlight?: boolean;\n\t/**\n\t * Enable semantic occurrences highlight.\n\t * Defaults to true.\n\t */\n\toccurrencesHighlight?: boolean;\n\t/**\n\t * Show code lens\n\t * Defaults to true.\n\t */\n\tcodeLens?: boolean;\n\t/**\n\t * Control the behavior and rendering of the code action lightbulb.\n\t */\n\tlightbulb?: IEditorLightbulbOptions;\n\t/**\n\t * Timeout for running code actions on save.\n\t */\n\tcodeActionsOnSaveTimeout?: number;\n\t/**\n\t * Enable code folding.\n\t * Defaults to true.\n\t */\n\tfolding?: boolean;\n\t/**\n\t * Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\n\t * Defaults to 'auto'.\n\t */\n\tfoldingStrategy?: 'auto' | 'indentation';\n\t/**\n\t * Enable highlight for folded regions.\n\t * Defaults to true.\n\t */\n\tfoldingHighlight?: boolean;\n\t/**\n\t * Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\n\t * Defaults to 'mouseover'.\n\t */\n\tshowFoldingControls?: 'always' | 'mouseover';\n\t/**\n\t * Controls whether clicking on the empty content after a folded line will unfold the line.\n\t * Defaults to false.\n\t */\n\tunfoldOnClickAfterEndOfLine?: boolean;\n\t/**\n\t * Enable highlighting of matching brackets.\n\t * Defaults to 'always'.\n\t */\n\tmatchBrackets?: 'never' | 'near' | 'always';\n\t/**\n\t * Enable rendering of whitespace.\n\t * Defaults to none.\n\t */\n\trenderWhitespace?: 'none' | 'boundary' | 'selection' | 'all';\n\t/**\n\t * Enable rendering of control characters.\n\t * Defaults to false.\n\t */\n\trenderControlCharacters?: boolean;\n\t/**\n\t * Enable rendering of indent guides.\n\t * Defaults to true.\n\t */\n\trenderIndentGuides?: boolean;\n\t/**\n\t * Enable highlighting of the active indent guide.\n\t * Defaults to true.\n\t */\n\thighlightActiveIndentGuide?: boolean;\n\t/**\n\t * Enable rendering of current line highlight.\n\t * Defaults to all.\n\t */\n\trenderLineHighlight?: 'none' | 'gutter' | 'line' | 'all';\n\t/**\n\t * Control if the current line highlight should be rendered only the editor is focused.\n\t * Defaults to false.\n\t */\n\trenderLineHighlightOnlyWhenFocus?: boolean;\n\t/**\n\t * Inserting and deleting whitespace follows tab stops.\n\t */\n\tuseTabStops?: boolean;\n\t/**\n\t * The font family\n\t */\n\tfontFamily?: string;\n\t/**\n\t * The font weight\n\t */\n\tfontWeight?: string;\n\t/**\n\t * The font size\n\t */\n\tfontSize?: number;\n\t/**\n\t * The line height\n\t */\n\tlineHeight?: number;\n\t/**\n\t * The letter spacing\n\t */\n\tletterSpacing?: number;\n\t/**\n\t * Controls fading out of unused variables.\n\t */\n\tshowUnused?: boolean;\n\t/**\n\t * Controls whether to focus the inline editor in the peek widget by default.\n\t * Defaults to false.\n\t */\n\tpeekWidgetDefaultFocus?: 'tree' | 'editor';\n\t/**\n\t * Controls whether the definition link opens element in the peek widget.\n\t * Defaults to false.\n\t */\n\tdefinitionLinkOpensInPeek?: boolean;\n}\n\nexport interface IEditorConstructionOptions extends IEditorOptions {\n\t/**\n\t * The initial editor dimension (to avoid measuring the container).\n\t */\n\tdimension?: IDimension;\n}\n\n/**\n * @internal\n * The width of the minimap gutter, in pixels.\n */\nexport const MINIMAP_GUTTER_WIDTH = 8;\n\n/**\n * Configuration options for the diff editor.\n */\nexport interface IDiffEditorOptions extends IEditorOptions {\n\t/**\n\t * Allow the user to resize the diff editor split view.\n\t * Defaults to true.\n\t */\n\tenableSplitViewResizing?: boolean;\n\t/**\n\t * Render the differences in two side-by-side editors.\n\t * Defaults to true.\n\t */\n\trenderSideBySide?: boolean;\n\t/**\n\t * Timeout in milliseconds after which diff computation is cancelled.\n\t * Defaults to 5000.\n\t */\n\tmaxComputationTime?: number;\n\t/**\n\t * Compute the diff by ignoring leading/trailing whitespace\n\t * Defaults to true.\n\t */\n\tignoreTrimWhitespace?: boolean;\n\t/**\n\t * Render +/- indicators for added/deleted changes.\n\t * Defaults to true.\n\t */\n\trenderIndicators?: boolean;\n\t/**\n\t * Original model should be editable?\n\t * Defaults to false.\n\t */\n\toriginalEditable?: boolean;\n}\n\n//#endregion\n\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport class ConfigurationChangedEvent {\n\tprivate readonly _values: boolean[];\n\t/**\n\t * @internal\n\t */\n\tconstructor(values: boolean[]) {\n\t\tthis._values = values;\n\t}\n\tpublic hasChanged(id: EditorOption): boolean {\n\t\treturn this._values[id];\n\t}\n}\n\n/**\n * @internal\n */\nexport class ValidatedEditorOptions {\n\tprivate readonly _values: any[] = [];\n\tpublic _read<T>(option: EditorOption): T {\n\t\treturn this._values[option];\n\t}\n\tpublic get<T extends EditorOption>(id: T): FindComputedEditorOptionValueById<T> {\n\t\treturn this._values[id];\n\t}\n\tpublic _write<T>(option: EditorOption, value: T): void {\n\t\tthis._values[option] = value;\n\t}\n}\n\n/**\n * All computed editor options.\n */\nexport interface IComputedEditorOptions {\n\tget<T extends EditorOption>(id: T): FindComputedEditorOptionValueById<T>;\n}\n\n//#region IEditorOption\n\n/**\n * @internal\n */\nexport interface IEnvironmentalOptions {\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\treadonly fontInfo: FontInfo;\n\treadonly extraEditorClassName: string;\n\treadonly isDominatedByLongLines: boolean;\n\treadonly viewLineCount: number;\n\treadonly lineNumbersDigitCount: number;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly pixelRatio: number;\n\treadonly tabFocusMode: boolean;\n\treadonly accessibilitySupport: AccessibilitySupport;\n}\n\nexport interface IEditorOption<K1 extends EditorOption, V> {\n\treadonly id: K1;\n\treadonly name: string;\n\tdefaultValue: V;\n\t/**\n\t * @internal\n\t */\n\treadonly schema: IConfigurationPropertySchema | { [path: string]: IConfigurationPropertySchema; } | undefined;\n\t/**\n\t * @internal\n\t */\n\tvalidate(input: any): V;\n\t/**\n\t * @internal\n\t */\n\tcompute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: V): V;\n}\n\ntype PossibleKeyName0<V> = { [K in keyof IEditorOptions]: IEditorOptions[K] extends V | undefined ? K : never }[keyof IEditorOptions];\ntype PossibleKeyName<V> = NonNullable<PossibleKeyName0<V>>;\n\n/**\n * @internal\n */\nabstract class BaseEditorOption<K1 extends EditorOption, V> implements IEditorOption<K1, V> {\n\n\tpublic readonly id: K1;\n\tpublic readonly name: string;\n\tpublic readonly defaultValue: V;\n\tpublic readonly schema: IConfigurationPropertySchema | { [path: string]: IConfigurationPropertySchema; } | undefined;\n\n\tconstructor(id: K1, name: string, defaultValue: V, schema?: IConfigurationPropertySchema | { [path: string]: IConfigurationPropertySchema; }) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.defaultValue = defaultValue;\n\t\tthis.schema = schema;\n\t}\n\n\tpublic abstract validate(input: any): V;\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: V): V {\n\t\treturn value;\n\t}\n}\n\n/**\n * @internal\n */\nabstract class ComputedEditorOption<K1 extends EditorOption, V> implements IEditorOption<K1, V> {\n\n\tpublic readonly id: K1;\n\tpublic readonly name: '_never_';\n\tpublic readonly defaultValue: V;\n\tpublic readonly deps: EditorOption[] | null;\n\tpublic readonly schema: IConfigurationPropertySchema | undefined = undefined;\n\n\tconstructor(id: K1, deps: EditorOption[] | null = null) {\n\t\tthis.id = id;\n\t\tthis.name = '_never_';\n\t\tthis.defaultValue = <any>undefined;\n\t\tthis.deps = deps;\n\t}\n\n\tpublic validate(input: any): V {\n\t\treturn this.defaultValue;\n\t}\n\n\tpublic abstract compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: V): V;\n}\n\nclass SimpleEditorOption<K1 extends EditorOption, V> implements IEditorOption<K1, V> {\n\n\tpublic readonly id: K1;\n\tpublic readonly name: PossibleKeyName<V>;\n\tpublic readonly defaultValue: V;\n\tpublic readonly schema: IConfigurationPropertySchema | undefined;\n\n\tconstructor(id: K1, name: PossibleKeyName<V>, defaultValue: V, schema?: IConfigurationPropertySchema) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.defaultValue = defaultValue;\n\t\tthis.schema = schema;\n\t}\n\n\tpublic validate(input: any): V {\n\t\tif (typeof input === 'undefined') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\treturn input as any;\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: V): V {\n\t\treturn value;\n\t}\n}\n\nclass EditorBooleanOption<K1 extends EditorOption> extends SimpleEditorOption<K1, boolean> {\n\n\tpublic static boolean(value: any, defaultValue: boolean): boolean {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn defaultValue;\n\t\t}\n\t\tif (value === 'false') {\n\t\t\t// treat the string 'false' as false\n\t\t\treturn false;\n\t\t}\n\t\treturn Boolean(value);\n\t}\n\n\tconstructor(id: K1, name: PossibleKeyName<boolean>, defaultValue: boolean, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'boolean';\n\t\t\tschema.default = defaultValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t}\n\n\tpublic validate(input: any): boolean {\n\t\treturn EditorBooleanOption.boolean(input, this.defaultValue);\n\t}\n}\n\nclass EditorIntOption<K1 extends EditorOption> extends SimpleEditorOption<K1, number> {\n\n\tpublic static clampedInt(value: any, defaultValue: number, minimum: number, maximum: number): number {\n\t\tlet r: number;\n\t\tif (typeof value === 'undefined') {\n\t\t\tr = defaultValue;\n\t\t} else {\n\t\t\tr = parseInt(value, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\tr = defaultValue;\n\t\t\t}\n\t\t}\n\t\tr = Math.max(minimum, r);\n\t\tr = Math.min(maximum, r);\n\t\treturn r | 0;\n\t}\n\n\tpublic readonly minimum: number;\n\tpublic readonly maximum: number;\n\n\tconstructor(id: K1, name: PossibleKeyName<number>, defaultValue: number, minimum: number, maximum: number, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'integer';\n\t\t\tschema.default = defaultValue;\n\t\t\tschema.minimum = minimum;\n\t\t\tschema.maximum = maximum;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t\tthis.minimum = minimum;\n\t\tthis.maximum = maximum;\n\t}\n\n\tpublic validate(input: any): number {\n\t\treturn EditorIntOption.clampedInt(input, this.defaultValue, this.minimum, this.maximum);\n\t}\n}\n\nclass EditorFloatOption<K1 extends EditorOption> extends SimpleEditorOption<K1, number> {\n\n\tpublic static clamp(n: number, min: number, max: number): number {\n\t\tif (n < min) {\n\t\t\treturn min;\n\t\t}\n\t\tif (n > max) {\n\t\t\treturn max;\n\t\t}\n\t\treturn n;\n\t}\n\n\tpublic static float(value: any, defaultValue: number): number {\n\t\tif (typeof value === 'number') {\n\t\t\treturn value;\n\t\t}\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn defaultValue;\n\t\t}\n\t\tconst r = parseFloat(value);\n\t\treturn (isNaN(r) ? defaultValue : r);\n\t}\n\n\tpublic readonly validationFn: (value: number) => number;\n\n\tconstructor(id: K1, name: PossibleKeyName<number>, defaultValue: number, validationFn: (value: number) => number, schema?: IConfigurationPropertySchema) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'number';\n\t\t\tschema.default = defaultValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t\tthis.validationFn = validationFn;\n\t}\n\n\tpublic validate(input: any): number {\n\t\treturn this.validationFn(EditorFloatOption.float(input, this.defaultValue));\n\t}\n}\n\nclass EditorStringOption<K1 extends EditorOption> extends SimpleEditorOption<K1, string> {\n\n\tpublic static string(value: any, defaultValue: string): string {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn value;\n\t}\n\n\tconstructor(id: K1, name: PossibleKeyName<string>, defaultValue: string, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'string';\n\t\t\tschema.default = defaultValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t}\n\n\tpublic validate(input: any): string {\n\t\treturn EditorStringOption.string(input, this.defaultValue);\n\t}\n}\n\nclass EditorStringEnumOption<K1 extends EditorOption, V extends string> extends SimpleEditorOption<K1, V> {\n\n\tpublic static stringSet<T>(value: T | undefined, defaultValue: T, allowedValues: ReadonlyArray<T>): T {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn defaultValue;\n\t\t}\n\t\tif (allowedValues.indexOf(value) === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate readonly _allowedValues: ReadonlyArray<V>;\n\n\tconstructor(id: K1, name: PossibleKeyName<V>, defaultValue: V, allowedValues: ReadonlyArray<V>, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'string';\n\t\t\tschema.enum = <any>allowedValues;\n\t\t\tschema.default = defaultValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t\tthis._allowedValues = allowedValues;\n\t}\n\n\tpublic validate(input: any): V {\n\t\treturn EditorStringEnumOption.stringSet<V>(input, this.defaultValue, this._allowedValues);\n\t}\n}\n\nclass EditorEnumOption<K1 extends EditorOption, T extends string, V> extends BaseEditorOption<K1, V> {\n\n\tprivate readonly _allowedValues: T[];\n\tprivate readonly _convert: (value: T) => V;\n\n\tconstructor(id: K1, name: PossibleKeyName<T>, defaultValue: V, defaultStringValue: string, allowedValues: T[], convert: (value: T) => V, schema: IConfigurationPropertySchema | undefined = undefined) {\n\t\tif (typeof schema !== 'undefined') {\n\t\t\tschema.type = 'string';\n\t\t\tschema.enum = allowedValues;\n\t\t\tschema.default = defaultStringValue;\n\t\t}\n\t\tsuper(id, name, defaultValue, schema);\n\t\tthis._allowedValues = allowedValues;\n\t\tthis._convert = convert;\n\t}\n\n\tpublic validate(input: any): V {\n\t\tif (typeof input !== 'string') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tif (this._allowedValues.indexOf(<T>input) === -1) {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\treturn this._convert(<any>input);\n\t}\n}\n\n//#endregion\n\n//#region autoIndent\n\nfunction _autoIndentFromString(autoIndent: 'none' | 'keep' | 'brackets' | 'advanced' | 'full'): EditorAutoIndentStrategy {\n\tswitch (autoIndent) {\n\t\tcase 'none': return EditorAutoIndentStrategy.None;\n\t\tcase 'keep': return EditorAutoIndentStrategy.Keep;\n\t\tcase 'brackets': return EditorAutoIndentStrategy.Brackets;\n\t\tcase 'advanced': return EditorAutoIndentStrategy.Advanced;\n\t\tcase 'full': return EditorAutoIndentStrategy.Full;\n\t}\n}\n\n//#endregion\n\n//#region accessibilitySupport\n\nclass EditorAccessibilitySupport extends BaseEditorOption<EditorOption.accessibilitySupport, AccessibilitySupport> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.accessibilitySupport, 'accessibilitySupport', AccessibilitySupport.Unknown,\n\t\t\t{\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['auto', 'on', 'off'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tnls.localize('accessibilitySupport.auto', \"The editor will use platform APIs to detect when a Screen Reader is attached.\"),\n\t\t\t\t\tnls.localize('accessibilitySupport.on', \"The editor will be permanently optimized for usage with a Screen Reader.\"),\n\t\t\t\t\tnls.localize('accessibilitySupport.off', \"The editor will never be optimized for usage with a Screen Reader.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'auto',\n\t\t\t\tdescription: nls.localize('accessibilitySupport', \"Controls whether the editor should run in a mode where it is optimized for screen readers.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): AccessibilitySupport {\n\t\tswitch (input) {\n\t\t\tcase 'auto': return AccessibilitySupport.Unknown;\n\t\t\tcase 'off': return AccessibilitySupport.Disabled;\n\t\t\tcase 'on': return AccessibilitySupport.Enabled;\n\t\t}\n\t\treturn this.defaultValue;\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: AccessibilitySupport): AccessibilitySupport {\n\t\tif (value === AccessibilitySupport.Unknown) {\n\t\t\t// The editor reads the `accessibilitySupport` from the environment\n\t\t\treturn env.accessibilitySupport;\n\t\t}\n\t\treturn value;\n\t}\n}\n\n//#endregion\n\n//#region comments\n\n/**\n * Configuration options for editor comments\n */\nexport interface IEditorCommentsOptions {\n\t/**\n\t * Insert a space after the line comment token and inside the block comments tokens.\n\t * Defaults to true.\n\t */\n\tinsertSpace?: boolean;\n}\n\nexport type EditorCommentsOptions = Readonly<Required<IEditorCommentsOptions>>;\n\nclass EditorComments extends BaseEditorOption<EditorOption.comments, EditorCommentsOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorCommentsOptions = {\n\t\t\tinsertSpace: true,\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.comments, 'comments', defaults,\n\t\t\t{\n\t\t\t\t'editor.comments.insertSpace': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.insertSpace,\n\t\t\t\t\tdescription: nls.localize('comments.insertSpace', \"Controls whether a space character is inserted when commenting.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorCommentsOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorCommentsOptions;\n\t\treturn {\n\t\t\tinsertSpace: EditorBooleanOption.boolean(input.insertSpace, this.defaultValue.insertSpace),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region cursorBlinking\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport const enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\nfunction _cursorBlinkingStyleFromString(cursorBlinkingStyle: 'blink' | 'smooth' | 'phase' | 'expand' | 'solid'): TextEditorCursorBlinkingStyle {\n\tswitch (cursorBlinkingStyle) {\n\t\tcase 'blink': return TextEditorCursorBlinkingStyle.Blink;\n\t\tcase 'smooth': return TextEditorCursorBlinkingStyle.Smooth;\n\t\tcase 'phase': return TextEditorCursorBlinkingStyle.Phase;\n\t\tcase 'expand': return TextEditorCursorBlinkingStyle.Expand;\n\t\tcase 'solid': return TextEditorCursorBlinkingStyle.Solid;\n\t}\n}\n\n//#endregion\n\n//#region cursorStyle\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\n/**\n * @internal\n */\nexport function cursorStyleToString(cursorStyle: TextEditorCursorStyle): 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin' {\n\tswitch (cursorStyle) {\n\t\tcase TextEditorCursorStyle.Line: return 'line';\n\t\tcase TextEditorCursorStyle.Block: return 'block';\n\t\tcase TextEditorCursorStyle.Underline: return 'underline';\n\t\tcase TextEditorCursorStyle.LineThin: return 'line-thin';\n\t\tcase TextEditorCursorStyle.BlockOutline: return 'block-outline';\n\t\tcase TextEditorCursorStyle.UnderlineThin: return 'underline-thin';\n\t}\n}\n\nfunction _cursorStyleFromString(cursorStyle: 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin'): TextEditorCursorStyle {\n\tswitch (cursorStyle) {\n\t\tcase 'line': return TextEditorCursorStyle.Line;\n\t\tcase 'block': return TextEditorCursorStyle.Block;\n\t\tcase 'underline': return TextEditorCursorStyle.Underline;\n\t\tcase 'line-thin': return TextEditorCursorStyle.LineThin;\n\t\tcase 'block-outline': return TextEditorCursorStyle.BlockOutline;\n\t\tcase 'underline-thin': return TextEditorCursorStyle.UnderlineThin;\n\t}\n}\n\n//#endregion\n\n//#region editorClassName\n\nclass EditorClassName extends ComputedEditorOption<EditorOption.editorClassName, string> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.editorClassName, [EditorOption.mouseStyle, EditorOption.extraEditorClassName]);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: string): string {\n\t\tlet className = 'monaco-editor';\n\t\tif (options.get(EditorOption.extraEditorClassName)) {\n\t\t\tclassName += ' ' + options.get(EditorOption.extraEditorClassName);\n\t\t}\n\t\tif (env.extraEditorClassName) {\n\t\t\tclassName += ' ' + env.extraEditorClassName;\n\t\t}\n\t\tif (options.get(EditorOption.mouseStyle) === 'default') {\n\t\t\tclassName += ' mouse-default';\n\t\t} else if (options.get(EditorOption.mouseStyle) === 'copy') {\n\t\t\tclassName += ' mouse-copy';\n\t\t}\n\t\tif (options.get(EditorOption.showUnused)) {\n\t\t\tclassName += ' showUnused';\n\t\t}\n\t\treturn className;\n\t}\n}\n\n//#endregion\n\n//#region emptySelectionClipboard\n\nclass EditorEmptySelectionClipboard extends EditorBooleanOption<EditorOption.emptySelectionClipboard> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.emptySelectionClipboard, 'emptySelectionClipboard', true,\n\t\t\t{ description: nls.localize('emptySelectionClipboard', \"Controls whether copying without a selection copies the current line.\") }\n\t\t);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: boolean): boolean {\n\t\treturn value && env.emptySelectionClipboard;\n\t}\n}\n\n//#endregion\n\n//#region find\n\n/**\n * Configuration options for editor find widget\n */\nexport interface IEditorFindOptions {\n\t/**\n\t * Controls if we seed search string in the Find Widget with editor selection.\n\t */\n\tseedSearchStringFromSelection?: boolean;\n\t/**\n\t * Controls if Find in Selection flag is turned on in the editor.\n\t */\n\tautoFindInSelection?: 'never' | 'always' | 'multiline';\n\t/*\n\t * Controls whether the Find Widget should add extra lines on top of the editor.\n\t */\n\taddExtraSpaceOnTop?: boolean;\n\t/**\n\t * @internal\n\t * Controls if the Find Widget should read or modify the shared find clipboard on macOS\n\t */\n\tglobalFindClipboard?: boolean;\n\t/**\n\t * Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found\n\t */\n\tloop?: boolean;\n}\n\nexport type EditorFindOptions = Readonly<Required<IEditorFindOptions>>;\n\nclass EditorFind extends BaseEditorOption<EditorOption.find, EditorFindOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorFindOptions = {\n\t\t\tseedSearchStringFromSelection: true,\n\t\t\tautoFindInSelection: 'never',\n\t\t\tglobalFindClipboard: false,\n\t\t\taddExtraSpaceOnTop: true,\n\t\t\tloop: true\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.find, 'find', defaults,\n\t\t\t{\n\t\t\t\t'editor.find.seedSearchStringFromSelection': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.seedSearchStringFromSelection,\n\t\t\t\t\tdescription: nls.localize('find.seedSearchStringFromSelection', \"Controls whether the search string in the Find Widget is seeded from the editor selection.\")\n\t\t\t\t},\n\t\t\t\t'editor.find.autoFindInSelection': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['never', 'always', 'multiline'],\n\t\t\t\t\tdefault: defaults.autoFindInSelection,\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\tnls.localize('editor.find.autoFindInSelection.never', 'Never turn on Find in selection automatically (default)'),\n\t\t\t\t\t\tnls.localize('editor.find.autoFindInSelection.always', 'Always turn on Find in selection automatically'),\n\t\t\t\t\t\tnls.localize('editor.find.autoFindInSelection.multiline', 'Turn on Find in selection automatically when multiple lines of content are selected.')\n\t\t\t\t\t],\n\t\t\t\t\tdescription: nls.localize('find.autoFindInSelection', \"Controls whether the find operation is carried out on selected text or the entire file in the editor.\")\n\t\t\t\t},\n\t\t\t\t'editor.find.globalFindClipboard': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.globalFindClipboard,\n\t\t\t\t\tdescription: nls.localize('find.globalFindClipboard', \"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.\"),\n\t\t\t\t\tincluded: platform.isMacintosh\n\t\t\t\t},\n\t\t\t\t'editor.find.addExtraSpaceOnTop': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.addExtraSpaceOnTop,\n\t\t\t\t\tdescription: nls.localize('find.addExtraSpaceOnTop', \"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.\")\n\t\t\t\t},\n\t\t\t\t'editor.find.loop': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.loop,\n\t\t\t\t\tdescription: nls.localize('find.loop', \"Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.\")\n\t\t\t\t},\n\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorFindOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorFindOptions;\n\t\treturn {\n\t\t\tseedSearchStringFromSelection: EditorBooleanOption.boolean(input.seedSearchStringFromSelection, this.defaultValue.seedSearchStringFromSelection),\n\t\t\tautoFindInSelection: typeof _input.autoFindInSelection === 'boolean'\n\t\t\t\t? (_input.autoFindInSelection ? 'always' : 'never')\n\t\t\t\t: EditorStringEnumOption.stringSet<'never' | 'always' | 'multiline'>(input.autoFindInSelection, this.defaultValue.autoFindInSelection, ['never', 'always', 'multiline']),\n\t\t\tglobalFindClipboard: EditorBooleanOption.boolean(input.globalFindClipboard, this.defaultValue.globalFindClipboard),\n\t\t\taddExtraSpaceOnTop: EditorBooleanOption.boolean(input.addExtraSpaceOnTop, this.defaultValue.addExtraSpaceOnTop),\n\t\t\tloop: EditorBooleanOption.boolean(input.loop, this.defaultValue.loop),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region fontLigatures\n\n/**\n * @internal\n */\nexport class EditorFontLigatures extends BaseEditorOption<EditorOption.fontLigatures, string> {\n\n\tpublic static OFF = '\"liga\" off, \"calt\" off';\n\tpublic static ON = '\"liga\" on, \"calt\" on';\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.fontLigatures, 'fontLigatures', EditorFontLigatures.OFF,\n\t\t\t{\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('fontLigatures', \"Enables/Disables font ligatures.\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('fontFeatureSettings', \"Explicit font-feature-settings.\")\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tdescription: nls.localize('fontLigaturesGeneral', \"Configures font ligatures or font features.\"),\n\t\t\t\tdefault: false\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): string {\n\t\tif (typeof input === 'undefined') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tif (typeof input === 'string') {\n\t\t\tif (input === 'false') {\n\t\t\t\treturn EditorFontLigatures.OFF;\n\t\t\t}\n\t\t\tif (input === 'true') {\n\t\t\t\treturn EditorFontLigatures.ON;\n\t\t\t}\n\t\t\treturn input;\n\t\t}\n\t\tif (Boolean(input)) {\n\t\t\treturn EditorFontLigatures.ON;\n\t\t}\n\t\treturn EditorFontLigatures.OFF;\n\t}\n}\n\n//#endregion\n\n//#region fontInfo\n\nclass EditorFontInfo extends ComputedEditorOption<EditorOption.fontInfo, FontInfo> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.fontInfo);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: FontInfo): FontInfo {\n\t\treturn env.fontInfo;\n\t}\n}\n\n//#endregion\n\n//#region fontSize\n\nclass EditorFontSize extends SimpleEditorOption<EditorOption.fontSize, number> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.fontSize, 'fontSize', EDITOR_FONT_DEFAULTS.fontSize,\n\t\t\t{\n\t\t\t\ttype: 'number',\n\t\t\t\tminimum: 6,\n\t\t\t\tmaximum: 100,\n\t\t\t\tdefault: EDITOR_FONT_DEFAULTS.fontSize,\n\t\t\t\tdescription: nls.localize('fontSize', \"Controls the font size in pixels.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): number {\n\t\tlet r = EditorFloatOption.float(input, this.defaultValue);\n\t\tif (r === 0) {\n\t\t\treturn EDITOR_FONT_DEFAULTS.fontSize;\n\t\t}\n\t\treturn EditorFloatOption.clamp(r, 6, 100);\n\t}\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: number): number {\n\t\t// The final fontSize respects the editor zoom level.\n\t\t// So take the result from env.fontInfo\n\t\treturn env.fontInfo.fontSize;\n\t}\n}\n\n//#endregion\n\n//#region gotoLocation\n\nexport type GoToLocationValues = 'peek' | 'gotoAndPeek' | 'goto';\n\n/**\n * Configuration options for go to location\n */\nexport interface IGotoLocationOptions {\n\n\tmultiple?: GoToLocationValues;\n\n\tmultipleDefinitions?: GoToLocationValues;\n\tmultipleTypeDefinitions?: GoToLocationValues;\n\tmultipleDeclarations?: GoToLocationValues;\n\tmultipleImplementations?: GoToLocationValues;\n\tmultipleReferences?: GoToLocationValues;\n\n\talternativeDefinitionCommand?: string;\n\talternativeTypeDefinitionCommand?: string;\n\talternativeDeclarationCommand?: string;\n\talternativeImplementationCommand?: string;\n\talternativeReferenceCommand?: string;\n}\n\nexport type GoToLocationOptions = Readonly<Required<IGotoLocationOptions>>;\n\nclass EditorGoToLocation extends BaseEditorOption<EditorOption.gotoLocation, GoToLocationOptions> {\n\n\tconstructor() {\n\t\tconst defaults: GoToLocationOptions = {\n\t\t\tmultiple: 'peek',\n\t\t\tmultipleDefinitions: 'peek',\n\t\t\tmultipleTypeDefinitions: 'peek',\n\t\t\tmultipleDeclarations: 'peek',\n\t\t\tmultipleImplementations: 'peek',\n\t\t\tmultipleReferences: 'peek',\n\t\t\talternativeDefinitionCommand: 'editor.action.goToReferences',\n\t\t\talternativeTypeDefinitionCommand: 'editor.action.goToReferences',\n\t\t\talternativeDeclarationCommand: 'editor.action.goToReferences',\n\t\t\talternativeImplementationCommand: '',\n\t\t\talternativeReferenceCommand: '',\n\t\t};\n\t\tconst jsonSubset: IJSONSchema = {\n\t\t\ttype: 'string',\n\t\t\tenum: ['peek', 'gotoAndPeek', 'goto'],\n\t\t\tdefault: defaults.multiple,\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('editor.gotoLocation.multiple.peek', 'Show peek view of the results (default)'),\n\t\t\t\tnls.localize('editor.gotoLocation.multiple.gotoAndPeek', 'Go to the primary result and show a peek view'),\n\t\t\t\tnls.localize('editor.gotoLocation.multiple.goto', 'Go to the primary result and enable peek-less navigation to others')\n\t\t\t]\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.gotoLocation, 'gotoLocation', defaults,\n\t\t\t{\n\t\t\t\t'editor.gotoLocation.multiple': {\n\t\t\t\t\tdeprecationMessage: nls.localize('editor.gotoLocation.multiple.deprecated', \"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.\"),\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleDefinitions': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleDefinitions', \"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleTypeDefinitions': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleTypeDefinitions', \"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleDeclarations': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleDeclarations', \"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleImplementations': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleImplemenattions', \"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.multipleReferences': {\n\t\t\t\t\tdescription: nls.localize('editor.editor.gotoLocation.multipleReferences', \"Controls the behavior the 'Go to References'-command when multiple target locations exist.\"),\n\t\t\t\t\t...jsonSubset,\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeDefinitionCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeDefinitionCommand,\n\t\t\t\t\tdescription: nls.localize('alternativeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.\")\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeTypeDefinitionCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeTypeDefinitionCommand,\n\t\t\t\t\tdescription: nls.localize('alternativeTypeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.\")\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeDeclarationCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeDeclarationCommand,\n\t\t\t\t\tdescription: nls.localize('alternativeDeclarationCommand', \"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.\")\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeImplementationCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeImplementationCommand,\n\t\t\t\t\tdescription: nls.localize('alternativeImplementationCommand', \"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.\")\n\t\t\t\t},\n\t\t\t\t'editor.gotoLocation.alternativeReferenceCommand': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: defaults.alternativeReferenceCommand,\n\t\t\t\t\tdescription: nls.localize('alternativeReferenceCommand', \"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): GoToLocationOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IGotoLocationOptions;\n\t\treturn {\n\t\t\tmultiple: EditorStringEnumOption.stringSet<GoToLocationValues>(input.multiple, this.defaultValue.multiple!, ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleDefinitions: input.multipleDefinitions ?? EditorStringEnumOption.stringSet<GoToLocationValues>(input.multipleDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleTypeDefinitions: input.multipleTypeDefinitions ?? EditorStringEnumOption.stringSet<GoToLocationValues>(input.multipleTypeDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleDeclarations: input.multipleDeclarations ?? EditorStringEnumOption.stringSet<GoToLocationValues>(input.multipleDeclarations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleImplementations: input.multipleImplementations ?? EditorStringEnumOption.stringSet<GoToLocationValues>(input.multipleImplementations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\tmultipleReferences: input.multipleReferences ?? EditorStringEnumOption.stringSet<GoToLocationValues>(input.multipleReferences, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n\t\t\talternativeDefinitionCommand: EditorStringOption.string(input.alternativeDefinitionCommand, this.defaultValue.alternativeDefinitionCommand),\n\t\t\talternativeTypeDefinitionCommand: EditorStringOption.string(input.alternativeTypeDefinitionCommand, this.defaultValue.alternativeTypeDefinitionCommand),\n\t\t\talternativeDeclarationCommand: EditorStringOption.string(input.alternativeDeclarationCommand, this.defaultValue.alternativeDeclarationCommand),\n\t\t\talternativeImplementationCommand: EditorStringOption.string(input.alternativeImplementationCommand, this.defaultValue.alternativeImplementationCommand),\n\t\t\talternativeReferenceCommand: EditorStringOption.string(input.alternativeReferenceCommand, this.defaultValue.alternativeReferenceCommand),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region hover\n\n/**\n * Configuration options for editor hover\n */\nexport interface IEditorHoverOptions {\n\t/**\n\t * Enable the hover.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Delay for showing the hover.\n\t * Defaults to 300.\n\t */\n\tdelay?: number;\n\t/**\n\t * Is the hover sticky such that it can be clicked and its contents selected?\n\t * Defaults to true.\n\t */\n\tsticky?: boolean;\n}\n\nexport type EditorHoverOptions = Readonly<Required<IEditorHoverOptions>>;\n\nclass EditorHover extends BaseEditorOption<EditorOption.hover, EditorHoverOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorHoverOptions = {\n\t\t\tenabled: true,\n\t\t\tdelay: 300,\n\t\t\tsticky: true\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.hover, 'hover', defaults,\n\t\t\t{\n\t\t\t\t'editor.hover.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('hover.enabled', \"Controls whether the hover is shown.\")\n\t\t\t\t},\n\t\t\t\t'editor.hover.delay': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: defaults.delay,\n\t\t\t\t\tdescription: nls.localize('hover.delay', \"Controls the delay in milliseconds after which the hover is shown.\")\n\t\t\t\t},\n\t\t\t\t'editor.hover.sticky': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.sticky,\n\t\t\t\t\tdescription: nls.localize('hover.sticky', \"Controls whether the hover should remain visible when mouse is moved over it.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorHoverOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorHoverOptions;\n\t\treturn {\n\t\t\tenabled: EditorBooleanOption.boolean(input.enabled, this.defaultValue.enabled),\n\t\t\tdelay: EditorIntOption.clampedInt(input.delay, this.defaultValue.delay, 0, 10000),\n\t\t\tsticky: EditorBooleanOption.boolean(input.sticky, this.defaultValue.sticky)\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region layoutInfo\n\n/**\n * A description for the overview ruler position.\n */\nexport interface OverviewRulerPosition {\n\t/**\n\t * Width of the overview ruler\n\t */\n\treadonly width: number;\n\t/**\n\t * Height of the overview ruler\n\t */\n\treadonly height: number;\n\t/**\n\t * Top position for the overview ruler\n\t */\n\treadonly top: number;\n\t/**\n\t * Right position for the overview ruler\n\t */\n\treadonly right: number;\n}\n\nexport const enum RenderMinimap {\n\tNone = 0,\n\tText = 1,\n\tBlocks = 2,\n}\n\n/**\n * The internal layout details of the editor.\n */\nexport interface EditorLayoutInfo {\n\n\t/**\n\t * Full editor width.\n\t */\n\treadonly width: number;\n\t/**\n\t * Full editor height.\n\t */\n\treadonly height: number;\n\n\t/**\n\t * Left position for the glyph margin.\n\t */\n\treadonly glyphMarginLeft: number;\n\t/**\n\t * The width of the glyph margin.\n\t */\n\treadonly glyphMarginWidth: number;\n\n\t/**\n\t * Left position for the line numbers.\n\t */\n\treadonly lineNumbersLeft: number;\n\t/**\n\t * The width of the line numbers.\n\t */\n\treadonly lineNumbersWidth: number;\n\n\t/**\n\t * Left position for the line decorations.\n\t */\n\treadonly decorationsLeft: number;\n\t/**\n\t * The width of the line decorations.\n\t */\n\treadonly decorationsWidth: number;\n\n\t/**\n\t * Left position for the content (actual text)\n\t */\n\treadonly contentLeft: number;\n\t/**\n\t * The width of the content (actual text)\n\t */\n\treadonly contentWidth: number;\n\n\t/**\n\t * The position for the minimap\n\t */\n\treadonly minimapLeft: number;\n\t/**\n\t * The width of the minimap\n\t */\n\treadonly minimapWidth: number;\n\treadonly minimapHeightIsEditorHeight: boolean;\n\treadonly minimapIsSampling: boolean;\n\treadonly minimapScale: number;\n\treadonly minimapLineHeight: number;\n\treadonly minimapCanvasInnerWidth: number;\n\treadonly minimapCanvasInnerHeight: number;\n\treadonly minimapCanvasOuterWidth: number;\n\treadonly minimapCanvasOuterHeight: number;\n\n\t/**\n\t * Minimap render type\n\t */\n\treadonly renderMinimap: RenderMinimap;\n\n\t/**\n\t * The number of columns (of typical characters) fitting on a viewport line.\n\t */\n\treadonly viewportColumn: number;\n\n\t/**\n\t * The width of the vertical scrollbar.\n\t */\n\treadonly verticalScrollbarWidth: number;\n\t/**\n\t * The height of the horizontal scrollbar.\n\t */\n\treadonly horizontalScrollbarHeight: number;\n\n\t/**\n\t * The position of the overview ruler.\n\t */\n\treadonly overviewRuler: OverviewRulerPosition;\n}\n\n/**\n * @internal\n */\nexport interface EditorLayoutInfoComputerEnv {\n\touterWidth: number;\n\touterHeight: number;\n\tlineHeight: number;\n\tviewLineCount: number;\n\tlineNumbersDigitCount: number;\n\ttypicalHalfwidthCharacterWidth: number;\n\tmaxDigitWidth: number;\n\tpixelRatio: number;\n}\n\n/**\n * @internal\n */\nexport class EditorLayoutInfoComputer extends ComputedEditorOption<EditorOption.layoutInfo, EditorLayoutInfo> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.layoutInfo,\n\t\t\t[EditorOption.glyphMargin, EditorOption.lineDecorationsWidth, EditorOption.folding, EditorOption.minimap, EditorOption.scrollbar, EditorOption.lineNumbers]\n\t\t);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: EditorLayoutInfo): EditorLayoutInfo {\n\t\treturn EditorLayoutInfoComputer.computeLayout(options, {\n\t\t\touterWidth: env.outerWidth,\n\t\t\touterHeight: env.outerHeight,\n\t\t\tlineHeight: env.fontInfo.lineHeight,\n\t\t\tviewLineCount: env.viewLineCount,\n\t\t\tlineNumbersDigitCount: env.lineNumbersDigitCount,\n\t\t\ttypicalHalfwidthCharacterWidth: env.fontInfo.typicalHalfwidthCharacterWidth,\n\t\t\tmaxDigitWidth: env.fontInfo.maxDigitWidth,\n\t\t\tpixelRatio: env.pixelRatio\n\t\t});\n\t}\n\n\tpublic static computeContainedMinimapLineCount(input: {\n\t\tviewLineCount: number;\n\t\tscrollBeyondLastLine: boolean;\n\t\theight: number;\n\t\tlineHeight: number;\n\t\tpixelRatio: number;\n\t}): { typicalViewportLineCount: number; extraLinesBeyondLastLine: number; desiredRatio: number; minimapLineCount: number; } {\n\t\tconst typicalViewportLineCount = input.height / input.lineHeight;\n\t\tconst extraLinesBeyondLastLine = input.scrollBeyondLastLine ? (typicalViewportLineCount - 1) : 0;\n\t\tconst desiredRatio = (input.viewLineCount + extraLinesBeyondLastLine) / (input.pixelRatio * input.height);\n\t\tconst minimapLineCount = Math.floor(input.viewLineCount / desiredRatio);\n\t\treturn { typicalViewportLineCount, extraLinesBeyondLastLine, desiredRatio, minimapLineCount };\n\t}\n\n\tpublic static computeLayout(options: IComputedEditorOptions, env: EditorLayoutInfoComputerEnv): EditorLayoutInfo {\n\t\tconst outerWidth = env.outerWidth | 0;\n\t\tconst outerHeight = env.outerHeight | 0;\n\t\tconst lineHeight = env.lineHeight | 0;\n\t\tconst lineNumbersDigitCount = env.lineNumbersDigitCount | 0;\n\t\tconst typicalHalfwidthCharacterWidth = env.typicalHalfwidthCharacterWidth;\n\t\tconst maxDigitWidth = env.maxDigitWidth;\n\t\tconst pixelRatio = env.pixelRatio;\n\n\t\tconst showGlyphMargin = options.get(EditorOption.glyphMargin);\n\t\tconst showLineNumbers = (options.get(EditorOption.lineNumbers).renderType !== RenderLineNumbersType.Off);\n\t\tconst lineNumbersMinChars = options.get(EditorOption.lineNumbersMinChars) | 0;\n\t\tconst scrollBeyondLastLine = options.get(EditorOption.scrollBeyondLastLine);\n\t\tconst minimap = options.get(EditorOption.minimap);\n\t\tconst minimapEnabled = minimap.enabled;\n\t\tconst minimapSide = minimap.side;\n\t\tconst minimapRenderCharacters = minimap.renderCharacters;\n\t\tlet minimapScale = (pixelRatio >= 2 ? Math.round(minimap.scale * 2) : minimap.scale);\n\t\tconst minimapMaxColumn = minimap.maxColumn | 0;\n\t\tconst minimapSize = minimap.size;\n\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tconst verticalScrollbarWidth = scrollbar.verticalScrollbarSize | 0;\n\t\tconst verticalScrollbarHasArrows = scrollbar.verticalHasArrows;\n\t\tconst scrollbarArrowSize = scrollbar.arrowSize | 0;\n\t\tconst horizontalScrollbarHeight = scrollbar.horizontalScrollbarSize | 0;\n\n\t\tconst rawLineDecorationsWidth = options.get(EditorOption.lineDecorationsWidth);\n\t\tconst folding = options.get(EditorOption.folding);\n\n\t\tlet lineDecorationsWidth: number;\n\t\tif (typeof rawLineDecorationsWidth === 'string' && /^\\d+(\\.\\d+)?ch$/.test(rawLineDecorationsWidth)) {\n\t\t\tconst multiple = parseFloat(rawLineDecorationsWidth.substr(0, rawLineDecorationsWidth.length - 2));\n\t\t\tlineDecorationsWidth = EditorIntOption.clampedInt(multiple * typicalHalfwidthCharacterWidth, 0, 0, 1000);\n\t\t} else {\n\t\t\tlineDecorationsWidth = EditorIntOption.clampedInt(rawLineDecorationsWidth, 0, 0, 1000);\n\t\t}\n\t\tif (folding) {\n\t\t\tlineDecorationsWidth += 16;\n\t\t}\n\n\t\tlet lineNumbersWidth = 0;\n\t\tif (showLineNumbers) {\n\t\t\tconst digitCount = Math.max(lineNumbersDigitCount, lineNumbersMinChars);\n\t\t\tlineNumbersWidth = Math.round(digitCount * maxDigitWidth);\n\t\t}\n\n\t\tlet glyphMarginWidth = 0;\n\t\tif (showGlyphMargin) {\n\t\t\tglyphMarginWidth = lineHeight;\n\t\t}\n\n\t\tlet glyphMarginLeft = 0;\n\t\tlet lineNumbersLeft = glyphMarginLeft + glyphMarginWidth;\n\t\tlet decorationsLeft = lineNumbersLeft + lineNumbersWidth;\n\t\tlet contentLeft = decorationsLeft + lineDecorationsWidth;\n\n\t\tconst remainingWidth = outerWidth - glyphMarginWidth - lineNumbersWidth - lineDecorationsWidth;\n\n\t\tconst baseCharHeight = minimapRenderCharacters ? 2 : 3;\n\t\tlet renderMinimap: RenderMinimap;\n\t\tlet minimapLeft: number;\n\t\tlet minimapWidth: number;\n\t\tlet minimapCanvasInnerWidth: number;\n\t\tlet minimapCanvasInnerHeight = Math.floor(pixelRatio * outerHeight);\n\t\tlet minimapCanvasOuterWidth: number;\n\t\tconst minimapCanvasOuterHeight = minimapCanvasInnerHeight / pixelRatio;\n\t\tlet minimapHeightIsEditorHeight = false;\n\t\tlet minimapIsSampling = false;\n\t\tlet minimapLineHeight = baseCharHeight * minimapScale;\n\t\tlet contentWidth: number;\n\t\tif (!minimapEnabled) {\n\t\t\tminimapLeft = 0;\n\t\t\tminimapWidth = 0;\n\t\t\tminimapCanvasInnerWidth = 0;\n\t\t\tminimapCanvasOuterWidth = 0;\n\t\t\tminimapLineHeight = 1;\n\t\t\trenderMinimap = RenderMinimap.None;\n\t\t\tcontentWidth = remainingWidth;\n\t\t} else {\n\t\t\tlet minimapCharWidth = minimapScale / pixelRatio;\n\t\t\tlet minimapWidthMultiplier: number = 1;\n\n\t\t\tif (minimapSize === 'fill' || minimapSize === 'fit') {\n\t\t\t\tconst viewLineCount = env.viewLineCount;\n\t\t\t\tconst { typicalViewportLineCount, extraLinesBeyondLastLine, desiredRatio, minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n\t\t\t\t\tviewLineCount: viewLineCount,\n\t\t\t\t\tscrollBeyondLastLine: scrollBeyondLastLine,\n\t\t\t\t\theight: outerHeight,\n\t\t\t\t\tlineHeight: lineHeight,\n\t\t\t\t\tpixelRatio: pixelRatio\n\t\t\t\t});\n\t\t\t\t// ratio is intentionally not part of the layout to avoid the layout changing all the time\n\t\t\t\t// when doing sampling\n\t\t\t\tconst ratio = viewLineCount / minimapLineCount;\n\n\t\t\t\tif (ratio > 1) {\n\t\t\t\t\tminimapHeightIsEditorHeight = true;\n\t\t\t\t\tminimapIsSampling = true;\n\t\t\t\t\tminimapScale = 1;\n\t\t\t\t\tminimapLineHeight = 1;\n\t\t\t\t\tminimapCharWidth = minimapScale / pixelRatio;\n\t\t\t\t} else {\n\t\t\t\t\tconst effectiveMinimapHeight = Math.ceil((viewLineCount + extraLinesBeyondLastLine) * minimapLineHeight);\n\t\t\t\t\tif (minimapSize === 'fill' || effectiveMinimapHeight > minimapCanvasInnerHeight) {\n\t\t\t\t\t\tminimapHeightIsEditorHeight = true;\n\t\t\t\t\t\tconst configuredFontScale = minimapScale;\n\t\t\t\t\t\tminimapLineHeight = Math.min(lineHeight * pixelRatio, Math.max(1, Math.floor(1 / desiredRatio)));\n\t\t\t\t\t\tminimapScale = Math.min(configuredFontScale + 1, Math.max(1, Math.floor(minimapLineHeight / baseCharHeight)));\n\t\t\t\t\t\tif (minimapScale > configuredFontScale) {\n\t\t\t\t\t\t\tminimapWidthMultiplier = Math.min(2, minimapScale / configuredFontScale);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminimapCharWidth = minimapScale / pixelRatio / minimapWidthMultiplier;\n\t\t\t\t\t\tminimapCanvasInnerHeight = Math.ceil((Math.max(typicalViewportLineCount, viewLineCount + extraLinesBeyondLastLine)) * minimapLineHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderMinimap = minimapRenderCharacters ? RenderMinimap.Text : RenderMinimap.Blocks;\n\n\t\t\t// Given:\n\t\t\t// (leaving 2px for the cursor to have space after the last character)\n\t\t\t// viewportColumn = (contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth\n\t\t\t// minimapWidth = viewportColumn * minimapCharWidth\n\t\t\t// contentWidth = remainingWidth - minimapWidth\n\t\t\t// What are good values for contentWidth and minimapWidth ?\n\n\t\t\t// minimapWidth = ((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth) * minimapCharWidth\n\t\t\t// typicalHalfwidthCharacterWidth * minimapWidth = (contentWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// typicalHalfwidthCharacterWidth * minimapWidth = (remainingWidth - minimapWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// (typicalHalfwidthCharacterWidth + minimapCharWidth) * minimapWidth = (remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// minimapWidth = ((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)\n\n\t\t\tminimapWidth = Math.max(0, Math.floor(((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth))) + MINIMAP_GUTTER_WIDTH;\n\t\t\tlet minimapColumns = minimapWidth / minimapCharWidth;\n\t\t\tif (minimapColumns > minimapMaxColumn) {\n\t\t\t\tminimapWidth = Math.floor(minimapMaxColumn * minimapCharWidth);\n\t\t\t}\n\t\t\tcontentWidth = remainingWidth - minimapWidth;\n\n\t\t\tif (minimapSide === 'left') {\n\t\t\t\tminimapLeft = 0;\n\t\t\t\tglyphMarginLeft += minimapWidth;\n\t\t\t\tlineNumbersLeft += minimapWidth;\n\t\t\t\tdecorationsLeft += minimapWidth;\n\t\t\t\tcontentLeft += minimapWidth;\n\t\t\t} else {\n\t\t\t\tminimapLeft = outerWidth - minimapWidth - verticalScrollbarWidth;\n\t\t\t}\n\n\t\t\tminimapCanvasInnerWidth = Math.floor(pixelRatio * minimapWidth);\n\t\t\tminimapCanvasOuterWidth = minimapCanvasInnerWidth / pixelRatio;\n\t\t\tminimapCanvasInnerWidth = Math.floor(minimapCanvasInnerWidth * minimapWidthMultiplier);\n\t\t}\n\n\t\t// (leaving 2px for the cursor to have space after the last character)\n\t\tconst viewportColumn = Math.max(1, Math.floor((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth));\n\n\t\tconst verticalArrowSize = (verticalScrollbarHasArrows ? scrollbarArrowSize : 0);\n\n\t\treturn {\n\t\t\twidth: outerWidth,\n\t\t\theight: outerHeight,\n\n\t\t\tglyphMarginLeft: glyphMarginLeft,\n\t\t\tglyphMarginWidth: glyphMarginWidth,\n\n\t\t\tlineNumbersLeft: lineNumbersLeft,\n\t\t\tlineNumbersWidth: lineNumbersWidth,\n\n\t\t\tdecorationsLeft: decorationsLeft,\n\t\t\tdecorationsWidth: lineDecorationsWidth,\n\n\t\t\tcontentLeft: contentLeft,\n\t\t\tcontentWidth: contentWidth,\n\n\t\t\trenderMinimap: renderMinimap,\n\t\t\tminimapLeft: minimapLeft,\n\t\t\tminimapWidth: minimapWidth,\n\t\t\tminimapHeightIsEditorHeight: minimapHeightIsEditorHeight,\n\t\t\tminimapIsSampling: minimapIsSampling,\n\t\t\tminimapScale: minimapScale,\n\t\t\tminimapLineHeight: minimapLineHeight,\n\t\t\tminimapCanvasInnerWidth: minimapCanvasInnerWidth,\n\t\t\tminimapCanvasInnerHeight: minimapCanvasInnerHeight,\n\t\t\tminimapCanvasOuterWidth: minimapCanvasOuterWidth,\n\t\t\tminimapCanvasOuterHeight: minimapCanvasOuterHeight,\n\n\t\t\tviewportColumn: viewportColumn,\n\n\t\t\tverticalScrollbarWidth: verticalScrollbarWidth,\n\t\t\thorizontalScrollbarHeight: horizontalScrollbarHeight,\n\n\t\t\toverviewRuler: {\n\t\t\t\ttop: verticalArrowSize,\n\t\t\t\twidth: verticalScrollbarWidth,\n\t\t\t\theight: (outerHeight - 2 * verticalArrowSize),\n\t\t\t\tright: 0\n\t\t\t}\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region lightbulb\n\n/**\n * Configuration options for editor lightbulb\n */\nexport interface IEditorLightbulbOptions {\n\t/**\n\t * Enable the lightbulb code action.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n}\n\nexport type EditorLightbulbOptions = Readonly<Required<IEditorLightbulbOptions>>;\n\nclass EditorLightbulb extends BaseEditorOption<EditorOption.lightbulb, EditorLightbulbOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorLightbulbOptions = { enabled: true };\n\t\tsuper(\n\t\t\tEditorOption.lightbulb, 'lightbulb', defaults,\n\t\t\t{\n\t\t\t\t'editor.lightbulb.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('codeActions', \"Enables the code action lightbulb in the editor.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorLightbulbOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorLightbulbOptions;\n\t\treturn {\n\t\t\tenabled: EditorBooleanOption.boolean(input.enabled, this.defaultValue.enabled)\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region lineHeight\n\nclass EditorLineHeight extends EditorIntOption<EditorOption.lineHeight> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.lineHeight, 'lineHeight',\n\t\t\tEDITOR_FONT_DEFAULTS.lineHeight, 0, 150,\n\t\t\t{ description: nls.localize('lineHeight', \"Controls the line height. Use 0 to compute the line height from the font size.\") }\n\t\t);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, value: number): number {\n\t\t// The lineHeight is computed from the fontSize if it is 0.\n\t\t// Moreover, the final lineHeight respects the editor zoom level.\n\t\t// So take the result from env.fontInfo\n\t\treturn env.fontInfo.lineHeight;\n\t}\n}\n\n//#endregion\n\n//#region minimap\n\n/**\n * Configuration options for editor minimap\n */\nexport interface IEditorMinimapOptions {\n\t/**\n\t * Enable the rendering of the minimap.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Control the side of the minimap in editor.\n\t * Defaults to 'right'.\n\t */\n\tside?: 'right' | 'left';\n\t/**\n\t * Control the minimap rendering mode.\n\t * Defaults to 'actual'.\n\t */\n\tsize?: 'proportional' | 'fill' | 'fit';\n\t/**\n\t * Control the rendering of the minimap slider.\n\t * Defaults to 'mouseover'.\n\t */\n\tshowSlider?: 'always' | 'mouseover';\n\t/**\n\t * Render the actual text on a line (as opposed to color blocks).\n\t * Defaults to true.\n\t */\n\trenderCharacters?: boolean;\n\t/**\n\t * Limit the width of the minimap to render at most a certain number of columns.\n\t * Defaults to 120.\n\t */\n\tmaxColumn?: number;\n\t/**\n\t * Relative size of the font in the minimap. Defaults to 1.\n\t */\n\tscale?: number;\n}\n\nexport type EditorMinimapOptions = Readonly<Required<IEditorMinimapOptions>>;\n\nclass EditorMinimap extends BaseEditorOption<EditorOption.minimap, EditorMinimapOptions> {\n\n\tconstructor() {\n\t\tconst defaults: EditorMinimapOptions = {\n\t\t\tenabled: true,\n\t\t\tsize: 'proportional',\n\t\t\tside: 'right',\n\t\t\tshowSlider: 'mouseover',\n\t\t\trenderCharacters: true,\n\t\t\tmaxColumn: 120,\n\t\t\tscale: 1,\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.minimap, 'minimap', defaults,\n\t\t\t{\n\t\t\t\t'editor.minimap.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('minimap.enabled', \"Controls whether the minimap is shown.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.size': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['proportional', 'fill', 'fit'],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\tnls.localize('minimap.size.proportional', \"The minimap has the same size as the editor contents (and might scroll).\"),\n\t\t\t\t\t\tnls.localize('minimap.size.fill', \"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).\"),\n\t\t\t\t\t\tnls.localize('minimap.size.fit', \"The minimap will shrink as necessary to never be larger than the editor (no scrolling).\"),\n\t\t\t\t\t],\n\t\t\t\t\tdefault: defaults.size,\n\t\t\t\t\tdescription: nls.localize('minimap.size', \"Controls the size of the minimap.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.side': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['left', 'right'],\n\t\t\t\t\tdefault: defaults.side,\n\t\t\t\t\tdescription: nls.localize('minimap.side', \"Controls the side where to render the minimap.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.showSlider': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['always', 'mouseover'],\n\t\t\t\t\tdefault: defaults.showSlider,\n\t\t\t\t\tdescription: nls.localize('minimap.showSlider', \"Controls when the minimap slider is shown.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.scale': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: defaults.scale,\n\t\t\t\t\tminimum: 1,\n\t\t\t\t\tmaximum: 3,\n\t\t\t\t\tenum: [1, 2, 3],\n\t\t\t\t\tdescription: nls.localize('minimap.scale', \"Scale of content drawn in the minimap: 1, 2 or 3.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.renderCharacters': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.renderCharacters,\n\t\t\t\t\tdescription: nls.localize('minimap.renderCharacters', \"Render the actual characters on a line as opposed to color blocks.\")\n\t\t\t\t},\n\t\t\t\t'editor.minimap.maxColumn': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: defaults.maxColumn,\n\t\t\t\t\tdescription: nls.localize('minimap.maxColumn', \"Limit the width of the minimap to render at most a certain number of columns.\")\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): EditorMinimapOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorMinimapOptions;\n\t\treturn {\n\t\t\tenabled: EditorBooleanOption.boolean(input.enabled, this.defaultValue.enabled),\n\t\t\tsize: EditorStringEnumOption.stringSet<'proportional' | 'fill' | 'fit'>(input.size, this.defaultValue.size, ['proportional', 'fill', 'fit']),\n\t\t\tside: EditorStringEnumOption.stringSet<'right' | 'left'>(input.side, this.defaultValue.side, ['right', 'left']),\n\t\t\tshowSlider: EditorStringEnumOption.stringSet<'always' | 'mouseover'>(input.showSlider, this.defaultValue.showSlider, ['always', 'mouseover']),\n\t\t\trenderCharacters: EditorBooleanOption.boolean(input.renderCharacters, this.defaultValue.renderCharacters),\n\t\t\tscale: EditorIntOption.clampedInt(input.scale, 1, 1, 3),\n\t\t\tmaxColumn: EditorIntOption.clampedInt(input.maxColumn, this.defaultValue.maxColumn, 1, 10000),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region multiCursorModifier\n\nfunction _multiCursorModifierFromString(multiCursorModifier: 'ctrlCmd' | 'alt'): 'altKey' | 'metaKey' | 'ctrlKey' {\n\tif (multiCursorModifier === 'ctrlCmd') {\n\t\treturn (platform.isMacintosh ? 'metaKey' : 'ctrlKey');\n\t}\n\treturn 'altKey';\n}\n\n//#endregion\n\n//#region padding\n\n/**\n * Configuration options for editor padding\n */\nexport interface IEditorPaddingOptions {\n\t/**\n\t * Spacing between top edge of editor and first line.\n\t */\n\ttop?: number;\n\t/**\n\t * Spacing between bottom edge of editor and last line.\n\t */\n\tbottom?: number;\n}\n\nexport interface InternalEditorPaddingOptions {\n\treadonly top: number;\n\treadonly bottom: number;\n}\n\nclass EditorPadding extends BaseEditorOption<EditorOption.padding, InternalEditorPaddingOptions> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.padding, 'padding', { top: 0, bottom: 0 },\n\t\t\t{\n\t\t\t\t'editor.padding.top': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t\tminimum: 0,\n\t\t\t\t\tmaximum: 1000,\n\t\t\t\t\tdescription: nls.localize('padding.top', \"Controls the amount of space between the top edge of the editor and the first line.\")\n\t\t\t\t},\n\t\t\t\t'editor.padding.bottom': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t\tminimum: 0,\n\t\t\t\t\tmaximum: 1000,\n\t\t\t\t\tdescription: nls.localize('padding.bottom', \"Controls the amount of space between the bottom edge of the editor and the last line.\")\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): InternalEditorPaddingOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorPaddingOptions;\n\n\t\treturn {\n\t\t\ttop: EditorIntOption.clampedInt(input.top, 0, 0, 1000),\n\t\t\tbottom: EditorIntOption.clampedInt(input.bottom, 0, 0, 1000)\n\t\t};\n\t}\n}\n//#endregion\n\n//#region parameterHints\n\n/**\n * Configuration options for parameter hints\n */\nexport interface IEditorParameterHintOptions {\n\t/**\n\t * Enable parameter hints.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Enable cycling of parameter hints.\n\t * Defaults to false.\n\t */\n\tcycle?: boolean;\n}\n\nexport type InternalParameterHintOptions = Readonly<Required<IEditorParameterHintOptions>>;\n\nclass EditorParameterHints extends BaseEditorOption<EditorOption.parameterHints, InternalParameterHintOptions> {\n\n\tconstructor() {\n\t\tconst defaults: InternalParameterHintOptions = {\n\t\t\tenabled: true,\n\t\t\tcycle: false\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.parameterHints, 'parameterHints', defaults,\n\t\t\t{\n\t\t\t\t'editor.parameterHints.enabled': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.enabled,\n\t\t\t\t\tdescription: nls.localize('parameterHints.enabled', \"Enables a pop-up that shows parameter documentation and type information as you type.\")\n\t\t\t\t},\n\t\t\t\t'editor.parameterHints.cycle': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.cycle,\n\t\t\t\t\tdescription: nls.localize('parameterHints.cycle', \"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.\")\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): InternalParameterHintOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorParameterHintOptions;\n\t\treturn {\n\t\t\tenabled: EditorBooleanOption.boolean(input.enabled, this.defaultValue.enabled),\n\t\t\tcycle: EditorBooleanOption.boolean(input.cycle, this.defaultValue.cycle)\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region pixelRatio\n\nclass EditorPixelRatio extends ComputedEditorOption<EditorOption.pixelRatio, number> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.pixelRatio);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: number): number {\n\t\treturn env.pixelRatio;\n\t}\n}\n\n//#endregion\n\n//#region quickSuggestions\n\n/**\n * Configuration options for quick suggestions\n */\nexport interface IQuickSuggestionsOptions {\n\tother: boolean;\n\tcomments: boolean;\n\tstrings: boolean;\n}\n\nexport type ValidQuickSuggestionsOptions = boolean | Readonly<Required<IQuickSuggestionsOptions>>;\n\nclass EditorQuickSuggestions extends BaseEditorOption<EditorOption.quickSuggestions, ValidQuickSuggestionsOptions> {\n\n\tpublic readonly defaultValue: Readonly<Required<IQuickSuggestionsOptions>>;\n\n\tconstructor() {\n\t\tconst defaults: ValidQuickSuggestionsOptions = {\n\t\t\tother: true,\n\t\t\tcomments: false,\n\t\t\tstrings: false\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.quickSuggestions, 'quickSuggestions', defaults,\n\t\t\t{\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tstrings: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: defaults.strings,\n\t\t\t\t\t\t\t\tdescription: nls.localize('quickSuggestions.strings', \"Enable quick suggestions inside strings.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcomments: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: defaults.comments,\n\t\t\t\t\t\t\t\tdescription: nls.localize('quickSuggestions.comments', \"Enable quick suggestions inside comments.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: defaults.other,\n\t\t\t\t\t\t\t\tdescription: nls.localize('quickSuggestions.other', \"Enable quick suggestions outside of strings and comments.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tdefault: defaults,\n\t\t\t\tdescription: nls.localize('quickSuggestions', \"Controls whether suggestions should automatically show up while typing.\")\n\t\t\t}\n\t\t);\n\t\tthis.defaultValue = defaults;\n\t}\n\n\tpublic validate(_input: any): ValidQuickSuggestionsOptions {\n\t\tif (typeof _input === 'boolean') {\n\t\t\treturn _input;\n\t\t}\n\t\tif (_input && typeof _input === 'object') {\n\t\t\tconst input = _input as IQuickSuggestionsOptions;\n\t\t\tconst opts = {\n\t\t\t\tother: EditorBooleanOption.boolean(input.other, this.defaultValue.other),\n\t\t\t\tcomments: EditorBooleanOption.boolean(input.comments, this.defaultValue.comments),\n\t\t\t\tstrings: EditorBooleanOption.boolean(input.strings, this.defaultValue.strings),\n\t\t\t};\n\t\t\tif (opts.other && opts.comments && opts.strings) {\n\t\t\t\treturn true; // all on\n\t\t\t} else if (!opts.other && !opts.comments && !opts.strings) {\n\t\t\t\treturn false; // all off\n\t\t\t} else {\n\t\t\t\treturn opts;\n\t\t\t}\n\t\t}\n\t\treturn this.defaultValue;\n\t}\n}\n\n//#endregion\n\n//#region renderLineNumbers\n\nexport type LineNumbersType = 'on' | 'off' | 'relative' | 'interval' | ((lineNumber: number) => string);\n\nexport const enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\nexport interface InternalEditorRenderLineNumbersOptions {\n\treadonly renderType: RenderLineNumbersType;\n\treadonly renderFn: ((lineNumber: number) => string) | null;\n}\n\nclass EditorRenderLineNumbersOption extends BaseEditorOption<EditorOption.lineNumbers, InternalEditorRenderLineNumbersOptions> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.lineNumbers, 'lineNumbers', { renderType: RenderLineNumbersType.On, renderFn: null },\n\t\t\t{\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'relative', 'interval'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tnls.localize('lineNumbers.off', \"Line numbers are not rendered.\"),\n\t\t\t\t\tnls.localize('lineNumbers.on', \"Line numbers are rendered as absolute number.\"),\n\t\t\t\t\tnls.localize('lineNumbers.relative', \"Line numbers are rendered as distance in lines to cursor position.\"),\n\t\t\t\t\tnls.localize('lineNumbers.interval', \"Line numbers are rendered every 10 lines.\")\n\t\t\t\t],\n\t\t\t\tdefault: 'on',\n\t\t\t\tdescription: nls.localize('lineNumbers', \"Controls the display of line numbers.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(lineNumbers: any): InternalEditorRenderLineNumbersOptions {\n\t\tlet renderType: RenderLineNumbersType = this.defaultValue.renderType;\n\t\tlet renderFn: ((lineNumber: number) => string) | null = this.defaultValue.renderFn;\n\n\t\tif (typeof lineNumbers !== 'undefined') {\n\t\t\tif (typeof lineNumbers === 'function') {\n\t\t\t\trenderType = RenderLineNumbersType.Custom;\n\t\t\t\trenderFn = lineNumbers;\n\t\t\t} else if (lineNumbers === 'interval') {\n\t\t\t\trenderType = RenderLineNumbersType.Interval;\n\t\t\t} else if (lineNumbers === 'relative') {\n\t\t\t\trenderType = RenderLineNumbersType.Relative;\n\t\t\t} else if (lineNumbers === 'on') {\n\t\t\t\trenderType = RenderLineNumbersType.On;\n\t\t\t} else {\n\t\t\t\trenderType = RenderLineNumbersType.Off;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trenderType,\n\t\t\trenderFn\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region renderValidationDecorations\n\n/**\n * @internal\n */\nexport function filterValidationDecorations(options: IComputedEditorOptions): boolean {\n\tconst renderValidationDecorations = options.get(EditorOption.renderValidationDecorations);\n\tif (renderValidationDecorations === 'editable') {\n\t\treturn options.get(EditorOption.readOnly);\n\t}\n\treturn renderValidationDecorations === 'on' ? false : true;\n}\n\n//#endregion\n\n//#region rulers\n\nexport interface IRulerOption {\n\treadonly column: number;\n\treadonly color: string | null;\n}\n\nclass EditorRulers extends BaseEditorOption<EditorOption.rulers, IRulerOption[]> {\n\n\tconstructor() {\n\t\tconst defaults: IRulerOption[] = [];\n\t\tconst columnSchema: IJSONSchema = { type: 'number', description: nls.localize('rulers.size', \"Number of monospace characters at which this editor ruler will render.\") };\n\t\tsuper(\n\t\t\tEditorOption.rulers, 'rulers', defaults,\n\t\t\t{\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\tanyOf: [\n\t\t\t\t\t\tcolumnSchema,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: [\n\t\t\t\t\t\t\t\t'object'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tcolumn: columnSchema,\n\t\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('rulers.color', \"Color of this editor ruler.\"),\n\t\t\t\t\t\t\t\t\tformat: 'color-hex'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tdefault: defaults,\n\t\t\t\tdescription: nls.localize('rulers', \"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.\")\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(input: any): IRulerOption[] {\n\t\tif (Array.isArray(input)) {\n\t\t\tlet rulers: IRulerOption[] = [];\n\t\t\tfor (let _element of input) {\n\t\t\t\tif (typeof _element === 'number') {\n\t\t\t\t\trulers.push({\n\t\t\t\t\t\tcolumn: EditorIntOption.clampedInt(_element, 0, 0, 10000),\n\t\t\t\t\t\tcolor: null\n\t\t\t\t\t});\n\t\t\t\t} else if (_element && typeof _element === 'object') {\n\t\t\t\t\tconst element = _element as IRulerOption;\n\t\t\t\t\trulers.push({\n\t\t\t\t\t\tcolumn: EditorIntOption.clampedInt(element.column, 0, 0, 10000),\n\t\t\t\t\t\tcolor: element.color\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\trulers.sort((a, b) => a.column - b.column);\n\t\t\treturn rulers;\n\t\t}\n\t\treturn this.defaultValue;\n\t}\n}\n\n//#endregion\n\n//#region scrollbar\n\n/**\n * Configuration options for editor scrollbars\n */\nexport interface IEditorScrollbarOptions {\n\t/**\n\t * The size of arrows (if displayed).\n\t * Defaults to 11.\n\t */\n\tarrowSize?: number;\n\t/**\n\t * Render vertical scrollbar.\n\t * Defaults to 'auto'.\n\t */\n\tvertical?: 'auto' | 'visible' | 'hidden';\n\t/**\n\t * Render horizontal scrollbar.\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?: 'auto' | 'visible' | 'hidden';\n\t/**\n\t * Cast horizontal and vertical shadows when the content is scrolled.\n\t * Defaults to true.\n\t */\n\tuseShadows?: boolean;\n\t/**\n\t * Render arrows at the top and bottom of the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?: boolean;\n\t/**\n\t * Render arrows at the left and right of the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?: boolean;\n\t/**\n\t * Listen to mouse wheel events and react to them by scrolling.\n\t * Defaults to true.\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * Always consume mouse wheel events (always call preventDefault() and stopPropagation() on the browser events).\n\t * Defaults to true.\n\t */\n\talwaysConsumeMouseWheel?: boolean;\n\t/**\n\t * Height in pixels for the horizontal scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\tverticalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical slider.\n\t * Defaults to `verticalScrollbarSize`.\n\t */\n\tverticalSliderSize?: number;\n\t/**\n\t * Height in pixels for the horizontal slider.\n\t * Defaults to `horizontalScrollbarSize`.\n\t */\n\thorizontalSliderSize?: number;\n}\n\nexport interface InternalEditorScrollbarOptions {\n\treadonly arrowSize: number;\n\treadonly vertical: ScrollbarVisibility;\n\treadonly horizontal: ScrollbarVisibility;\n\treadonly useShadows: boolean;\n\treadonly verticalHasArrows: boolean;\n\treadonly horizontalHasArrows: boolean;\n\treadonly handleMouseWheel: boolean;\n\treadonly alwaysConsumeMouseWheel: boolean;\n\treadonly horizontalScrollbarSize: number;\n\treadonly horizontalSliderSize: number;\n\treadonly verticalScrollbarSize: number;\n\treadonly verticalSliderSize: number;\n}\n\nfunction _scrollbarVisibilityFromString(visibility: string | undefined, defaultValue: ScrollbarVisibility): ScrollbarVisibility {\n\tif (typeof visibility !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tswitch (visibility) {\n\t\tcase 'hidden': return ScrollbarVisibility.Hidden;\n\t\tcase 'visible': return ScrollbarVisibility.Visible;\n\t\tdefault: return ScrollbarVisibility.Auto;\n\t}\n}\n\nclass EditorScrollbar extends BaseEditorOption<EditorOption.scrollbar, InternalEditorScrollbarOptions> {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tEditorOption.scrollbar, 'scrollbar',\n\t\t\t{\n\t\t\t\tvertical: ScrollbarVisibility.Auto,\n\t\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\t\tarrowSize: 11,\n\t\t\t\tuseShadows: true,\n\t\t\t\tverticalHasArrows: false,\n\t\t\t\thorizontalHasArrows: false,\n\t\t\t\thorizontalScrollbarSize: 10,\n\t\t\t\thorizontalSliderSize: 10,\n\t\t\t\tverticalScrollbarSize: 14,\n\t\t\t\tverticalSliderSize: 14,\n\t\t\t\thandleMouseWheel: true,\n\t\t\t\talwaysConsumeMouseWheel: true\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): InternalEditorScrollbarOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as IEditorScrollbarOptions;\n\t\tconst horizontalScrollbarSize = EditorIntOption.clampedInt(input.horizontalScrollbarSize, this.defaultValue.horizontalScrollbarSize, 0, 1000);\n\t\tconst verticalScrollbarSize = EditorIntOption.clampedInt(input.verticalScrollbarSize, this.defaultValue.verticalScrollbarSize, 0, 1000);\n\t\treturn {\n\t\t\tarrowSize: EditorIntOption.clampedInt(input.arrowSize, this.defaultValue.arrowSize, 0, 1000),\n\t\t\tvertical: _scrollbarVisibilityFromString(input.vertical, this.defaultValue.vertical),\n\t\t\thorizontal: _scrollbarVisibilityFromString(input.horizontal, this.defaultValue.horizontal),\n\t\t\tuseShadows: EditorBooleanOption.boolean(input.useShadows, this.defaultValue.useShadows),\n\t\t\tverticalHasArrows: EditorBooleanOption.boolean(input.verticalHasArrows, this.defaultValue.verticalHasArrows),\n\t\t\thorizontalHasArrows: EditorBooleanOption.boolean(input.horizontalHasArrows, this.defaultValue.horizontalHasArrows),\n\t\t\thandleMouseWheel: EditorBooleanOption.boolean(input.handleMouseWheel, this.defaultValue.handleMouseWheel),\n\t\t\talwaysConsumeMouseWheel: EditorBooleanOption.boolean(input.alwaysConsumeMouseWheel, this.defaultValue.alwaysConsumeMouseWheel),\n\t\t\thorizontalScrollbarSize: horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: EditorIntOption.clampedInt(input.horizontalSliderSize, horizontalScrollbarSize, 0, 1000),\n\t\t\tverticalScrollbarSize: verticalScrollbarSize,\n\t\t\tverticalSliderSize: EditorIntOption.clampedInt(input.verticalSliderSize, verticalScrollbarSize, 0, 1000),\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region suggest\n\n/**\n * Configuration options for editor suggest widget\n */\nexport interface ISuggestOptions {\n\t/**\n\t * Overwrite word ends on accept. Default to false.\n\t */\n\tinsertMode?: 'insert' | 'replace';\n\t/**\n\t * Enable graceful matching. Defaults to true.\n\t */\n\tfilterGraceful?: boolean;\n\t/**\n\t * Prevent quick suggestions when a snippet is active. Defaults to true.\n\t */\n\tsnippetsPreventQuickSuggestions?: boolean;\n\t/**\n\t * Favours words that appear close to the cursor.\n\t */\n\tlocalityBonus?: boolean;\n\t/**\n\t * Enable using global storage for remembering suggestions.\n\t */\n\tshareSuggestSelections?: boolean;\n\t/**\n\t * Enable or disable icons in suggestions. Defaults to true.\n\t */\n\tshowIcons?: boolean;\n\t/**\n\t * Max suggestions to show in suggestions. Defaults to 12.\n\t */\n\tmaxVisibleSuggestions?: number;\n\t/**\n\t * Show method-suggestions.\n\t */\n\tshowMethods?: boolean;\n\t/**\n\t * Show function-suggestions.\n\t */\n\tshowFunctions?: boolean;\n\t/**\n\t * Show constructor-suggestions.\n\t */\n\tshowConstructors?: boolean;\n\t/**\n\t * Show field-suggestions.\n\t */\n\tshowFields?: boolean;\n\t/**\n\t * Show variable-suggestions.\n\t */\n\tshowVariables?: boolean;\n\t/**\n\t * Show class-suggestions.\n\t */\n\tshowClasses?: boolean;\n\t/**\n\t * Show struct-suggestions.\n\t */\n\tshowStructs?: boolean;\n\t/**\n\t * Show interface-suggestions.\n\t */\n\tshowInterfaces?: boolean;\n\t/**\n\t * Show module-suggestions.\n\t */\n\tshowModules?: boolean;\n\t/**\n\t * Show property-suggestions.\n\t */\n\tshowProperties?: boolean;\n\t/**\n\t * Show event-suggestions.\n\t */\n\tshowEvents?: boolean;\n\t/**\n\t * Show operator-suggestions.\n\t */\n\tshowOperators?: boolean;\n\t/**\n\t * Show unit-suggestions.\n\t */\n\tshowUnits?: boolean;\n\t/**\n\t * Show value-suggestions.\n\t */\n\tshowValues?: boolean;\n\t/**\n\t * Show constant-suggestions.\n\t */\n\tshowConstants?: boolean;\n\t/**\n\t * Show enum-suggestions.\n\t */\n\tshowEnums?: boolean;\n\t/**\n\t * Show enumMember-suggestions.\n\t */\n\tshowEnumMembers?: boolean;\n\t/**\n\t * Show keyword-suggestions.\n\t */\n\tshowKeywords?: boolean;\n\t/**\n\t * Show text-suggestions.\n\t */\n\tshowWords?: boolean;\n\t/**\n\t * Show color-suggestions.\n\t */\n\tshowColors?: boolean;\n\t/**\n\t * Show file-suggestions.\n\t */\n\tshowFiles?: boolean;\n\t/**\n\t * Show reference-suggestions.\n\t */\n\tshowReferences?: boolean;\n\t/**\n\t * Show folder-suggestions.\n\t */\n\tshowFolders?: boolean;\n\t/**\n\t * Show typeParameter-suggestions.\n\t */\n\tshowTypeParameters?: boolean;\n\t/**\n\t * Show issue-suggestions.\n\t */\n\tshowIssues?: boolean;\n\t/**\n\t * Show user-suggestions.\n\t */\n\tshowUsers?: boolean;\n\t/**\n\t * Show snippet-suggestions.\n\t */\n\tshowSnippets?: boolean;\n\t/**\n\t * Status bar related settings.\n\t */\n\tstatusBar?: {\n\t\t/**\n\t\t * Controls the visibility of the status bar at the bottom of the suggest widget.\n\t\t */\n\t\tvisible?: boolean;\n\t}\n}\n\nexport type InternalSuggestOptions = Readonly<Required<ISuggestOptions>>;\n\nclass EditorSuggest extends BaseEditorOption<EditorOption.suggest, InternalSuggestOptions> {\n\n\tconstructor() {\n\t\tconst defaults: InternalSuggestOptions = {\n\t\t\tinsertMode: 'insert',\n\t\t\tfilterGraceful: true,\n\t\t\tsnippetsPreventQuickSuggestions: true,\n\t\t\tlocalityBonus: false,\n\t\t\tshareSuggestSelections: false,\n\t\t\tshowIcons: true,\n\t\t\tmaxVisibleSuggestions: 12,\n\t\t\tshowMethods: true,\n\t\t\tshowFunctions: true,\n\t\t\tshowConstructors: true,\n\t\t\tshowFields: true,\n\t\t\tshowVariables: true,\n\t\t\tshowClasses: true,\n\t\t\tshowStructs: true,\n\t\t\tshowInterfaces: true,\n\t\t\tshowModules: true,\n\t\t\tshowProperties: true,\n\t\t\tshowEvents: true,\n\t\t\tshowOperators: true,\n\t\t\tshowUnits: true,\n\t\t\tshowValues: true,\n\t\t\tshowConstants: true,\n\t\t\tshowEnums: true,\n\t\t\tshowEnumMembers: true,\n\t\t\tshowKeywords: true,\n\t\t\tshowWords: true,\n\t\t\tshowColors: true,\n\t\t\tshowFiles: true,\n\t\t\tshowReferences: true,\n\t\t\tshowFolders: true,\n\t\t\tshowTypeParameters: true,\n\t\t\tshowSnippets: true,\n\t\t\tshowUsers: true,\n\t\t\tshowIssues: true,\n\t\t\tstatusBar: {\n\t\t\t\tvisible: false\n\t\t\t}\n\t\t};\n\t\tsuper(\n\t\t\tEditorOption.suggest, 'suggest', defaults,\n\t\t\t{\n\t\t\t\t'editor.suggest.insertMode': {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['insert', 'replace'],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\tnls.localize('suggest.insertMode.insert', \"Insert suggestion without overwriting text right of the cursor.\"),\n\t\t\t\t\t\tnls.localize('suggest.insertMode.replace', \"Insert suggestion and overwrite text right of the cursor.\"),\n\t\t\t\t\t],\n\t\t\t\t\tdefault: defaults.insertMode,\n\t\t\t\t\tdescription: nls.localize('suggest.insertMode', \"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.filterGraceful': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.filterGraceful,\n\t\t\t\t\tdescription: nls.localize('suggest.filterGraceful', \"Controls whether filtering and sorting suggestions accounts for small typos.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.localityBonus': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.localityBonus,\n\t\t\t\t\tdescription: nls.localize('suggest.localityBonus', \"Controls whether sorting favours words that appear close to the cursor.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.shareSuggestSelections': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.shareSuggestSelections,\n\t\t\t\t\tmarkdownDescription: nls.localize('suggest.shareSuggestSelections', \"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.snippetsPreventQuickSuggestions': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.snippetsPreventQuickSuggestions,\n\t\t\t\t\tdescription: nls.localize('suggest.snippetsPreventQuickSuggestions', \"Controls whether an active snippet prevents quick suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showIcons': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: defaults.showIcons,\n\t\t\t\t\tdescription: nls.localize('suggest.showIcons', \"Controls whether to show or hide icons in suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.maxVisibleSuggestions': {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: defaults.maxVisibleSuggestions,\n\t\t\t\t\tminimum: 1,\n\t\t\t\t\tmaximum: 15,\n\t\t\t\t\tdescription: nls.localize('suggest.maxVisibleSuggestions', \"Controls how many suggestions IntelliSense will show before showing a scrollbar (maximum 15).\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.filteredTypes': {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tdeprecationMessage: nls.localize('deprecated', \"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showMethods': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showMethods', \"When enabled IntelliSense shows `method`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showFunctions': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showFunctions', \"When enabled IntelliSense shows `function`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showConstructors': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showConstructors', \"When enabled IntelliSense shows `constructor`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showFields': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showFields', \"When enabled IntelliSense shows `field`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showVariables': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showVariables', \"When enabled IntelliSense shows `variable`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showClasses': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showClasss', \"When enabled IntelliSense shows `class`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showStructs': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showStructs', \"When enabled IntelliSense shows `struct`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showInterfaces': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showInterfaces', \"When enabled IntelliSense shows `interface`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showModules': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showModules', \"When enabled IntelliSense shows `module`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showProperties': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showPropertys', \"When enabled IntelliSense shows `property`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showEvents': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showEvents', \"When enabled IntelliSense shows `event`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showOperators': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showOperators', \"When enabled IntelliSense shows `operator`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showUnits': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showUnits', \"When enabled IntelliSense shows `unit`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showValues': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showValues', \"When enabled IntelliSense shows `value`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showConstants': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showConstants', \"When enabled IntelliSense shows `constant`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showEnums': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showEnums', \"When enabled IntelliSense shows `enum`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showEnumMembers': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showEnumMembers', \"When enabled IntelliSense shows `enumMember`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showKeywords': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showKeywords', \"When enabled IntelliSense shows `keyword`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showWords': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showTexts', \"When enabled IntelliSense shows `text`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showColors': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showColors', \"When enabled IntelliSense shows `color`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showFiles': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showFiles', \"When enabled IntelliSense shows `file`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showReferences': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showReferences', \"When enabled IntelliSense shows `reference`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showCustomcolors': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showCustomcolors', \"When enabled IntelliSense shows `customcolor`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showFolders': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showFolders', \"When enabled IntelliSense shows `folder`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showTypeParameters': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showTypeParameters', \"When enabled IntelliSense shows `typeParameter`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showSnippets': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showSnippets', \"When enabled IntelliSense shows `snippet`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showUsers': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showUsers', \"When enabled IntelliSense shows `user`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.showIssues': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.showIssues', \"When enabled IntelliSense shows `issues`-suggestions.\")\n\t\t\t\t},\n\t\t\t\t'editor.suggest.statusBar.visible': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tmarkdownDescription: nls.localize('editor.suggest.statusBar.visible', \"Controls the visibility of the status bar at the bottom of the suggest widget.\")\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic validate(_input: any): InternalSuggestOptions {\n\t\tif (!_input || typeof _input !== 'object') {\n\t\t\treturn this.defaultValue;\n\t\t}\n\t\tconst input = _input as ISuggestOptions;\n\t\treturn {\n\t\t\tinsertMode: EditorStringEnumOption.stringSet(input.insertMode, this.defaultValue.insertMode, ['insert', 'replace']),\n\t\t\tfilterGraceful: EditorBooleanOption.boolean(input.filterGraceful, this.defaultValue.filterGraceful),\n\t\t\tsnippetsPreventQuickSuggestions: EditorBooleanOption.boolean(input.snippetsPreventQuickSuggestions, this.defaultValue.filterGraceful),\n\t\t\tlocalityBonus: EditorBooleanOption.boolean(input.localityBonus, this.defaultValue.localityBonus),\n\t\t\tshareSuggestSelections: EditorBooleanOption.boolean(input.shareSuggestSelections, this.defaultValue.shareSuggestSelections),\n\t\t\tshowIcons: EditorBooleanOption.boolean(input.showIcons, this.defaultValue.showIcons),\n\t\t\tmaxVisibleSuggestions: EditorIntOption.clampedInt(input.maxVisibleSuggestions, this.defaultValue.maxVisibleSuggestions, 1, 15),\n\t\t\tshowMethods: EditorBooleanOption.boolean(input.showMethods, this.defaultValue.showMethods),\n\t\t\tshowFunctions: EditorBooleanOption.boolean(input.showFunctions, this.defaultValue.showFunctions),\n\t\t\tshowConstructors: EditorBooleanOption.boolean(input.showConstructors, this.defaultValue.showConstructors),\n\t\t\tshowFields: EditorBooleanOption.boolean(input.showFields, this.defaultValue.showFields),\n\t\t\tshowVariables: EditorBooleanOption.boolean(input.showVariables, this.defaultValue.showVariables),\n\t\t\tshowClasses: EditorBooleanOption.boolean(input.showClasses, this.defaultValue.showClasses),\n\t\t\tshowStructs: EditorBooleanOption.boolean(input.showStructs, this.defaultValue.showStructs),\n\t\t\tshowInterfaces: EditorBooleanOption.boolean(input.showInterfaces, this.defaultValue.showInterfaces),\n\t\t\tshowModules: EditorBooleanOption.boolean(input.showModules, this.defaultValue.showModules),\n\t\t\tshowProperties: EditorBooleanOption.boolean(input.showProperties, this.defaultValue.showProperties),\n\t\t\tshowEvents: EditorBooleanOption.boolean(input.showEvents, this.defaultValue.showEvents),\n\t\t\tshowOperators: EditorBooleanOption.boolean(input.showOperators, this.defaultValue.showOperators),\n\t\t\tshowUnits: EditorBooleanOption.boolean(input.showUnits, this.defaultValue.showUnits),\n\t\t\tshowValues: EditorBooleanOption.boolean(input.showValues, this.defaultValue.showValues),\n\t\t\tshowConstants: EditorBooleanOption.boolean(input.showConstants, this.defaultValue.showConstants),\n\t\t\tshowEnums: EditorBooleanOption.boolean(input.showEnums, this.defaultValue.showEnums),\n\t\t\tshowEnumMembers: EditorBooleanOption.boolean(input.showEnumMembers, this.defaultValue.showEnumMembers),\n\t\t\tshowKeywords: EditorBooleanOption.boolean(input.showKeywords, this.defaultValue.showKeywords),\n\t\t\tshowWords: EditorBooleanOption.boolean(input.showWords, this.defaultValue.showWords),\n\t\t\tshowColors: EditorBooleanOption.boolean(input.showColors, this.defaultValue.showColors),\n\t\t\tshowFiles: EditorBooleanOption.boolean(input.showFiles, this.defaultValue.showFiles),\n\t\t\tshowReferences: EditorBooleanOption.boolean(input.showReferences, this.defaultValue.showReferences),\n\t\t\tshowFolders: EditorBooleanOption.boolean(input.showFolders, this.defaultValue.showFolders),\n\t\t\tshowTypeParameters: EditorBooleanOption.boolean(input.showTypeParameters, this.defaultValue.showTypeParameters),\n\t\t\tshowSnippets: EditorBooleanOption.boolean(input.showSnippets, this.defaultValue.showSnippets),\n\t\t\tshowUsers: EditorBooleanOption.boolean(input.showUsers, this.defaultValue.showUsers),\n\t\t\tshowIssues: EditorBooleanOption.boolean(input.showIssues, this.defaultValue.showIssues),\n\t\t\tstatusBar: {\n\t\t\t\tvisible: EditorBooleanOption.boolean(input.statusBar?.visible, !!this.defaultValue.statusBar.visible)\n\t\t\t}\n\t\t};\n\t}\n}\n\n//#endregion\n\n//#region tabFocusMode\n\nclass EditorTabFocusMode extends ComputedEditorOption<EditorOption.tabFocusMode, boolean> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.tabFocusMode, [EditorOption.readOnly]);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: boolean): boolean {\n\t\tconst readOnly = options.get(EditorOption.readOnly);\n\t\treturn (readOnly ? true : env.tabFocusMode);\n\t}\n}\n\n//#endregion\n\n//#region wrappingIndent\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport const enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}\n\nfunction _wrappingIndentFromString(wrappingIndent: 'none' | 'same' | 'indent' | 'deepIndent'): WrappingIndent {\n\tswitch (wrappingIndent) {\n\t\tcase 'none': return WrappingIndent.None;\n\t\tcase 'same': return WrappingIndent.Same;\n\t\tcase 'indent': return WrappingIndent.Indent;\n\t\tcase 'deepIndent': return WrappingIndent.DeepIndent;\n\t}\n}\n\n//#endregion\n\n//#region wrappingInfo\n\nexport interface EditorWrappingInfo {\n\treadonly isDominatedByLongLines: boolean;\n\treadonly isWordWrapMinified: boolean;\n\treadonly isViewportWrapping: boolean;\n\treadonly wrappingColumn: number;\n}\n\nclass EditorWrappingInfoComputer extends ComputedEditorOption<EditorOption.wrappingInfo, EditorWrappingInfo> {\n\n\tconstructor() {\n\t\tsuper(EditorOption.wrappingInfo, [EditorOption.wordWrap, EditorOption.wordWrapColumn, EditorOption.wordWrapMinified, EditorOption.layoutInfo, EditorOption.accessibilitySupport]);\n\t}\n\n\tpublic compute(env: IEnvironmentalOptions, options: IComputedEditorOptions, _: EditorWrappingInfo): EditorWrappingInfo {\n\t\tconst wordWrap = options.get(EditorOption.wordWrap);\n\t\tconst wordWrapColumn = options.get(EditorOption.wordWrapColumn);\n\t\tconst wordWrapMinified = options.get(EditorOption.wordWrapMinified);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst accessibilitySupport = options.get(EditorOption.accessibilitySupport);\n\n\t\tlet bareWrappingInfo: { isWordWrapMinified: boolean; isViewportWrapping: boolean; wrappingColumn: number; } | null = null;\n\t\t{\n\t\t\tif (accessibilitySupport === AccessibilitySupport.Enabled) {\n\t\t\t\t// See https://github.com/Microsoft/vscode/issues/27766\n\t\t\t\t// Never enable wrapping when a screen reader is attached\n\t\t\t\t// because arrow down etc. will not move the cursor in the way\n\t\t\t\t// a screen reader expects.\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: -1\n\t\t\t\t};\n\t\t\t} else if (wordWrapMinified && env.isDominatedByLongLines) {\n\t\t\t\t// Force viewport width wrapping if model is dominated by long lines\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: true,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.max(1, layoutInfo.viewportColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'on') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.max(1, layoutInfo.viewportColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'bounded') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.min(Math.max(1, layoutInfo.viewportColumn), wordWrapColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'wordWrapColumn') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: wordWrapColumn\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: -1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tisDominatedByLongLines: env.isDominatedByLongLines,\n\t\t\tisWordWrapMinified: bareWrappingInfo.isWordWrapMinified,\n\t\t\tisViewportWrapping: bareWrappingInfo.isViewportWrapping,\n\t\t\twrappingColumn: bareWrappingInfo.wrappingColumn,\n\t\t};\n\t}\n}\n\n//#endregion\n\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace, \\'Droid Sans Fallback\\'';\n\n/**\n * @internal\n */\nexport const EDITOR_FONT_DEFAULTS = {\n\tfontFamily: (\n\t\tplatform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)\n\t),\n\tfontWeight: 'normal',\n\tfontSize: (\n\t\tplatform.isMacintosh ? 12 : 14\n\t),\n\tlineHeight: 0,\n\tletterSpacing: 0,\n};\n\n/**\n * @internal\n */\nexport const EDITOR_MODEL_DEFAULTS = {\n\ttabSize: 4,\n\tindentSize: 4,\n\tinsertSpaces: true,\n\tdetectIndentation: true,\n\ttrimAutoWhitespace: true,\n\tlargeFileOptimizations: true\n};\n\n/**\n * @internal\n */\nexport const editorOptionsRegistry: IEditorOption<EditorOption, any>[] = [];\n\nfunction register<K1 extends EditorOption, V>(option: IEditorOption<K1, V>): IEditorOption<K1, V> {\n\teditorOptionsRegistry[option.id] = option;\n\treturn option;\n}\n\nexport const enum EditorOption {\n\tacceptSuggestionOnCommitCharacter,\n\tacceptSuggestionOnEnter,\n\taccessibilitySupport,\n\taccessibilityPageSize,\n\tariaLabel,\n\tautoClosingBrackets,\n\tautoClosingOvertype,\n\tautoClosingQuotes,\n\tautoIndent,\n\tautomaticLayout,\n\tautoSurround,\n\tcodeLens,\n\tcolorDecorators,\n\tcolumnSelection,\n\tcomments,\n\tcontextmenu,\n\tcopyWithSyntaxHighlighting,\n\tcursorBlinking,\n\tcursorSmoothCaretAnimation,\n\tcursorStyle,\n\tcursorSurroundingLines,\n\tcursorSurroundingLinesStyle,\n\tcursorWidth,\n\tdisableLayerHinting,\n\tdisableMonospaceOptimizations,\n\tdragAndDrop,\n\temptySelectionClipboard,\n\textraEditorClassName,\n\tfastScrollSensitivity,\n\tfind,\n\tfixedOverflowWidgets,\n\tfolding,\n\tfoldingStrategy,\n\tfoldingHighlight,\n\tunfoldOnClickAfterEndOfLine,\n\tfontFamily,\n\tfontInfo,\n\tfontLigatures,\n\tfontSize,\n\tfontWeight,\n\tformatOnPaste,\n\tformatOnType,\n\tglyphMargin,\n\tgotoLocation,\n\thideCursorInOverviewRuler,\n\thighlightActiveIndentGuide,\n\thover,\n\tinDiffEditor,\n\tletterSpacing,\n\tlightbulb,\n\tlineDecorationsWidth,\n\tlineHeight,\n\tlineNumbers,\n\tlineNumbersMinChars,\n\tlinks,\n\tmatchBrackets,\n\tminimap,\n\tmouseStyle,\n\tmouseWheelScrollSensitivity,\n\tmouseWheelZoom,\n\tmultiCursorMergeOverlapping,\n\tmultiCursorModifier,\n\tmultiCursorPaste,\n\toccurrencesHighlight,\n\toverviewRulerBorder,\n\toverviewRulerLanes,\n\tpadding,\n\tparameterHints,\n\tpeekWidgetDefaultFocus,\n\tdefinitionLinkOpensInPeek,\n\tquickSuggestions,\n\tquickSuggestionsDelay,\n\treadOnly,\n\trenameOnType,\n\trenderControlCharacters,\n\trenderIndentGuides,\n\trenderFinalNewline,\n\trenderLineHighlight,\n\trenderLineHighlightOnlyWhenFocus,\n\trenderValidationDecorations,\n\trenderWhitespace,\n\trevealHorizontalRightPadding,\n\troundedSelection,\n\trulers,\n\tscrollbar,\n\tscrollBeyondLastColumn,\n\tscrollBeyondLastLine,\n\tscrollPredominantAxis,\n\tselectionClipboard,\n\tselectionHighlight,\n\tselectOnLineNumbers,\n\tshowFoldingControls,\n\tshowUnused,\n\tsnippetSuggestions,\n\tsmoothScrolling,\n\tstopRenderingLineAfter,\n\tsuggest,\n\tsuggestFontSize,\n\tsuggestLineHeight,\n\tsuggestOnTriggerCharacters,\n\tsuggestSelection,\n\ttabCompletion,\n\tuseTabStops,\n\twordSeparators,\n\twordWrap,\n\twordWrapBreakAfterCharacters,\n\twordWrapBreakBeforeCharacters,\n\twordWrapColumn,\n\twordWrapMinified,\n\twrappingIndent,\n\twrappingStrategy,\n\n\t// Leave these at the end (because they have dependencies!)\n\teditorClassName,\n\tpixelRatio,\n\ttabFocusMode,\n\tlayoutInfo,\n\twrappingInfo,\n}\n\n/**\n * WORKAROUND: TS emits \"any\" for complex editor options values (anything except string, bool, enum, etc. ends up being \"any\")\n * @monacodtsreplace\n * /accessibilitySupport, any/accessibilitySupport, AccessibilitySupport/\n * /comments, any/comments, EditorCommentsOptions/\n * /find, any/find, EditorFindOptions/\n * /fontInfo, any/fontInfo, FontInfo/\n * /gotoLocation, any/gotoLocation, GoToLocationOptions/\n * /hover, any/hover, EditorHoverOptions/\n * /lightbulb, any/lightbulb, EditorLightbulbOptions/\n * /minimap, any/minimap, EditorMinimapOptions/\n * /parameterHints, any/parameterHints, InternalParameterHintOptions/\n * /quickSuggestions, any/quickSuggestions, ValidQuickSuggestionsOptions/\n * /suggest, any/suggest, InternalSuggestOptions/\n */\nexport const EditorOptions = {\n\tacceptSuggestionOnCommitCharacter: register(new EditorBooleanOption(\n\t\tEditorOption.acceptSuggestionOnCommitCharacter, 'acceptSuggestionOnCommitCharacter', true,\n\t\t{ markdownDescription: nls.localize('acceptSuggestionOnCommitCharacter', \"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.\") }\n\t)),\n\tacceptSuggestionOnEnter: register(new EditorStringEnumOption(\n\t\tEditorOption.acceptSuggestionOnEnter, 'acceptSuggestionOnEnter',\n\t\t'on' as 'on' | 'smart' | 'off',\n\t\t['on', 'smart', 'off'] as const,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('acceptSuggestionOnEnterSmart', \"Only accept a suggestion with `Enter` when it makes a textual change.\"),\n\t\t\t\t''\n\t\t\t],\n\t\t\tmarkdownDescription: nls.localize('acceptSuggestionOnEnter', \"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.\")\n\t\t}\n\t)),\n\taccessibilitySupport: register(new EditorAccessibilitySupport()),\n\taccessibilityPageSize: register(new EditorIntOption(EditorOption.accessibilityPageSize, 'accessibilityPageSize', 10, 1, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ description: nls.localize('accessibilityPageSize', \"Controls the number of lines in the editor that can be read out by a screen reader. Warning: this has a performance implication for numbers larger than the default.\") })),\n\tariaLabel: register(new EditorStringOption(\n\t\tEditorOption.ariaLabel, 'ariaLabel', nls.localize('editorViewAccessibleLabel', \"Editor content\")\n\t)),\n\tautoClosingBrackets: register(new EditorStringEnumOption(\n\t\tEditorOption.autoClosingBrackets, 'autoClosingBrackets',\n\t\t'languageDefined' as 'always' | 'languageDefined' | 'beforeWhitespace' | 'never',\n\t\t['always', 'languageDefined', 'beforeWhitespace', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('editor.autoClosingBrackets.languageDefined', \"Use language configurations to determine when to autoclose brackets.\"),\n\t\t\t\tnls.localize('editor.autoClosingBrackets.beforeWhitespace', \"Autoclose brackets only when the cursor is to the left of whitespace.\"),\n\t\t\t\t'',\n\t\t\t],\n\t\t\tdescription: nls.localize('autoClosingBrackets', \"Controls whether the editor should automatically close brackets after the user adds an opening bracket.\")\n\t\t}\n\t)),\n\tautoClosingOvertype: register(new EditorStringEnumOption(\n\t\tEditorOption.autoClosingOvertype, 'autoClosingOvertype',\n\t\t'auto' as 'always' | 'auto' | 'never',\n\t\t['always', 'auto', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('editor.autoClosingOvertype.auto', \"Type over closing quotes or brackets only if they were automatically inserted.\"),\n\t\t\t\t'',\n\t\t\t],\n\t\t\tdescription: nls.localize('autoClosingOvertype', \"Controls whether the editor should type over closing quotes or brackets.\")\n\t\t}\n\t)),\n\tautoClosingQuotes: register(new EditorStringEnumOption(\n\t\tEditorOption.autoClosingQuotes, 'autoClosingQuotes',\n\t\t'languageDefined' as 'always' | 'languageDefined' | 'beforeWhitespace' | 'never',\n\t\t['always', 'languageDefined', 'beforeWhitespace', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('editor.autoClosingQuotes.languageDefined', \"Use language configurations to determine when to autoclose quotes.\"),\n\t\t\t\tnls.localize('editor.autoClosingQuotes.beforeWhitespace', \"Autoclose quotes only when the cursor is to the left of whitespace.\"),\n\t\t\t\t'',\n\t\t\t],\n\t\t\tdescription: nls.localize('autoClosingQuotes', \"Controls whether the editor should automatically close quotes after the user adds an opening quote.\")\n\t\t}\n\t)),\n\tautoIndent: register(new EditorEnumOption(\n\t\tEditorOption.autoIndent, 'autoIndent',\n\t\tEditorAutoIndentStrategy.Full, 'full',\n\t\t['none', 'keep', 'brackets', 'advanced', 'full'],\n\t\t_autoIndentFromString,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('editor.autoIndent.none', \"The editor will not insert indentation automatically.\"),\n\t\t\t\tnls.localize('editor.autoIndent.keep', \"The editor will keep the current line's indentation.\"),\n\t\t\t\tnls.localize('editor.autoIndent.brackets', \"The editor will keep the current line's indentation and honor language defined brackets.\"),\n\t\t\t\tnls.localize('editor.autoIndent.advanced', \"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.\"),\n\t\t\t\tnls.localize('editor.autoIndent.full', \"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('autoIndent', \"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\")\n\t\t}\n\t)),\n\tautomaticLayout: register(new EditorBooleanOption(\n\t\tEditorOption.automaticLayout, 'automaticLayout', false,\n\t)),\n\tautoSurround: register(new EditorStringEnumOption(\n\t\tEditorOption.autoSurround, 'autoSurround',\n\t\t'languageDefined' as 'languageDefined' | 'quotes' | 'brackets' | 'never',\n\t\t['languageDefined', 'quotes', 'brackets', 'never'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('editor.autoSurround.languageDefined', \"Use language configurations to determine when to automatically surround selections.\"),\n\t\t\t\tnls.localize('editor.autoSurround.quotes', \"Surround with quotes but not brackets.\"),\n\t\t\t\tnls.localize('editor.autoSurround.brackets', \"Surround with brackets but not quotes.\"),\n\t\t\t\t''\n\t\t\t],\n\t\t\tdescription: nls.localize('autoSurround', \"Controls whether the editor should automatically surround selections.\")\n\t\t}\n\t)),\n\tcodeLens: register(new EditorBooleanOption(\n\t\tEditorOption.codeLens, 'codeLens', true,\n\t\t{ description: nls.localize('codeLens', \"Controls whether the editor shows CodeLens.\") }\n\t)),\n\tcolorDecorators: register(new EditorBooleanOption(\n\t\tEditorOption.colorDecorators, 'colorDecorators', true,\n\t\t{ description: nls.localize('colorDecorators', \"Controls whether the editor should render the inline color decorators and color picker.\") }\n\t)),\n\tcolumnSelection: register(new EditorBooleanOption(\n\t\tEditorOption.columnSelection, 'columnSelection', false,\n\t\t{ description: nls.localize('columnSelection', \"Enable that the selection with the mouse and keys is doing column selection.\") }\n\t)),\n\tcomments: register(new EditorComments()),\n\tcontextmenu: register(new EditorBooleanOption(\n\t\tEditorOption.contextmenu, 'contextmenu', true,\n\t)),\n\tcopyWithSyntaxHighlighting: register(new EditorBooleanOption(\n\t\tEditorOption.copyWithSyntaxHighlighting, 'copyWithSyntaxHighlighting', true,\n\t\t{ description: nls.localize('copyWithSyntaxHighlighting', \"Controls whether syntax highlighting should be copied into the clipboard.\") }\n\t)),\n\tcursorBlinking: register(new EditorEnumOption(\n\t\tEditorOption.cursorBlinking, 'cursorBlinking',\n\t\tTextEditorCursorBlinkingStyle.Blink, 'blink',\n\t\t['blink', 'smooth', 'phase', 'expand', 'solid'],\n\t\t_cursorBlinkingStyleFromString,\n\t\t{ description: nls.localize('cursorBlinking', \"Control the cursor animation style.\") }\n\t)),\n\tcursorSmoothCaretAnimation: register(new EditorBooleanOption(\n\t\tEditorOption.cursorSmoothCaretAnimation, 'cursorSmoothCaretAnimation', false,\n\t\t{ description: nls.localize('cursorSmoothCaretAnimation', \"Controls whether the smooth caret animation should be enabled.\") }\n\t)),\n\tcursorStyle: register(new EditorEnumOption(\n\t\tEditorOption.cursorStyle, 'cursorStyle',\n\t\tTextEditorCursorStyle.Line, 'line',\n\t\t['line', 'block', 'underline', 'line-thin', 'block-outline', 'underline-thin'],\n\t\t_cursorStyleFromString,\n\t\t{ description: nls.localize('cursorStyle', \"Controls the cursor style.\") }\n\t)),\n\tcursorSurroundingLines: register(new EditorIntOption(\n\t\tEditorOption.cursorSurroundingLines, 'cursorSurroundingLines',\n\t\t0, 0, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ description: nls.localize('cursorSurroundingLines', \"Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or `scrollOffset` in some other editors.\") }\n\t)),\n\tcursorSurroundingLinesStyle: register(new EditorStringEnumOption(\n\t\tEditorOption.cursorSurroundingLinesStyle, 'cursorSurroundingLinesStyle',\n\t\t'default' as 'default' | 'all',\n\t\t['default', 'all'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('cursorSurroundingLinesStyle.default', \"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.\"),\n\t\t\t\tnls.localize('cursorSurroundingLinesStyle.all', \"`cursorSurroundingLines` is enforced always.\")\n\t\t\t],\n\t\t\tdescription: nls.localize('cursorSurroundingLinesStyle', \"Controls when `cursorSurroundingLines` should be enforced.\")\n\t\t}\n\t)),\n\tcursorWidth: register(new EditorIntOption(\n\t\tEditorOption.cursorWidth, 'cursorWidth',\n\t\t0, 0, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ markdownDescription: nls.localize('cursorWidth', \"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.\") }\n\t)),\n\tdisableLayerHinting: register(new EditorBooleanOption(\n\t\tEditorOption.disableLayerHinting, 'disableLayerHinting', false,\n\t)),\n\tdisableMonospaceOptimizations: register(new EditorBooleanOption(\n\t\tEditorOption.disableMonospaceOptimizations, 'disableMonospaceOptimizations', false\n\t)),\n\tdragAndDrop: register(new EditorBooleanOption(\n\t\tEditorOption.dragAndDrop, 'dragAndDrop', true,\n\t\t{ description: nls.localize('dragAndDrop', \"Controls whether the editor should allow moving selections via drag and drop.\") }\n\t)),\n\temptySelectionClipboard: register(new EditorEmptySelectionClipboard()),\n\textraEditorClassName: register(new EditorStringOption(\n\t\tEditorOption.extraEditorClassName, 'extraEditorClassName', '',\n\t)),\n\tfastScrollSensitivity: register(new EditorFloatOption(\n\t\tEditorOption.fastScrollSensitivity, 'fastScrollSensitivity',\n\t\t5, x => (x <= 0 ? 5 : x),\n\t\t{ markdownDescription: nls.localize('fastScrollSensitivity', \"Scrolling speed multiplier when pressing `Alt`.\") }\n\t)),\n\tfind: register(new EditorFind()),\n\tfixedOverflowWidgets: register(new EditorBooleanOption(\n\t\tEditorOption.fixedOverflowWidgets, 'fixedOverflowWidgets', false,\n\t)),\n\tfolding: register(new EditorBooleanOption(\n\t\tEditorOption.folding, 'folding', true,\n\t\t{ description: nls.localize('folding', \"Controls whether the editor has code folding enabled.\") }\n\t)),\n\tfoldingStrategy: register(new EditorStringEnumOption(\n\t\tEditorOption.foldingStrategy, 'foldingStrategy',\n\t\t'auto' as 'auto' | 'indentation',\n\t\t['auto', 'indentation'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('foldingStrategy.auto', \"Use a language-specific folding strategy if available, else the indentation-based one.\"),\n\t\t\t\tnls.localize('foldingStrategy.indentation', \"Use the indentation-based folding strategy.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('foldingStrategy', \"Controls the strategy for computing folding ranges.\")\n\t\t}\n\t)),\n\tfoldingHighlight: register(new EditorBooleanOption(\n\t\tEditorOption.foldingHighlight, 'foldingHighlight', true,\n\t\t{ description: nls.localize('foldingHighlight', \"Controls whether the editor should highlight folded ranges.\") }\n\t)),\n\tunfoldOnClickAfterEndOfLine: register(new EditorBooleanOption(\n\t\tEditorOption.unfoldOnClickAfterEndOfLine, 'unfoldOnClickAfterEndOfLine', false,\n\t\t{ description: nls.localize('unfoldOnClickAfterEndOfLine', \"Controls whether clicking on the empty content after a folded line will unfold the line.\") }\n\t)),\n\tfontFamily: register(new EditorStringOption(\n\t\tEditorOption.fontFamily, 'fontFamily', EDITOR_FONT_DEFAULTS.fontFamily,\n\t\t{ description: nls.localize('fontFamily', \"Controls the font family.\") }\n\t)),\n\tfontInfo: register(new EditorFontInfo()),\n\tfontLigatures2: register(new EditorFontLigatures()),\n\tfontSize: register(new EditorFontSize()),\n\tfontWeight: register(new EditorStringOption(\n\t\tEditorOption.fontWeight, 'fontWeight', EDITOR_FONT_DEFAULTS.fontWeight,\n\t\t{\n\t\t\tenum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n\t\t\tdescription: nls.localize('fontWeight', \"Controls the font weight.\")\n\t\t}\n\t)),\n\tformatOnPaste: register(new EditorBooleanOption(\n\t\tEditorOption.formatOnPaste, 'formatOnPaste', false,\n\t\t{ description: nls.localize('formatOnPaste', \"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.\") }\n\t)),\n\tformatOnType: register(new EditorBooleanOption(\n\t\tEditorOption.formatOnType, 'formatOnType', false,\n\t\t{ description: nls.localize('formatOnType', \"Controls whether the editor should automatically format the line after typing.\") }\n\t)),\n\tglyphMargin: register(new EditorBooleanOption(\n\t\tEditorOption.glyphMargin, 'glyphMargin', true,\n\t\t{ description: nls.localize('glyphMargin', \"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.\") }\n\t)),\n\tgotoLocation: register(new EditorGoToLocation()),\n\thideCursorInOverviewRuler: register(new EditorBooleanOption(\n\t\tEditorOption.hideCursorInOverviewRuler, 'hideCursorInOverviewRuler', false,\n\t\t{ description: nls.localize('hideCursorInOverviewRuler', \"Controls whether the cursor should be hidden in the overview ruler.\") }\n\t)),\n\thighlightActiveIndentGuide: register(new EditorBooleanOption(\n\t\tEditorOption.highlightActiveIndentGuide, 'highlightActiveIndentGuide', true,\n\t\t{ description: nls.localize('highlightActiveIndentGuide', \"Controls whether the editor should highlight the active indent guide.\") }\n\t)),\n\thover: register(new EditorHover()),\n\tinDiffEditor: register(new EditorBooleanOption(\n\t\tEditorOption.inDiffEditor, 'inDiffEditor', false,\n\t)),\n\tletterSpacing: register(new EditorFloatOption(\n\t\tEditorOption.letterSpacing, 'letterSpacing',\n\t\tEDITOR_FONT_DEFAULTS.letterSpacing, x => EditorFloatOption.clamp(x, -5, 20),\n\t\t{ description: nls.localize('letterSpacing', \"Controls the letter spacing in pixels.\") }\n\t)),\n\tlightbulb: register(new EditorLightbulb()),\n\tlineDecorationsWidth: register(new SimpleEditorOption(EditorOption.lineDecorationsWidth, 'lineDecorationsWidth', 10 as number | string)),\n\tlineHeight: register(new EditorLineHeight()),\n\tlineNumbers: register(new EditorRenderLineNumbersOption()),\n\tlineNumbersMinChars: register(new EditorIntOption(\n\t\tEditorOption.lineNumbersMinChars, 'lineNumbersMinChars',\n\t\t5, 1, 300\n\t)),\n\tlinks: register(new EditorBooleanOption(\n\t\tEditorOption.links, 'links', true,\n\t\t{ description: nls.localize('links', \"Controls whether the editor should detect links and make them clickable.\") }\n\t)),\n\tmatchBrackets: register(new EditorStringEnumOption(\n\t\tEditorOption.matchBrackets, 'matchBrackets',\n\t\t'always' as 'never' | 'near' | 'always',\n\t\t['always', 'near', 'never'] as const,\n\t\t{ description: nls.localize('matchBrackets', \"Highlight matching brackets.\") }\n\t)),\n\tminimap: register(new EditorMinimap()),\n\tmouseStyle: register(new EditorStringEnumOption(\n\t\tEditorOption.mouseStyle, 'mouseStyle',\n\t\t'text' as 'text' | 'default' | 'copy',\n\t\t['text', 'default', 'copy'] as const,\n\t)),\n\tmouseWheelScrollSensitivity: register(new EditorFloatOption(\n\t\tEditorOption.mouseWheelScrollSensitivity, 'mouseWheelScrollSensitivity',\n\t\t1, x => (x === 0 ? 1 : x),\n\t\t{ markdownDescription: nls.localize('mouseWheelScrollSensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\") }\n\t)),\n\tmouseWheelZoom: register(new EditorBooleanOption(\n\t\tEditorOption.mouseWheelZoom, 'mouseWheelZoom', false,\n\t\t{ markdownDescription: nls.localize('mouseWheelZoom', \"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.\") }\n\t)),\n\tmultiCursorMergeOverlapping: register(new EditorBooleanOption(\n\t\tEditorOption.multiCursorMergeOverlapping, 'multiCursorMergeOverlapping', true,\n\t\t{ description: nls.localize('multiCursorMergeOverlapping', \"Merge multiple cursors when they are overlapping.\") }\n\t)),\n\tmultiCursorModifier: register(new EditorEnumOption(\n\t\tEditorOption.multiCursorModifier, 'multiCursorModifier',\n\t\t'altKey', 'alt',\n\t\t['ctrlCmd', 'alt'],\n\t\t_multiCursorModifierFromString,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('multiCursorModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n\t\t\t\tnls.localize('multiCursorModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n\t\t\t],\n\t\t\tmarkdownDescription: nls.localize({\n\t\t\t\tkey: 'multiCursorModifier',\n\t\t\t\tcomment: [\n\t\t\t\t\t'- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n\t\t\t\t\t'- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n\t\t\t\t]\n\t\t\t}, \"The modifier to be used to add multiple cursors with the mouse. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).\")\n\t\t}\n\t)),\n\tmultiCursorPaste: register(new EditorStringEnumOption(\n\t\tEditorOption.multiCursorPaste, 'multiCursorPaste',\n\t\t'spread' as 'spread' | 'full',\n\t\t['spread', 'full'] as const,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('multiCursorPaste.spread', \"Each cursor pastes a single line of the text.\"),\n\t\t\t\tnls.localize('multiCursorPaste.full', \"Each cursor pastes the full text.\")\n\t\t\t],\n\t\t\tmarkdownDescription: nls.localize('multiCursorPaste', \"Controls pasting when the line count of the pasted text matches the cursor count.\")\n\t\t}\n\t)),\n\toccurrencesHighlight: register(new EditorBooleanOption(\n\t\tEditorOption.occurrencesHighlight, 'occurrencesHighlight', true,\n\t\t{ description: nls.localize('occurrencesHighlight', \"Controls whether the editor should highlight semantic symbol occurrences.\") }\n\t)),\n\toverviewRulerBorder: register(new EditorBooleanOption(\n\t\tEditorOption.overviewRulerBorder, 'overviewRulerBorder', true,\n\t\t{ description: nls.localize('overviewRulerBorder', \"Controls whether a border should be drawn around the overview ruler.\") }\n\t)),\n\toverviewRulerLanes: register(new EditorIntOption(\n\t\tEditorOption.overviewRulerLanes, 'overviewRulerLanes',\n\t\t3, 0, 3\n\t)),\n\tpadding: register(new EditorPadding()),\n\tparameterHints: register(new EditorParameterHints()),\n\tpeekWidgetDefaultFocus: register(new EditorStringEnumOption(\n\t\tEditorOption.peekWidgetDefaultFocus, 'peekWidgetDefaultFocus',\n\t\t'tree' as 'tree' | 'editor',\n\t\t['tree', 'editor'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('peekWidgetDefaultFocus.tree', \"Focus the tree when opening peek\"),\n\t\t\t\tnls.localize('peekWidgetDefaultFocus.editor', \"Focus the editor when opening peek\")\n\t\t\t],\n\t\t\tdescription: nls.localize('peekWidgetDefaultFocus', \"Controls whether to focus the inline editor or the tree in the peek widget.\")\n\t\t}\n\t)),\n\tdefinitionLinkOpensInPeek: register(new EditorBooleanOption(\n\t\tEditorOption.definitionLinkOpensInPeek, 'definitionLinkOpensInPeek', false,\n\t\t{ description: nls.localize('definitionLinkOpensInPeek', \"Controls whether the Go to Definition mouse gesture always opens the peek widget.\") }\n\t)),\n\tquickSuggestions: register(new EditorQuickSuggestions()),\n\tquickSuggestionsDelay: register(new EditorIntOption(\n\t\tEditorOption.quickSuggestionsDelay, 'quickSuggestionsDelay',\n\t\t10, 0, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ description: nls.localize('quickSuggestionsDelay', \"Controls the delay in milliseconds after which quick suggestions will show up.\") }\n\t)),\n\treadOnly: register(new EditorBooleanOption(\n\t\tEditorOption.readOnly, 'readOnly', false,\n\t)),\n\trenameOnType: register(new EditorBooleanOption(\n\t\tEditorOption.renameOnType, 'renameOnType', false,\n\t\t{ description: nls.localize('renameOnType', \"Controls whether the editor auto renames on type.\") }\n\t)),\n\trenderControlCharacters: register(new EditorBooleanOption(\n\t\tEditorOption.renderControlCharacters, 'renderControlCharacters', false,\n\t\t{ description: nls.localize('renderControlCharacters', \"Controls whether the editor should render control characters.\") }\n\t)),\n\trenderIndentGuides: register(new EditorBooleanOption(\n\t\tEditorOption.renderIndentGuides, 'renderIndentGuides', true,\n\t\t{ description: nls.localize('renderIndentGuides', \"Controls whether the editor should render indent guides.\") }\n\t)),\n\trenderFinalNewline: register(new EditorBooleanOption(\n\t\tEditorOption.renderFinalNewline, 'renderFinalNewline', true,\n\t\t{ description: nls.localize('renderFinalNewline', \"Render last line number when the file ends with a newline.\") }\n\t)),\n\trenderLineHighlight: register(new EditorStringEnumOption(\n\t\tEditorOption.renderLineHighlight, 'renderLineHighlight',\n\t\t'line' as 'none' | 'gutter' | 'line' | 'all',\n\t\t['none', 'gutter', 'line', 'all'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\tnls.localize('renderLineHighlight.all', \"Highlights both the gutter and the current line.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('renderLineHighlight', \"Controls how the editor should render the current line highlight.\")\n\t\t}\n\t)),\n\trenderLineHighlightOnlyWhenFocus: register(new EditorBooleanOption(\n\t\tEditorOption.renderLineHighlightOnlyWhenFocus, 'renderLineHighlightOnlyWhenFocus', false,\n\t\t{ description: nls.localize('renderLineHighlightOnlyWhenFocus', \"Controls if the editor should render the current line highlight only when the editor is focused\") }\n\t)),\n\trenderValidationDecorations: register(new EditorStringEnumOption(\n\t\tEditorOption.renderValidationDecorations, 'renderValidationDecorations',\n\t\t'editable' as 'editable' | 'on' | 'off',\n\t\t['editable', 'on', 'off'] as const\n\t)),\n\trenderWhitespace: register(new EditorStringEnumOption(\n\t\tEditorOption.renderWhitespace, 'renderWhitespace',\n\t\t'selection' as 'selection' | 'none' | 'boundary' | 'all',\n\t\t['none', 'boundary', 'selection', 'all'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\t'',\n\t\t\t\tnls.localize('renderWhitespace.boundary', \"Render whitespace characters except for single spaces between words.\"),\n\t\t\t\tnls.localize('renderWhitespace.selection', \"Render whitespace characters only on selected text.\"),\n\t\t\t\t''\n\t\t\t],\n\t\t\tdescription: nls.localize('renderWhitespace', \"Controls how the editor should render whitespace characters.\")\n\t\t}\n\t)),\n\trevealHorizontalRightPadding: register(new EditorIntOption(\n\t\tEditorOption.revealHorizontalRightPadding, 'revealHorizontalRightPadding',\n\t\t30, 0, 1000,\n\t)),\n\troundedSelection: register(new EditorBooleanOption(\n\t\tEditorOption.roundedSelection, 'roundedSelection', true,\n\t\t{ description: nls.localize('roundedSelection', \"Controls whether selections should have rounded corners.\") }\n\t)),\n\trulers: register(new EditorRulers()),\n\tscrollbar: register(new EditorScrollbar()),\n\tscrollBeyondLastColumn: register(new EditorIntOption(\n\t\tEditorOption.scrollBeyondLastColumn, 'scrollBeyondLastColumn',\n\t\t5, 0, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{ description: nls.localize('scrollBeyondLastColumn', \"Controls the number of extra characters beyond which the editor will scroll horizontally.\") }\n\t)),\n\tscrollBeyondLastLine: register(new EditorBooleanOption(\n\t\tEditorOption.scrollBeyondLastLine, 'scrollBeyondLastLine', true,\n\t\t{ description: nls.localize('scrollBeyondLastLine', \"Controls whether the editor will scroll beyond the last line.\") }\n\t)),\n\tscrollPredominantAxis: register(new EditorBooleanOption(\n\t\tEditorOption.scrollPredominantAxis, 'scrollPredominantAxis', true,\n\t\t{ description: nls.localize('scrollPredominantAxis', \"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.\") }\n\t)),\n\tselectionClipboard: register(new EditorBooleanOption(\n\t\tEditorOption.selectionClipboard, 'selectionClipboard', true,\n\t\t{\n\t\t\tdescription: nls.localize('selectionClipboard', \"Controls whether the Linux primary clipboard should be supported.\"),\n\t\t\tincluded: platform.isLinux\n\t\t}\n\t)),\n\tselectionHighlight: register(new EditorBooleanOption(\n\t\tEditorOption.selectionHighlight, 'selectionHighlight', true,\n\t\t{ description: nls.localize('selectionHighlight', \"Controls whether the editor should highlight matches similar to the selection.\") }\n\t)),\n\tselectOnLineNumbers: register(new EditorBooleanOption(\n\t\tEditorOption.selectOnLineNumbers, 'selectOnLineNumbers', true,\n\t)),\n\tshowFoldingControls: register(new EditorStringEnumOption(\n\t\tEditorOption.showFoldingControls, 'showFoldingControls',\n\t\t'mouseover' as 'always' | 'mouseover',\n\t\t['always', 'mouseover'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('showFoldingControls.always', \"Always show the folding controls.\"),\n\t\t\t\tnls.localize('showFoldingControls.mouseover', \"Only show the folding controls when the mouse is over the gutter.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('showFoldingControls', \"Controls when the folding controls on the gutter are shown.\")\n\t\t}\n\t)),\n\tshowUnused: register(new EditorBooleanOption(\n\t\tEditorOption.showUnused, 'showUnused', true,\n\t\t{ description: nls.localize('showUnused', \"Controls fading out of unused code.\") }\n\t)),\n\tsnippetSuggestions: register(new EditorStringEnumOption(\n\t\tEditorOption.snippetSuggestions, 'snippetSuggestions',\n\t\t'inline' as 'top' | 'bottom' | 'inline' | 'none',\n\t\t['top', 'bottom', 'inline', 'none'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('snippetSuggestions.top', \"Show snippet suggestions on top of other suggestions.\"),\n\t\t\t\tnls.localize('snippetSuggestions.bottom', \"Show snippet suggestions below other suggestions.\"),\n\t\t\t\tnls.localize('snippetSuggestions.inline', \"Show snippets suggestions with other suggestions.\"),\n\t\t\t\tnls.localize('snippetSuggestions.none', \"Do not show snippet suggestions.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('snippetSuggestions', \"Controls whether snippets are shown with other suggestions and how they are sorted.\")\n\t\t}\n\t)),\n\tsmoothScrolling: register(new EditorBooleanOption(\n\t\tEditorOption.smoothScrolling, 'smoothScrolling', false,\n\t\t{ description: nls.localize('smoothScrolling', \"Controls whether the editor will scroll using an animation.\") }\n\t)),\n\tstopRenderingLineAfter: register(new EditorIntOption(\n\t\tEditorOption.stopRenderingLineAfter, 'stopRenderingLineAfter',\n\t\t10000, -1, Constants.MAX_SAFE_SMALL_INTEGER,\n\t)),\n\tsuggest: register(new EditorSuggest()),\n\tsuggestFontSize: register(new EditorIntOption(\n\t\tEditorOption.suggestFontSize, 'suggestFontSize',\n\t\t0, 0, 1000,\n\t\t{ markdownDescription: nls.localize('suggestFontSize', \"Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.\") }\n\t)),\n\tsuggestLineHeight: register(new EditorIntOption(\n\t\tEditorOption.suggestLineHeight, 'suggestLineHeight',\n\t\t0, 0, 1000,\n\t\t{ markdownDescription: nls.localize('suggestLineHeight', \"Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used.\") }\n\t)),\n\tsuggestOnTriggerCharacters: register(new EditorBooleanOption(\n\t\tEditorOption.suggestOnTriggerCharacters, 'suggestOnTriggerCharacters', true,\n\t\t{ description: nls.localize('suggestOnTriggerCharacters', \"Controls whether suggestions should automatically show up when typing trigger characters.\") }\n\t)),\n\tsuggestSelection: register(new EditorStringEnumOption(\n\t\tEditorOption.suggestSelection, 'suggestSelection',\n\t\t'recentlyUsed' as 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix',\n\t\t['first', 'recentlyUsed', 'recentlyUsedByPrefix'] as const,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('suggestSelection.first', \"Always select the first suggestion.\"),\n\t\t\t\tnls.localize('suggestSelection.recentlyUsed', \"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.\"),\n\t\t\t\tnls.localize('suggestSelection.recentlyUsedByPrefix', \"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('suggestSelection', \"Controls how suggestions are pre-selected when showing the suggest list.\")\n\t\t}\n\t)),\n\ttabCompletion: register(new EditorStringEnumOption(\n\t\tEditorOption.tabCompletion, 'tabCompletion',\n\t\t'off' as 'on' | 'off' | 'onlySnippets',\n\t\t['on', 'off', 'onlySnippets'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('tabCompletion.on', \"Tab complete will insert the best matching suggestion when pressing tab.\"),\n\t\t\t\tnls.localize('tabCompletion.off', \"Disable tab completions.\"),\n\t\t\t\tnls.localize('tabCompletion.onlySnippets', \"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('tabCompletion', \"Enables tab completions.\")\n\t\t}\n\t)),\n\tuseTabStops: register(new EditorBooleanOption(\n\t\tEditorOption.useTabStops, 'useTabStops', true,\n\t\t{ description: nls.localize('useTabStops', \"Inserting and deleting whitespace follows tab stops.\") }\n\t)),\n\twordSeparators: register(new EditorStringOption(\n\t\tEditorOption.wordSeparators, 'wordSeparators', USUAL_WORD_SEPARATORS,\n\t\t{ description: nls.localize('wordSeparators', \"Characters that will be used as word separators when doing word related navigations or operations.\") }\n\t)),\n\twordWrap: register(new EditorStringEnumOption(\n\t\tEditorOption.wordWrap, 'wordWrap',\n\t\t'off' as 'off' | 'on' | 'wordWrapColumn' | 'bounded',\n\t\t['off', 'on', 'wordWrapColumn', 'bounded'] as const,\n\t\t{\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('wordWrap.off', \"Lines will never wrap.\"),\n\t\t\t\tnls.localize('wordWrap.on', \"Lines will wrap at the viewport width.\"),\n\t\t\t\tnls.localize({\n\t\t\t\t\tkey: 'wordWrap.wordWrapColumn',\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n\t\t\t\t\t]\n\t\t\t\t}, \"Lines will wrap at `#editor.wordWrapColumn#`.\"),\n\t\t\t\tnls.localize({\n\t\t\t\t\tkey: 'wordWrap.bounded',\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'- viewport means the edge of the visible window size.',\n\t\t\t\t\t\t'- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n\t\t\t\t\t]\n\t\t\t\t}, \"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize({\n\t\t\t\tkey: 'wordWrap',\n\t\t\t\tcomment: [\n\t\t\t\t\t'- \\'off\\', \\'on\\', \\'wordWrapColumn\\' and \\'bounded\\' refer to values the setting can take and should not be localized.',\n\t\t\t\t\t'- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n\t\t\t\t]\n\t\t\t}, \"Controls how lines should wrap.\")\n\t\t}\n\t)),\n\twordWrapBreakAfterCharacters: register(new EditorStringOption(\n\t\tEditorOption.wordWrapBreakAfterCharacters, 'wordWrapBreakAfterCharacters',\n\t\t' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣',\n\t)),\n\twordWrapBreakBeforeCharacters: register(new EditorStringOption(\n\t\tEditorOption.wordWrapBreakBeforeCharacters, 'wordWrapBreakBeforeCharacters',\n\t\t'([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'\n\t)),\n\twordWrapColumn: register(new EditorIntOption(\n\t\tEditorOption.wordWrapColumn, 'wordWrapColumn',\n\t\t80, 1, Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t{\n\t\t\tmarkdownDescription: nls.localize({\n\t\t\t\tkey: 'wordWrapColumn',\n\t\t\t\tcomment: [\n\t\t\t\t\t'- `editor.wordWrap` refers to a different setting and should not be localized.',\n\t\t\t\t\t'- \\'wordWrapColumn\\' and \\'bounded\\' refer to values the different setting can take and should not be localized.'\n\t\t\t\t]\n\t\t\t}, \"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.\")\n\t\t}\n\t)),\n\twordWrapMinified: register(new EditorBooleanOption(\n\t\tEditorOption.wordWrapMinified, 'wordWrapMinified', true,\n\t)),\n\twrappingIndent: register(new EditorEnumOption(\n\t\tEditorOption.wrappingIndent, 'wrappingIndent',\n\t\tWrappingIndent.Same, 'same',\n\t\t['none', 'same', 'indent', 'deepIndent'],\n\t\t_wrappingIndentFromString,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('wrappingIndent.none', \"No indentation. Wrapped lines begin at column 1.\"),\n\t\t\t\tnls.localize('wrappingIndent.same', \"Wrapped lines get the same indentation as the parent.\"),\n\t\t\t\tnls.localize('wrappingIndent.indent', \"Wrapped lines get +1 indentation toward the parent.\"),\n\t\t\t\tnls.localize('wrappingIndent.deepIndent', \"Wrapped lines get +2 indentation toward the parent.\"),\n\t\t\t],\n\t\t\tdescription: nls.localize('wrappingIndent', \"Controls the indentation of wrapped lines.\"),\n\t\t}\n\t)),\n\twrappingStrategy: register(new EditorStringEnumOption(\n\t\tEditorOption.wrappingStrategy, 'wrappingStrategy',\n\t\t'simple' as 'simple' | 'advanced',\n\t\t['simple', 'advanced'] as const,\n\t\t{\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('wrappingStrategy.simple', \"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.\"),\n\t\t\t\tnls.localize('wrappingStrategy.advanced', \"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.\")\n\t\t\t],\n\t\t\tdescription: nls.localize('wrappingStrategy', \"Controls the algorithm that computes wrapping points.\")\n\t\t}\n\t)),\n\n\t// Leave these at the end (because they have dependencies!)\n\teditorClassName: register(new EditorClassName()),\n\tpixelRatio: register(new EditorPixelRatio()),\n\ttabFocusMode: register(new EditorTabFocusMode()),\n\tlayoutInfo: register(new EditorLayoutInfoComputer()),\n\twrappingInfo: register(new EditorWrappingInfoComputer())\n};\n\ntype EditorOptionsType = typeof EditorOptions;\ntype FindEditorOptionsKeyById<T extends EditorOption> = { [K in keyof EditorOptionsType]: EditorOptionsType[K]['id'] extends T ? K : never }[keyof EditorOptionsType];\ntype ComputedEditorOptionValue<T extends IEditorOption<any, any>> = T extends IEditorOption<any, infer R> ? R : never;\nexport type FindComputedEditorOptionValueById<T extends EditorOption> = NonNullable<ComputedEditorOptionValue<EditorOptionsType[FindEditorOptionsKeyById<T>]>>;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.metadata ? extension.metadata.publisherId : null,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.metadata ? extension.metadata.publisherDisplayName : null,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from './descriptors';\nimport { ServiceIdentifier, BrandedService } from './instantiation';\n\nconst _registry: [ServiceIdentifier<any>, SyncDescriptor<any>][] = [];\n\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctor: new (...services: Services) => T, supportsDelayedInstantiation?: boolean): void {\n\t_registry.push([id, new SyncDescriptor<T>(ctor as new (...args: any[]) => T, [], supportsDelayedInstantiation)]);\n}\n\nexport function getSingletonServiceDescriptors(): [ServiceIdentifier<any>, SyncDescriptor<any>][] {\n\treturn _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IMode, LanguageId, LanguageIdentifier } from 'vs/editor/common/modes';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IModeService = createDecorator<IModeService>('modeService');\n\nexport interface ILanguageExtensionPoint {\n\tid: string;\n\textensions?: string[];\n\tfilenames?: string[];\n\tfilenamePatterns?: string[];\n\tfirstLine?: string;\n\taliases?: string[];\n\tmimetypes?: string[];\n\tconfiguration?: URI;\n}\n\nexport interface ILanguageSelection extends IDisposable {\n\treadonly languageIdentifier: LanguageIdentifier;\n\treadonly onDidChange: Event<LanguageIdentifier>;\n}\n\nexport interface IModeService {\n\t_serviceBrand: undefined;\n\n\tonDidCreateMode: Event<IMode>;\n\tonLanguagesMaybeChanged: Event<void>;\n\n\t// --- reading\n\tisRegisteredMode(mimetypeOrModeId: string): boolean;\n\tgetRegisteredModes(): string[];\n\tgetRegisteredLanguageNames(): string[];\n\tgetExtensions(alias: string): string[];\n\tgetFilenames(alias: string): string[];\n\tgetMimeForMode(modeId: string): string | null;\n\tgetLanguageName(modeId: string): string | null;\n\tgetModeIdForLanguageName(alias: string): string | null;\n\tgetModeIdByFilepathOrFirstLine(resource: URI, firstLine?: string): string | null;\n\tgetModeId(commaSeparatedMimetypesOrCommaSeparatedIds: string): string | null;\n\tgetLanguageIdentifier(modeId: string | LanguageId): LanguageIdentifier | null;\n\tgetConfigurationFiles(modeId: string): URI[];\n\n\t// --- instantiation\n\tcreate(commaSeparatedMimetypesOrCommaSeparatedIds: string | undefined): ILanguageSelection;\n\tcreateByLanguageName(languageName: string): ILanguageSelection;\n\tcreateByFilepathOrFirstLine(rsource: URI | null, firstLine?: string): ILanguageSelection;\n\n\ttriggerMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextBufferFactory, ITextModel, ITextModelCreationOptions } from 'vs/editor/common/model';\nimport { ILanguageSelection } from 'vs/editor/common/services/modeService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { DocumentSemanticTokensProvider, DocumentRangeSemanticTokensProvider } from 'vs/editor/common/modes';\nimport { SemanticTokensProviderStyling } from 'vs/editor/common/services/semanticTokensProviderStyling';\n\nexport const IModelService = createDecorator<IModelService>('modelService');\n\nexport type DocumentTokensProvider = DocumentSemanticTokensProvider | DocumentRangeSemanticTokensProvider;\n\nexport interface IModelService {\n\t_serviceBrand: undefined;\n\n\tcreateModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget?: boolean): ITextModel;\n\n\tupdateModel(model: ITextModel, value: string | ITextBufferFactory): void;\n\n\tsetMode(model: ITextModel, languageSelection: ILanguageSelection): void;\n\n\tdestroyModel(resource: URI): void;\n\n\tgetModels(): ITextModel[];\n\n\tgetCreationOptions(language: string, resource: URI, isForSimpleWidget: boolean): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): ITextModel | null;\n\n\tgetSemanticTokensProviderStyling(provider: DocumentTokensProvider): SemanticTokensProviderStyling;\n\n\tonModelAdded: Event<ITextModel>;\n\n\tonModelRemoved: Event<ITextModel>;\n\n\tonModelModeChanged: Event<{ model: ITextModel; oldModeId: string; }>;\n}\n\nexport function shouldSynchronizeModel(model: ITextModel): boolean {\n\treturn (\n\t\t!model.isTooLargeForSyncing() && !model.isForSimpleWidget\n\t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { LanguageSelector, score } from 'vs/editor/common/modes/languageSelector';\nimport { shouldSynchronizeModel } from 'vs/editor/common/services/modelService';\n\ninterface Entry<T> {\n\tselector: LanguageSelector;\n\tprovider: T;\n\t_score: number;\n\t_time: number;\n}\n\nfunction isExclusive(selector: LanguageSelector): boolean {\n\tif (typeof selector === 'string') {\n\t\treturn false;\n\t} else if (Array.isArray(selector)) {\n\t\treturn selector.every(isExclusive);\n\t} else {\n\t\treturn !!selector.exclusive;\n\t}\n}\n\nexport class LanguageFeatureRegistry<T> {\n\n\tprivate _clock: number = 0;\n\tprivate readonly _entries: Entry<T>[] = [];\n\tprivate readonly _onDidChange = new Emitter<number>();\n\n\tget onDidChange(): Event<number> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tregister(selector: LanguageSelector, provider: T): IDisposable {\n\n\t\tlet entry: Entry<T> | undefined = {\n\t\t\tselector,\n\t\t\tprovider,\n\t\t\t_score: -1,\n\t\t\t_time: this._clock++\n\t\t};\n\n\t\tthis._entries.push(entry);\n\t\tthis._lastCandidate = undefined;\n\t\tthis._onDidChange.fire(this._entries.length);\n\n\t\treturn toDisposable(() => {\n\t\t\tif (entry) {\n\t\t\t\tlet idx = this._entries.indexOf(entry);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._entries.splice(idx, 1);\n\t\t\t\t\tthis._lastCandidate = undefined;\n\t\t\t\t\tthis._onDidChange.fire(this._entries.length);\n\t\t\t\t\tentry = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thas(model: ITextModel): boolean {\n\t\treturn this.all(model).length > 0;\n\t}\n\n\tall(model: ITextModel): T[] {\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis._updateScores(model);\n\t\tconst result: T[] = [];\n\n\t\t// from registry\n\t\tfor (let entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tresult.push(entry.provider);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tordered(model: ITextModel): T[] {\n\t\tconst result: T[] = [];\n\t\tthis._orderedForEach(model, entry => result.push(entry.provider));\n\t\treturn result;\n\t}\n\n\torderedGroups(model: ITextModel): T[][] {\n\t\tconst result: T[][] = [];\n\t\tlet lastBucket: T[];\n\t\tlet lastBucketScore: number;\n\n\t\tthis._orderedForEach(model, entry => {\n\t\t\tif (lastBucket && lastBucketScore === entry._score) {\n\t\t\t\tlastBucket.push(entry.provider);\n\t\t\t} else {\n\t\t\t\tlastBucketScore = entry._score;\n\t\t\t\tlastBucket = [entry.provider];\n\t\t\t\tresult.push(lastBucket);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _orderedForEach(model: ITextModel, callback: (provider: Entry<T>) => any): void {\n\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateScores(model);\n\n\t\tfor (const entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tcallback(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lastCandidate: { uri: string; language: string; } | undefined;\n\n\tprivate _updateScores(model: ITextModel): void {\n\n\t\tlet candidate = {\n\t\t\turi: model.uri.toString(),\n\t\t\tlanguage: model.getLanguageIdentifier().language\n\t\t};\n\n\t\tif (this._lastCandidate\n\t\t\t&& this._lastCandidate.language === candidate.language\n\t\t\t&& this._lastCandidate.uri === candidate.uri) {\n\n\t\t\t// nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastCandidate = candidate;\n\n\t\tfor (let entry of this._entries) {\n\t\t\tentry._score = score(entry.selector, model.uri, model.getLanguageIdentifier().language, shouldSynchronizeModel(model));\n\n\t\t\tif (isExclusive(entry.selector) && entry._score > 0) {\n\t\t\t\t// support for one exclusive selector that overwrites\n\t\t\t\t// any other selector\n\t\t\t\tfor (let entry of this._entries) {\n\t\t\t\t\tentry._score = 0;\n\t\t\t\t}\n\t\t\t\tentry._score = 1000;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// needs sorting\n\t\tthis._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n\t}\n\n\tprivate static _compareByScoreAndTime(a: Entry<any>, b: Entry<any>): number {\n\t\tif (a._score < b._score) {\n\t\t\treturn 1;\n\t\t} else if (a._score > b._score) {\n\t\t\treturn -1;\n\t\t} else if (a._time < b._time) {\n\t\t\treturn 1;\n\t\t} else if (a._time > b._time) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Color } from 'vs/base/common/color';\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isObject } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { TokenizationResult, TokenizationResult2 } from 'vs/editor/common/core/token';\nimport * as model from 'vs/editor/common/model';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/modes/languageFeatureRegistry';\nimport { TokenizationRegistryImpl } from 'vs/editor/common/modes/tokenizationRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport { iconRegistry, Codicon } from 'vs/base/common/codicons';\n\n/**\n * Open ended enum at runtime\n * @internal\n */\nexport const enum LanguageId {\n\tNull = 0,\n\tPlainText = 1\n}\n\n/**\n * @internal\n */\nexport class LanguageIdentifier {\n\n\t/**\n\t * A string identifier. Unique across languages. e.g. 'javascript'.\n\t */\n\tpublic readonly language: string;\n\n\t/**\n\t * A numeric identifier. Unique across languages. e.g. 5\n\t * Will vary at runtime based on registration order, etc.\n\t */\n\tpublic readonly id: LanguageId;\n\n\tconstructor(language: string, id: LanguageId) {\n\t\tthis.language = language;\n\t\tthis.id = id;\n\t}\n}\n\n/**\n * A mode. Will soon be obsolete.\n * @internal\n */\nexport interface IMode {\n\n\tgetId(): string;\n\n\tgetLanguageIdentifier(): LanguageIdentifier;\n\n}\n\n/**\n * A font style. Values are 2^x such that a bit mask can be used.\n * @internal\n */\nexport const enum FontStyle {\n\tNotSet = -1,\n\tNone = 0,\n\tItalic = 1,\n\tBold = 2,\n\tUnderline = 4\n}\n\n/**\n * Open ended enum at runtime\n * @internal\n */\nexport const enum ColorId {\n\tNone = 0,\n\tDefaultForeground = 1,\n\tDefaultBackground = 2\n}\n\n/**\n * A standard token type. Values are 2^x such that a bit mask can be used.\n * @internal\n */\nexport const enum StandardTokenType {\n\tOther = 0,\n\tComment = 1,\n\tString = 2,\n\tRegEx = 4\n}\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (3 bits)\n *  - F = FontStyle (3 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (9 bits)\n *\n * @internal\n */\nexport const enum MetadataConsts {\n\tLANGUAGEID_MASK = 0b00000000000000000000000011111111,\n\tTOKEN_TYPE_MASK = 0b00000000000000000000011100000000,\n\tFONT_STYLE_MASK = 0b00000000000000000011100000000000,\n\tFOREGROUND_MASK = 0b00000000011111111100000000000000,\n\tBACKGROUND_MASK = 0b11111111100000000000000000000000,\n\n\tITALIC_MASK = 0b00000000000000000000100000000000,\n\tBOLD_MASK = 0b00000000000000000001000000000000,\n\tUNDERLINE_MASK = 0b00000000000000000010000000000000,\n\n\tSEMANTIC_USE_ITALIC = 0b00000000000000000000000000000001,\n\tSEMANTIC_USE_BOLD = 0b00000000000000000000000000000010,\n\tSEMANTIC_USE_UNDERLINE = 0b00000000000000000000000000000100,\n\tSEMANTIC_USE_FOREGROUND = 0b00000000000000000000000000001000,\n\tSEMANTIC_USE_BACKGROUND = 0b00000000000000000000000000010000,\n\n\tLANGUAGEID_OFFSET = 0,\n\tTOKEN_TYPE_OFFSET = 8,\n\tFONT_STYLE_OFFSET = 11,\n\tFOREGROUND_OFFSET = 14,\n\tBACKGROUND_OFFSET = 23\n}\n\n/**\n * @internal\n */\nexport class TokenMetadata {\n\n\tpublic static getLanguageId(metadata: number): LanguageId {\n\t\treturn (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n\t}\n\n\tpublic static getTokenType(metadata: number): StandardTokenType {\n\t\treturn (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n\t}\n\n\tpublic static getFontStyle(metadata: number): FontStyle {\n\t\treturn (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n\t}\n\n\tpublic static getForeground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n\t}\n\n\tpublic static getBackground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n\t}\n\n\tpublic static getClassNameFromMetadata(metadata: number): string {\n\t\tlet foreground = this.getForeground(metadata);\n\t\tlet className = 'mtk' + foreground;\n\n\t\tlet fontStyle = this.getFontStyle(metadata);\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tclassName += ' mtki';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tclassName += ' mtkb';\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tclassName += ' mtku';\n\t\t}\n\n\t\treturn className;\n\t}\n\n\tpublic static getInlineStyleFromMetadata(metadata: number, colorMap: string[]): string {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\n\t\tlet result = `color: ${colorMap[foreground]};`;\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tresult += 'font-style: italic;';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tresult += 'font-weight: bold;';\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tresult += 'text-decoration: underline;';\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupport {\n\n\tgetInitialState(): IState;\n\n\t// add offsetDelta to each of the returned indices\n\ttokenize(line: string, state: IState, offsetDelta: number): TokenizationResult;\n\n\ttokenize2(line: string, state: IState, offsetDelta: number): TokenizationResult2;\n}\n\n/**\n * The state of the tokenizer between two lines.\n * It is useful to store flags such as in multiline comment, etc.\n * The model will clone the previous line's state and pass it in to tokenize the next line.\n */\nexport interface IState {\n\tclone(): IState;\n\tequals(other: IState): boolean;\n}\n\n/**\n * A provider result represents the values a provider, like the [`HoverProvider`](#HoverProvider),\n * may return. For once this is the actual result type `T`, like `Hover`, or a thenable that resolves\n * to that type `T`. In addition, `null` and `undefined` can be returned - either directly or from a\n * thenable.\n */\nexport type ProviderResult<T> = T | undefined | null | Thenable<T | undefined | null>;\n\n/**\n * A hover represents additional information for a symbol or word. Hovers are\n * rendered in a tooltip-like widget.\n */\nexport interface Hover {\n\t/**\n\t * The contents of this hover.\n\t */\n\tcontents: IMarkdownString[];\n\n\t/**\n\t * The range to which this hover applies. When missing, the\n\t * editor will use the range at the current position or the\n\t * current position itself.\n\t */\n\trange?: IRange;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface HoverProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideHover(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Hover>;\n}\n\n/**\n * An evaluatable expression represents additional information for an expression in a document. Evaluatable expression are\n * evaluated by a debugger or runtime and their result is rendered in a tooltip-like widget.\n */\nexport interface EvaluatableExpression {\n\t/**\n\t * The range to which this expression applies.\n\t */\n\trange: IRange;\n\t/*\n\t * This expression overrides the expression extracted from the range.\n\t */\n\texpression?: string;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface EvaluatableExpressionProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideEvaluatableExpression(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<EvaluatableExpression>;\n}\n\nexport const enum CompletionItemKind {\n\tMethod,\n\tFunction,\n\tConstructor,\n\tField,\n\tVariable,\n\tClass,\n\tStruct,\n\tInterface,\n\tModule,\n\tProperty,\n\tEvent,\n\tOperator,\n\tUnit,\n\tValue,\n\tConstant,\n\tEnum,\n\tEnumMember,\n\tKeyword,\n\tText,\n\tColor,\n\tFile,\n\tReference,\n\tCustomcolor,\n\tFolder,\n\tTypeParameter,\n\tUser,\n\tIssue,\n\tSnippet, // <- highest value (used for compare!)\n}\n\n/**\n * @internal\n */\nexport const completionKindToCssClass = (function () {\n\tlet data = Object.create(null);\n\tdata[CompletionItemKind.Method] = 'symbol-method';\n\tdata[CompletionItemKind.Function] = 'symbol-function';\n\tdata[CompletionItemKind.Constructor] = 'symbol-constructor';\n\tdata[CompletionItemKind.Field] = 'symbol-field';\n\tdata[CompletionItemKind.Variable] = 'symbol-variable';\n\tdata[CompletionItemKind.Class] = 'symbol-class';\n\tdata[CompletionItemKind.Struct] = 'symbol-struct';\n\tdata[CompletionItemKind.Interface] = 'symbol-interface';\n\tdata[CompletionItemKind.Module] = 'symbol-module';\n\tdata[CompletionItemKind.Property] = 'symbol-property';\n\tdata[CompletionItemKind.Event] = 'symbol-event';\n\tdata[CompletionItemKind.Operator] = 'symbol-operator';\n\tdata[CompletionItemKind.Unit] = 'symbol-unit';\n\tdata[CompletionItemKind.Value] = 'symbol-value';\n\tdata[CompletionItemKind.Constant] = 'symbol-constant';\n\tdata[CompletionItemKind.Enum] = 'symbol-enum';\n\tdata[CompletionItemKind.EnumMember] = 'symbol-enum-member';\n\tdata[CompletionItemKind.Keyword] = 'symbol-keyword';\n\tdata[CompletionItemKind.Snippet] = 'symbol-snippet';\n\tdata[CompletionItemKind.Text] = 'symbol-text';\n\tdata[CompletionItemKind.Color] = 'symbol-color';\n\tdata[CompletionItemKind.File] = 'symbol-file';\n\tdata[CompletionItemKind.Reference] = 'symbol-reference';\n\tdata[CompletionItemKind.Customcolor] = 'symbol-customcolor';\n\tdata[CompletionItemKind.Folder] = 'symbol-folder';\n\tdata[CompletionItemKind.TypeParameter] = 'symbol-type-parameter';\n\tdata[CompletionItemKind.User] = 'account';\n\tdata[CompletionItemKind.Issue] = 'issues';\n\n\treturn function (kind: CompletionItemKind) {\n\t\tconst name = data[kind];\n\t\tlet codicon = name && iconRegistry.get(name);\n\t\tif (!codicon) {\n\t\t\tconsole.info('No codicon found for CompletionItemKind ' + kind);\n\t\t\tcodicon = Codicon.symbolProperty;\n\t\t}\n\t\treturn codicon.classNames;\n\t};\n})();\n\n/**\n * @internal\n */\nexport let completionKindFromString: {\n\t(value: string): CompletionItemKind;\n\t(value: string, strict: true): CompletionItemKind | undefined;\n} = (function () {\n\tlet data: Record<string, CompletionItemKind> = Object.create(null);\n\tdata['method'] = CompletionItemKind.Method;\n\tdata['function'] = CompletionItemKind.Function;\n\tdata['constructor'] = <any>CompletionItemKind.Constructor;\n\tdata['field'] = CompletionItemKind.Field;\n\tdata['variable'] = CompletionItemKind.Variable;\n\tdata['class'] = CompletionItemKind.Class;\n\tdata['struct'] = CompletionItemKind.Struct;\n\tdata['interface'] = CompletionItemKind.Interface;\n\tdata['module'] = CompletionItemKind.Module;\n\tdata['property'] = CompletionItemKind.Property;\n\tdata['event'] = CompletionItemKind.Event;\n\tdata['operator'] = CompletionItemKind.Operator;\n\tdata['unit'] = CompletionItemKind.Unit;\n\tdata['value'] = CompletionItemKind.Value;\n\tdata['constant'] = CompletionItemKind.Constant;\n\tdata['enum'] = CompletionItemKind.Enum;\n\tdata['enum-member'] = CompletionItemKind.EnumMember;\n\tdata['enumMember'] = CompletionItemKind.EnumMember;\n\tdata['keyword'] = CompletionItemKind.Keyword;\n\tdata['snippet'] = CompletionItemKind.Snippet;\n\tdata['text'] = CompletionItemKind.Text;\n\tdata['color'] = CompletionItemKind.Color;\n\tdata['file'] = CompletionItemKind.File;\n\tdata['reference'] = CompletionItemKind.Reference;\n\tdata['customcolor'] = CompletionItemKind.Customcolor;\n\tdata['folder'] = CompletionItemKind.Folder;\n\tdata['type-parameter'] = CompletionItemKind.TypeParameter;\n\tdata['typeParameter'] = CompletionItemKind.TypeParameter;\n\tdata['account'] = CompletionItemKind.User;\n\tdata['issue'] = CompletionItemKind.Issue;\n\treturn function (value: string, strict?: true) {\n\t\tlet res = data[value];\n\t\tif (typeof res === 'undefined' && !strict) {\n\t\t\tres = CompletionItemKind.Property;\n\t\t}\n\t\treturn res;\n\t};\n})();\n\nexport interface CompletionItemLabel {\n\t/**\n\t * The function or variable. Rendered leftmost.\n\t */\n\tname: string;\n\n\t/**\n\t * The parameters without the return type. Render after `name`.\n\t */\n\tparameters?: string;\n\n\t/**\n\t * The fully qualified name, like package name or file path. Rendered after `signature`.\n\t */\n\tqualifier?: string;\n\n\t/**\n\t * The return-type of a function or type of a property/variable. Rendered rightmost.\n\t */\n\ttype?: string;\n}\n\nexport const enum CompletionItemTag {\n\tDeprecated = 1\n}\n\nexport const enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 0b001,\n\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 0b100,\n}\n\n/**\n * A completion item represents a text snippet that is\n * proposed to complete text that is being typed.\n */\nexport interface CompletionItem {\n\t/**\n\t * The label of this completion item. By default\n\t * this is also the text that is inserted when selecting\n\t * this completion.\n\t */\n\tlabel: string | CompletionItemLabel;\n\t/**\n\t * The kind of this completion item. Based on the kind\n\t * an icon is chosen by the editor.\n\t */\n\tkind: CompletionItemKind;\n\t/**\n\t * A modifier to the `kind` which affect how the item\n\t * is rendered, e.g. Deprecated is rendered with a strikeout\n\t */\n\ttags?: ReadonlyArray<CompletionItemTag>;\n\t/**\n\t * A human-readable string with additional information\n\t * about this item, like type or symbol information.\n\t */\n\tdetail?: string;\n\t/**\n\t * A human-readable string that represents a doc-comment.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * A string that should be used when comparing this item\n\t * with other items. When `falsy` the [label](#CompletionItem.label)\n\t * is used.\n\t */\n\tsortText?: string;\n\t/**\n\t * A string that should be used when filtering a set of\n\t * completion items. When `falsy` the [label](#CompletionItem.label)\n\t * is used.\n\t */\n\tfilterText?: string;\n\t/**\n\t * Select this item when showing. *Note* that only one completion item can be selected and\n\t * that the editor decides which item that is. The rule is that the *first* item of those\n\t * that match best is selected.\n\t */\n\tpreselect?: boolean;\n\t/**\n\t * A string or snippet that should be inserted in a document when selecting\n\t * this completion.\n\t * is used.\n\t */\n\tinsertText: string;\n\t/**\n\t * Addition rules (as bitmask) that should be applied when inserting\n\t * this completion.\n\t */\n\tinsertTextRules?: CompletionItemInsertTextRule;\n\t/**\n\t * A range of text that should be replaced by this completion item.\n\t *\n\t * Defaults to a range from the start of the [current word](#TextDocument.getWordRangeAtPosition) to the\n\t * current position.\n\t *\n\t * *Note:* The range must be a [single line](#Range.isSingleLine) and it must\n\t * [contain](#Range.contains) the position at which completion has been [requested](#CompletionItemProvider.provideCompletionItems).\n\t */\n\trange: IRange | { insert: IRange, replace: IRange };\n\t/**\n\t * An optional set of characters that when pressed while this completion is active will accept it first and\n\t * then type that character. *Note* that all commit characters should have `length=1` and that superfluous\n\t * characters will be ignored.\n\t */\n\tcommitCharacters?: string[];\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\tadditionalTextEdits?: model.ISingleEditOperation[];\n\t/**\n\t * A command that should be run upon acceptance of this item.\n\t */\n\tcommand?: Command;\n\n\t/**\n\t * @internal\n\t */\n\t_id?: [number, number];\n}\n\nexport interface CompletionList {\n\tsuggestions: CompletionItem[];\n\tincomplete?: boolean;\n\tdispose?(): void;\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport const enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n/**\n * Contains additional information about the context in which\n * [completion provider](#CompletionItemProvider.provideCompletionItems) is triggered.\n */\nexport interface CompletionContext {\n\t/**\n\t * How the completion was triggered.\n\t */\n\ttriggerKind: CompletionTriggerKind;\n\t/**\n\t * Character that triggered the completion item provider.\n\t *\n\t * `undefined` if provider was not triggered by a character.\n\t */\n\ttriggerCharacter?: string;\n}\n/**\n * The completion item provider interface defines the contract between extensions and\n * the [IntelliSense](https://code.visualstudio.com/docs/editor/intellisense).\n *\n * When computing *complete* completion items is expensive, providers can optionally implement\n * the `resolveCompletionItem`-function. In that case it is enough to return completion\n * items with a [label](#CompletionItem.label) from the\n * [provideCompletionItems](#CompletionItemProvider.provideCompletionItems)-function. Subsequently,\n * when a completion item is shown in the UI and gains focus this provider is asked to resolve\n * the item, like adding [doc-comment](#CompletionItem.documentation) or [details](#CompletionItem.detail).\n */\nexport interface CompletionItemProvider {\n\n\t/**\n\t * @internal\n\t */\n\t_debugDisplayName?: string;\n\n\ttriggerCharacters?: string[];\n\t/**\n\t * Provide completion items for the given position and document.\n\t */\n\tprovideCompletionItems(model: model.ITextModel, position: Position, context: CompletionContext, token: CancellationToken): ProviderResult<CompletionList>;\n\n\t/**\n\t * Given a completion item fill in more data, like [doc-comment](#CompletionItem.documentation)\n\t * or [details](#CompletionItem.detail).\n\t *\n\t * The editor will only resolve a completion item once.\n\t */\n\tresolveCompletionItem?(item: CompletionItem, token: CancellationToken): ProviderResult<CompletionItem>;\n}\n\nexport interface CodeAction {\n\ttitle: string;\n\tcommand?: Command;\n\tedit?: WorkspaceEdit;\n\tdiagnostics?: IMarkerData[];\n\tkind?: string;\n\tisPreferred?: boolean;\n\tdisabled?: string;\n}\n\n/**\n * @internal\n */\nexport const enum CodeActionTriggerType {\n\tAuto = 1,\n\tManual = 2,\n}\n\n/**\n * @internal\n */\nexport interface CodeActionContext {\n\tonly?: string;\n\ttrigger: CodeActionTriggerType;\n}\n\nexport interface CodeActionList extends IDisposable {\n\treadonly actions: ReadonlyArray<CodeAction>;\n}\n\n/**\n * The code action interface defines the contract between extensions and\n * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.\n * @internal\n */\nexport interface CodeActionProvider {\n\n\tdisplayName?: string\n\n\t/**\n\t * Provide commands for the given document and range.\n\t */\n\tprovideCodeActions(model: model.ITextModel, range: Range | Selection, context: CodeActionContext, token: CancellationToken): ProviderResult<CodeActionList>;\n\n\t/**\n\t * Optional list of CodeActionKinds that this provider returns.\n\t */\n\treadonly providedCodeActionKinds?: ReadonlyArray<string>;\n\n\treadonly documentation?: ReadonlyArray<{ readonly kind: string, readonly command: Command }>;\n\n\t/**\n\t * @internal\n\t */\n\t_getAdditionalMenuItems?(context: CodeActionContext, actions: readonly CodeAction[]): Command[];\n}\n\n/**\n * Represents a parameter of a callable-signature. A parameter can\n * have a label and a doc-comment.\n */\nexport interface ParameterInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string | [number, number];\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n}\n/**\n * Represents the signature of something callable. A signature\n * can have a label, like a function-name, a doc-comment, and\n * a set of parameters.\n */\nexport interface SignatureInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string;\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * The parameters of this signature.\n\t */\n\tparameters: ParameterInformation[];\n\t/**\n\t * Index of the active parameter.\n\t *\n\t * If provided, this is used in place of `SignatureHelp.activeSignature`.\n\t */\n\tactiveParameter?: number;\n}\n/**\n * Signature help represents the signature of something\n * callable. There can be multiple signatures but only one\n * active and only one active parameter.\n */\nexport interface SignatureHelp {\n\t/**\n\t * One or more signatures.\n\t */\n\tsignatures: SignatureInformation[];\n\t/**\n\t * The active signature.\n\t */\n\tactiveSignature: number;\n\t/**\n\t * The active parameter of the active signature.\n\t */\n\tactiveParameter: number;\n}\n\nexport interface SignatureHelpResult extends IDisposable {\n\tvalue: SignatureHelp;\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\nexport interface SignatureHelpContext {\n\treadonly triggerKind: SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly isRetrigger: boolean;\n\treadonly activeSignatureHelp?: SignatureHelp;\n}\n\n/**\n * The signature help provider interface defines the contract between extensions and\n * the [parameter hints](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface SignatureHelpProvider {\n\n\treadonly signatureHelpTriggerCharacters?: ReadonlyArray<string>;\n\treadonly signatureHelpRetriggerCharacters?: ReadonlyArray<string>;\n\n\t/**\n\t * Provide help for the signature at the given position and document.\n\t */\n\tprovideSignatureHelp(model: model.ITextModel, position: Position, token: CancellationToken, context: SignatureHelpContext): ProviderResult<SignatureHelpResult>;\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite\n}\n/**\n * A document highlight is a range inside a text document which deserves\n * special attention. Usually a document highlight is visualized by changing\n * the background color of its range.\n */\nexport interface DocumentHighlight {\n\t/**\n\t * The range this highlight applies to.\n\t */\n\trange: IRange;\n\t/**\n\t * The highlight kind, default is [text](#DocumentHighlightKind.Text).\n\t */\n\tkind?: DocumentHighlightKind;\n}\n/**\n * The document highlight provider interface defines the contract between extensions and\n * the word-highlight-feature.\n */\nexport interface DocumentHighlightProvider {\n\t/**\n\t * Provide a set of document highlights, like all occurrences of a variable or\n\t * all exit-points of a function.\n\t */\n\tprovideDocumentHighlights(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<DocumentHighlight[]>;\n}\n\n/**\n * The rename provider interface defines the contract between extensions and\n * the live-rename feature.\n */\nexport interface OnTypeRenameProvider {\n\n\tstopPattern?: RegExp;\n\n\t/**\n\t * Provide a list of ranges that can be live-renamed together.\n\t */\n\tprovideOnTypeRenameRanges(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<IRange[]>;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\t/**\n\t * Include the declaration of the current symbol.\n\t */\n\tincludeDeclaration: boolean;\n}\n/**\n * The reference provider interface defines the contract between extensions and\n * the [find references](https://code.visualstudio.com/docs/editor/editingevolved#_peek)-feature.\n */\nexport interface ReferenceProvider {\n\t/**\n\t * Provide a set of project-wide references for the given position and document.\n\t */\n\tprovideReferences(model: model.ITextModel, position: Position, context: ReferenceContext, token: CancellationToken): ProviderResult<Location[]>;\n}\n\n/**\n * Represents a location inside a resource, such as a line\n * inside a text file.\n */\nexport interface Location {\n\t/**\n\t * The resource identifier of this location.\n\t */\n\turi: URI;\n\t/**\n\t * The document range of this locations.\n\t */\n\trange: IRange;\n}\n\nexport interface LocationLink {\n\t/**\n\t * A range to select where this link originates from.\n\t */\n\toriginSelectionRange?: IRange;\n\n\t/**\n\t * The target uri this link points to.\n\t */\n\turi: URI;\n\n\t/**\n\t * The full range this link points to.\n\t */\n\trange: IRange;\n\n\t/**\n\t * A range to select this link points to. Must be contained\n\t * in `LocationLink.range`.\n\t */\n\ttargetSelectionRange?: IRange;\n}\n\n/**\n * @internal\n */\nexport function isLocationLink(thing: any): thing is LocationLink {\n\treturn thing\n\t\t&& URI.isUri((thing as LocationLink).uri)\n\t\t&& Range.isIRange((thing as LocationLink).range)\n\t\t&& (Range.isIRange((thing as LocationLink).originSelectionRange) || Range.isIRange((thing as LocationLink).targetSelectionRange));\n}\n\nexport type Definition = Location | Location[] | LocationLink[];\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DefinitionProvider {\n\t/**\n\t * Provide the definition of the symbol at the given position and document.\n\t */\n\tprovideDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DeclarationProvider {\n\t/**\n\t * Provide the declaration of the symbol at the given position and document.\n\t */\n\tprovideDeclaration(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The implementation provider interface defines the contract between extensions and\n * the go to implementation feature.\n */\nexport interface ImplementationProvider {\n\t/**\n\t * Provide the implementation of the symbol at the given position and document.\n\t */\n\tprovideImplementation(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The type definition provider interface defines the contract between extensions and\n * the go to type definition feature.\n */\nexport interface TypeDefinitionProvider {\n\t/**\n\t * Provide the type definition of the symbol at the given position and document.\n\t */\n\tprovideTypeDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * A symbol kind.\n */\nexport const enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport const enum SymbolTag {\n\tDeprecated = 1,\n}\n\n/**\n * @internal\n */\nexport namespace SymbolKinds {\n\n\tconst byName = new Map<string, SymbolKind>();\n\tbyName.set('file', SymbolKind.File);\n\tbyName.set('module', SymbolKind.Module);\n\tbyName.set('namespace', SymbolKind.Namespace);\n\tbyName.set('package', SymbolKind.Package);\n\tbyName.set('class', SymbolKind.Class);\n\tbyName.set('method', SymbolKind.Method);\n\tbyName.set('property', SymbolKind.Property);\n\tbyName.set('field', SymbolKind.Field);\n\tbyName.set('constructor', SymbolKind.Constructor);\n\tbyName.set('enum', SymbolKind.Enum);\n\tbyName.set('interface', SymbolKind.Interface);\n\tbyName.set('function', SymbolKind.Function);\n\tbyName.set('variable', SymbolKind.Variable);\n\tbyName.set('constant', SymbolKind.Constant);\n\tbyName.set('string', SymbolKind.String);\n\tbyName.set('number', SymbolKind.Number);\n\tbyName.set('boolean', SymbolKind.Boolean);\n\tbyName.set('array', SymbolKind.Array);\n\tbyName.set('object', SymbolKind.Object);\n\tbyName.set('key', SymbolKind.Key);\n\tbyName.set('null', SymbolKind.Null);\n\tbyName.set('enum-member', SymbolKind.EnumMember);\n\tbyName.set('struct', SymbolKind.Struct);\n\tbyName.set('event', SymbolKind.Event);\n\tbyName.set('operator', SymbolKind.Operator);\n\tbyName.set('type-parameter', SymbolKind.TypeParameter);\n\n\tconst byKind = new Map<SymbolKind, string>();\n\tbyKind.set(SymbolKind.File, 'file');\n\tbyKind.set(SymbolKind.Module, 'module');\n\tbyKind.set(SymbolKind.Namespace, 'namespace');\n\tbyKind.set(SymbolKind.Package, 'package');\n\tbyKind.set(SymbolKind.Class, 'class');\n\tbyKind.set(SymbolKind.Method, 'method');\n\tbyKind.set(SymbolKind.Property, 'property');\n\tbyKind.set(SymbolKind.Field, 'field');\n\tbyKind.set(SymbolKind.Constructor, 'constructor');\n\tbyKind.set(SymbolKind.Enum, 'enum');\n\tbyKind.set(SymbolKind.Interface, 'interface');\n\tbyKind.set(SymbolKind.Function, 'function');\n\tbyKind.set(SymbolKind.Variable, 'variable');\n\tbyKind.set(SymbolKind.Constant, 'constant');\n\tbyKind.set(SymbolKind.String, 'string');\n\tbyKind.set(SymbolKind.Number, 'number');\n\tbyKind.set(SymbolKind.Boolean, 'boolean');\n\tbyKind.set(SymbolKind.Array, 'array');\n\tbyKind.set(SymbolKind.Object, 'object');\n\tbyKind.set(SymbolKind.Key, 'key');\n\tbyKind.set(SymbolKind.Null, 'null');\n\tbyKind.set(SymbolKind.EnumMember, 'enum-member');\n\tbyKind.set(SymbolKind.Struct, 'struct');\n\tbyKind.set(SymbolKind.Event, 'event');\n\tbyKind.set(SymbolKind.Operator, 'operator');\n\tbyKind.set(SymbolKind.TypeParameter, 'type-parameter');\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string): SymbolKind | undefined {\n\t\treturn byName.get(value);\n\t}\n\t/**\n\t * @internal\n\t */\n\texport function toString(kind: SymbolKind): string | undefined {\n\t\treturn byKind.get(kind);\n\t}\n\t/**\n\t * @internal\n\t */\n\texport function toCssClassName(kind: SymbolKind, inline?: boolean): string {\n\t\tconst symbolName = byKind.get(kind);\n\t\tlet codicon = symbolName && iconRegistry.get('symbol-' + symbolName);\n\t\tif (!codicon) {\n\t\t\tconsole.info('No codicon found for SymbolKind ' + kind);\n\t\t\tcodicon = Codicon.symbolProperty;\n\t\t}\n\t\treturn `${inline ? 'inline' : 'block'} ${codicon.classNames}`;\n\t}\n}\n\nexport interface DocumentSymbol {\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\ttags: ReadonlyArray<SymbolTag>;\n\tcontainerName?: string;\n\trange: IRange;\n\tselectionRange: IRange;\n\tchildren?: DocumentSymbol[];\n}\n\n/**\n * The document symbol provider interface defines the contract between extensions and\n * the [go to symbol](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-symbol)-feature.\n */\nexport interface DocumentSymbolProvider {\n\n\tdisplayName?: string;\n\n\t/**\n\t * Provide symbol information for the given document.\n\t */\n\tprovideDocumentSymbols(model: model.ITextModel, token: CancellationToken): ProviderResult<DocumentSymbol[]>;\n}\n\nexport type TextEdit = { range: IRange; text: string; eol?: model.EndOfLineSequence; };\n\n/**\n * Interface used to format a model\n */\nexport interface FormattingOptions {\n\t/**\n\t * Size of a tab in spaces.\n\t */\n\ttabSize: number;\n\t/**\n\t * Prefer spaces over tabs.\n\t */\n\tinsertSpaces: boolean;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentFormattingEditProvider {\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a whole document.\n\t */\n\tprovideDocumentFormattingEdits(model: model.ITextModel, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentRangeFormattingEditProvider {\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a range in a document.\n\t *\n\t * The given range is a hint and providers can decide to format a smaller\n\t * or larger range. Often this is done by adjusting the start and end\n\t * of the range to full syntax nodes.\n\t */\n\tprovideDocumentRangeFormattingEdits(model: model.ITextModel, range: Range, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface OnTypeFormattingEditProvider {\n\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\tautoFormatTriggerCharacters: string[];\n\n\t/**\n\t * Provide formatting edits after a character has been typed.\n\t *\n\t * The given position and character should hint to the provider\n\t * what range the position to expand to, like find the matching `{`\n\t * when `}` has been entered.\n\t */\n\tprovideOnTypeFormattingEdits(model: model.ITextModel, position: Position, ch: string, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n\n/**\n * @internal\n */\nexport interface IInplaceReplaceSupportResult {\n\tvalue: string;\n\trange: IRange;\n}\n\n/**\n * A link inside the editor.\n */\nexport interface ILink {\n\trange: IRange;\n\turl?: URI | string;\n\ttooltip?: string;\n}\n\nexport interface ILinksList {\n\tlinks: ILink[];\n\tdispose?(): void;\n}\n/**\n * A provider of links.\n */\nexport interface LinkProvider {\n\tprovideLinks(model: model.ITextModel, token: CancellationToken): ProviderResult<ILinksList>;\n\tresolveLink?: (link: ILink, token: CancellationToken) => ProviderResult<ILink>;\n}\n\n/**\n * A color in RGBA format.\n */\nexport interface IColor {\n\n\t/**\n\t * The red component in the range [0-1].\n\t */\n\treadonly red: number;\n\n\t/**\n\t * The green component in the range [0-1].\n\t */\n\treadonly green: number;\n\n\t/**\n\t * The blue component in the range [0-1].\n\t */\n\treadonly blue: number;\n\n\t/**\n\t * The alpha component in the range [0-1].\n\t */\n\treadonly alpha: number;\n}\n\n/**\n * String representations for a color\n */\nexport interface IColorPresentation {\n\t/**\n\t * The label of this color presentation. It will be shown on the color\n\t * picker header. By default this is also the text that is inserted when selecting\n\t * this color presentation.\n\t */\n\tlabel: string;\n\t/**\n\t * An [edit](#TextEdit) which is applied to a document when selecting\n\t * this presentation for the color.\n\t */\n\ttextEdit?: TextEdit;\n\t/**\n\t * An optional array of additional [text edits](#TextEdit) that are applied when\n\t * selecting this color presentation.\n\t */\n\tadditionalTextEdits?: TextEdit[];\n}\n\n/**\n * A color range is a range in a text model which represents a color.\n */\nexport interface IColorInformation {\n\n\t/**\n\t * The range within the model.\n\t */\n\trange: IRange;\n\n\t/**\n\t * The color represented in this range.\n\t */\n\tcolor: IColor;\n}\n\n/**\n * A provider of colors for editor models.\n */\nexport interface DocumentColorProvider {\n\t/**\n\t * Provides the color ranges for a specific model.\n\t */\n\tprovideDocumentColors(model: model.ITextModel, token: CancellationToken): ProviderResult<IColorInformation[]>;\n\t/**\n\t * Provide the string representations for a color.\n\t */\n\tprovideColorPresentations(model: model.ITextModel, colorInfo: IColorInformation, token: CancellationToken): ProviderResult<IColorPresentation[]>;\n}\n\nexport interface SelectionRange {\n\trange: IRange;\n}\n\nexport interface SelectionRangeProvider {\n\t/**\n\t * Provide ranges that should be selected from the given position.\n\t */\n\tprovideSelectionRanges(model: model.ITextModel, positions: Position[], token: CancellationToken): ProviderResult<SelectionRange[][]>;\n}\n\nexport interface FoldingContext {\n}\n/**\n * A provider of folding ranges for editor models.\n */\nexport interface FoldingRangeProvider {\n\t/**\n\t * Provides the folding ranges for a specific model.\n\t */\n\tprovideFoldingRanges(model: model.ITextModel, context: FoldingContext, token: CancellationToken): ProviderResult<FoldingRange[]>;\n}\n\nexport interface FoldingRange {\n\n\t/**\n\t * The one-based start line of the range to fold. The folded area starts after the line's last character.\n\t */\n\tstart: number;\n\n\t/**\n\t * The one-based end line of the range to fold. The folded area ends with the line's last character.\n\t */\n\tend: number;\n\n\t/**\n\t * Describes the [Kind](#FoldingRangeKind) of the folding range such as [Comment](#FoldingRangeKind.Comment) or\n\t * [Region](#FoldingRangeKind.Region). The kind is used to categorize folding ranges and used by commands\n\t * like 'Fold all comments'. See\n\t * [FoldingRangeKind](#FoldingRangeKind) for an enumeration of standardized kinds.\n\t */\n\tkind?: FoldingRangeKind;\n}\nexport class FoldingRangeKind {\n\t/**\n\t * Kind for folding range representing a comment. The value of the kind is 'comment'.\n\t */\n\tstatic readonly Comment = new FoldingRangeKind('comment');\n\t/**\n\t * Kind for folding range representing a import. The value of the kind is 'imports'.\n\t */\n\tstatic readonly Imports = new FoldingRangeKind('imports');\n\t/**\n\t * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n\t * The value of the kind is 'region'.\n\t */\n\tstatic readonly Region = new FoldingRangeKind('region');\n\n\t/**\n\t * Creates a new [FoldingRangeKind](#FoldingRangeKind).\n\t *\n\t * @param value of the kind.\n\t */\n\tpublic constructor(public value: string) {\n\t}\n}\n\n/**\n * @internal\n */\nexport namespace WorkspaceFileEdit {\n\t/**\n\t * @internal\n\t */\n\texport function is(thing: any): thing is WorkspaceFileEdit {\n\t\treturn isObject(thing) && (Boolean((<WorkspaceFileEdit>thing).newUri) || Boolean((<WorkspaceFileEdit>thing).oldUri));\n\t}\n}\n\n/**\n * @internal\n */\nexport namespace WorkspaceTextEdit {\n\t/**\n\t * @internal\n\t */\n\texport function is(thing: any): thing is WorkspaceTextEdit {\n\t\treturn isObject(thing) && URI.isUri((<WorkspaceTextEdit>thing).resource) && isObject((<WorkspaceTextEdit>thing).edit);\n\t}\n}\n\nexport interface WorkspaceEditMetadata {\n\tneedsConfirmation: boolean;\n\tlabel: string;\n\tdescription?: string;\n\ticonPath?: { id: string } | URI | { light: URI, dark: URI };\n}\n\nexport interface WorkspaceFileEditOptions {\n\toverwrite?: boolean;\n\tignoreIfNotExists?: boolean;\n\tignoreIfExists?: boolean;\n\trecursive?: boolean;\n}\n\nexport interface WorkspaceFileEdit {\n\toldUri?: URI;\n\tnewUri?: URI;\n\toptions?: WorkspaceFileEditOptions;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceTextEdit {\n\tresource: URI;\n\tedit: TextEdit;\n\tmodelVersionId?: number;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceEdit {\n\tedits: Array<WorkspaceTextEdit | WorkspaceFileEdit>;\n}\n\nexport interface Rejection {\n\trejectReason?: string;\n}\nexport interface RenameLocation {\n\trange: IRange;\n\ttext: string;\n}\n\nexport interface RenameProvider {\n\tprovideRenameEdits(model: model.ITextModel, position: Position, newName: string, token: CancellationToken): ProviderResult<WorkspaceEdit & Rejection>;\n\tresolveRenameLocation?(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<RenameLocation & Rejection>;\n}\n\n/**\n * @internal\n */\nexport interface AuthenticationSession {\n\tid: string;\n\tgetAccessToken(): Thenable<string>;\n\taccount: {\n\t\tdisplayName: string;\n\t\tid: string;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface AuthenticationSessionsChangeEvent {\n\tadded: string[];\n\tremoved: string[];\n\tchanged: string[];\n}\n\nexport interface Command {\n\tid: string;\n\ttitle: string;\n\ttooltip?: string;\n\targuments?: any[];\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadTemplate {\n\tcontrollerHandle: number;\n\tlabel: string;\n\tacceptInputCommand?: Command;\n\tadditionalCommands?: Command[];\n\tdeleteCommand?: Command;\n}\n\n/**\n * @internal\n */\nexport interface CommentInfo {\n\textensionId?: string;\n\tthreads: CommentThread[];\n\tcommentingRanges: CommentingRanges;\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\n\n\n/**\n * @internal\n */\nexport interface CommentWidget {\n\tcommentThread: CommentThread;\n\tcomment?: Comment;\n\tinput: string;\n\tonDidChangeInput: Event<string>;\n}\n\n/**\n * @internal\n */\nexport interface CommentInput {\n\tvalue: string;\n\turi: URI;\n}\n\n/**\n * @internal\n */\nexport interface CommentThread {\n\tcommentThreadHandle: number;\n\tcontrollerHandle: number;\n\textensionId?: string;\n\tthreadId: string;\n\tresource: string | null;\n\trange: IRange;\n\tlabel: string | undefined;\n\tcontextValue: string | undefined;\n\tcomments: Comment[] | undefined;\n\tonDidChangeComments: Event<Comment[] | undefined>;\n\tcollapsibleState?: CommentThreadCollapsibleState;\n\tinput?: CommentInput;\n\tonDidChangeInput: Event<CommentInput | undefined>;\n\tonDidChangeRange: Event<IRange>;\n\tonDidChangeLabel: Event<string | undefined>;\n\tonDidChangeCollasibleState: Event<CommentThreadCollapsibleState | undefined>;\n\tisDisposed: boolean;\n}\n\n/**\n * @internal\n */\n\nexport interface CommentingRanges {\n\treadonly resource: URI;\n\tranges: IRange[];\n}\n\n/**\n * @internal\n */\nexport interface CommentReaction {\n\treadonly label?: string;\n\treadonly iconPath?: UriComponents;\n\treadonly count?: number;\n\treadonly hasReacted?: boolean;\n\treadonly canEdit?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface CommentOptions {\n\t/**\n\t * An optional string to show on the comment input box when it's collapsed.\n\t */\n\tprompt?: string;\n\n\t/**\n\t * An optional string to show as placeholder in the comment input box when it's focused.\n\t */\n\tplaceHolder?: string;\n}\n\n/**\n * @internal\n */\nexport enum CommentMode {\n\tEditing = 0,\n\tPreview = 1\n}\n\n/**\n * @internal\n */\nexport interface Comment {\n\treadonly uniqueIdInThread: number;\n\treadonly body: IMarkdownString;\n\treadonly userName: string;\n\treadonly userIconPath?: string;\n\treadonly contextValue?: string;\n\treadonly commentReactions?: CommentReaction[];\n\treadonly label?: string;\n\treadonly mode?: CommentMode;\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadChangedEvent {\n\t/**\n\t * Added comment threads.\n\t */\n\treadonly added: CommentThread[];\n\n\t/**\n\t * Removed comment threads.\n\t */\n\treadonly removed: CommentThread[];\n\n\t/**\n\t * Changed comment threads.\n\t */\n\treadonly changed: CommentThread[];\n}\n\n/**\n * @internal\n */\nexport interface IWebviewPortMapping {\n\twebviewPort: number;\n\textensionHostPort: number;\n}\n\n/**\n * @internal\n */\nexport interface IWebviewOptions {\n\treadonly enableScripts?: boolean;\n\treadonly enableCommandUris?: boolean;\n\treadonly localResourceRoots?: ReadonlyArray<URI>;\n\treadonly portMapping?: ReadonlyArray<IWebviewPortMapping>;\n}\n\n/**\n * @internal\n */\nexport interface IWebviewPanelOptions {\n\treadonly enableFindWidget?: boolean;\n\treadonly retainContextWhenHidden?: boolean;\n}\n\n\nexport interface CodeLens {\n\trange: IRange;\n\tid?: string;\n\tcommand?: Command;\n}\n\nexport interface CodeLensList {\n\tlenses: CodeLens[];\n\tdispose(): void;\n}\n\nexport interface CodeLensProvider {\n\tonDidChange?: Event<this>;\n\tprovideCodeLenses(model: model.ITextModel, token: CancellationToken): ProviderResult<CodeLensList>;\n\tresolveCodeLens?(model: model.ITextModel, codeLens: CodeLens, token: CancellationToken): ProviderResult<CodeLens>;\n}\n\nexport interface SemanticTokensLegend {\n\treadonly tokenTypes: string[];\n\treadonly tokenModifiers: string[];\n}\n\nexport interface SemanticTokens {\n\treadonly resultId?: string;\n\treadonly data: Uint32Array;\n}\n\nexport interface SemanticTokensEdit {\n\treadonly start: number;\n\treadonly deleteCount: number;\n\treadonly data?: Uint32Array;\n}\n\nexport interface SemanticTokensEdits {\n\treadonly resultId?: string;\n\treadonly edits: SemanticTokensEdit[];\n}\n\nexport interface DocumentSemanticTokensProvider {\n\tonDidChange?: Event<void>;\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentSemanticTokens(model: model.ITextModel, lastResultId: string | null, token: CancellationToken): ProviderResult<SemanticTokens | SemanticTokensEdits>;\n\treleaseDocumentSemanticTokens(resultId: string | undefined): void;\n}\n\nexport interface DocumentRangeSemanticTokensProvider {\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentRangeSemanticTokens(model: model.ITextModel, range: Range, token: CancellationToken): ProviderResult<SemanticTokens>;\n}\n\n// --- feature registries ------\n\n/**\n * @internal\n */\nexport const ReferenceProviderRegistry = new LanguageFeatureRegistry<ReferenceProvider>();\n\n/**\n * @internal\n */\nexport const RenameProviderRegistry = new LanguageFeatureRegistry<RenameProvider>();\n\n/**\n * @internal\n */\nexport const CompletionProviderRegistry = new LanguageFeatureRegistry<CompletionItemProvider>();\n\n/**\n * @internal\n */\nexport const SignatureHelpProviderRegistry = new LanguageFeatureRegistry<SignatureHelpProvider>();\n\n/**\n * @internal\n */\nexport const HoverProviderRegistry = new LanguageFeatureRegistry<HoverProvider>();\n\n/**\n * @internal\n */\nexport const EvaluatableExpressionProviderRegistry = new LanguageFeatureRegistry<EvaluatableExpressionProvider>();\n\n/**\n * @internal\n */\nexport const DocumentSymbolProviderRegistry = new LanguageFeatureRegistry<DocumentSymbolProvider>();\n\n/**\n * @internal\n */\nexport const DocumentHighlightProviderRegistry = new LanguageFeatureRegistry<DocumentHighlightProvider>();\n\n/**\n * @internal\n */\nexport const OnTypeRenameProviderRegistry = new LanguageFeatureRegistry<OnTypeRenameProvider>();\n\n/**\n * @internal\n */\nexport const DefinitionProviderRegistry = new LanguageFeatureRegistry<DefinitionProvider>();\n\n/**\n * @internal\n */\nexport const DeclarationProviderRegistry = new LanguageFeatureRegistry<DeclarationProvider>();\n\n/**\n * @internal\n */\nexport const ImplementationProviderRegistry = new LanguageFeatureRegistry<ImplementationProvider>();\n\n/**\n * @internal\n */\nexport const TypeDefinitionProviderRegistry = new LanguageFeatureRegistry<TypeDefinitionProvider>();\n\n/**\n * @internal\n */\nexport const CodeLensProviderRegistry = new LanguageFeatureRegistry<CodeLensProvider>();\n\n/**\n * @internal\n */\nexport const CodeActionProviderRegistry = new LanguageFeatureRegistry<CodeActionProvider>();\n\n/**\n * @internal\n */\nexport const DocumentFormattingEditProviderRegistry = new LanguageFeatureRegistry<DocumentFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const DocumentRangeFormattingEditProviderRegistry = new LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const OnTypeFormattingEditProviderRegistry = new LanguageFeatureRegistry<OnTypeFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const LinkProviderRegistry = new LanguageFeatureRegistry<LinkProvider>();\n\n/**\n * @internal\n */\nexport const ColorProviderRegistry = new LanguageFeatureRegistry<DocumentColorProvider>();\n\n/**\n * @internal\n */\nexport const SelectionRangeRegistry = new LanguageFeatureRegistry<SelectionRangeProvider>();\n\n/**\n * @internal\n */\nexport const FoldingRangeProviderRegistry = new LanguageFeatureRegistry<FoldingRangeProvider>();\n\n/**\n * @internal\n */\nexport const DocumentSemanticTokensProviderRegistry = new LanguageFeatureRegistry<DocumentSemanticTokensProvider>();\n\n/**\n * @internal\n */\nexport const DocumentRangeSemanticTokensProviderRegistry = new LanguageFeatureRegistry<DocumentRangeSemanticTokensProvider>();\n\n/**\n * @internal\n */\nexport interface ITokenizationSupportChangedEvent {\n\tchangedLanguages: string[];\n\tchangedColorMap: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationRegistry {\n\n\t/**\n\t * An event triggered when:\n\t *  - a tokenization support is registered, unregistered or changed.\n\t *  - the color map is changed.\n\t */\n\tonDidChange: Event<ITokenizationSupportChangedEvent>;\n\n\t/**\n\t * Fire a change event for a language.\n\t * This is useful for languages that embed other languages.\n\t */\n\tfire(languages: string[]): void;\n\n\t/**\n\t * Register a tokenization support.\n\t */\n\tregister(language: string, support: ITokenizationSupport): IDisposable;\n\n\t/**\n\t * Register a promise for a tokenization support.\n\t */\n\tregisterPromise(language: string, promise: Thenable<ITokenizationSupport>): IDisposable;\n\n\t/**\n\t * Get the tokenization support for a language.\n\t * Returns `null` if not found.\n\t */\n\tget(language: string): ITokenizationSupport | null;\n\n\t/**\n\t * Get the promise of a tokenization support for a language.\n\t * `null` is returned if no support is available and no promise for the support has been registered yet.\n\t */\n\tgetPromise(language: string): Thenable<ITokenizationSupport> | null;\n\n\t/**\n\t * Set the new color map that all tokens will use in their ColorId binary encoded bits for foreground and background.\n\t */\n\tsetColorMap(colorMap: Color[]): void;\n\n\tgetColorMap(): Color[] | null;\n\n\tgetDefaultBackground(): Color | null;\n}\n\n/**\n * @internal\n */\nexport const TokenizationRegistry = new TokenizationRegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { TypeConstraint, validateConstraints } from 'vs/base/common/types';\nimport { ServicesAccessor, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Iterable } from 'vs/base/common/iterator';\n\nexport const ICommandService = createDecorator<ICommandService>('commandService');\n\nexport interface ICommandEvent {\n\tcommandId: string;\n\targs: any[];\n}\n\nexport interface ICommandService {\n\t_serviceBrand: undefined;\n\tonWillExecuteCommand: Event<ICommandEvent>;\n\tonDidExecuteCommand: Event<ICommandEvent>;\n\texecuteCommand<T = any>(commandId: string, ...args: any[]): Promise<T | undefined>;\n}\n\nexport type ICommandsMap = Map<string, ICommand>;\n\nexport interface ICommandHandler {\n\t(accessor: ServicesAccessor, ...args: any[]): void;\n}\n\nexport interface ICommand {\n\tid: string;\n\thandler: ICommandHandler;\n\tdescription?: ICommandHandlerDescription | null;\n}\n\nexport interface ICommandHandlerDescription {\n\treadonly description: string;\n\treadonly args: ReadonlyArray<{\n\t\treadonly name: string;\n\t\treadonly description?: string;\n\t\treadonly constraint?: TypeConstraint;\n\t\treadonly schema?: IJSONSchema;\n\t}>;\n\treadonly returns?: string;\n}\n\nexport interface ICommandRegistry {\n\tonDidRegisterCommand: Event<string>;\n\tregisterCommand(id: string, command: ICommandHandler): IDisposable;\n\tregisterCommand(command: ICommand): IDisposable;\n\tregisterCommandAlias(oldId: string, newId: string): IDisposable;\n\tgetCommand(id: string): ICommand | undefined;\n\tgetCommands(): ICommandsMap;\n}\n\nexport const CommandsRegistry: ICommandRegistry = new class implements ICommandRegistry {\n\n\tprivate readonly _commands = new Map<string, LinkedList<ICommand>>();\n\n\tprivate readonly _onDidRegisterCommand = new Emitter<string>();\n\treadonly onDidRegisterCommand: Event<string> = this._onDidRegisterCommand.event;\n\n\tregisterCommand(idOrCommand: string | ICommand, handler?: ICommandHandler): IDisposable {\n\n\t\tif (!idOrCommand) {\n\t\t\tthrow new Error(`invalid command`);\n\t\t}\n\n\t\tif (typeof idOrCommand === 'string') {\n\t\t\tif (!handler) {\n\t\t\t\tthrow new Error(`invalid command`);\n\t\t\t}\n\t\t\treturn this.registerCommand({ id: idOrCommand, handler });\n\t\t}\n\n\t\t// add argument validation if rich command metadata is provided\n\t\tif (idOrCommand.description) {\n\t\t\tconst constraints: Array<TypeConstraint | undefined> = [];\n\t\t\tfor (let arg of idOrCommand.description.args) {\n\t\t\t\tconstraints.push(arg.constraint);\n\t\t\t}\n\t\t\tconst actualHandler = idOrCommand.handler;\n\t\t\tidOrCommand.handler = function (accessor, ...args: any[]) {\n\t\t\t\tvalidateConstraints(args, constraints);\n\t\t\t\treturn actualHandler(accessor, ...args);\n\t\t\t};\n\t\t}\n\n\t\t// find a place to store the command\n\t\tconst { id } = idOrCommand;\n\n\t\tlet commands = this._commands.get(id);\n\t\tif (!commands) {\n\t\t\tcommands = new LinkedList<ICommand>();\n\t\t\tthis._commands.set(id, commands);\n\t\t}\n\n\t\tlet removeFn = commands.unshift(idOrCommand);\n\n\t\tlet ret = toDisposable(() => {\n\t\t\tremoveFn();\n\t\t\tconst command = this._commands.get(id);\n\t\t\tif (command?.isEmpty()) {\n\t\t\t\tthis._commands.delete(id);\n\t\t\t}\n\t\t});\n\n\t\t// tell the world about this command\n\t\tthis._onDidRegisterCommand.fire(id);\n\n\t\treturn ret;\n\t}\n\n\tregisterCommandAlias(oldId: string, newId: string): IDisposable {\n\t\treturn CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n\t}\n\n\tgetCommand(id: string): ICommand | undefined {\n\t\tconst list = this._commands.get(id);\n\t\tif (!list || list.isEmpty()) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn Iterable.first(list);\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst result = new Map<string, ICommand>();\n\t\tfor (const key of this._commands.keys()) {\n\t\t\tconst command = this.getCommand(key);\n\t\t\tif (command) {\n\t\t\t\tresult.set(key, command);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n};\n\nexport const NullCommandService: ICommandService = {\n\t_serviceBrand: undefined,\n\tonWillExecuteCommand: () => Disposable.None,\n\tonDidExecuteCommand: () => Disposable.None,\n\texecuteCommand() {\n\t\treturn Promise.resolve(undefined);\n\t}\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { isMacintosh, isLinux, isWindows, isWeb } from 'vs/base/common/platform';\n\nconst STATIC_VALUES = new Map<string, boolean>();\nSTATIC_VALUES.set('false', false);\nSTATIC_VALUES.set('true', true);\nSTATIC_VALUES.set('isMac', isMacintosh);\nSTATIC_VALUES.set('isLinux', isLinux);\nSTATIC_VALUES.set('isWindows', isWindows);\nSTATIC_VALUES.set('isWeb', isWeb);\nSTATIC_VALUES.set('isMacNative', isMacintosh && !isWeb);\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr\n);\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr);\n\t}\n\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpression | undefined {\n\t\tif (!serialized) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._deserializeOrExpression(serialized, strict);\n\t}\n\n\tprivate static _deserializeOrExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('||');\n\t\treturn ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)));\n\t}\n\n\tprivate static _deserializeAndExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('&&');\n\t\treturn ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)));\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpression {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tlet pieces = serializedOne.split('=~');\n\t\t\treturn ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn ContextKeyDefinedExpr.create(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet start = serializedValue.indexOf('/');\n\t\tlet end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = serializedValue.slice(start + 1, end);\n\t\tlet caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn staticValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(protected readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key) : ContextKeyNotExpr.create(key));\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst trueValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key + ' == \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key);\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst falseValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key + ' != \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn (staticValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(private readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn '!' + this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\n\tprivate constructor(private readonly key: string, private readonly regexp: RegExp | null) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tlet value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotRegexExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr = ContextKeyAndExpr._normalizeArr(_expr);\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression[] {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn [ContextKeyFalseExpr.INSTANCE];\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t// Not allowed, because we don't have parens!\n\t\t\t\tthrow new Error(`It is not allowed to have an or expression here due to lack of parens! For example \"a && (b||c)\" is not supported, use \"(a&&b) || (a&&c)\" instead.`);\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn [ContextKeyTrueExpr.INSTANCE];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\treturn expr;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\t\treturn ContextKeyOrExpr.create(result)!;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr = ContextKeyOrExpr._normalizeArr(_expr);\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression[] {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn [ContextKeyTrueExpr.INSTANCE];\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn [ContextKeyFalseExpr.INSTANCE];\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\n\t\tconst terminals = (node: ContextKeyExpression) => {\n\t\t\tif (node.type === ContextKeyExprType.Or) {\n\t\t\t\treturn node.expr;\n\t\t\t}\n\t\t\treturn [node];\n\t\t};\n\n\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t// We always take the first 2 AND pairs and distribute them\n\t\twhile (result.length > 1) {\n\t\t\tconst LEFT = result.shift()!;\n\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\tfor (const left of terminals(LEFT)) {\n\t\t\t\tfor (const right of terminals(RIGHT)) {\n\t\t\t\t\tall.push(ContextKeyExpr.and(left, right)!);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.unshift(ContextKeyExpr.or(...all)!);\n\t\t}\n\n\t\treturn result[0];\n\t}\n}\n\nexport class RawContextKey<T> extends ContextKeyDefinedExpr {\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined) {\n\t\tsuper(key);\n\t\tthis._defaultValue = defaultValue;\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn ContextKeyExpr.not(this.key);\n\t}\n\n\tpublic isEqualTo(value: string): ContextKeyExpression {\n\t\treturn ContextKeyExpr.equals(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: string): ContextKeyExpression {\n\t\treturn ContextKeyExpr.notEquals(this.key, value);\n\t}\n}\n\nexport interface IContext {\n\tgetValue<T>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\t_serviceBrand: undefined;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\n\tcreateKey<T>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target?: IContextKeyServiceTarget): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport const BACKUPS = 'Backups';\n\nexport interface IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: DO NOT ADD ANY OTHER PROPERTY INTO THE COLLECTION HERE\n\t// UNLESS THIS PROPERTY IS SUPPORTED BOTH IN WEB AND DESKTOP!!!!\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t_serviceBrand: undefined;\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tbackupHome: URI;\n\tuntitledWorkspacesHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncLogResource: URI;\n\tuserDataSyncHome: URI;\n\tsync: 'on' | 'off' | undefined;\n\tenableSyncByDefault: boolean;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\textensionEnabledProposedApi?: string[];\n\tlogExtensionHostCommunication?: boolean;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- misc\n\tdisableTelemetry: boolean;\n\tserviceMachineIdResource: URI;\n\n\t// NOTE@coder: vscodevim makes use of this.\n\tglobalStorageHome: string;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: DO NOT ADD ANY OTHER PROPERTY INTO THE COLLECTION HERE\n\t// UNLESS THIS PROPERTY IS SUPPORTED BOTH IN WEB AND DESKTOP!!!!\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An even that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[]) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tthis._entries.forEach((value, key) => callback(key, value));\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.getValue();\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.getValue()[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\t_serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\t_serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class LogServiceAdapter extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly adapter: { consoleLog: (type: string, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends LogServiceAdapter implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper({ consoleLog: (type, args) => client.consoleLog(type, args) }, logLevel);\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = environmentService.logLevel.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport Severity from 'vs/base/common/severity';\n\nexport interface IMarkerService {\n\t_serviceBrand: undefined;\n\n\tgetStatistics(): MarkerStatistics;\n\n\tchangeOne(owner: string, resource: URI, markers: IMarkerData[]): void;\n\n\tchangeAll(owner: string, data: IResourceMarker[]): void;\n\n\tremove(owner: string, resources: URI[]): void;\n\n\tread(filter?: { owner?: string; resource?: URI; severities?: number, take?: number; }): IMarker[];\n\n\treadonly onMarkerChanged: Event<readonly URI[]>;\n}\n\n/**\n *\n */\nexport interface IRelatedInformation {\n\tresource: URI;\n\tmessage: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n}\n\nexport const enum MarkerTag {\n\tUnnecessary = 1,\n\tDeprecated = 2\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8,\n}\n\nexport namespace MarkerSeverity {\n\n\texport function compare(a: MarkerSeverity, b: MarkerSeverity): number {\n\t\treturn b - a;\n\t}\n\n\tconst _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n\t_displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n\t_displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n\n\texport function toString(a: MarkerSeverity): string {\n\t\treturn _displayStrings[a] || '';\n\t}\n\n\texport function fromSeverity(severity: Severity): MarkerSeverity {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error: return MarkerSeverity.Error;\n\t\t\tcase Severity.Warning: return MarkerSeverity.Warning;\n\t\t\tcase Severity.Info: return MarkerSeverity.Info;\n\t\t\tcase Severity.Ignore: return MarkerSeverity.Hint;\n\t\t}\n\t}\n\n\texport function toSeverity(severity: MarkerSeverity): Severity {\n\t\tswitch (severity) {\n\t\t\tcase MarkerSeverity.Error: return Severity.Error;\n\t\t\tcase MarkerSeverity.Warning: return Severity.Warning;\n\t\t\tcase MarkerSeverity.Info: return Severity.Info;\n\t\t\tcase MarkerSeverity.Hint: return Severity.Ignore;\n\t\t}\n\t}\n}\n\n/**\n * A structure defining a problem/warning/etc.\n */\nexport interface IMarkerData {\n\tcode?: string | { value: string; target: URI };\n\tseverity: MarkerSeverity;\n\tmessage: string;\n\tsource?: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\trelatedInformation?: IRelatedInformation[];\n\ttags?: MarkerTag[];\n}\n\nexport interface IResourceMarker {\n\tresource: URI;\n\tmarker: IMarkerData;\n}\n\nexport interface IMarker {\n\towner: string;\n\tresource: URI;\n\tseverity: MarkerSeverity;\n\tcode?: string | { value: string; target: URI };\n\tmessage: string;\n\tsource?: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\trelatedInformation?: IRelatedInformation[];\n\ttags?: MarkerTag[];\n}\n\nexport interface MarkerStatistics {\n\terrors: number;\n\twarnings: number;\n\tinfos: number;\n\tunknowns: number;\n}\n\nexport namespace IMarkerData {\n\tconst emptyString = '';\n\texport function makeKey(markerData: IMarkerData): string {\n\t\treturn makeKeyOptionalMessage(markerData, true);\n\t}\n\n\texport function makeKeyOptionalMessage(markerData: IMarkerData, useMessage: boolean): string {\n\t\tlet result: string[] = [emptyString];\n\t\tif (markerData.source) {\n\t\t\tresult.push(markerData.source.replace('¦', '\\\\¦'));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.code) {\n\t\t\tif (typeof markerData.code === 'string') {\n\t\t\t\tresult.push(markerData.code.replace('¦', '\\\\¦'));\n\t\t\t} else {\n\t\t\t\tresult.push(markerData.code.value.replace('¦', '\\\\¦'));\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.severity !== undefined && markerData.severity !== null) {\n\t\t\tresult.push(MarkerSeverity.toString(markerData.severity));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\n\t\t// Modifed to not include the message as part of the marker key to work around\n\t\t// https://github.com/microsoft/vscode/issues/77475\n\t\tif (markerData.message && useMessage) {\n\t\t\tresult.push(markerData.message.replace('¦', '\\\\¦'));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n\t\t\tresult.push(markerData.startLineNumber.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n\t\t\tresult.push(markerData.startColumn.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n\t\t\tresult.push(markerData.endLineNumber.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n\t\t\tresult.push(markerData.endColumn.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tresult.push(emptyString);\n\t\treturn result.join('¦');\n\t}\n}\n\nexport const IMarkerService = createDecorator<IMarkerService>('markerService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\treadonly sticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\treadonly silent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\treadonly neverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces (= `NeverShowAgainScope.GLOBAL`).\n\t */\n\treadonly scope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\treadonly severity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\treadonly message: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\treadonly source?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\treadonly progress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\treadonly primary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\treadonly secondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\treadonly infinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\treadonly total?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\treadonly worked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible.\n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\treadonly keepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\treadonly showAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\treadonly hideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param severity the severity of the notification. Either `Info`, `Warning` or `Error`.\n\t * @param message the message to show as status.\n\t * @param choices options to be choosen from.\n\t * @param options provides some optional configuration options.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toDisposable, DisposableStore, Disposable } from 'vs/base/common/lifecycle';\nimport { IAction } from 'vs/base/common/actions';\n\nexport const IProgressService = createDecorator<IProgressService>('progressService');\n\n/**\n * A progress service that can be used to report progress to various locations of the UI.\n */\nexport interface IProgressService {\n\n\t_serviceBrand: undefined;\n\n\twithProgress<R>(\n\t\toptions: IProgressOptions | IProgressNotificationOptions | IProgressWindowOptions | IProgressCompositeOptions,\n\t\ttask: (progress: IProgress<IProgressStep>) => Promise<R>,\n\t\tonDidCancel?: (choice?: number) => void\n\t): Promise<R>;\n}\n\nexport interface IProgressIndicator {\n\n\t/**\n\t * Show progress customized with the provided flags.\n\t */\n\tshow(infinite: true, delay?: number): IProgressRunner;\n\tshow(total: number, delay?: number): IProgressRunner;\n\n\t/**\n\t * Indicate progress for the duration of the provided promise. Progress will stop in\n\t * any case of promise completion, error or cancellation.\n\t */\n\tshowWhile(promise: Promise<unknown>, delay?: number): Promise<void>;\n}\n\nexport const enum ProgressLocation {\n\tExplorer = 1,\n\tScm = 3,\n\tExtensions = 5,\n\tWindow = 10,\n\tNotification = 15,\n\tDialog = 20\n}\n\nexport interface IProgressOptions {\n\treadonly location: ProgressLocation | string;\n\treadonly title?: string;\n\treadonly source?: string;\n\treadonly total?: number;\n\treadonly cancellable?: boolean;\n\treadonly buttons?: string[];\n}\n\nexport interface IProgressNotificationOptions extends IProgressOptions {\n\treadonly location: ProgressLocation.Notification;\n\treadonly primaryActions?: ReadonlyArray<IAction>;\n\treadonly secondaryActions?: ReadonlyArray<IAction>;\n\treadonly delay?: number;\n\treadonly silent?: boolean;\n}\n\nexport interface IProgressWindowOptions extends IProgressOptions {\n\treadonly location: ProgressLocation.Window;\n\treadonly command?: string;\n}\n\nexport interface IProgressCompositeOptions extends IProgressOptions {\n\treadonly location: ProgressLocation.Explorer | ProgressLocation.Extensions | ProgressLocation.Scm | string;\n\treadonly delay?: number;\n}\n\nexport interface IProgressStep {\n\tmessage?: string;\n\tincrement?: number;\n\ttotal?: number;\n}\n\nexport interface IProgressRunner {\n\ttotal(value: number): void;\n\tworked(value: number): void;\n\tdone(): void;\n}\n\nexport const emptyProgressRunner: IProgressRunner = Object.freeze({\n\ttotal() { },\n\tworked() { },\n\tdone() { }\n});\n\nexport interface IProgress<T> {\n\treport(item: T): void;\n}\n\nexport class Progress<T> implements IProgress<T> {\n\n\tstatic readonly None: IProgress<unknown> = Object.freeze({ report() { } });\n\n\tprivate _value?: T;\n\tget value(): T | undefined { return this._value; }\n\n\tconstructor(private callback: (data: T) => void) { }\n\n\treport(item: T) {\n\t\tthis._value = item;\n\t\tthis.callback(this._value);\n\t}\n}\n\n/**\n * A helper to show progress during a long running operation. If the operation\n * is started multiple times, only the last invocation will drive the progress.\n */\nexport interface IOperation {\n\tid: number;\n\tisCurrent: () => boolean;\n\ttoken: CancellationToken;\n\tstop(): void;\n}\n\nexport class LongRunningOperation extends Disposable {\n\tprivate currentOperationId = 0;\n\tprivate readonly currentOperationDisposables = this._register(new DisposableStore());\n\tprivate currentProgressRunner: IProgressRunner | undefined;\n\tprivate currentProgressTimeout: any;\n\n\tconstructor(\n\t\tprivate progressIndicator: IProgressIndicator\n\t) {\n\t\tsuper();\n\t}\n\n\tstart(progressDelay: number): IOperation {\n\n\t\t// Stop any previous operation\n\t\tthis.stop();\n\n\t\t// Start new\n\t\tconst newOperationId = ++this.currentOperationId;\n\t\tconst newOperationToken = new CancellationTokenSource();\n\t\tthis.currentProgressTimeout = setTimeout(() => {\n\t\t\tif (newOperationId === this.currentOperationId) {\n\t\t\t\tthis.currentProgressRunner = this.progressIndicator.show(true);\n\t\t\t}\n\t\t}, progressDelay);\n\n\t\tthis.currentOperationDisposables.add(toDisposable(() => clearTimeout(this.currentProgressTimeout)));\n\t\tthis.currentOperationDisposables.add(toDisposable(() => newOperationToken.cancel()));\n\t\tthis.currentOperationDisposables.add(toDisposable(() => this.currentProgressRunner ? this.currentProgressRunner.done() : undefined));\n\n\t\treturn {\n\t\t\tid: newOperationId,\n\t\t\ttoken: newOperationToken.token,\n\t\t\tstop: () => this.doStop(newOperationId),\n\t\t\tisCurrent: () => this.currentOperationId === newOperationId\n\t\t};\n\t}\n\n\tstop(): void {\n\t\tthis.doStop(this.currentOperationId);\n\t}\n\n\tprivate doStop(operationId: number): void {\n\t\tif (this.currentOperationId === operationId) {\n\t\t\tthis.currentOperationDisposables.clear();\n\t\t}\n\t}\n}\n\nexport const IEditorProgressService = createDecorator<IEditorProgressService>('editorProgressService');\n\n/**\n * A progress service that will report progress local to the editor triggered from.\n */\nexport interface IEditorProgressService extends IProgressIndicator {\n\n\t_serviceBrand: undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { values } from 'vs/base/common/map';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n\tdisallowSyncIgnore?: boolean;\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tmachineSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tmachineOverridableSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of values(this.overrideIdentifiers)) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\tdefault: this.defaultOverridesConfigurationNode.properties![overrideIdentifierProperty]?.default\n\t\t\t};\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, values, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { dirname } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\tif (scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema && typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW;\n\t}\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), this.scopes);\n\t\tthis._register(this.fileService.watch(dirname(this.userSettingsResource)));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parseContent(content.value.toString() || '{}');\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treprocess(): ConfigurationModel {\n\t\tthis.parser.parse();\n\t\treturn this.parser.configurationModel;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, values(keys)]));\n\treturn { keys: values(keysSet), overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = values(keysSet);\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly host: string;\n\treadonly port: number;\n}\n\nexport interface ResolvedOptions {\n\treadonly extensionHostEnv?: { [key: string]: string | null };\n}\n\nexport interface TunnelDescription {\n\tremoteAddress: { port: number, host: string };\n\tlocalAddress: { port: number, host: string } | string;\n}\nexport interface TunnelInformation {\n\tenvironmentTunnels?: TunnelDescription[];\n}\n\nexport interface ResolverResult {\n\tauthority: ResolvedAuthority;\n\toptions?: ResolvedOptions;\n\ttunnelInformation?: TunnelInformation;\n}\n\nexport enum RemoteAuthorityResolverErrorCode {\n\tUnknown = 'Unknown',\n\tNotAvailable = 'NotAvailable',\n\tTemporarilyNotAvailable = 'TemporarilyNotAvailable',\n\tNoResolverFound = 'NoResolverFound'\n}\n\nexport class RemoteAuthorityResolverError extends Error {\n\n\tpublic static isTemporarilyNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n\t}\n\n\tpublic static isNoResolverFound(err: any): err is RemoteAuthorityResolverError {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n\t}\n\n\tpublic static isHandled(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tpublic isHandled: boolean;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\tthis.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\t_serviceBrand: undefined;\n\n\tresolveAuthority(authority: string): Promise<ResolverResult>;\n\n\tclearResolvedAuthority(authority: string): void;\n\tsetResolvedAuthority(resolvedAuthority: ResolvedAuthority, resolvedOptions?: ResolvedOptions): void;\n\tsetResolvedAuthorityError(authority: string, err: any): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\n\nexport const REMOTE_HOST_SCHEME = Schemas.vscodeRemote;\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === REMOTE_HOST_SCHEME ? uri.authority : undefined;\n}\n\nexport function getRemoteName(authority: string): string;\nexport function getRemoteName(authority: undefined): undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined {\n\tif (!authority) {\n\t\treturn undefined;\n\t}\n\tconst pos = authority.indexOf('+');\n\tif (pos < 0) {\n\t\t// funky? bad authority?\n\t\treturn authority;\n\t}\n\treturn authority.substr(0, pos);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { isWindows, isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { extname, isAbsolute } from 'vs/base/common/path';\nimport { dirname, resolvePath, isEqualAuthority, isEqualOrParent, relativePath, extname as resourceExtname } from 'vs/base/common/resources';\nimport * as jsonEdit from 'vs/base/common/jsonEdit';\nimport * as json from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { toSlashes } from 'vs/base/common/extpath';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const UNTITLED_WORKSPACE_NAME = 'workspace.json';\n\nexport const IWorkspacesService = createDecorator<IWorkspacesService>('workspacesService');\n\nexport interface IWorkspacesService {\n\n\t_serviceBrand: undefined;\n\n\t// Workspaces Management\n\tenterWorkspace(path: URI): Promise<IEnterWorkspaceResult | null>;\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;\n\tgetWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier>;\n\n\t// Workspaces History\n\treadonly onRecentlyOpenedChange: Event<void>;\n\taddRecentlyOpened(recents: IRecent[]): Promise<void>;\n\tremoveRecentlyOpened(workspaces: URI[]): Promise<void>;\n\tclearRecentlyOpened(): Promise<void>;\n\tgetRecentlyOpened(): Promise<IRecentlyOpened>;\n\n\t// Dirty Workspaces\n\tgetDirtyWorkspaces(): Promise<Array<IWorkspaceIdentifier | URI>>;\n}\n\nexport interface IRecentlyOpened {\n\tworkspaces: Array<IRecentWorkspace | IRecentFolder>;\n\tfiles: IRecentFile[];\n}\n\nexport type IRecent = IRecentWorkspace | IRecentFolder | IRecentFile;\n\nexport interface IRecentWorkspace {\n\tworkspace: IWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFolder {\n\tfolderUri: ISingleFolderWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFile {\n\tfileUri: URI;\n\tlabel?: string;\n}\n\nexport function isRecentWorkspace(curr: IRecent): curr is IRecentWorkspace {\n\treturn curr.hasOwnProperty('workspace');\n}\n\nexport function isRecentFolder(curr: IRecent): curr is IRecentFolder {\n\treturn curr.hasOwnProperty('folderUri');\n}\n\nexport function isRecentFile(curr: IRecent): curr is IRecentFile {\n\treturn curr.hasOwnProperty('fileUri');\n}\n\n/**\n * A single folder workspace identifier is just the path to the folder.\n */\nexport type ISingleFolderWorkspaceIdentifier = URI;\n\nexport interface IWorkspaceIdentifier {\n\tid: string;\n\tconfigPath: URI;\n}\n\nexport function reviveWorkspaceIdentifier(workspace: { id: string, configPath: UriComponents; }): IWorkspaceIdentifier {\n\treturn { id: workspace.id, configPath: URI.revive(workspace.configPath) };\n}\n\nexport function isStoredWorkspaceFolder(thing: unknown): thing is IStoredWorkspaceFolder {\n\treturn isRawFileWorkspaceFolder(thing) || isRawUriWorkspaceFolder(thing);\n}\n\nexport function isRawFileWorkspaceFolder(thing: any): thing is IRawFileWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.path === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport function isRawUriWorkspaceFolder(thing: any): thing is IRawUriWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.uri === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport interface IRawFileWorkspaceFolder {\n\tpath: string;\n\tname?: string;\n}\n\nexport interface IRawUriWorkspaceFolder {\n\turi: string;\n\tname?: string;\n}\n\nexport type IStoredWorkspaceFolder = IRawFileWorkspaceFolder | IRawUriWorkspaceFolder;\n\nexport interface IResolvedWorkspace extends IWorkspaceIdentifier {\n\tfolders: IWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IStoredWorkspace {\n\tfolders: IStoredWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IWorkspaceFolderCreationData {\n\turi: URI;\n\tname?: string;\n}\n\nexport interface IUntitledWorkspaceInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport interface IEnterWorkspaceResult {\n\tworkspace: IWorkspaceIdentifier;\n\tbackupPath?: string;\n}\n\nexport function isSingleFolderWorkspaceIdentifier(obj: unknown): obj is ISingleFolderWorkspaceIdentifier {\n\treturn obj instanceof URI;\n}\n\nexport function isWorkspaceIdentifier(obj: unknown): obj is IWorkspaceIdentifier {\n\tconst workspaceIdentifier = obj as IWorkspaceIdentifier;\n\n\treturn workspaceIdentifier && typeof workspaceIdentifier.id === 'string' && workspaceIdentifier.configPath instanceof URI;\n}\n\nexport function toWorkspaceIdentifier(workspace: IWorkspace): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined {\n\tif (workspace.configuration) {\n\t\treturn {\n\t\t\tconfigPath: workspace.configuration,\n\t\t\tid: workspace.id\n\t\t};\n\t}\n\tif (workspace.folders.length === 1) {\n\t\treturn workspace.folders[0].uri;\n\t}\n\n\t// Empty workspace\n\treturn undefined;\n}\n\nexport function isUntitledWorkspace(path: URI, environmentService: IEnvironmentService): boolean {\n\treturn isEqualOrParent(path, environmentService.untitledWorkspacesHome);\n}\n\nexport type IMultiFolderWorkspaceInitializationPayload = IWorkspaceIdentifier;\nexport interface ISingleFolderWorkspaceInitializationPayload { id: string; folder: ISingleFolderWorkspaceIdentifier; }\nexport interface IEmptyWorkspaceInitializationPayload { id: string; }\n\nexport type IWorkspaceInitializationPayload = IMultiFolderWorkspaceInitializationPayload | ISingleFolderWorkspaceInitializationPayload | IEmptyWorkspaceInitializationPayload;\n\nexport function isSingleFolderWorkspaceInitializationPayload(obj: any): obj is ISingleFolderWorkspaceInitializationPayload {\n\treturn isSingleFolderWorkspaceIdentifier((obj.folder as ISingleFolderWorkspaceIdentifier));\n}\n\nconst WORKSPACE_SUFFIX = '.' + WORKSPACE_EXTENSION;\n\nexport function hasWorkspaceFileExtension(path: string | URI) {\n\tconst ext = (typeof path === 'string') ? extname(path) : resourceExtname(path);\n\n\treturn ext === WORKSPACE_SUFFIX;\n}\n\nconst SLASH = '/';\n\n/**\n * Given a folder URI and the workspace config folder, computes the IStoredWorkspaceFolder using\n* a relative or absolute path or a uri.\n * Undefined is returned if the folderURI and the targetConfigFolderURI don't have the same schema or authority\n *\n * @param folderURI a workspace folder\n * @param forceAbsolute if set, keep the path absolute\n * @param folderName a workspace name\n * @param targetConfigFolderURI the folder where the workspace is living in\n * @param useSlashForPath if set, use forward slashes for file paths on windows\n */\nexport function getStoredWorkspaceFolder(folderURI: URI, forceAbsolute: boolean, folderName: string | undefined, targetConfigFolderURI: URI, useSlashForPath = !isWindows): IStoredWorkspaceFolder {\n\n\tif (folderURI.scheme !== targetConfigFolderURI.scheme) {\n\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t}\n\n\tlet folderPath = !forceAbsolute ? relativePath(targetConfigFolderURI, folderURI) : undefined;\n\tif (folderPath !== undefined) {\n\t\tif (folderPath.length === 0) {\n\t\t\tfolderPath = '.';\n\t\t} else if (isWindows && folderURI.scheme === Schemas.file && !useSlashForPath) {\n\t\t\t// Windows gets special treatment:\n\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\tfolderPath = folderPath.replace(/\\//g, '\\\\');\n\t\t}\n\t} else {\n\t\t// use absolute path\n\t\tif (folderURI.scheme === Schemas.file) {\n\t\t\tfolderPath = folderURI.fsPath;\n\t\t\tif (isWindows) {\n\t\t\t\t// Windows gets special treatment:\n\t\t\t\t// - normalize all paths to get nice casing of drive letters\n\t\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\t\tfolderPath = normalizeDriveLetter(folderPath);\n\t\t\t\tif (useSlashForPath) {\n\t\t\t\t\tfolderPath = toSlashes(folderPath);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isEqualAuthority(folderURI.authority, targetConfigFolderURI.authority)) {\n\t\t\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t\t\t}\n\t\t\tfolderPath = folderURI.path;\n\t\t}\n\t}\n\treturn { name: folderName, path: folderPath };\n}\n\n/**\n * Rewrites the content of a workspace file to be saved at a new location.\n * Throws an exception if file is not a valid workspace file\n */\nexport function rewriteWorkspaceFileForNewLocation(rawWorkspaceContents: string, configPathURI: URI, isFromUntitledWorkspace: boolean, targetConfigPathURI: URI) {\n\tlet storedWorkspace = doParseStoredWorkspace(configPathURI, rawWorkspaceContents);\n\n\tconst sourceConfigFolder = dirname(configPathURI);\n\tconst targetConfigFolder = dirname(targetConfigPathURI);\n\n\tconst rewrittenFolders: IStoredWorkspaceFolder[] = [];\n\tconst slashForPath = useSlashForPath(storedWorkspace.folders);\n\n\tfor (const folder of storedWorkspace.folders) {\n\t\tconst folderURI = isRawFileWorkspaceFolder(folder) ? resolvePath(sourceConfigFolder, folder.path) : URI.parse(folder.uri);\n\t\tlet absolute;\n\t\tif (isFromUntitledWorkspace) {\n\t\t\t// if it was an untitled workspace, try to make paths relative\n\t\t\tabsolute = false;\n\t\t} else {\n\t\t\t// for existing workspaces, preserve whether a path was absolute or relative\n\t\t\tabsolute = !isRawFileWorkspaceFolder(folder) || isAbsolute(folder.path);\n\t\t}\n\t\trewrittenFolders.push(getStoredWorkspaceFolder(folderURI, absolute, folder.name, targetConfigFolder, slashForPath));\n\t}\n\n\t// Preserve as much of the existing workspace as possible by using jsonEdit\n\t// and only changing the folders portion.\n\tconst formattingOptions: FormattingOptions = { insertSpaces: false, tabSize: 4, eol: (isLinux || isMacintosh) ? '\\n' : '\\r\\n' };\n\tconst edits = jsonEdit.setProperty(rawWorkspaceContents, ['folders'], rewrittenFolders, formattingOptions);\n\tlet newContent = jsonEdit.applyEdits(rawWorkspaceContents, edits);\n\n\tif (storedWorkspace.remoteAuthority === getRemoteAuthority(targetConfigPathURI)) {\n\t\t// unsaved remote workspaces have the remoteAuthority set. Remove it when no longer nexessary.\n\t\tnewContent = jsonEdit.applyEdits(newContent, jsonEdit.removeProperty(newContent, ['remoteAuthority'], formattingOptions));\n\t}\n\treturn newContent;\n}\n\nfunction doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t// Parse workspace file\n\tlet storedWorkspace: IStoredWorkspace = json.parse(contents); // use fault tolerant parser\n\n\t// Filter out folders which do not have a path or uri set\n\tif (storedWorkspace && Array.isArray(storedWorkspace.folders)) {\n\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t} else {\n\t\tthrow new Error(`${path} looks like an invalid workspace file.`);\n\t}\n\n\treturn storedWorkspace;\n}\n\nexport function useSlashForPath(storedFolders: IStoredWorkspaceFolder[]): boolean {\n\tif (isWindows) {\n\t\treturn storedFolders.some(folder => isRawFileWorkspaceFolder(folder) && folder.path.indexOf(SLASH) >= 0);\n\t}\n\treturn true;\n}\n\n//#region Workspace Storage\n\ninterface ISerializedRecentlyOpened {\n\tworkspaces3: Array<ISerializedWorkspace | string>; // workspace or URI.toString() // added in 1.32\n\tworkspaceLabels?: Array<string | null>; // added in 1.33\n\tfiles2: string[]; // files as URI.toString() // added in 1.32\n\tfileLabels?: Array<string | null>; // added in 1.33\n}\n\ninterface ILegacySerializedRecentlyOpened {\n\tworkspaces2: Array<ILegacySerializedWorkspace | string>; // legacy, configPath as file path\n\tworkspaces: Array<ILegacySerializedWorkspace | string | UriComponents>; // legacy (UriComponents was also supported for a few insider builds)\n\tfiles: string[]; // files as paths\n}\n\ninterface ISerializedWorkspace { id: string; configURIPath: string; }\ninterface ILegacySerializedWorkspace { id: string; configPath: string; }\n\nfunction isLegacySerializedWorkspace(curr: any): curr is ILegacySerializedWorkspace {\n\treturn typeof curr === 'object' && typeof curr['id'] === 'string' && typeof curr['configPath'] === 'string';\n}\n\nfunction isUriComponents(curr: any): curr is UriComponents {\n\treturn curr && typeof curr['path'] === 'string' && typeof curr['scheme'] === 'string';\n}\n\nexport type RecentlyOpenedStorageData = object;\n\nexport function restoreRecentlyOpened(data: RecentlyOpenedStorageData | undefined, logService: ILogService): IRecentlyOpened {\n\tconst result: IRecentlyOpened = { workspaces: [], files: [] };\n\tif (data) {\n\t\tconst restoreGracefully = function <T>(entries: T[], func: (entry: T, index: number) => void) {\n\t\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tfunc(entries[i], i);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogService.warn(`Error restoring recent entry ${JSON.stringify(entries[i])}: ${e.toString()}. Skip entry.`);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst storedRecents = data as ISerializedRecentlyOpened & ILegacySerializedRecentlyOpened;\n\t\tif (Array.isArray(storedRecents.workspaces3)) {\n\t\t\trestoreGracefully(storedRecents.workspaces3, (workspace, i) => {\n\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents.workspaceLabels) && storedRecents.workspaceLabels[i]) || undefined;\n\t\t\t\tif (typeof workspace === 'object' && typeof workspace.id === 'string' && typeof workspace.configURIPath === 'string') {\n\t\t\t\t\tresult.workspaces.push({ label, workspace: { id: workspace.id, configPath: URI.parse(workspace.configURIPath) } });\n\t\t\t\t} else if (typeof workspace === 'string') {\n\t\t\t\t\tresult.workspaces.push({ label, folderUri: URI.parse(workspace) });\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Array.isArray(storedRecents.workspaces2)) {\n\t\t\trestoreGracefully(storedRecents.workspaces2, workspace => {\n\t\t\t\tif (typeof workspace === 'object' && typeof workspace.id === 'string' && typeof workspace.configPath === 'string') {\n\t\t\t\t\tresult.workspaces.push({ workspace: { id: workspace.id, configPath: URI.file(workspace.configPath) } });\n\t\t\t\t} else if (typeof workspace === 'string') {\n\t\t\t\t\tresult.workspaces.push({ folderUri: URI.parse(workspace) });\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Array.isArray(storedRecents.workspaces)) {\n\t\t\t// TODO@martin legacy support can be removed at some point (6 month?)\n\t\t\t// format of 1.25 and before\n\t\t\trestoreGracefully(storedRecents.workspaces, workspace => {\n\t\t\t\tif (typeof workspace === 'string') {\n\t\t\t\t\tresult.workspaces.push({ folderUri: URI.file(workspace) });\n\t\t\t\t} else if (isLegacySerializedWorkspace(workspace)) {\n\t\t\t\t\tresult.workspaces.push({ workspace: { id: workspace.id, configPath: URI.file(workspace.configPath) } });\n\t\t\t\t} else if (isUriComponents(workspace)) {\n\t\t\t\t\t// added by 1.26-insiders\n\t\t\t\t\tresult.workspaces.push({ folderUri: URI.revive(<UriComponents>workspace) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (Array.isArray(storedRecents.files2)) {\n\t\t\trestoreGracefully(storedRecents.files2, (file, i) => {\n\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents.fileLabels) && storedRecents.fileLabels[i]) || undefined;\n\t\t\t\tif (typeof file === 'string') {\n\t\t\t\t\tresult.files.push({ label, fileUri: URI.parse(file) });\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Array.isArray(storedRecents.files)) {\n\t\t\trestoreGracefully(storedRecents.files, file => {\n\t\t\t\tif (typeof file === 'string') {\n\t\t\t\t\tresult.files.push({ fileUri: URI.file(file) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function toStoreData(recents: IRecentlyOpened): RecentlyOpenedStorageData {\n\tconst serialized: ISerializedRecentlyOpened = { workspaces3: [], files2: [] };\n\n\tlet hasLabel = false;\n\tconst workspaceLabels: (string | null)[] = [];\n\tfor (const recent of recents.workspaces) {\n\t\tif (isRecentFolder(recent)) {\n\t\t\tserialized.workspaces3.push(recent.folderUri.toString());\n\t\t} else {\n\t\t\tserialized.workspaces3.push({ id: recent.workspace.id, configURIPath: recent.workspace.configPath.toString() });\n\t\t}\n\t\tworkspaceLabels.push(recent.label || null);\n\t\thasLabel = hasLabel || !!recent.label;\n\t}\n\tif (hasLabel) {\n\t\tserialized.workspaceLabels = workspaceLabels;\n\t}\n\n\thasLabel = false;\n\tconst fileLabels: (string | null)[] = [];\n\tfor (const recent of recents.files) {\n\t\tserialized.files2.push(recent.fileUri.toString());\n\t\tfileLabels.push(recent.label || null);\n\t\thasLabel = hasLabel || !!recent.label;\n\t}\n\tif (hasLabel) {\n\t\tserialized.fileLabels = fileLabels;\n\t}\n\n\treturn serialized;\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceIdentifier, IStoredWorkspaceFolder, isRawFileWorkspaceFolder, isRawUriWorkspaceFolder, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspaceFolderProvider } from 'vs/base/common/labels';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService extends IWorkspaceFolderProvider {\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event which fires on workbench state changes.\n\t */\n\treadonly onDidChangeWorkbenchState: Event<WorkbenchState>;\n\n\t/**\n\t * An event which fires on workspace name changes.\n\t */\n\treadonly onDidChangeWorkspaceName: Event<void>;\n\n\t/**\n\t * An event which fires on workspace folders change.\n\t */\n\treadonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;\n\n\t/**\n\t * Provides access to the complete workspace object.\n\t */\n\tgetCompleteWorkspace(): Promise<IWorkspace>;\n\n\t/**\n\t * Provides access to the workspace object the window is running with.\n\t * Use `getCompleteWorkspace` to get complete workspace object.\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Return the state of the workbench.\n\t *\n\t * WorkbenchState.EMPTY - if the workbench was opened with empty window or file\n\t * WorkbenchState.FOLDER - if the workbench was opened with a folder\n\t * WorkbenchState.WORKSPACE - if the workbench was opened with a workspace\n\t */\n\tgetWorkbenchState(): WorkbenchState;\n\n\t/**\n\t * Returns the folder for the given resource from the workspace.\n\t * Can be null if there is no workspace or the resource is not inside the workspace.\n\t */\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null;\n\n\t/**\n\t * Return `true` if the current workspace has the given identifier otherwise `false`.\n\t */\n\tisCurrentWorkspace(workspaceIdentifier: ISingleFolderWorkspaceIdentifier | IWorkspaceIdentifier): boolean;\n\n\t/**\n\t * Returns if the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n}\n\nexport const enum WorkbenchState {\n\tEMPTY = 1,\n\tFOLDER,\n\tWORKSPACE\n}\n\nexport interface IWorkspaceFoldersChangeEvent {\n\tadded: IWorkspaceFolder[];\n\tremoved: IWorkspaceFolder[];\n\tchanged: IWorkspaceFolder[];\n}\n\nexport namespace IWorkspace {\n\texport function isIWorkspace(thing: unknown): thing is IWorkspace {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& typeof (thing as IWorkspace).id === 'string'\n\t\t\t&& Array.isArray((thing as IWorkspace).folders);\n\t}\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the unique identifier of the workspace.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Folders in the workspace.\n\t */\n\treadonly folders: IWorkspaceFolder[];\n\n\t/**\n\t * the location of the workspace configuration\n\t */\n\treadonly configuration?: URI | null;\n}\n\nexport interface IWorkspaceFolderData {\n\n\t/**\n\t * The associated URI for this workspace folder.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * The name of this workspace folder. Defaults to\n\t * the basename of its [uri-path](#Uri.path)\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The ordinal number of this workspace folder.\n\t */\n\treadonly index: number;\n}\n\nexport namespace IWorkspaceFolder {\n\texport function isIWorkspaceFolder(thing: unknown): thing is IWorkspaceFolder {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& URI.isUri((thing as IWorkspaceFolder).uri)\n\t\t\t&& typeof (thing as IWorkspaceFolder).name === 'string'\n\t\t\t&& typeof (thing as IWorkspaceFolder).toResource === 'function';\n\t}\n}\n\nexport interface IWorkspaceFolder extends IWorkspaceFolderData {\n\n\t/**\n\t * Given workspace folder relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (relativePath: string) => URI;\n}\n\nexport class Workspace implements IWorkspace {\n\n\tprivate _foldersMap: TernarySearchTree<URI, WorkspaceFolder> = TernarySearchTree.forUris<WorkspaceFolder>();\n\tprivate _folders!: WorkspaceFolder[];\n\n\tconstructor(\n\t\tprivate _id: string,\n\t\tfolders: WorkspaceFolder[] = [],\n\t\tprivate _configuration: URI | null = null\n\t) {\n\t\tthis.folders = folders;\n\t}\n\n\tupdate(workspace: Workspace) {\n\t\tthis._id = workspace.id;\n\t\tthis._configuration = workspace.configuration;\n\t\tthis.folders = workspace.folders;\n\t}\n\n\tget folders(): WorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tset folders(folders: WorkspaceFolder[]) {\n\t\tthis._folders = folders;\n\t\tthis.updateFoldersMap();\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget configuration(): URI | null {\n\t\treturn this._configuration;\n\t}\n\n\tset configuration(configuration: URI | null) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetFolder(resource: URI): IWorkspaceFolder | null {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._foldersMap.findSubstr(resource.with({\n\t\t\tscheme: resource.scheme,\n\t\t\tauthority: resource.authority,\n\t\t\tpath: resource.path\n\t\t})) || null;\n\t}\n\n\tprivate updateFoldersMap(): void {\n\t\tthis._foldersMap = TernarySearchTree.forUris<WorkspaceFolder>();\n\t\tfor (const folder of this.folders) {\n\t\t\tthis._foldersMap.set(folder.uri, folder);\n\t\t}\n\t}\n\n\ttoJSON(): IWorkspace {\n\t\treturn { id: this.id, folders: this.folders, configuration: this.configuration };\n\t}\n}\n\nexport class WorkspaceFolder implements IWorkspaceFolder {\n\n\treadonly uri: URI;\n\tname: string;\n\tindex: number;\n\n\tconstructor(data: IWorkspaceFolderData,\n\t\treadonly raw?: IStoredWorkspaceFolder) {\n\t\tthis.uri = data.uri;\n\t\tthis.index = data.index;\n\t\tthis.name = data.name;\n\t}\n\n\ttoResource(relativePath: string): URI {\n\t\treturn resources.joinPath(this.uri, relativePath);\n\t}\n\n\ttoJSON(): IWorkspaceFolderData {\n\t\treturn { uri: this.uri, name: this.name, index: this.index };\n\t}\n}\n\nexport function toWorkspaceFolder(resource: URI): WorkspaceFolder {\n\treturn new WorkspaceFolder({ uri: resource, index: 0, name: resources.basenameOrAuthority(resource) }, { uri: resource.toString() });\n}\n\nexport function toWorkspaceFolders(configuredFolders: IStoredWorkspaceFolder[], workspaceConfigFile: URI): WorkspaceFolder[] {\n\tlet result: WorkspaceFolder[] = [];\n\tlet seen: Set<string> = new Set();\n\n\tconst relativeTo = resources.dirname(workspaceConfigFile);\n\tfor (let configuredFolder of configuredFolders) {\n\t\tlet uri: URI | null = null;\n\t\tif (isRawFileWorkspaceFolder(configuredFolder)) {\n\t\t\tif (configuredFolder.path) {\n\t\t\t\turi = resources.resolvePath(relativeTo, configuredFolder.path);\n\t\t\t}\n\t\t} else if (isRawUriWorkspaceFolder(configuredFolder)) {\n\t\t\ttry {\n\t\t\t\turi = URI.parse(configuredFolder.uri);\n\t\t\t\t// this makes sure all workspace folder are absolute\n\t\t\t\tif (uri.path[0] !== '/') {\n\t\t\t\t\turi = uri.with({ path: '/' + uri.path });\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(e);\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\tif (uri) {\n\t\t\t// remove duplicates\n\t\t\tlet comparisonKey = resources.getComparisonKey(uri);\n\t\t\tif (!seen.has(comparisonKey)) {\n\t\t\t\tseen.add(comparisonKey);\n\n\t\t\t\tconst name = configuredFolder.name || resources.basenameOrAuthority(uri);\n\t\t\t\tresult.push(new WorkspaceFolder({ uri, name, index: result.length }, configuredFolder));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n","import { Client } from '@coder/node-browser';\nimport { fromTar } from '@coder/requirefs';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionActivationTimesBuilder } from 'vs/workbench/api/common/extHostExtensionActivator';\nimport { IExtHostNodeProxy } from './extHostNodeProxy';\n\nexport const loadCommonJSModule = async <T>(\n\tmodule: IExtensionDescription,\n\tactivationTimesBuilder: ExtensionActivationTimesBuilder,\n\tnodeProxy: IExtHostNodeProxy,\n\tlogService: ILogService,\n\tvscode: any,\n): Promise<T> => {\n\tconst fetchUri = URI.from({\n\t\tscheme: self.location.protocol.replace(':', ''),\n\t\tauthority: self.location.host,\n\t\tpath: self.location.pathname.replace(/\\/static\\/([^\\/]+)\\/.*$/, '/static/$1\\/'),\n\t\tquery: `tar=${encodeURIComponent(module.extensionLocation.fsPath)}`,\n\t});\n\tconst response = await fetch(fetchUri.toString(true));\n\tif (response.status !== 200) {\n\t\tthrow new Error(`Failed to download extension \"${module.extensionLocation.path}\"`);\n\t}\n\tconst client = new Client(nodeProxy, { logger: logService });\n\tconst init = await client.handshake();\n\tconst buffer = new Uint8Array(await response.arrayBuffer());\n\tconst rfs = fromTar(buffer);\n\t(<any>self).global = self;\n\trfs.provide('vscode', vscode);\n\tObject.keys(client.modules).forEach((key) => {\n\t\tconst mod = (client.modules as any)[key];\n\t\tif (key === 'process') {\n\t\t\t(<any>self).process = mod;\n\t\t\t(<any>self).process.env = init.env;\n\t\t\treturn;\n\t\t}\n\n\t\trfs.provide(key, mod);\n\t\tswitch (key) {\n\t\t\tcase 'buffer':\n\t\t\t\t(<any>self).Buffer = mod.Buffer;\n\t\t\t\tbreak;\n\t\t\tcase 'timers':\n\t\t\t\t(<any>self).setImmediate = mod.setImmediate;\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\ttry {\n\t\tactivationTimesBuilder.codeLoadingStart();\n\t\treturn rfs.require('.');\n\t} finally {\n\t\tactivationTimesBuilder.codeLoadingStop();\n\t}\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Cache<T> {\n\n\tprivate static readonly enableDebugLogging = false;\n\n\tprivate readonly _data = new Map<number, readonly T[]>();\n\tprivate _idPool = 1;\n\n\tconstructor(\n\t\tprivate readonly id: string\n\t) { }\n\n\tadd(item: readonly T[]): number {\n\t\tconst id = this._idPool++;\n\t\tthis._data.set(id, item);\n\t\tthis.logDebugInfo();\n\t\treturn id;\n\t}\n\n\tget(pid: number, id: number): T | undefined {\n\t\treturn this._data.has(pid) ? this._data.get(pid)![id] : undefined;\n\t}\n\n\tdelete(id: number) {\n\t\tthis._data.delete(id);\n\t\tthis.logDebugInfo();\n\t}\n\n\tprivate logDebugInfo() {\n\t\tif (!Cache.enableDebugLogging) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(`${this.id} cache size — ${this._data.size}`);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInitData } from './extHost.protocol';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IExtHostInitDataService = createDecorator<IExtHostInitDataService>('IExtHostInitDataService');\n\nexport interface IExtHostInitDataService extends Readonly<IInitData> {\n\t_serviceBrand: undefined;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ExtHostStorage } from 'vs/workbench/api/common/extHostStorage';\n\nexport class ExtensionMemento implements vscode.Memento {\n\n\tprivate readonly _id: string;\n\tprivate readonly _shared: boolean;\n\tprivate readonly _storage: ExtHostStorage;\n\n\tprivate readonly _init: Promise<ExtensionMemento>;\n\tprivate _value?: { [n: string]: any; };\n\tprivate readonly _storageListener: IDisposable;\n\n\tconstructor(id: string, global: boolean, storage: ExtHostStorage) {\n\t\tthis._id = id;\n\t\tthis._shared = global;\n\t\tthis._storage = storage;\n\n\t\tthis._init = this._storage.getValue(this._shared, this._id, Object.create(null)).then(value => {\n\t\t\tthis._value = value;\n\t\t\treturn this;\n\t\t});\n\n\t\tthis._storageListener = this._storage.onDidChangeStorage(e => {\n\t\t\tif (e.shared === this._shared && e.key === this._id) {\n\t\t\t\tthis._value = e.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tget whenReady(): Promise<ExtensionMemento> {\n\t\treturn this._init;\n\t}\n\n\tget<T>(key: string): T | undefined;\n\tget<T>(key: string, defaultValue: T): T;\n\tget<T>(key: string, defaultValue?: T): T {\n\t\tlet value = this._value![key];\n\t\tif (typeof value === 'undefined') {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\treturn value;\n\t}\n\n\tupdate(key: string, value: any): Promise<void> {\n\t\tthis._value![key] = value;\n\t\treturn this._storage.setValue(this._shared, this._id, this._value!);\n\t}\n\n\tdispose(): void {\n\t\tthis._storageListener.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyIdentifier, IRPCProtocol } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IExtHostRpcService = createDecorator<IExtHostRpcService>('IExtHostRpcService');\n\nexport interface IExtHostRpcService extends IRPCProtocol {\n\t_serviceBrand: undefined;\n}\n\nexport class ExtHostRpcService implements IExtHostRpcService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly getProxy: <T>(identifier: ProxyIdentifier<T>) => T;\n\treadonly set: <T, R extends T> (identifier: ProxyIdentifier<T>, instance: R) => R;\n\treadonly assertRegistered: (identifiers: ProxyIdentifier<any>[]) => void;\n\n\tconstructor(rpcProtocol: IRPCProtocol) {\n\t\tthis.getProxy = rpcProtocol.getProxy.bind(rpcProtocol);\n\t\tthis.set = rpcProtocol.set.bind(rpcProtocol);\n\t\tthis.assertRegistered = rpcProtocol.assertRegistered.bind(rpcProtocol);\n\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IExtensionStoragePaths = createDecorator<IExtensionStoragePaths>('IExtensionStoragePaths');\n\nexport interface IExtensionStoragePaths {\n\t_serviceBrand: undefined;\n\twhenReady: Promise<any>;\n\tworkspaceValue(extension: IExtensionDescription): string | undefined;\n\tglobalValue(extension: IExtensionDescription): string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce, equals } from 'vs/base/common/arrays';\nimport { escapeCodicons } from 'vs/base/common/codicons';\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { IRelativePattern } from 'vs/base/common/glob';\nimport { isMarkdownString } from 'vs/base/common/htmlContent';\nimport { startsWith } from 'vs/base/common/strings';\nimport { isStringArray } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { FileSystemProviderErrorCode, markAsFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { RemoteAuthorityResolverErrorCode } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport type * as vscode from 'vscode';\n\nfunction es5ClassCompat(target: Function): any {\n\t///@ts-expect-error\n\tfunction _() { return Reflect.construct(target, arguments, this.constructor); }\n\tObject.defineProperty(_, 'name', Object.getOwnPropertyDescriptor(target, 'name')!);\n\tObject.setPrototypeOf(_, target);\n\tObject.setPrototypeOf(_.prototype, target.prototype);\n\treturn _;\n}\n\n@es5ClassCompat\nexport class Disposable {\n\n\tstatic from(...inDisposables: { dispose(): any; }[]): Disposable {\n\t\tlet disposables: ReadonlyArray<{ dispose(): any; }> | undefined = inDisposables;\n\t\treturn new Disposable(function () {\n\t\t\tif (disposables) {\n\t\t\t\tfor (const disposable of disposables) {\n\t\t\t\t\tif (disposable && typeof disposable.dispose === 'function') {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdisposables = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\t#callOnDispose?: () => any;\n\n\tconstructor(callOnDispose: () => any) {\n\t\tthis.#callOnDispose = callOnDispose;\n\t}\n\n\tdispose(): any {\n\t\tif (typeof this.#callOnDispose === 'function') {\n\t\t\tthis.#callOnDispose();\n\t\t\tthis.#callOnDispose = undefined;\n\t\t}\n\t}\n}\n\n@es5ClassCompat\nexport class Position {\n\n\tstatic Min(...positions: Position[]): Position {\n\t\tif (positions.length === 0) {\n\t\t\tthrow new TypeError();\n\t\t}\n\t\tlet result = positions[0];\n\t\tfor (let i = 1; i < positions.length; i++) {\n\t\t\tconst p = positions[i];\n\t\t\tif (p.isBefore(result!)) {\n\t\t\t\tresult = p;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic Max(...positions: Position[]): Position {\n\t\tif (positions.length === 0) {\n\t\t\tthrow new TypeError();\n\t\t}\n\t\tlet result = positions[0];\n\t\tfor (let i = 1; i < positions.length; i++) {\n\t\t\tconst p = positions[i];\n\t\t\tif (p.isAfter(result!)) {\n\t\t\t\tresult = p;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic isPosition(other: any): other is Position {\n\t\tif (!other) {\n\t\t\treturn false;\n\t\t}\n\t\tif (other instanceof Position) {\n\t\t\treturn true;\n\t\t}\n\t\tlet { line, character } = <Position>other;\n\t\tif (typeof line === 'number' && typeof character === 'number') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _line: number;\n\tprivate _character: number;\n\n\tget line(): number {\n\t\treturn this._line;\n\t}\n\n\tget character(): number {\n\t\treturn this._character;\n\t}\n\n\tconstructor(line: number, character: number) {\n\t\tif (line < 0) {\n\t\t\tthrow illegalArgument('line must be non-negative');\n\t\t}\n\t\tif (character < 0) {\n\t\t\tthrow illegalArgument('character must be non-negative');\n\t\t}\n\t\tthis._line = line;\n\t\tthis._character = character;\n\t}\n\n\tisBefore(other: Position): boolean {\n\t\tif (this._line < other._line) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other._line < this._line) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._character < other._character;\n\t}\n\n\tisBeforeOrEqual(other: Position): boolean {\n\t\tif (this._line < other._line) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other._line < this._line) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._character <= other._character;\n\t}\n\n\tisAfter(other: Position): boolean {\n\t\treturn !this.isBeforeOrEqual(other);\n\t}\n\n\tisAfterOrEqual(other: Position): boolean {\n\t\treturn !this.isBefore(other);\n\t}\n\n\tisEqual(other: Position): boolean {\n\t\treturn this._line === other._line && this._character === other._character;\n\t}\n\n\tcompareTo(other: Position): number {\n\t\tif (this._line < other._line) {\n\t\t\treturn -1;\n\t\t} else if (this._line > other.line) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t// equal line\n\t\t\tif (this._character < other._character) {\n\t\t\t\treturn -1;\n\t\t\t} else if (this._character > other._character) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t// equal line and character\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\ttranslate(change: { lineDelta?: number; characterDelta?: number; }): Position;\n\ttranslate(lineDelta?: number, characterDelta?: number): Position;\n\ttranslate(lineDeltaOrChange: number | undefined | { lineDelta?: number; characterDelta?: number; }, characterDelta: number = 0): Position {\n\n\t\tif (lineDeltaOrChange === null || characterDelta === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet lineDelta: number;\n\t\tif (typeof lineDeltaOrChange === 'undefined') {\n\t\t\tlineDelta = 0;\n\t\t} else if (typeof lineDeltaOrChange === 'number') {\n\t\t\tlineDelta = lineDeltaOrChange;\n\t\t} else {\n\t\t\tlineDelta = typeof lineDeltaOrChange.lineDelta === 'number' ? lineDeltaOrChange.lineDelta : 0;\n\t\t\tcharacterDelta = typeof lineDeltaOrChange.characterDelta === 'number' ? lineDeltaOrChange.characterDelta : 0;\n\t\t}\n\n\t\tif (lineDelta === 0 && characterDelta === 0) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Position(this.line + lineDelta, this.character + characterDelta);\n\t}\n\n\twith(change: { line?: number; character?: number; }): Position;\n\twith(line?: number, character?: number): Position;\n\twith(lineOrChange: number | undefined | { line?: number; character?: number; }, character: number = this.character): Position {\n\n\t\tif (lineOrChange === null || character === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet line: number;\n\t\tif (typeof lineOrChange === 'undefined') {\n\t\t\tline = this.line;\n\n\t\t} else if (typeof lineOrChange === 'number') {\n\t\t\tline = lineOrChange;\n\n\t\t} else {\n\t\t\tline = typeof lineOrChange.line === 'number' ? lineOrChange.line : this.line;\n\t\t\tcharacter = typeof lineOrChange.character === 'number' ? lineOrChange.character : this.character;\n\t\t}\n\n\t\tif (line === this.line && character === this.character) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Position(line, character);\n\t}\n\n\ttoJSON(): any {\n\t\treturn { line: this.line, character: this.character };\n\t}\n}\n\n@es5ClassCompat\nexport class Range {\n\n\tstatic isRange(thing: any): thing is vscode.Range {\n\t\tif (thing instanceof Range) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Position.isPosition((<Range>thing).start)\n\t\t\t&& Position.isPosition((<Range>thing.end));\n\t}\n\n\tprotected _start: Position;\n\tprotected _end: Position;\n\n\tget start(): Position {\n\t\treturn this._start;\n\t}\n\n\tget end(): Position {\n\t\treturn this._end;\n\t}\n\n\tconstructor(start: Position, end: Position);\n\tconstructor(startLine: number, startColumn: number, endLine: number, endColumn: number);\n\tconstructor(startLineOrStart: number | Position, startColumnOrEnd: number | Position, endLine?: number, endColumn?: number) {\n\t\tlet start: Position | undefined;\n\t\tlet end: Position | undefined;\n\n\t\tif (typeof startLineOrStart === 'number' && typeof startColumnOrEnd === 'number' && typeof endLine === 'number' && typeof endColumn === 'number') {\n\t\t\tstart = new Position(startLineOrStart, startColumnOrEnd);\n\t\t\tend = new Position(endLine, endColumn);\n\t\t} else if (startLineOrStart instanceof Position && startColumnOrEnd instanceof Position) {\n\t\t\tstart = startLineOrStart;\n\t\t\tend = startColumnOrEnd;\n\t\t}\n\n\t\tif (!start || !end) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tif (start.isBefore(end)) {\n\t\t\tthis._start = start;\n\t\t\tthis._end = end;\n\t\t} else {\n\t\t\tthis._start = end;\n\t\t\tthis._end = start;\n\t\t}\n\t}\n\n\tcontains(positionOrRange: Position | Range): boolean {\n\t\tif (positionOrRange instanceof Range) {\n\t\t\treturn this.contains(positionOrRange._start)\n\t\t\t\t&& this.contains(positionOrRange._end);\n\n\t\t} else if (positionOrRange instanceof Position) {\n\t\t\tif (positionOrRange.isBefore(this._start)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._end.isBefore(positionOrRange)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisEqual(other: Range): boolean {\n\t\treturn this._start.isEqual(other._start) && this._end.isEqual(other._end);\n\t}\n\n\tintersection(other: Range): Range | undefined {\n\t\tconst start = Position.Max(other.start, this._start);\n\t\tconst end = Position.Min(other.end, this._end);\n\t\tif (start.isAfter(end)) {\n\t\t\t// this happens when there is no overlap:\n\t\t\t// |-----|\n\t\t\t//          |----|\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n\n\tunion(other: Range): Range {\n\t\tif (this.contains(other)) {\n\t\t\treturn this;\n\t\t} else if (other.contains(this)) {\n\t\t\treturn other;\n\t\t}\n\t\tconst start = Position.Min(other.start, this._start);\n\t\tconst end = Position.Max(other.end, this.end);\n\t\treturn new Range(start, end);\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this._start.isEqual(this._end);\n\t}\n\n\tget isSingleLine(): boolean {\n\t\treturn this._start.line === this._end.line;\n\t}\n\n\twith(change: { start?: Position, end?: Position; }): Range;\n\twith(start?: Position, end?: Position): Range;\n\twith(startOrChange: Position | undefined | { start?: Position, end?: Position; }, end: Position = this.end): Range {\n\n\t\tif (startOrChange === null || end === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet start: Position;\n\t\tif (!startOrChange) {\n\t\t\tstart = this.start;\n\n\t\t} else if (Position.isPosition(startOrChange)) {\n\t\t\tstart = startOrChange;\n\n\t\t} else {\n\t\t\tstart = startOrChange.start || this.start;\n\t\t\tend = startOrChange.end || this.end;\n\t\t}\n\n\t\tif (start.isEqual(this._start) && end.isEqual(this.end)) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n\n\ttoJSON(): any {\n\t\treturn [this.start, this.end];\n\t}\n}\n\n@es5ClassCompat\nexport class Selection extends Range {\n\n\tstatic isSelection(thing: any): thing is Selection {\n\t\tif (thing instanceof Selection) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange(thing)\n\t\t\t&& Position.isPosition((<Selection>thing).anchor)\n\t\t\t&& Position.isPosition((<Selection>thing).active)\n\t\t\t&& typeof (<Selection>thing).isReversed === 'boolean';\n\t}\n\n\tprivate _anchor: Position;\n\n\tpublic get anchor(): Position {\n\t\treturn this._anchor;\n\t}\n\n\tprivate _active: Position;\n\n\tpublic get active(): Position {\n\t\treturn this._active;\n\t}\n\n\tconstructor(anchor: Position, active: Position);\n\tconstructor(anchorLine: number, anchorColumn: number, activeLine: number, activeColumn: number);\n\tconstructor(anchorLineOrAnchor: number | Position, anchorColumnOrActive: number | Position, activeLine?: number, activeColumn?: number) {\n\t\tlet anchor: Position | undefined;\n\t\tlet active: Position | undefined;\n\n\t\tif (typeof anchorLineOrAnchor === 'number' && typeof anchorColumnOrActive === 'number' && typeof activeLine === 'number' && typeof activeColumn === 'number') {\n\t\t\tanchor = new Position(anchorLineOrAnchor, anchorColumnOrActive);\n\t\t\tactive = new Position(activeLine, activeColumn);\n\t\t} else if (anchorLineOrAnchor instanceof Position && anchorColumnOrActive instanceof Position) {\n\t\t\tanchor = anchorLineOrAnchor;\n\t\t\tactive = anchorColumnOrActive;\n\t\t}\n\n\t\tif (!anchor || !active) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tsuper(anchor, active);\n\n\t\tthis._anchor = anchor;\n\t\tthis._active = active;\n\t}\n\n\tget isReversed(): boolean {\n\t\treturn this._anchor === this._end;\n\t}\n\n\ttoJSON() {\n\t\treturn {\n\t\t\tstart: this.start,\n\t\t\tend: this.end,\n\t\t\tactive: this.active,\n\t\t\tanchor: this.anchor\n\t\t};\n\t}\n}\n\nexport class ResolvedAuthority {\n\treadonly host: string;\n\treadonly port: number;\n\n\tconstructor(host: string, port: number) {\n\t\tif (typeof host !== 'string' || host.length === 0) {\n\t\t\tthrow illegalArgument('host');\n\t\t}\n\t\tif (typeof port !== 'number' || port === 0 || Math.round(port) !== port) {\n\t\t\tthrow illegalArgument('port');\n\t\t}\n\t\tthis.host = host;\n\t\tthis.port = Math.round(port);\n\t}\n}\n\nexport class RemoteAuthorityResolverError extends Error {\n\n\tstatic NotAvailable(message?: string, handled?: boolean): RemoteAuthorityResolverError {\n\t\treturn new RemoteAuthorityResolverError(message, RemoteAuthorityResolverErrorCode.NotAvailable, handled);\n\t}\n\n\tstatic TemporarilyNotAvailable(message?: string): RemoteAuthorityResolverError {\n\t\treturn new RemoteAuthorityResolverError(message, RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable);\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport enum EndOfLine {\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport enum EnvironmentVariableMutatorType {\n\tReplace = 1,\n\tAppend = 2,\n\tPrepend = 3\n}\n\n@es5ClassCompat\nexport class TextEdit {\n\n\tstatic isTextEdit(thing: any): thing is TextEdit {\n\t\tif (thing instanceof TextEdit) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange((<TextEdit>thing))\n\t\t\t&& typeof (<TextEdit>thing).newText === 'string';\n\t}\n\n\tstatic replace(range: Range, newText: string): TextEdit {\n\t\treturn new TextEdit(range, newText);\n\t}\n\n\tstatic insert(position: Position, newText: string): TextEdit {\n\t\treturn TextEdit.replace(new Range(position, position), newText);\n\t}\n\n\tstatic delete(range: Range): TextEdit {\n\t\treturn TextEdit.replace(range, '');\n\t}\n\n\tstatic setEndOfLine(eol: EndOfLine): TextEdit {\n\t\tconst ret = new TextEdit(new Range(new Position(0, 0), new Position(0, 0)), '');\n\t\tret.newEol = eol;\n\t\treturn ret;\n\t}\n\n\tprotected _range: Range;\n\tprotected _newText: string | null;\n\tprotected _newEol?: EndOfLine;\n\n\tget range(): Range {\n\t\treturn this._range;\n\t}\n\n\tset range(value: Range) {\n\t\tif (value && !Range.isRange(value)) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis._range = value;\n\t}\n\n\tget newText(): string {\n\t\treturn this._newText || '';\n\t}\n\n\tset newText(value: string) {\n\t\tif (value && typeof value !== 'string') {\n\t\t\tthrow illegalArgument('newText');\n\t\t}\n\t\tthis._newText = value;\n\t}\n\n\tget newEol(): EndOfLine | undefined {\n\t\treturn this._newEol;\n\t}\n\n\tset newEol(value: EndOfLine | undefined) {\n\t\tif (value && typeof value !== 'number') {\n\t\t\tthrow illegalArgument('newEol');\n\t\t}\n\t\tthis._newEol = value;\n\t}\n\n\tconstructor(range: Range, newText: string | null) {\n\t\tthis._range = range;\n\t\tthis._newText = newText;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\trange: this.range,\n\t\t\tnewText: this.newText,\n\t\t\tnewEol: this._newEol\n\t\t};\n\t}\n}\n\nexport interface IFileOperationOptions {\n\toverwrite?: boolean;\n\tignoreIfExists?: boolean;\n\tignoreIfNotExists?: boolean;\n\trecursive?: boolean;\n}\n\nexport interface IFileOperation {\n\t_type: 1;\n\tfrom?: URI;\n\tto?: URI;\n\toptions?: IFileOperationOptions;\n\tmetadata?: vscode.WorkspaceEditEntryMetadata;\n}\n\nexport interface IFileTextEdit {\n\t_type: 2;\n\turi: URI;\n\tedit: TextEdit;\n\tmetadata?: vscode.WorkspaceEditEntryMetadata;\n}\n\n@es5ClassCompat\nexport class WorkspaceEdit implements vscode.WorkspaceEdit {\n\n\tprivate _edits = new Array<IFileOperation | IFileTextEdit>();\n\n\trenameFile(from: vscode.Uri, to: vscode.Uri, options?: { overwrite?: boolean, ignoreIfExists?: boolean; }, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: 1, from, to, options, metadata });\n\t}\n\n\tcreateFile(uri: vscode.Uri, options?: { overwrite?: boolean, ignoreIfExists?: boolean; }, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: 1, from: undefined, to: uri, options, metadata });\n\t}\n\n\tdeleteFile(uri: vscode.Uri, options?: { recursive?: boolean, ignoreIfNotExists?: boolean; }, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: 1, from: uri, to: undefined, options, metadata });\n\t}\n\n\treplace(uri: URI, range: Range, newText: string, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis._edits.push({ _type: 2, uri, edit: new TextEdit(range, newText), metadata });\n\t}\n\n\tinsert(resource: URI, position: Position, newText: string, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis.replace(resource, new Range(position, position), newText, metadata);\n\t}\n\n\tdelete(resource: URI, range: Range, metadata?: vscode.WorkspaceEditEntryMetadata): void {\n\t\tthis.replace(resource, range, '', metadata);\n\t}\n\n\thas(uri: URI): boolean {\n\t\treturn this._edits.some(edit => edit._type === 2 && edit.uri.toString() === uri.toString());\n\t}\n\n\tset(uri: URI, edits: TextEdit[]): void {\n\t\tif (!edits) {\n\t\t\t// remove all text edits for `uri`\n\t\t\tfor (let i = 0; i < this._edits.length; i++) {\n\t\t\t\tconst element = this._edits[i];\n\t\t\t\tif (element._type === 2 && element.uri.toString() === uri.toString()) {\n\t\t\t\t\tthis._edits[i] = undefined!; // will be coalesced down below\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._edits = coalesce(this._edits);\n\t\t} else {\n\t\t\t// append edit to the end\n\t\t\tfor (const edit of edits) {\n\t\t\t\tif (edit) {\n\t\t\t\t\tthis._edits.push({ _type: 2, uri, edit });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget(uri: URI): TextEdit[] {\n\t\tconst res: TextEdit[] = [];\n\t\tfor (let candidate of this._edits) {\n\t\t\tif (candidate._type === 2 && candidate.uri.toString() === uri.toString()) {\n\t\t\t\tres.push(candidate.edit);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tentries(): [URI, TextEdit[]][] {\n\t\tconst textEdits = new Map<string, [URI, TextEdit[]]>();\n\t\tfor (let candidate of this._edits) {\n\t\t\tif (candidate._type === 2) {\n\t\t\t\tlet textEdit = textEdits.get(candidate.uri.toString());\n\t\t\t\tif (!textEdit) {\n\t\t\t\t\ttextEdit = [candidate.uri, []];\n\t\t\t\t\ttextEdits.set(candidate.uri.toString(), textEdit);\n\t\t\t\t}\n\t\t\t\ttextEdit[1].push(candidate.edit);\n\t\t\t}\n\t\t}\n\t\treturn [...textEdits.values()];\n\t}\n\n\tallEntries(): ReadonlyArray<IFileTextEdit | IFileOperation> {\n\t\treturn this._edits;\n\t}\n\n\t// _allEntries(): ([URI, TextEdit] | [URI?, URI?, IFileOperationOptions?])[] {\n\t// \tconst res: ([URI, TextEdit] | [URI?, URI?, IFileOperationOptions?])[] = [];\n\t// \tfor (let edit of this._edits) {\n\t// \t\tif (edit._type === 1) {\n\t// \t\t\tres.push([edit.from, edit.to, edit.options]);\n\t// \t\t} else {\n\t// \t\t\tres.push([edit.uri, edit.edit]);\n\t// \t\t}\n\t// \t}\n\t// \treturn res;\n\t// }\n\n\tget size(): number {\n\t\treturn this.entries().length;\n\t}\n\n\ttoJSON(): any {\n\t\treturn this.entries();\n\t}\n}\n\n@es5ClassCompat\nexport class SnippetString {\n\n\tstatic isSnippetString(thing: any): thing is SnippetString {\n\t\tif (thing instanceof SnippetString) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<SnippetString>thing).value === 'string';\n\t}\n\n\tprivate static _escape(value: string): string {\n\t\treturn value.replace(/\\$|}|\\\\/g, '\\\\$&');\n\t}\n\n\tprivate _tabstop: number = 1;\n\n\tvalue: string;\n\n\tconstructor(value?: string) {\n\t\tthis.value = value || '';\n\t}\n\n\tappendText(string: string): SnippetString {\n\t\tthis.value += SnippetString._escape(string);\n\t\treturn this;\n\t}\n\n\tappendTabstop(number: number = this._tabstop++): SnippetString {\n\t\tthis.value += '$';\n\t\tthis.value += number;\n\t\treturn this;\n\t}\n\n\tappendPlaceholder(value: string | ((snippet: SnippetString) => any), number: number = this._tabstop++): SnippetString {\n\n\t\tif (typeof value === 'function') {\n\t\t\tconst nested = new SnippetString();\n\t\t\tnested._tabstop = this._tabstop;\n\t\t\tvalue(nested);\n\t\t\tthis._tabstop = nested._tabstop;\n\t\t\tvalue = nested.value;\n\t\t} else {\n\t\t\tvalue = SnippetString._escape(value);\n\t\t}\n\n\t\tthis.value += '${';\n\t\tthis.value += number;\n\t\tthis.value += ':';\n\t\tthis.value += value;\n\t\tthis.value += '}';\n\n\t\treturn this;\n\t}\n\n\tappendChoice(values: string[], number: number = this._tabstop++): SnippetString {\n\t\tconst value = SnippetString._escape(values.toString());\n\n\t\tthis.value += '${';\n\t\tthis.value += number;\n\t\tthis.value += '|';\n\t\tthis.value += value;\n\t\tthis.value += '|}';\n\n\t\treturn this;\n\t}\n\n\tappendVariable(name: string, defaultValue?: string | ((snippet: SnippetString) => any)): SnippetString {\n\n\t\tif (typeof defaultValue === 'function') {\n\t\t\tconst nested = new SnippetString();\n\t\t\tnested._tabstop = this._tabstop;\n\t\t\tdefaultValue(nested);\n\t\t\tthis._tabstop = nested._tabstop;\n\t\t\tdefaultValue = nested.value;\n\n\t\t} else if (typeof defaultValue === 'string') {\n\t\t\tdefaultValue = defaultValue.replace(/\\$|}/g, '\\\\$&');\n\t\t}\n\n\t\tthis.value += '${';\n\t\tthis.value += name;\n\t\tif (defaultValue) {\n\t\t\tthis.value += ':';\n\t\t\tthis.value += defaultValue;\n\t\t}\n\t\tthis.value += '}';\n\n\n\t\treturn this;\n\t}\n}\n\nexport enum DiagnosticTag {\n\tUnnecessary = 1,\n\tDeprecated = 2\n}\n\nexport enum DiagnosticSeverity {\n\tHint = 3,\n\tInformation = 2,\n\tWarning = 1,\n\tError = 0\n}\n\n@es5ClassCompat\nexport class Location {\n\n\tstatic isLocation(thing: any): thing is Location {\n\t\tif (thing instanceof Location) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange((<Location>thing).range)\n\t\t\t&& URI.isUri((<Location>thing).uri);\n\t}\n\n\turi: URI;\n\trange!: Range;\n\n\tconstructor(uri: URI, rangeOrPosition: Range | Position) {\n\t\tthis.uri = uri;\n\n\t\tif (!rangeOrPosition) {\n\t\t\t//that's OK\n\t\t} else if (rangeOrPosition instanceof Range) {\n\t\t\tthis.range = rangeOrPosition;\n\t\t} else if (rangeOrPosition instanceof Position) {\n\t\t\tthis.range = new Range(rangeOrPosition, rangeOrPosition);\n\t\t} else {\n\t\t\tthrow new Error('Illegal argument');\n\t\t}\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\turi: this.uri,\n\t\t\trange: this.range\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class DiagnosticRelatedInformation {\n\n\tstatic is(thing: any): thing is DiagnosticRelatedInformation {\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<DiagnosticRelatedInformation>thing).message === 'string'\n\t\t\t&& (<DiagnosticRelatedInformation>thing).location\n\t\t\t&& Range.isRange((<DiagnosticRelatedInformation>thing).location.range)\n\t\t\t&& URI.isUri((<DiagnosticRelatedInformation>thing).location.uri);\n\t}\n\n\tlocation: Location;\n\tmessage: string;\n\n\tconstructor(location: Location, message: string) {\n\t\tthis.location = location;\n\t\tthis.message = message;\n\t}\n\n\tstatic isEqual(a: DiagnosticRelatedInformation, b: DiagnosticRelatedInformation): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.message === b.message\n\t\t\t&& a.location.range.isEqual(b.location.range)\n\t\t\t&& a.location.uri.toString() === b.location.uri.toString();\n\t}\n}\n\n@es5ClassCompat\nexport class Diagnostic {\n\n\trange: Range;\n\tmessage: string;\n\tseverity: DiagnosticSeverity;\n\tsource?: string;\n\tcode?: string | number;\n\trelatedInformation?: DiagnosticRelatedInformation[];\n\ttags?: DiagnosticTag[];\n\n\tconstructor(range: Range, message: string, severity: DiagnosticSeverity = DiagnosticSeverity.Error) {\n\t\tthis.range = range;\n\t\tthis.message = message;\n\t\tthis.severity = severity;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tseverity: DiagnosticSeverity[this.severity],\n\t\t\tmessage: this.message,\n\t\t\trange: this.range,\n\t\t\tsource: this.source,\n\t\t\tcode: this.code,\n\t\t};\n\t}\n\n\tstatic isEqual(a: Diagnostic | undefined, b: Diagnostic | undefined): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.message === b.message\n\t\t\t&& a.severity === b.severity\n\t\t\t&& a.code === b.code\n\t\t\t&& a.severity === b.severity\n\t\t\t&& a.source === b.source\n\t\t\t&& a.range.isEqual(b.range)\n\t\t\t&& equals(a.tags, b.tags)\n\t\t\t&& equals(a.relatedInformation, b.relatedInformation, DiagnosticRelatedInformation.isEqual);\n\t}\n}\n\n@es5ClassCompat\nexport class Hover {\n\n\tpublic contents: vscode.MarkdownString[] | vscode.MarkedString[];\n\tpublic range: Range | undefined;\n\n\tconstructor(\n\t\tcontents: vscode.MarkdownString | vscode.MarkedString | vscode.MarkdownString[] | vscode.MarkedString[],\n\t\trange?: Range\n\t) {\n\t\tif (!contents) {\n\t\t\tthrow new Error('Illegal argument, contents must be defined');\n\t\t}\n\t\tif (Array.isArray(contents)) {\n\t\t\tthis.contents = <vscode.MarkdownString[] | vscode.MarkedString[]>contents;\n\t\t} else if (isMarkdownString(contents)) {\n\t\t\tthis.contents = [contents];\n\t\t} else {\n\t\t\tthis.contents = [contents];\n\t\t}\n\t\tthis.range = range;\n\t}\n}\n\nexport enum DocumentHighlightKind {\n\tText = 0,\n\tRead = 1,\n\tWrite = 2\n}\n\n@es5ClassCompat\nexport class DocumentHighlight {\n\n\trange: Range;\n\tkind: DocumentHighlightKind;\n\n\tconstructor(range: Range, kind: DocumentHighlightKind = DocumentHighlightKind.Text) {\n\t\tthis.range = range;\n\t\tthis.kind = kind;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\trange: this.range,\n\t\t\tkind: DocumentHighlightKind[this.kind]\n\t\t};\n\t}\n}\n\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport enum SymbolTag {\n\tDeprecated = 1,\n}\n\n@es5ClassCompat\nexport class SymbolInformation {\n\n\tstatic validate(candidate: SymbolInformation): void {\n\t\tif (!candidate.name) {\n\t\t\tthrow new Error('name must not be falsy');\n\t\t}\n\t}\n\n\tname: string;\n\tlocation!: Location;\n\tkind: SymbolKind;\n\ttags?: SymbolTag[];\n\tcontainerName: string | undefined;\n\n\tconstructor(name: string, kind: SymbolKind, containerName: string | undefined, location: Location);\n\tconstructor(name: string, kind: SymbolKind, range: Range, uri?: URI, containerName?: string);\n\tconstructor(name: string, kind: SymbolKind, rangeOrContainer: string | undefined | Range, locationOrUri?: Location | URI, containerName?: string) {\n\t\tthis.name = name;\n\t\tthis.kind = kind;\n\t\tthis.containerName = containerName;\n\n\t\tif (typeof rangeOrContainer === 'string') {\n\t\t\tthis.containerName = rangeOrContainer;\n\t\t}\n\n\t\tif (locationOrUri instanceof Location) {\n\t\t\tthis.location = locationOrUri;\n\t\t} else if (rangeOrContainer instanceof Range) {\n\t\t\tthis.location = new Location(locationOrUri!, rangeOrContainer);\n\t\t}\n\n\t\tSymbolInformation.validate(this);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tkind: SymbolKind[this.kind],\n\t\t\tlocation: this.location,\n\t\t\tcontainerName: this.containerName\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class DocumentSymbol {\n\n\tstatic validate(candidate: DocumentSymbol): void {\n\t\tif (!candidate.name) {\n\t\t\tthrow new Error('name must not be falsy');\n\t\t}\n\t\tif (!candidate.range.contains(candidate.selectionRange)) {\n\t\t\tthrow new Error('selectionRange must be contained in fullRange');\n\t\t}\n\t\tif (candidate.children) {\n\t\t\tcandidate.children.forEach(DocumentSymbol.validate);\n\t\t}\n\t}\n\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\ttags?: SymbolTag[];\n\trange: Range;\n\tselectionRange: Range;\n\tchildren: DocumentSymbol[];\n\n\tconstructor(name: string, detail: string, kind: SymbolKind, range: Range, selectionRange: Range) {\n\t\tthis.name = name;\n\t\tthis.detail = detail;\n\t\tthis.kind = kind;\n\t\tthis.range = range;\n\t\tthis.selectionRange = selectionRange;\n\t\tthis.children = [];\n\n\t\tDocumentSymbol.validate(this);\n\t}\n}\n\n\nexport enum CodeActionTrigger {\n\tAutomatic = 1,\n\tManual = 2,\n}\n\n@es5ClassCompat\nexport class CodeAction {\n\ttitle: string;\n\n\tcommand?: vscode.Command;\n\n\tedit?: WorkspaceEdit;\n\n\tdiagnostics?: Diagnostic[];\n\n\tkind?: CodeActionKind;\n\n\tisPreferred?: boolean;\n\n\tconstructor(title: string, kind?: CodeActionKind) {\n\t\tthis.title = title;\n\t\tthis.kind = kind;\n\t}\n}\n\n\n@es5ClassCompat\nexport class CodeActionKind {\n\tprivate static readonly sep = '.';\n\n\tpublic static Empty: CodeActionKind;\n\tpublic static QuickFix: CodeActionKind;\n\tpublic static Refactor: CodeActionKind;\n\tpublic static RefactorExtract: CodeActionKind;\n\tpublic static RefactorInline: CodeActionKind;\n\tpublic static RefactorRewrite: CodeActionKind;\n\tpublic static Source: CodeActionKind;\n\tpublic static SourceOrganizeImports: CodeActionKind;\n\tpublic static SourceFixAll: CodeActionKind;\n\n\tconstructor(\n\t\tpublic readonly value: string\n\t) { }\n\n\tpublic append(parts: string): CodeActionKind {\n\t\treturn new CodeActionKind(this.value ? this.value + CodeActionKind.sep + parts : parts);\n\t}\n\n\tpublic intersects(other: CodeActionKind): boolean {\n\t\treturn this.contains(other) || other.contains(this);\n\t}\n\n\tpublic contains(other: CodeActionKind): boolean {\n\t\treturn this.value === other.value || startsWith(other.value, this.value + CodeActionKind.sep);\n\t}\n}\nCodeActionKind.Empty = new CodeActionKind('');\nCodeActionKind.QuickFix = CodeActionKind.Empty.append('quickfix');\nCodeActionKind.Refactor = CodeActionKind.Empty.append('refactor');\nCodeActionKind.RefactorExtract = CodeActionKind.Refactor.append('extract');\nCodeActionKind.RefactorInline = CodeActionKind.Refactor.append('inline');\nCodeActionKind.RefactorRewrite = CodeActionKind.Refactor.append('rewrite');\nCodeActionKind.Source = CodeActionKind.Empty.append('source');\nCodeActionKind.SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\nCodeActionKind.SourceFixAll = CodeActionKind.Source.append('fixAll');\n\n@es5ClassCompat\nexport class SelectionRange {\n\n\trange: Range;\n\tparent?: SelectionRange;\n\n\tconstructor(range: Range, parent?: SelectionRange) {\n\t\tthis.range = range;\n\t\tthis.parent = parent;\n\n\t\tif (parent && !parent.range.contains(this.range)) {\n\t\t\tthrow new Error('Invalid argument: parent must contain this range');\n\t\t}\n\t}\n}\n\nexport class CallHierarchyItem {\n\n\t_sessionId?: string;\n\t_itemId?: string;\n\n\tkind: SymbolKind;\n\tname: string;\n\tdetail?: string;\n\turi: URI;\n\trange: Range;\n\tselectionRange: Range;\n\n\tconstructor(kind: SymbolKind, name: string, detail: string, uri: URI, range: Range, selectionRange: Range) {\n\t\tthis.kind = kind;\n\t\tthis.name = name;\n\t\tthis.detail = detail;\n\t\tthis.uri = uri;\n\t\tthis.range = range;\n\t\tthis.selectionRange = selectionRange;\n\t}\n}\n\nexport class CallHierarchyIncomingCall {\n\n\tfrom: vscode.CallHierarchyItem;\n\tfromRanges: vscode.Range[];\n\n\tconstructor(item: vscode.CallHierarchyItem, fromRanges: vscode.Range[]) {\n\t\tthis.fromRanges = fromRanges;\n\t\tthis.from = item;\n\t}\n}\nexport class CallHierarchyOutgoingCall {\n\n\tto: vscode.CallHierarchyItem;\n\tfromRanges: vscode.Range[];\n\n\tconstructor(item: vscode.CallHierarchyItem, fromRanges: vscode.Range[]) {\n\t\tthis.fromRanges = fromRanges;\n\t\tthis.to = item;\n\t}\n}\n\n@es5ClassCompat\nexport class CodeLens {\n\n\trange: Range;\n\n\tcommand: vscode.Command | undefined;\n\n\tconstructor(range: Range, command?: vscode.Command) {\n\t\tthis.range = range;\n\t\tthis.command = command;\n\t}\n\n\tget isResolved(): boolean {\n\t\treturn !!this.command;\n\t}\n}\n\n\nexport class CodeInset {\n\n\trange: Range;\n\theight?: number;\n\n\tconstructor(range: Range, height?: number) {\n\t\tthis.range = range;\n\t\tthis.height = height;\n\t}\n}\n\n\n@es5ClassCompat\nexport class MarkdownString {\n\n\tvalue: string;\n\tisTrusted?: boolean;\n\treadonly supportThemeIcons?: boolean;\n\n\tconstructor(value?: string, supportThemeIcons: boolean = false) {\n\t\tthis.value = value ?? '';\n\t\tthis.supportThemeIcons = supportThemeIcons;\n\t}\n\n\tappendText(value: string): MarkdownString {\n\t\t// escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n\t\tthis.value += (this.supportThemeIcons ? escapeCodicons(value) : value)\n\t\t\t.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n\t\t\t.replace('\\n', '\\n\\n');\n\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): MarkdownString {\n\t\tthis.value += value;\n\n\t\treturn this;\n\t}\n\n\tappendCodeblock(code: string, language: string = ''): MarkdownString {\n\t\tthis.value += '\\n```';\n\t\tthis.value += language;\n\t\tthis.value += '\\n';\n\t\tthis.value += code;\n\t\tthis.value += '\\n```\\n';\n\t\treturn this;\n\t}\n}\n\n@es5ClassCompat\nexport class ParameterInformation {\n\n\tlabel: string | [number, number];\n\tdocumentation?: string | MarkdownString;\n\n\tconstructor(label: string | [number, number], documentation?: string | MarkdownString) {\n\t\tthis.label = label;\n\t\tthis.documentation = documentation;\n\t}\n}\n\n@es5ClassCompat\nexport class SignatureInformation {\n\n\tlabel: string;\n\tdocumentation?: string | MarkdownString;\n\tparameters: ParameterInformation[];\n\tactiveParameter?: number;\n\n\tconstructor(label: string, documentation?: string | MarkdownString) {\n\t\tthis.label = label;\n\t\tthis.documentation = documentation;\n\t\tthis.parameters = [];\n\t}\n}\n\n@es5ClassCompat\nexport class SignatureHelp {\n\n\tsignatures: SignatureInformation[];\n\tactiveSignature: number = 0;\n\tactiveParameter: number = 0;\n\n\tconstructor() {\n\t\tthis.signatures = [];\n\t}\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\nexport interface CompletionContext {\n\treadonly triggerKind: CompletionTriggerKind;\n\treadonly triggerCharacter?: string;\n}\n\nexport enum CompletionItemKind {\n\tText = 0,\n\tMethod = 1,\n\tFunction = 2,\n\tConstructor = 3,\n\tField = 4,\n\tVariable = 5,\n\tClass = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tUnit = 10,\n\tValue = 11,\n\tEnum = 12,\n\tKeyword = 13,\n\tSnippet = 14,\n\tColor = 15,\n\tFile = 16,\n\tReference = 17,\n\tFolder = 18,\n\tEnumMember = 19,\n\tConstant = 20,\n\tStruct = 21,\n\tEvent = 22,\n\tOperator = 23,\n\tTypeParameter = 24,\n\tUser = 25,\n\tIssue = 26\n}\n\nexport enum CompletionItemTag {\n\tDeprecated = 1,\n}\n\nexport interface CompletionItemLabel {\n\tname: string;\n\tparameters?: string;\n\tqualifier?: string;\n\ttype?: string;\n}\n\n\n@es5ClassCompat\nexport class CompletionItem implements vscode.CompletionItem {\n\n\tlabel: string;\n\tlabel2?: CompletionItemLabel;\n\tkind?: CompletionItemKind;\n\ttags?: CompletionItemTag[];\n\tdetail?: string;\n\tdocumentation?: string | MarkdownString;\n\tsortText?: string;\n\tfilterText?: string;\n\tpreselect?: boolean;\n\tinsertText?: string | SnippetString;\n\tkeepWhitespace?: boolean;\n\trange?: Range | { inserting: Range; replacing: Range; };\n\tcommitCharacters?: string[];\n\ttextEdit?: TextEdit;\n\tadditionalTextEdits?: TextEdit[];\n\tcommand?: vscode.Command;\n\n\tconstructor(label: string, kind?: CompletionItemKind) {\n\t\tthis.label = label;\n\t\tthis.kind = kind;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tlabel: this.label,\n\t\t\tlabel2: this.label2,\n\t\t\tkind: this.kind && CompletionItemKind[this.kind],\n\t\t\tdetail: this.detail,\n\t\t\tdocumentation: this.documentation,\n\t\t\tsortText: this.sortText,\n\t\t\tfilterText: this.filterText,\n\t\t\tpreselect: this.preselect,\n\t\t\tinsertText: this.insertText,\n\t\t\ttextEdit: this.textEdit\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class CompletionList {\n\n\tisIncomplete?: boolean;\n\titems: vscode.CompletionItem[];\n\n\tconstructor(items: vscode.CompletionItem[] = [], isIncomplete: boolean = false) {\n\t\tthis.items = items;\n\t\tthis.isIncomplete = isIncomplete;\n\t}\n}\n\nexport enum ViewColumn {\n\tActive = -1,\n\tBeside = -2,\n\tOne = 1,\n\tTwo = 2,\n\tThree = 3,\n\tFour = 4,\n\tFive = 5,\n\tSix = 6,\n\tSeven = 7,\n\tEight = 8,\n\tNine = 9\n}\n\nexport enum StatusBarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport enum TextEditorLineNumbersStyle {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2\n}\n\nexport enum TextDocumentSaveReason {\n\tManual = 1,\n\tAfterDelay = 2,\n\tFocusOut = 3\n}\n\nexport enum TextEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport enum TextEditorSelectionChangeKind {\n\tKeyboard = 1,\n\tMouse = 2,\n\tCommand = 3\n}\n\n/**\n * These values match very carefully the values of `TrackedRangeStickiness`\n */\nexport enum DecorationRangeBehavior {\n\t/**\n\t * TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tOpenOpen = 0,\n\t/**\n\t * TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t */\n\tClosedClosed = 1,\n\t/**\n\t * TrackedRangeStickiness.GrowsOnlyWhenTypingBefore\n\t */\n\tOpenClosed = 2,\n\t/**\n\t * TrackedRangeStickiness.GrowsOnlyWhenTypingAfter\n\t */\n\tClosedOpen = 3\n}\n\nexport namespace TextEditorSelectionChangeKind {\n\texport function fromValue(s: string | undefined) {\n\t\tswitch (s) {\n\t\t\tcase 'keyboard': return TextEditorSelectionChangeKind.Keyboard;\n\t\t\tcase 'mouse': return TextEditorSelectionChangeKind.Mouse;\n\t\t\tcase 'api': return TextEditorSelectionChangeKind.Command;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n@es5ClassCompat\nexport class DocumentLink {\n\n\trange: Range;\n\n\ttarget?: URI;\n\n\ttooltip?: string;\n\n\tconstructor(range: Range, target: URI | undefined) {\n\t\tif (target && !(URI.isUri(target))) {\n\t\t\tthrow illegalArgument('target');\n\t\t}\n\t\tif (!Range.isRange(range) || range.isEmpty) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis.range = range;\n\t\tthis.target = target;\n\t}\n}\n\n@es5ClassCompat\nexport class Color {\n\treadonly red: number;\n\treadonly green: number;\n\treadonly blue: number;\n\treadonly alpha: number;\n\n\tconstructor(red: number, green: number, blue: number, alpha: number) {\n\t\tthis.red = red;\n\t\tthis.green = green;\n\t\tthis.blue = blue;\n\t\tthis.alpha = alpha;\n\t}\n}\n\nexport type IColorFormat = string | { opaque: string, transparent: string; };\n\n@es5ClassCompat\nexport class ColorInformation {\n\trange: Range;\n\n\tcolor: Color;\n\n\tconstructor(range: Range, color: Color) {\n\t\tif (color && !(color instanceof Color)) {\n\t\t\tthrow illegalArgument('color');\n\t\t}\n\t\tif (!Range.isRange(range) || range.isEmpty) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis.range = range;\n\t\tthis.color = color;\n\t}\n}\n\n@es5ClassCompat\nexport class ColorPresentation {\n\tlabel: string;\n\ttextEdit?: TextEdit;\n\tadditionalTextEdits?: TextEdit[];\n\n\tconstructor(label: string) {\n\t\tif (!label || typeof label !== 'string') {\n\t\t\tthrow illegalArgument('label');\n\t\t}\n\t\tthis.label = label;\n\t}\n}\n\nexport enum ColorFormat {\n\tRGB = 0,\n\tHEX = 1,\n\tHSL = 2\n}\n\nexport enum SourceControlInputBoxValidationType {\n\tError = 0,\n\tWarning = 1,\n\tInformation = 2\n}\n\nexport enum TaskRevealKind {\n\tAlways = 1,\n\n\tSilent = 2,\n\n\tNever = 3\n}\n\nexport enum TaskPanelKind {\n\tShared = 1,\n\n\tDedicated = 2,\n\n\tNew = 3\n}\n\n@es5ClassCompat\nexport class TaskGroup implements vscode.TaskGroup {\n\n\tprivate _id: string;\n\n\tpublic static Clean: TaskGroup = new TaskGroup('clean', 'Clean');\n\n\tpublic static Build: TaskGroup = new TaskGroup('build', 'Build');\n\n\tpublic static Rebuild: TaskGroup = new TaskGroup('rebuild', 'Rebuild');\n\n\tpublic static Test: TaskGroup = new TaskGroup('test', 'Test');\n\n\tpublic static from(value: string) {\n\t\tswitch (value) {\n\t\t\tcase 'clean':\n\t\t\t\treturn TaskGroup.Clean;\n\t\t\tcase 'build':\n\t\t\t\treturn TaskGroup.Build;\n\t\t\tcase 'rebuild':\n\t\t\t\treturn TaskGroup.Rebuild;\n\t\t\tcase 'test':\n\t\t\t\treturn TaskGroup.Test;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(id: string, _label: string) {\n\t\tif (typeof id !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tif (typeof _label !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tthis._id = id;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n}\n\nfunction computeTaskExecutionId(values: string[]): string {\n\tlet id: string = '';\n\tfor (let i = 0; i < values.length; i++) {\n\t\tid += values[i].replace(/,/g, ',,') + ',';\n\t}\n\treturn id;\n}\n\n@es5ClassCompat\nexport class ProcessExecution implements vscode.ProcessExecution {\n\n\tprivate _process: string;\n\tprivate _args: string[];\n\tprivate _options: vscode.ProcessExecutionOptions | undefined;\n\n\tconstructor(process: string, options?: vscode.ProcessExecutionOptions);\n\tconstructor(process: string, args: string[], options?: vscode.ProcessExecutionOptions);\n\tconstructor(process: string, varg1?: string[] | vscode.ProcessExecutionOptions, varg2?: vscode.ProcessExecutionOptions) {\n\t\tif (typeof process !== 'string') {\n\t\t\tthrow illegalArgument('process');\n\t\t}\n\t\tthis._args = [];\n\t\tthis._process = process;\n\t\tif (varg1 !== undefined) {\n\t\t\tif (Array.isArray(varg1)) {\n\t\t\t\tthis._args = varg1;\n\t\t\t\tthis._options = varg2;\n\t\t\t} else {\n\t\t\t\tthis._options = varg1;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tget process(): string {\n\t\treturn this._process;\n\t}\n\n\tset process(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('process');\n\t\t}\n\t\tthis._process = value;\n\t}\n\n\tget args(): string[] {\n\t\treturn this._args;\n\t}\n\n\tset args(value: string[]) {\n\t\tif (!Array.isArray(value)) {\n\t\t\tvalue = [];\n\t\t}\n\t\tthis._args = value;\n\t}\n\n\tget options(): vscode.ProcessExecutionOptions | undefined {\n\t\treturn this._options;\n\t}\n\n\tset options(value: vscode.ProcessExecutionOptions | undefined) {\n\t\tthis._options = value;\n\t}\n\n\tpublic computeId(): string {\n\t\tconst props: string[] = [];\n\t\tprops.push('process');\n\t\tif (this._process !== undefined) {\n\t\t\tprops.push(this._process);\n\t\t}\n\t\tif (this._args && this._args.length > 0) {\n\t\t\tfor (let arg of this._args) {\n\t\t\t\tprops.push(arg);\n\t\t\t}\n\t\t}\n\t\treturn computeTaskExecutionId(props);\n\t}\n}\n\n@es5ClassCompat\nexport class ShellExecution implements vscode.ShellExecution {\n\n\tprivate _commandLine: string | undefined;\n\tprivate _command: string | vscode.ShellQuotedString | undefined;\n\tprivate _args: (string | vscode.ShellQuotedString)[] = [];\n\tprivate _options: vscode.ShellExecutionOptions | undefined;\n\n\tconstructor(commandLine: string, options?: vscode.ShellExecutionOptions);\n\tconstructor(command: string | vscode.ShellQuotedString, args: (string | vscode.ShellQuotedString)[], options?: vscode.ShellExecutionOptions);\n\tconstructor(arg0: string | vscode.ShellQuotedString, arg1?: vscode.ShellExecutionOptions | (string | vscode.ShellQuotedString)[], arg2?: vscode.ShellExecutionOptions) {\n\t\tif (Array.isArray(arg1)) {\n\t\t\tif (!arg0) {\n\t\t\t\tthrow illegalArgument('command can\\'t be undefined or null');\n\t\t\t}\n\t\t\tif (typeof arg0 !== 'string' && typeof arg0.value !== 'string') {\n\t\t\t\tthrow illegalArgument('command');\n\t\t\t}\n\t\t\tthis._command = arg0;\n\t\t\tthis._args = arg1 as (string | vscode.ShellQuotedString)[];\n\t\t\tthis._options = arg2;\n\t\t} else {\n\t\t\tif (typeof arg0 !== 'string') {\n\t\t\t\tthrow illegalArgument('commandLine');\n\t\t\t}\n\t\t\tthis._commandLine = arg0;\n\t\t\tthis._options = arg1;\n\t\t}\n\t}\n\n\tget commandLine(): string | undefined {\n\t\treturn this._commandLine;\n\t}\n\n\tset commandLine(value: string | undefined) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('commandLine');\n\t\t}\n\t\tthis._commandLine = value;\n\t}\n\n\tget command(): string | vscode.ShellQuotedString {\n\t\treturn this._command ? this._command : '';\n\t}\n\n\tset command(value: string | vscode.ShellQuotedString) {\n\t\tif (typeof value !== 'string' && typeof value.value !== 'string') {\n\t\t\tthrow illegalArgument('command');\n\t\t}\n\t\tthis._command = value;\n\t}\n\n\tget args(): (string | vscode.ShellQuotedString)[] {\n\t\treturn this._args;\n\t}\n\n\tset args(value: (string | vscode.ShellQuotedString)[]) {\n\t\tthis._args = value || [];\n\t}\n\n\tget options(): vscode.ShellExecutionOptions | undefined {\n\t\treturn this._options;\n\t}\n\n\tset options(value: vscode.ShellExecutionOptions | undefined) {\n\t\tthis._options = value;\n\t}\n\n\tpublic computeId(): string {\n\t\tconst props: string[] = [];\n\t\tprops.push('shell');\n\t\tif (this._commandLine !== undefined) {\n\t\t\tprops.push(this._commandLine);\n\t\t}\n\t\tif (this._command !== undefined) {\n\t\t\tprops.push(typeof this._command === 'string' ? this._command : this._command.value);\n\t\t}\n\t\tif (this._args && this._args.length > 0) {\n\t\t\tfor (let arg of this._args) {\n\t\t\t\tprops.push(typeof arg === 'string' ? arg : arg.value);\n\t\t\t}\n\t\t}\n\t\treturn computeTaskExecutionId(props);\n\t}\n}\n\nexport enum ShellQuoting {\n\tEscape = 1,\n\tStrong = 2,\n\tWeak = 3\n}\n\nexport enum TaskScope {\n\tGlobal = 1,\n\tWorkspace = 2\n}\n\nexport class CustomExecution implements vscode.CustomExecution2 {\n\tprivate _callback: (resolvedDefintion?: vscode.TaskDefinition) => Thenable<vscode.Pseudoterminal>;\n\tconstructor(callback: (resolvedDefintion?: vscode.TaskDefinition) => Thenable<vscode.Pseudoterminal>) {\n\t\tthis._callback = callback;\n\t}\n\tpublic computeId(): string {\n\t\treturn 'customExecution' + generateUuid();\n\t}\n\n\tpublic set callback(value: (resolvedDefintion?: vscode.TaskDefinition) => Thenable<vscode.Pseudoterminal>) {\n\t\tthis._callback = value;\n\t}\n\n\tpublic get callback(): ((resolvedDefintion?: vscode.TaskDefinition) => Thenable<vscode.Pseudoterminal>) {\n\t\treturn this._callback;\n\t}\n}\n\n@es5ClassCompat\nexport class Task implements vscode.Task2 {\n\n\tprivate static ExtensionCallbackType: string = 'customExecution';\n\tprivate static ProcessType: string = 'process';\n\tprivate static ShellType: string = 'shell';\n\tprivate static EmptyType: string = '$empty';\n\n\tprivate __id: string | undefined;\n\tprivate __deprecated: boolean = false;\n\n\tprivate _definition: vscode.TaskDefinition;\n\tprivate _scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined;\n\tprivate _name: string;\n\tprivate _execution: ProcessExecution | ShellExecution | CustomExecution | undefined;\n\tprivate _problemMatchers: string[];\n\tprivate _hasDefinedMatchers: boolean;\n\tprivate _isBackground: boolean;\n\tprivate _source: string;\n\tprivate _group: TaskGroup | undefined;\n\tprivate _presentationOptions: vscode.TaskPresentationOptions;\n\tprivate _runOptions: vscode.RunOptions;\n\tprivate _detail: string | undefined;\n\n\tconstructor(definition: vscode.TaskDefinition, name: string, source: string, execution?: ProcessExecution | ShellExecution | CustomExecution, problemMatchers?: string | string[]);\n\tconstructor(definition: vscode.TaskDefinition, scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder, name: string, source: string, execution?: ProcessExecution | ShellExecution | CustomExecution, problemMatchers?: string | string[]);\n\tconstructor(definition: vscode.TaskDefinition, arg2: string | (vscode.TaskScope.Global | vscode.TaskScope.Workspace) | vscode.WorkspaceFolder, arg3: any, arg4?: any, arg5?: any, arg6?: any) {\n\t\tthis._definition = this.definition = definition;\n\t\tlet problemMatchers: string | string[];\n\t\tif (typeof arg2 === 'string') {\n\t\t\tthis._name = this.name = arg2;\n\t\t\tthis._source = this.source = arg3;\n\t\t\tthis.execution = arg4;\n\t\t\tproblemMatchers = arg5;\n\t\t\tthis.__deprecated = true;\n\t\t} else if (arg2 === TaskScope.Global || arg2 === TaskScope.Workspace) {\n\t\t\tthis.target = arg2;\n\t\t\tthis._name = this.name = arg3;\n\t\t\tthis._source = this.source = arg4;\n\t\t\tthis.execution = arg5;\n\t\t\tproblemMatchers = arg6;\n\t\t} else {\n\t\t\tthis.target = arg2;\n\t\t\tthis._name = this.name = arg3;\n\t\t\tthis._source = this.source = arg4;\n\t\t\tthis.execution = arg5;\n\t\t\tproblemMatchers = arg6;\n\t\t}\n\t\tif (typeof problemMatchers === 'string') {\n\t\t\tthis._problemMatchers = [problemMatchers];\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t} else if (Array.isArray(problemMatchers)) {\n\t\t\tthis._problemMatchers = problemMatchers;\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t} else {\n\t\t\tthis._problemMatchers = [];\n\t\t\tthis._hasDefinedMatchers = false;\n\t\t}\n\t\tthis._isBackground = false;\n\t\tthis._presentationOptions = Object.create(null);\n\t\tthis._runOptions = Object.create(null);\n\t}\n\n\tget _id(): string | undefined {\n\t\treturn this.__id;\n\t}\n\n\tset _id(value: string | undefined) {\n\t\tthis.__id = value;\n\t}\n\n\tget _deprecated(): boolean {\n\t\treturn this.__deprecated;\n\t}\n\n\tprivate clear(): void {\n\t\tif (this.__id === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__id = undefined;\n\t\tthis._scope = undefined;\n\t\tthis.computeDefinitionBasedOnExecution();\n\t}\n\n\tprivate computeDefinitionBasedOnExecution(): void {\n\t\tif (this._execution instanceof ProcessExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ProcessType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else if (this._execution instanceof ShellExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ShellType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else if (this._execution instanceof CustomExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ExtensionCallbackType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.EmptyType,\n\t\t\t\tid: generateUuid()\n\t\t\t};\n\t\t}\n\t}\n\n\tget definition(): vscode.TaskDefinition {\n\t\treturn this._definition;\n\t}\n\n\tset definition(value: vscode.TaskDefinition) {\n\t\tif (value === undefined || value === null) {\n\t\t\tthrow illegalArgument('Kind can\\'t be undefined or null');\n\t\t}\n\t\tthis.clear();\n\t\tthis._definition = value;\n\t}\n\n\tget scope(): vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined {\n\t\treturn this._scope;\n\t}\n\n\tset target(value: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder) {\n\t\tthis.clear();\n\t\tthis._scope = value;\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tset name(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tthis.clear();\n\t\tthis._name = value;\n\t}\n\n\tget execution(): ProcessExecution | ShellExecution | CustomExecution | undefined {\n\t\treturn this._execution;\n\t}\n\n\tset execution(value: ProcessExecution | ShellExecution | CustomExecution | undefined) {\n\t\tif (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\t\tthis.clear();\n\t\tthis._execution = value;\n\t\tconst type = this._definition.type;\n\t\tif (Task.EmptyType === type || Task.ProcessType === type || Task.ShellType === type || Task.ExtensionCallbackType === type) {\n\t\t\tthis.computeDefinitionBasedOnExecution();\n\t\t}\n\t}\n\n\tget problemMatchers(): string[] {\n\t\treturn this._problemMatchers;\n\t}\n\n\tset problemMatchers(value: string[]) {\n\t\tif (!Array.isArray(value)) {\n\t\t\tthis.clear();\n\t\t\tthis._problemMatchers = [];\n\t\t\tthis._hasDefinedMatchers = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.clear();\n\t\t\tthis._problemMatchers = value;\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t}\n\t}\n\n\tget hasDefinedMatchers(): boolean {\n\t\treturn this._hasDefinedMatchers;\n\t}\n\n\tget isBackground(): boolean {\n\t\treturn this._isBackground;\n\t}\n\n\tset isBackground(value: boolean) {\n\t\tif (value !== true && value !== false) {\n\t\t\tvalue = false;\n\t\t}\n\t\tthis.clear();\n\t\tthis._isBackground = value;\n\t}\n\n\tget source(): string {\n\t\treturn this._source;\n\t}\n\n\tset source(value: string) {\n\t\tif (typeof value !== 'string' || value.length === 0) {\n\t\t\tthrow illegalArgument('source must be a string of length > 0');\n\t\t}\n\t\tthis.clear();\n\t\tthis._source = value;\n\t}\n\n\tget group(): TaskGroup | undefined {\n\t\treturn this._group;\n\t}\n\n\tset group(value: TaskGroup | undefined) {\n\t\tif (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\t\tthis.clear();\n\t\tthis._group = value;\n\t}\n\n\tget detail(): string | undefined {\n\t\treturn this._detail;\n\t}\n\n\tset detail(value: string | undefined) {\n\t\tif (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\t\tthis._detail = value;\n\t}\n\n\tget presentationOptions(): vscode.TaskPresentationOptions {\n\t\treturn this._presentationOptions;\n\t}\n\n\tset presentationOptions(value: vscode.TaskPresentationOptions) {\n\t\tif (value === null || value === undefined) {\n\t\t\tvalue = Object.create(null);\n\t\t}\n\t\tthis.clear();\n\t\tthis._presentationOptions = value;\n\t}\n\n\tget runOptions(): vscode.RunOptions {\n\t\treturn this._runOptions;\n\t}\n\n\tset runOptions(value: vscode.RunOptions) {\n\t\tif (value === null || value === undefined) {\n\t\t\tvalue = Object.create(null);\n\t\t}\n\t\tthis.clear();\n\t\tthis._runOptions = value;\n\t}\n}\n\n\nexport enum ProgressLocation {\n\tSourceControl = 1,\n\tWindow = 10,\n\tNotification = 15\n}\n\n@es5ClassCompat\nexport class TreeItem {\n\n\tlabel?: string | vscode.TreeItemLabel;\n\tresourceUri?: URI;\n\ticonPath?: string | URI | { light: string | URI; dark: string | URI; };\n\tcommand?: vscode.Command;\n\tcontextValue?: string;\n\ttooltip?: string;\n\n\tconstructor(label: string | vscode.TreeItemLabel, collapsibleState?: vscode.TreeItemCollapsibleState);\n\tconstructor(resourceUri: URI, collapsibleState?: vscode.TreeItemCollapsibleState);\n\tconstructor(arg1: string | vscode.TreeItemLabel | URI, public collapsibleState: vscode.TreeItemCollapsibleState = TreeItemCollapsibleState.None) {\n\t\tif (URI.isUri(arg1)) {\n\t\t\tthis.resourceUri = arg1;\n\t\t} else {\n\t\t\tthis.label = arg1;\n\t\t}\n\t}\n\n}\n\nexport enum TreeItemCollapsibleState {\n\tNone = 0,\n\tCollapsed = 1,\n\tExpanded = 2\n}\n\n@es5ClassCompat\nexport class ThemeIcon {\n\n\tstatic File: ThemeIcon;\n\tstatic Folder: ThemeIcon;\n\n\treadonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n}\nThemeIcon.File = new ThemeIcon('file');\nThemeIcon.Folder = new ThemeIcon('folder');\n\n\n@es5ClassCompat\nexport class ThemeColor {\n\tid: string;\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n}\n\nexport enum ConfigurationTarget {\n\tGlobal = 1,\n\n\tWorkspace = 2,\n\n\tWorkspaceFolder = 3\n}\n\n@es5ClassCompat\nexport class RelativePattern implements IRelativePattern {\n\tbase: string;\n\tbaseFolder?: URI;\n\n\tpattern: string;\n\n\tconstructor(base: vscode.WorkspaceFolder | string, pattern: string) {\n\t\tif (typeof base !== 'string') {\n\t\t\tif (!base || !URI.isUri(base.uri)) {\n\t\t\t\tthrow illegalArgument('base');\n\t\t\t}\n\t\t}\n\n\t\tif (typeof pattern !== 'string') {\n\t\t\tthrow illegalArgument('pattern');\n\t\t}\n\n\t\tif (typeof base === 'string') {\n\t\t\tthis.base = base;\n\t\t} else {\n\t\t\tthis.baseFolder = base.uri;\n\t\t\tthis.base = base.uri.fsPath;\n\t\t}\n\n\t\tthis.pattern = pattern;\n\t}\n}\n\n@es5ClassCompat\nexport class Breakpoint {\n\n\tprivate _id: string | undefined;\n\n\treadonly enabled: boolean;\n\treadonly condition?: string;\n\treadonly hitCondition?: string;\n\treadonly logMessage?: string;\n\n\tprotected constructor(enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tthis.enabled = typeof enabled === 'boolean' ? enabled : true;\n\t\tif (typeof condition === 'string') {\n\t\t\tthis.condition = condition;\n\t\t}\n\t\tif (typeof hitCondition === 'string') {\n\t\t\tthis.hitCondition = hitCondition;\n\t\t}\n\t\tif (typeof logMessage === 'string') {\n\t\t\tthis.logMessage = logMessage;\n\t\t}\n\t}\n\n\tget id(): string {\n\t\tif (!this._id) {\n\t\t\tthis._id = generateUuid();\n\t\t}\n\t\treturn this._id;\n\t}\n}\n\n@es5ClassCompat\nexport class SourceBreakpoint extends Breakpoint {\n\treadonly location: Location;\n\n\tconstructor(location: Location, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tsuper(enabled, condition, hitCondition, logMessage);\n\t\tif (location === null) {\n\t\t\tthrow illegalArgument('location');\n\t\t}\n\t\tthis.location = location;\n\t}\n}\n\n@es5ClassCompat\nexport class FunctionBreakpoint extends Breakpoint {\n\treadonly functionName: string;\n\n\tconstructor(functionName: string, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tsuper(enabled, condition, hitCondition, logMessage);\n\t\tif (!functionName) {\n\t\t\tthrow illegalArgument('functionName');\n\t\t}\n\t\tthis.functionName = functionName;\n\t}\n}\n\n@es5ClassCompat\nexport class DataBreakpoint extends Breakpoint {\n\treadonly label: string;\n\treadonly dataId: string;\n\treadonly canPersist: boolean;\n\n\tconstructor(label: string, dataId: string, canPersist: boolean, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tsuper(enabled, condition, hitCondition, logMessage);\n\t\tif (!dataId) {\n\t\t\tthrow illegalArgument('dataId');\n\t\t}\n\t\tthis.label = label;\n\t\tthis.dataId = dataId;\n\t\tthis.canPersist = canPersist;\n\t}\n}\n\n\n@es5ClassCompat\nexport class DebugAdapterExecutable implements vscode.DebugAdapterExecutable {\n\treadonly command: string;\n\treadonly args: string[];\n\treadonly options?: vscode.DebugAdapterExecutableOptions;\n\n\tconstructor(command: string, args: string[], options?: vscode.DebugAdapterExecutableOptions) {\n\t\tthis.command = command;\n\t\tthis.args = args || [];\n\t\tthis.options = options;\n\t}\n}\n\n@es5ClassCompat\nexport class DebugAdapterServer implements vscode.DebugAdapterServer {\n\treadonly port: number;\n\treadonly host?: string;\n\n\tconstructor(port: number, host?: string) {\n\t\tthis.port = port;\n\t\tthis.host = host;\n\t}\n}\n\n@es5ClassCompat\nexport class DebugAdapterInlineImplementation implements vscode.DebugAdapterInlineImplementation {\n\treadonly implementation: vscode.DebugAdapter;\n\n\tconstructor(impl: vscode.DebugAdapter) {\n\t\tthis.implementation = impl;\n\t}\n}\n\n@es5ClassCompat\nexport class EvaluatableExpression implements vscode.EvaluatableExpression {\n\treadonly range: vscode.Range;\n\treadonly expression?: string;\n\n\tconstructor(range: vscode.Range, expression?: string) {\n\t\tthis.range = range;\n\t\tthis.expression = expression;\n\t}\n}\n\nexport enum LogLevel {\n\tTrace = 1,\n\tDebug = 2,\n\tInfo = 3,\n\tWarning = 4,\n\tError = 5,\n\tCritical = 6,\n\tOff = 7\n}\n\n//#region file api\n\nexport enum FileChangeType {\n\tChanged = 1,\n\tCreated = 2,\n\tDeleted = 3,\n}\n\n@es5ClassCompat\nexport class FileSystemError extends Error {\n\n\tstatic FileExists(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileExists, FileSystemError.FileExists);\n\t}\n\tstatic FileNotFound(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileNotFound, FileSystemError.FileNotFound);\n\t}\n\tstatic FileNotADirectory(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileNotADirectory, FileSystemError.FileNotADirectory);\n\t}\n\tstatic FileIsADirectory(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileIsADirectory, FileSystemError.FileIsADirectory);\n\t}\n\tstatic NoPermissions(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.NoPermissions, FileSystemError.NoPermissions);\n\t}\n\tstatic Unavailable(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, FileSystemProviderErrorCode.Unavailable, FileSystemError.Unavailable);\n\t}\n\n\treadonly code: string;\n\n\tconstructor(uriOrMessage?: string | URI, code: FileSystemProviderErrorCode = FileSystemProviderErrorCode.Unknown, terminator?: Function) {\n\t\tsuper(URI.isUri(uriOrMessage) ? uriOrMessage.toString(true) : uriOrMessage);\n\n\t\tthis.code = terminator?.name ?? 'Unknown';\n\n\t\t// mark the error as file system provider error so that\n\t\t// we can extract the error code on the receiving side\n\t\tmarkAsFileSystemProviderError(this, code);\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, FileSystemError.prototype);\n\t\t}\n\n\t\tif (typeof Error.captureStackTrace === 'function' && typeof terminator === 'function') {\n\t\t\t// nice stack traces\n\t\t\tError.captureStackTrace(this, terminator);\n\t\t}\n\t}\n}\n\n//#endregion\n\n//#region folding api\n\n@es5ClassCompat\nexport class FoldingRange {\n\n\tstart: number;\n\n\tend: number;\n\n\tkind?: FoldingRangeKind;\n\n\tconstructor(start: number, end: number, kind?: FoldingRangeKind) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.kind = kind;\n\t}\n}\n\nexport enum FoldingRangeKind {\n\tComment = 1,\n\tImports = 2,\n\tRegion = 3\n}\n\n//#endregion\n\n//#region Comment\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\nexport enum CommentMode {\n\tEditing = 0,\n\tPreview = 1\n}\n\n//#endregion\n\n//#region Semantic Coloring\n\nexport class SemanticTokensLegend {\n\tpublic readonly tokenTypes: string[];\n\tpublic readonly tokenModifiers: string[];\n\n\tconstructor(tokenTypes: string[], tokenModifiers: string[] = []) {\n\t\tthis.tokenTypes = tokenTypes;\n\t\tthis.tokenModifiers = tokenModifiers;\n\t}\n}\n\nfunction isStrArrayOrUndefined(arg: any): arg is string[] | undefined {\n\treturn ((typeof arg === 'undefined') || isStringArray(arg));\n}\n\nexport class SemanticTokensBuilder {\n\n\tprivate _prevLine: number;\n\tprivate _prevChar: number;\n\tprivate _dataIsSortedAndDeltaEncoded: boolean;\n\tprivate _data: number[];\n\tprivate _dataLen: number;\n\tprivate _tokenTypeStrToInt: Map<string, number>;\n\tprivate _tokenModifierStrToInt: Map<string, number>;\n\tprivate _hasLegend: boolean;\n\n\tconstructor(legend?: vscode.SemanticTokensLegend) {\n\t\tthis._prevLine = 0;\n\t\tthis._prevChar = 0;\n\t\tthis._dataIsSortedAndDeltaEncoded = true;\n\t\tthis._data = [];\n\t\tthis._dataLen = 0;\n\t\tthis._tokenTypeStrToInt = new Map<string, number>();\n\t\tthis._tokenModifierStrToInt = new Map<string, number>();\n\t\tthis._hasLegend = false;\n\t\tif (legend) {\n\t\t\tthis._hasLegend = true;\n\t\t\tfor (let i = 0, len = legend.tokenTypes.length; i < len; i++) {\n\t\t\t\tthis._tokenTypeStrToInt.set(legend.tokenTypes[i], i);\n\t\t\t}\n\t\t\tfor (let i = 0, len = legend.tokenModifiers.length; i < len; i++) {\n\t\t\t\tthis._tokenModifierStrToInt.set(legend.tokenModifiers[i], i);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic push(line: number, char: number, length: number, tokenType: number, tokenModifiers?: number): void;\n\tpublic push(range: Range, tokenType: string, tokenModifiers?: string[]): void;\n\tpublic push(arg0: any, arg1: any, arg2: any, arg3?: any, arg4?: any): void {\n\t\tif (typeof arg0 === 'number' && typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && (typeof arg4 === 'number' || typeof arg4 === 'undefined')) {\n\t\t\tif (typeof arg4 === 'undefined') {\n\t\t\t\targ4 = 0;\n\t\t\t}\n\t\t\t// 1st overload\n\t\t\treturn this._pushEncoded(arg0, arg1, arg2, arg3, arg4);\n\t\t}\n\t\tif (Range.isRange(arg0) && typeof arg1 === 'string' && isStrArrayOrUndefined(arg2)) {\n\t\t\t// 2nd overload\n\t\t\treturn this._push(arg0, arg1, arg2);\n\t\t}\n\t\tthrow illegalArgument();\n\t}\n\n\tprivate _push(range: vscode.Range, tokenType: string, tokenModifiers?: string[]): void {\n\t\tif (!this._hasLegend) {\n\t\t\tthrow new Error('Legend must be provided in constructor');\n\t\t}\n\t\tif (range.start.line !== range.end.line) {\n\t\t\tthrow new Error('`range` cannot span multiple lines');\n\t\t}\n\t\tif (!this._tokenTypeStrToInt.has(tokenType)) {\n\t\t\tthrow new Error('`tokenType` is not in the provided legend');\n\t\t}\n\t\tconst line = range.start.line;\n\t\tconst char = range.start.character;\n\t\tconst length = range.end.character - range.start.character;\n\t\tconst nTokenType = this._tokenTypeStrToInt.get(tokenType)!;\n\t\tlet nTokenModifiers = 0;\n\t\tif (tokenModifiers) {\n\t\t\tfor (const tokenModifier of tokenModifiers) {\n\t\t\t\tif (!this._tokenModifierStrToInt.has(tokenModifier)) {\n\t\t\t\t\tthrow new Error('`tokenModifier` is not in the provided legend');\n\t\t\t\t}\n\t\t\t\tconst nTokenModifier = this._tokenModifierStrToInt.get(tokenModifier)!;\n\t\t\t\tnTokenModifiers |= (1 << nTokenModifier) >>> 0;\n\t\t\t}\n\t\t}\n\t\tthis._pushEncoded(line, char, length, nTokenType, nTokenModifiers);\n\t}\n\n\tprivate _pushEncoded(line: number, char: number, length: number, tokenType: number, tokenModifiers: number): void {\n\t\tif (this._dataIsSortedAndDeltaEncoded && (line < this._prevLine || (line === this._prevLine && char < this._prevChar))) {\n\t\t\t// push calls were ordered and are no longer ordered\n\t\t\tthis._dataIsSortedAndDeltaEncoded = false;\n\n\t\t\t// Remove delta encoding from data\n\t\t\tconst tokenCount = (this._data.length / 5) | 0;\n\t\t\tlet prevLine = 0;\n\t\t\tlet prevChar = 0;\n\t\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\t\tlet line = this._data[5 * i];\n\t\t\t\tlet char = this._data[5 * i + 1];\n\n\t\t\t\tif (line === 0) {\n\t\t\t\t\t// on the same line as previous token\n\t\t\t\t\tline = prevLine;\n\t\t\t\t\tchar += prevChar;\n\t\t\t\t} else {\n\t\t\t\t\t// on a different line than previous token\n\t\t\t\t\tline += prevLine;\n\t\t\t\t}\n\n\t\t\t\tthis._data[5 * i] = line;\n\t\t\t\tthis._data[5 * i + 1] = char;\n\n\t\t\t\tprevLine = line;\n\t\t\t\tprevChar = char;\n\t\t\t}\n\t\t}\n\n\t\tlet pushLine = line;\n\t\tlet pushChar = char;\n\t\tif (this._dataIsSortedAndDeltaEncoded && this._dataLen > 0) {\n\t\t\tpushLine -= this._prevLine;\n\t\t\tif (pushLine === 0) {\n\t\t\t\tpushChar -= this._prevChar;\n\t\t\t}\n\t\t}\n\n\t\tthis._data[this._dataLen++] = pushLine;\n\t\tthis._data[this._dataLen++] = pushChar;\n\t\tthis._data[this._dataLen++] = length;\n\t\tthis._data[this._dataLen++] = tokenType;\n\t\tthis._data[this._dataLen++] = tokenModifiers;\n\n\t\tthis._prevLine = line;\n\t\tthis._prevChar = char;\n\t}\n\n\tprivate static _sortAndDeltaEncode(data: number[]): Uint32Array {\n\t\tlet pos: number[] = [];\n\t\tconst tokenCount = (data.length / 5) | 0;\n\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\tpos[i] = i;\n\t\t}\n\t\tpos.sort((a, b) => {\n\t\t\tconst aLine = data[5 * a];\n\t\t\tconst bLine = data[5 * b];\n\t\t\tif (aLine === bLine) {\n\t\t\t\tconst aChar = data[5 * a + 1];\n\t\t\t\tconst bChar = data[5 * b + 1];\n\t\t\t\treturn aChar - bChar;\n\t\t\t}\n\t\t\treturn aLine - bLine;\n\t\t});\n\t\tconst result = new Uint32Array(data.length);\n\t\tlet prevLine = 0;\n\t\tlet prevChar = 0;\n\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\tconst srcOffset = 5 * pos[i];\n\t\t\tconst line = data[srcOffset + 0];\n\t\t\tconst char = data[srcOffset + 1];\n\t\t\tconst length = data[srcOffset + 2];\n\t\t\tconst tokenType = data[srcOffset + 3];\n\t\t\tconst tokenModifiers = data[srcOffset + 4];\n\n\t\t\tconst pushLine = line - prevLine;\n\t\t\tconst pushChar = (pushLine === 0 ? char - prevChar : char);\n\n\t\t\tconst dstOffset = 5 * i;\n\t\t\tresult[dstOffset + 0] = pushLine;\n\t\t\tresult[dstOffset + 1] = pushChar;\n\t\t\tresult[dstOffset + 2] = length;\n\t\t\tresult[dstOffset + 3] = tokenType;\n\t\t\tresult[dstOffset + 4] = tokenModifiers;\n\n\t\t\tprevLine = line;\n\t\t\tprevChar = char;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic build(resultId?: string): SemanticTokens {\n\t\tif (!this._dataIsSortedAndDeltaEncoded) {\n\t\t\treturn new SemanticTokens(SemanticTokensBuilder._sortAndDeltaEncode(this._data), resultId);\n\t\t}\n\t\treturn new SemanticTokens(new Uint32Array(this._data), resultId);\n\t}\n}\n\nexport class SemanticTokens {\n\treadonly resultId?: string;\n\treadonly data: Uint32Array;\n\n\tconstructor(data: Uint32Array, resultId?: string) {\n\t\tthis.resultId = resultId;\n\t\tthis.data = data;\n\t}\n}\n\nexport class SemanticTokensEdit {\n\treadonly start: number;\n\treadonly deleteCount: number;\n\treadonly data?: Uint32Array;\n\n\tconstructor(start: number, deleteCount: number, data?: Uint32Array) {\n\t\tthis.start = start;\n\t\tthis.deleteCount = deleteCount;\n\t\tthis.data = data;\n\t}\n}\n\nexport class SemanticTokensEdits {\n\treadonly resultId?: string;\n\treadonly edits: SemanticTokensEdit[];\n\n\tconstructor(edits: SemanticTokensEdit[], resultId?: string) {\n\t\tthis.resultId = resultId;\n\t\tthis.edits = edits;\n\t}\n}\n\n//#endregion\n\n//#region debug\nexport enum DebugConsoleMode {\n\t/**\n\t * Debug session should have a separate debug console.\n\t */\n\tSeparate = 0,\n\n\t/**\n\t * Debug session should share debug console with its parent session.\n\t * This value has no effect for sessions which do not have a parent session.\n\t */\n\tMergeWithParent = 1\n}\n\nexport enum DebugConfigurationProviderTriggerKind {\n\t/**\n\t *\t`DebugConfigurationProvider.provideDebugConfigurations` is called to provide the initial debug configurations for a newly created launch.json.\n\t */\n\tInitial = 1,\n\t/**\n\t * `DebugConfigurationProvider.provideDebugConfigurations` is called to provide dynamically generated debug configurations when the user asks for them through the UI (e.g. via the \"Select and Start Debugging\" command).\n\t */\n\tDynamic = 2\n}\n\n//#endregion\n\n@es5ClassCompat\nexport class QuickInputButtons {\n\n\tstatic readonly Back: vscode.QuickInputButton = { iconPath: 'back.svg' };\n\n\tprivate constructor() { }\n}\n\nexport enum ExtensionKind {\n\tUI = 1,\n\tWorkspace = 2\n}\n\nexport class Decoration {\n\n\tstatic validate(d: Decoration): void {\n\t\tif (d.letter && d.letter.length !== 1) {\n\t\t\tthrow new Error(`The 'letter'-property must be undefined or a single character`);\n\t\t}\n\t\tif (!d.bubble && !d.color && !d.letter && !d.priority && !d.title) {\n\t\t\tthrow new Error(`The decoration is empty`);\n\t\t}\n\t}\n\n\tletter?: string;\n\ttitle?: string;\n\tcolor?: vscode.ThemeColor;\n\tpriority?: number;\n\tbubble?: boolean;\n}\n\n//#region Theming\n\n@es5ClassCompat\nexport class ColorTheme implements vscode.ColorTheme {\n\tconstructor(public readonly kind: ColorThemeKind) {\n\t}\n}\n\nexport enum ColorThemeKind {\n\tLight = 1,\n\tDark = 2,\n\tHighContrast = 3\n}\n\n//#endregion Theming\n\n//#region Notebook\n\nexport enum CellKind {\n\tMarkdown = 1,\n\tCode = 2\n}\n\nexport enum CellOutputKind {\n\tText = 1,\n\tError = 2,\n\tRich = 3\n}\n\nexport enum NotebookCellRunState {\n\tRunning = 1,\n\tIdle = 2,\n\tSuccess = 3,\n\tError = 4\n}\n\n//#endregion\n\n//#region Timeline\n\n@es5ClassCompat\nexport class TimelineItem implements vscode.TimelineItem {\n\tconstructor(public label: string, public timestamp: number) { }\n}\n\n//#endregion Timeline\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ok } from 'vs/base/common/assert';\nimport { Schemas } from 'vs/base/common/network';\nimport { regExpLeadsToEndlessLoop } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { MirrorTextModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/model/wordHelper';\nimport { MainThreadDocumentsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { EndOfLine, Position, Range } from 'vs/workbench/api/common/extHostTypes';\nimport type * as vscode from 'vscode';\nimport { equals } from 'vs/base/common/arrays';\n\nconst _modeId2WordDefinition = new Map<string, RegExp>();\nexport function setWordDefinitionFor(modeId: string, wordDefinition: RegExp | undefined): void {\n\tif (!wordDefinition) {\n\t\t_modeId2WordDefinition.delete(modeId);\n\t} else {\n\t\t_modeId2WordDefinition.set(modeId, wordDefinition);\n\t}\n}\n\nexport function getWordDefinitionFor(modeId: string): RegExp | undefined {\n\treturn _modeId2WordDefinition.get(modeId);\n}\n\nexport class ExtHostDocumentData extends MirrorTextModel {\n\n\tprivate _proxy: MainThreadDocumentsShape;\n\tprivate _languageId: string;\n\tprivate _isDirty: boolean;\n\tprivate _document?: vscode.TextDocument;\n\tprivate _isDisposed: boolean = false;\n\n\tconstructor(proxy: MainThreadDocumentsShape, uri: URI, lines: string[], eol: string,\n\t\tlanguageId: string, versionId: number, isDirty: boolean\n\t) {\n\t\tsuper(uri, lines, eol, versionId);\n\t\tthis._proxy = proxy;\n\t\tthis._languageId = languageId;\n\t\tthis._isDirty = isDirty;\n\t}\n\n\tdispose(): void {\n\t\t// we don't really dispose documents but let\n\t\t// extensions still read from them. some\n\t\t// operations, live saving, will now error tho\n\t\tok(!this._isDisposed);\n\t\tthis._isDisposed = true;\n\t\tthis._isDirty = false;\n\t}\n\n\tequalLines(lines: readonly string[]): boolean {\n\t\treturn equals(this._lines, lines);\n\t}\n\n\tget document(): vscode.TextDocument {\n\t\tif (!this._document) {\n\t\t\tconst data = this;\n\t\t\tthis._document = {\n\t\t\t\tget uri() { return data._uri; },\n\t\t\t\tget fileName() { return data._uri.fsPath; },\n\t\t\t\tget isUntitled() { return data._uri.scheme === Schemas.untitled; },\n\t\t\t\tget languageId() { return data._languageId; },\n\t\t\t\tget version() { return data._versionId; },\n\t\t\t\tget isClosed() { return data._isDisposed; },\n\t\t\t\tget isDirty() { return data._isDirty; },\n\t\t\t\tsave() { return data._save(); },\n\t\t\t\tgetText(range?) { return range ? data._getTextInRange(range) : data.getText(); },\n\t\t\t\tget eol() { return data._eol === '\\n' ? EndOfLine.LF : EndOfLine.CRLF; },\n\t\t\t\tget lineCount() { return data._lines.length; },\n\t\t\t\tlineAt(lineOrPos: number | vscode.Position) { return data._lineAt(lineOrPos); },\n\t\t\t\toffsetAt(pos) { return data._offsetAt(pos); },\n\t\t\t\tpositionAt(offset) { return data._positionAt(offset); },\n\t\t\t\tvalidateRange(ran) { return data._validateRange(ran); },\n\t\t\t\tvalidatePosition(pos) { return data._validatePosition(pos); },\n\t\t\t\tgetWordRangeAtPosition(pos, regexp?) { return data._getWordRangeAtPosition(pos, regexp); }\n\t\t\t};\n\t\t}\n\t\treturn Object.freeze(this._document);\n\t}\n\n\t_acceptLanguageId(newLanguageId: string): void {\n\t\tok(!this._isDisposed);\n\t\tthis._languageId = newLanguageId;\n\t}\n\n\t_acceptIsDirty(isDirty: boolean): void {\n\t\tok(!this._isDisposed);\n\t\tthis._isDirty = isDirty;\n\t}\n\n\tprivate _save(): Promise<boolean> {\n\t\tif (this._isDisposed) {\n\t\t\treturn Promise.reject(new Error('Document has been closed'));\n\t\t}\n\t\treturn this._proxy.$trySaveDocument(this._uri);\n\t}\n\n\tprivate _getTextInRange(_range: vscode.Range): string {\n\t\tconst range = this._validateRange(_range);\n\n\t\tif (range.isEmpty) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (range.isSingleLine) {\n\t\t\treturn this._lines[range.start.line].substring(range.start.character, range.end.character);\n\t\t}\n\n\t\tconst lineEnding = this._eol,\n\t\t\tstartLineIndex = range.start.line,\n\t\t\tendLineIndex = range.end.line,\n\t\t\tresultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.start.character));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.end.character));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tprivate _lineAt(lineOrPosition: number | vscode.Position): vscode.TextLine {\n\n\t\tlet line: number | undefined;\n\t\tif (lineOrPosition instanceof Position) {\n\t\t\tline = lineOrPosition.line;\n\t\t} else if (typeof lineOrPosition === 'number') {\n\t\t\tline = lineOrPosition;\n\t\t}\n\n\t\tif (typeof line !== 'number' || line < 0 || line >= this._lines.length || Math.floor(line) !== line) {\n\t\t\tthrow new Error('Illegal value for `line`');\n\t\t}\n\n\t\treturn new ExtHostDocumentLine(line, this._lines[line], line === this._lines.length - 1);\n\t}\n\n\tprivate _offsetAt(position: vscode.Position): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getAccumulatedValue(position.line - 1) + position.character;\n\t}\n\n\tprivate _positionAt(offset: number): vscode.Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tconst out = this._lineStarts!.getIndexOf(offset);\n\n\t\tconst lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn new Position(out.index, Math.min(out.remainder, lineLength));\n\t}\n\n\t// ---- range math\n\n\tprivate _validateRange(range: vscode.Range): vscode.Range {\n\t\tif (!(range instanceof Range)) {\n\t\t\tthrow new Error('Invalid argument');\n\t\t}\n\n\t\tconst start = this._validatePosition(range.start);\n\t\tconst end = this._validatePosition(range.end);\n\n\t\tif (start === range.start && end === range.end) {\n\t\t\treturn range;\n\t\t}\n\t\treturn new Range(start.line, start.character, end.line, end.character);\n\t}\n\n\tprivate _validatePosition(position: vscode.Position): vscode.Position {\n\t\tif (!(position instanceof Position)) {\n\t\t\tthrow new Error('Invalid argument');\n\t\t}\n\n\t\tif (this._lines.length === 0) {\n\t\t\treturn position.with(0, 0);\n\t\t}\n\n\t\tlet { line, character } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (line < 0) {\n\t\t\tline = 0;\n\t\t\tcharacter = 0;\n\t\t\thasChanged = true;\n\t\t}\n\t\telse if (line >= this._lines.length) {\n\t\t\tline = this._lines.length - 1;\n\t\t\tcharacter = this._lines[line].length;\n\t\t\thasChanged = true;\n\t\t}\n\t\telse {\n\t\t\tconst maxCharacter = this._lines[line].length;\n\t\t\tif (character < 0) {\n\t\t\t\tcharacter = 0;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (character > maxCharacter) {\n\t\t\t\tcharacter = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t}\n\t\treturn new Position(line, character);\n\t}\n\n\tprivate _getWordRangeAtPosition(_position: vscode.Position, regexp?: RegExp): vscode.Range | undefined {\n\t\tconst position = this._validatePosition(_position);\n\n\t\tif (!regexp) {\n\t\t\t// use default when custom-regexp isn't provided\n\t\t\tregexp = getWordDefinitionFor(this._languageId);\n\n\t\t} else if (regExpLeadsToEndlessLoop(regexp)) {\n\t\t\t// use default when custom-regexp is bad\n\t\t\tthrow new Error(`[getWordRangeAtPosition]: ignoring custom regexp '${regexp.source}' because it matches the empty string.`);\n\t\t}\n\n\t\tconst wordAtText = getWordAtText(\n\t\t\tposition.character + 1,\n\t\t\tensureValidWordDefinition(regexp),\n\t\t\tthis._lines[position.line],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.line, wordAtText.startColumn - 1, position.line, wordAtText.endColumn - 1);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class ExtHostDocumentLine implements vscode.TextLine {\n\n\tprivate readonly _line: number;\n\tprivate readonly _text: string;\n\tprivate readonly _isLastLine: boolean;\n\n\tconstructor(line: number, text: string, isLastLine: boolean) {\n\t\tthis._line = line;\n\t\tthis._text = text;\n\t\tthis._isLastLine = isLastLine;\n\t}\n\n\tpublic get lineNumber(): number {\n\t\treturn this._line;\n\t}\n\n\tpublic get text(): string {\n\t\treturn this._text;\n\t}\n\n\tpublic get range(): Range {\n\t\treturn new Range(this._line, 0, this._line, this._text.length);\n\t}\n\n\tpublic get rangeIncludingLineBreak(): Range {\n\t\tif (this._isLastLine) {\n\t\t\treturn this.range;\n\t\t}\n\t\treturn new Range(this._line, 0, this._line + 1, 0);\n\t}\n\n\tpublic get firstNonWhitespaceCharacterIndex(): number {\n\t\t//TODO@api, rename to 'leadingWhitespaceLength'\n\t\treturn /^(\\s*)/.exec(this._text)![1].length;\n\t}\n\n\tpublic get isEmptyOrWhitespace(): boolean {\n\t\treturn this.firstNonWhitespaceCharacterIndex === this._text.length;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorTheme, ColorThemeKind } from './extHostTypes';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ExtHostThemingShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { Emitter, Event } from 'vs/base/common/event';\n\nexport class ExtHostTheming implements ExtHostThemingShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _actual: ColorTheme;\n\tprivate _onDidChangeActiveColorTheme: Emitter<ColorTheme>;\n\n\tconstructor(\n\t\t@IExtHostRpcService _extHostRpc: IExtHostRpcService\n\t) {\n\t\tthis._actual = new ColorTheme(ColorThemeKind.Dark);\n\t\tthis._onDidChangeActiveColorTheme = new Emitter<ColorTheme>();\n\t}\n\n\tpublic get activeColorTheme(): ColorTheme {\n\t\treturn this._actual;\n\t}\n\n\t$onColorThemeChange(type: string): void {\n\t\tlet kind = type === 'light' ? ColorThemeKind.Light : type === 'dark' ? ColorThemeKind.Dark : ColorThemeKind.HighContrast;\n\t\tthis._actual = new ColorTheme(kind);\n\t\tthis._onDidChangeActiveColorTheme.fire(this._actual);\n\t}\n\n\tpublic get onDidChangeActiveColorTheme(): Event<ColorTheme> {\n\t\treturn this._onDidChangeActiveColorTheme.event;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport interface IURITransformerService extends IURITransformer {\n\t_serviceBrand: undefined;\n}\n\nexport const IURITransformerService = createDecorator<IURITransformerService>('IURITransformerService');\n\nexport class URITransformerService implements IURITransformerService {\n\t_serviceBrand: undefined;\n\n\ttransformIncoming: (uri: UriComponents) => UriComponents;\n\ttransformOutgoing: (uri: UriComponents) => UriComponents;\n\ttransformOutgoingURI: (uri: URI) => URI;\n\ttransformOutgoingScheme: (scheme: string) => string;\n\n\tconstructor(delegate: IURITransformer | null) {\n\t\tif (!delegate) {\n\t\t\tthis.transformIncoming = arg => arg;\n\t\t\tthis.transformOutgoing = arg => arg;\n\t\t\tthis.transformOutgoingURI = arg => arg;\n\t\t\tthis.transformOutgoingScheme = arg => arg;\n\t\t} else {\n\t\t\tthis.transformIncoming = delegate.transformIncoming.bind(delegate);\n\t\t\tthis.transformOutgoing = delegate.transformOutgoing.bind(delegate);\n\t\t\tthis.transformOutgoingURI = delegate.transformOutgoingURI.bind(delegate);\n\t\t\tthis.transformOutgoingScheme = delegate.transformOutgoingScheme.bind(delegate);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\n\nexport interface IFullSemanticTokensDto {\n\tid: number;\n\ttype: 'full';\n\tdata: Uint32Array;\n}\n\nexport interface IDeltaSemanticTokensDto {\n\tid: number;\n\ttype: 'delta';\n\tdeltas: { start: number; deleteCount: number; data?: Uint32Array; }[];\n}\n\nexport type ISemanticTokensDto = IFullSemanticTokensDto | IDeltaSemanticTokensDto;\n\nconst enum EncodedSemanticTokensType {\n\tFull = 1,\n\tDelta = 2\n}\n\nfunction reverseEndianness(arr: Uint8Array): void {\n\tfor (let i = 0, len = arr.length; i < len; i += 4) {\n\t\t// flip bytes 0<->3 and 1<->2\n\t\tconst b0 = arr[i + 0];\n\t\tconst b1 = arr[i + 1];\n\t\tconst b2 = arr[i + 2];\n\t\tconst b3 = arr[i + 3];\n\t\tarr[i + 0] = b3;\n\t\tarr[i + 1] = b2;\n\t\tarr[i + 2] = b1;\n\t\tarr[i + 3] = b0;\n\t}\n}\n\nfunction toLittleEndianBuffer(arr: Uint32Array): VSBuffer {\n\tconst uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n\tif (!platform.isLittleEndian()) {\n\t\t// the byte order must be changed\n\t\treverseEndianness(uint8Arr);\n\t}\n\treturn VSBuffer.wrap(uint8Arr);\n}\n\nfunction fromLittleEndianBuffer(buff: VSBuffer): Uint32Array {\n\tconst uint8Arr = buff.buffer;\n\tif (!platform.isLittleEndian()) {\n\t\t// the byte order must be changed\n\t\treverseEndianness(uint8Arr);\n\t}\n\tif (uint8Arr.byteOffset % 4 === 0) {\n\t\treturn new Uint32Array(uint8Arr.buffer, uint8Arr.byteOffset, uint8Arr.length / 4);\n\t} else {\n\t\t// unaligned memory access doesn't work on all platforms\n\t\tconst data = new Uint8Array(uint8Arr.byteLength);\n\t\tdata.set(uint8Arr);\n\t\treturn new Uint32Array(data.buffer, data.byteOffset, data.length / 4);\n\t}\n}\n\nexport function encodeSemanticTokensDto(semanticTokens: ISemanticTokensDto): VSBuffer {\n\tconst dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n\tlet offset = 0;\n\tdest[offset++] = semanticTokens.id;\n\tif (semanticTokens.type === 'full') {\n\t\tdest[offset++] = EncodedSemanticTokensType.Full;\n\t\tdest[offset++] = semanticTokens.data.length;\n\t\tdest.set(semanticTokens.data, offset); offset += semanticTokens.data.length;\n\t} else {\n\t\tdest[offset++] = EncodedSemanticTokensType.Delta;\n\t\tdest[offset++] = semanticTokens.deltas.length;\n\t\tfor (const delta of semanticTokens.deltas) {\n\t\t\tdest[offset++] = delta.start;\n\t\t\tdest[offset++] = delta.deleteCount;\n\t\t\tif (delta.data) {\n\t\t\t\tdest[offset++] = delta.data.length;\n\t\t\t\tdest.set(delta.data, offset); offset += delta.data.length;\n\t\t\t} else {\n\t\t\t\tdest[offset++] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn toLittleEndianBuffer(dest);\n}\n\nfunction encodeSemanticTokensDtoSize(semanticTokens: ISemanticTokensDto): number {\n\tlet result = 0;\n\tresult += (\n\t\t+ 1 // id\n\t\t+ 1 // type\n\t);\n\tif (semanticTokens.type === 'full') {\n\t\tresult += (\n\t\t\t+ 1 // data length\n\t\t\t+ semanticTokens.data.length\n\t\t);\n\t} else {\n\t\tresult += (\n\t\t\t+ 1 // delta count\n\t\t);\n\t\tresult += (\n\t\t\t+ 1 // start\n\t\t\t+ 1 // deleteCount\n\t\t\t+ 1 // data length\n\t\t) * semanticTokens.deltas.length;\n\t\tfor (const delta of semanticTokens.deltas) {\n\t\t\tif (delta.data) {\n\t\t\t\tresult += delta.data.length;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function decodeSemanticTokensDto(_buff: VSBuffer): ISemanticTokensDto {\n\tconst src = fromLittleEndianBuffer(_buff);\n\tlet offset = 0;\n\tconst id = src[offset++];\n\tconst type: EncodedSemanticTokensType = src[offset++];\n\tif (type === EncodedSemanticTokensType.Full) {\n\t\tconst length = src[offset++];\n\t\tconst data = src.subarray(offset, offset + length); offset += length;\n\t\treturn {\n\t\t\tid: id,\n\t\t\ttype: 'full',\n\t\t\tdata: data\n\t\t};\n\t}\n\tconst deltaCount = src[offset++];\n\tlet deltas: { start: number; deleteCount: number; data?: Uint32Array; }[] = [];\n\tfor (let i = 0; i < deltaCount; i++) {\n\t\tconst start = src[offset++];\n\t\tconst deleteCount = src[offset++];\n\t\tconst length = src[offset++];\n\t\tlet data: Uint32Array | undefined;\n\t\tif (length > 0) {\n\t\t\tdata = src.subarray(offset, offset + length); offset += length;\n\t\t}\n\t\tdeltas[i] = { start, deleteCount, data };\n\t}\n\treturn {\n\t\tid: id,\n\t\ttype: 'delta',\n\t\tdeltas: deltas\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport type * as vscode from 'vscode';\n\nexport interface WebviewInitData {\n\treadonly isExtensionDevelopmentDebug: boolean;\n\treadonly webviewResourceRoot: string;\n\treadonly webviewCspSource: string;\n}\n\nexport function asWebviewUri(\n\tinitData: WebviewInitData,\n\tuuid: string,\n\tresource: vscode.Uri,\n): vscode.Uri {\n\tconst uri = initData.webviewResourceRoot\n\t\t// Make sure we preserve the scheme of the resource but convert it into a normal path segment\n\t\t// The scheme is important as we need to know if we are requesting a local or a remote resource.\n\t\t.replace('{{resource}}', resource.scheme + withoutScheme(resource))\n\t\t.replace('{{uuid}}', uuid);\n\treturn URI.parse(uri);\n}\n\nfunction withoutScheme(resource: vscode.Uri): string {\n\treturn resource.toString().replace(/^\\S+?:/, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ExtHostTextEditor } from 'vs/workbench/api/common/extHostTextEditor';\nimport { ExtHostEditors } from 'vs/workbench/api/common/extHostTextEditors';\nimport type * as vscode from 'vscode';\nimport { ExtHostEditorInsetsShape, MainThreadEditorInsetsShape } from './extHost.protocol';\nimport { asWebviewUri, WebviewInitData } from 'vs/workbench/api/common/shared/webview';\nimport { generateUuid } from 'vs/base/common/uuid';\n\nexport class ExtHostEditorInsets implements ExtHostEditorInsetsShape {\n\n\tprivate _handlePool = 0;\n\tprivate _disposables = new DisposableStore();\n\tprivate _insets = new Map<number, { editor: vscode.TextEditor, inset: vscode.WebviewEditorInset, onDidReceiveMessage: Emitter<any> }>();\n\n\tconstructor(\n\t\tprivate readonly _proxy: MainThreadEditorInsetsShape,\n\t\tprivate readonly _editors: ExtHostEditors,\n\t\tprivate readonly _initData: WebviewInitData\n\t) {\n\n\t\t// dispose editor inset whenever the hosting editor goes away\n\t\tthis._disposables.add(_editors.onDidChangeVisibleTextEditors(() => {\n\t\t\tconst visibleEditor = _editors.getVisibleTextEditors();\n\t\t\tthis._insets.forEach(value => {\n\t\t\t\tif (visibleEditor.indexOf(value.editor) < 0) {\n\t\t\t\t\tvalue.inset.dispose(); // will remove from `this._insets`\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._insets.forEach(value => value.inset.dispose());\n\t\tthis._disposables.dispose();\n\t}\n\n\tcreateWebviewEditorInset(editor: vscode.TextEditor, line: number, height: number, options: vscode.WebviewOptions | undefined, extension: IExtensionDescription): vscode.WebviewEditorInset {\n\n\t\tlet apiEditor: ExtHostTextEditor | undefined;\n\t\tfor (const candidate of this._editors.getVisibleTextEditors()) {\n\t\t\tif (candidate === editor) {\n\t\t\t\tapiEditor = <ExtHostTextEditor>candidate;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!apiEditor) {\n\t\t\tthrow new Error('not a visible editor');\n\t\t}\n\n\t\tconst that = this;\n\t\tconst handle = this._handlePool++;\n\t\tconst onDidReceiveMessage = new Emitter<any>();\n\t\tconst onDidDispose = new Emitter<void>();\n\n\t\tconst webview = new class implements vscode.Webview {\n\n\t\t\tprivate readonly _uuid = generateUuid();\n\t\t\tprivate _html: string = '';\n\t\t\tprivate _options: vscode.WebviewOptions = Object.create(null);\n\n\t\t\tasWebviewUri(resource: vscode.Uri): vscode.Uri {\n\t\t\t\treturn asWebviewUri(that._initData, this._uuid, resource);\n\t\t\t}\n\n\t\t\tget cspSource(): string {\n\t\t\t\treturn that._initData.webviewCspSource;\n\t\t\t}\n\n\t\t\tset options(value: vscode.WebviewOptions) {\n\t\t\t\tthis._options = value;\n\t\t\t\tthat._proxy.$setOptions(handle, value);\n\t\t\t}\n\n\t\t\tget options(): vscode.WebviewOptions {\n\t\t\t\treturn this._options;\n\t\t\t}\n\n\t\t\tset html(value: string) {\n\t\t\t\tthis._html = value;\n\t\t\t\tthat._proxy.$setHtml(handle, value);\n\t\t\t}\n\n\t\t\tget html(): string {\n\t\t\t\treturn this._html;\n\t\t\t}\n\n\t\t\tget onDidReceiveMessage(): vscode.Event<any> {\n\t\t\t\treturn onDidReceiveMessage.event;\n\t\t\t}\n\n\t\t\tpostMessage(message: any): Thenable<boolean> {\n\t\t\t\treturn that._proxy.$postMessage(handle, message);\n\t\t\t}\n\t\t};\n\n\t\tconst inset = new class implements vscode.WebviewEditorInset {\n\n\t\t\treadonly editor: vscode.TextEditor = editor;\n\t\t\treadonly line: number = line;\n\t\t\treadonly height: number = height;\n\t\t\treadonly webview: vscode.Webview = webview;\n\t\t\treadonly onDidDispose: vscode.Event<void> = onDidDispose.event;\n\n\t\t\tdispose(): void {\n\t\t\t\tif (that._insets.has(handle)) {\n\t\t\t\t\tthat._insets.delete(handle);\n\t\t\t\t\tthat._proxy.$disposeEditorInset(handle);\n\t\t\t\t\tonDidDispose.fire();\n\n\t\t\t\t\t// final cleanup\n\t\t\t\t\tonDidDispose.dispose();\n\t\t\t\t\tonDidReceiveMessage.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._proxy.$createEditorInset(handle, apiEditor.id, apiEditor.document.uri, line + 1, height, options || {}, extension.identifier, extension.extensionLocation);\n\t\tthis._insets.set(handle, { editor, inset, onDidReceiveMessage });\n\n\t\treturn inset;\n\t}\n\n\t$onDidDispose(handle: number): void {\n\t\tconst value = this._insets.get(handle);\n\t\tif (value) {\n\t\t\tvalue.inset.dispose();\n\t\t}\n\t}\n\n\t$onDidReceiveMessage(handle: number, message: any): void {\n\t\tconst value = this._insets.get(handle);\n\t\tif (value) {\n\t\t\tvalue.onDidReceiveMessage.fire(message);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as objects from 'vs/base/common/objects';\nimport { Emitter } from 'vs/base/common/event';\nimport { basename, extname, relativePath } from 'vs/base/common/resources';\nimport { RawContextKey, IContextKeyService, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { Schemas } from 'vs/base/common/network';\n\nexport class ResourceContextKey extends Disposable implements IContextKey<URI> {\n\n\t// NOTE: DO NOT CHANGE THE DEFAULT VALUE TO ANYTHING BUT\n\t// UNDEFINED! IT IS IMPORTANT THAT DEFAULTS ARE INHERITED\n\t// FROM THE PARENT CONTEXT AND ONLY UNDEFINED DOES THIS\n\n\tstatic readonly Scheme = new RawContextKey<string>('resourceScheme', undefined);\n\tstatic readonly Filename = new RawContextKey<string>('resourceFilename', undefined);\n\tstatic readonly LangId = new RawContextKey<string>('resourceLangId', undefined);\n\tstatic readonly Resource = new RawContextKey<URI>('resource', undefined);\n\tstatic readonly Extension = new RawContextKey<string>('resourceExtname', undefined);\n\tstatic readonly HasResource = new RawContextKey<boolean>('resourceSet', undefined);\n\tstatic readonly IsFileSystemResource = new RawContextKey<boolean>('isFileSystemResource', undefined);\n\n\tprivate readonly _resourceKey: IContextKey<URI | null>;\n\tprivate readonly _schemeKey: IContextKey<string | null>;\n\tprivate readonly _filenameKey: IContextKey<string | null>;\n\tprivate readonly _langIdKey: IContextKey<string | null>;\n\tprivate readonly _extensionKey: IContextKey<string | null>;\n\tprivate readonly _hasResource: IContextKey<boolean>;\n\tprivate readonly _isFileSystemResource: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IModeService private readonly _modeService: IModeService\n\t) {\n\t\tsuper();\n\n\t\tthis._schemeKey = ResourceContextKey.Scheme.bindTo(contextKeyService);\n\t\tthis._filenameKey = ResourceContextKey.Filename.bindTo(contextKeyService);\n\t\tthis._langIdKey = ResourceContextKey.LangId.bindTo(contextKeyService);\n\t\tthis._resourceKey = ResourceContextKey.Resource.bindTo(contextKeyService);\n\t\tthis._extensionKey = ResourceContextKey.Extension.bindTo(contextKeyService);\n\t\tthis._hasResource = ResourceContextKey.HasResource.bindTo(contextKeyService);\n\t\tthis._isFileSystemResource = ResourceContextKey.IsFileSystemResource.bindTo(contextKeyService);\n\n\t\tthis._register(_fileService.onDidChangeFileSystemProviderRegistrations(() => {\n\t\t\tconst resource = this._resourceKey.get();\n\t\t\tthis._isFileSystemResource.set(Boolean(resource && _fileService.canHandleResource(resource)));\n\t\t}));\n\n\t\tthis._register(_modeService.onDidCreateMode(() => {\n\t\t\tconst value = this._resourceKey.get();\n\t\t\tthis._langIdKey.set(value ? this._modeService.getModeIdByFilepathOrFirstLine(value) : null);\n\t\t}));\n\t}\n\n\tset(value: URI | null) {\n\t\tif (!ResourceContextKey._uriEquals(this._resourceKey.get(), value)) {\n\t\t\tthis._resourceKey.set(value);\n\t\t\t// NOTE@coder: Fixes extensions matching against file schemas.\n\t\t\tthis._schemeKey.set(value ? (value.scheme === Schemas.vscodeRemote ? Schemas.file : value.scheme) : null);\n\t\t\tthis._filenameKey.set(value ? basename(value) : null);\n\t\t\tthis._langIdKey.set(value ? this._modeService.getModeIdByFilepathOrFirstLine(value) : null);\n\t\t\tthis._extensionKey.set(value ? extname(value) : null);\n\t\t\tthis._hasResource.set(!!value);\n\t\t\tthis._isFileSystemResource.set(value ? this._fileService.canHandleResource(value) : false);\n\t\t}\n\t}\n\n\treset(): void {\n\t\tthis._schemeKey.reset();\n\t\tthis._langIdKey.reset();\n\t\tthis._resourceKey.reset();\n\t\tthis._langIdKey.reset();\n\t\tthis._extensionKey.reset();\n\t\tthis._hasResource.reset();\n\t\tthis._isFileSystemResource.reset();\n\t}\n\n\tget(): URI | undefined {\n\t\treturn withNullAsUndefined(this._resourceKey.get());\n\t}\n\n\tprivate static _uriEquals(a: URI | undefined | null, b: URI | undefined | null): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.scheme === b.scheme // checks for not equals (fail fast)\n\t\t\t&& a.authority === b.authority\n\t\t\t&& a.path === b.path\n\t\t\t&& a.query === b.query\n\t\t\t&& a.fragment === b.fragment\n\t\t\t&& a.toString() === b.toString(); // for equal we use the normalized toString-form\n\t}\n}\n\nexport class ResourceGlobMatcher extends Disposable {\n\n\tprivate static readonly NO_ROOT: string | null = null;\n\n\tprivate readonly _onExpressionChange = this._register(new Emitter<void>());\n\treadonly onExpressionChange = this._onExpressionChange.event;\n\n\tprivate readonly mapRootToParsedExpression = new Map<string | null, ParsedExpression>();\n\tprivate readonly mapRootToExpressionConfig = new Map<string | null, IExpression>();\n\n\tconstructor(\n\t\tprivate globFn: (root?: URI) => IExpression,\n\t\tprivate shouldUpdate: (event: IConfigurationChangeEvent) => boolean,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.updateExcludes(false);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (this.shouldUpdate(e)) {\n\t\t\t\tthis.updateExcludes(true);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(() => this.updateExcludes(true)));\n\t}\n\n\tprivate updateExcludes(fromEvent: boolean): void {\n\t\tlet changed = false;\n\n\t\t// Add excludes per workspaces that got added\n\t\tthis.contextService.getWorkspace().folders.forEach(folder => {\n\t\t\tconst rootExcludes = this.globFn(folder.uri);\n\t\t\tif (!this.mapRootToExpressionConfig.has(folder.uri.toString()) || !objects.equals(this.mapRootToExpressionConfig.get(folder.uri.toString()), rootExcludes)) {\n\t\t\t\tchanged = true;\n\n\t\t\t\tthis.mapRootToParsedExpression.set(folder.uri.toString(), parse(rootExcludes));\n\t\t\t\tthis.mapRootToExpressionConfig.set(folder.uri.toString(), objects.deepClone(rootExcludes));\n\t\t\t}\n\t\t});\n\n\t\t// Remove excludes per workspace no longer present\n\t\tthis.mapRootToExpressionConfig.forEach((value, root) => {\n\t\t\tif (root === ResourceGlobMatcher.NO_ROOT) {\n\t\t\t\treturn; // always keep this one\n\t\t\t}\n\n\t\t\tif (root && !this.contextService.getWorkspaceFolder(URI.parse(root))) {\n\t\t\t\tthis.mapRootToParsedExpression.delete(root);\n\t\t\t\tthis.mapRootToExpressionConfig.delete(root);\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t});\n\n\t\t// Always set for resources outside root as well\n\t\tconst globalExcludes = this.globFn();\n\t\tif (!this.mapRootToExpressionConfig.has(ResourceGlobMatcher.NO_ROOT) || !objects.equals(this.mapRootToExpressionConfig.get(ResourceGlobMatcher.NO_ROOT), globalExcludes)) {\n\t\t\tchanged = true;\n\n\t\t\tthis.mapRootToParsedExpression.set(ResourceGlobMatcher.NO_ROOT, parse(globalExcludes));\n\t\t\tthis.mapRootToExpressionConfig.set(ResourceGlobMatcher.NO_ROOT, objects.deepClone(globalExcludes));\n\t\t}\n\n\t\tif (fromEvent && changed) {\n\t\t\tthis._onExpressionChange.fire();\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst folder = this.contextService.getWorkspaceFolder(resource);\n\n\t\tlet expressionForRoot: ParsedExpression | undefined;\n\t\tif (folder && this.mapRootToParsedExpression.has(folder.uri.toString())) {\n\t\t\texpressionForRoot = this.mapRootToParsedExpression.get(folder.uri.toString());\n\t\t} else {\n\t\t\texpressionForRoot = this.mapRootToParsedExpression.get(ResourceGlobMatcher.NO_ROOT);\n\t\t}\n\n\t\t// If the resource if from a workspace, convert its absolute path to a relative\n\t\t// path so that glob patterns have a higher probability to match. For example\n\t\t// a glob pattern of \"src/**\" will not match on an absolute path \"/folder/src/file.txt\"\n\t\t// but can match on \"src/file.txt\"\n\t\tlet resourcePathToMatch: string | undefined;\n\t\tif (folder) {\n\t\t\tresourcePathToMatch = relativePath(folder.uri, resource); // always uses forward slashes\n\t\t} else {\n\t\t\tresourcePathToMatch = resource.fsPath; // TODO@isidor: support non-file URIs\n\t\t}\n\n\t\treturn !!expressionForRoot && typeof resourcePathToMatch === 'string' && !!expressionForRoot(resourcePathToMatch);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDebugAdapter } from 'vs/workbench/contrib/debug/common/debug';\nimport { timeout } from 'vs/base/common/async';\n\n/**\n * Abstract implementation of the low level API for a debug adapter.\n * Missing is how this API communicates with the debug adapter.\n */\nexport abstract class AbstractDebugAdapter implements IDebugAdapter {\n\tprivate sequence: number;\n\tprivate pendingRequests = new Map<number, (e: DebugProtocol.Response) => void>();\n\tprivate requestCallback: ((request: DebugProtocol.Request) => void) | undefined;\n\tprivate eventCallback: ((request: DebugProtocol.Event) => void) | undefined;\n\tprivate messageCallback: ((message: DebugProtocol.ProtocolMessage) => void) | undefined;\n\tprivate queue: DebugProtocol.ProtocolMessage[] = [];\n\tprotected readonly _onError = new Emitter<Error>();\n\tprotected readonly _onExit = new Emitter<number | null>();\n\n\tconstructor() {\n\t\tthis.sequence = 1;\n\t}\n\n\tabstract startSession(): Promise<void>;\n\n\tabstract stopSession(): Promise<void>;\n\n\tabstract sendMessage(message: DebugProtocol.ProtocolMessage): void;\n\n\tget onError(): Event<Error> {\n\t\treturn this._onError.event;\n\t}\n\n\tget onExit(): Event<number | null> {\n\t\treturn this._onExit.event;\n\t}\n\n\tonMessage(callback: (message: DebugProtocol.ProtocolMessage) => void): void {\n\t\tif (this.eventCallback) {\n\t\t\tthis._onError.fire(new Error(`attempt to set more than one 'Message' callback`));\n\t\t}\n\t\tthis.messageCallback = callback;\n\t}\n\n\tonEvent(callback: (event: DebugProtocol.Event) => void): void {\n\t\tif (this.eventCallback) {\n\t\t\tthis._onError.fire(new Error(`attempt to set more than one 'Event' callback`));\n\t\t}\n\t\tthis.eventCallback = callback;\n\t}\n\n\tonRequest(callback: (request: DebugProtocol.Request) => void): void {\n\t\tif (this.requestCallback) {\n\t\t\tthis._onError.fire(new Error(`attempt to set more than one 'Request' callback`));\n\t\t}\n\t\tthis.requestCallback = callback;\n\t}\n\n\tsendResponse(response: DebugProtocol.Response): void {\n\t\tif (response.seq > 0) {\n\t\t\tthis._onError.fire(new Error(`attempt to send more than one response for command ${response.command}`));\n\t\t} else {\n\t\t\tthis.internalSend('response', response);\n\t\t}\n\t}\n\n\tsendRequest(command: string, args: any, clb: (result: DebugProtocol.Response) => void, timeout?: number): number {\n\t\tconst request: any = {\n\t\t\tcommand: command\n\t\t};\n\t\tif (args && Object.keys(args).length > 0) {\n\t\t\trequest.arguments = args;\n\t\t}\n\t\tthis.internalSend('request', request);\n\t\tif (typeof timeout === 'number') {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\tclearTimeout(timer);\n\t\t\t\tconst clb = this.pendingRequests.get(request.seq);\n\t\t\t\tif (clb) {\n\t\t\t\t\tthis.pendingRequests.delete(request.seq);\n\t\t\t\t\tconst err: DebugProtocol.Response = {\n\t\t\t\t\t\ttype: 'response',\n\t\t\t\t\t\tseq: 0,\n\t\t\t\t\t\trequest_seq: request.seq,\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\tmessage: `timeout after ${timeout} ms`\n\t\t\t\t\t};\n\t\t\t\t\tclb(err);\n\t\t\t\t}\n\t\t\t}, timeout);\n\t\t}\n\t\tif (clb) {\n\t\t\t// store callback for this request\n\t\t\tthis.pendingRequests.set(request.seq, clb);\n\t\t}\n\n\t\treturn request.seq;\n\t}\n\n\tacceptMessage(message: DebugProtocol.ProtocolMessage): void {\n\t\tif (this.messageCallback) {\n\t\t\tthis.messageCallback(message);\n\t\t} else {\n\t\t\tthis.queue.push(message);\n\t\t\tif (this.queue.length === 1) {\n\t\t\t\t// first item = need to start processing loop\n\t\t\t\tthis.processQueue();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether we should insert a timeout between processing messageA\n\t * and messageB. Artificially queueing protocol messages guarantees that any\n\t * microtasks for previous message finish before next message is processed.\n\t * This is essential ordering when using promises anywhere along the call path.\n\t *\n\t * For example, take the following, where `chooseAndSendGreeting` returns\n\t * a person name and then emits a greeting event:\n\t *\n\t * ```\n\t * let person: string;\n\t * adapter.onGreeting(() => console.log('hello', person));\n\t * person = await adapter.chooseAndSendGreeting();\n\t * ```\n\t *\n\t * Because the event is dispatched synchronously, it may fire before person\n\t * is assigned if they're processed in the same task. Inserting a task\n\t * boundary avoids this issue.\n\t */\n\tprotected needsTaskBoundaryBetween(messageA: DebugProtocol.ProtocolMessage, messageB: DebugProtocol.ProtocolMessage) {\n\t\treturn messageA.type !== 'event' || messageB.type !== 'event';\n\t}\n\n\t/**\n\t * Reads and dispatches items from the queue until it is empty.\n\t */\n\tprivate async processQueue() {\n\t\tlet message: DebugProtocol.ProtocolMessage | undefined;\n\t\twhile (this.queue.length) {\n\t\t\tif (!message || this.needsTaskBoundaryBetween(this.queue[0], message)) {\n\t\t\t\tawait timeout(0);\n\t\t\t}\n\n\t\t\tmessage = this.queue.shift();\n\t\t\tif (!message) {\n\t\t\t\treturn; // may have been disposed of\n\t\t\t}\n\n\t\t\tswitch (message.type) {\n\t\t\t\tcase 'event':\n\t\t\t\t\tif (this.eventCallback) {\n\t\t\t\t\t\tthis.eventCallback(<DebugProtocol.Event>message);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'request':\n\t\t\t\t\tif (this.requestCallback) {\n\t\t\t\t\t\tthis.requestCallback(<DebugProtocol.Request>message);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'response':\n\t\t\t\t\tconst response = <DebugProtocol.Response>message;\n\t\t\t\t\tconst clb = this.pendingRequests.get(response.request_seq);\n\t\t\t\t\tif (clb) {\n\t\t\t\t\t\tthis.pendingRequests.delete(response.request_seq);\n\t\t\t\t\t\tclb(response);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate internalSend(typ: 'request' | 'response' | 'event', message: DebugProtocol.ProtocolMessage): void {\n\t\tmessage.type = typ;\n\t\tmessage.seq = this.sequence++;\n\t\tthis.sendMessage(message);\n\t}\n\n\tprotected async cancelPendingRequests(): Promise<void> {\n\t\tif (this.pendingRequests.size === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst pending = new Map<number, (e: DebugProtocol.Response) => void>();\n\t\tthis.pendingRequests.forEach((value, key) => pending.set(key, value));\n\t\tawait timeout(500);\n\t\tpending.forEach((callback, request_seq) => {\n\t\t\tconst err: DebugProtocol.Response = {\n\t\t\t\ttype: 'response',\n\t\t\t\tseq: 0,\n\t\t\t\trequest_seq,\n\t\t\t\tsuccess: false,\n\t\t\t\tcommand: 'canceled',\n\t\t\t\tmessage: 'canceled'\n\t\t\t};\n\t\t\tcallback(err);\n\t\t\tthis.pendingRequests.delete(request_seq);\n\t\t});\n\t}\n\n\tgetPendingRequestIds(): number[] {\n\t\treturn Array.from(this.pendingRequests.keys());\n\t}\n\n\tdispose(): void {\n\t\tthis.queue = [];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { IDebuggerContribution, IDebugSession, IConfigPresentation } from 'vs/workbench/contrib/debug/common/debug';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { isAbsolute } from 'vs/base/common/path';\nimport { deepClone } from 'vs/base/common/objects';\n\nconst _formatPIIRegexp = /{([^}]+)}/g;\n\nexport function formatPII(value: string, excludePII: boolean, args: { [key: string]: string } | undefined): string {\n\treturn value.replace(_formatPIIRegexp, function (match, group) {\n\t\tif (excludePII && group.length > 0 && group[0] !== '_') {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn args && args.hasOwnProperty(group) ?\n\t\t\targs[group] :\n\t\t\tmatch;\n\t});\n}\n\nexport function isSessionAttach(session: IDebugSession): boolean {\n\treturn session.configuration.request === 'attach' && !getExtensionHostDebugSession(session);\n}\n\n/**\n * Returns the session or any parent which is an extension host debug session.\n * Returns undefined if there's none.\n */\nexport function getExtensionHostDebugSession(session: IDebugSession): IDebugSession | void {\n\tlet type = session.configuration.type;\n\tif (!type) {\n\t\treturn;\n\t}\n\n\tif (type === 'vslsShare') {\n\t\ttype = (<any>session.configuration).adapterProxy.configuration.type;\n\t}\n\n\tif (equalsIgnoreCase(type, 'extensionhost') || equalsIgnoreCase(type, 'pwa-extensionhost')) {\n\t\treturn session;\n\t}\n\n\treturn session.parentSession ? getExtensionHostDebugSession(session.parentSession) : undefined;\n}\n\n// only a debugger contributions with a label, program, or runtime attribute is considered a \"defining\" or \"main\" debugger contribution\nexport function isDebuggerMainContribution(dbg: IDebuggerContribution) {\n\treturn dbg.type && (dbg.label || dbg.program || dbg.runtime);\n}\n\nexport function getExactExpressionStartAndEnd(lineContent: string, looseStart: number, looseEnd: number): { start: number, end: number } {\n\tlet matchingExpression: string | undefined = undefined;\n\tlet startOffset = 0;\n\n\t// Some example supported expressions: myVar.prop, a.b.c.d, myVar?.prop, myVar->prop, MyClass::StaticProp, *myVar\n\t// Match any character except a set of characters which often break interesting sub-expressions\n\tlet expression: RegExp = /([^()\\[\\]{}<>\\s+\\-/%~#^;=|,`!]|\\->)+/g;\n\tlet result: RegExpExecArray | null = null;\n\n\t// First find the full expression under the cursor\n\twhile (result = expression.exec(lineContent)) {\n\t\tlet start = result.index + 1;\n\t\tlet end = start + result[0].length;\n\n\t\tif (start <= looseStart && end >= looseEnd) {\n\t\t\tmatchingExpression = result[0];\n\t\t\tstartOffset = start;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// If there are non-word characters after the cursor, we want to truncate the expression then.\n\t// For example in expression 'a.b.c.d', if the focus was under 'b', 'a.b' would be evaluated.\n\tif (matchingExpression) {\n\t\tlet subExpression: RegExp = /\\w+/g;\n\t\tlet subExpressionResult: RegExpExecArray | null = null;\n\t\twhile (subExpressionResult = subExpression.exec(matchingExpression)) {\n\t\t\tlet subEnd = subExpressionResult.index + 1 + startOffset + subExpressionResult[0].length;\n\t\t\tif (subEnd >= looseEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (subExpressionResult) {\n\t\t\tmatchingExpression = matchingExpression.substring(0, subExpression.lastIndex);\n\t\t}\n\t}\n\n\treturn matchingExpression ?\n\t\t{ start: startOffset, end: startOffset + matchingExpression.length - 1 } :\n\t\t{ start: 0, end: 0 };\n}\n\n// RFC 2396, Appendix A: https://www.ietf.org/rfc/rfc2396.txt\nconst _schemePattern = /^[a-zA-Z][a-zA-Z0-9\\+\\-\\.]+:/;\n\nexport function isUri(s: string | undefined): boolean {\n\t// heuristics: a valid uri starts with a scheme and\n\t// the scheme has at least 2 characters so that it doesn't look like a drive letter.\n\treturn !!(s && s.match(_schemePattern));\n}\n\nfunction stringToUri(source: PathContainer): string | undefined {\n\tif (typeof source.path === 'string') {\n\t\tif (typeof source.sourceReference === 'number' && source.sourceReference > 0) {\n\t\t\t// if there is a source reference, don't touch path\n\t\t} else {\n\t\t\tif (isUri(source.path)) {\n\t\t\t\treturn <string><unknown>uri.parse(source.path);\n\t\t\t} else {\n\t\t\t\t// assume path\n\t\t\t\tif (isAbsolute(source.path)) {\n\t\t\t\t\treturn <string><unknown>uri.file(source.path);\n\t\t\t\t} else {\n\t\t\t\t\t// leave relative path as is\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn source.path;\n}\n\nfunction uriToString(source: PathContainer): string | undefined {\n\tif (typeof source.path === 'object') {\n\t\tconst u = uri.revive(source.path);\n\t\tif (u) {\n\t\t\tif (u.scheme === 'file') {\n\t\t\t\treturn u.fsPath;\n\t\t\t} else {\n\t\t\t\treturn u.toString();\n\t\t\t}\n\t\t}\n\t}\n\treturn source.path;\n}\n\n// path hooks helpers\n\ninterface PathContainer {\n\tpath?: string;\n\tsourceReference?: number;\n}\n\nexport function convertToDAPaths(message: DebugProtocol.ProtocolMessage, toUri: boolean): DebugProtocol.ProtocolMessage {\n\n\tconst fixPath = toUri ? stringToUri : uriToString;\n\n\t// since we modify Source.paths in the message in place, we need to make a copy of it (see #61129)\n\tconst msg = deepClone(message);\n\n\tconvertPaths(msg, (toDA: boolean, source: PathContainer | undefined) => {\n\t\tif (toDA && source) {\n\t\t\tsource.path = fixPath(source);\n\t\t}\n\t});\n\treturn msg;\n}\n\nexport function convertToVSCPaths(message: DebugProtocol.ProtocolMessage, toUri: boolean): DebugProtocol.ProtocolMessage {\n\n\tconst fixPath = toUri ? stringToUri : uriToString;\n\n\t// since we modify Source.paths in the message in place, we need to make a copy of it (see #61129)\n\tconst msg = deepClone(message);\n\n\tconvertPaths(msg, (toDA: boolean, source: PathContainer | undefined) => {\n\t\tif (!toDA && source) {\n\t\t\tsource.path = fixPath(source);\n\t\t}\n\t});\n\treturn msg;\n}\n\nfunction convertPaths(msg: DebugProtocol.ProtocolMessage, fixSourcePath: (toDA: boolean, source: PathContainer | undefined) => void): void {\n\n\tswitch (msg.type) {\n\t\tcase 'event':\n\t\t\tconst event = <DebugProtocol.Event>msg;\n\t\t\tswitch (event.event) {\n\t\t\t\tcase 'output':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.OutputEvent>event).body.source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'loadedSource':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.LoadedSourceEvent>event).body.source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'breakpoint':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.BreakpointEvent>event).body.breakpoint.source);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'request':\n\t\t\tconst request = <DebugProtocol.Request>msg;\n\t\t\tswitch (request.command) {\n\t\t\t\tcase 'setBreakpoints':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.SetBreakpointsArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'breakpointLocations':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.BreakpointLocationsArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'source':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.SourceArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gotoTargets':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.GotoTargetsArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'launchVSCode':\n\t\t\t\t\trequest.arguments.args.forEach((arg: PathContainer | undefined) => fixSourcePath(false, arg));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'response':\n\t\t\tconst response = <DebugProtocol.Response>msg;\n\t\t\tif (response.success && response.body) {\n\t\t\t\tswitch (response.command) {\n\t\t\t\t\tcase 'stackTrace':\n\t\t\t\t\t\t(<DebugProtocol.StackTraceResponse>response).body.stackFrames.forEach(frame => fixSourcePath(false, frame.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'loadedSources':\n\t\t\t\t\t\t(<DebugProtocol.LoadedSourcesResponse>response).body.sources.forEach(source => fixSourcePath(false, source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'scopes':\n\t\t\t\t\t\t(<DebugProtocol.ScopesResponse>response).body.scopes.forEach(scope => fixSourcePath(false, scope.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'setFunctionBreakpoints':\n\t\t\t\t\t\t(<DebugProtocol.SetFunctionBreakpointsResponse>response).body.breakpoints.forEach(bp => fixSourcePath(false, bp.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'setBreakpoints':\n\t\t\t\t\t\t(<DebugProtocol.SetBreakpointsResponse>response).body.breakpoints.forEach(bp => fixSourcePath(false, bp.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n\nexport function getVisibleAndSorted<T extends { presentation?: IConfigPresentation }>(array: T[]): T[] {\n\treturn array.filter(config => !config.presentation?.hidden).sort((first, second) => {\n\t\tif (!first.presentation) {\n\t\t\tif (!second.presentation) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t\tif (!second.presentation) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (!first.presentation.group) {\n\t\t\tif (!second.presentation.group) {\n\t\t\t\treturn compareOrders(first.presentation.order, second.presentation.order);\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t\tif (!second.presentation.group) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (first.presentation.group !== second.presentation.group) {\n\t\t\treturn first.presentation.group.localeCompare(second.presentation.group);\n\t\t}\n\n\t\treturn compareOrders(first.presentation.order, second.presentation.order);\n\t});\n}\n\nfunction compareOrders(first: number | undefined, second: number | undefined): number {\n\tif (typeof first !== 'number') {\n\t\tif (typeof second !== 'number') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1;\n\t}\n\tif (typeof second !== 'number') {\n\t\treturn -1;\n\t}\n\n\treturn first - second;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport * as glob from 'vs/base/common/glob';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { GlobPattern } from 'vs/workbench/api/common/extHost.protocol';\n\nexport enum CellKind {\n\tMarkdown = 1,\n\tCode = 2\n}\n\nexport enum CellOutputKind {\n\tText = 1,\n\tError = 2,\n\tRich = 3\n}\n\nexport const NOTEBOOK_DISPLAY_ORDER = [\n\t'application/json',\n\t'application/javascript',\n\t'text/html',\n\t'image/svg+xml',\n\t'text/markdown',\n\t'image/png',\n\t'image/jpeg',\n\t'text/plain'\n];\n\nexport const ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER = [\n\t'text/markdown',\n\t'application/json',\n\t'text/plain',\n\t'text/html',\n\t'image/svg+xml',\n\t'image/png',\n\t'image/jpeg',\n];\n\nexport const notebookDocumentMetadataDefaults: Required<NotebookDocumentMetadata> = {\n\teditable: true,\n\trunnable: true,\n\tcellEditable: true,\n\tcellRunnable: true,\n\thasExecutionOrder: true,\n\tdisplayOrder: NOTEBOOK_DISPLAY_ORDER\n};\n\nexport interface NotebookDocumentMetadata {\n\teditable: boolean;\n\trunnable: boolean;\n\tcellEditable: boolean;\n\tcellRunnable: boolean;\n\thasExecutionOrder: boolean;\n\tdisplayOrder?: GlobPattern[];\n}\n\nexport enum NotebookCellRunState {\n\tRunning = 1,\n\tIdle = 2,\n\tSuccess = 3,\n\tError = 4\n}\n\nexport interface NotebookCellMetadata {\n\teditable?: boolean;\n\trunnable?: boolean;\n\texecutionOrder?: number;\n\tstatusMessage?: string;\n\trunState?: NotebookCellRunState;\n}\n\nexport interface INotebookDisplayOrder {\n\tdefaultOrder: string[];\n\tuserOrder?: string[];\n}\n\nexport interface INotebookMimeTypeSelector {\n\ttype: string;\n\tsubTypes?: string[];\n}\n\nexport interface INotebookRendererInfo {\n\tid: ExtensionIdentifier;\n\textensionLocation: URI,\n\tpreloads: URI[]\n}\n\nexport interface INotebookSelectors {\n\treadonly filenamePattern?: string;\n}\n\nexport interface IStreamOutput {\n\toutputKind: CellOutputKind.Text;\n\ttext: string;\n}\n\nexport interface IErrorOutput {\n\toutputKind: CellOutputKind.Error;\n\t/**\n\t * Exception Name\n\t */\n\tename?: string;\n\t/**\n\t * Exception Value\n\t */\n\tevalue?: string;\n\t/**\n\t * Exception call stacks\n\t */\n\ttraceback?: string[];\n}\n\nexport interface IDisplayOutput {\n\toutputKind: CellOutputKind.Rich;\n\t/**\n\t * { mime_type: value }\n\t */\n\tdata: { [key: string]: any; }\n}\n\nexport enum MimeTypeRendererResolver {\n\tCore,\n\tActive,\n\tLazy\n}\n\nexport interface IOrderedMimeType {\n\tmimeType: string;\n\tisResolved: boolean;\n\trendererId?: number;\n\toutput?: string;\n}\n\nexport interface ITransformedDisplayOutputDto {\n\toutputKind: CellOutputKind.Rich;\n\tdata: { [key: string]: any; }\n\n\torderedMimeTypes: IOrderedMimeType[];\n\tpickedMimeTypeIndex: number;\n}\n\nexport interface IGenericOutput {\n\toutputKind: CellOutputKind;\n\tpickedMimeType?: string;\n\tpickedRenderer?: number;\n\ttransformedOutput?: { [key: string]: IDisplayOutput };\n}\n\nexport type IOutput = ITransformedDisplayOutputDto | IStreamOutput | IErrorOutput;\n\nexport interface ICell {\n\treadonly uri: URI;\n\thandle: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutput[];\n\tmetadata?: NotebookCellMetadata;\n\tonDidChangeOutputs?: Event<NotebookCellOutputsSplice[]>;\n\tonDidChangeLanguage: Event<string>;\n\tonDidChangeMetadata: Event<void>;\n}\n\nexport interface LanguageInfo {\n\tfile_extension: string;\n}\n\nexport interface IMetadata {\n\tlanguage_info: LanguageInfo;\n}\n\nexport interface INotebookTextModel {\n\thandle: number;\n\tviewType: string;\n\t// metadata: IMetadata;\n\treadonly uri: URI;\n\treadonly versionId: number;\n\tlanguages: string[];\n\tcells: ICell[];\n\trenderers: Set<number>;\n\tonDidChangeCells?: Event<NotebookCellTextModelSplice[]>;\n\tonDidChangeContent: Event<void>;\n\tonWillDispose(listener: () => void): IDisposable;\n}\n\nexport interface IRenderOutput {\n\tshadowContent?: string;\n\thasDynamicHeight: boolean;\n}\n\nexport type NotebookCellTextModelSplice = [\n\tnumber /* start */,\n\tnumber,\n\tICell[]\n];\n\nexport type NotebookCellOutputsSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tIOutput[]\n];\n\nexport interface IMainCellDto {\n\thandle: number;\n\turi: UriComponents,\n\tsource: string[];\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutput[];\n\tmetadata?: NotebookCellMetadata;\n}\n\nexport type NotebookCellsSplice2 = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tIMainCellDto[]\n];\n\nexport enum NotebookCellsChangeType {\n\tModelChange = 1,\n\tMove = 2,\n\tCellClearOutput = 3,\n\tCellsClearOutput = 4,\n\tChangeLanguage = 5\n}\n\nexport interface NotebookCellsModelChangedEvent {\n\treadonly kind: NotebookCellsChangeType.ModelChange;\n\treadonly changes: NotebookCellsSplice2[];\n\treadonly versionId: number;\n}\n\nexport interface NotebookCellsModelMoveEvent {\n\treadonly kind: NotebookCellsChangeType.Move;\n\treadonly index: number;\n\treadonly newIdx: number;\n\treadonly versionId: number;\n}\n\nexport interface NotebookCellClearOutputEvent {\n\treadonly kind: NotebookCellsChangeType.CellClearOutput;\n\treadonly index: number;\n\treadonly versionId: number;\n}\n\nexport interface NotebookCellsClearOutputEvent {\n\treadonly kind: NotebookCellsChangeType.CellsClearOutput;\n\treadonly versionId: number;\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeLanguage;\n\treadonly versionId: number;\n\treadonly index: number;\n\treadonly language: string;\n}\n\nexport type NotebookCellsChangedEvent = NotebookCellsModelChangedEvent | NotebookCellsModelMoveEvent | NotebookCellClearOutputEvent | NotebookCellsClearOutputEvent | NotebookCellsChangeLanguageEvent;\nexport enum CellEditType {\n\tInsert = 1,\n\tDelete = 2\n}\n\nexport interface ICellDto2 {\n\tsource: string[];\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutput[];\n\tmetadata?: NotebookCellMetadata;\n}\n\nexport interface ICellInsertEdit {\n\teditType: CellEditType.Insert;\n\tindex: number;\n\tcells: ICellDto2[];\n}\n\nexport interface ICellDeleteEdit {\n\teditType: CellEditType.Delete;\n\tindex: number;\n\tcount: number;\n}\n\nexport type ICellEditOperation = ICellInsertEdit | ICellDeleteEdit;\n\nexport interface INotebookEditData {\n\tdocumentVersionId: number;\n\tedits: ICellEditOperation[];\n\trenderers: number[];\n}\n\nexport namespace CellUri {\n\n\texport const scheme = 'vscode-notebook';\n\n\texport function generate(notebook: URI, handle: number): URI {\n\t\treturn notebook.with({\n\t\t\tpath: `${notebook.path}, cell ${handle + 1}`,\n\t\t\tquery: JSON.stringify({ cell: handle, notebook: notebook.toString() }),\n\t\t\tscheme,\n\t\t});\n\t}\n\n\texport function parse(cell: URI): { notebook: URI, handle: number } | undefined {\n\t\tif (cell.scheme !== scheme) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tconst data = <{ cell: number, notebook: string }>JSON.parse(cell.query);\n\t\t\treturn {\n\t\t\t\thandle: data.cell,\n\t\t\t\tnotebook: URI.parse(data.notebook)\n\t\t\t};\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\texport function equal(a: URI, b: URI): boolean {\n\t\treturn a.path === b.path && a.query === b.query && a.scheme === b.scheme;\n\t}\n}\n\nexport function mimeTypeSupportedByCore(mimeType: string) {\n\tif ([\n\t\t'application/json',\n\t\t'application/javascript',\n\t\t'text/html',\n\t\t'image/svg+xml',\n\t\t'text/markdown',\n\t\t'image/png',\n\t\t'image/jpeg',\n\t\t'text/plain',\n\t\t'text/x-javascript'\n\t].indexOf(mimeType) > -1) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// if (isWindows) {\n// \tvalue = value.replace(/\\//g, '\\\\');\n// }\n\nfunction matchGlobUniversal(pattern: string, path: string) {\n\tif (isWindows) {\n\t\tpattern = pattern.replace(/\\//g, '\\\\');\n\t\tpath = path.replace(/\\//g, '\\\\');\n\t}\n\n\treturn glob.match(pattern, path);\n}\n\n\nfunction getMimeTypeOrder(mimeType: string, userDisplayOrder: string[], documentDisplayOrder: string[], defaultOrder: string[]) {\n\tlet order = 0;\n\tfor (let i = 0; i < userDisplayOrder.length; i++) {\n\t\tif (matchGlobUniversal(userDisplayOrder[i], mimeType)) {\n\t\t\treturn order;\n\t\t}\n\t\torder++;\n\t}\n\n\tfor (let i = 0; i < documentDisplayOrder.length; i++) {\n\t\tif (matchGlobUniversal(documentDisplayOrder[i], mimeType)) {\n\t\t\treturn order;\n\t\t}\n\n\t\torder++;\n\t}\n\n\tfor (let i = 0; i < defaultOrder.length; i++) {\n\t\tif (matchGlobUniversal(defaultOrder[i], mimeType)) {\n\t\t\treturn order;\n\t\t}\n\n\t\torder++;\n\t}\n\n\treturn order;\n}\n\nexport function sortMimeTypes(mimeTypes: string[], userDisplayOrder: string[], documentDisplayOrder: string[], defaultOrder: string[]) {\n\tconst sorted = mimeTypes.sort((a, b) => {\n\t\treturn getMimeTypeOrder(a, userDisplayOrder, documentDisplayOrder, defaultOrder) - getMimeTypeOrder(b, userDisplayOrder, documentDisplayOrder, defaultOrder);\n\t});\n\n\treturn sorted;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\nexport function diff<T>(before: T[], after: T[], contains: (a: T) => boolean): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\n\t\tif (beforeElement === afterElement) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (contains(afterElement)) {\n\t\t\t// `afterElement` exists before, which means some elements before `afterElement` are deleted\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else {\n\t\t\t// `afterElement` added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface ICellEditorViewState {\n\tselections: editorCommon.ICursorState[];\n}\n\nexport const NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey<'none' | 'top' | 'bottom' | 'both'>('notebookEditorCursorAtBoundary', 'none');\n\n\nexport interface INotebookEditorModel extends IEditorModel {\n\tnotebook: NotebookTextModel;\n\tisDirty(): boolean;\n\tsave(): Promise<boolean>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport * as vscode from 'vscode';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ExtHostNotebookController, ExtHostCell } from 'vs/workbench/api/common/extHostNotebook';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { score } from 'vs/editor/common/modes/languageSelector';\nimport { CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { isEqual } from 'vs/base/common/resources';\n\nexport class ExtHostNotebookConcatDocument implements vscode.NotebookConcatTextDocument {\n\n\tprivate _disposables = new DisposableStore();\n\tprivate _isClosed = false;\n\n\tprivate _cells!: ExtHostCell[];\n\tprivate _cellLengths!: PrefixSumComputer;\n\tprivate _cellLines!: PrefixSumComputer;\n\tprivate _versionId = 0;\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\textHostNotebooks: ExtHostNotebookController,\n\t\textHostDocuments: ExtHostDocuments,\n\t\tprivate readonly _notebook: vscode.NotebookDocument,\n\t\tprivate readonly _selector: vscode.DocumentSelector | undefined,\n\t) {\n\t\tthis._init();\n\n\t\tthis._disposables.add(extHostDocuments.onDidChangeDocument(e => {\n\t\t\tlet cellIdx = this._cells.findIndex(cell => isEqual(cell.uri, e.document.uri));\n\t\t\tif (cellIdx >= 0) {\n\t\t\t\tthis._cellLengths.changeValue(cellIdx, this._cells[cellIdx].document.getText().length + 1);\n\t\t\t\tthis._cellLines.changeValue(cellIdx, this._cells[cellIdx].document.lineCount);\n\t\t\t\tthis._versionId += 1;\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t}\n\t\t}));\n\t\tthis._disposables.add(extHostNotebooks.onDidChangeNotebookDocument(e => {\n\t\t\tif (e.document === this._notebook) {\n\t\t\t\tthis._init();\n\t\t\t\tthis._versionId += 1;\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._isClosed = true;\n\t}\n\n\tget isClosed() {\n\t\treturn this._isClosed;\n\t}\n\n\tprivate _init() {\n\t\tthis._cells = [];\n\t\tconst cellLengths: number[] = [];\n\t\tconst cellLineCounts: number[] = [];\n\t\tfor (let cell of this._notebook.cells) {\n\t\t\tif (cell.cellKind === CellKind.Code && (!this._selector || score(this._selector, cell.uri, cell.language, true))) {\n\t\t\t\tthis._cells.push(<ExtHostCell>cell);\n\t\t\t\tcellLengths.push(cell.document.getText().length + 1);\n\t\t\t\tcellLineCounts.push(cell.document.lineCount);\n\t\t\t}\n\t\t}\n\t\tthis._cellLengths = new PrefixSumComputer(new Uint32Array(cellLengths));\n\t\tthis._cellLines = new PrefixSumComputer(new Uint32Array(cellLineCounts));\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(range?: vscode.Range): string {\n\t\tif (!range) {\n\t\t\tlet result = '';\n\t\t\tfor (let cell of this._cells) {\n\t\t\t\tresult += cell.document.getText() + '\\n';\n\t\t\t}\n\t\t\t// remove last newline again\n\t\t\tresult = result.slice(0, -1);\n\t\t\treturn result;\n\t\t}\n\n\t\tif (range.isEmpty) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// get start and end locations and create substrings\n\t\tconst start = this.locationAt(range.start);\n\t\tconst end = this.locationAt(range.end);\n\t\tconst startCell = this._cells.find(cell => isEqual(cell.uri, start.uri));\n\t\tconst endCell = this._cells.find(cell => isEqual(cell.uri, end.uri));\n\n\t\tif (!startCell || !endCell) {\n\t\t\treturn '';\n\t\t} else if (startCell === endCell) {\n\t\t\treturn startCell.document.getText(new types.Range(start.range.start, end.range.end));\n\t\t} else {\n\t\t\tlet a = startCell.document.getText(new types.Range(start.range.start, new types.Position(startCell.document.lineCount, 0)));\n\t\t\tlet b = endCell.document.getText(new types.Range(new types.Position(0, 0), end.range.end));\n\t\t\treturn a + '\\n' + b;\n\t\t}\n\t}\n\n\toffsetAt(position: vscode.Position): number {\n\t\tconst idx = this._cellLines.getIndexOf(position.line);\n\t\tconst offset1 = this._cellLengths.getAccumulatedValue(idx.index - 1);\n\t\tconst offset2 = this._cells[idx.index].document.offsetAt(position.with(idx.remainder));\n\t\treturn offset1 + offset2;\n\t}\n\n\tpositionAt(locationOrOffset: vscode.Location | number): vscode.Position {\n\t\tif (typeof locationOrOffset === 'number') {\n\t\t\tconst idx = this._cellLengths.getIndexOf(locationOrOffset);\n\t\t\tconst lineCount = this._cellLines.getAccumulatedValue(idx.index - 1);\n\t\t\treturn this._cells[idx.index].document.positionAt(idx.remainder).translate(lineCount);\n\t\t}\n\n\t\tconst idx = this._cells.findIndex(cell => isEqual(cell.uri, locationOrOffset.uri));\n\t\tif (idx >= 0) {\n\t\t\tlet line = this._cellLines.getAccumulatedValue(idx - 1);\n\t\t\treturn new types.Position(line + locationOrOffset.range.start.line, locationOrOffset.range.start.character);\n\t\t}\n\t\t// do better?\n\t\t// return undefined;\n\t\treturn new types.Position(0, 0);\n\t}\n\n\tlocationAt(positionOrRange: vscode.Range | vscode.Position): types.Location {\n\t\tif (!types.Range.isRange(positionOrRange)) {\n\t\t\tpositionOrRange = new types.Range(<types.Position>positionOrRange, <types.Position>positionOrRange);\n\t\t}\n\n\t\tconst startIdx = this._cellLines.getIndexOf(positionOrRange.start.line);\n\t\tlet endIdx = startIdx;\n\t\tif (!positionOrRange.isEmpty) {\n\t\t\tendIdx = this._cellLines.getIndexOf(positionOrRange.end.line);\n\t\t}\n\n\t\tlet startPos = new types.Position(startIdx.remainder, positionOrRange.start.character);\n\t\tlet endPos = new types.Position(endIdx.remainder, positionOrRange.end.character);\n\t\tlet range = new types.Range(startPos, endPos);\n\n\t\tconst startCell = this._cells[startIdx.index];\n\t\treturn new types.Location(startCell.uri, <types.Range>startCell.document.validateRange(range));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { LinkedMap } from 'vs/base/common/map';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { Task, ContributedTask, CustomTask, TaskSet, TaskSorter, TaskEvent, TaskIdentifier, ConfiguringTask, TaskRunSource } from 'vs/workbench/contrib/tasks/common/tasks';\nimport { ITaskSummary, TaskTerminateResponse, TaskSystemInfo } from 'vs/workbench/contrib/tasks/common/taskSystem';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport { ITaskSummary, Task, TaskTerminateResponse };\n\nexport const ITaskService = createDecorator<ITaskService>('taskService');\n\nexport interface ITaskProvider {\n\tprovideTasks(validTypes: IStringDictionary<boolean>): Promise<TaskSet>;\n\tresolveTask(task: ConfiguringTask): Promise<ContributedTask | undefined>;\n}\n\nexport interface ProblemMatcherRunOptions {\n\tattachProblemMatcher?: boolean;\n}\n\nexport interface CustomizationProperties {\n\tgroup?: string | { kind?: string; isDefault?: boolean; };\n\tproblemMatcher?: string | string[];\n\tisBackground?: boolean;\n}\n\nexport interface TaskFilter {\n\tversion?: string;\n\ttype?: string;\n}\n\ninterface WorkspaceTaskResult {\n\tset: TaskSet | undefined;\n\tconfigurations: {\n\t\tbyIdentifier: IStringDictionary<ConfiguringTask>;\n\t} | undefined;\n\thasErrors: boolean;\n}\n\nexport interface WorkspaceFolderTaskResult extends WorkspaceTaskResult {\n\tworkspaceFolder: IWorkspaceFolder;\n}\n\nexport const USER_TASKS_GROUP_KEY = 'settings';\n\nexport interface ITaskService {\n\t_serviceBrand: undefined;\n\tonDidStateChange: Event<TaskEvent>;\n\tsupportsMultipleTaskExecutions: boolean;\n\n\tconfigureAction(): Action;\n\tbuild(): Promise<ITaskSummary>;\n\trunTest(): Promise<ITaskSummary>;\n\trun(task: Task | undefined, options?: ProblemMatcherRunOptions): Promise<ITaskSummary | undefined>;\n\tinTerminal(): boolean;\n\tisActive(): Promise<boolean>;\n\tgetActiveTasks(): Promise<Task[]>;\n\tgetBusyTasks(): Promise<Task[]>;\n\trestart(task: Task): void;\n\tterminate(task: Task): Promise<TaskTerminateResponse>;\n\tterminateAll(): Promise<TaskTerminateResponse[]>;\n\ttasks(filter?: TaskFilter): Promise<Task[]>;\n\ttaskTypes(): string[];\n\tgetWorkspaceTasks(runSource?: TaskRunSource): Promise<Map<string, WorkspaceFolderTaskResult>>;\n\treadRecentTasks(): Promise<(Task | ConfiguringTask)[]>;\n\t/**\n\t * @param alias The task's name, label or defined identifier.\n\t */\n\tgetTask(workspaceFolder: IWorkspace | IWorkspaceFolder | string, alias: string | TaskIdentifier, compareId?: boolean): Promise<Task | undefined>;\n\ttryResolveTask(configuringTask: ConfiguringTask): Promise<Task | undefined>;\n\tgetTasksForGroup(group: string): Promise<Task[]>;\n\tgetRecentlyUsedTasks(): LinkedMap<string, string>;\n\tmigrateRecentTasks(tasks: Task[]): Promise<void>;\n\tcreateSorter(): TaskSorter;\n\n\tgetTaskDescription(task: Task | ConfiguringTask): string | undefined;\n\tcanCustomize(task: ContributedTask | CustomTask): boolean;\n\tcustomize(task: ContributedTask | CustomTask, properties?: {}, openConfig?: boolean): Promise<void>;\n\topenConfig(task: CustomTask | ConfiguringTask | undefined): Promise<void>;\n\n\tregisterTaskProvider(taskProvider: ITaskProvider, type: string): IDisposable;\n\n\tregisterTaskSystem(scheme: string, taskSystemInfo: TaskSystemInfo): void;\n\tsetJsonTasksSupported(areSuppored: Promise<boolean>): void;\n\n\textensionCallbackTaskComplete(task: Task, result: number | undefined): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { IOpenFileRequest } from 'vs/platform/windows/common/windows';\nimport { IEnvironmentVariableInfo } from 'vs/workbench/contrib/terminal/common/environmentVariable';\n\nexport const TERMINAL_VIEW_ID = 'workbench.panel.terminal';\n\n/** A context key that is set when there is at least one opened integrated terminal. */\nexport const KEYBINDING_CONTEXT_TERMINAL_IS_OPEN = new RawContextKey<boolean>('terminalIsOpen', false);\n\n/** A context key that is set when the integrated terminal has focus. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FOCUS = new RawContextKey<boolean>('terminalFocus', false);\n\nexport const KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY = 'terminalShellType';\n/** A context key that is set to the detected shell for the most recently active terminal, this is set to the last known value when no terminals exist. */\nexport const KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE = new RawContextKey<string>(KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY, undefined);\n\n/** A context key that is set when the integrated terminal does not have focus. */\nexport const KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED = KEYBINDING_CONTEXT_TERMINAL_FOCUS.toNegated();\n\n/** A context key that is set when the user is navigating the accessibility tree */\nexport const KEYBINDING_CONTEXT_TERMINAL_A11Y_TREE_FOCUS = new RawContextKey<boolean>('terminalA11yTreeFocus', false);\n\n/** A keybinding context key that is set when the integrated terminal has text selected. */\nexport const KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED = new RawContextKey<boolean>('terminalTextSelected', false);\n/** A keybinding context key that is set when the integrated terminal does not have text selected. */\nexport const KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED = KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED.toNegated();\n\n/**  A context key that is set when the find widget in integrated terminal is visible. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE = new RawContextKey<boolean>('terminalFindVisible', false);\n/**  A context key that is set when the find widget in integrated terminal is not visible. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_NOT_VISIBLE = KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE.toNegated();\n/**  A context key that is set when the find widget find input in integrated terminal is focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED = new RawContextKey<boolean>('terminalFindInputFocused', false);\n/**  A context key that is set when the find widget in integrated terminal is focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_FOCUSED = new RawContextKey<boolean>('terminalFindFocused', false);\n/**  A context key that is set when the find widget find input in integrated terminal is not focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_NOT_FOCUSED = KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED.toNegated();\n\nexport const IS_WORKSPACE_SHELL_ALLOWED_STORAGE_KEY = 'terminal.integrated.isWorkspaceShellAllowed';\nexport const NEVER_MEASURE_RENDER_TIME_STORAGE_KEY = 'terminal.integrated.neverMeasureRenderTime';\n\n// The creation of extension host terminals is delayed by this value (milliseconds). The purpose of\n// this delay is to allow the terminal instance to initialize correctly and have its ID set before\n// trying to create the corressponding object on the ext host.\nexport const EXT_HOST_CREATION_DELAY = 100;\n\nexport const ITerminalNativeService = createDecorator<ITerminalNativeService>('terminalNativeService');\n\nexport const TerminalCursorStyle = {\n\tBLOCK: 'block',\n\tLINE: 'line',\n\tUNDERLINE: 'underline'\n};\n\nexport const TERMINAL_CONFIG_SECTION = 'terminal.integrated';\n\nexport const TERMINAL_ACTION_CATEGORY = nls.localize('terminalCategory', \"Terminal\");\n\nexport const DEFAULT_LETTER_SPACING = 0;\nexport const MINIMUM_LETTER_SPACING = -5;\nexport const DEFAULT_LINE_HEIGHT = 1;\nexport const SHELL_PATH_INVALID_EXIT_CODE = -1;\nexport const SHELL_PATH_DIRECTORY_EXIT_CODE = -2;\nexport const SHELL_CWD_INVALID_EXIT_CODE = -3;\nexport const LEGACY_CONSOLE_MODE_EXIT_CODE = 3221225786; // microsoft/vscode#73790\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n\nexport interface ITerminalConfiguration {\n\tshell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tautomationShell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tshellArgs: {\n\t\tlinux: string[];\n\t\tosx: string[];\n\t\twindows: string[];\n\t};\n\tmacOptionIsMeta: boolean;\n\tmacOptionClickForcesSelection: boolean;\n\trendererType: 'auto' | 'canvas' | 'dom' | 'experimentalWebgl';\n\trightClickBehavior: 'default' | 'copyPaste' | 'paste' | 'selectWord';\n\tcursorBlinking: boolean;\n\tcursorStyle: string;\n\tcursorWidth: number;\n\tdrawBoldTextInBrightColors: boolean;\n\tfastScrollSensitivity: number;\n\tfontFamily: string;\n\tfontWeight: FontWeight;\n\tfontWeightBold: FontWeight;\n\tminimumContrastRatio: number;\n\tmouseWheelScrollSensitivity: number;\n\t// fontLigatures: boolean;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tdetectLocale: 'auto' | 'off' | 'on';\n\tscrollback: number;\n\tcommandsToSkipShell: string[];\n\tallowChords: boolean;\n\tallowMnemonics: boolean;\n\tcwd: string;\n\tconfirmOnExit: boolean;\n\tenableBell: boolean;\n\tinheritEnv: boolean;\n\tenv: {\n\t\tlinux: { [key: string]: string };\n\t\tosx: { [key: string]: string };\n\t\twindows: { [key: string]: string };\n\t};\n\tenvironmentChangesIndicator: 'off' | 'on' | 'warnonly';\n\tshowExitAlert: boolean;\n\tsplitCwd: 'workspaceRoot' | 'initial' | 'inherited';\n\twindowsEnableConpty: boolean;\n\twordSeparators: string;\n\texperimentalUseTitleEvent: boolean;\n\tenableFileLinks: boolean;\n\tunicodeVersion: '6' | '11';\n\texperimentalLinkProvider: boolean;\n}\n\nexport interface ITerminalConfigHelper {\n\tconfig: ITerminalConfiguration;\n\n\tonWorkspacePermissionsChanged: Event<boolean>;\n\n\tconfigFontIsMonospace(): boolean;\n\tgetFont(): ITerminalFont;\n\t/** Sets whether a workspace shell configuration is allowed or not */\n\tsetWorkspaceShellAllowed(isAllowed: boolean): void;\n\tcheckWorkspaceShellPermissions(osOverride?: OperatingSystem): boolean;\n\tshowRecommendations(shellLaunchConfig: IShellLaunchConfig): void;\n}\n\nexport interface ITerminalFont {\n\tfontFamily: string;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tcharWidth?: number;\n\tcharHeight?: number;\n}\n\nexport interface ITerminalEnvironment {\n\t[key: string]: string | null;\n}\n\nexport interface IShellLaunchConfig {\n\t/**\n\t * The name of the terminal, if this is not set the name of the process will be used.\n\t */\n\tname?: string;\n\n\t/**\n\t * The shell executable (bash, cmd, etc.).\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The CLI arguments to use with executable, a string[] is in argv format and will be escaped,\n\t * a string is in \"CommandLine\" pre-escaped format and will be used as is. The string option is\n\t * only supported on Windows and will throw an exception if used on macOS or Linux.\n\t */\n\targs?: string[] | string;\n\n\t/**\n\t * The current working directory of the terminal, this overrides the `terminal.integrated.cwd`\n\t * settings key.\n\t */\n\tcwd?: string | URI;\n\n\t/**\n\t * A custom environment for the terminal, if this is not set the environment will be inherited\n\t * from the VS Code process.\n\t */\n\tenv?: ITerminalEnvironment;\n\n\t/**\n\t * Whether to ignore a custom cwd from the `terminal.integrated.cwd` settings key (e.g. if the\n\t * shell is being launched by an extension).\n\t */\n\tignoreConfigurationCwd?: boolean;\n\n\t/** Whether to wait for a key press before closing the terminal. */\n\twaitOnExit?: boolean | string;\n\n\t/**\n\t * A string including ANSI escape sequences that will be written to the terminal emulator\n\t * _before_ the terminal process has launched, a trailing \\n is added at the end of the string.\n\t * This allows for example the terminal instance to display a styled message as the first line\n\t * of the terminal. Use \\x1b over \\033 or \\e for the escape control character.\n\t */\n\tinitialText?: string;\n\n\t/**\n\t * Whether an extension is controlling the terminal via a `vscode.Pseudoterminal`.\n\t */\n\tisExtensionTerminal?: boolean;\n\n\t/**\n\t * Whether the terminal process environment should be exactly as provided in\n\t * `TerminalOptions.env`. When this is false (default), the environment will be based on the\n\t * window's environment and also apply configured platform settings like\n\t * `terminal.integrated.windows.env` on top. When this is true, the complete environment must be\n\t * provided as nothing will be inherited from the process or any configuration.\n\t */\n\tstrictEnv?: boolean;\n\n\t/**\n\t * When enabled the terminal will run the process as normal but not be surfaced to the user\n\t * until `Terminal.show` is called. The typical usage for this is when you need to run\n\t * something that may need interactivity but only want to tell the user about it when\n\t * interaction is needed. Note that the terminals will still be exposed to all extensions\n\t * as normal.\n\t */\n\thideFromUser?: boolean;\n}\n\n/**\n * Provides access to native or electron APIs to other terminal services.\n */\nexport interface ITerminalNativeService {\n\t_serviceBrand: undefined;\n\n\treadonly linuxDistro: LinuxDistro;\n\n\treadonly onOpenFileRequest: Event<IOpenFileRequest>;\n\treadonly onOsResume: Event<void>;\n\n\tgetWindowsBuildNumber(): number;\n\twhenFileDeleted(path: URI): Promise<void>;\n\tgetWslPath(path: string): Promise<string>;\n}\n\nexport interface IShellDefinition {\n\tlabel: string;\n\tpath: string;\n}\n\nexport interface ITerminalDimensions {\n\t/**\n\t * The columns of the terminal.\n\t */\n\treadonly cols: number;\n\n\t/**\n\t * The rows of the terminal.\n\t */\n\treadonly rows: number;\n}\n\nexport interface ICommandTracker {\n\tscrollToPreviousCommand(): void;\n\tscrollToNextCommand(): void;\n\tselectToPreviousCommand(): void;\n\tselectToNextCommand(): void;\n\tselectToPreviousLine(): void;\n\tselectToNextLine(): void;\n}\n\nexport interface INavigationMode {\n\texitNavigationMode(): void;\n\tfocusPreviousLine(): void;\n\tfocusNextLine(): void;\n}\n\nexport interface IBeforeProcessDataEvent {\n\t/**\n\t * The data of the event, this can be modified by the event listener to change what gets sent\n\t * to the terminal.\n\t */\n\tdata: string;\n}\n\nexport interface ITerminalProcessManager extends IDisposable {\n\treadonly processState: ProcessState;\n\treadonly ptyProcessReady: Promise<void>;\n\treadonly shellProcessId: number | undefined;\n\treadonly remoteAuthority: string | undefined;\n\treadonly os: OperatingSystem | undefined;\n\treadonly userHome: string | undefined;\n\treadonly environmentVariableInfo: IEnvironmentVariableInfo | undefined;\n\n\treadonly onProcessReady: Event<void>;\n\treadonly onBeforeProcessData: Event<IBeforeProcessDataEvent>;\n\treadonly onProcessData: Event<string>;\n\treadonly onProcessTitle: Event<string>;\n\treadonly onProcessExit: Event<number | undefined>;\n\treadonly onProcessOverrideDimensions: Event<ITerminalDimensions | undefined>;\n\treadonly onProcessResolvedShellLaunchConfig: Event<IShellLaunchConfig>;\n\treadonly onEnvironmentVariableInfoChanged: Event<IEnvironmentVariableInfo>;\n\n\tdispose(immediate?: boolean): void;\n\tcreateProcess(shellLaunchConfig: IShellLaunchConfig, cols: number, rows: number, isScreenReaderModeEnabled: boolean): Promise<void>;\n\twrite(data: string): void;\n\tsetDimensions(cols: number, rows: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n}\n\nexport const enum ProcessState {\n\t// The process has not been initialized yet.\n\tUNINITIALIZED,\n\t// The process is currently launching, the process is marked as launching\n\t// for a short duration after being created and is helpful to indicate\n\t// whether the process died as a result of bad shell and args.\n\tLAUNCHING,\n\t// The process is running normally.\n\tRUNNING,\n\t// The process was killed during launch, likely as a result of bad shell and\n\t// args.\n\tKILLED_DURING_LAUNCH,\n\t// The process was killed by the user (the event originated from VS Code).\n\tKILLED_BY_USER,\n\t// The process was killed by itself, for example the shell crashed or `exit`\n\t// was run.\n\tKILLED_BY_PROCESS\n}\n\nexport interface ITerminalProcessExtHostProxy extends IDisposable {\n\treadonly terminalId: number;\n\n\temitData(data: string): void;\n\temitTitle(title: string): void;\n\temitReady(pid: number, cwd: string): void;\n\temitExit(exitCode: number | undefined): void;\n\temitOverrideDimensions(dimensions: ITerminalDimensions | undefined): void;\n\temitResolvedShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig): void;\n\temitInitialCwd(initialCwd: string): void;\n\temitCwd(cwd: string): void;\n\temitLatency(latency: number): void;\n\n\tonInput: Event<string>;\n\tonResize: Event<{ cols: number, rows: number }>;\n\tonShutdown: Event<boolean>;\n\tonRequestInitialCwd: Event<void>;\n\tonRequestCwd: Event<void>;\n\tonRequestLatency: Event<void>;\n}\n\nexport interface ISpawnExtHostProcessRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tshellLaunchConfig: IShellLaunchConfig;\n\tactiveWorkspaceRootUri: URI | undefined;\n\tcols: number;\n\trows: number;\n\tisWorkspaceShellAllowed: boolean;\n}\n\nexport interface IStartExtensionTerminalRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tcols: number;\n\trows: number;\n}\n\nexport interface IAvailableShellsRequest {\n\tcallback: (shells: IShellDefinition[]) => void;\n}\n\nexport interface IDefaultShellAndArgsRequest {\n\tuseAutomationShell: boolean;\n\tcallback: (shell: string, args: string[] | string | undefined) => void;\n}\n\nexport enum LinuxDistro {\n\tFedora,\n\tUbuntu,\n\tUnknown\n}\n\nexport enum TitleEventSource {\n\t/** From the API or the rename command that overrides any other type */\n\tApi,\n\t/** From the process name property*/\n\tProcess,\n\t/** From the VT sequence */\n\tSequence\n}\n\nexport interface IWindowsShellHelper extends IDisposable {\n\treadonly onShellNameChange: Event<string>;\n\n\tgetShellName(): Promise<string>;\n}\n\n/**\n * An interface representing a raw terminal child process, this contains a subset of the\n * child_process.ChildProcess node.js interface.\n */\nexport interface ITerminalChildProcess {\n\tonProcessData: Event<string>;\n\tonProcessExit: Event<number | undefined>;\n\tonProcessReady: Event<{ pid: number, cwd: string }>;\n\tonProcessTitleChanged: Event<string>;\n\tonProcessOverrideDimensions?: Event<ITerminalDimensions | undefined>;\n\tonProcessResolvedShellLaunchConfig?: Event<IShellLaunchConfig>;\n\n\t/**\n\t * Shutdown the terminal process.\n\t *\n\t * @param immediate When true the process will be killed immediately, otherwise the process will\n\t * be given some time to make sure no additional data comes through.\n\t */\n\tshutdown(immediate: boolean): void;\n\tinput(data: string): void;\n\tresize(cols: number, rows: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n}\n\nexport const enum TERMINAL_COMMAND_ID {\n\tFIND_NEXT = 'workbench.action.terminal.findNext',\n\tFIND_PREVIOUS = 'workbench.action.terminal.findPrevious',\n\tTOGGLE = 'workbench.action.terminal.toggleTerminal',\n\tKILL = 'workbench.action.terminal.kill',\n\tQUICK_KILL = 'workbench.action.terminal.quickKill',\n\tCOPY_SELECTION = 'workbench.action.terminal.copySelection',\n\tSELECT_ALL = 'workbench.action.terminal.selectAll',\n\tDELETE_WORD_LEFT = 'workbench.action.terminal.deleteWordLeft',\n\tDELETE_WORD_RIGHT = 'workbench.action.terminal.deleteWordRight',\n\tDELETE_TO_LINE_START = 'workbench.action.terminal.deleteToLineStart',\n\tMOVE_TO_LINE_START = 'workbench.action.terminal.moveToLineStart',\n\tMOVE_TO_LINE_END = 'workbench.action.terminal.moveToLineEnd',\n\tNEW = 'workbench.action.terminal.new',\n\tNEW_WITH_CWD = 'workbench.action.terminal.newWithCwd',\n\tNEW_LOCAL = 'workbench.action.terminal.newLocal',\n\tNEW_IN_ACTIVE_WORKSPACE = 'workbench.action.terminal.newInActiveWorkspace',\n\tSPLIT = 'workbench.action.terminal.split',\n\tSPLIT_IN_ACTIVE_WORKSPACE = 'workbench.action.terminal.splitInActiveWorkspace',\n\tRELAUNCH = 'workbench.action.terminal.relaunch',\n\tFOCUS_PREVIOUS_PANE = 'workbench.action.terminal.focusPreviousPane',\n\tFOCUS_NEXT_PANE = 'workbench.action.terminal.focusNextPane',\n\tRESIZE_PANE_LEFT = 'workbench.action.terminal.resizePaneLeft',\n\tRESIZE_PANE_RIGHT = 'workbench.action.terminal.resizePaneRight',\n\tRESIZE_PANE_UP = 'workbench.action.terminal.resizePaneUp',\n\tRESIZE_PANE_DOWN = 'workbench.action.terminal.resizePaneDown',\n\tFOCUS = 'workbench.action.terminal.focus',\n\tFOCUS_NEXT = 'workbench.action.terminal.focusNext',\n\tFOCUS_PREVIOUS = 'workbench.action.terminal.focusPrevious',\n\tPASTE = 'workbench.action.terminal.paste',\n\tSELECT_DEFAULT_SHELL = 'workbench.action.terminal.selectDefaultShell',\n\tRUN_SELECTED_TEXT = 'workbench.action.terminal.runSelectedText',\n\tRUN_ACTIVE_FILE = 'workbench.action.terminal.runActiveFile',\n\tSWITCH_TERMINAL = 'workbench.action.terminal.switchTerminal',\n\tSCROLL_DOWN_LINE = 'workbench.action.terminal.scrollDown',\n\tSCROLL_DOWN_PAGE = 'workbench.action.terminal.scrollDownPage',\n\tSCROLL_TO_BOTTOM = 'workbench.action.terminal.scrollToBottom',\n\tSCROLL_UP_LINE = 'workbench.action.terminal.scrollUp',\n\tSCROLL_UP_PAGE = 'workbench.action.terminal.scrollUpPage',\n\tSCROLL_TO_TOP = 'workbench.action.terminal.scrollToTop',\n\tCLEAR = 'workbench.action.terminal.clear',\n\tCLEAR_SELECTION = 'workbench.action.terminal.clearSelection',\n\tMANAGE_WORKSPACE_SHELL_PERMISSIONS = 'workbench.action.terminal.manageWorkspaceShellPermissions',\n\tRENAME = 'workbench.action.terminal.rename',\n\tRENAME_WITH_ARG = 'workbench.action.terminal.renameWithArg',\n\tFIND_FOCUS = 'workbench.action.terminal.focusFind',\n\tFIND_HIDE = 'workbench.action.terminal.hideFind',\n\tQUICK_OPEN_TERM = 'workbench.action.quickOpenTerm',\n\tSCROLL_TO_PREVIOUS_COMMAND = 'workbench.action.terminal.scrollToPreviousCommand',\n\tSCROLL_TO_NEXT_COMMAND = 'workbench.action.terminal.scrollToNextCommand',\n\tSELECT_TO_PREVIOUS_COMMAND = 'workbench.action.terminal.selectToPreviousCommand',\n\tSELECT_TO_NEXT_COMMAND = 'workbench.action.terminal.selectToNextCommand',\n\tSELECT_TO_PREVIOUS_LINE = 'workbench.action.terminal.selectToPreviousLine',\n\tSELECT_TO_NEXT_LINE = 'workbench.action.terminal.selectToNextLine',\n\tTOGGLE_ESCAPE_SEQUENCE_LOGGING = 'toggleEscapeSequenceLogging',\n\tSEND_SEQUENCE = 'workbench.action.terminal.sendSequence',\n\tTOGGLE_FIND_REGEX = 'workbench.action.terminal.toggleFindRegex',\n\tTOGGLE_FIND_WHOLE_WORD = 'workbench.action.terminal.toggleFindWholeWord',\n\tTOGGLE_FIND_CASE_SENSITIVE = 'workbench.action.terminal.toggleFindCaseSensitive',\n\tNAVIGATION_MODE_EXIT = 'workbench.action.terminal.navigationModeExit',\n\tNAVIGATION_MODE_FOCUS_NEXT = 'workbench.action.terminal.navigationModeFocusNext',\n\tNAVIGATION_MODE_FOCUS_PREVIOUS = 'workbench.action.terminal.navigationModeFocusPrevious',\n\tSHOW_ENVIRONMENT_INFORMATION = 'workbench.action.terminal.showEnvironmentInformation'\n}\n\nexport const DEFAULT_COMMANDS_TO_SKIP_SHELL: string[] = [\n\tTERMINAL_COMMAND_ID.CLEAR_SELECTION,\n\tTERMINAL_COMMAND_ID.CLEAR,\n\tTERMINAL_COMMAND_ID.COPY_SELECTION,\n\tTERMINAL_COMMAND_ID.DELETE_TO_LINE_START,\n\tTERMINAL_COMMAND_ID.DELETE_WORD_LEFT,\n\tTERMINAL_COMMAND_ID.DELETE_WORD_RIGHT,\n\tTERMINAL_COMMAND_ID.FIND_FOCUS,\n\tTERMINAL_COMMAND_ID.FIND_HIDE,\n\tTERMINAL_COMMAND_ID.FIND_NEXT,\n\tTERMINAL_COMMAND_ID.FIND_PREVIOUS,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_REGEX,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_WHOLE_WORD,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_CASE_SENSITIVE,\n\tTERMINAL_COMMAND_ID.FOCUS_NEXT_PANE,\n\tTERMINAL_COMMAND_ID.FOCUS_NEXT,\n\tTERMINAL_COMMAND_ID.FOCUS_PREVIOUS_PANE,\n\tTERMINAL_COMMAND_ID.FOCUS_PREVIOUS,\n\tTERMINAL_COMMAND_ID.FOCUS,\n\tTERMINAL_COMMAND_ID.KILL,\n\tTERMINAL_COMMAND_ID.MOVE_TO_LINE_END,\n\tTERMINAL_COMMAND_ID.MOVE_TO_LINE_START,\n\tTERMINAL_COMMAND_ID.NEW_IN_ACTIVE_WORKSPACE,\n\tTERMINAL_COMMAND_ID.NEW,\n\tTERMINAL_COMMAND_ID.PASTE,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_DOWN,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_LEFT,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_RIGHT,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_UP,\n\tTERMINAL_COMMAND_ID.RUN_ACTIVE_FILE,\n\tTERMINAL_COMMAND_ID.RUN_SELECTED_TEXT,\n\tTERMINAL_COMMAND_ID.SCROLL_DOWN_LINE,\n\tTERMINAL_COMMAND_ID.SCROLL_DOWN_PAGE,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_BOTTOM,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_NEXT_COMMAND,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_PREVIOUS_COMMAND,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_TOP,\n\tTERMINAL_COMMAND_ID.SCROLL_UP_LINE,\n\tTERMINAL_COMMAND_ID.SCROLL_UP_PAGE,\n\tTERMINAL_COMMAND_ID.SEND_SEQUENCE,\n\tTERMINAL_COMMAND_ID.SELECT_ALL,\n\tTERMINAL_COMMAND_ID.SELECT_TO_NEXT_COMMAND,\n\tTERMINAL_COMMAND_ID.SELECT_TO_NEXT_LINE,\n\tTERMINAL_COMMAND_ID.SELECT_TO_PREVIOUS_COMMAND,\n\tTERMINAL_COMMAND_ID.SELECT_TO_PREVIOUS_LINE,\n\tTERMINAL_COMMAND_ID.SPLIT_IN_ACTIVE_WORKSPACE,\n\tTERMINAL_COMMAND_ID.SPLIT,\n\tTERMINAL_COMMAND_ID.TOGGLE,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_EXIT,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_FOCUS_NEXT,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_FOCUS_PREVIOUS,\n\t'editor.action.toggleTabFocusMode',\n\t'workbench.action.quickOpen',\n\t'workbench.action.quickOpenPreviousEditor',\n\t'workbench.action.showCommands',\n\t'workbench.action.tasks.build',\n\t'workbench.action.tasks.restartTask',\n\t'workbench.action.tasks.runTask',\n\t'workbench.action.tasks.reRunTask',\n\t'workbench.action.tasks.showLog',\n\t'workbench.action.tasks.showTasks',\n\t'workbench.action.tasks.terminate',\n\t'workbench.action.tasks.test',\n\t'workbench.action.toggleFullScreen',\n\t'workbench.action.terminal.focusAtIndex1',\n\t'workbench.action.terminal.focusAtIndex2',\n\t'workbench.action.terminal.focusAtIndex3',\n\t'workbench.action.terminal.focusAtIndex4',\n\t'workbench.action.terminal.focusAtIndex5',\n\t'workbench.action.terminal.focusAtIndex6',\n\t'workbench.action.terminal.focusAtIndex7',\n\t'workbench.action.terminal.focusAtIndex8',\n\t'workbench.action.terminal.focusAtIndex9',\n\t'workbench.action.focusSecondEditorGroup',\n\t'workbench.action.focusThirdEditorGroup',\n\t'workbench.action.focusFourthEditorGroup',\n\t'workbench.action.focusFifthEditorGroup',\n\t'workbench.action.focusSixthEditorGroup',\n\t'workbench.action.focusSeventhEditorGroup',\n\t'workbench.action.focusEighthEditorGroup',\n\t'workbench.action.focusNextPart',\n\t'workbench.action.focusPreviousPart',\n\t'workbench.action.nextPanelView',\n\t'workbench.action.previousPanelView',\n\t'workbench.action.nextSideBarView',\n\t'workbench.action.previousSideBarView',\n\t'workbench.action.debug.start',\n\t'workbench.action.debug.stop',\n\t'workbench.action.debug.run',\n\t'workbench.action.debug.restart',\n\t'workbench.action.debug.continue',\n\t'workbench.action.debug.pause',\n\t'workbench.action.debug.stepInto',\n\t'workbench.action.debug.stepOut',\n\t'workbench.action.debug.stepOver',\n\t'workbench.action.nextEditor',\n\t'workbench.action.previousEditor',\n\t'workbench.action.nextEditorInGroup',\n\t'workbench.action.previousEditorInGroup',\n\t'workbench.action.openNextRecentlyUsedEditor',\n\t'workbench.action.openPreviousRecentlyUsedEditor',\n\t'workbench.action.openNextRecentlyUsedEditorInGroup',\n\t'workbench.action.openPreviousRecentlyUsedEditorInGroup',\n\t'workbench.action.quickOpenPreviousRecentlyUsedEditor',\n\t'workbench.action.quickOpenLeastRecentlyUsedEditor',\n\t'workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup',\n\t'workbench.action.quickOpenLeastRecentlyUsedEditorInGroup',\n\t'workbench.action.focusActiveEditorGroup',\n\t'workbench.action.focusFirstEditorGroup',\n\t'workbench.action.focusLastEditorGroup',\n\t'workbench.action.firstEditorInGroup',\n\t'workbench.action.lastEditorInGroup',\n\t'workbench.action.navigateUp',\n\t'workbench.action.navigateDown',\n\t'workbench.action.navigateRight',\n\t'workbench.action.navigateLeft',\n\t'workbench.action.togglePanel',\n\t'workbench.action.quickOpenView',\n\t'workbench.action.toggleMaximizedPanel'\n];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\ninterface TerminalDataBuffer extends IDisposable {\n\tdata: string[];\n\ttimeoutId: any;\n}\n\nexport class TerminalDataBufferer implements IDisposable {\n\tprivate readonly _terminalBufferMap = new Map<number, TerminalDataBuffer>();\n\n\tconstructor(private readonly _callback: (id: number, data: string) => void) {\n\t}\n\n\tdispose() {\n\t\tfor (const buffer of this._terminalBufferMap.values()) {\n\t\t\tbuffer.dispose();\n\t\t}\n\t}\n\n\tstartBuffering(id: number, event: Event<string>, throttleBy: number = 5): IDisposable {\n\t\tlet disposable: IDisposable;\n\t\tdisposable = event((e: string) => {\n\t\t\tlet buffer = this._terminalBufferMap.get(id);\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.data.push(e);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst timeoutId = setTimeout(() => this._flushBuffer(id), throttleBy);\n\t\t\tbuffer = {\n\t\t\t\tdata: [e],\n\t\t\t\ttimeoutId: timeoutId,\n\t\t\t\tdispose: () => {\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\tthis._flushBuffer(id);\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._terminalBufferMap.set(id, buffer);\n\t\t});\n\t\treturn disposable;\n\t}\n\n\tstopBuffering(id: number) {\n\t\tconst buffer = this._terminalBufferMap.get(id);\n\t\tif (buffer) {\n\t\t\tbuffer.dispose();\n\t\t}\n\t}\n\n\tprivate _flushBuffer(id: number): void {\n\t\tconst buffer = this._terminalBufferMap.get(id);\n\t\tif (buffer) {\n\t\t\tthis._terminalBufferMap.delete(id);\n\t\t\tthis._callback(id, buffer.data.join(''));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as paths from 'vs/base/common/path';\nimport * as process from 'vs/base/common/process';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IProcessEnvironment, isWindows, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { localize } from 'vs/nls';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nexport interface IVariableResolveContext {\n\tgetFolderUri(folderName: string): uri | undefined;\n\tgetWorkspaceFolderCount(): number;\n\tgetConfigurationValue(folderUri: uri, section: string): string | undefined;\n\tgetExecPath(): string | undefined;\n\tgetFilePath(): string | undefined;\n\tgetSelectedText(): string | undefined;\n\tgetLineNumber(): string | undefined;\n}\n\nexport class AbstractVariableResolverService implements IConfigurationResolverService {\n\n\tstatic readonly VARIABLE_REGEXP = /\\$\\{(.*?)\\}/g;\n\tstatic readonly VARIABLE_REGEXP_SINGLE = /\\$\\{(.*?)\\}/;\n\n\t_serviceBrand: undefined;\n\n\tprivate _context: IVariableResolveContext;\n\tprivate _envVariables?: IProcessEnvironment;\n\tprotected _contributedVariables: Map<string, () => Promise<string | undefined>> = new Map();\n\n\n\tconstructor(_context: IVariableResolveContext, _envVariables?: IProcessEnvironment) {\n\t\tthis._context = _context;\n\t\tif (_envVariables) {\n\t\t\tif (isWindows) {\n\t\t\t\t// windows env variables are case insensitive\n\t\t\t\tconst ev: IProcessEnvironment = Object.create(null);\n\t\t\t\tthis._envVariables = ev;\n\t\t\t\tObject.keys(_envVariables).forEach(key => {\n\t\t\t\t\tev[key.toLowerCase()] = _envVariables[key];\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._envVariables = _envVariables;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: string): string;\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: string[]): string[];\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: IStringDictionary<string>): IStringDictionary<string>;\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: any): any {\n\t\treturn this.recursiveResolve(root ? root.uri : undefined, value);\n\t}\n\n\tpublic resolveAnyBase(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\n\t\tconst result = objects.deepClone(config) as any;\n\n\t\t// hoist platform specific attributes to top level\n\t\tif (isWindows && result.windows) {\n\t\t\tObject.keys(result.windows).forEach(key => result[key] = result.windows[key]);\n\t\t} else if (isMacintosh && result.osx) {\n\t\t\tObject.keys(result.osx).forEach(key => result[key] = result.osx[key]);\n\t\t} else if (isLinux && result.linux) {\n\t\t\tObject.keys(result.linux).forEach(key => result[key] = result.linux[key]);\n\t\t}\n\n\t\t// delete all platform specific sections\n\t\tdelete result.windows;\n\t\tdelete result.osx;\n\t\tdelete result.linux;\n\n\t\t// substitute all variables recursively in string values\n\t\treturn this.recursiveResolve(workspaceFolder ? workspaceFolder.uri : undefined, result, commandValueMapping, resolvedVariables);\n\t}\n\n\tpublic resolveAny(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): any {\n\t\treturn this.resolveAnyBase(workspaceFolder, config, commandValueMapping);\n\t}\n\n\tpublic resolveAnyMap(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): { newConfig: any, resolvedVariables: Map<string, string> } {\n\t\tconst resolvedVariables = new Map<string, string>();\n\t\tconst newConfig = this.resolveAnyBase(workspaceFolder, config, commandValueMapping, resolvedVariables);\n\t\treturn { newConfig, resolvedVariables };\n\t}\n\n\tpublic resolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<any> {\n\t\tthrow new Error('resolveWithInteractionReplace not implemented.');\n\t}\n\n\tpublic resolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<Map<string, string> | undefined> {\n\t\tthrow new Error('resolveWithInteraction not implemented.');\n\t}\n\n\tpublic contributeVariable(variable: string, resolution: () => Promise<string | undefined>): void {\n\t\tif (this._contributedVariables.has(variable)) {\n\t\t\tthrow new Error('Variable ' + variable + ' is contributed twice.');\n\t\t} else {\n\t\t\tthis._contributedVariables.set(variable, resolution);\n\t\t}\n\t}\n\n\tprivate recursiveResolve(folderUri: uri | undefined, value: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\t\tif (types.isString(value)) {\n\t\t\treturn this.resolveString(folderUri, value, commandValueMapping, resolvedVariables);\n\t\t} else if (types.isArray(value)) {\n\t\t\treturn value.map(s => this.recursiveResolve(folderUri, s, commandValueMapping, resolvedVariables));\n\t\t} else if (types.isObject(value)) {\n\t\t\tlet result: IStringDictionary<string | IStringDictionary<string> | string[]> = Object.create(null);\n\t\t\tObject.keys(value).forEach(key => {\n\t\t\t\tconst replaced = this.resolveString(folderUri, key, commandValueMapping, resolvedVariables);\n\t\t\t\tresult[replaced] = this.recursiveResolve(folderUri, value[key], commandValueMapping, resolvedVariables);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate resolveString(folderUri: uri | undefined, value: string, commandValueMapping: IStringDictionary<string> | undefined, resolvedVariables?: Map<string, string>): string {\n\n\t\t// loop through all variables occurrences in 'value'\n\t\tconst replaced = value.replace(AbstractVariableResolverService.VARIABLE_REGEXP, (match: string, variable: string) => {\n\n\t\t\tlet resolvedValue = this.evaluateSingleVariable(match, variable, folderUri, commandValueMapping);\n\n\t\t\tif (resolvedVariables) {\n\t\t\t\tresolvedVariables.set(variable, resolvedValue);\n\t\t\t}\n\n\t\t\treturn resolvedValue;\n\t\t});\n\n\t\treturn replaced;\n\t}\n\n\tprivate evaluateSingleVariable(match: string, variable: string, folderUri: uri | undefined, commandValueMapping: IStringDictionary<string> | undefined): string {\n\n\t\t// try to separate variable arguments from variable name\n\t\tlet argument: string | undefined;\n\t\tconst parts = variable.split(':');\n\t\tif (parts.length > 1) {\n\t\t\tvariable = parts[0];\n\t\t\targument = parts[1];\n\t\t}\n\n\t\t// common error handling for all variables that require an open editor\n\t\tconst getFilePath = (): string => {\n\n\t\t\tconst filePath = this._context.getFilePath();\n\t\t\tif (filePath) {\n\t\t\t\treturn filePath;\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveFile', \"'{0}' can not be resolved. Please open an editor.\", match));\n\t\t};\n\n\t\t// common error handling for all variables that require an open folder and accept a folder name argument\n\t\tconst getFolderUri = (withArg = true): uri => {\n\n\t\t\tif (withArg && argument) {\n\t\t\t\tconst folder = this._context.getFolderUri(argument);\n\t\t\t\tif (folder) {\n\t\t\t\t\treturn folder;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('canNotFindFolder', \"'{0}' can not be resolved. No such folder '{1}'.\", match, argument));\n\t\t\t}\n\n\t\t\tif (folderUri) {\n\t\t\t\treturn folderUri;\n\t\t\t}\n\n\t\t\tif (this._context.getWorkspaceFolderCount() > 1) {\n\t\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolderMultiRoot', \"'{0}' can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.\", match));\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolder', \"'{0}' can not be resolved. Please open a folder.\", match));\n\t\t};\n\n\n\t\tswitch (variable) {\n\n\t\t\tcase 'env':\n\t\t\t\tif (argument) {\n\t\t\t\t\tif (this._envVariables) {\n\t\t\t\t\t\tconst env = this._envVariables[isWindows ? argument.toLowerCase() : argument];\n\t\t\t\t\t\tif (types.isString(env)) {\n\t\t\t\t\t\t\treturn env;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// For `env` we should do the same as a normal shell does - evaluates undefined envs to an empty string #46436\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingEnvVarName', \"'{0}' can not be resolved because no environment variable name is given.\", match));\n\n\t\t\tcase 'config':\n\t\t\t\tif (argument) {\n\t\t\t\t\tconst config = this._context.getConfigurationValue(getFolderUri(false), argument);\n\t\t\t\t\tif (types.isUndefinedOrNull(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNotFound', \"'{0}' can not be resolved because setting '{1}' not found.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\tif (types.isObject(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNoString', \"'{0}' can not be resolved because '{1}' is a structured value.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingConfigName', \"'{0}' can not be resolved because no settings name is given.\", match));\n\n\t\t\tcase 'command':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'command');\n\n\t\t\tcase 'input':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'input');\n\n\t\t\tdefault: {\n\n\t\t\t\tswitch (variable) {\n\t\t\t\t\tcase 'workspaceRoot':\n\t\t\t\t\tcase 'workspaceFolder':\n\t\t\t\t\t\treturn normalizeDriveLetter(getFolderUri().fsPath);\n\n\t\t\t\t\tcase 'cwd':\n\t\t\t\t\t\treturn ((folderUri || argument) ? normalizeDriveLetter(getFolderUri().fsPath) : process.cwd());\n\n\t\t\t\t\tcase 'workspaceRootFolderName':\n\t\t\t\t\tcase 'workspaceFolderBasename':\n\t\t\t\t\t\treturn paths.basename(getFolderUri().fsPath);\n\n\t\t\t\t\tcase 'lineNumber':\n\t\t\t\t\t\tconst lineNumber = this._context.getLineNumber();\n\t\t\t\t\t\tif (lineNumber) {\n\t\t\t\t\t\t\treturn lineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveLineNumber', \"'{0}' can not be resolved. Make sure to have a line selected in the active editor.\", match));\n\n\t\t\t\t\tcase 'selectedText':\n\t\t\t\t\t\tconst selectedText = this._context.getSelectedText();\n\t\t\t\t\t\tif (selectedText) {\n\t\t\t\t\t\t\treturn selectedText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveSelectedText', \"'{0}' can not be resolved. Make sure to have some text selected in the active editor.\", match));\n\n\t\t\t\t\tcase 'file':\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'relativeFile':\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\treturn paths.normalize(paths.relative(getFolderUri().fsPath, getFilePath()));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'relativeFileDirname':\n\t\t\t\t\t\tconst dirname = paths.dirname(getFilePath());\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\treturn paths.normalize(paths.relative(getFolderUri().fsPath, dirname));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn dirname;\n\n\t\t\t\t\tcase 'fileDirname':\n\t\t\t\t\t\treturn paths.dirname(getFilePath());\n\n\t\t\t\t\tcase 'fileExtname':\n\t\t\t\t\t\treturn paths.extname(getFilePath());\n\n\t\t\t\t\tcase 'fileBasename':\n\t\t\t\t\t\treturn paths.basename(getFilePath());\n\n\t\t\t\t\tcase 'fileBasenameNoExtension':\n\t\t\t\t\t\tconst basename = paths.basename(getFilePath());\n\t\t\t\t\t\treturn (basename.slice(0, basename.length - paths.extname(basename).length));\n\n\t\t\t\t\tcase 'execPath':\n\t\t\t\t\t\tconst ep = this._context.getExecPath();\n\t\t\t\t\t\tif (ep) {\n\t\t\t\t\t\t\treturn ep;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn this.resolveFromMap(match, variable, commandValueMapping, undefined);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveFromMap(match: string, argument: string | undefined, commandValueMapping: IStringDictionary<string> | undefined, prefix: string | undefined): string {\n\t\tif (argument && commandValueMapping) {\n\t\t\tconst v = (prefix === undefined) ? commandValueMapping[argument] : commandValueMapping[prefix + ':' + argument];\n\t\t\tif (typeof v === 'string') {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tthrow new Error(localize('noValueForCommand', \"'{0}' can not be resolved because the command has no value.\", match));\n\t\t}\n\t\treturn match;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IResourceEditorInput, IEditorOptions, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IEditorInput, IEditorPane, GroupIdentifier, IEditorInputWithOptions, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, ITextEditorPane, ITextDiffEditorPane, IEditorIdentifier, ISaveOptions, IRevertOptions, EditorsOrder, IVisibleEditorPane } from 'vs/workbench/common/editor';\nimport { Event } from 'vs/base/common/event';\nimport { IEditor, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { IEditorGroup, IEditorReplacement } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IEditorService = createDecorator<IEditorService>('editorService');\n\nexport type IResourceEditorInputType = IResourceEditorInput | IUntitledTextResourceEditorInput | IResourceDiffEditorInput;\n\nexport interface IResourceEditorReplacement {\n\treadonly editor: IResourceEditorInputType;\n\treadonly replacement: IResourceEditorInputType;\n}\n\nexport const ACTIVE_GROUP = -1;\nexport type ACTIVE_GROUP_TYPE = typeof ACTIVE_GROUP;\n\nexport const SIDE_GROUP = -2;\nexport type SIDE_GROUP_TYPE = typeof SIDE_GROUP;\n\nexport interface IOpenEditorOverrideEntry {\n\tid: string;\n\tlabel: string;\n\tactive: boolean;\n\tdetail?: string;\n}\n\nexport interface IOpenEditorOverrideHandler {\n\topen(editor: IEditorInput, options: IEditorOptions | ITextEditorOptions | undefined, group: IEditorGroup, id?: string): IOpenEditorOverride | undefined;\n\tgetEditorOverrides?(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): IOpenEditorOverrideEntry[];\n}\n\nexport interface IOpenEditorOverride {\n\n\t/**\n\t * If defined, will prevent the opening of an editor and replace the resulting\n\t * promise with the provided promise for the openEditor() call.\n\t */\n\toverride?: Promise<IEditorPane | undefined>;\n}\n\nexport interface ISaveEditorsOptions extends ISaveOptions {\n\n\t/**\n\t * If true, will ask for a location of the editor to save to.\n\t */\n\treadonly saveAs?: boolean;\n}\n\nexport interface IBaseSaveRevertAllEditorOptions {\n\n\t/**\n\t * Whether to include untitled editors as well.\n\t */\n\treadonly includeUntitled?: boolean;\n}\n\nexport interface ISaveAllEditorsOptions extends ISaveEditorsOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface IRevertAllEditorsOptions extends IRevertOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface ICustomEditorInfo {\n\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly providerDisplayName: string;\n}\n\nexport interface ICustomEditorViewTypesHandler {\n\treadonly onDidChangeViewTypes: Event<void>;\n\tgetViewTypes(): ICustomEditorInfo[];\n}\n\nexport interface IEditorService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Emitted when the currently active editor changes.\n\t *\n\t * @see `IEditorService.activeEditorPane`\n\t */\n\treadonly onDidActiveEditorChange: Event<void>;\n\n\t/**\n\t * Emitted when any of the current visible editors changes.\n\t *\n\t * @see `IEditorService.visibleEditorPanes`\n\t */\n\treadonly onDidVisibleEditorsChange: Event<void>;\n\n\t/**\n\t * The currently active editor pane or `undefined` if none. The editor pane is\n\t * the workbench container for editors of any kind.\n\t *\n\t * @see `IEditorService.activeEditor` for access to the active editor input\n\t */\n\treadonly activeEditorPane: IVisibleEditorPane | undefined;\n\n\t/**\n\t * The currently active editor or `undefined` if none. An editor is active when it is\n\t * located in the currently active editor group. It will be `undefined` if the active\n\t * editor group has no editors open.\n\t */\n\treadonly activeEditor: IEditorInput | undefined;\n\n\t/**\n\t * The currently active text editor control or `undefined` if there is currently no active\n\t * editor or the active editor widget is neither a text nor a diff editor.\n\t *\n\t * @see `IEditorService.activeEditor`\n\t */\n\treadonly activeTextEditorControl: IEditor | IDiffEditor | undefined;\n\n\t/**\n\t * The currently active text editor mode or `undefined` if there is currently no active\n\t * editor or the active editor control is neither a text nor a diff editor. If the active\n\t * editor is a diff editor, the modified side's mode will be taken.\n\t */\n\treadonly activeTextEditorMode: string | undefined;\n\n\t/**\n\t * All editor panes that are currently visible across all editor groups.\n\t *\n\t * @see `IEditorService.visibleEditors` for access to the visible editor inputs\n\t */\n\treadonly visibleEditorPanes: ReadonlyArray<IVisibleEditorPane>;\n\n\t/**\n\t * All editors that are currently visible. An editor is visible when it is opened in an\n\t * editor group and active in that group. Multiple editor groups can be opened at the same time.\n\t */\n\treadonly visibleEditors: ReadonlyArray<IEditorInput>;\n\n\t/**\n\t * All text editor widgets that are currently visible across all editor groups. A text editor\n\t * widget is either a text or a diff editor.\n\t */\n\treadonly visibleTextEditorControls: ReadonlyArray<IEditor | IDiffEditor>;\n\n\t/**\n\t * All editors that are opened across all editor groups in sequential order\n\t * of appearance.\n\t *\n\t * This includes active as well as inactive editors in each editor group.\n\t */\n\treadonly editors: ReadonlyArray<IEditorInput>;\n\n\t/**\n\t * The total number of editors that are opened either inactive or active.\n\t */\n\treadonly count: number;\n\n\t/**\n\t * All editors that are opened across all editor groups with their group\n\t * identifier.\n\t *\n\t * @param order the order of the editors to use\n\t */\n\tgetEditors(order: EditorsOrder): ReadonlyArray<IEditorIdentifier>;\n\n\t/**\n\t * Open an editor in an editor group.\n\t *\n\t * @param editor the editor to open\n\t * @param options the options to use for the editor\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editor that opened or `undefined` if the operation failed or the editor was not\n\t * opened to be active.\n\t */\n\topenEditor(editor: IEditorInput, options?: IEditorOptions | ITextEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceEditorInput | IUntitledTextResourceEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextDiffEditorPane | undefined>;\n\n\t/**\n\t * Open editors in an editor group.\n\t *\n\t * @param editors the editors to open with associated options\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editors that opened. The array can be empty or have less elements for editors\n\t * that failed to open or were instructed to open as inactive.\n\t */\n\topenEditors(editors: IEditorInputWithOptions[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ReadonlyArray<IEditorPane>>;\n\topenEditors(editors: IResourceEditorInputType[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ReadonlyArray<IEditorPane>>;\n\n\t/**\n\t * Replaces editors in an editor group with the provided replacement.\n\t *\n\t * @param editors the editors to replace\n\t *\n\t * @returns a promise that is resolved when the replaced active\n\t * editor (if any) has finished loading.\n\t */\n\treplaceEditors(editors: IResourceEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\treplaceEditors(editors: IEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\n\t/**\n\t * Find out if the provided editor is opened in any editor group.\n\t *\n\t * Note: An editor can be opened but not actively visible.\n\t *\n\t * @param editor the editor to check for being opened. If a\n\t * `IResourceEditorInput` is passed in, the resource is checked on\n\t * all opened editors. In case of a side by side editor, the\n\t * right hand side resource is considered only.\n\t */\n\tisOpen(editor: IResourceEditorInput): boolean;\n\tisOpen(editor: IEditorInput): boolean;\n\n\t/**\n\t * Get all available editor overrides for the editor input.\n\t */\n\tgetEditorOverrides(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): [IOpenEditorOverrideHandler, IOpenEditorOverrideEntry][];\n\n\t/**\n\t * Allows to override the opening of editors by installing a handler that will\n\t * be called each time an editor is about to open allowing to override the\n\t * operation to open a different editor.\n\t */\n\toverrideOpenEditor(handler: IOpenEditorOverrideHandler): IDisposable;\n\n\tregisterCustomEditorViewTypesHandler(source: string, handler: ICustomEditorViewTypesHandler): IDisposable;\n\n\t/**\n\t * Invoke a function in the context of the services of the active editor.\n\t */\n\tinvokeWithinEditorContext<T>(fn: (accessor: ServicesAccessor) => T): T;\n\n\t/**\n\t * Converts a lightweight input to a workbench editor input.\n\t */\n\tcreateEditorInput(input: IResourceEditorInputType): IEditorInput;\n\n\t/**\n\t * Save the provided list of editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsave(editors: IEditorIdentifier | IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Save all editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsaveAll(options?: ISaveAllEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts the provided list of editors.\n\t */\n\trevert(editors: IEditorIdentifier | IEditorIdentifier[], options?: IRevertOptions): Promise<void>;\n\n\t/**\n\t * Reverts all editors.\n\t */\n\trevertAll(options?: IRevertAllEditorsOptions): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as modes from 'vs/editor/common/modes';\nimport * as types from './extHostTypes';\nimport * as search from 'vs/workbench/contrib/search/common/search';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { EditorViewColumn } from 'vs/workbench/api/common/shared/editor';\nimport { IDecorationOptions, IThemeDecorationRenderOptions, IDecorationRenderOptions, IContentDecorationRenderOptions } from 'vs/editor/common/editorCommon';\nimport { EndOfLineSequence, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport type * as vscode from 'vscode';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ProgressLocation as MainProgressLocation } from 'vs/platform/progress/common/progress';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport * as editorRange from 'vs/editor/common/core/range';\nimport { ISelection } from 'vs/editor/common/core/selection';\nimport * as htmlContent from 'vs/base/common/htmlContent';\nimport * as languageSelector from 'vs/editor/common/modes/languageSelector';\nimport * as extHostProtocol from 'vs/workbench/api/common/extHost.protocol';\nimport { MarkerSeverity, IRelatedInformation, IMarkerData, MarkerTag } from 'vs/platform/markers/common/markers';\nimport { ACTIVE_GROUP, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { isString, isNumber } from 'vs/base/common/types';\nimport * as marked from 'vs/base/common/marked/marked';\nimport { parse } from 'vs/base/common/marshalling';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { LogLevel as _MainLogLevel } from 'vs/platform/log/common/log';\nimport { coalesce, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { RenderLineNumbersType } from 'vs/editor/common/config/editorOptions';\nimport { CommandsConverter } from 'vs/workbench/api/common/extHostCommands';\n\nexport interface PositionLike {\n\tline: number;\n\tcharacter: number;\n}\n\nexport interface RangeLike {\n\tstart: PositionLike;\n\tend: PositionLike;\n}\n\nexport interface SelectionLike extends RangeLike {\n\tanchor: PositionLike;\n\tactive: PositionLike;\n}\nexport namespace Selection {\n\n\texport function to(selection: ISelection): types.Selection {\n\t\tconst { selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn } = selection;\n\t\tconst start = new types.Position(selectionStartLineNumber - 1, selectionStartColumn - 1);\n\t\tconst end = new types.Position(positionLineNumber - 1, positionColumn - 1);\n\t\treturn new types.Selection(start, end);\n\t}\n\n\texport function from(selection: SelectionLike): ISelection {\n\t\tconst { anchor, active } = selection;\n\t\treturn {\n\t\t\tselectionStartLineNumber: anchor.line + 1,\n\t\t\tselectionStartColumn: anchor.character + 1,\n\t\t\tpositionLineNumber: active.line + 1,\n\t\t\tpositionColumn: active.character + 1\n\t\t};\n\t}\n}\nexport namespace Range {\n\n\texport function from(range: undefined): undefined;\n\texport function from(range: RangeLike): editorRange.IRange;\n\texport function from(range: RangeLike | undefined): editorRange.IRange | undefined;\n\texport function from(range: RangeLike | undefined): editorRange.IRange | undefined {\n\t\tif (!range) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { start, end } = range;\n\t\treturn {\n\t\t\tstartLineNumber: start.line + 1,\n\t\t\tstartColumn: start.character + 1,\n\t\t\tendLineNumber: end.line + 1,\n\t\t\tendColumn: end.character + 1\n\t\t};\n\t}\n\n\texport function to(range: undefined): types.Range;\n\texport function to(range: editorRange.IRange): types.Range;\n\texport function to(range: editorRange.IRange | undefined): types.Range | undefined;\n\texport function to(range: editorRange.IRange | undefined): types.Range | undefined {\n\t\tif (!range) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { startLineNumber, startColumn, endLineNumber, endColumn } = range;\n\t\treturn new types.Range(startLineNumber - 1, startColumn - 1, endLineNumber - 1, endColumn - 1);\n\t}\n}\n\nexport namespace Position {\n\texport function to(position: IPosition): types.Position {\n\t\treturn new types.Position(position.lineNumber - 1, position.column - 1);\n\t}\n\texport function from(position: types.Position): IPosition {\n\t\treturn { lineNumber: position.line + 1, column: position.character + 1 };\n\t}\n}\n\nexport namespace DiagnosticTag {\n\texport function from(value: vscode.DiagnosticTag): MarkerTag | undefined {\n\t\tswitch (value) {\n\t\t\tcase types.DiagnosticTag.Unnecessary:\n\t\t\t\treturn MarkerTag.Unnecessary;\n\t\t\tcase types.DiagnosticTag.Deprecated:\n\t\t\t\treturn MarkerTag.Deprecated;\n\t\t}\n\t\treturn undefined;\n\t}\n\texport function to(value: MarkerTag): vscode.DiagnosticTag | undefined {\n\t\tswitch (value) {\n\t\t\tcase MarkerTag.Unnecessary:\n\t\t\t\treturn types.DiagnosticTag.Unnecessary;\n\t\t\tcase MarkerTag.Deprecated:\n\t\t\t\treturn types.DiagnosticTag.Deprecated;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport namespace Diagnostic {\n\texport function from(value: vscode.Diagnostic): IMarkerData {\n\t\tlet code: string | { value: string; target: URI } | undefined;\n\n\t\tif (value.code) {\n\t\t\tif (isString(value.code) || isNumber(value.code)) {\n\t\t\t\tcode = String(value.code);\n\t\t\t} else {\n\t\t\t\tcode = {\n\t\t\t\t\tvalue: String(value.code.value),\n\t\t\t\t\ttarget: value.code.target,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...Range.from(value.range),\n\t\t\tmessage: value.message,\n\t\t\tsource: value.source,\n\t\t\tcode,\n\t\t\tseverity: DiagnosticSeverity.from(value.severity),\n\t\t\trelatedInformation: value.relatedInformation && value.relatedInformation.map(DiagnosticRelatedInformation.from),\n\t\t\ttags: Array.isArray(value.tags) ? coalesce(value.tags.map(DiagnosticTag.from)) : undefined,\n\t\t};\n\t}\n\n\texport function to(value: IMarkerData): vscode.Diagnostic {\n\t\tconst res = new types.Diagnostic(Range.to(value), value.message, DiagnosticSeverity.to(value.severity));\n\t\tres.source = value.source;\n\t\tres.code = isString(value.code) ? value.code : value.code?.value;\n\t\tres.relatedInformation = value.relatedInformation && value.relatedInformation.map(DiagnosticRelatedInformation.to);\n\t\tres.tags = value.tags && coalesce(value.tags.map(DiagnosticTag.to));\n\t\treturn res;\n\t}\n}\n\nexport namespace DiagnosticRelatedInformation {\n\texport function from(value: vscode.DiagnosticRelatedInformation): IRelatedInformation {\n\t\treturn {\n\t\t\t...Range.from(value.location.range),\n\t\t\tmessage: value.message,\n\t\t\tresource: value.location.uri\n\t\t};\n\t}\n\texport function to(value: IRelatedInformation): types.DiagnosticRelatedInformation {\n\t\treturn new types.DiagnosticRelatedInformation(new types.Location(value.resource, Range.to(value)), value.message);\n\t}\n}\nexport namespace DiagnosticSeverity {\n\n\texport function from(value: number): MarkerSeverity {\n\t\tswitch (value) {\n\t\t\tcase types.DiagnosticSeverity.Error:\n\t\t\t\treturn MarkerSeverity.Error;\n\t\t\tcase types.DiagnosticSeverity.Warning:\n\t\t\t\treturn MarkerSeverity.Warning;\n\t\t\tcase types.DiagnosticSeverity.Information:\n\t\t\t\treturn MarkerSeverity.Info;\n\t\t\tcase types.DiagnosticSeverity.Hint:\n\t\t\t\treturn MarkerSeverity.Hint;\n\t\t}\n\t\treturn MarkerSeverity.Error;\n\t}\n\n\texport function to(value: MarkerSeverity): types.DiagnosticSeverity {\n\t\tswitch (value) {\n\t\t\tcase MarkerSeverity.Info:\n\t\t\t\treturn types.DiagnosticSeverity.Information;\n\t\t\tcase MarkerSeverity.Warning:\n\t\t\t\treturn types.DiagnosticSeverity.Warning;\n\t\t\tcase MarkerSeverity.Error:\n\t\t\t\treturn types.DiagnosticSeverity.Error;\n\t\t\tcase MarkerSeverity.Hint:\n\t\t\t\treturn types.DiagnosticSeverity.Hint;\n\t\t}\n\t\treturn types.DiagnosticSeverity.Error;\n\t}\n}\n\nexport namespace ViewColumn {\n\texport function from(column?: vscode.ViewColumn): EditorViewColumn {\n\t\tif (typeof column === 'number' && column >= types.ViewColumn.One) {\n\t\t\treturn column - 1; // adjust zero index (ViewColumn.ONE => 0)\n\t\t}\n\n\t\tif (column === types.ViewColumn.Beside) {\n\t\t\treturn SIDE_GROUP;\n\t\t}\n\n\t\treturn ACTIVE_GROUP; // default is always the active group\n\t}\n\n\texport function to(position: EditorViewColumn): vscode.ViewColumn {\n\t\tif (typeof position === 'number' && position >= 0) {\n\t\t\treturn position + 1; // adjust to index (ViewColumn.ONE => 1)\n\t\t}\n\n\t\tthrow new Error(`invalid 'EditorViewColumn'`);\n\t}\n}\n\nfunction isDecorationOptions(something: any): something is vscode.DecorationOptions {\n\treturn (typeof something.range !== 'undefined');\n}\n\nexport function isDecorationOptionsArr(something: vscode.Range[] | vscode.DecorationOptions[]): something is vscode.DecorationOptions[] {\n\tif (something.length === 0) {\n\t\treturn true;\n\t}\n\treturn isDecorationOptions(something[0]) ? true : false;\n}\n\nexport namespace MarkdownString {\n\n\texport function fromMany(markup: (vscode.MarkdownString | vscode.MarkedString)[]): htmlContent.IMarkdownString[] {\n\t\treturn markup.map(MarkdownString.from);\n\t}\n\n\tinterface Codeblock {\n\t\tlanguage: string;\n\t\tvalue: string;\n\t}\n\n\tfunction isCodeblock(thing: any): thing is Codeblock {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& typeof (<Codeblock>thing).language === 'string'\n\t\t\t&& typeof (<Codeblock>thing).value === 'string';\n\t}\n\n\texport function from(markup: vscode.MarkdownString | vscode.MarkedString): htmlContent.IMarkdownString {\n\t\tlet res: htmlContent.IMarkdownString;\n\t\tif (isCodeblock(markup)) {\n\t\t\tconst { language, value } = markup;\n\t\t\tres = { value: '```' + language + '\\n' + value + '\\n```\\n' };\n\t\t} else if (htmlContent.isMarkdownString(markup)) {\n\t\t\tres = markup;\n\t\t} else if (typeof markup === 'string') {\n\t\t\tres = { value: markup };\n\t\t} else {\n\t\t\tres = { value: '' };\n\t\t}\n\n\t\t// extract uris into a separate object\n\t\tconst resUris: { [href: string]: UriComponents; } = Object.create(null);\n\t\tres.uris = resUris;\n\n\t\tconst collectUri = (href: string): string => {\n\t\t\ttry {\n\t\t\t\tlet uri = URI.parse(href, true);\n\t\t\t\turi = uri.with({ query: _uriMassage(uri.query, resUris) });\n\t\t\t\tresUris[href] = uri;\n\t\t\t} catch (e) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t\treturn '';\n\t\t};\n\t\tconst renderer = new marked.Renderer();\n\t\trenderer.link = collectUri;\n\t\trenderer.image = href => collectUri(htmlContent.parseHrefAndDimensions(href).href);\n\n\t\tmarked(res.value, { renderer });\n\n\t\treturn res;\n\t}\n\n\tfunction _uriMassage(part: string, bucket: { [n: string]: UriComponents; }): string {\n\t\tif (!part) {\n\t\t\treturn part;\n\t\t}\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = parse(part);\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tif (!data) {\n\t\t\treturn part;\n\t\t}\n\t\tlet changed = false;\n\t\tdata = cloneAndChange(data, value => {\n\t\t\tif (URI.isUri(value)) {\n\t\t\t\tconst key = `__uri_${Math.random().toString(16).slice(2, 8)}`;\n\t\t\t\tbucket[key] = value;\n\t\t\t\tchanged = true;\n\t\t\t\treturn key;\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\tif (!changed) {\n\t\t\treturn part;\n\t\t}\n\n\t\treturn JSON.stringify(data);\n\t}\n\n\texport function to(value: htmlContent.IMarkdownString): vscode.MarkdownString {\n\t\treturn new htmlContent.MarkdownString(value.value, { isTrusted: value.isTrusted, supportThemeIcons: value.supportThemeIcons });\n\t}\n\n\texport function fromStrict(value: string | types.MarkdownString): undefined | string | htmlContent.IMarkdownString {\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn typeof value === 'string' ? value : MarkdownString.from(value);\n\t}\n}\n\nexport function fromRangeOrRangeWithMessage(ranges: vscode.Range[] | vscode.DecorationOptions[]): IDecorationOptions[] {\n\tif (isDecorationOptionsArr(ranges)) {\n\t\treturn ranges.map((r): IDecorationOptions => {\n\t\t\treturn {\n\t\t\t\trange: Range.from(r.range),\n\t\t\t\thoverMessage: Array.isArray(r.hoverMessage)\n\t\t\t\t\t? MarkdownString.fromMany(r.hoverMessage)\n\t\t\t\t\t: (r.hoverMessage ? MarkdownString.from(r.hoverMessage) : undefined),\n\t\t\t\trenderOptions: <any> /* URI vs Uri */r.renderOptions\n\t\t\t};\n\t\t});\n\t} else {\n\t\treturn ranges.map((r): IDecorationOptions => {\n\t\t\treturn {\n\t\t\t\trange: Range.from(r)\n\t\t\t};\n\t\t});\n\t}\n}\n\nexport function pathOrURIToURI(value: string | URI): URI {\n\tif (typeof value === 'undefined') {\n\t\treturn value;\n\t}\n\tif (typeof value === 'string') {\n\t\treturn URI.file(value);\n\t} else {\n\t\treturn value;\n\t}\n}\n\nexport namespace ThemableDecorationAttachmentRenderOptions {\n\texport function from(options: vscode.ThemableDecorationAttachmentRenderOptions): IContentDecorationRenderOptions {\n\t\tif (typeof options === 'undefined') {\n\t\t\treturn options;\n\t\t}\n\t\treturn {\n\t\t\tcontentText: options.contentText,\n\t\t\tcontentIconPath: options.contentIconPath ? pathOrURIToURI(options.contentIconPath) : undefined,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\tmargin: options.margin,\n\t\t\twidth: options.width,\n\t\t\theight: options.height,\n\t\t};\n\t}\n}\n\nexport namespace ThemableDecorationRenderOptions {\n\texport function from(options: vscode.ThemableDecorationRenderOptions): IThemeDecorationRenderOptions {\n\t\tif (typeof options === 'undefined') {\n\t\t\treturn options;\n\t\t}\n\t\treturn {\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\toutline: options.outline,\n\t\t\toutlineColor: <string | types.ThemeColor>options.outlineColor,\n\t\t\toutlineStyle: options.outlineStyle,\n\t\t\toutlineWidth: options.outlineWidth,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tborderRadius: options.borderRadius,\n\t\t\tborderSpacing: options.borderSpacing,\n\t\t\tborderStyle: options.borderStyle,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcursor: options.cursor,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\topacity: options.opacity,\n\t\t\tletterSpacing: options.letterSpacing,\n\t\t\tgutterIconPath: options.gutterIconPath ? pathOrURIToURI(options.gutterIconPath) : undefined,\n\t\t\tgutterIconSize: options.gutterIconSize,\n\t\t\toverviewRulerColor: <string | types.ThemeColor>options.overviewRulerColor,\n\t\t\tbefore: options.before ? ThemableDecorationAttachmentRenderOptions.from(options.before) : undefined,\n\t\t\tafter: options.after ? ThemableDecorationAttachmentRenderOptions.from(options.after) : undefined,\n\t\t};\n\t}\n}\n\nexport namespace DecorationRangeBehavior {\n\texport function from(value: types.DecorationRangeBehavior): TrackedRangeStickiness {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn value;\n\t\t}\n\t\tswitch (value) {\n\t\t\tcase types.DecorationRangeBehavior.OpenOpen:\n\t\t\t\treturn TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges;\n\t\t\tcase types.DecorationRangeBehavior.ClosedClosed:\n\t\t\t\treturn TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges;\n\t\t\tcase types.DecorationRangeBehavior.OpenClosed:\n\t\t\t\treturn TrackedRangeStickiness.GrowsOnlyWhenTypingBefore;\n\t\t\tcase types.DecorationRangeBehavior.ClosedOpen:\n\t\t\t\treturn TrackedRangeStickiness.GrowsOnlyWhenTypingAfter;\n\t\t}\n\t}\n}\n\nexport namespace DecorationRenderOptions {\n\texport function from(options: vscode.DecorationRenderOptions): IDecorationRenderOptions {\n\t\treturn {\n\t\t\tisWholeLine: options.isWholeLine,\n\t\t\trangeBehavior: options.rangeBehavior ? DecorationRangeBehavior.from(options.rangeBehavior) : undefined,\n\t\t\toverviewRulerLane: options.overviewRulerLane,\n\t\t\tlight: options.light ? ThemableDecorationRenderOptions.from(options.light) : undefined,\n\t\t\tdark: options.dark ? ThemableDecorationRenderOptions.from(options.dark) : undefined,\n\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\toutline: options.outline,\n\t\t\toutlineColor: <string | types.ThemeColor>options.outlineColor,\n\t\t\toutlineStyle: options.outlineStyle,\n\t\t\toutlineWidth: options.outlineWidth,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tborderRadius: options.borderRadius,\n\t\t\tborderSpacing: options.borderSpacing,\n\t\t\tborderStyle: options.borderStyle,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcursor: options.cursor,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\topacity: options.opacity,\n\t\t\tletterSpacing: options.letterSpacing,\n\t\t\tgutterIconPath: options.gutterIconPath ? pathOrURIToURI(options.gutterIconPath) : undefined,\n\t\t\tgutterIconSize: options.gutterIconSize,\n\t\t\toverviewRulerColor: <string | types.ThemeColor>options.overviewRulerColor,\n\t\t\tbefore: options.before ? ThemableDecorationAttachmentRenderOptions.from(options.before) : undefined,\n\t\t\tafter: options.after ? ThemableDecorationAttachmentRenderOptions.from(options.after) : undefined,\n\t\t};\n\t}\n}\n\nexport namespace TextEdit {\n\n\texport function from(edit: vscode.TextEdit): modes.TextEdit {\n\t\treturn <modes.TextEdit>{\n\t\t\ttext: edit.newText,\n\t\t\teol: edit.newEol && EndOfLine.from(edit.newEol),\n\t\t\trange: Range.from(edit.range)\n\t\t};\n\t}\n\n\texport function to(edit: modes.TextEdit): types.TextEdit {\n\t\tconst result = new types.TextEdit(Range.to(edit.range), edit.text);\n\t\tresult.newEol = (typeof edit.eol === 'undefined' ? undefined : EndOfLine.to(edit.eol))!;\n\t\treturn result;\n\t}\n}\n\nexport namespace WorkspaceEdit {\n\texport function from(value: vscode.WorkspaceEdit, documents?: ExtHostDocumentsAndEditors): extHostProtocol.IWorkspaceEditDto {\n\t\tconst result: extHostProtocol.IWorkspaceEditDto = {\n\t\t\tedits: []\n\t\t};\n\n\t\tif (value instanceof types.WorkspaceEdit) {\n\t\t\tfor (let entry of value.allEntries()) {\n\n\t\t\t\tif (entry._type === 1) {\n\t\t\t\t\t// file operation\n\t\t\t\t\tresult.edits.push(<extHostProtocol.IWorkspaceFileEditDto>{\n\t\t\t\t\t\toldUri: entry.from,\n\t\t\t\t\t\tnewUri: entry.to,\n\t\t\t\t\t\toptions: entry.options,\n\t\t\t\t\t\tmetadata: entry.metadata\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\t\t\t\t\t// text edits\n\t\t\t\t\tconst doc = documents?.getDocument(entry.uri);\n\t\t\t\t\tresult.edits.push(<extHostProtocol.IWorkspaceTextEditDto>{\n\t\t\t\t\t\tresource: entry.uri,\n\t\t\t\t\t\tedit: TextEdit.from(entry.edit),\n\t\t\t\t\t\tmodelVersionId: doc?.version,\n\t\t\t\t\t\tmetadata: entry.metadata\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\texport function to(value: extHostProtocol.IWorkspaceEditDto) {\n\t\tconst result = new types.WorkspaceEdit();\n\t\tfor (const edit of value.edits) {\n\t\t\tif ((<extHostProtocol.IWorkspaceTextEditDto>edit).edit) {\n\t\t\t\tresult.replace(\n\t\t\t\t\tURI.revive((<extHostProtocol.IWorkspaceTextEditDto>edit).resource),\n\t\t\t\t\tRange.to((<extHostProtocol.IWorkspaceTextEditDto>edit).edit.range),\n\t\t\t\t\t(<extHostProtocol.IWorkspaceTextEditDto>edit).edit.text\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult.renameFile(\n\t\t\t\t\tURI.revive((<extHostProtocol.IWorkspaceFileEditDto>edit).oldUri!),\n\t\t\t\t\tURI.revive((<extHostProtocol.IWorkspaceFileEditDto>edit).newUri!),\n\t\t\t\t\t(<extHostProtocol.IWorkspaceFileEditDto>edit).options\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\n\nexport namespace SymbolKind {\n\n\tconst _fromMapping: { [kind: number]: modes.SymbolKind; } = Object.create(null);\n\t_fromMapping[types.SymbolKind.File] = modes.SymbolKind.File;\n\t_fromMapping[types.SymbolKind.Module] = modes.SymbolKind.Module;\n\t_fromMapping[types.SymbolKind.Namespace] = modes.SymbolKind.Namespace;\n\t_fromMapping[types.SymbolKind.Package] = modes.SymbolKind.Package;\n\t_fromMapping[types.SymbolKind.Class] = modes.SymbolKind.Class;\n\t_fromMapping[types.SymbolKind.Method] = modes.SymbolKind.Method;\n\t_fromMapping[types.SymbolKind.Property] = modes.SymbolKind.Property;\n\t_fromMapping[types.SymbolKind.Field] = modes.SymbolKind.Field;\n\t_fromMapping[types.SymbolKind.Constructor] = modes.SymbolKind.Constructor;\n\t_fromMapping[types.SymbolKind.Enum] = modes.SymbolKind.Enum;\n\t_fromMapping[types.SymbolKind.Interface] = modes.SymbolKind.Interface;\n\t_fromMapping[types.SymbolKind.Function] = modes.SymbolKind.Function;\n\t_fromMapping[types.SymbolKind.Variable] = modes.SymbolKind.Variable;\n\t_fromMapping[types.SymbolKind.Constant] = modes.SymbolKind.Constant;\n\t_fromMapping[types.SymbolKind.String] = modes.SymbolKind.String;\n\t_fromMapping[types.SymbolKind.Number] = modes.SymbolKind.Number;\n\t_fromMapping[types.SymbolKind.Boolean] = modes.SymbolKind.Boolean;\n\t_fromMapping[types.SymbolKind.Array] = modes.SymbolKind.Array;\n\t_fromMapping[types.SymbolKind.Object] = modes.SymbolKind.Object;\n\t_fromMapping[types.SymbolKind.Key] = modes.SymbolKind.Key;\n\t_fromMapping[types.SymbolKind.Null] = modes.SymbolKind.Null;\n\t_fromMapping[types.SymbolKind.EnumMember] = modes.SymbolKind.EnumMember;\n\t_fromMapping[types.SymbolKind.Struct] = modes.SymbolKind.Struct;\n\t_fromMapping[types.SymbolKind.Event] = modes.SymbolKind.Event;\n\t_fromMapping[types.SymbolKind.Operator] = modes.SymbolKind.Operator;\n\t_fromMapping[types.SymbolKind.TypeParameter] = modes.SymbolKind.TypeParameter;\n\n\texport function from(kind: vscode.SymbolKind): modes.SymbolKind {\n\t\treturn typeof _fromMapping[kind] === 'number' ? _fromMapping[kind] : modes.SymbolKind.Property;\n\t}\n\n\texport function to(kind: modes.SymbolKind): vscode.SymbolKind {\n\t\tfor (const k in _fromMapping) {\n\t\t\tif (_fromMapping[k] === kind) {\n\t\t\t\treturn Number(k);\n\t\t\t}\n\t\t}\n\t\treturn types.SymbolKind.Property;\n\t}\n}\n\nexport namespace SymbolTag {\n\n\texport function from(kind: types.SymbolTag): modes.SymbolTag {\n\t\tswitch (kind) {\n\t\t\tcase types.SymbolTag.Deprecated: return modes.SymbolTag.Deprecated;\n\t\t}\n\t}\n\n\texport function to(kind: modes.SymbolTag): types.SymbolTag {\n\t\tswitch (kind) {\n\t\t\tcase modes.SymbolTag.Deprecated: return types.SymbolTag.Deprecated;\n\t\t}\n\t}\n}\n\nexport namespace WorkspaceSymbol {\n\texport function from(info: vscode.SymbolInformation): search.IWorkspaceSymbol {\n\t\treturn <search.IWorkspaceSymbol>{\n\t\t\tname: info.name,\n\t\t\tkind: SymbolKind.from(info.kind),\n\t\t\ttags: info.tags && info.tags.map(SymbolTag.from),\n\t\t\tcontainerName: info.containerName,\n\t\t\tlocation: location.from(info.location)\n\t\t};\n\t}\n\texport function to(info: search.IWorkspaceSymbol): types.SymbolInformation {\n\t\tconst result = new types.SymbolInformation(\n\t\t\tinfo.name,\n\t\t\tSymbolKind.to(info.kind),\n\t\t\tinfo.containerName,\n\t\t\tlocation.to(info.location)\n\t\t);\n\t\tresult.tags = info.tags && info.tags.map(SymbolTag.to);\n\t\treturn result;\n\t}\n}\n\nexport namespace DocumentSymbol {\n\texport function from(info: vscode.DocumentSymbol): modes.DocumentSymbol {\n\t\tconst result: modes.DocumentSymbol = {\n\t\t\tname: info.name || '!!MISSING: name!!',\n\t\t\tdetail: info.detail,\n\t\t\trange: Range.from(info.range),\n\t\t\tselectionRange: Range.from(info.selectionRange),\n\t\t\tkind: SymbolKind.from(info.kind),\n\t\t\ttags: info.tags ? info.tags.map(SymbolTag.from) : []\n\t\t};\n\t\tif (info.children) {\n\t\t\tresult.children = info.children.map(from);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(info: modes.DocumentSymbol): vscode.DocumentSymbol {\n\t\tconst result = new types.DocumentSymbol(\n\t\t\tinfo.name,\n\t\t\tinfo.detail,\n\t\t\tSymbolKind.to(info.kind),\n\t\t\tRange.to(info.range),\n\t\t\tRange.to(info.selectionRange),\n\t\t);\n\t\tif (isNonEmptyArray(info.tags)) {\n\t\t\tresult.tags = info.tags.map(SymbolTag.to);\n\t\t}\n\t\tif (info.children) {\n\t\t\tresult.children = info.children.map(to) as any;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport namespace CallHierarchyItem {\n\n\texport function to(item: extHostProtocol.ICallHierarchyItemDto): types.CallHierarchyItem {\n\t\tconst result = new types.CallHierarchyItem(\n\t\t\tSymbolKind.to(item.kind),\n\t\t\titem.name,\n\t\t\titem.detail || '',\n\t\t\tURI.revive(item.uri),\n\t\t\tRange.to(item.range),\n\t\t\tRange.to(item.selectionRange)\n\t\t);\n\n\t\tresult._sessionId = item._sessionId;\n\t\tresult._itemId = item._itemId;\n\n\t\treturn result;\n\t}\n}\n\nexport namespace CallHierarchyIncomingCall {\n\n\texport function to(item: extHostProtocol.IIncomingCallDto): types.CallHierarchyIncomingCall {\n\t\treturn new types.CallHierarchyIncomingCall(\n\t\t\tCallHierarchyItem.to(item.from),\n\t\t\titem.fromRanges.map(r => Range.to(r))\n\t\t);\n\t}\n}\n\nexport namespace CallHierarchyOutgoingCall {\n\n\texport function to(item: extHostProtocol.IOutgoingCallDto): types.CallHierarchyOutgoingCall {\n\t\treturn new types.CallHierarchyOutgoingCall(\n\t\t\tCallHierarchyItem.to(item.to),\n\t\t\titem.fromRanges.map(r => Range.to(r))\n\t\t);\n\t}\n}\n\n\nexport namespace location {\n\texport function from(value: vscode.Location): modes.Location {\n\t\treturn {\n\t\t\trange: value.range && Range.from(value.range),\n\t\t\turi: value.uri\n\t\t};\n\t}\n\n\texport function to(value: modes.Location): types.Location {\n\t\treturn new types.Location(value.uri, Range.to(value.range));\n\t}\n}\n\nexport namespace DefinitionLink {\n\texport function from(value: vscode.Location | vscode.DefinitionLink): modes.LocationLink {\n\t\tconst definitionLink = <vscode.DefinitionLink>value;\n\t\tconst location = <vscode.Location>value;\n\t\treturn {\n\t\t\toriginSelectionRange: definitionLink.originSelectionRange\n\t\t\t\t? Range.from(definitionLink.originSelectionRange)\n\t\t\t\t: undefined,\n\t\t\turi: definitionLink.targetUri ? definitionLink.targetUri : location.uri,\n\t\t\trange: Range.from(definitionLink.targetRange ? definitionLink.targetRange : location.range),\n\t\t\ttargetSelectionRange: definitionLink.targetSelectionRange\n\t\t\t\t? Range.from(definitionLink.targetSelectionRange)\n\t\t\t\t: undefined,\n\t\t};\n\t}\n\texport function to(value: modes.LocationLink): vscode.LocationLink {\n\t\treturn {\n\t\t\ttargetUri: value.uri,\n\t\t\ttargetRange: Range.to(value.range),\n\t\t\ttargetSelectionRange: value.targetSelectionRange\n\t\t\t\t? Range.to(value.targetSelectionRange)\n\t\t\t\t: undefined,\n\t\t\toriginSelectionRange: value.originSelectionRange\n\t\t\t\t? Range.to(value.originSelectionRange)\n\t\t\t\t: undefined\n\t\t};\n\t}\n}\n\nexport namespace Hover {\n\texport function from(hover: vscode.Hover): modes.Hover {\n\t\treturn <modes.Hover>{\n\t\t\trange: Range.from(hover.range),\n\t\t\tcontents: MarkdownString.fromMany(hover.contents)\n\t\t};\n\t}\n\n\texport function to(info: modes.Hover): types.Hover {\n\t\treturn new types.Hover(info.contents.map(MarkdownString.to), Range.to(info.range));\n\t}\n}\n\nexport namespace EvaluatableExpression {\n\texport function from(expression: vscode.EvaluatableExpression): modes.EvaluatableExpression {\n\t\treturn <modes.EvaluatableExpression>{\n\t\t\trange: Range.from(expression.range),\n\t\t\texpression: expression.expression\n\t\t};\n\t}\n\n\texport function to(info: modes.EvaluatableExpression): types.EvaluatableExpression {\n\t\treturn new types.EvaluatableExpression(Range.to(info.range), info.expression);\n\t}\n}\n\nexport namespace DocumentHighlight {\n\texport function from(documentHighlight: vscode.DocumentHighlight): modes.DocumentHighlight {\n\t\treturn {\n\t\t\trange: Range.from(documentHighlight.range),\n\t\t\tkind: documentHighlight.kind\n\t\t};\n\t}\n\texport function to(occurrence: modes.DocumentHighlight): types.DocumentHighlight {\n\t\treturn new types.DocumentHighlight(Range.to(occurrence.range), occurrence.kind);\n\t}\n}\n\nexport namespace CompletionTriggerKind {\n\texport function to(kind: modes.CompletionTriggerKind) {\n\t\tswitch (kind) {\n\t\t\tcase modes.CompletionTriggerKind.TriggerCharacter:\n\t\t\t\treturn types.CompletionTriggerKind.TriggerCharacter;\n\t\t\tcase modes.CompletionTriggerKind.TriggerForIncompleteCompletions:\n\t\t\t\treturn types.CompletionTriggerKind.TriggerForIncompleteCompletions;\n\t\t\tcase modes.CompletionTriggerKind.Invoke:\n\t\t\tdefault:\n\t\t\t\treturn types.CompletionTriggerKind.Invoke;\n\t\t}\n\t}\n}\n\nexport namespace CompletionContext {\n\texport function to(context: modes.CompletionContext): types.CompletionContext {\n\t\treturn {\n\t\t\ttriggerKind: CompletionTriggerKind.to(context.triggerKind),\n\t\t\ttriggerCharacter: context.triggerCharacter\n\t\t};\n\t}\n}\n\nexport namespace CompletionItemTag {\n\n\texport function from(kind: types.CompletionItemTag): modes.CompletionItemTag {\n\t\tswitch (kind) {\n\t\t\tcase types.CompletionItemTag.Deprecated: return modes.CompletionItemTag.Deprecated;\n\t\t}\n\t}\n\n\texport function to(kind: modes.CompletionItemTag): types.CompletionItemTag {\n\t\tswitch (kind) {\n\t\t\tcase modes.CompletionItemTag.Deprecated: return types.CompletionItemTag.Deprecated;\n\t\t}\n\t}\n}\n\nexport namespace CompletionItemKind {\n\n\tconst _from = new Map<types.CompletionItemKind, modes.CompletionItemKind>([\n\t\t[types.CompletionItemKind.Method, modes.CompletionItemKind.Method],\n\t\t[types.CompletionItemKind.Function, modes.CompletionItemKind.Function],\n\t\t[types.CompletionItemKind.Constructor, modes.CompletionItemKind.Constructor],\n\t\t[types.CompletionItemKind.Field, modes.CompletionItemKind.Field],\n\t\t[types.CompletionItemKind.Variable, modes.CompletionItemKind.Variable],\n\t\t[types.CompletionItemKind.Class, modes.CompletionItemKind.Class],\n\t\t[types.CompletionItemKind.Interface, modes.CompletionItemKind.Interface],\n\t\t[types.CompletionItemKind.Struct, modes.CompletionItemKind.Struct],\n\t\t[types.CompletionItemKind.Module, modes.CompletionItemKind.Module],\n\t\t[types.CompletionItemKind.Property, modes.CompletionItemKind.Property],\n\t\t[types.CompletionItemKind.Unit, modes.CompletionItemKind.Unit],\n\t\t[types.CompletionItemKind.Value, modes.CompletionItemKind.Value],\n\t\t[types.CompletionItemKind.Constant, modes.CompletionItemKind.Constant],\n\t\t[types.CompletionItemKind.Enum, modes.CompletionItemKind.Enum],\n\t\t[types.CompletionItemKind.EnumMember, modes.CompletionItemKind.EnumMember],\n\t\t[types.CompletionItemKind.Keyword, modes.CompletionItemKind.Keyword],\n\t\t[types.CompletionItemKind.Snippet, modes.CompletionItemKind.Snippet],\n\t\t[types.CompletionItemKind.Text, modes.CompletionItemKind.Text],\n\t\t[types.CompletionItemKind.Color, modes.CompletionItemKind.Color],\n\t\t[types.CompletionItemKind.File, modes.CompletionItemKind.File],\n\t\t[types.CompletionItemKind.Reference, modes.CompletionItemKind.Reference],\n\t\t[types.CompletionItemKind.Folder, modes.CompletionItemKind.Folder],\n\t\t[types.CompletionItemKind.Event, modes.CompletionItemKind.Event],\n\t\t[types.CompletionItemKind.Operator, modes.CompletionItemKind.Operator],\n\t\t[types.CompletionItemKind.TypeParameter, modes.CompletionItemKind.TypeParameter],\n\t\t[types.CompletionItemKind.Issue, modes.CompletionItemKind.Issue],\n\t\t[types.CompletionItemKind.User, modes.CompletionItemKind.User],\n\t]);\n\n\texport function from(kind: types.CompletionItemKind): modes.CompletionItemKind {\n\t\treturn _from.get(kind) ?? modes.CompletionItemKind.Property;\n\t}\n\n\tconst _to = new Map<modes.CompletionItemKind, types.CompletionItemKind>([\n\t\t[modes.CompletionItemKind.Method, types.CompletionItemKind.Method],\n\t\t[modes.CompletionItemKind.Function, types.CompletionItemKind.Function],\n\t\t[modes.CompletionItemKind.Constructor, types.CompletionItemKind.Constructor],\n\t\t[modes.CompletionItemKind.Field, types.CompletionItemKind.Field],\n\t\t[modes.CompletionItemKind.Variable, types.CompletionItemKind.Variable],\n\t\t[modes.CompletionItemKind.Class, types.CompletionItemKind.Class],\n\t\t[modes.CompletionItemKind.Interface, types.CompletionItemKind.Interface],\n\t\t[modes.CompletionItemKind.Struct, types.CompletionItemKind.Struct],\n\t\t[modes.CompletionItemKind.Module, types.CompletionItemKind.Module],\n\t\t[modes.CompletionItemKind.Property, types.CompletionItemKind.Property],\n\t\t[modes.CompletionItemKind.Unit, types.CompletionItemKind.Unit],\n\t\t[modes.CompletionItemKind.Value, types.CompletionItemKind.Value],\n\t\t[modes.CompletionItemKind.Constant, types.CompletionItemKind.Constant],\n\t\t[modes.CompletionItemKind.Enum, types.CompletionItemKind.Enum],\n\t\t[modes.CompletionItemKind.EnumMember, types.CompletionItemKind.EnumMember],\n\t\t[modes.CompletionItemKind.Keyword, types.CompletionItemKind.Keyword],\n\t\t[modes.CompletionItemKind.Snippet, types.CompletionItemKind.Snippet],\n\t\t[modes.CompletionItemKind.Text, types.CompletionItemKind.Text],\n\t\t[modes.CompletionItemKind.Color, types.CompletionItemKind.Color],\n\t\t[modes.CompletionItemKind.File, types.CompletionItemKind.File],\n\t\t[modes.CompletionItemKind.Reference, types.CompletionItemKind.Reference],\n\t\t[modes.CompletionItemKind.Folder, types.CompletionItemKind.Folder],\n\t\t[modes.CompletionItemKind.Event, types.CompletionItemKind.Event],\n\t\t[modes.CompletionItemKind.Operator, types.CompletionItemKind.Operator],\n\t\t[modes.CompletionItemKind.TypeParameter, types.CompletionItemKind.TypeParameter],\n\t\t[modes.CompletionItemKind.User, types.CompletionItemKind.User],\n\t\t[modes.CompletionItemKind.Issue, types.CompletionItemKind.Issue],\n\t]);\n\n\texport function to(kind: modes.CompletionItemKind): types.CompletionItemKind {\n\t\treturn _to.get(kind) ?? types.CompletionItemKind.Property;\n\t}\n}\n\nexport namespace CompletionItem {\n\n\texport function to(suggestion: modes.CompletionItem, converter?: CommandsConverter): types.CompletionItem {\n\n\t\tconst result = new types.CompletionItem(typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.name);\n\t\tif (typeof suggestion.label !== 'string') {\n\t\t\tresult.label2 = suggestion.label;\n\t\t}\n\n\t\tresult.insertText = suggestion.insertText;\n\t\tresult.kind = CompletionItemKind.to(suggestion.kind);\n\t\tresult.tags = suggestion.tags && suggestion.tags.map(CompletionItemTag.to);\n\t\tresult.detail = suggestion.detail;\n\t\tresult.documentation = htmlContent.isMarkdownString(suggestion.documentation) ? MarkdownString.to(suggestion.documentation) : suggestion.documentation;\n\t\tresult.sortText = suggestion.sortText;\n\t\tresult.filterText = suggestion.filterText;\n\t\tresult.preselect = suggestion.preselect;\n\t\tresult.commitCharacters = suggestion.commitCharacters;\n\n\t\t// range\n\t\tif (editorRange.Range.isIRange(suggestion.range)) {\n\t\t\tresult.range = Range.to(suggestion.range);\n\t\t} else if (typeof suggestion.range === 'object') {\n\t\t\tresult.range = { inserting: Range.to(suggestion.range.insert), replacing: Range.to(suggestion.range.replace) };\n\t\t}\n\n\t\tresult.keepWhitespace = typeof suggestion.insertTextRules === 'undefined' ? false : Boolean(suggestion.insertTextRules & modes.CompletionItemInsertTextRule.KeepWhitespace);\n\t\t// 'insertText'-logic\n\t\tif (typeof suggestion.insertTextRules !== 'undefined' && suggestion.insertTextRules & modes.CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\tresult.insertText = new types.SnippetString(suggestion.insertText);\n\t\t} else {\n\t\t\tresult.insertText = suggestion.insertText;\n\t\t\tresult.textEdit = result.range instanceof types.Range ? new types.TextEdit(result.range, result.insertText) : undefined;\n\t\t}\n\t\tif (suggestion.additionalTextEdits && suggestion.additionalTextEdits.length > 0) {\n\t\t\tresult.additionalTextEdits = suggestion.additionalTextEdits.map(e => TextEdit.to(e as modes.TextEdit));\n\t\t}\n\t\tresult.command = converter && suggestion.command ? converter.fromInternal(suggestion.command) : undefined;\n\n\t\treturn result;\n\t}\n}\n\nexport namespace ParameterInformation {\n\texport function from(info: types.ParameterInformation): modes.ParameterInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: info.documentation ? MarkdownString.fromStrict(info.documentation) : undefined\n\t\t};\n\t}\n\texport function to(info: modes.ParameterInformation): types.ParameterInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: htmlContent.isMarkdownString(info.documentation) ? MarkdownString.to(info.documentation) : info.documentation\n\t\t};\n\t}\n}\n\nexport namespace SignatureInformation {\n\n\texport function from(info: types.SignatureInformation): modes.SignatureInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: info.documentation ? MarkdownString.fromStrict(info.documentation) : undefined,\n\t\t\tparameters: Array.isArray(info.parameters) ? info.parameters.map(ParameterInformation.from) : [],\n\t\t\tactiveParameter: info.activeParameter,\n\t\t};\n\t}\n\n\texport function to(info: modes.SignatureInformation): types.SignatureInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: htmlContent.isMarkdownString(info.documentation) ? MarkdownString.to(info.documentation) : info.documentation,\n\t\t\tparameters: Array.isArray(info.parameters) ? info.parameters.map(ParameterInformation.to) : [],\n\t\t\tactiveParameter: info.activeParameter,\n\t\t};\n\t}\n}\n\nexport namespace SignatureHelp {\n\n\texport function from(help: types.SignatureHelp): modes.SignatureHelp {\n\t\treturn {\n\t\t\tactiveSignature: help.activeSignature,\n\t\t\tactiveParameter: help.activeParameter,\n\t\t\tsignatures: Array.isArray(help.signatures) ? help.signatures.map(SignatureInformation.from) : [],\n\t\t};\n\t}\n\n\texport function to(help: modes.SignatureHelp): types.SignatureHelp {\n\t\treturn {\n\t\t\tactiveSignature: help.activeSignature,\n\t\t\tactiveParameter: help.activeParameter,\n\t\t\tsignatures: Array.isArray(help.signatures) ? help.signatures.map(SignatureInformation.to) : [],\n\t\t};\n\t}\n}\n\nexport namespace DocumentLink {\n\n\texport function from(link: vscode.DocumentLink): modes.ILink {\n\t\treturn {\n\t\t\trange: Range.from(link.range),\n\t\t\turl: link.target,\n\t\t\ttooltip: link.tooltip\n\t\t};\n\t}\n\n\texport function to(link: modes.ILink): vscode.DocumentLink {\n\t\tlet target: URI | undefined = undefined;\n\t\tif (link.url) {\n\t\t\ttry {\n\t\t\t\ttarget = typeof link.url === 'string' ? URI.parse(link.url, true) : URI.revive(link.url);\n\t\t\t} catch (err) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\treturn new types.DocumentLink(Range.to(link.range), target);\n\t}\n}\n\nexport namespace ColorPresentation {\n\texport function to(colorPresentation: modes.IColorPresentation): types.ColorPresentation {\n\t\tconst cp = new types.ColorPresentation(colorPresentation.label);\n\t\tif (colorPresentation.textEdit) {\n\t\t\tcp.textEdit = TextEdit.to(colorPresentation.textEdit);\n\t\t}\n\t\tif (colorPresentation.additionalTextEdits) {\n\t\t\tcp.additionalTextEdits = colorPresentation.additionalTextEdits.map(value => TextEdit.to(value));\n\t\t}\n\t\treturn cp;\n\t}\n\n\texport function from(colorPresentation: vscode.ColorPresentation): modes.IColorPresentation {\n\t\treturn {\n\t\t\tlabel: colorPresentation.label,\n\t\t\ttextEdit: colorPresentation.textEdit ? TextEdit.from(colorPresentation.textEdit) : undefined,\n\t\t\tadditionalTextEdits: colorPresentation.additionalTextEdits ? colorPresentation.additionalTextEdits.map(value => TextEdit.from(value)) : undefined\n\t\t};\n\t}\n}\n\nexport namespace Color {\n\texport function to(c: [number, number, number, number]): types.Color {\n\t\treturn new types.Color(c[0], c[1], c[2], c[3]);\n\t}\n\texport function from(color: types.Color): [number, number, number, number] {\n\t\treturn [color.red, color.green, color.blue, color.alpha];\n\t}\n}\n\n\nexport namespace SelectionRange {\n\texport function from(obj: vscode.SelectionRange): modes.SelectionRange {\n\t\treturn { range: Range.from(obj.range) };\n\t}\n\n\texport function to(obj: modes.SelectionRange): vscode.SelectionRange {\n\t\treturn new types.SelectionRange(Range.to(obj.range));\n\t}\n}\n\nexport namespace TextDocumentSaveReason {\n\n\texport function to(reason: SaveReason): vscode.TextDocumentSaveReason {\n\t\tswitch (reason) {\n\t\t\tcase SaveReason.AUTO:\n\t\t\t\treturn types.TextDocumentSaveReason.AfterDelay;\n\t\t\tcase SaveReason.EXPLICIT:\n\t\t\t\treturn types.TextDocumentSaveReason.Manual;\n\t\t\tcase SaveReason.FOCUS_CHANGE:\n\t\t\tcase SaveReason.WINDOW_CHANGE:\n\t\t\t\treturn types.TextDocumentSaveReason.FocusOut;\n\t\t}\n\t}\n}\n\nexport namespace TextEditorLineNumbersStyle {\n\texport function from(style: vscode.TextEditorLineNumbersStyle): RenderLineNumbersType {\n\t\tswitch (style) {\n\t\t\tcase types.TextEditorLineNumbersStyle.Off:\n\t\t\t\treturn RenderLineNumbersType.Off;\n\t\t\tcase types.TextEditorLineNumbersStyle.Relative:\n\t\t\t\treturn RenderLineNumbersType.Relative;\n\t\t\tcase types.TextEditorLineNumbersStyle.On:\n\t\t\tdefault:\n\t\t\t\treturn RenderLineNumbersType.On;\n\t\t}\n\t}\n\texport function to(style: RenderLineNumbersType): vscode.TextEditorLineNumbersStyle {\n\t\tswitch (style) {\n\t\t\tcase RenderLineNumbersType.Off:\n\t\t\t\treturn types.TextEditorLineNumbersStyle.Off;\n\t\t\tcase RenderLineNumbersType.Relative:\n\t\t\t\treturn types.TextEditorLineNumbersStyle.Relative;\n\t\t\tcase RenderLineNumbersType.On:\n\t\t\tdefault:\n\t\t\t\treturn types.TextEditorLineNumbersStyle.On;\n\t\t}\n\t}\n}\n\nexport namespace EndOfLine {\n\n\texport function from(eol: vscode.EndOfLine): EndOfLineSequence | undefined {\n\t\tif (eol === types.EndOfLine.CRLF) {\n\t\t\treturn EndOfLineSequence.CRLF;\n\t\t} else if (eol === types.EndOfLine.LF) {\n\t\t\treturn EndOfLineSequence.LF;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\texport function to(eol: EndOfLineSequence): vscode.EndOfLine | undefined {\n\t\tif (eol === EndOfLineSequence.CRLF) {\n\t\t\treturn types.EndOfLine.CRLF;\n\t\t} else if (eol === EndOfLineSequence.LF) {\n\t\t\treturn types.EndOfLine.LF;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport namespace ProgressLocation {\n\texport function from(loc: vscode.ProgressLocation | { viewId: string }): MainProgressLocation | string {\n\t\tif (typeof loc === 'object') {\n\t\t\treturn loc.viewId;\n\t\t}\n\n\t\tswitch (loc) {\n\t\t\tcase types.ProgressLocation.SourceControl: return MainProgressLocation.Scm;\n\t\t\tcase types.ProgressLocation.Window: return MainProgressLocation.Window;\n\t\t\tcase types.ProgressLocation.Notification: return MainProgressLocation.Notification;\n\t\t}\n\t\tthrow new Error(`Unknown 'ProgressLocation'`);\n\t}\n}\n\nexport namespace FoldingRange {\n\texport function from(r: vscode.FoldingRange): modes.FoldingRange {\n\t\tconst range: modes.FoldingRange = { start: r.start + 1, end: r.end + 1 };\n\t\tif (r.kind) {\n\t\t\trange.kind = FoldingRangeKind.from(r.kind);\n\t\t}\n\t\treturn range;\n\t}\n}\n\nexport namespace FoldingRangeKind {\n\texport function from(kind: vscode.FoldingRangeKind | undefined): modes.FoldingRangeKind | undefined {\n\t\tif (kind) {\n\t\t\tswitch (kind) {\n\t\t\t\tcase types.FoldingRangeKind.Comment:\n\t\t\t\t\treturn modes.FoldingRangeKind.Comment;\n\t\t\t\tcase types.FoldingRangeKind.Imports:\n\t\t\t\t\treturn modes.FoldingRangeKind.Imports;\n\t\t\t\tcase types.FoldingRangeKind.Region:\n\t\t\t\t\treturn modes.FoldingRangeKind.Region;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport namespace TextEditorOptions {\n\n\texport function from(options?: vscode.TextDocumentShowOptions): ITextEditorOptions | undefined {\n\t\tif (options) {\n\t\t\treturn {\n\t\t\t\tpinned: typeof options.preview === 'boolean' ? !options.preview : undefined,\n\t\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\t\tselection: typeof options.selection === 'object' ? Range.from(options.selection) : undefined\n\t\t\t} as ITextEditorOptions;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n}\n\nexport namespace GlobPattern {\n\n\texport function from(pattern: vscode.GlobPattern): string | types.RelativePattern;\n\texport function from(pattern: undefined): undefined;\n\texport function from(pattern: null): null;\n\texport function from(pattern: vscode.GlobPattern | undefined | null): string | types.RelativePattern | undefined | null;\n\texport function from(pattern: vscode.GlobPattern | undefined | null): string | types.RelativePattern | undefined | null {\n\t\tif (pattern instanceof types.RelativePattern) {\n\t\t\treturn pattern;\n\t\t}\n\n\t\tif (typeof pattern === 'string') {\n\t\t\treturn pattern;\n\t\t}\n\n\t\tif (isRelativePattern(pattern)) {\n\t\t\treturn new types.RelativePattern(pattern.base, pattern.pattern);\n\t\t}\n\n\t\treturn pattern; // preserve `undefined` and `null`\n\t}\n\n\tfunction isRelativePattern(obj: any): obj is vscode.RelativePattern {\n\t\tconst rp = obj as vscode.RelativePattern;\n\t\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n\t}\n}\n\nexport namespace LanguageSelector {\n\n\texport function from(selector: undefined): undefined;\n\texport function from(selector: vscode.DocumentSelector): languageSelector.LanguageSelector;\n\texport function from(selector: vscode.DocumentSelector | undefined): languageSelector.LanguageSelector | undefined;\n\texport function from(selector: vscode.DocumentSelector | undefined): languageSelector.LanguageSelector | undefined {\n\t\tif (!selector) {\n\t\t\treturn undefined;\n\t\t} else if (Array.isArray(selector)) {\n\t\t\treturn <languageSelector.LanguageSelector>selector.map(from);\n\t\t} else if (typeof selector === 'string') {\n\t\t\treturn selector;\n\t\t} else {\n\t\t\treturn <languageSelector.LanguageFilter>{\n\t\t\t\tlanguage: selector.language,\n\t\t\t\tscheme: selector.scheme,\n\t\t\t\tpattern: typeof selector.pattern === 'undefined' ? undefined : GlobPattern.from(selector.pattern),\n\t\t\t\texclusive: selector.exclusive\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport namespace LogLevel {\n\texport function from(extLevel: types.LogLevel): _MainLogLevel {\n\t\tswitch (extLevel) {\n\t\t\tcase types.LogLevel.Trace:\n\t\t\t\treturn _MainLogLevel.Trace;\n\t\t\tcase types.LogLevel.Debug:\n\t\t\t\treturn _MainLogLevel.Debug;\n\t\t\tcase types.LogLevel.Info:\n\t\t\t\treturn _MainLogLevel.Info;\n\t\t\tcase types.LogLevel.Warning:\n\t\t\t\treturn _MainLogLevel.Warning;\n\t\t\tcase types.LogLevel.Error:\n\t\t\t\treturn _MainLogLevel.Error;\n\t\t\tcase types.LogLevel.Critical:\n\t\t\t\treturn _MainLogLevel.Critical;\n\t\t\tcase types.LogLevel.Off:\n\t\t\t\treturn _MainLogLevel.Off;\n\t\t}\n\n\t\treturn _MainLogLevel.Info;\n\t}\n\n\texport function to(mainLevel: _MainLogLevel): types.LogLevel {\n\t\tswitch (mainLevel) {\n\t\t\tcase _MainLogLevel.Trace:\n\t\t\t\treturn types.LogLevel.Trace;\n\t\t\tcase _MainLogLevel.Debug:\n\t\t\t\treturn types.LogLevel.Debug;\n\t\t\tcase _MainLogLevel.Info:\n\t\t\t\treturn types.LogLevel.Info;\n\t\t\tcase _MainLogLevel.Warning:\n\t\t\t\treturn types.LogLevel.Warning;\n\t\t\tcase _MainLogLevel.Error:\n\t\t\t\treturn types.LogLevel.Error;\n\t\t\tcase _MainLogLevel.Critical:\n\t\t\t\treturn types.LogLevel.Critical;\n\t\t\tcase _MainLogLevel.Off:\n\t\t\t\treturn types.LogLevel.Off;\n\t\t}\n\n\t\treturn types.LogLevel.Info;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { CommandsRegistry, ICommandService, ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { EditorViewColumn } from 'vs/workbench/api/common/shared/editor';\nimport { EditorGroupLayout } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IOpenWindowOptions, IWindowOpenable, IOpenEmptyWindowOptions } from 'vs/platform/windows/common/windows';\nimport { IWorkspacesService, hasWorkspaceFileExtension, IRecent } from 'vs/platform/workspaces/common/workspaces';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\n// -----------------------------------------------------------------\n// The following commands are registered on both sides separately.\n//\n// We are trying to maintain backwards compatibility for cases where\n// API commands are encoded as markdown links, for example.\n// -----------------------------------------------------------------\n\nexport interface ICommandsExecutor {\n\texecuteCommand<T>(id: string, ...args: any[]): Promise<T | undefined>;\n}\n\nfunction adjustHandler(handler: (executor: ICommandsExecutor, ...args: any[]) => any): ICommandHandler {\n\treturn (accessor, ...args: any[]) => {\n\t\treturn handler(accessor.get(ICommandService), ...args);\n\t};\n}\n\ninterface IOpenFolderAPICommandOptions {\n\tforceNewWindow?: boolean;\n\tforceReuseWindow?: boolean;\n\tnoRecentEntry?: boolean;\n}\n\nexport class OpenFolderAPICommand {\n\tpublic static readonly ID = 'vscode.openFolder';\n\tpublic static execute(executor: ICommandsExecutor, uri?: URI, forceNewWindow?: boolean): Promise<any>;\n\tpublic static execute(executor: ICommandsExecutor, uri?: URI, options?: IOpenFolderAPICommandOptions): Promise<any>;\n\tpublic static execute(executor: ICommandsExecutor, uri?: URI, arg: boolean | IOpenFolderAPICommandOptions = {}): Promise<any> {\n\t\tif (typeof arg === 'boolean') {\n\t\t\targ = { forceNewWindow: arg };\n\t\t}\n\t\tif (!uri) {\n\t\t\treturn executor.executeCommand('_files.pickFolderAndOpen', { forceNewWindow: arg.forceNewWindow });\n\t\t}\n\t\tconst options: IOpenWindowOptions = { forceNewWindow: arg.forceNewWindow, forceReuseWindow: arg.forceReuseWindow, noRecentEntry: arg.noRecentEntry };\n\t\turi = URI.revive(uri);\n\t\tconst uriToOpen: IWindowOpenable = (hasWorkspaceFileExtension(uri) || uri.scheme === Schemas.untitled) ? { workspaceUri: uri } : { folderUri: uri };\n\t\treturn executor.executeCommand('_files.windowOpen', [uriToOpen], options);\n\t}\n}\nCommandsRegistry.registerCommand({\n\tid: OpenFolderAPICommand.ID,\n\thandler: adjustHandler(OpenFolderAPICommand.execute),\n\tdescription: {\n\t\tdescription: 'Open a folder or workspace in the current window or new window depending on the newWindow argument. Note that opening in the same window will shutdown the current extension host process and start a new one on the given folder/workspace unless the newWindow parameter is set to true.',\n\t\targs: [\n\t\t\t{ name: 'uri', description: '(optional) Uri of the folder or workspace file to open. If not provided, a native dialog will ask the user for the folder', constraint: (value: any) => value === undefined || value instanceof URI },\n\t\t\t{ name: 'options', description: '(optional) Options. Object with the following properties: `forceNewWindow `: Whether to open the folder/workspace in a new window or the same. Defaults to opening in the same window. `noRecentEntry`: Wheter the opened URI will appear in the \\'Open Recent\\' list. Defaults to true.  Note, for backward compatibility, options can also be of type boolean, representing the `forceNewWindow` setting.', constraint: (value: any) => value === undefined || typeof value === 'object' || typeof value === 'boolean' }\n\t\t]\n\t}\n});\n\ninterface INewWindowAPICommandOptions {\n\treuseWindow?: boolean;\n\tremoteAuthority?: string;\n}\n\nexport class NewWindowAPICommand {\n\tpublic static readonly ID = 'vscode.newWindow';\n\tpublic static execute(executor: ICommandsExecutor, options?: INewWindowAPICommandOptions): Promise<any> {\n\t\tconst commandOptions: IOpenEmptyWindowOptions = {\n\t\t\tforceReuseWindow: options && options.reuseWindow,\n\t\t\tremoteAuthority: options && options.remoteAuthority\n\t\t};\n\n\t\treturn executor.executeCommand('_files.newWindow', commandOptions);\n\t}\n}\nCommandsRegistry.registerCommand({\n\tid: NewWindowAPICommand.ID,\n\thandler: adjustHandler(NewWindowAPICommand.execute),\n\tdescription: {\n\t\tdescription: 'Opens an new window',\n\t\targs: [\n\t\t]\n\t}\n});\n\nexport class DiffAPICommand {\n\tpublic static readonly ID = 'vscode.diff';\n\tpublic static execute(executor: ICommandsExecutor, left: URI, right: URI, label: string, options?: vscode.TextDocumentShowOptions): Promise<any> {\n\t\treturn executor.executeCommand('_workbench.diff', [\n\t\t\tleft, right,\n\t\t\tlabel,\n\t\t\tundefined,\n\t\t\ttypeConverters.TextEditorOptions.from(options),\n\t\t\toptions ? typeConverters.ViewColumn.from(options.viewColumn) : undefined\n\t\t]);\n\t}\n}\nCommandsRegistry.registerCommand(DiffAPICommand.ID, adjustHandler(DiffAPICommand.execute));\n\nexport class OpenAPICommand {\n\tpublic static readonly ID = 'vscode.open';\n\tpublic static execute(executor: ICommandsExecutor, resource: URI, columnOrOptions?: vscode.ViewColumn | vscode.TextDocumentShowOptions, label?: string): Promise<any> {\n\t\tlet options: ITextEditorOptions | undefined;\n\t\tlet position: EditorViewColumn | undefined;\n\n\t\tif (columnOrOptions) {\n\t\t\tif (typeof columnOrOptions === 'number') {\n\t\t\t\tposition = typeConverters.ViewColumn.from(columnOrOptions);\n\t\t\t} else {\n\t\t\t\toptions = typeConverters.TextEditorOptions.from(columnOrOptions);\n\t\t\t\tposition = typeConverters.ViewColumn.from(columnOrOptions.viewColumn);\n\t\t\t}\n\t\t}\n\n\t\treturn executor.executeCommand('_workbench.open', [\n\t\t\tresource,\n\t\t\toptions,\n\t\t\tposition,\n\t\t\tlabel\n\t\t]);\n\t}\n}\nCommandsRegistry.registerCommand(OpenAPICommand.ID, adjustHandler(OpenAPICommand.execute));\n\nexport class OpenWithAPICommand {\n\tpublic static readonly ID = 'vscode.openWith';\n\tpublic static execute(executor: ICommandsExecutor, resource: URI, viewType: string, columnOrOptions?: vscode.ViewColumn | vscode.TextDocumentShowOptions): Promise<any> {\n\t\tlet options: ITextEditorOptions | undefined;\n\t\tlet position: EditorViewColumn | undefined;\n\n\t\tif (typeof columnOrOptions === 'number') {\n\t\t\tposition = typeConverters.ViewColumn.from(columnOrOptions);\n\t\t} else if (typeof columnOrOptions !== 'undefined') {\n\t\t\toptions = typeConverters.TextEditorOptions.from(columnOrOptions);\n\t\t}\n\n\t\treturn executor.executeCommand('_workbench.openWith', [\n\t\t\tresource,\n\t\t\tviewType,\n\t\t\toptions,\n\t\t\tposition\n\t\t]);\n\t}\n}\nCommandsRegistry.registerCommand(OpenWithAPICommand.ID, adjustHandler(OpenWithAPICommand.execute));\n\nCommandsRegistry.registerCommand('_workbench.removeFromRecentlyOpened', function (accessor: ServicesAccessor, uri: URI) {\n\tconst workspacesService = accessor.get(IWorkspacesService);\n\treturn workspacesService.removeRecentlyOpened([uri]);\n});\n\nexport class RemoveFromRecentlyOpenedAPICommand {\n\tpublic static readonly ID = 'vscode.removeFromRecentlyOpened';\n\tpublic static execute(executor: ICommandsExecutor, path: string | URI): Promise<any> {\n\t\tif (typeof path === 'string') {\n\t\t\tpath = path.match(/^[^:/?#]+:\\/\\//) ? URI.parse(path) : URI.file(path);\n\t\t} else {\n\t\t\tpath = URI.revive(path); // called from extension host\n\t\t}\n\t\treturn executor.executeCommand('_workbench.removeFromRecentlyOpened', path);\n\t}\n}\nCommandsRegistry.registerCommand(RemoveFromRecentlyOpenedAPICommand.ID, adjustHandler(RemoveFromRecentlyOpenedAPICommand.execute));\n\nexport interface OpenIssueReporterArgs {\n\treadonly extensionId: string;\n\treadonly issueTitle?: string;\n\treadonly issueBody?: string;\n}\n\nexport class OpenIssueReporter {\n\tpublic static readonly ID = 'vscode.openIssueReporter';\n\n\tpublic static execute(executor: ICommandsExecutor, args: string | OpenIssueReporterArgs): Promise<void> {\n\t\tconst commandArgs = typeof args === 'string'\n\t\t\t? { extensionId: args }\n\t\t\t: args;\n\t\treturn executor.executeCommand('workbench.action.openIssueReporter', commandArgs);\n\t}\n}\n\ninterface RecentEntry {\n\turi: URI;\n\ttype: 'workspace' | 'folder' | 'file';\n\tlabel?: string;\n}\n\nCommandsRegistry.registerCommand('_workbench.addToRecentlyOpened', async function (accessor: ServicesAccessor, recentEntry: RecentEntry) {\n\tconst workspacesService = accessor.get(IWorkspacesService);\n\tlet recent: IRecent | undefined = undefined;\n\tconst uri = recentEntry.uri;\n\tconst label = recentEntry.label;\n\tif (recentEntry.type === 'workspace') {\n\t\tconst workspace = await workspacesService.getWorkspaceIdentifier(uri);\n\t\trecent = { workspace, label };\n\t} else if (recentEntry.type === 'folder') {\n\t\trecent = { folderUri: uri, label };\n\t} else {\n\t\trecent = { fileUri: uri, label };\n\t}\n\treturn workspacesService.addRecentlyOpened([recent]);\n});\n\nCommandsRegistry.registerCommand('_workbench.getRecentlyOpened', async function (accessor: ServicesAccessor) {\n\tconst workspacesService = accessor.get(IWorkspacesService);\n\treturn workspacesService.getRecentlyOpened();\n});\n\nexport class SetEditorLayoutAPICommand {\n\tpublic static readonly ID = 'vscode.setEditorLayout';\n\tpublic static execute(executor: ICommandsExecutor, layout: EditorGroupLayout): Promise<any> {\n\t\treturn executor.executeCommand('layoutEditorGroups', layout);\n\t}\n}\nCommandsRegistry.registerCommand({\n\tid: SetEditorLayoutAPICommand.ID,\n\thandler: adjustHandler(SetEditorLayoutAPICommand.execute),\n\tdescription: {\n\t\tdescription: 'Set Editor Layout',\n\t\targs: [{\n\t\t\tname: 'args',\n\t\t\tschema: {\n\t\t\t\t'type': 'object',\n\t\t\t\t'required': ['groups'],\n\t\t\t\t'properties': {\n\t\t\t\t\t'orientation': {\n\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t'default': 0,\n\t\t\t\t\t\t'enum': [0, 1]\n\t\t\t\t\t},\n\t\t\t\t\t'groups': {\n\t\t\t\t\t\t'$ref': '#/definitions/editorGroupsSchema', // defined in keybindingService.ts ...\n\t\t\t\t\t\t'default': [{}, {}],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]\n\t}\n});\n\nCommandsRegistry.registerCommand('_extensionTests.setLogLevel', function (accessor: ServicesAccessor, level: number) {\n\tconst logService = accessor.get(ILogService);\n\tconst environmentService = accessor.get(IEnvironmentService);\n\n\tif (environmentService.isExtensionDevelopment && !!environmentService.extensionTestsLocationURI) {\n\t\tlogService.setLevel(level);\n\t}\n});\n\nCommandsRegistry.registerCommand('_extensionTests.getLogLevel', function (accessor: ServicesAccessor) {\n\tconst logService = accessor.get(ILogService);\n\n\treturn logService.getLevel();\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport type * as vscode from 'vscode';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport { IRawColorInfo, IWorkspaceEditDto, ICallHierarchyItemDto, IIncomingCallDto, IOutgoingCallDto } from 'vs/workbench/api/common/extHost.protocol';\nimport * as modes from 'vs/editor/common/modes';\nimport * as search from 'vs/workbench/contrib/search/common/search';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { CustomCodeAction } from 'vs/workbench/api/common/extHostLanguageFeatures';\nimport { ICommandsExecutor, OpenFolderAPICommand, DiffAPICommand, OpenAPICommand, RemoveFromRecentlyOpenedAPICommand, SetEditorLayoutAPICommand, OpenIssueReporter, OpenIssueReporterArgs } from './apiCommands';\nimport { EditorGroupLayout } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { isFalsyOrEmpty } from 'vs/base/common/arrays';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IPosition } from 'vs/editor/common/core/position';\n\n//#region --- NEW world\n\nexport class ApiCommandArgument<V, O = V> {\n\n\tstatic readonly Uri = new ApiCommandArgument<URI>('uri', 'Uri of a text document', v => URI.isUri(v), v => v);\n\tstatic readonly Position = new ApiCommandArgument<types.Position, IPosition>('position', 'A position in a text document', v => types.Position.isPosition(v), typeConverters.Position.from);\n\tstatic readonly Range = new ApiCommandArgument<types.Range, IRange>('range', 'A range in a text document', v => types.Range.isRange(v), typeConverters.Range.from);\n\n\tstatic readonly CallHierarchyItem = new ApiCommandArgument('item', 'A call hierarchy item', v => v instanceof types.CallHierarchyItem, typeConverters.CallHierarchyItem.to);\n\n\tconstructor(\n\t\treadonly name: string,\n\t\treadonly description: string,\n\t\treadonly validate: (v: V) => boolean,\n\t\treadonly convert: (v: V) => O\n\t) { }\n}\n\nexport class ApiCommandResult<V, O = V> {\n\n\tconstructor(\n\t\treadonly description: string,\n\t\treadonly convert: (v: V, apiArgs: any[]) => O\n\t) { }\n}\n\nexport class ApiCommand {\n\n\tconstructor(\n\t\treadonly id: string,\n\t\treadonly internalId: string,\n\t\treadonly description: string,\n\t\treadonly args: ApiCommandArgument<any, any>[],\n\t\treadonly result: ApiCommandResult<any, any>\n\t) { }\n\n\tregister(commands: ExtHostCommands): IDisposable {\n\n\t\treturn commands.registerCommand(false, this.id, async (...apiArgs) => {\n\n\t\t\tconst internalArgs = this.args.map((arg, i) => {\n\t\t\t\tif (!arg.validate(apiArgs[i])) {\n\t\t\t\t\tthrow new Error(`Invalid argument '${arg.name}' when running '${this.id}', receieved: ${apiArgs[i]}`);\n\t\t\t\t}\n\t\t\t\treturn arg.convert(apiArgs[i]);\n\t\t\t});\n\n\t\t\tconst internalResult = await commands.executeCommand(this.internalId, ...internalArgs);\n\t\t\treturn this.result.convert(internalResult, apiArgs);\n\t\t}, undefined, this._getCommandHandlerDesc());\n\t}\n\n\tprivate _getCommandHandlerDesc(): ICommandHandlerDescription {\n\t\treturn {\n\t\t\tdescription: this.description,\n\t\t\targs: this.args,\n\t\t\treturns: this.result.description\n\t\t};\n\t}\n}\n\n\nconst newCommands: ApiCommand[] = [\n\t// -- document highlights\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentHighlights', '_executeDocumentHighlights', 'Execute document highlight provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<modes.DocumentHighlight[], types.DocumentHighlight[] | undefined>('A promise that resolves to an array of SymbolInformation and DocumentSymbol instances.', tryMapWith(typeConverters.DocumentHighlight.to))\n\t),\n\t// -- document symbols\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentSymbolProvider', '_executeDocumentSymbolProvider', 'Execute document symbol provider.',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<modes.DocumentSymbol[], vscode.SymbolInformation[] | undefined>('A promise that resolves to an array of DocumentHighlight-instances.', (value, apiArgs) => {\n\n\t\t\tif (isFalsyOrEmpty(value)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tclass MergedInfo extends types.SymbolInformation implements vscode.DocumentSymbol {\n\t\t\t\tstatic to(symbol: modes.DocumentSymbol): MergedInfo {\n\t\t\t\t\tconst res = new MergedInfo(\n\t\t\t\t\t\tsymbol.name,\n\t\t\t\t\t\ttypeConverters.SymbolKind.to(symbol.kind),\n\t\t\t\t\t\tsymbol.containerName || '',\n\t\t\t\t\t\tnew types.Location(apiArgs[0], typeConverters.Range.to(symbol.range))\n\t\t\t\t\t);\n\t\t\t\t\tres.detail = symbol.detail;\n\t\t\t\t\tres.range = res.location.range;\n\t\t\t\t\tres.selectionRange = typeConverters.Range.to(symbol.selectionRange);\n\t\t\t\t\tres.children = symbol.children ? symbol.children.map(MergedInfo.to) : [];\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\n\t\t\t\tdetail!: string;\n\t\t\t\trange!: vscode.Range;\n\t\t\t\tselectionRange!: vscode.Range;\n\t\t\t\tchildren!: vscode.DocumentSymbol[];\n\t\t\t\tcontainerName!: string;\n\t\t\t}\n\t\t\treturn value.map(MergedInfo.to);\n\n\t\t})\n\t),\n\t// -- formatting\n\tnew ApiCommand(\n\t\t'vscode.executeFormatDocumentProvider', '_executeFormatDocumentProvider', 'Execute document format provider.',\n\t\t[ApiCommandArgument.Uri, new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<modes.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeFormatRangeProvider', '_executeFormatRangeProvider', 'Execute range format provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range, new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<modes.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeFormatOnTypeProvider', '_executeFormatOnTypeProvider', 'Execute format on type provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position, new ApiCommandArgument('ch', 'Trigger character', v => typeof v === 'string', v => v), new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<modes.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\t// -- go to symbol (definition, type definition, declaration, impl, references)\n\tnew ApiCommand(\n\t\t'vscode.executeDefinitionProvider', '_executeDefinitionProvider', 'Execute all definition providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(modes.Location | modes.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeTypeDefinitionProvider', '_executeTypeDefinitionProvider', 'Execute all type definition providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(modes.Location | modes.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeDeclarationProvider', '_executeDeclarationProvider', 'Execute all declaration providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(modes.Location | modes.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeImplementationProvider', '_executeImplementationProvider', 'Execute all implementation providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(modes.Location | modes.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeReferenceProvider', '_executeReferenceProvider', 'Execute all reference providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<modes.Location[], types.Location[] | undefined>('A promise that resolves to an array of Location-instances.', tryMapWith(typeConverters.location.to))\n\t),\n\t// -- hover\n\tnew ApiCommand(\n\t\t'vscode.executeHoverProvider', '_executeHoverProvider', 'Execute all hover providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<modes.Hover[], types.Hover[] | undefined>('A promise that resolves to an array of Hover-instances.', tryMapWith(typeConverters.Hover.to))\n\t),\n\t// -- selection range\n\tnew ApiCommand(\n\t\t'vscode.executeSelectionRangeProvider', '_executeSelectionRangeProvider', 'Execute selection range provider.',\n\t\t[ApiCommandArgument.Uri, new ApiCommandArgument<types.Position[], IPosition[]>('position', 'A positions in a text document', v => Array.isArray(v) && v.every(v => types.Position.isPosition(v)), v => v.map(typeConverters.Position.from))],\n\t\tnew ApiCommandResult<IRange[][], types.SelectionRange[]>('A promise that resolves to an array of ranges.', result => {\n\t\t\treturn result.map(ranges => {\n\t\t\t\tlet node: types.SelectionRange | undefined;\n\t\t\t\tfor (const range of ranges.reverse()) {\n\t\t\t\t\tnode = new types.SelectionRange(typeConverters.Range.to(range), node);\n\t\t\t\t}\n\t\t\t\treturn node!;\n\t\t\t});\n\t\t})\n\t),\n\t// -- symbol search\n\tnew ApiCommand(\n\t\t'vscode.executeWorkspaceSymbolProvider', '_executeWorkspaceSymbolProvider', 'Execute all workspace symbol providers.',\n\t\t[new ApiCommandArgument('query', 'Search string', v => typeof v === 'string', v => v)],\n\t\tnew ApiCommandResult<[search.IWorkspaceSymbolProvider, search.IWorkspaceSymbol[]][], types.SymbolInformation[]>('A promise that resolves to an array of SymbolInformation-instances.', value => {\n\t\t\tconst result: types.SymbolInformation[] = [];\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tfor (let tuple of value) {\n\t\t\t\t\tresult.push(...tuple[1].map(typeConverters.WorkspaceSymbol.to));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t})\n\t),\n\t// --- call hierarchy\n\tnew ApiCommand(\n\t\t'vscode.prepareCallHierarchy', '_executePrepareCallHierarchy', 'Prepare call hierarchy at a position inside a document',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<ICallHierarchyItemDto[], types.CallHierarchyItem[]>('A CallHierarchyItem or undefined', v => v.map(typeConverters.CallHierarchyItem.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideIncomingCalls', '_executeProvideIncomingCalls', 'Compute incoming calls for an item',\n\t\t[ApiCommandArgument.CallHierarchyItem],\n\t\tnew ApiCommandResult<IIncomingCallDto[], types.CallHierarchyIncomingCall[]>('A CallHierarchyItem or undefined', v => v.map(typeConverters.CallHierarchyIncomingCall.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideOutgoingCalls', '_executeProvideOutgoingCalls', 'Compute outgoing calls for an item',\n\t\t[ApiCommandArgument.CallHierarchyItem],\n\t\tnew ApiCommandResult<IOutgoingCallDto[], types.CallHierarchyOutgoingCall[]>('A CallHierarchyItem or undefined', v => v.map(typeConverters.CallHierarchyOutgoingCall.to))\n\t),\n];\n\n\n//#endregion\n\n\n//#region OLD world\n\nexport class ExtHostApiCommands {\n\n\tstatic register(commands: ExtHostCommands) {\n\t\tnewCommands.forEach(command => command.register(commands));\n\t\treturn new ExtHostApiCommands(commands).registerCommands();\n\t}\n\n\tprivate _commands: ExtHostCommands;\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate constructor(commands: ExtHostCommands) {\n\t\tthis._commands = commands;\n\t}\n\n\tregisterCommands() {\n\t\tthis._register('vscode.executeDocumentRenameProvider', this._executeDocumentRenameProvider, {\n\t\t\tdescription: 'Execute rename provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'newName', description: 'The new symbol name', constraint: String }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to a WorkspaceEdit.'\n\t\t});\n\t\tthis._register('vscode.executeSignatureHelpProvider', this._executeSignatureHelpProvider, {\n\t\t\tdescription: 'Execute signature help provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'triggerCharacter', description: '(optional) Trigger signature help when the user types the character, like `,` or `(`', constraint: (value: any) => value === undefined || typeof value === 'string' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to SignatureHelp.'\n\t\t});\n\t\tthis._register('vscode.executeCompletionItemProvider', this._executeCompletionItemProvider, {\n\t\t\tdescription: 'Execute completion item provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'triggerCharacter', description: '(optional) Trigger completion when the user types the character, like `,` or `(`', constraint: (value: any) => value === undefined || typeof value === 'string' },\n\t\t\t\t{ name: 'itemResolveCount', description: '(optional) Number of completions to resolve (too large numbers slow down completions)', constraint: (value: any) => value === undefined || typeof value === 'number' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to a CompletionList-instance.'\n\t\t});\n\t\tthis._register('vscode.executeCodeActionProvider', this._executeCodeActionProvider, {\n\t\t\tdescription: 'Execute code action provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'rangeOrSelection', description: 'Range in a text document. Some refactoring provider requires Selection object.', constraint: types.Range },\n\t\t\t\t{ name: 'kind', description: '(optional) Code action kind to return code actions for', constraint: (value: any) => !value || typeof value.value === 'string' },\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Command-instances.'\n\t\t});\n\t\tthis._register('vscode.executeCodeLensProvider', this._executeCodeLensProvider, {\n\t\t\tdescription: 'Execute CodeLens provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'itemResolveCount', description: '(optional) Number of lenses that should be resolved and returned. Will only return resolved lenses, will impact performance)', constraint: (value: any) => value === undefined || typeof value === 'number' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of CodeLens-instances.'\n\t\t});\n\n\t\tthis._register('vscode.executeLinkProvider', this._executeDocumentLinkProvider, {\n\t\t\tdescription: 'Execute document link provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of DocumentLink-instances.'\n\t\t});\n\t\tthis._register('vscode.executeDocumentColorProvider', this._executeDocumentColorProvider, {\n\t\t\tdescription: 'Execute document color provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of ColorInformation objects.'\n\t\t});\n\t\tthis._register('vscode.executeColorPresentationProvider', this._executeColorPresentationProvider, {\n\t\t\tdescription: 'Execute color presentation provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'color', description: 'The color to show and insert', constraint: types.Color },\n\t\t\t\t{ name: 'context', description: 'Context object with uri and range' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of ColorPresentation objects.'\n\t\t});\n\n\t\t// -----------------------------------------------------------------\n\t\t// The following commands are registered on both sides separately.\n\t\t//\n\t\t// We are trying to maintain backwards compatibility for cases where\n\t\t// API commands are encoded as markdown links, for example.\n\t\t// -----------------------------------------------------------------\n\n\t\ttype ICommandHandler = (...args: any[]) => any;\n\t\tconst adjustHandler = (handler: (executor: ICommandsExecutor, ...args: any[]) => any): ICommandHandler => {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\treturn handler(this._commands, ...args);\n\t\t\t};\n\t\t};\n\n\t\tthis._register(OpenFolderAPICommand.ID, adjustHandler(OpenFolderAPICommand.execute), {\n\t\t\tdescription: 'Open a folder or workspace in the current window or new window depending on the newWindow argument. Note that opening in the same window will shutdown the current extension host process and start a new one on the given folder/workspace unless the newWindow parameter is set to true.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: '(optional) Uri of the folder or workspace file to open. If not provided, a native dialog will ask the user for the folder', constraint: (value: any) => value === undefined || URI.isUri(value) },\n\t\t\t\t{ name: 'options', description: '(optional) Options. Object with the following properties: `forceNewWindow `: Whether to open the folder/workspace in a new window or the same. Defaults to opening in the same window. `noRecentEntry`: Whether the opened URI will appear in the \\'Open Recent\\' list. Defaults to true. Note, for backward compatibility, options can also be of type boolean, representing the `forceNewWindow` setting.', constraint: (value: any) => value === undefined || typeof value === 'object' || typeof value === 'boolean' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(DiffAPICommand.ID, adjustHandler(DiffAPICommand.execute), {\n\t\t\tdescription: 'Opens the provided resources in the diff editor to compare their contents.',\n\t\t\targs: [\n\t\t\t\t{ name: 'left', description: 'Left-hand side resource of the diff editor', constraint: URI },\n\t\t\t\t{ name: 'right', description: 'Right-hand side resource of the diff editor', constraint: URI },\n\t\t\t\t{ name: 'title', description: '(optional) Human readable title for the diff editor', constraint: (v: any) => v === undefined || typeof v === 'string' },\n\t\t\t\t{ name: 'options', description: '(optional) Editor options, see vscode.TextDocumentShowOptions' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(OpenAPICommand.ID, adjustHandler(OpenAPICommand.execute), {\n\t\t\tdescription: 'Opens the provided resource in the editor. Can be a text or binary file, or a http(s) url. If you need more control over the options for opening a text file, use vscode.window.showTextDocument instead.',\n\t\t\targs: [\n\t\t\t\t{ name: 'resource', description: 'Resource to open', constraint: URI },\n\t\t\t\t{ name: 'columnOrOptions', description: '(optional) Either the column in which to open or editor options, see vscode.TextDocumentShowOptions', constraint: (v: any) => v === undefined || typeof v === 'number' || typeof v === 'object' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(RemoveFromRecentlyOpenedAPICommand.ID, adjustHandler(RemoveFromRecentlyOpenedAPICommand.execute), {\n\t\t\tdescription: 'Removes an entry with the given path from the recently opened list.',\n\t\t\targs: [\n\t\t\t\t{ name: 'path', description: 'Path to remove from recently opened.', constraint: (value: any) => typeof value === 'string' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(SetEditorLayoutAPICommand.ID, adjustHandler(SetEditorLayoutAPICommand.execute), {\n\t\t\tdescription: 'Sets the editor layout. The layout is described as object with an initial (optional) orientation (0 = horizontal, 1 = vertical) and an array of editor groups within. Each editor group can have a size and another array of editor groups that will be laid out orthogonal to the orientation. If editor group sizes are provided, their sum must be 1 to be applied per row or column. Example for a 2x2 grid: `{ orientation: 0, groups: [{ groups: [{}, {}], size: 0.5 }, { groups: [{}, {}], size: 0.5 }] }`',\n\t\t\targs: [\n\t\t\t\t{ name: 'layout', description: 'The editor layout to set.', constraint: (value: EditorGroupLayout) => typeof value === 'object' && Array.isArray(value.groups) }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(OpenIssueReporter.ID, adjustHandler(OpenIssueReporter.execute), {\n\t\t\tdescription: 'Opens the issue reporter with the provided extension id as the selected source',\n\t\t\targs: [\n\t\t\t\t{ name: 'extensionId', description: 'extensionId to report an issue on', constraint: (value: unknown) => typeof value === 'string' || (typeof value === 'object' && typeof (value as OpenIssueReporterArgs).extensionId === 'string') }\n\t\t\t]\n\t\t});\n\t}\n\n\t// --- command impl\n\n\tprivate _register(id: string, handler: (...args: any[]) => any, description?: ICommandHandlerDescription): void {\n\t\tconst disposable = this._commands.registerCommand(false, id, handler, this, description);\n\t\tthis._disposables.add(disposable);\n\t}\n\n\tprivate _executeDocumentRenameProvider(resource: URI, position: types.Position, newName: string): Promise<types.WorkspaceEdit> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position),\n\t\t\tnewName\n\t\t};\n\t\treturn this._commands.executeCommand<IWorkspaceEditDto>('_executeDocumentRenameProvider', args).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (value.rejectReason) {\n\t\t\t\treturn Promise.reject<any>(new Error(value.rejectReason));\n\t\t\t}\n\t\t\treturn typeConverters.WorkspaceEdit.to(value);\n\t\t});\n\t}\n\n\tprivate _executeSignatureHelpProvider(resource: URI, position: types.Position, triggerCharacter: string): Promise<types.SignatureHelp | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position),\n\t\t\ttriggerCharacter\n\t\t};\n\t\treturn this._commands.executeCommand<modes.SignatureHelp>('_executeSignatureHelpProvider', args).then(value => {\n\t\t\tif (value) {\n\t\t\t\treturn typeConverters.SignatureHelp.to(value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate _executeCompletionItemProvider(resource: URI, position: types.Position, triggerCharacter: string, maxItemsToResolve: number): Promise<types.CompletionList | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position),\n\t\t\ttriggerCharacter,\n\t\t\tmaxItemsToResolve\n\t\t};\n\t\treturn this._commands.executeCommand<modes.CompletionList>('_executeCompletionItemProvider', args).then(result => {\n\t\t\tif (result) {\n\t\t\t\tconst items = result.suggestions.map(suggestion => typeConverters.CompletionItem.to(suggestion, this._commands.converter));\n\t\t\t\treturn new types.CompletionList(items, result.incomplete);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate _executeDocumentColorProvider(resource: URI): Promise<types.ColorInformation[]> {\n\t\tconst args = {\n\t\t\tresource\n\t\t};\n\t\treturn this._commands.executeCommand<IRawColorInfo[]>('_executeDocumentColorProvider', args).then(result => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(ci => ({ range: typeConverters.Range.to(ci.range), color: typeConverters.Color.to(ci.color) }));\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tprivate _executeColorPresentationProvider(color: types.Color, context: { uri: URI, range: types.Range; }): Promise<types.ColorPresentation[]> {\n\t\tconst args = {\n\t\t\tresource: context.uri,\n\t\t\tcolor: typeConverters.Color.from(color),\n\t\t\trange: typeConverters.Range.from(context.range),\n\t\t};\n\t\treturn this._commands.executeCommand<modes.IColorPresentation[]>('_executeColorPresentationProvider', args).then(result => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(typeConverters.ColorPresentation.to);\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\n\tprivate _executeCodeActionProvider(resource: URI, rangeOrSelection: types.Range | types.Selection, kind?: string): Promise<(vscode.CodeAction | vscode.Command | undefined)[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\trangeOrSelection: types.Selection.isSelection(rangeOrSelection)\n\t\t\t\t? typeConverters.Selection.from(rangeOrSelection)\n\t\t\t\t: typeConverters.Range.from(rangeOrSelection),\n\t\t\tkind\n\t\t};\n\t\treturn this._commands.executeCommand<CustomCodeAction[]>('_executeCodeActionProvider', args)\n\t\t\t.then(tryMapWith(codeAction => {\n\t\t\t\tif (codeAction._isSynthetic) {\n\t\t\t\t\tif (!codeAction.command) {\n\t\t\t\t\t\tthrow new Error('Synthetic code actions must have a command');\n\t\t\t\t\t}\n\t\t\t\t\treturn this._commands.converter.fromInternal(codeAction.command);\n\t\t\t\t} else {\n\t\t\t\t\tconst ret = new types.CodeAction(\n\t\t\t\t\t\tcodeAction.title,\n\t\t\t\t\t\tcodeAction.kind ? new types.CodeActionKind(codeAction.kind) : undefined\n\t\t\t\t\t);\n\t\t\t\t\tif (codeAction.edit) {\n\t\t\t\t\t\tret.edit = typeConverters.WorkspaceEdit.to(codeAction.edit);\n\t\t\t\t\t}\n\t\t\t\t\tif (codeAction.command) {\n\t\t\t\t\t\tret.command = this._commands.converter.fromInternal(codeAction.command);\n\t\t\t\t\t}\n\t\t\t\t\tret.isPreferred = codeAction.isPreferred;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tprivate _executeCodeLensProvider(resource: URI, itemResolveCount: number): Promise<vscode.CodeLens[] | undefined> {\n\t\tconst args = { resource, itemResolveCount };\n\t\treturn this._commands.executeCommand<modes.CodeLens[]>('_executeCodeLensProvider', args)\n\t\t\t.then(tryMapWith(item => {\n\t\t\t\treturn new types.CodeLens(\n\t\t\t\t\ttypeConverters.Range.to(item.range),\n\t\t\t\t\titem.command ? this._commands.converter.fromInternal(item.command) : undefined);\n\t\t\t}));\n\n\t}\n\n\tprivate _executeDocumentLinkProvider(resource: URI): Promise<vscode.DocumentLink[] | undefined> {\n\t\treturn this._commands.executeCommand<modes.ILink[]>('_executeLinkProvider', resource)\n\t\t\t.then(tryMapWith(typeConverters.DocumentLink.to));\n\t}\n}\n\nfunction tryMapWith<T, R>(f: (x: T) => R) {\n\treturn (value: T[]) => {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map(f);\n\t\t}\n\t\treturn undefined;\n\t};\n}\n\nfunction mapLocationOrLocationLink(values: (modes.Location | modes.LocationLink)[]): (types.Location | vscode.LocationLink)[] | undefined {\n\tif (!Array.isArray(values)) {\n\t\treturn undefined;\n\t}\n\tconst result: (types.Location | vscode.LocationLink)[] = [];\n\tfor (const item of values) {\n\t\tif (modes.isLocationLink(item)) {\n\t\t\tresult.push(typeConverters.DefinitionLink.to(item));\n\t\t} else {\n\t\t\tresult.push(typeConverters.location.to(item));\n\t\t}\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { illegalState } from 'vs/base/common/errors';\nimport { ExtHostDocumentSaveParticipantShape, MainThreadTextEditorsShape, IWorkspaceEditDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { TextEdit } from 'vs/workbench/api/common/extHostTypes';\nimport { Range, TextDocumentSaveReason, EndOfLine } from 'vs/workbench/api/common/extHostTypeConverters';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport type * as vscode from 'vscode';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\n\ntype Listener = [Function, any, IExtensionDescription];\n\nexport class ExtHostDocumentSaveParticipant implements ExtHostDocumentSaveParticipantShape {\n\n\tprivate readonly _callbacks = new LinkedList<Listener>();\n\tprivate readonly _badListeners = new WeakMap<Function, number>();\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _mainThreadEditors: MainThreadTextEditorsShape,\n\t\tprivate readonly _thresholds: { timeout: number; errors: number; } = { timeout: 1500, errors: 3 }\n\t) {\n\t\t//\n\t}\n\n\tdispose(): void {\n\t\tthis._callbacks.clear();\n\t}\n\n\tgetOnWillSaveTextDocumentEvent(extension: IExtensionDescription): Event<vscode.TextDocumentWillSaveEvent> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst remove = this._callbacks.push([listener, thisArg, extension]);\n\t\t\tconst result = { dispose: remove };\n\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(result);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t}\n\n\tasync $participateInSave(data: UriComponents, reason: SaveReason): Promise<boolean[]> {\n\t\tconst resource = URI.revive(data);\n\n\t\tlet didTimeout = false;\n\t\tconst didTimeoutHandle = setTimeout(() => didTimeout = true, this._thresholds.timeout);\n\n\t\tconst results: boolean[] = [];\n\t\ttry {\n\t\t\tfor (let listener of [...this._callbacks]) { // copy to prevent concurrent modifications\n\t\t\t\tif (didTimeout) {\n\t\t\t\t\t// timeout - no more listeners\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst document = this._documents.getDocument(resource);\n\t\t\t\tconst success = await this._deliverEventAsyncAndBlameBadListeners(listener, <any>{ document, reason: TextDocumentSaveReason.to(reason) });\n\t\t\t\tresults.push(success);\n\t\t\t}\n\t\t} finally {\n\t\t\tclearTimeout(didTimeoutHandle);\n\t\t}\n\t\treturn results;\n\t}\n\n\tprivate _deliverEventAsyncAndBlameBadListeners([listener, thisArg, extension]: Listener, stubEvent: vscode.TextDocumentWillSaveEvent): Promise<any> {\n\t\tconst errors = this._badListeners.get(listener);\n\t\tif (typeof errors === 'number' && errors > this._thresholds.errors) {\n\t\t\t// bad listener - ignore\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn this._deliverEventAsync(extension, listener, thisArg, stubEvent).then(() => {\n\t\t\t// don't send result across the wire\n\t\t\treturn true;\n\n\t\t}, err => {\n\n\t\t\tthis._logService.error(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' threw ERROR`);\n\t\t\tthis._logService.error(err);\n\n\t\t\tif (!(err instanceof Error) || (<Error>err).message !== 'concurrent_edits') {\n\t\t\t\tconst errors = this._badListeners.get(listener);\n\t\t\t\tthis._badListeners.set(listener, !errors ? 1 : errors + 1);\n\n\t\t\t\tif (typeof errors === 'number' && errors > this._thresholds.errors) {\n\t\t\t\t\tthis._logService.info(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' will now be IGNORED because of timeouts and/or errors`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate _deliverEventAsync(extension: IExtensionDescription, listener: Function, thisArg: any, stubEvent: vscode.TextDocumentWillSaveEvent): Promise<any> {\n\n\t\tconst promises: Promise<vscode.TextEdit[]>[] = [];\n\n\t\tconst t1 = Date.now();\n\t\tconst { document, reason } = stubEvent;\n\t\tconst { version } = document;\n\n\t\tconst event = Object.freeze(<vscode.TextDocumentWillSaveEvent>{\n\t\t\tdocument,\n\t\t\treason,\n\t\t\twaitUntil(p: Promise<any | vscode.TextEdit[]>) {\n\t\t\t\tif (Object.isFrozen(promises)) {\n\t\t\t\t\tthrow illegalState('waitUntil can not be called async');\n\t\t\t\t}\n\t\t\t\tpromises.push(Promise.resolve(p));\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\t// fire event\n\t\t\tlistener.apply(thisArg, [event]);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\n\t\t// freeze promises after event call\n\t\tObject.freeze(promises);\n\n\t\treturn new Promise<vscode.TextEdit[][]>((resolve, reject) => {\n\t\t\t// join on all listener promises, reject after timeout\n\t\t\tconst handle = setTimeout(() => reject(new Error('timeout')), this._thresholds.timeout);\n\n\t\t\treturn Promise.all(promises).then(edits => {\n\t\t\t\tthis._logService.debug(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' finished after ${(Date.now() - t1)}ms`);\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tresolve(edits);\n\t\t\t}).catch(err => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\treject(err);\n\t\t\t});\n\n\t\t}).then(values => {\n\t\t\tconst dto: IWorkspaceEditDto = { edits: [] };\n\t\t\tfor (const value of values) {\n\t\t\t\tif (Array.isArray(value) && (<vscode.TextEdit[]>value).every(e => e instanceof TextEdit)) {\n\t\t\t\t\tfor (const { newText, newEol, range } of value) {\n\t\t\t\t\t\tdto.edits.push({\n\t\t\t\t\t\t\tresource: document.uri,\n\t\t\t\t\t\t\tedit: {\n\t\t\t\t\t\t\t\trange: range && Range.from(range),\n\t\t\t\t\t\t\t\ttext: newText,\n\t\t\t\t\t\t\t\teol: newEol && EndOfLine.from(newEol)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// apply edits if any and if document\n\t\t\t// didn't change somehow in the meantime\n\t\t\tif (dto.edits.length === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (version === document.version) {\n\t\t\t\treturn this._mainThreadEditors.$tryApplyWorkspaceEdit(dto);\n\t\t\t}\n\n\t\t\treturn Promise.reject(new Error('concurrent_edits'));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProgressOptions } from 'vscode';\nimport { MainThreadProgressShape, ExtHostProgressShape } from './extHost.protocol';\nimport { ProgressLocation } from './extHostTypeConverters';\nimport { Progress, IProgressStep } from 'vs/platform/progress/common/progress';\nimport { localize } from 'vs/nls';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { throttle } from 'vs/base/common/decorators';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtHostProgress implements ExtHostProgressShape {\n\n\tprivate _proxy: MainThreadProgressShape;\n\tprivate _handles: number = 0;\n\tprivate _mapHandleToCancellationSource: Map<number, CancellationTokenSource> = new Map();\n\n\tconstructor(proxy: MainThreadProgressShape) {\n\t\tthis._proxy = proxy;\n\t}\n\n\twithProgress<R>(extension: IExtensionDescription, options: ProgressOptions, task: (progress: Progress<IProgressStep>, token: CancellationToken) => Thenable<R>): Thenable<R> {\n\t\tconst handle = this._handles++;\n\t\tconst { title, location, cancellable } = options;\n\t\tconst source = localize('extensionSource', \"{0} (Extension)\", extension.displayName || extension.name);\n\n\t\tthis._proxy.$startProgress(handle, { location: ProgressLocation.from(location), title, source, cancellable }, extension);\n\t\treturn this._withProgress(handle, task, !!cancellable);\n\t}\n\n\tprivate _withProgress<R>(handle: number, task: (progress: Progress<IProgressStep>, token: CancellationToken) => Thenable<R>, cancellable: boolean): Thenable<R> {\n\t\tlet source: CancellationTokenSource | undefined;\n\t\tif (cancellable) {\n\t\t\tsource = new CancellationTokenSource();\n\t\t\tthis._mapHandleToCancellationSource.set(handle, source);\n\t\t}\n\n\t\tconst progressEnd = (handle: number): void => {\n\t\t\tthis._proxy.$progressEnd(handle);\n\t\t\tthis._mapHandleToCancellationSource.delete(handle);\n\t\t\tif (source) {\n\t\t\t\tsource.dispose();\n\t\t\t}\n\t\t};\n\n\t\tlet p: Thenable<R>;\n\n\t\ttry {\n\t\t\tp = task(new ProgressCallback(this._proxy, handle), cancellable && source ? source.token : CancellationToken.None);\n\t\t} catch (err) {\n\t\t\tprogressEnd(handle);\n\t\t\tthrow err;\n\t\t}\n\n\t\tp.then(result => progressEnd(handle), err => progressEnd(handle));\n\t\treturn p;\n\t}\n\n\tpublic $acceptProgressCanceled(handle: number): void {\n\t\tconst source = this._mapHandleToCancellationSource.get(handle);\n\t\tif (source) {\n\t\t\tsource.cancel();\n\t\t\tthis._mapHandleToCancellationSource.delete(handle);\n\t\t}\n\t}\n}\n\nfunction mergeProgress(result: IProgressStep, currentValue: IProgressStep): IProgressStep {\n\tresult.message = currentValue.message;\n\tif (typeof currentValue.increment === 'number') {\n\t\tif (typeof result.increment === 'number') {\n\t\t\tresult.increment += currentValue.increment;\n\t\t} else {\n\t\t\tresult.increment = currentValue.increment;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass ProgressCallback extends Progress<IProgressStep> {\n\tconstructor(private _proxy: MainThreadProgressShape, private _handle: number) {\n\t\tsuper(p => this.throttledReport(p));\n\t}\n\n\t@throttle(100, (result: IProgressStep, currentValue: IProgressStep) => mergeProgress(result, currentValue), () => Object.create(null))\n\tthrottledReport(p: IProgressStep): void {\n\t\tthis._proxy.$progressReport(this._handle, p);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ok } from 'vs/base/common/assert';\nimport { illegalArgument, readonly } from 'vs/base/common/errors';\nimport { IdGenerator } from 'vs/base/common/idGenerator';\nimport { TextEditorCursorStyle } from 'vs/editor/common/config/editorOptions';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISingleEditOperation } from 'vs/editor/common/model';\nimport { IResolvedTextEditorConfiguration, ITextEditorConfigurationUpdate, MainThreadTextEditorsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocumentData } from 'vs/workbench/api/common/extHostDocumentData';\nimport * as TypeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { EndOfLine, Position, Range, Selection, SnippetString, TextEditorLineNumbersStyle, TextEditorRevealType } from 'vs/workbench/api/common/extHostTypes';\nimport type * as vscode from 'vscode';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class TextEditorDecorationType implements vscode.TextEditorDecorationType {\n\n\tprivate static readonly _Keys = new IdGenerator('TextEditorDecorationType');\n\n\tprivate _proxy: MainThreadTextEditorsShape;\n\tpublic key: string;\n\n\tconstructor(proxy: MainThreadTextEditorsShape, options: vscode.DecorationRenderOptions) {\n\t\tthis.key = TextEditorDecorationType._Keys.nextId();\n\t\tthis._proxy = proxy;\n\t\tthis._proxy.$registerTextEditorDecorationType(this.key, TypeConverters.DecorationRenderOptions.from(options));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._proxy.$removeTextEditorDecorationType(this.key);\n\t}\n}\n\nexport interface ITextEditOperation {\n\trange: vscode.Range;\n\ttext: string | null;\n\tforceMoveMarkers: boolean;\n}\n\nexport interface IEditData {\n\tdocumentVersionId: number;\n\tedits: ITextEditOperation[];\n\tsetEndOfLine: EndOfLine | undefined;\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n}\n\nexport class TextEditorEdit {\n\n\tprivate readonly _document: vscode.TextDocument;\n\tprivate readonly _documentVersionId: number;\n\tprivate readonly _undoStopBefore: boolean;\n\tprivate readonly _undoStopAfter: boolean;\n\tprivate _collectedEdits: ITextEditOperation[] = [];\n\tprivate _setEndOfLine: EndOfLine | undefined = undefined;\n\tprivate _finalized: boolean = false;\n\n\tconstructor(document: vscode.TextDocument, options: { undoStopBefore: boolean; undoStopAfter: boolean; }) {\n\t\tthis._document = document;\n\t\tthis._documentVersionId = document.version;\n\t\tthis._undoStopBefore = options.undoStopBefore;\n\t\tthis._undoStopAfter = options.undoStopAfter;\n\t}\n\n\tfinalize(): IEditData {\n\t\tthis._finalized = true;\n\t\treturn {\n\t\t\tdocumentVersionId: this._documentVersionId,\n\t\t\tedits: this._collectedEdits,\n\t\t\tsetEndOfLine: this._setEndOfLine,\n\t\t\tundoStopBefore: this._undoStopBefore,\n\t\t\tundoStopAfter: this._undoStopAfter\n\t\t};\n\t}\n\n\tprivate _throwIfFinalized() {\n\t\tif (this._finalized) {\n\t\t\tthrow new Error('Edit is only valid while callback runs');\n\t\t}\n\t}\n\n\treplace(location: Position | Range | Selection, value: string): void {\n\t\tthis._throwIfFinalized();\n\t\tlet range: Range | null = null;\n\n\t\tif (location instanceof Position) {\n\t\t\trange = new Range(location, location);\n\t\t} else if (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._pushEdit(range, value, false);\n\t}\n\n\tinsert(location: Position, value: string): void {\n\t\tthis._throwIfFinalized();\n\t\tthis._pushEdit(new Range(location, location), value, true);\n\t}\n\n\tdelete(location: Range | Selection): void {\n\t\tthis._throwIfFinalized();\n\t\tlet range: Range | null = null;\n\n\t\tif (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._pushEdit(range, null, true);\n\t}\n\n\tprivate _pushEdit(range: Range, text: string | null, forceMoveMarkers: boolean): void {\n\t\tconst validRange = this._document.validateRange(range);\n\t\tthis._collectedEdits.push({\n\t\t\trange: validRange,\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: forceMoveMarkers\n\t\t});\n\t}\n\n\tsetEndOfLine(endOfLine: EndOfLine): void {\n\t\tthis._throwIfFinalized();\n\t\tif (endOfLine !== EndOfLine.LF && endOfLine !== EndOfLine.CRLF) {\n\t\t\tthrow illegalArgument('endOfLine');\n\t\t}\n\n\t\tthis._setEndOfLine = endOfLine;\n\t}\n}\n\nexport class ExtHostTextEditorOptions implements vscode.TextEditorOptions {\n\n\tprivate _proxy: MainThreadTextEditorsShape;\n\tprivate _id: string;\n\tprivate _logService: ILogService;\n\n\tprivate _tabSize!: number;\n\tprivate _indentSize!: number;\n\tprivate _insertSpaces!: boolean;\n\tprivate _cursorStyle!: TextEditorCursorStyle;\n\tprivate _lineNumbers!: TextEditorLineNumbersStyle;\n\n\tconstructor(proxy: MainThreadTextEditorsShape, id: string, source: IResolvedTextEditorConfiguration, logService: ILogService) {\n\t\tthis._proxy = proxy;\n\t\tthis._id = id;\n\t\tthis._accept(source);\n\t\tthis._logService = logService;\n\t}\n\n\tpublic _accept(source: IResolvedTextEditorConfiguration): void {\n\t\tthis._tabSize = source.tabSize;\n\t\tthis._indentSize = source.indentSize;\n\t\tthis._insertSpaces = source.insertSpaces;\n\t\tthis._cursorStyle = source.cursorStyle;\n\t\tthis._lineNumbers = TypeConverters.TextEditorLineNumbersStyle.to(source.lineNumbers);\n\t}\n\n\tpublic get tabSize(): number | string {\n\t\treturn this._tabSize;\n\t}\n\n\tprivate _validateTabSize(value: number | string): number | 'auto' | null {\n\t\tif (value === 'auto') {\n\t\t\treturn 'auto';\n\t\t}\n\t\tif (typeof value === 'number') {\n\t\t\tconst r = Math.floor(value);\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tconst r = parseInt(value, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set tabSize(value: number | string) {\n\t\tconst tabSize = this._validateTabSize(value);\n\t\tif (tabSize === null) {\n\t\t\t// ignore invalid call\n\t\t\treturn;\n\t\t}\n\t\tif (typeof tabSize === 'number') {\n\t\t\tif (this._tabSize === tabSize) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new tabSize value immediately\n\t\t\tthis._tabSize = tabSize;\n\t\t}\n\t\tthis._warnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\ttabSize: tabSize\n\t\t}));\n\t}\n\n\tpublic get indentSize(): number | string {\n\t\treturn this._indentSize;\n\t}\n\n\tprivate _validateIndentSize(value: number | string): number | 'tabSize' | null {\n\t\tif (value === 'tabSize') {\n\t\t\treturn 'tabSize';\n\t\t}\n\t\tif (typeof value === 'number') {\n\t\t\tconst r = Math.floor(value);\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tconst r = parseInt(value, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set indentSize(value: number | string) {\n\t\tconst indentSize = this._validateIndentSize(value);\n\t\tif (indentSize === null) {\n\t\t\t// ignore invalid call\n\t\t\treturn;\n\t\t}\n\t\tif (typeof indentSize === 'number') {\n\t\t\tif (this._indentSize === indentSize) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new indentSize value immediately\n\t\t\tthis._indentSize = indentSize;\n\t\t}\n\t\tthis._warnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\tindentSize: indentSize\n\t\t}));\n\t}\n\n\tpublic get insertSpaces(): boolean | string {\n\t\treturn this._insertSpaces;\n\t}\n\n\tprivate _validateInsertSpaces(value: boolean | string): boolean | 'auto' {\n\t\tif (value === 'auto') {\n\t\t\treturn 'auto';\n\t\t}\n\t\treturn (value === 'false' ? false : Boolean(value));\n\t}\n\n\tpublic set insertSpaces(value: boolean | string) {\n\t\tconst insertSpaces = this._validateInsertSpaces(value);\n\t\tif (typeof insertSpaces === 'boolean') {\n\t\t\tif (this._insertSpaces === insertSpaces) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new insertSpaces value immediately\n\t\t\tthis._insertSpaces = insertSpaces;\n\t\t}\n\t\tthis._warnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\tinsertSpaces: insertSpaces\n\t\t}));\n\t}\n\n\tpublic get cursorStyle(): TextEditorCursorStyle {\n\t\treturn this._cursorStyle;\n\t}\n\n\tpublic set cursorStyle(value: TextEditorCursorStyle) {\n\t\tif (this._cursorStyle === value) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._cursorStyle = value;\n\t\tthis._warnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\tcursorStyle: value\n\t\t}));\n\t}\n\n\tpublic get lineNumbers(): TextEditorLineNumbersStyle {\n\t\treturn this._lineNumbers;\n\t}\n\n\tpublic set lineNumbers(value: TextEditorLineNumbersStyle) {\n\t\tif (this._lineNumbers === value) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._lineNumbers = value;\n\t\tthis._warnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\tlineNumbers: TypeConverters.TextEditorLineNumbersStyle.from(value)\n\t\t}));\n\t}\n\n\tpublic assign(newOptions: vscode.TextEditorOptions) {\n\t\tconst bulkConfigurationUpdate: ITextEditorConfigurationUpdate = {};\n\t\tlet hasUpdate = false;\n\n\t\tif (typeof newOptions.tabSize !== 'undefined') {\n\t\t\tconst tabSize = this._validateTabSize(newOptions.tabSize);\n\t\t\tif (tabSize === 'auto') {\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.tabSize = tabSize;\n\t\t\t} else if (typeof tabSize === 'number' && this._tabSize !== tabSize) {\n\t\t\t\t// reflect the new tabSize value immediately\n\t\t\t\tthis._tabSize = tabSize;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.tabSize = tabSize;\n\t\t\t}\n\t\t}\n\n\t\t// if (typeof newOptions.indentSize !== 'undefined') {\n\t\t// \tconst indentSize = this._validateIndentSize(newOptions.indentSize);\n\t\t// \tif (indentSize === 'tabSize') {\n\t\t// \t\thasUpdate = true;\n\t\t// \t\tbulkConfigurationUpdate.indentSize = indentSize;\n\t\t// \t} else if (typeof indentSize === 'number' && this._indentSize !== indentSize) {\n\t\t// \t\t// reflect the new indentSize value immediately\n\t\t// \t\tthis._indentSize = indentSize;\n\t\t// \t\thasUpdate = true;\n\t\t// \t\tbulkConfigurationUpdate.indentSize = indentSize;\n\t\t// \t}\n\t\t// }\n\n\t\tif (typeof newOptions.insertSpaces !== 'undefined') {\n\t\t\tconst insertSpaces = this._validateInsertSpaces(newOptions.insertSpaces);\n\t\t\tif (insertSpaces === 'auto') {\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.insertSpaces = insertSpaces;\n\t\t\t} else if (this._insertSpaces !== insertSpaces) {\n\t\t\t\t// reflect the new insertSpaces value immediately\n\t\t\t\tthis._insertSpaces = insertSpaces;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.insertSpaces = insertSpaces;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.cursorStyle !== 'undefined') {\n\t\t\tif (this._cursorStyle !== newOptions.cursorStyle) {\n\t\t\t\tthis._cursorStyle = newOptions.cursorStyle;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.cursorStyle = newOptions.cursorStyle;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.lineNumbers !== 'undefined') {\n\t\t\tif (this._lineNumbers !== newOptions.lineNumbers) {\n\t\t\t\tthis._lineNumbers = newOptions.lineNumbers;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.lineNumbers = TypeConverters.TextEditorLineNumbersStyle.from(newOptions.lineNumbers);\n\t\t\t}\n\t\t}\n\n\t\tif (hasUpdate) {\n\t\t\tthis._warnOnError(this._proxy.$trySetOptions(this._id, bulkConfigurationUpdate));\n\t\t}\n\t}\n\n\tprivate _warnOnError(promise: Promise<any>): void {\n\t\tpromise.catch(err => this._logService.warn(err));\n\t}\n}\n\nexport class ExtHostTextEditor implements vscode.TextEditor {\n\n\tprivate readonly _documentData: ExtHostDocumentData;\n\n\tprivate _selections: Selection[];\n\tprivate _options: ExtHostTextEditorOptions;\n\tprivate _visibleRanges: Range[];\n\tprivate _viewColumn: vscode.ViewColumn | undefined;\n\tprivate _disposed: boolean = false;\n\tprivate _hasDecorationsForKey: { [key: string]: boolean; };\n\n\tconstructor(\n\t\treadonly id: string,\n\t\tprivate readonly _proxy: MainThreadTextEditorsShape,\n\t\tprivate readonly _logService: ILogService,\n\t\tdocument: ExtHostDocumentData,\n\t\tselections: Selection[], options: IResolvedTextEditorConfiguration,\n\t\tvisibleRanges: Range[], viewColumn: vscode.ViewColumn | undefined\n\t) {\n\t\tthis._documentData = document;\n\t\tthis._selections = selections;\n\t\tthis._options = new ExtHostTextEditorOptions(this._proxy, this.id, options, _logService);\n\t\tthis._visibleRanges = visibleRanges;\n\t\tthis._viewColumn = viewColumn;\n\t\tthis._hasDecorationsForKey = Object.create(null);\n\t}\n\n\tdispose() {\n\t\tok(!this._disposed);\n\t\tthis._disposed = true;\n\t}\n\n\tshow(column: vscode.ViewColumn) {\n\t\tthis._proxy.$tryShowEditor(this.id, TypeConverters.ViewColumn.from(column));\n\t}\n\n\thide() {\n\t\tthis._proxy.$tryHideEditor(this.id);\n\t}\n\n\t// ---- the document\n\n\tget document(): vscode.TextDocument {\n\t\treturn this._documentData.document;\n\t}\n\n\tset document(value) {\n\t\tthrow readonly('document');\n\t}\n\n\t// ---- options\n\n\tget options(): vscode.TextEditorOptions {\n\t\treturn this._options;\n\t}\n\n\tset options(value: vscode.TextEditorOptions) {\n\t\tif (!this._disposed) {\n\t\t\tthis._options.assign(value);\n\t\t}\n\t}\n\n\t_acceptOptions(options: IResolvedTextEditorConfiguration): void {\n\t\tok(!this._disposed);\n\t\tthis._options._accept(options);\n\t}\n\n\t// ---- visible ranges\n\n\tget visibleRanges(): Range[] {\n\t\treturn this._visibleRanges;\n\t}\n\n\tset visibleRanges(value: Range[]) {\n\t\tthrow readonly('visibleRanges');\n\t}\n\n\t_acceptVisibleRanges(value: Range[]): void {\n\t\tok(!this._disposed);\n\t\tthis._visibleRanges = value;\n\t}\n\n\t// ---- view column\n\n\tget viewColumn(): vscode.ViewColumn | undefined {\n\t\treturn this._viewColumn;\n\t}\n\n\tset viewColumn(value) {\n\t\tthrow readonly('viewColumn');\n\t}\n\n\t_acceptViewColumn(value: vscode.ViewColumn) {\n\t\tok(!this._disposed);\n\t\tthis._viewColumn = value;\n\t}\n\n\t// ---- selections\n\n\tget selection(): Selection {\n\t\treturn this._selections && this._selections[0];\n\t}\n\n\tset selection(value: Selection) {\n\t\tif (!(value instanceof Selection)) {\n\t\t\tthrow illegalArgument('selection');\n\t\t}\n\t\tthis._selections = [value];\n\t\tthis._trySetSelection();\n\t}\n\n\tget selections(): Selection[] {\n\t\treturn this._selections;\n\t}\n\n\tset selections(value: Selection[]) {\n\t\tif (!Array.isArray(value) || value.some(a => !(a instanceof Selection))) {\n\t\t\tthrow illegalArgument('selections');\n\t\t}\n\t\tthis._selections = value;\n\t\tthis._trySetSelection();\n\t}\n\n\tsetDecorations(decorationType: vscode.TextEditorDecorationType, ranges: Range[] | vscode.DecorationOptions[]): void {\n\t\tconst willBeEmpty = (ranges.length === 0);\n\t\tif (willBeEmpty && !this._hasDecorationsForKey[decorationType.key]) {\n\t\t\t// avoid no-op call to the renderer\n\t\t\treturn;\n\t\t}\n\t\tif (willBeEmpty) {\n\t\t\tdelete this._hasDecorationsForKey[decorationType.key];\n\t\t} else {\n\t\t\tthis._hasDecorationsForKey[decorationType.key] = true;\n\t\t}\n\t\tthis._runOnProxy(\n\t\t\t() => {\n\t\t\t\tif (TypeConverters.isDecorationOptionsArr(ranges)) {\n\t\t\t\t\treturn this._proxy.$trySetDecorations(\n\t\t\t\t\t\tthis.id,\n\t\t\t\t\t\tdecorationType.key,\n\t\t\t\t\t\tTypeConverters.fromRangeOrRangeWithMessage(ranges)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst _ranges: number[] = new Array<number>(4 * ranges.length);\n\t\t\t\t\tfor (let i = 0, len = ranges.length; i < len; i++) {\n\t\t\t\t\t\tconst range = ranges[i];\n\t\t\t\t\t\t_ranges[4 * i] = range.start.line + 1;\n\t\t\t\t\t\t_ranges[4 * i + 1] = range.start.character + 1;\n\t\t\t\t\t\t_ranges[4 * i + 2] = range.end.line + 1;\n\t\t\t\t\t\t_ranges[4 * i + 3] = range.end.character + 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._proxy.$trySetDecorationsFast(\n\t\t\t\t\t\tthis.id,\n\t\t\t\t\t\tdecorationType.key,\n\t\t\t\t\t\t_ranges\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\trevealRange(range: Range, revealType: vscode.TextEditorRevealType): void {\n\t\tthis._runOnProxy(\n\t\t\t() => this._proxy.$tryRevealRange(\n\t\t\t\tthis.id,\n\t\t\t\tTypeConverters.Range.from(range),\n\t\t\t\t(revealType || TextEditorRevealType.Default)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate _trySetSelection(): Promise<vscode.TextEditor | null | undefined> {\n\t\tconst selection = this._selections.map(TypeConverters.Selection.from);\n\t\treturn this._runOnProxy(() => this._proxy.$trySetSelections(this.id, selection));\n\t}\n\n\t_acceptSelections(selections: Selection[]): void {\n\t\tok(!this._disposed);\n\t\tthis._selections = selections;\n\t}\n\n\t// ---- editing\n\n\tedit(callback: (edit: TextEditorEdit) => void, options: { undoStopBefore: boolean; undoStopAfter: boolean; } = { undoStopBefore: true, undoStopAfter: true }): Promise<boolean> {\n\t\tif (this._disposed) {\n\t\t\treturn Promise.reject(new Error('TextEditor#edit not possible on closed editors'));\n\t\t}\n\t\tconst edit = new TextEditorEdit(this._documentData.document, options);\n\t\tcallback(edit);\n\t\treturn this._applyEdit(edit);\n\t}\n\n\tprivate _applyEdit(editBuilder: TextEditorEdit): Promise<boolean> {\n\t\tconst editData = editBuilder.finalize();\n\n\t\t// return when there is nothing to do\n\t\tif (editData.edits.length === 0 && !editData.setEndOfLine) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\t// check that the edits are not overlapping (i.e. illegal)\n\t\tconst editRanges = editData.edits.map(edit => edit.range);\n\n\t\t// sort ascending (by end and then by start)\n\t\teditRanges.sort((a, b) => {\n\t\t\tif (a.end.line === b.end.line) {\n\t\t\t\tif (a.end.character === b.end.character) {\n\t\t\t\t\tif (a.start.line === b.start.line) {\n\t\t\t\t\t\treturn a.start.character - b.start.character;\n\t\t\t\t\t}\n\t\t\t\t\treturn a.start.line - b.start.line;\n\t\t\t\t}\n\t\t\t\treturn a.end.character - b.end.character;\n\t\t\t}\n\t\t\treturn a.end.line - b.end.line;\n\t\t});\n\n\t\t// check that no edits are overlapping\n\t\tfor (let i = 0, count = editRanges.length - 1; i < count; i++) {\n\t\t\tconst rangeEnd = editRanges[i].end;\n\t\t\tconst nextRangeStart = editRanges[i + 1].start;\n\n\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t// overlapping ranges\n\t\t\t\treturn Promise.reject(\n\t\t\t\t\tnew Error('Overlapping ranges are not allowed!')\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// prepare data for serialization\n\t\tconst edits = editData.edits.map((edit): ISingleEditOperation => {\n\t\t\treturn {\n\t\t\t\trange: TypeConverters.Range.from(edit.range),\n\t\t\t\ttext: edit.text,\n\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers\n\t\t\t};\n\t\t});\n\n\t\treturn this._proxy.$tryApplyEdits(this.id, editData.documentVersionId, edits, {\n\t\t\tsetEndOfLine: typeof editData.setEndOfLine === 'number' ? TypeConverters.EndOfLine.from(editData.setEndOfLine) : undefined,\n\t\t\tundoStopBefore: editData.undoStopBefore,\n\t\t\tundoStopAfter: editData.undoStopAfter\n\t\t});\n\t}\n\n\tinsertSnippet(snippet: SnippetString, where?: Position | readonly Position[] | Range | readonly Range[], options: { undoStopBefore: boolean; undoStopAfter: boolean; } = { undoStopBefore: true, undoStopAfter: true }): Promise<boolean> {\n\t\tif (this._disposed) {\n\t\t\treturn Promise.reject(new Error('TextEditor#insertSnippet not possible on closed editors'));\n\t\t}\n\t\tlet ranges: IRange[];\n\n\t\tif (!where || (Array.isArray(where) && where.length === 0)) {\n\t\t\tranges = this._selections.map(range => TypeConverters.Range.from(range));\n\n\t\t} else if (where instanceof Position) {\n\t\t\tconst { lineNumber, column } = TypeConverters.Position.from(where);\n\t\t\tranges = [{ startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: column }];\n\n\t\t} else if (where instanceof Range) {\n\t\t\tranges = [TypeConverters.Range.from(where)];\n\t\t} else {\n\t\t\tranges = [];\n\t\t\tfor (const posOrRange of where) {\n\t\t\t\tif (posOrRange instanceof Range) {\n\t\t\t\t\tranges.push(TypeConverters.Range.from(posOrRange));\n\t\t\t\t} else {\n\t\t\t\t\tconst { lineNumber, column } = TypeConverters.Position.from(posOrRange);\n\t\t\t\t\tranges.push({ startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: column });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._proxy.$tryInsertSnippet(this.id, snippet.value, ranges, options);\n\t}\n\n\t// ---- util\n\n\tprivate _runOnProxy(callback: () => Promise<any>): Promise<ExtHostTextEditor | undefined | null> {\n\t\tif (this._disposed) {\n\t\t\tthis._logService.warn('TextEditor is closed/disposed');\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn callback().then(() => this, err => {\n\t\t\tif (!(err instanceof Error && err.name === 'DISPOSED')) {\n\t\t\t\tthis._logService.warn(err);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Emitter } from 'vs/base/common/event';\nimport * as path from 'vs/base/common/path';\n\nexport class DeltaExtensionsResult {\n\tconstructor(\n\t\tpublic readonly removedDueToLooping: IExtensionDescription[]\n\t) { }\n}\n\nexport class ExtensionDescriptionRegistry {\n\tprivate readonly _onDidChange = new Emitter<void>();\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tprivate _extensionDescriptions: IExtensionDescription[];\n\tprivate _extensionsMap!: Map<string, IExtensionDescription>;\n\tprivate _extensionsArr!: IExtensionDescription[];\n\tprivate _activationMap!: Map<string, IExtensionDescription[]>;\n\n\tconstructor(extensionDescriptions: IExtensionDescription[]) {\n\t\tthis._extensionDescriptions = extensionDescriptions;\n\t\tthis._initialize();\n\t}\n\n\tprivate _initialize(): void {\n\t\t// Ensure extensions are stored in the order: builtin, user, under development\n\t\tthis._extensionDescriptions.sort(extensionCmp);\n\n\t\tthis._extensionsMap = new Map<string, IExtensionDescription>();\n\t\tthis._extensionsArr = [];\n\t\tthis._activationMap = new Map<string, IExtensionDescription[]>();\n\n\t\tfor (const extensionDescription of this._extensionDescriptions) {\n\t\t\tif (this._extensionsMap.has(ExtensionIdentifier.toKey(extensionDescription.identifier))) {\n\t\t\t\t// No overwriting allowed!\n\t\t\t\tconsole.error('Extension `' + extensionDescription.identifier.value + '` is already registered');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._extensionsMap.set(ExtensionIdentifier.toKey(extensionDescription.identifier), extensionDescription);\n\t\t\tthis._extensionsArr.push(extensionDescription);\n\n\t\t\tif (Array.isArray(extensionDescription.activationEvents)) {\n\t\t\t\tfor (let activationEvent of extensionDescription.activationEvents) {\n\t\t\t\t\t// TODO@joao: there's no easy way to contribute this\n\t\t\t\t\tif (activationEvent === 'onUri') {\n\t\t\t\t\t\tactivationEvent = `onUri:${ExtensionIdentifier.toKey(extensionDescription.identifier)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this._activationMap.has(activationEvent)) {\n\t\t\t\t\t\tthis._activationMap.set(activationEvent, []);\n\t\t\t\t\t}\n\t\t\t\t\tthis._activationMap.get(activationEvent)!.push(extensionDescription);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic keepOnly(extensionIds: ExtensionIdentifier[]): void {\n\t\tconst toKeep = new Set<string>();\n\t\textensionIds.forEach(extensionId => toKeep.add(ExtensionIdentifier.toKey(extensionId)));\n\t\tthis._extensionDescriptions = this._extensionDescriptions.filter(extension => toKeep.has(ExtensionIdentifier.toKey(extension.identifier)));\n\t\tthis._initialize();\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tpublic deltaExtensions(toAdd: IExtensionDescription[], toRemove: ExtensionIdentifier[]): DeltaExtensionsResult {\n\t\tif (toAdd.length > 0) {\n\t\t\tthis._extensionDescriptions = this._extensionDescriptions.concat(toAdd);\n\t\t}\n\n\t\t// Immediately remove looping extensions!\n\t\tconst looping = ExtensionDescriptionRegistry._findLoopingExtensions(this._extensionDescriptions);\n\t\ttoRemove = toRemove.concat(looping.map(ext => ext.identifier));\n\n\t\tif (toRemove.length > 0) {\n\t\t\tconst toRemoveSet = new Set<string>();\n\t\t\ttoRemove.forEach(extensionId => toRemoveSet.add(ExtensionIdentifier.toKey(extensionId)));\n\t\t\tthis._extensionDescriptions = this._extensionDescriptions.filter(extension => !toRemoveSet.has(ExtensionIdentifier.toKey(extension.identifier)));\n\t\t}\n\n\t\tthis._initialize();\n\t\tthis._onDidChange.fire(undefined);\n\t\treturn new DeltaExtensionsResult(looping);\n\t}\n\n\tprivate static _findLoopingExtensions(extensionDescriptions: IExtensionDescription[]): IExtensionDescription[] {\n\t\tconst G = new class {\n\n\t\t\tprivate _arcs = new Map<string, string[]>();\n\t\t\tprivate _nodesSet = new Set<string>();\n\t\t\tprivate _nodesArr: string[] = [];\n\n\t\t\taddNode(id: string): void {\n\t\t\t\tif (!this._nodesSet.has(id)) {\n\t\t\t\t\tthis._nodesSet.add(id);\n\t\t\t\t\tthis._nodesArr.push(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taddArc(from: string, to: string): void {\n\t\t\t\tthis.addNode(from);\n\t\t\t\tthis.addNode(to);\n\t\t\t\tif (this._arcs.has(from)) {\n\t\t\t\t\tthis._arcs.get(from)!.push(to);\n\t\t\t\t} else {\n\t\t\t\t\tthis._arcs.set(from, [to]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgetArcs(id: string): string[] {\n\t\t\t\tif (this._arcs.has(id)) {\n\t\t\t\t\treturn this._arcs.get(id)!;\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\thasOnlyGoodArcs(id: string, good: Set<string>): boolean {\n\t\t\t\tconst dependencies = G.getArcs(id);\n\t\t\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\t\t\tif (!good.has(dependencies[i])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tgetNodes(): string[] {\n\t\t\t\treturn this._nodesArr;\n\t\t\t}\n\t\t};\n\n\t\tlet descs = new Map<string, IExtensionDescription>();\n\t\tfor (let extensionDescription of extensionDescriptions) {\n\t\t\tconst extensionId = ExtensionIdentifier.toKey(extensionDescription.identifier);\n\t\t\tdescs.set(extensionId, extensionDescription);\n\t\t\tif (extensionDescription.extensionDependencies) {\n\t\t\t\tfor (let _depId of extensionDescription.extensionDependencies) {\n\t\t\t\t\tconst depId = ExtensionIdentifier.toKey(_depId);\n\t\t\t\t\tG.addArc(extensionId, depId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// initialize with all extensions with no dependencies.\n\t\tlet good = new Set<string>();\n\t\tG.getNodes().filter(id => G.getArcs(id).length === 0).forEach(id => good.add(id));\n\n\t\t// all other extensions will be processed below.\n\t\tlet nodes = G.getNodes().filter(id => !good.has(id));\n\n\t\tlet madeProgress: boolean;\n\t\tdo {\n\t\t\tmadeProgress = false;\n\n\t\t\t// find one extension which has only good deps\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\tconst id = nodes[i];\n\n\t\t\t\tif (G.hasOnlyGoodArcs(id, good)) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t\tgood.add(id);\n\t\t\t\t\tmadeProgress = true;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (madeProgress);\n\n\t\t// The remaining nodes are bad and have loops\n\t\treturn nodes.map(id => descs.get(id)!);\n\t}\n\n\tpublic containsActivationEvent(activationEvent: string): boolean {\n\t\treturn this._activationMap.has(activationEvent);\n\t}\n\n\tpublic containsExtension(extensionId: ExtensionIdentifier): boolean {\n\t\treturn this._extensionsMap.has(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tpublic getExtensionDescriptionsForActivationEvent(activationEvent: string): IExtensionDescription[] {\n\t\tconst extensions = this._activationMap.get(activationEvent);\n\t\treturn extensions ? extensions.slice(0) : [];\n\t}\n\n\tpublic getAllExtensionDescriptions(): IExtensionDescription[] {\n\t\treturn this._extensionsArr.slice(0);\n\t}\n\n\tpublic getExtensionDescription(extensionId: ExtensionIdentifier | string): IExtensionDescription | undefined {\n\t\tconst extension = this._extensionsMap.get(ExtensionIdentifier.toKey(extensionId));\n\t\treturn extension ? extension : undefined;\n\t}\n}\n\nconst enum SortBucket {\n\tBuiltin = 0,\n\tUser = 1,\n\tDev = 2\n}\n\n/**\n * Ensure that:\n * - first are builtin extensions\n * - second are user extensions\n * - third are extensions under development\n *\n * In each bucket, extensions must be sorted alphabetically by their folder name.\n */\nfunction extensionCmp(a: IExtensionDescription, b: IExtensionDescription): number {\n\tconst aSortBucket = (a.isBuiltin ? SortBucket.Builtin : a.isUnderDevelopment ? SortBucket.Dev : SortBucket.User);\n\tconst bSortBucket = (b.isBuiltin ? SortBucket.Builtin : b.isUnderDevelopment ? SortBucket.Dev : SortBucket.User);\n\tif (aSortBucket !== bSortBucket) {\n\t\treturn aSortBucket - bSortBucket;\n\t}\n\tconst aLastSegment = path.posix.basename(a.extensionLocation.path);\n\tconst bLastSegment = path.posix.basename(b.extensionLocation.path);\n\tif (aLastSegment < bLastSegment) {\n\t\treturn -1;\n\t}\n\tif (aLastSegment > bLastSegment) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface IExtHostReadyMessage {\n\ttype: 'VSCODE_EXTHOST_IPC_READY';\n}\n\nexport interface IExtHostSocketMessage {\n\ttype: 'VSCODE_EXTHOST_IPC_SOCKET';\n\tinitialDataChunk: string;\n\tskipWebSocketFrames: boolean;\n}\n\nexport interface IExtHostReduceGraceTimeMessage {\n\ttype: 'VSCODE_EXTHOST_IPC_REDUCE_GRACE_TIME';\n}\n\nexport const enum MessageType {\n\tInitialized,\n\tReady,\n\tTerminate\n}\n\nexport function createMessageOfType(type: MessageType): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\n\tswitch (type) {\n\t\tcase MessageType.Initialized: result.writeUInt8(1, 0); break;\n\t\tcase MessageType.Ready: result.writeUInt8(2, 0); break;\n\t\tcase MessageType.Terminate: result.writeUInt8(3, 0); break;\n\t}\n\n\treturn result;\n}\n\nexport function isMessageOfType(message: VSBuffer, type: MessageType): boolean {\n\tif (message.byteLength !== 1) {\n\t\treturn false;\n\t}\n\n\tswitch (message.readUInt8(0)) {\n\t\tcase 1: return type === MessageType.Initialized;\n\t\tcase 2: return type === MessageType.Ready;\n\t\tcase 3: return type === MessageType.Terminate;\n\t\tdefault: return false;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtensionPoint } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { ExtensionIdentifier, IExtension, ExtensionType, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { ExtensionActivationReason } from 'vs/workbench/api/common/extHostExtensionActivator';\n\nexport const nullExtensionDescription = Object.freeze(<IExtensionDescription>{\n\tidentifier: new ExtensionIdentifier('nullExtensionDescription'),\n\tname: 'Null Extension Description',\n\tversion: '0.0.0',\n\tpublisher: 'vscode',\n\tenableProposedApi: false,\n\tengines: { vscode: '' },\n\textensionLocation: URI.parse('void:location'),\n\tisBuiltin: false,\n});\n\nexport const IExtensionService = createDecorator<IExtensionService>('extensionService');\n\nexport interface IMessage {\n\ttype: Severity;\n\tmessage: string;\n\textensionId: ExtensionIdentifier;\n\textensionPointId: string;\n}\n\nexport interface IExtensionsStatus {\n\tmessages: IMessage[];\n\tactivationTimes: ActivationTimes | undefined;\n\truntimeErrors: Error[];\n}\n\nexport type ExtensionActivationError = string | MissingDependencyError;\nexport class MissingDependencyError {\n\tconstructor(readonly dependency: string) { }\n}\n\n/**\n * e.g.\n * ```\n * {\n *    startTime: 1511954813493000,\n *    endTime: 1511954835590000,\n *    deltas: [ 100, 1500, 123456, 1500, 100000 ],\n *    ids: [ 'idle', 'self', 'extension1', 'self', 'idle' ]\n * }\n * ```\n */\nexport interface IExtensionHostProfile {\n\t/**\n\t * Profiling start timestamp in microseconds.\n\t */\n\tstartTime: number;\n\t/**\n\t * Profiling end timestamp in microseconds.\n\t */\n\tendTime: number;\n\t/**\n\t * Duration of segment in microseconds.\n\t */\n\tdeltas: number[];\n\t/**\n\t * Segment identifier: extension id or one of the four known strings.\n\t */\n\tids: ProfileSegmentId[];\n\n\t/**\n\t * Get the information as a .cpuprofile.\n\t */\n\tdata: object;\n\n\t/**\n\t * Get the aggregated time per segmentId\n\t */\n\tgetAggregatedTimes(): Map<ProfileSegmentId, number>;\n}\n\nexport interface IExtensionHostStarter {\n\treadonly onExit: Event<[number, string | null]>;\n\n\tstart(): Promise<IMessagePassingProtocol> | null;\n\tgetInspectPort(): number | undefined;\n\tenableInspectPort(): Promise<boolean>;\n\tdispose(): void;\n}\n\n\n/**\n * Extension id or one of the four known program states.\n */\nexport type ProfileSegmentId = string | 'idle' | 'program' | 'gc' | 'self';\n\nexport class ActivationTimes {\n\tconstructor(\n\t\tpublic readonly codeLoadingTime: number,\n\t\tpublic readonly activateCallTime: number,\n\t\tpublic readonly activateResolvedTime: number,\n\t\tpublic readonly activationReason: ExtensionActivationReason\n\t) {\n\t}\n}\n\nexport class ExtensionPointContribution<T> {\n\treadonly description: IExtensionDescription;\n\treadonly value: T;\n\n\tconstructor(description: IExtensionDescription, value: T) {\n\t\tthis.description = description;\n\t\tthis.value = value;\n\t}\n}\n\nexport const ExtensionHostLogFileName = 'exthost';\n\nexport interface IWillActivateEvent {\n\treadonly event: string;\n\treadonly activation: Promise<void>;\n}\n\nexport interface IResponsiveStateChangeEvent {\n\tisResponsive: boolean;\n}\n\nexport interface IExtensionService {\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event emitted when extensions are registered after their extension points got handled.\n\t *\n\t * This event will also fire on startup to signal the installed extensions.\n\t *\n\t * @returns the extensions that got registered\n\t */\n\tonDidRegisterExtensions: Event<void>;\n\n\t/**\n\t * @event\n\t * Fired when extensions status changes.\n\t * The event contains the ids of the extensions that have changed.\n\t */\n\tonDidChangeExtensionsStatus: Event<ExtensionIdentifier[]>;\n\n\t/**\n\t * Fired when the available extensions change (i.e. when extensions are added or removed).\n\t */\n\tonDidChangeExtensions: Event<void>;\n\n\t/**\n\t * An event that is fired when activation happens.\n\t */\n\tonWillActivateByEvent: Event<IWillActivateEvent>;\n\n\t/**\n\t * An event that is fired when an extension host changes its\n\t * responsive-state.\n\t */\n\tonDidChangeResponsiveChange: Event<IResponsiveStateChangeEvent>;\n\n\t/**\n\t * Send an activation event and activate interested extensions.\n\t */\n\tactivateByEvent(activationEvent: string): Promise<void>;\n\n\t/**\n\t * An promise that resolves when the installed extensions are registered after\n\t * their extension points got handled.\n\t */\n\twhenInstalledExtensionsRegistered(): Promise<boolean>;\n\n\t/**\n\t * Return all registered extensions\n\t */\n\tgetExtensions(): Promise<IExtensionDescription[]>;\n\n\t/**\n\t * Return a specific extension\n\t * @param id An extension id\n\t */\n\tgetExtension(id: string): Promise<IExtensionDescription | undefined>;\n\n\t/**\n\t * Returns `true` if the given extension can be added. Otherwise `false`.\n\t * @param extension An extension\n\t */\n\tcanAddExtension(extension: IExtensionDescription): boolean;\n\n\t/**\n\t * Returns `true` if the given extension can be removed. Otherwise `false`.\n\t * @param extension An extension\n\t */\n\tcanRemoveExtension(extension: IExtensionDescription): boolean;\n\n\t/**\n\t * Read all contributions to an extension point.\n\t */\n\treadExtensionPointContributions<T>(extPoint: IExtensionPoint<T>): Promise<ExtensionPointContribution<T>[]>;\n\n\t/**\n\t * Get information about extensions status.\n\t */\n\tgetExtensionsStatus(): { [id: string]: IExtensionsStatus };\n\n\t/**\n\t * Return the inspect port or `0`, the latter means inspection\n\t * is not possible.\n\t */\n\tgetInspectPort(tryEnableInspector: boolean): Promise<number>;\n\n\t/**\n\t * Restarts the extension host.\n\t */\n\trestartExtensionHost(): void;\n\n\t/**\n\t * Modify the environment of the remote extension host\n\t * @param env New properties for the remote extension host\n\t */\n\tsetRemoteEnvironment(env: { [key: string]: string | null }): Promise<void>;\n\n\t_logOrShowMessage(severity: Severity, msg: string): void;\n\t_activateById(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void>;\n\t_onWillActivateExtension(extensionId: ExtensionIdentifier): void;\n\t_onDidActivateExtension(extensionId: ExtensionIdentifier, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number, activationReason: ExtensionActivationReason): void;\n\t_onExtensionRuntimeError(extensionId: ExtensionIdentifier, err: Error): void;\n\t_onExtensionHostExit(code: number): void;\n}\n\nexport interface ProfileSession {\n\tstop(): Promise<IExtensionHostProfile>;\n}\n\nexport function checkProposedApiEnabled(extension: IExtensionDescription): void {\n\tif (!extension.enableProposedApi) {\n\t\tthrowProposedApiError(extension);\n\t}\n}\n\nexport function throwProposedApiError(extension: IExtensionDescription): never {\n\tthrow new Error(`[${extension.identifier.value}]: Proposed API is only available when running out of dev or with the following command line switch: --enable-proposed-api ${extension.identifier.value}`);\n}\n\nexport function toExtension(extensionDescription: IExtensionDescription): IExtension {\n\treturn {\n\t\ttype: extensionDescription.isBuiltin ? ExtensionType.System : ExtensionType.User,\n\t\tidentifier: { id: getGalleryExtensionId(extensionDescription.publisher, extensionDescription.name), uuid: extensionDescription.uuid },\n\t\tmanifest: extensionDescription,\n\t\tlocation: extensionDescription.extensionLocation,\n\t};\n}\n\n\nexport class NullExtensionService implements IExtensionService {\n\t_serviceBrand: undefined;\n\tonDidRegisterExtensions: Event<void> = Event.None;\n\tonDidChangeExtensionsStatus: Event<ExtensionIdentifier[]> = Event.None;\n\tonDidChangeExtensions: Event<void> = Event.None;\n\tonWillActivateByEvent: Event<IWillActivateEvent> = Event.None;\n\tonDidChangeResponsiveChange: Event<IResponsiveStateChangeEvent> = Event.None;\n\tactivateByEvent(_activationEvent: string): Promise<void> { return Promise.resolve(undefined); }\n\twhenInstalledExtensionsRegistered(): Promise<boolean> { return Promise.resolve(true); }\n\tgetExtensions(): Promise<IExtensionDescription[]> { return Promise.resolve([]); }\n\tgetExtension() { return Promise.resolve(undefined); }\n\treadExtensionPointContributions<T>(_extPoint: IExtensionPoint<T>): Promise<ExtensionPointContribution<T>[]> { return Promise.resolve(Object.create(null)); }\n\tgetExtensionsStatus(): { [id: string]: IExtensionsStatus; } { return Object.create(null); }\n\tgetInspectPort(_tryEnableInspector: boolean): Promise<number> { return Promise.resolve(0); }\n\trestartExtensionHost(): void { }\n\tasync setRemoteEnvironment(_env: { [key: string]: string | null }): Promise<void> { }\n\tcanAddExtension(): boolean { return false; }\n\tcanRemoveExtension(): boolean { return false; }\n\t_logOrShowMessage(_severity: Severity, _msg: string): void { }\n\t_activateById(_extensionId: ExtensionIdentifier, _reason: ExtensionActivationReason): Promise<void> { return Promise.resolve(); }\n\t_onWillActivateExtension(_extensionId: ExtensionIdentifier): void { }\n\t_onDidActivateExtension(_extensionId: ExtensionIdentifier, _codeLoadingTime: number, _activateCallTime: number, _activateResolvedTime: number, _activationReason: ExtensionActivationReason): void { }\n\t_onExtensionRuntimeError(_extensionId: ExtensionIdentifier, _err: Error): void { }\n\t_onExtensionHostExit(code: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport type * as vscode from 'vscode';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionActivationError, MissingDependencyError } from 'vs/workbench/services/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nconst NO_OP_VOID_PROMISE = Promise.resolve<void>(undefined);\n\n/**\n * Represents the source code (module) of an extension.\n */\nexport interface IExtensionModule {\n\tactivate?(ctx: vscode.ExtensionContext): Promise<IExtensionAPI>;\n\tdeactivate?(): void;\n}\n\n/**\n * Represents the API of an extension (return value of `activate`).\n */\nexport interface IExtensionAPI {\n\t// _extensionAPIBrand: any;\n}\n\nexport type ExtensionActivationTimesFragment = {\n\tstartup?: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcodeLoadingTime?: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tactivateCallTime?: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tactivateResolvedTime?: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\n\nexport class ExtensionActivationTimes {\n\n\tpublic static readonly NONE = new ExtensionActivationTimes(false, -1, -1, -1);\n\n\tpublic readonly startup: boolean;\n\tpublic readonly codeLoadingTime: number;\n\tpublic readonly activateCallTime: number;\n\tpublic readonly activateResolvedTime: number;\n\n\tconstructor(startup: boolean, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number) {\n\t\tthis.startup = startup;\n\t\tthis.codeLoadingTime = codeLoadingTime;\n\t\tthis.activateCallTime = activateCallTime;\n\t\tthis.activateResolvedTime = activateResolvedTime;\n\t}\n}\n\nexport class ExtensionActivationTimesBuilder {\n\n\tprivate readonly _startup: boolean;\n\tprivate _codeLoadingStart: number;\n\tprivate _codeLoadingStop: number;\n\tprivate _activateCallStart: number;\n\tprivate _activateCallStop: number;\n\tprivate _activateResolveStart: number;\n\tprivate _activateResolveStop: number;\n\n\tconstructor(startup: boolean) {\n\t\tthis._startup = startup;\n\t\tthis._codeLoadingStart = -1;\n\t\tthis._codeLoadingStop = -1;\n\t\tthis._activateCallStart = -1;\n\t\tthis._activateCallStop = -1;\n\t\tthis._activateResolveStart = -1;\n\t\tthis._activateResolveStop = -1;\n\t}\n\n\tprivate _delta(start: number, stop: number): number {\n\t\tif (start === -1 || stop === -1) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn stop - start;\n\t}\n\n\tpublic build(): ExtensionActivationTimes {\n\t\treturn new ExtensionActivationTimes(\n\t\t\tthis._startup,\n\t\t\tthis._delta(this._codeLoadingStart, this._codeLoadingStop),\n\t\t\tthis._delta(this._activateCallStart, this._activateCallStop),\n\t\t\tthis._delta(this._activateResolveStart, this._activateResolveStop)\n\t\t);\n\t}\n\n\tpublic codeLoadingStart(): void {\n\t\tthis._codeLoadingStart = Date.now();\n\t}\n\n\tpublic codeLoadingStop(): void {\n\t\tthis._codeLoadingStop = Date.now();\n\t}\n\n\tpublic activateCallStart(): void {\n\t\tthis._activateCallStart = Date.now();\n\t}\n\n\tpublic activateCallStop(): void {\n\t\tthis._activateCallStop = Date.now();\n\t}\n\n\tpublic activateResolveStart(): void {\n\t\tthis._activateResolveStart = Date.now();\n\t}\n\n\tpublic activateResolveStop(): void {\n\t\tthis._activateResolveStop = Date.now();\n\t}\n}\n\nexport class ActivatedExtension {\n\n\tpublic readonly activationFailed: boolean;\n\tpublic readonly activationFailedError: Error | null;\n\tpublic readonly activationTimes: ExtensionActivationTimes;\n\tpublic readonly module: IExtensionModule;\n\tpublic readonly exports: IExtensionAPI | undefined;\n\tpublic readonly subscriptions: IDisposable[];\n\n\tconstructor(\n\t\tactivationFailed: boolean,\n\t\tactivationFailedError: Error | null,\n\t\tactivationTimes: ExtensionActivationTimes,\n\t\tmodule: IExtensionModule,\n\t\texports: IExtensionAPI | undefined,\n\t\tsubscriptions: IDisposable[]\n\t) {\n\t\tthis.activationFailed = activationFailed;\n\t\tthis.activationFailedError = activationFailedError;\n\t\tthis.activationTimes = activationTimes;\n\t\tthis.module = module;\n\t\tthis.exports = exports;\n\t\tthis.subscriptions = subscriptions;\n\t}\n}\n\nexport class EmptyExtension extends ActivatedExtension {\n\tconstructor(activationTimes: ExtensionActivationTimes) {\n\t\tsuper(false, null, activationTimes, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport class HostExtension extends ActivatedExtension {\n\tconstructor() {\n\t\tsuper(false, null, ExtensionActivationTimes.NONE, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport class FailedExtension extends ActivatedExtension {\n\tconstructor(activationError: Error) {\n\t\tsuper(true, activationError, ExtensionActivationTimes.NONE, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport interface IExtensionsActivatorHost {\n\tonExtensionActivationError(extensionId: ExtensionIdentifier, error: ExtensionActivationError): void;\n\tactualActivateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<ActivatedExtension>;\n}\n\nexport interface ExtensionActivationReason {\n\treadonly startup: boolean;\n\treadonly extensionId: ExtensionIdentifier;\n\treadonly activationEvent: string;\n}\n\ntype ActivationIdAndReason = { id: ExtensionIdentifier, reason: ExtensionActivationReason };\n\nexport class ExtensionsActivator {\n\n\tprivate readonly _registry: ExtensionDescriptionRegistry;\n\tprivate readonly _resolvedExtensionsSet: Set<string>;\n\tprivate readonly _hostExtensionsMap: Map<string, ExtensionIdentifier>;\n\tprivate readonly _host: IExtensionsActivatorHost;\n\tprivate readonly _activatingExtensions: Map<string, Promise<void>>;\n\tprivate readonly _activatedExtensions: Map<string, ActivatedExtension>;\n\t/**\n\t * A map of already activated events to speed things up if the same activation event is triggered multiple times.\n\t */\n\tprivate readonly _alreadyActivatedEvents: { [activationEvent: string]: boolean; };\n\n\tconstructor(\n\t\tregistry: ExtensionDescriptionRegistry,\n\t\tresolvedExtensions: ExtensionIdentifier[],\n\t\thostExtensions: ExtensionIdentifier[],\n\t\thost: IExtensionsActivatorHost,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._registry = registry;\n\t\tthis._resolvedExtensionsSet = new Set<string>();\n\t\tresolvedExtensions.forEach((extensionId) => this._resolvedExtensionsSet.add(ExtensionIdentifier.toKey(extensionId)));\n\t\tthis._hostExtensionsMap = new Map<string, ExtensionIdentifier>();\n\t\thostExtensions.forEach((extensionId) => this._hostExtensionsMap.set(ExtensionIdentifier.toKey(extensionId), extensionId));\n\t\tthis._host = host;\n\t\tthis._activatingExtensions = new Map<string, Promise<void>>();\n\t\tthis._activatedExtensions = new Map<string, ActivatedExtension>();\n\t\tthis._alreadyActivatedEvents = Object.create(null);\n\t}\n\n\tpublic isActivated(extensionId: ExtensionIdentifier): boolean {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\treturn this._activatedExtensions.has(extensionKey);\n\t}\n\n\tpublic getActivatedExtension(extensionId: ExtensionIdentifier): ActivatedExtension {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\tconst activatedExtension = this._activatedExtensions.get(extensionKey);\n\t\tif (!activatedExtension) {\n\t\t\tthrow new Error('Extension `' + extensionId.value + '` is not known or not activated');\n\t\t}\n\t\treturn activatedExtension;\n\t}\n\n\tpublic activateByEvent(activationEvent: string, startup: boolean): Promise<void> {\n\t\tif (this._alreadyActivatedEvents[activationEvent]) {\n\t\t\treturn NO_OP_VOID_PROMISE;\n\t\t}\n\t\tconst activateExtensions = this._registry.getExtensionDescriptionsForActivationEvent(activationEvent);\n\t\treturn this._activateExtensions(activateExtensions.map(e => ({\n\t\t\tid: e.identifier,\n\t\t\treason: { startup, extensionId: e.identifier, activationEvent }\n\t\t}))).then(() => {\n\t\t\tthis._alreadyActivatedEvents[activationEvent] = true;\n\t\t});\n\t}\n\n\tpublic activateById(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\tconst desc = this._registry.getExtensionDescription(extensionId);\n\t\tif (!desc) {\n\t\t\tthrow new Error('Extension `' + extensionId + '` is not known');\n\t\t}\n\n\t\treturn this._activateExtensions([{\n\t\t\tid: desc.identifier,\n\t\t\treason\n\t\t}]);\n\t}\n\n\t/**\n\t * Handle semantics related to dependencies for `currentExtension`.\n\t * semantics: `redExtensions` must wait for `greenExtensions`.\n\t */\n\tprivate _handleActivateRequest(currentActivation: ActivationIdAndReason, greenExtensions: { [id: string]: ActivationIdAndReason; }, redExtensions: ActivationIdAndReason[]): void {\n\t\tif (this._hostExtensionsMap.has(ExtensionIdentifier.toKey(currentActivation.id))) {\n\t\t\tgreenExtensions[ExtensionIdentifier.toKey(currentActivation.id)] = currentActivation;\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentExtension = this._registry.getExtensionDescription(currentActivation.id);\n\t\tif (!currentExtension) {\n\t\t\t// Error condition 0: unknown extension\n\t\t\tthis._host.onExtensionActivationError(currentActivation.id, new MissingDependencyError(currentActivation.id.value));\n\t\t\tconst error = new Error(`Unknown dependency '${currentActivation.id.value}'`);\n\t\t\tthis._activatedExtensions.set(ExtensionIdentifier.toKey(currentActivation.id), new FailedExtension(error));\n\t\t\treturn;\n\t\t}\n\n\t\tconst depIds = (typeof currentExtension.extensionDependencies === 'undefined' ? [] : currentExtension.extensionDependencies);\n\t\tlet currentExtensionGetsGreenLight = true;\n\n\t\tfor (let j = 0, lenJ = depIds.length; j < lenJ; j++) {\n\t\t\tconst depId = depIds[j];\n\n\t\t\tif (this._resolvedExtensionsSet.has(ExtensionIdentifier.toKey(depId))) {\n\t\t\t\t// This dependency is already resolved\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst dep = this._activatedExtensions.get(ExtensionIdentifier.toKey(depId));\n\t\t\tif (dep && !dep.activationFailed) {\n\t\t\t\t// the dependency is already activated OK\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (dep && dep.activationFailed) {\n\t\t\t\t// Error condition 2: a dependency has already failed activation\n\t\t\t\tthis._host.onExtensionActivationError(currentExtension.identifier, nls.localize('failedDep1', \"Cannot activate extension '{0}' because it depends on extension '{1}', which failed to activate.\", currentExtension.displayName || currentExtension.identifier.value, depId));\n\t\t\t\tconst error = new Error(`Dependency ${depId} failed to activate`);\n\t\t\t\t(<any>error).detail = dep.activationFailedError;\n\t\t\t\tthis._activatedExtensions.set(ExtensionIdentifier.toKey(currentExtension.identifier), new FailedExtension(error));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._hostExtensionsMap.has(ExtensionIdentifier.toKey(depId))) {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentExtensionGetsGreenLight = false;\n\t\t\t\tgreenExtensions[ExtensionIdentifier.toKey(depId)] = {\n\t\t\t\t\tid: this._hostExtensionsMap.get(ExtensionIdentifier.toKey(depId))!,\n\t\t\t\t\treason: currentActivation.reason\n\t\t\t\t};\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst depDesc = this._registry.getExtensionDescription(depId);\n\t\t\tif (depDesc) {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentExtensionGetsGreenLight = false;\n\t\t\t\tgreenExtensions[ExtensionIdentifier.toKey(depId)] = {\n\t\t\t\t\tid: depDesc.identifier,\n\t\t\t\t\treason: currentActivation.reason\n\t\t\t\t};\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Error condition 1: unknown dependency\n\t\t\tthis._host.onExtensionActivationError(currentExtension.identifier, new MissingDependencyError(depId));\n\t\t\tconst error = new Error(`Unknown dependency '${depId}'`);\n\t\t\tthis._activatedExtensions.set(ExtensionIdentifier.toKey(currentExtension.identifier), new FailedExtension(error));\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentExtensionGetsGreenLight) {\n\t\t\tgreenExtensions[ExtensionIdentifier.toKey(currentExtension.identifier)] = currentActivation;\n\t\t} else {\n\t\t\tredExtensions.push(currentActivation);\n\t\t}\n\t}\n\n\tprivate _activateExtensions(extensions: ActivationIdAndReason[]): Promise<void> {\n\t\tif (extensions.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\textensions = extensions.filter((p) => !this._activatedExtensions.has(ExtensionIdentifier.toKey(p.id)));\n\t\tif (extensions.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst greenMap: { [id: string]: ActivationIdAndReason; } = Object.create(null),\n\t\t\tred: ActivationIdAndReason[] = [];\n\n\t\tfor (let i = 0, len = extensions.length; i < len; i++) {\n\t\t\tthis._handleActivateRequest(extensions[i], greenMap, red);\n\t\t}\n\n\t\t// Make sure no red is also green\n\t\tfor (let i = 0, len = red.length; i < len; i++) {\n\t\t\tconst redExtensionKey = ExtensionIdentifier.toKey(red[i].id);\n\t\t\tif (greenMap[redExtensionKey]) {\n\t\t\t\tdelete greenMap[redExtensionKey];\n\t\t\t}\n\t\t}\n\n\t\tconst green = Object.keys(greenMap).map(id => greenMap[id]);\n\n\t\tif (red.length === 0) {\n\t\t\t// Finally reached only leafs!\n\t\t\treturn Promise.all(green.map((p) => this._activateExtension(p.id, p.reason))).then(_ => undefined);\n\t\t}\n\n\t\treturn this._activateExtensions(green).then(_ => {\n\t\t\treturn this._activateExtensions(red);\n\t\t});\n\t}\n\n\tprivate _activateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\tif (this._activatedExtensions.has(extensionKey)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst currentlyActivatingExtension = this._activatingExtensions.get(extensionKey);\n\t\tif (currentlyActivatingExtension) {\n\t\t\treturn currentlyActivatingExtension;\n\t\t}\n\n\t\tconst newlyActivatingExtension = this._host.actualActivateExtension(extensionId, reason).then(undefined, (err) => {\n\t\t\tthis._host.onExtensionActivationError(extensionId, nls.localize('activationError', \"Activating extension '{0}' failed: {1}.\", extensionId.value, err.message));\n\t\t\tthis._logService.error(`Activating extension ${extensionId.value} failed due to an error:`);\n\t\t\tthis._logService.error(err);\n\t\t\t// Treat the extension as being empty\n\t\t\treturn new FailedExtension(err);\n\t\t}).then((x: ActivatedExtension) => {\n\t\t\tthis._activatedExtensions.set(extensionKey, x);\n\t\t\tthis._activatingExtensions.delete(extensionKey);\n\t\t});\n\n\t\tthis._activatingExtensions.set(extensionKey, newlyActivatingExtension);\n\t\treturn newlyActivatingExtension;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport type * as vscode from 'vscode';\nimport { basename } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { ExtHostTreeViewsShape, MainThreadTreeViewsShape } from './extHost.protocol';\nimport { ITreeItem, TreeViewItemHandleArg, ITreeItemLabel, IRevealOptions } from 'vs/workbench/common/views';\nimport { ExtHostCommands, CommandsConverter } from 'vs/workbench/api/common/extHostCommands';\nimport { asPromise } from 'vs/base/common/async';\nimport { TreeItemCollapsibleState, ThemeIcon } from 'vs/workbench/api/common/extHostTypes';\nimport { isUndefinedOrNull, isString } from 'vs/base/common/types';\nimport { equals, coalesce } from 'vs/base/common/arrays';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { checkProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\n\ntype TreeItemHandle = string;\n\nfunction toTreeItemLabel(label: any, extension: IExtensionDescription): ITreeItemLabel | undefined {\n\tif (isString(label)) {\n\t\treturn { label };\n\t}\n\n\tif (label\n\t\t&& typeof label === 'object'\n\t\t&& typeof label.label === 'string') {\n\t\tcheckProposedApiEnabled(extension);\n\t\tlet highlights: [number, number][] | undefined = undefined;\n\t\tif (Array.isArray(label.highlights)) {\n\t\t\thighlights = (<[number, number][]>label.highlights).filter((highlight => highlight.length === 2 && typeof highlight[0] === 'number' && typeof highlight[1] === 'number'));\n\t\t\thighlights = highlights.length ? highlights : undefined;\n\t\t}\n\t\treturn { label: label.label, highlights };\n\t}\n\n\treturn undefined;\n}\n\n\nexport class ExtHostTreeViews implements ExtHostTreeViewsShape {\n\n\tprivate treeViews: Map<string, ExtHostTreeView<any>> = new Map<string, ExtHostTreeView<any>>();\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadTreeViewsShape,\n\t\tprivate commands: ExtHostCommands,\n\t\tprivate logService: ILogService\n\t) {\n\n\t\tfunction isTreeViewItemHandleArg(arg: any): boolean {\n\t\t\treturn arg && arg.$treeViewId && arg.$treeItemHandle;\n\t\t}\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (isTreeViewItemHandleArg(arg)) {\n\t\t\t\t\treturn this.convertArgument(arg);\n\t\t\t\t} else if (Array.isArray(arg) && (arg.length > 0)) {\n\t\t\t\t\treturn arg.map(item => {\n\t\t\t\t\t\tif (isTreeViewItemHandleArg(item)) {\n\t\t\t\t\t\t\treturn this.convertArgument(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterTreeDataProvider<T>(id: string, treeDataProvider: vscode.TreeDataProvider<T>, extension: IExtensionDescription): vscode.Disposable {\n\t\tconst treeView = this.createTreeView(id, { treeDataProvider }, extension);\n\t\treturn { dispose: () => treeView.dispose() };\n\t}\n\n\tcreateTreeView<T>(viewId: string, options: vscode.TreeViewOptions<T>, extension: IExtensionDescription): vscode.TreeView<T> {\n\t\tif (!options || !options.treeDataProvider) {\n\t\t\tthrow new Error('Options with treeDataProvider is mandatory');\n\t\t}\n\n\t\tconst treeView = this.createExtHostTreeView(viewId, options, extension);\n\t\treturn {\n\t\t\tget onDidCollapseElement() { return treeView.onDidCollapseElement; },\n\t\t\tget onDidExpandElement() { return treeView.onDidExpandElement; },\n\t\t\tget selection() { return treeView.selectedElements; },\n\t\t\tget onDidChangeSelection() { return treeView.onDidChangeSelection; },\n\t\t\tget visible() { return treeView.visible; },\n\t\t\tget onDidChangeVisibility() { return treeView.onDidChangeVisibility; },\n\t\t\tget message() { return treeView.message; },\n\t\t\tset message(message: string) {\n\t\t\t\ttreeView.message = message;\n\t\t\t},\n\t\t\tget title() { return treeView.title; },\n\t\t\tset title(title: string) {\n\t\t\t\ttreeView.title = title;\n\t\t\t},\n\t\t\treveal: (element: T, options?: IRevealOptions): Promise<void> => {\n\t\t\t\treturn treeView.reveal(element, options);\n\t\t\t},\n\t\t\tdispose: () => {\n\t\t\t\tthis.treeViews.delete(viewId);\n\t\t\t\ttreeView.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\t$getChildren(treeViewId: string, treeItemHandle?: string): Promise<ITreeItem[]> {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\treturn Promise.reject(new Error(localize('treeView.notRegistered', 'No tree view with id \\'{0}\\' registered.', treeViewId)));\n\t\t}\n\t\treturn treeView.getChildren(treeItemHandle);\n\t}\n\n\t$setExpanded(treeViewId: string, treeItemHandle: string, expanded: boolean): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new Error(localize('treeView.notRegistered', 'No tree view with id \\'{0}\\' registered.', treeViewId));\n\t\t}\n\t\ttreeView.setExpanded(treeItemHandle, expanded);\n\t}\n\n\t$setSelection(treeViewId: string, treeItemHandles: string[]): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new Error(localize('treeView.notRegistered', 'No tree view with id \\'{0}\\' registered.', treeViewId));\n\t\t}\n\t\ttreeView.setSelection(treeItemHandles);\n\t}\n\n\t$setVisible(treeViewId: string, isVisible: boolean): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new Error(localize('treeView.notRegistered', 'No tree view with id \\'{0}\\' registered.', treeViewId));\n\t\t}\n\t\ttreeView.setVisible(isVisible);\n\t}\n\n\tprivate createExtHostTreeView<T>(id: string, options: vscode.TreeViewOptions<T>, extension: IExtensionDescription): ExtHostTreeView<T> {\n\t\tconst treeView = new ExtHostTreeView<T>(id, options, this._proxy, this.commands.converter, this.logService, extension);\n\t\tthis.treeViews.set(id, treeView);\n\t\treturn treeView;\n\t}\n\n\tprivate convertArgument(arg: TreeViewItemHandleArg): any {\n\t\tconst treeView = this.treeViews.get(arg.$treeViewId);\n\t\treturn treeView ? treeView.getExtensionElement(arg.$treeItemHandle) : null;\n\t}\n}\n\ntype Root = null | undefined | void;\ntype TreeData<T> = { message: boolean, element: T | Root | false };\n\ninterface TreeNode extends IDisposable {\n\titem: ITreeItem;\n\tparent: TreeNode | Root;\n\tchildren?: TreeNode[];\n}\n\nclass ExtHostTreeView<T> extends Disposable {\n\n\tprivate static readonly LABEL_HANDLE_PREFIX = '0';\n\tprivate static readonly ID_HANDLE_PREFIX = '1';\n\n\tprivate readonly dataProvider: vscode.TreeDataProvider<T>;\n\n\tprivate roots: TreeNode[] | null = null;\n\tprivate elements: Map<TreeItemHandle, T> = new Map<TreeItemHandle, T>();\n\tprivate nodes: Map<T, TreeNode> = new Map<T, TreeNode>();\n\n\tprivate _visible: boolean = false;\n\tget visible(): boolean { return this._visible; }\n\n\tprivate _selectedHandles: TreeItemHandle[] = [];\n\tget selectedElements(): T[] { return <T[]>this._selectedHandles.map(handle => this.getExtensionElement(handle)).filter(element => !isUndefinedOrNull(element)); }\n\n\tprivate _onDidExpandElement: Emitter<vscode.TreeViewExpansionEvent<T>> = this._register(new Emitter<vscode.TreeViewExpansionEvent<T>>());\n\treadonly onDidExpandElement: Event<vscode.TreeViewExpansionEvent<T>> = this._onDidExpandElement.event;\n\n\tprivate _onDidCollapseElement: Emitter<vscode.TreeViewExpansionEvent<T>> = this._register(new Emitter<vscode.TreeViewExpansionEvent<T>>());\n\treadonly onDidCollapseElement: Event<vscode.TreeViewExpansionEvent<T>> = this._onDidCollapseElement.event;\n\n\tprivate _onDidChangeSelection: Emitter<vscode.TreeViewSelectionChangeEvent<T>> = this._register(new Emitter<vscode.TreeViewSelectionChangeEvent<T>>());\n\treadonly onDidChangeSelection: Event<vscode.TreeViewSelectionChangeEvent<T>> = this._onDidChangeSelection.event;\n\n\tprivate _onDidChangeVisibility: Emitter<vscode.TreeViewVisibilityChangeEvent> = this._register(new Emitter<vscode.TreeViewVisibilityChangeEvent>());\n\treadonly onDidChangeVisibility: Event<vscode.TreeViewVisibilityChangeEvent> = this._onDidChangeVisibility.event;\n\n\tprivate _onDidChangeData: Emitter<TreeData<T>> = this._register(new Emitter<TreeData<T>>());\n\n\tprivate refreshPromise: Promise<void> = Promise.resolve();\n\tprivate refreshQueue: Promise<void> = Promise.resolve();\n\n\tconstructor(\n\t\tprivate viewId: string, options: vscode.TreeViewOptions<T>,\n\t\tprivate proxy: MainThreadTreeViewsShape,\n\t\tprivate commands: CommandsConverter,\n\t\tprivate logService: ILogService,\n\t\tprivate extension: IExtensionDescription\n\t) {\n\t\tsuper();\n\t\tif (extension.contributes && extension.contributes.views) {\n\t\t\tfor (const location in extension.contributes.views) {\n\t\t\t\tfor (const view of extension.contributes.views[location]) {\n\t\t\t\t\tif (view.id === viewId) {\n\t\t\t\t\t\tthis._title = view.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.dataProvider = options.treeDataProvider;\n\t\tthis.proxy.$registerTreeViewDataProvider(viewId, { showCollapseAll: !!options.showCollapseAll, canSelectMany: !!options.canSelectMany });\n\t\tif (this.dataProvider.onDidChangeTreeData) {\n\t\t\tthis._register(this.dataProvider.onDidChangeTreeData(element => this._onDidChangeData.fire({ message: false, element })));\n\t\t}\n\n\t\tlet refreshingPromise: Promise<void> | null;\n\t\tlet promiseCallback: () => void;\n\t\tthis._register(Event.debounce<TreeData<T>, { message: boolean, elements: (T | Root)[] }>(this._onDidChangeData.event, (result, current) => {\n\t\t\tif (!result) {\n\t\t\t\tresult = { message: false, elements: [] };\n\t\t\t}\n\t\t\tif (current.element !== false) {\n\t\t\t\tif (!refreshingPromise) {\n\t\t\t\t\t// New refresh has started\n\t\t\t\t\trefreshingPromise = new Promise(c => promiseCallback = c);\n\t\t\t\t\tthis.refreshPromise = this.refreshPromise.then(() => refreshingPromise!);\n\t\t\t\t}\n\t\t\t\tresult.elements.push(current.element);\n\t\t\t}\n\t\t\tif (current.message) {\n\t\t\t\tresult.message = true;\n\t\t\t}\n\t\t\treturn result;\n\t\t}, 200, true)(({ message, elements }) => {\n\t\t\tif (elements.length) {\n\t\t\t\tthis.refreshQueue = this.refreshQueue.then(() => {\n\t\t\t\t\tconst _promiseCallback = promiseCallback;\n\t\t\t\t\trefreshingPromise = null;\n\t\t\t\t\treturn this.refresh(elements).then(() => _promiseCallback());\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (message) {\n\t\t\t\tthis.proxy.$setMessage(this.viewId, this._message);\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetChildren(parentHandle: TreeItemHandle | Root): Promise<ITreeItem[]> {\n\t\tconst parentElement = parentHandle ? this.getExtensionElement(parentHandle) : undefined;\n\t\tif (parentHandle && !parentElement) {\n\t\t\tthis.logService.error(`No tree item with id \\'${parentHandle}\\' found.`);\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst childrenNodes = this.getChildrenNodes(parentHandle); // Get it from cache\n\t\treturn (childrenNodes ? Promise.resolve(childrenNodes) : this.fetchChildrenNodes(parentElement))\n\t\t\t.then(nodes => nodes.map(n => n.item));\n\t}\n\n\tgetExtensionElement(treeItemHandle: TreeItemHandle): T | undefined {\n\t\treturn this.elements.get(treeItemHandle);\n\t}\n\n\treveal(element: T, options?: IRevealOptions): Promise<void> {\n\t\toptions = options ? options : { select: true, focus: false };\n\t\tconst select = isUndefinedOrNull(options.select) ? true : options.select;\n\t\tconst focus = isUndefinedOrNull(options.focus) ? false : options.focus;\n\t\tconst expand = isUndefinedOrNull(options.expand) ? false : options.expand;\n\n\t\tif (typeof this.dataProvider.getParent !== 'function') {\n\t\t\treturn Promise.reject(new Error(`Required registered TreeDataProvider to implement 'getParent' method to access 'reveal' method`));\n\t\t}\n\t\treturn this.refreshPromise\n\t\t\t.then(() => this.resolveUnknownParentChain(element))\n\t\t\t.then(parentChain => this.resolveTreeNode(element, parentChain[parentChain.length - 1])\n\t\t\t\t.then(treeNode => this.proxy.$reveal(this.viewId, treeNode.item, parentChain.map(p => p.item), { select, focus, expand })), error => this.logService.error(error));\n\t}\n\n\tprivate _message: string = '';\n\tget message(): string {\n\t\treturn this._message;\n\t}\n\n\tset message(message: string) {\n\t\tthis._message = message;\n\t\tthis._onDidChangeData.fire({ message: true, element: false });\n\t}\n\n\tprivate _title: string = '';\n\tget title(): string {\n\t\treturn this._title;\n\t}\n\n\tset title(title: string) {\n\t\tthis._title = title;\n\t\tthis.proxy.$setTitle(this.viewId, title);\n\t}\n\n\tsetExpanded(treeItemHandle: TreeItemHandle, expanded: boolean): void {\n\t\tconst element = this.getExtensionElement(treeItemHandle);\n\t\tif (element) {\n\t\t\tif (expanded) {\n\t\t\t\tthis._onDidExpandElement.fire(Object.freeze({ element }));\n\t\t\t} else {\n\t\t\t\tthis._onDidCollapseElement.fire(Object.freeze({ element }));\n\t\t\t}\n\t\t}\n\t}\n\n\tsetSelection(treeItemHandles: TreeItemHandle[]): void {\n\t\tif (!equals(this._selectedHandles, treeItemHandles)) {\n\t\t\tthis._selectedHandles = treeItemHandles;\n\t\t\tthis._onDidChangeSelection.fire(Object.freeze({ selection: this.selectedElements }));\n\t\t}\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tif (visible !== this._visible) {\n\t\t\tthis._visible = visible;\n\t\t\tthis._onDidChangeVisibility.fire(Object.freeze({ visible: this._visible }));\n\t\t}\n\t}\n\n\tprivate resolveUnknownParentChain(element: T): Promise<TreeNode[]> {\n\t\treturn this.resolveParent(element)\n\t\t\t.then((parent) => {\n\t\t\t\tif (!parent) {\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t\treturn this.resolveUnknownParentChain(parent)\n\t\t\t\t\t.then(result => this.resolveTreeNode(parent, result[result.length - 1])\n\t\t\t\t\t\t.then(parentNode => {\n\t\t\t\t\t\t\tresult.push(parentNode);\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}));\n\t\t\t});\n\t}\n\n\tprivate resolveParent(element: T): Promise<T | Root> {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node) {\n\t\t\treturn Promise.resolve(node.parent ? this.elements.get(node.parent.item.handle) : undefined);\n\t\t}\n\t\treturn asPromise(() => this.dataProvider.getParent!(element));\n\t}\n\n\tprivate resolveTreeNode(element: T, parent?: TreeNode): Promise<TreeNode> {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node) {\n\t\t\treturn Promise.resolve(node);\n\t\t}\n\t\treturn asPromise(() => this.dataProvider.getTreeItem(element))\n\t\t\t.then(extTreeItem => this.createHandle(element, extTreeItem, parent, true))\n\t\t\t.then(handle => this.getChildren(parent ? parent.item.handle : undefined)\n\t\t\t\t.then(() => {\n\t\t\t\t\tconst cachedElement = this.getExtensionElement(handle);\n\t\t\t\t\tif (cachedElement) {\n\t\t\t\t\t\tconst node = this.nodes.get(cachedElement);\n\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\treturn Promise.resolve(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Cannot resolve tree item for element ${handle}`);\n\t\t\t\t}));\n\t}\n\n\tprivate getChildrenNodes(parentNodeOrHandle: TreeNode | TreeItemHandle | Root): TreeNode[] | null {\n\t\tif (parentNodeOrHandle) {\n\t\t\tlet parentNode: TreeNode | undefined;\n\t\t\tif (typeof parentNodeOrHandle === 'string') {\n\t\t\t\tconst parentElement = this.getExtensionElement(parentNodeOrHandle);\n\t\t\t\tparentNode = parentElement ? this.nodes.get(parentElement) : undefined;\n\t\t\t} else {\n\t\t\t\tparentNode = parentNodeOrHandle;\n\t\t\t}\n\t\t\treturn parentNode ? parentNode.children || null : null;\n\t\t}\n\t\treturn this.roots;\n\t}\n\n\tprivate fetchChildrenNodes(parentElement?: T): Promise<TreeNode[]> {\n\t\t// clear children cache\n\t\tthis.clearChildren(parentElement);\n\n\t\tconst parentNode = parentElement ? this.nodes.get(parentElement) : undefined;\n\t\treturn asPromise(() => this.dataProvider.getChildren(parentElement))\n\t\t\t.then(elements => Promise.all(\n\t\t\t\tcoalesce(elements || [])\n\t\t\t\t\t.map(element => asPromise(() => this.dataProvider.getTreeItem(element))\n\t\t\t\t\t\t.then(extTreeItem => extTreeItem ? this.createAndRegisterTreeNode(element, extTreeItem, parentNode) : null))))\n\t\t\t.then(coalesce);\n\t}\n\n\tprivate refresh(elements: (T | Root)[]): Promise<void> {\n\t\tconst hasRoot = elements.some(element => !element);\n\t\tif (hasRoot) {\n\t\t\tthis.clearAll(); // clear cache\n\t\t\treturn this.proxy.$refresh(this.viewId);\n\t\t} else {\n\t\t\tconst handlesToRefresh = this.getHandlesToRefresh(<T[]>elements);\n\t\t\tif (handlesToRefresh.length) {\n\t\t\t\treturn this.refreshHandles(handlesToRefresh);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate getHandlesToRefresh(elements: T[]): TreeItemHandle[] {\n\t\tconst elementsToUpdate = new Set<TreeItemHandle>();\n\t\tfor (const element of elements) {\n\t\t\tconst elementNode = this.nodes.get(element);\n\t\t\tif (elementNode && !elementsToUpdate.has(elementNode.item.handle)) {\n\t\t\t\t// check if an ancestor of extElement is already in the elements to update list\n\t\t\t\tlet currentNode: TreeNode | undefined = elementNode;\n\t\t\t\twhile (currentNode && currentNode.parent && !elementsToUpdate.has(currentNode.parent.item.handle)) {\n\t\t\t\t\tconst parentElement: T | undefined = this.elements.get(currentNode.parent.item.handle);\n\t\t\t\t\tcurrentNode = parentElement ? this.nodes.get(parentElement) : undefined;\n\t\t\t\t}\n\t\t\t\tif (currentNode && !currentNode.parent) {\n\t\t\t\t\telementsToUpdate.add(elementNode.item.handle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst handlesToUpdate: TreeItemHandle[] = [];\n\t\t// Take only top level elements\n\t\telementsToUpdate.forEach((handle) => {\n\t\t\tconst element = this.elements.get(handle);\n\t\t\tif (element) {\n\t\t\t\tconst node = this.nodes.get(element);\n\t\t\t\tif (node && (!node.parent || !elementsToUpdate.has(node.parent.item.handle))) {\n\t\t\t\t\thandlesToUpdate.push(handle);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn handlesToUpdate;\n\t}\n\n\tprivate refreshHandles(itemHandles: TreeItemHandle[]): Promise<void> {\n\t\tconst itemsToRefresh: { [treeItemHandle: string]: ITreeItem } = {};\n\t\treturn Promise.all(itemHandles.map(treeItemHandle =>\n\t\t\tthis.refreshNode(treeItemHandle)\n\t\t\t\t.then(node => {\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\titemsToRefresh[treeItemHandle] = node.item;\n\t\t\t\t\t}\n\t\t\t\t})))\n\t\t\t.then(() => Object.keys(itemsToRefresh).length ? this.proxy.$refresh(this.viewId, itemsToRefresh) : undefined);\n\t}\n\n\tprivate refreshNode(treeItemHandle: TreeItemHandle): Promise<TreeNode | null> {\n\t\tconst extElement = this.getExtensionElement(treeItemHandle);\n\t\tif (extElement) {\n\t\t\tconst existing = this.nodes.get(extElement);\n\t\t\tif (existing) {\n\t\t\t\tthis.clearChildren(extElement); // clear children cache\n\t\t\t\treturn asPromise(() => this.dataProvider.getTreeItem(extElement))\n\t\t\t\t\t.then(extTreeItem => {\n\t\t\t\t\t\tif (extTreeItem) {\n\t\t\t\t\t\t\tconst newNode = this.createTreeNode(extElement, extTreeItem, existing.parent);\n\t\t\t\t\t\t\tthis.updateNodeCache(extElement, newNode, existing, existing.parent);\n\t\t\t\t\t\t\texisting.dispose();\n\t\t\t\t\t\t\treturn newNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tprivate createAndRegisterTreeNode(element: T, extTreeItem: vscode.TreeItem, parentNode: TreeNode | Root): TreeNode {\n\t\tconst node = this.createTreeNode(element, extTreeItem, parentNode);\n\t\tif (extTreeItem.id && this.elements.has(node.item.handle)) {\n\t\t\tthrow new Error(localize('treeView.duplicateElement', 'Element with id {0} is already registered', extTreeItem.id));\n\t\t}\n\t\tthis.addNodeToCache(element, node);\n\t\tthis.addNodeToParentCache(node, parentNode);\n\t\treturn node;\n\t}\n\n\tprivate createTreeNode(element: T, extensionTreeItem: vscode.TreeItem, parent: TreeNode | Root): TreeNode {\n\t\tconst disposable = new DisposableStore();\n\t\tconst handle = this.createHandle(element, extensionTreeItem, parent);\n\t\tconst icon = this.getLightIconPath(extensionTreeItem);\n\t\tconst item = {\n\t\t\thandle,\n\t\t\tparentHandle: parent ? parent.item.handle : undefined,\n\t\t\tlabel: toTreeItemLabel(extensionTreeItem.label, this.extension),\n\t\t\tdescription: extensionTreeItem.description,\n\t\t\tresourceUri: extensionTreeItem.resourceUri,\n\t\t\ttooltip: typeof extensionTreeItem.tooltip === 'string' ? extensionTreeItem.tooltip : undefined,\n\t\t\tcommand: extensionTreeItem.command ? this.commands.toInternal(extensionTreeItem.command, disposable) : undefined,\n\t\t\tcontextValue: extensionTreeItem.contextValue,\n\t\t\ticon,\n\t\t\ticonDark: this.getDarkIconPath(extensionTreeItem) || icon,\n\t\t\tthemeIcon: extensionTreeItem.iconPath instanceof ThemeIcon ? { id: extensionTreeItem.iconPath.id } : undefined,\n\t\t\tcollapsibleState: isUndefinedOrNull(extensionTreeItem.collapsibleState) ? TreeItemCollapsibleState.None : extensionTreeItem.collapsibleState\n\t\t};\n\n\t\treturn {\n\t\t\titem,\n\t\t\tparent,\n\t\t\tchildren: undefined,\n\t\t\tdispose(): void { disposable.dispose(); }\n\t\t};\n\t}\n\n\tprivate createHandle(element: T, { id, label, resourceUri }: vscode.TreeItem, parent: TreeNode | Root, returnFirst?: boolean): TreeItemHandle {\n\t\tif (id) {\n\t\t\treturn `${ExtHostTreeView.ID_HANDLE_PREFIX}/${id}`;\n\t\t}\n\n\t\tconst treeItemLabel = toTreeItemLabel(label, this.extension);\n\t\tconst prefix: string = parent ? parent.item.handle : ExtHostTreeView.LABEL_HANDLE_PREFIX;\n\t\tlet elementId = treeItemLabel ? treeItemLabel.label : resourceUri ? basename(resourceUri) : '';\n\t\telementId = elementId.indexOf('/') !== -1 ? elementId.replace('/', '//') : elementId;\n\t\tconst existingHandle = this.nodes.has(element) ? this.nodes.get(element)!.item.handle : undefined;\n\t\tconst childrenNodes = (this.getChildrenNodes(parent) || []);\n\n\t\tlet handle: TreeItemHandle;\n\t\tlet counter = 0;\n\t\tdo {\n\t\t\thandle = `${prefix}/${counter}:${elementId}`;\n\t\t\tif (returnFirst || !this.elements.has(handle) || existingHandle === handle) {\n\t\t\t\t// Return first if asked for or\n\t\t\t\t// Return if handle does not exist or\n\t\t\t\t// Return if handle is being reused\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcounter++;\n\t\t} while (counter <= childrenNodes.length);\n\n\t\treturn handle;\n\t}\n\n\tprivate getLightIconPath(extensionTreeItem: vscode.TreeItem): URI | undefined {\n\t\tif (extensionTreeItem.iconPath && !(extensionTreeItem.iconPath instanceof ThemeIcon)) {\n\t\t\tif (typeof extensionTreeItem.iconPath === 'string'\n\t\t\t\t|| URI.isUri(extensionTreeItem.iconPath)) {\n\t\t\t\treturn this.getIconPath(extensionTreeItem.iconPath);\n\t\t\t}\n\t\t\treturn this.getIconPath((<{ light: string | URI; dark: string | URI }>extensionTreeItem.iconPath).light);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getDarkIconPath(extensionTreeItem: vscode.TreeItem): URI | undefined {\n\t\tif (extensionTreeItem.iconPath && !(extensionTreeItem.iconPath instanceof ThemeIcon) && (<{ light: string | URI; dark: string | URI }>extensionTreeItem.iconPath).dark) {\n\t\t\treturn this.getIconPath((<{ light: string | URI; dark: string | URI }>extensionTreeItem.iconPath).dark);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getIconPath(iconPath: string | URI): URI {\n\t\tif (URI.isUri(iconPath)) {\n\t\t\treturn iconPath;\n\t\t}\n\t\treturn URI.file(iconPath);\n\t}\n\n\tprivate addNodeToCache(element: T, node: TreeNode): void {\n\t\tthis.elements.set(node.item.handle, element);\n\t\tthis.nodes.set(element, node);\n\t}\n\n\tprivate updateNodeCache(element: T, newNode: TreeNode, existing: TreeNode, parentNode: TreeNode | Root): void {\n\t\t// Remove from the cache\n\t\tthis.elements.delete(newNode.item.handle);\n\t\tthis.nodes.delete(element);\n\t\tif (newNode.item.handle !== existing.item.handle) {\n\t\t\tthis.elements.delete(existing.item.handle);\n\t\t}\n\n\t\t// Add the new node to the cache\n\t\tthis.addNodeToCache(element, newNode);\n\n\t\t// Replace the node in parent's children nodes\n\t\tconst childrenNodes = (this.getChildrenNodes(parentNode) || []);\n\t\tconst childNode = childrenNodes.filter(c => c.item.handle === existing.item.handle)[0];\n\t\tif (childNode) {\n\t\t\tchildrenNodes.splice(childrenNodes.indexOf(childNode), 1, newNode);\n\t\t}\n\t}\n\n\tprivate addNodeToParentCache(node: TreeNode, parentNode: TreeNode | Root): void {\n\t\tif (parentNode) {\n\t\t\tif (!parentNode.children) {\n\t\t\t\tparentNode.children = [];\n\t\t\t}\n\t\t\tparentNode.children.push(node);\n\t\t} else {\n\t\t\tif (!this.roots) {\n\t\t\t\tthis.roots = [];\n\t\t\t}\n\t\t\tthis.roots.push(node);\n\t\t}\n\t}\n\n\tprivate clearChildren(parentElement?: T): void {\n\t\tif (parentElement) {\n\t\t\tconst node = this.nodes.get(parentElement);\n\t\t\tif (node) {\n\t\t\t\tif (node.children) {\n\t\t\t\t\tfor (const child of node.children) {\n\t\t\t\t\t\tconst childElement = this.elements.get(child.item.handle);\n\t\t\t\t\t\tif (childElement) {\n\t\t\t\t\t\t\tthis.clear(childElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode.children = undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clearAll();\n\t\t}\n\t}\n\n\tprivate clear(element: T): void {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node) {\n\t\t\tif (node.children) {\n\t\t\t\tfor (const child of node.children) {\n\t\t\t\t\tconst childElement = this.elements.get(child.item.handle);\n\t\t\t\t\tif (childElement) {\n\t\t\t\t\t\tthis.clear(childElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.nodes.delete(element);\n\t\t\tthis.elements.delete(node.item.handle);\n\t\t\tnode.dispose();\n\t\t}\n\t}\n\n\tprivate clearAll(): void {\n\t\tthis.roots = null;\n\t\tthis.elements.clear();\n\t\tthis.nodes.forEach(node => node.dispose());\n\t\tthis.nodes.clear();\n\t}\n\n\tdispose() {\n\t\tthis.clearAll();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport class LazyPromise implements Promise<any> {\n\n\tprivate _actual: Promise<any> | null;\n\tprivate _actualOk: ((value?: any) => any) | null;\n\tprivate _actualErr: ((err?: any) => any) | null;\n\n\tprivate _hasValue: boolean;\n\tprivate _value: any;\n\n\tprivate _hasErr: boolean;\n\tprivate _err: any;\n\n\tconstructor() {\n\t\tthis._actual = null;\n\t\tthis._actualOk = null;\n\t\tthis._actualErr = null;\n\t\tthis._hasValue = false;\n\t\tthis._value = null;\n\t\tthis._hasErr = false;\n\t\tthis._err = null;\n\t}\n\n\tget [Symbol.toStringTag](): string {\n\t\treturn this.toString();\n\t}\n\n\tprivate _ensureActual(): Promise<any> {\n\t\tif (!this._actual) {\n\t\t\tthis._actual = new Promise<any>((c, e) => {\n\t\t\t\tthis._actualOk = c;\n\t\t\t\tthis._actualErr = e;\n\n\t\t\t\tif (this._hasValue) {\n\t\t\t\t\tthis._actualOk(this._value);\n\t\t\t\t}\n\n\t\t\t\tif (this._hasErr) {\n\t\t\t\t\tthis._actualErr(this._err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this._actual;\n\t}\n\n\tpublic resolveOk(value: any): void {\n\t\tif (this._hasValue || this._hasErr) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasValue = true;\n\t\tthis._value = value;\n\n\t\tif (this._actual) {\n\t\t\tthis._actualOk!(value);\n\t\t}\n\t}\n\n\tpublic resolveErr(err: any): void {\n\t\tif (this._hasValue || this._hasErr) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasErr = true;\n\t\tthis._err = err;\n\n\t\tif (this._actual) {\n\t\t\tthis._actualErr!(err);\n\t\t} else {\n\t\t\t// If nobody's listening at this point, it is safe to assume they never will,\n\t\t\t// since resolving this promise is always \"async\"\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic then(success: any, error: any): any {\n\t\treturn this._ensureActual().then(success, error);\n\t}\n\n\tpublic catch(error: any): any {\n\t\treturn this._ensureActual().then(undefined, error);\n\t}\n\n\tpublic finally(callback: () => void): any {\n\t\treturn this._ensureActual().finally(callback);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IRPCProtocol {\n\t/**\n\t * Returns a proxy to an object addressable/named in the extension host process or in the renderer process.\n\t */\n\tgetProxy<T>(identifier: ProxyIdentifier<T>): T;\n\n\t/**\n\t * Register manually created instance.\n\t */\n\tset<T, R extends T>(identifier: ProxyIdentifier<T>, instance: R): R;\n\n\t/**\n\t * Assert these identifiers are already registered via `.set`.\n\t */\n\tassertRegistered(identifiers: ProxyIdentifier<any>[]): void;\n}\n\nexport class ProxyIdentifier<T> {\n\tpublic static count = 0;\n\t_proxyIdentifierBrand: void;\n\n\tpublic readonly isMain: boolean;\n\tpublic readonly sid: string;\n\tpublic readonly nid: number;\n\n\tconstructor(isMain: boolean, sid: string) {\n\t\tthis.isMain = isMain;\n\t\tthis.sid = sid;\n\t\tthis.nid = (++ProxyIdentifier.count);\n\t}\n}\n\nconst identifiers: ProxyIdentifier<any>[] = [];\n\nexport function createMainContextProxyIdentifier<T>(identifier: string): ProxyIdentifier<T> {\n\tconst result = new ProxyIdentifier<T>(true, identifier);\n\tidentifiers[result.nid] = result;\n\treturn result;\n}\n\nexport function createExtHostContextProxyIdentifier<T>(identifier: string): ProxyIdentifier<T> {\n\tconst result = new ProxyIdentifier<T>(false, identifier);\n\tidentifiers[result.nid] = result;\n\treturn result;\n}\n\nexport function getStringIdentifierForProxy(nid: number): string {\n\treturn identifiers[nid].sid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { SerializedError } from 'vs/base/common/errors';\nimport { IRelativePattern } from 'vs/base/common/glob';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport Severity from 'vs/base/common/severity';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { RenderLineNumbersType, TextEditorCursorStyle } from 'vs/editor/common/config/editorOptions';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { EndOfLineSequence, ISingleEditOperation } from 'vs/editor/common/model';\nimport { IModelChangedEvent } from 'vs/editor/common/model/mirrorTextModel';\nimport * as modes from 'vs/editor/common/modes';\nimport { CharacterPair, CommentRule, EnterAction } from 'vs/editor/common/modes/languageConfiguration';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { ConfigurationTarget, IConfigurationData, IConfigurationChange, IConfigurationOverrides } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport * as files from 'vs/platform/files/common/files';\nimport { ResourceLabelFormatter } from 'vs/platform/label/common/label';\nimport { LogLevel } from 'vs/platform/log/common/log';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport { IProgressOptions, IProgressStep } from 'vs/platform/progress/common/progress';\nimport * as quickInput from 'vs/platform/quickinput/common/quickInput';\nimport { RemoteAuthorityResolverErrorCode, ResolverResult, TunnelDescription } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport * as statusbar from 'vs/workbench/services/statusbar/common/statusbar';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo } from 'vs/platform/telemetry/common/telemetry';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { EditorViewColumn } from 'vs/workbench/api/common/shared/editor';\nimport * as tasks from 'vs/workbench/api/common/shared/tasks';\nimport { IRevealOptions, ITreeItem } from 'vs/workbench/common/views';\nimport { IAdapterDescriptor, IConfig, IDebugSessionReplMode } from 'vs/workbench/contrib/debug/common/debug';\nimport { ITextQueryBuilderOptions } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { ITerminalDimensions, IShellLaunchConfig } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { ExtensionActivationError } from 'vs/workbench/services/extensions/common/extensions';\nimport { createExtHostContextProxyIdentifier as createExtId, createMainContextProxyIdentifier as createMainId, IRPCProtocol } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport * as search from 'vs/workbench/services/search/common/search';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport { ExtensionActivationReason } from 'vs/workbench/api/common/extHostExtensionActivator';\nimport { TunnelDto } from 'vs/workbench/api/common/extHostTunnelService';\nimport { TunnelOptions } from 'vs/platform/remote/common/tunnel';\nimport { Timeline, TimelineChangeEvent, TimelineOptions, TimelineProviderDescriptor, InternalTimelineOptions } from 'vs/workbench/contrib/timeline/common/timeline';\nimport { revive } from 'vs/base/common/marshalling';\nimport { INotebookMimeTypeSelector, IOutput, INotebookDisplayOrder, NotebookCellMetadata, NotebookDocumentMetadata, ICellEditOperation, NotebookCellsChangedEvent } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { CallHierarchyItem } from 'vs/workbench/contrib/callHierarchy/common/callHierarchy';\nimport { Dto } from 'vs/base/common/types';\nimport { ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { DebugConfigurationProviderTriggerKind } from 'vs/workbench/api/common/extHostTypes';\n\nexport interface IEnvironment {\n\tisExtensionDevelopmentDebug: boolean;\n\tappName: string;\n\tappRoot?: URI;\n\tappLanguage: string;\n\tappUriScheme: string;\n\tappSettingsHome?: URI;\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\tglobalStorageHome: URI;\n\tuserHome: URI;\n\twebviewResourceRoot: string;\n\twebviewCspSource: string;\n\tuseHostProxy?: boolean;\n}\n\nexport interface IStaticWorkspaceData {\n\tid: string;\n\tname: string;\n\tconfiguration?: UriComponents | null;\n\tisUntitled?: boolean | null;\n}\n\nexport interface IWorkspaceData extends IStaticWorkspaceData {\n\tfolders: { uri: UriComponents, name: string, index: number; }[];\n}\n\nexport interface IInitData {\n\tversion: string;\n\tcommit?: string;\n\tparentPid: number;\n\tenvironment: IEnvironment;\n\tworkspace?: IStaticWorkspaceData | null;\n\tresolvedExtensions: ExtensionIdentifier[];\n\thostExtensions: ExtensionIdentifier[];\n\textensions: IExtensionDescription[];\n\ttelemetryInfo: ITelemetryInfo;\n\tlogLevel: LogLevel;\n\tlogsLocation: URI;\n\tlogFile: URI;\n\tautoStart: boolean;\n\tremote: { isRemote: boolean; authority: string | undefined; };\n\tuiKind: UIKind;\n}\n\nexport interface IConfigurationInitData extends IConfigurationData {\n\tconfigurationScopes: [string, ConfigurationScope | undefined][];\n}\n\nexport interface IExtHostContext extends IRPCProtocol {\n\tremoteAuthority: string;\n}\n\nexport interface IMainContext extends IRPCProtocol {\n}\n\nexport enum UIKind {\n\tDesktop = 1,\n\tWeb = 2\n}\n\n// --- main thread\n\nexport interface MainThreadClipboardShape extends IDisposable {\n\t$readText(): Promise<string>;\n\t$writeText(value: string): Promise<void>;\n}\n\nexport interface MainThreadCommandsShape extends IDisposable {\n\t$registerCommand(id: string): void;\n\t$unregisterCommand(id: string): void;\n\t$executeCommand<T>(id: string, args: any[], retry: boolean): Promise<T | undefined>;\n\t$getCommands(): Promise<string[]>;\n}\n\nexport interface CommentProviderFeatures {\n\treactionGroup?: modes.CommentReaction[];\n\treactionHandler?: boolean;\n\toptions?: modes.CommentOptions;\n}\n\nexport type CommentThreadChanges = Partial<{\n\trange: IRange,\n\tlabel: string,\n\tcontextValue: string,\n\tcomments: modes.Comment[],\n\tcollapseState: modes.CommentThreadCollapsibleState;\n}>;\n\nexport interface MainThreadCommentsShape extends IDisposable {\n\t$registerCommentController(handle: number, id: string, label: string): void;\n\t$unregisterCommentController(handle: number): void;\n\t$updateCommentControllerFeatures(handle: number, features: CommentProviderFeatures): void;\n\t$createCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, range: IRange, extensionId: ExtensionIdentifier): modes.CommentThread | undefined;\n\t$updateCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, changes: CommentThreadChanges): void;\n\t$deleteCommentThread(handle: number, commentThreadHandle: number): void;\n\t$onDidCommentThreadsChange(handle: number, event: modes.CommentThreadChangedEvent): void;\n}\n\nexport interface MainThreadAuthenticationShape extends IDisposable {\n\t$registerAuthenticationProvider(id: string, displayName: string): void;\n\t$unregisterAuthenticationProvider(id: string): void;\n\t$onDidChangeSessions(providerId: string, event: modes.AuthenticationSessionsChangeEvent): void;\n\t$getSessionsPrompt(providerId: string, accountName: string, providerName: string, extensionId: string, extensionName: string): Promise<boolean>;\n\t$loginPrompt(providerName: string, extensionName: string): Promise<boolean>;\n\t$setTrustedExtension(providerId: string, accountName: string, extensionId: string, extensionName: string): Promise<void>;\n}\n\nexport interface MainThreadConfigurationShape extends IDisposable {\n\t$updateConfigurationOption(target: ConfigurationTarget | null, key: string, value: any, overrides: IConfigurationOverrides | undefined, scopeToLanguage: boolean | undefined): Promise<void>;\n\t$removeConfigurationOption(target: ConfigurationTarget | null, key: string, overrides: IConfigurationOverrides | undefined, scopeToLanguage: boolean | undefined): Promise<void>;\n}\n\nexport interface MainThreadDiagnosticsShape extends IDisposable {\n\t$changeMany(owner: string, entries: [UriComponents, IMarkerData[] | undefined][]): void;\n\t$clear(owner: string): void;\n}\n\nexport interface MainThreadDialogOpenOptions {\n\tdefaultUri?: UriComponents;\n\topenLabel?: string;\n\tcanSelectFiles?: boolean;\n\tcanSelectFolders?: boolean;\n\tcanSelectMany?: boolean;\n\tfilters?: { [name: string]: string[]; };\n\ttitle?: string;\n}\n\nexport interface MainThreadDialogSaveOptions {\n\tdefaultUri?: UriComponents;\n\tsaveLabel?: string;\n\tfilters?: { [name: string]: string[]; };\n\ttitle?: string;\n}\n\nexport interface MainThreadDiaglogsShape extends IDisposable {\n\t$showOpenDialog(options: MainThreadDialogOpenOptions): Promise<UriComponents[] | undefined>;\n\t$showSaveDialog(options: MainThreadDialogSaveOptions): Promise<UriComponents | undefined>;\n}\n\nexport interface MainThreadDecorationsShape extends IDisposable {\n\t$registerDecorationProvider(handle: number, label: string): void;\n\t$unregisterDecorationProvider(handle: number): void;\n\t$onDidChange(handle: number, resources: UriComponents[] | null): void;\n}\n\nexport interface MainThreadDocumentContentProvidersShape extends IDisposable {\n\t$registerTextContentProvider(handle: number, scheme: string): void;\n\t$unregisterTextContentProvider(handle: number): void;\n\t$onVirtualDocumentChange(uri: UriComponents, value: string): void;\n}\n\nexport interface MainThreadDocumentsShape extends IDisposable {\n\t$tryCreateDocument(options?: { language?: string; content?: string; }): Promise<UriComponents>;\n\t$tryOpenDocument(uri: UriComponents): Promise<void>;\n\t$trySaveDocument(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface ITextEditorConfigurationUpdate {\n\ttabSize?: number | 'auto';\n\tindentSize?: number | 'tabSize';\n\tinsertSpaces?: boolean | 'auto';\n\tcursorStyle?: TextEditorCursorStyle;\n\tlineNumbers?: RenderLineNumbersType;\n}\n\nexport interface IResolvedTextEditorConfiguration {\n\ttabSize: number;\n\tindentSize: number;\n\tinsertSpaces: boolean;\n\tcursorStyle: TextEditorCursorStyle;\n\tlineNumbers: RenderLineNumbersType;\n}\n\nexport enum TextEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport interface IUndoStopOptions {\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n}\n\nexport interface IApplyEditsOptions extends IUndoStopOptions {\n\tsetEndOfLine?: EndOfLineSequence;\n}\n\nexport interface ITextDocumentShowOptions {\n\tposition?: EditorViewColumn;\n\tpreserveFocus?: boolean;\n\tpinned?: boolean;\n\tselection?: IRange;\n}\n\nexport interface MainThreadTextEditorsShape extends IDisposable {\n\t$tryShowTextDocument(resource: UriComponents, options: ITextDocumentShowOptions): Promise<string | undefined>;\n\t$registerTextEditorDecorationType(key: string, options: editorCommon.IDecorationRenderOptions): void;\n\t$removeTextEditorDecorationType(key: string): void;\n\t$tryShowEditor(id: string, position: EditorViewColumn): Promise<void>;\n\t$tryHideEditor(id: string): Promise<void>;\n\t$trySetOptions(id: string, options: ITextEditorConfigurationUpdate): Promise<void>;\n\t$trySetDecorations(id: string, key: string, ranges: editorCommon.IDecorationOptions[]): Promise<void>;\n\t$trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void>;\n\t$tryRevealRange(id: string, range: IRange, revealType: TextEditorRevealType): Promise<void>;\n\t$trySetSelections(id: string, selections: ISelection[]): Promise<void>;\n\t$tryApplyEdits(id: string, modelVersionId: number, edits: ISingleEditOperation[], opts: IApplyEditsOptions): Promise<boolean>;\n\t$tryApplyWorkspaceEdit(workspaceEditDto: IWorkspaceEditDto): Promise<boolean>;\n\t$tryInsertSnippet(id: string, template: string, selections: readonly IRange[], opts: IUndoStopOptions): Promise<boolean>;\n\t$getDiffInformation(id: string): Promise<editorCommon.ILineChange[]>;\n}\n\nexport interface MainThreadTreeViewsShape extends IDisposable {\n\t$registerTreeViewDataProvider(treeViewId: string, options: { showCollapseAll: boolean, canSelectMany: boolean; }): void;\n\t$refresh(treeViewId: string, itemsToRefresh?: { [treeItemHandle: string]: ITreeItem; }): Promise<void>;\n\t$reveal(treeViewId: string, treeItem: ITreeItem, parentChain: ITreeItem[], options: IRevealOptions): Promise<void>;\n\t$setMessage(treeViewId: string, message: string): void;\n\t$setTitle(treeViewId: string, title: string): void;\n}\n\nexport interface MainThreadDownloadServiceShape extends IDisposable {\n\t$download(uri: UriComponents, to: UriComponents): Promise<void>;\n}\n\nexport interface MainThreadErrorsShape extends IDisposable {\n\t$onUnexpectedError(err: any | SerializedError): void;\n}\n\nexport interface MainThreadConsoleShape extends IDisposable {\n\t$logExtensionHostMessage(msg: IRemoteConsoleLog): void;\n}\n\nexport interface MainThreadKeytarShape extends IDisposable {\n\t$getPassword(service: string, account: string): Promise<string | null>;\n\t$setPassword(service: string, account: string, password: string): Promise<void>;\n\t$deletePassword(service: string, account: string): Promise<boolean>;\n\t$findPassword(service: string): Promise<string | null>;\n\t$findCredentials(service: string): Promise<Array<{ account: string, password: string; }>>;\n}\n\nexport interface IRegExpDto {\n\tpattern: string;\n\tflags?: string;\n}\nexport interface IIndentationRuleDto {\n\tdecreaseIndentPattern: IRegExpDto;\n\tincreaseIndentPattern: IRegExpDto;\n\tindentNextLinePattern?: IRegExpDto;\n\tunIndentedLinePattern?: IRegExpDto;\n}\nexport interface IOnEnterRuleDto {\n\tbeforeText: IRegExpDto;\n\tafterText?: IRegExpDto;\n\toneLineAboveText?: IRegExpDto;\n\taction: EnterAction;\n}\nexport interface ILanguageConfigurationDto {\n\tcomments?: CommentRule;\n\tbrackets?: CharacterPair[];\n\twordPattern?: IRegExpDto;\n\tindentationRules?: IIndentationRuleDto;\n\tonEnterRules?: IOnEnterRuleDto[];\n\t__electricCharacterSupport?: {\n\t\tbrackets?: any;\n\t\tdocComment?: {\n\t\t\tscope: string;\n\t\t\topen: string;\n\t\t\tlineStart: string;\n\t\t\tclose?: string;\n\t\t};\n\t};\n\t__characterPairSupport?: {\n\t\tautoClosingPairs: {\n\t\t\topen: string;\n\t\t\tclose: string;\n\t\t\tnotIn?: string[];\n\t\t}[];\n\t};\n}\n\nexport type GlobPattern = string | { base: string; pattern: string; };\n\nexport interface IDocumentFilterDto {\n\t$serialized: true;\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string | IRelativePattern;\n\texclusive?: boolean;\n}\n\nexport interface ISignatureHelpProviderMetadataDto {\n\treadonly triggerCharacters: readonly string[];\n\treadonly retriggerCharacters: readonly string[];\n}\n\nexport interface MainThreadLanguageFeaturesShape extends IDisposable {\n\t$unregister(handle: number): void;\n\t$registerDocumentSymbolProvider(handle: number, selector: IDocumentFilterDto[], label: string): void;\n\t$registerCodeLensSupport(handle: number, selector: IDocumentFilterDto[], eventHandle: number | undefined): void;\n\t$emitCodeLensEvent(eventHandle: number, event?: any): void;\n\t$registerDefinitionSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerDeclarationSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerImplementationSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerTypeDefinitionSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerHoverProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerEvaluatableExpressionProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerDocumentHighlightProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerOnTypeRenameProvider(handle: number, selector: IDocumentFilterDto[], stopPattern: IRegExpDto | undefined): void;\n\t$registerReferenceSupport(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerQuickFixSupport(handle: number, selector: IDocumentFilterDto[], metadata: ICodeActionProviderMetadataDto, displayName: string): void;\n\t$registerDocumentFormattingSupport(handle: number, selector: IDocumentFilterDto[], extensionId: ExtensionIdentifier, displayName: string): void;\n\t$registerRangeFormattingSupport(handle: number, selector: IDocumentFilterDto[], extensionId: ExtensionIdentifier, displayName: string): void;\n\t$registerOnTypeFormattingSupport(handle: number, selector: IDocumentFilterDto[], autoFormatTriggerCharacters: string[], extensionId: ExtensionIdentifier): void;\n\t$registerNavigateTypeSupport(handle: number): void;\n\t$registerRenameSupport(handle: number, selector: IDocumentFilterDto[], supportsResolveInitialValues: boolean): void;\n\t$registerDocumentSemanticTokensProvider(handle: number, selector: IDocumentFilterDto[], legend: modes.SemanticTokensLegend, eventHandle: number | undefined): void;\n\t$emitDocumentSemanticTokensEvent(eventHandle: number): void;\n\t$registerDocumentRangeSemanticTokensProvider(handle: number, selector: IDocumentFilterDto[], legend: modes.SemanticTokensLegend): void;\n\t$registerSuggestSupport(handle: number, selector: IDocumentFilterDto[], triggerCharacters: string[], supportsResolveDetails: boolean, extensionId: ExtensionIdentifier): void;\n\t$registerSignatureHelpProvider(handle: number, selector: IDocumentFilterDto[], metadata: ISignatureHelpProviderMetadataDto): void;\n\t$registerDocumentLinkProvider(handle: number, selector: IDocumentFilterDto[], supportsResolve: boolean): void;\n\t$registerDocumentColorProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerFoldingRangeProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerSelectionRangeProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$registerCallHierarchyProvider(handle: number, selector: IDocumentFilterDto[]): void;\n\t$setLanguageConfiguration(handle: number, languageId: string, configuration: ILanguageConfigurationDto): void;\n}\n\nexport interface MainThreadLanguagesShape extends IDisposable {\n\t$getLanguages(): Promise<string[]>;\n\t$changeLanguage(resource: UriComponents, languageId: string): Promise<void>;\n}\n\nexport interface MainThreadMessageOptions {\n\textension?: IExtensionDescription;\n\tmodal?: boolean;\n}\n\nexport interface MainThreadMessageServiceShape extends IDisposable {\n\t$showMessage(severity: Severity, message: string, options: MainThreadMessageOptions, commands: { title: string; isCloseAffordance: boolean; handle: number; }[]): Promise<number | undefined>;\n}\n\nexport interface MainThreadOutputServiceShape extends IDisposable {\n\t$register(label: string, log: boolean, file?: UriComponents): Promise<string>;\n\t$append(channelId: string, value: string): Promise<void> | undefined;\n\t$update(channelId: string): Promise<void> | undefined;\n\t$clear(channelId: string, till: number): Promise<void> | undefined;\n\t$reveal(channelId: string, preserveFocus: boolean): Promise<void> | undefined;\n\t$close(channelId: string): Promise<void> | undefined;\n\t$dispose(channelId: string): Promise<void> | undefined;\n}\n\nexport interface MainThreadProgressShape extends IDisposable {\n\n\t$startProgress(handle: number, options: IProgressOptions, extension?: IExtensionDescription): void;\n\t$progressReport(handle: number, message: IProgressStep): void;\n\t$progressEnd(handle: number): void;\n}\n\nexport interface TerminalLaunchConfig {\n\tname?: string;\n\tshellPath?: string;\n\tshellArgs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: { [key: string]: string | null; };\n\twaitOnExit?: boolean;\n\tstrictEnv?: boolean;\n\thideFromUser?: boolean;\n\tisExtensionTerminal?: boolean;\n}\n\nexport interface MainThreadTerminalServiceShape extends IDisposable {\n\t$createTerminal(config: TerminalLaunchConfig): Promise<{ id: number, name: string; }>;\n\t$dispose(terminalId: number): void;\n\t$hide(terminalId: number): void;\n\t$sendText(terminalId: number, text: string, addNewLine: boolean): void;\n\t$show(terminalId: number, preserveFocus: boolean): void;\n\t$startSendingDataEvents(): void;\n\t$stopSendingDataEvents(): void;\n\t$startHandlingLinks(): void;\n\t$stopHandlingLinks(): void;\n\t$setEnvironmentVariableCollection(extensionIdentifier: string, persistent: boolean, collection: ISerializableEnvironmentVariableCollection | undefined): void;\n\n\t// Process\n\t$sendProcessTitle(terminalId: number, title: string): void;\n\t$sendProcessData(terminalId: number, data: string): void;\n\t$sendProcessReady(terminalId: number, pid: number, cwd: string): void;\n\t$sendProcessExit(terminalId: number, exitCode: number | undefined): void;\n\t$sendProcessInitialCwd(terminalId: number, cwd: string): void;\n\t$sendProcessCwd(terminalId: number, initialCwd: string): void;\n\t$sendOverrideDimensions(terminalId: number, dimensions: ITerminalDimensions | undefined): void;\n\t$sendResolvedLaunchConfig(terminalId: number, shellLaunchConfig: IShellLaunchConfig): void;\n}\n\nexport interface TransferQuickPickItems extends quickInput.IQuickPickItem {\n\thandle: number;\n}\n\nexport interface TransferQuickInputButton {\n\thandle: number;\n\ticonPath: { dark: URI; light?: URI; } | { id: string; };\n\ttooltip?: string;\n}\n\nexport type TransferQuickInput = TransferQuickPick | TransferInputBox;\n\nexport interface BaseTransferQuickInput {\n\n\t[key: string]: any;\n\n\tid: number;\n\n\ttype?: 'quickPick' | 'inputBox';\n\n\tenabled?: boolean;\n\n\tbusy?: boolean;\n\n\tvisible?: boolean;\n}\n\nexport interface TransferQuickPick extends BaseTransferQuickInput {\n\n\ttype?: 'quickPick';\n\n\tvalue?: string;\n\n\tplaceholder?: string;\n\n\tbuttons?: TransferQuickInputButton[];\n\n\titems?: TransferQuickPickItems[];\n\n\tactiveItems?: number[];\n\n\tselectedItems?: number[];\n\n\tcanSelectMany?: boolean;\n\n\tignoreFocusOut?: boolean;\n\n\tmatchOnDescription?: boolean;\n\n\tmatchOnDetail?: boolean;\n\n\tsortByLabel?: boolean;\n}\n\nexport interface TransferInputBox extends BaseTransferQuickInput {\n\n\ttype?: 'inputBox';\n\n\tvalue?: string;\n\n\tplaceholder?: string;\n\n\tpassword?: boolean;\n\n\tbuttons?: TransferQuickInputButton[];\n\n\tprompt?: string;\n\n\tvalidationMessage?: string;\n}\n\nexport interface IInputBoxOptions {\n\tvalue?: string;\n\tvalueSelection?: [number, number];\n\tprompt?: string;\n\tplaceHolder?: string;\n\tpassword?: boolean;\n\tignoreFocusOut?: boolean;\n}\n\nexport interface MainThreadQuickOpenShape extends IDisposable {\n\t$show(instance: number, options: quickInput.IPickOptions<TransferQuickPickItems>, token: CancellationToken): Promise<number | number[] | undefined>;\n\t$setItems(instance: number, items: TransferQuickPickItems[]): Promise<void>;\n\t$setError(instance: number, error: Error): Promise<void>;\n\t$input(options: IInputBoxOptions | undefined, validateInput: boolean, token: CancellationToken): Promise<string | undefined>;\n\t$createOrUpdate(params: TransferQuickInput): Promise<void>;\n\t$dispose(id: number): Promise<void>;\n}\n\nexport interface MainThreadStatusBarShape extends IDisposable {\n\t$setEntry(id: number, statusId: string, statusName: string, text: string, tooltip: string | undefined, command: ICommandDto | undefined, color: string | ThemeColor | undefined, alignment: statusbar.StatusbarAlignment, priority: number | undefined): void;\n\t$dispose(id: number): void;\n}\n\nexport interface MainThreadStorageShape extends IDisposable {\n\t$getValue<T>(shared: boolean, key: string): Promise<T | undefined>;\n\t$setValue(shared: boolean, key: string, value: object): Promise<void>;\n}\n\nexport interface MainThreadTelemetryShape extends IDisposable {\n\t$publicLog(eventName: string, data?: any): void;\n\t$publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): void;\n}\n\nexport interface MainThreadEditorInsetsShape extends IDisposable {\n\t$createEditorInset(handle: number, id: string, uri: UriComponents, line: number, height: number, options: modes.IWebviewOptions, extensionId: ExtensionIdentifier, extensionLocation: UriComponents): Promise<void>;\n\t$disposeEditorInset(handle: number): void;\n\n\t$setHtml(handle: number, value: string): void;\n\t$setOptions(handle: number, options: modes.IWebviewOptions): void;\n\t$postMessage(handle: number, value: any): Promise<boolean>;\n}\n\nexport interface ExtHostEditorInsetsShape {\n\t$onDidDispose(handle: number): void;\n\t$onDidReceiveMessage(handle: number, message: any): void;\n}\n\nexport type WebviewPanelHandle = string;\n\nexport interface WebviewPanelShowOptions {\n\treadonly viewColumn?: EditorViewColumn;\n\treadonly preserveFocus?: boolean;\n}\n\nexport interface WebviewExtensionDescription {\n\treadonly id: ExtensionIdentifier;\n\treadonly location: UriComponents;\n}\n\nexport interface NotebookExtensionDescription {\n\treadonly id: ExtensionIdentifier;\n\treadonly location: UriComponents;\n}\n\nexport enum WebviewEditorCapabilities {\n\tEditable,\n\tSupportsHotExit,\n}\n\nexport interface CustomTextEditorCapabilities {\n\treadonly supportsMove?: boolean;\n}\n\nexport interface MainThreadWebviewsShape extends IDisposable {\n\t$createWebviewPanel(extension: WebviewExtensionDescription, handle: WebviewPanelHandle, viewType: string, title: string, showOptions: WebviewPanelShowOptions, options: modes.IWebviewPanelOptions & modes.IWebviewOptions): void;\n\t$disposeWebview(handle: WebviewPanelHandle): void;\n\t$reveal(handle: WebviewPanelHandle, showOptions: WebviewPanelShowOptions): void;\n\t$setTitle(handle: WebviewPanelHandle, value: string): void;\n\t$setIconPath(handle: WebviewPanelHandle, value: { light: UriComponents, dark: UriComponents; } | undefined): void;\n\n\t$setHtml(handle: WebviewPanelHandle, value: string): void;\n\t$setOptions(handle: WebviewPanelHandle, options: modes.IWebviewOptions): void;\n\n\t$postMessage(handle: WebviewPanelHandle, value: any): Promise<boolean>;\n\n\t$registerSerializer(viewType: string): void;\n\t$unregisterSerializer(viewType: string): void;\n\n\t$registerTextEditorProvider(extension: WebviewExtensionDescription, viewType: string, options: modes.IWebviewPanelOptions, capabilities: CustomTextEditorCapabilities): void;\n\t$registerCustomEditorProvider(extension: WebviewExtensionDescription, viewType: string, options: modes.IWebviewPanelOptions, supportsMultipleEditorsPerDocument: boolean): void;\n\t$unregisterEditorProvider(viewType: string): void;\n\n\t$onDidEdit(resource: UriComponents, viewType: string, editId: number, label: string | undefined): void;\n\t$onContentChange(resource: UriComponents, viewType: string): void;\n}\n\nexport interface WebviewPanelViewStateData {\n\t[handle: string]: {\n\t\treadonly active: boolean;\n\t\treadonly visible: boolean;\n\t\treadonly position: EditorViewColumn;\n\t};\n}\n\nexport interface ExtHostWebviewsShape {\n\t$onMessage(handle: WebviewPanelHandle, message: any): void;\n\t$onMissingCsp(handle: WebviewPanelHandle, extensionId: string): void;\n\t$onDidChangeWebviewPanelViewStates(newState: WebviewPanelViewStateData): void;\n\t$onDidDisposeWebviewPanel(handle: WebviewPanelHandle): Promise<void>;\n\n\t$deserializeWebviewPanel(newWebviewHandle: WebviewPanelHandle, viewType: string, title: string, state: any, position: EditorViewColumn, options: modes.IWebviewOptions & modes.IWebviewPanelOptions): Promise<void>;\n\n\t$resolveWebviewEditor(resource: UriComponents, newWebviewHandle: WebviewPanelHandle, viewType: string, title: string, position: EditorViewColumn, options: modes.IWebviewOptions & modes.IWebviewPanelOptions, cancellation: CancellationToken): Promise<void>;\n\t$createCustomDocument(resource: UriComponents, viewType: string, backupId: string | undefined, cancellation: CancellationToken): Promise<{ editable: boolean }>;\n\t$disposeCustomDocument(resource: UriComponents, viewType: string): Promise<void>;\n\n\t$undo(resource: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void>;\n\t$redo(resource: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void>;\n\t$revert(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void>;\n\t$disposeEdits(resourceComponents: UriComponents, viewType: string, editIds: number[]): void;\n\n\t$onSave(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void>;\n\t$onSaveAs(resource: UriComponents, viewType: string, targetResource: UriComponents, cancellation: CancellationToken): Promise<void>;\n\n\t$backup(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<string>;\n\n\t$onMoveCustomEditor(handle: WebviewPanelHandle, newResource: UriComponents, viewType: string): Promise<void>;\n}\n\nexport enum CellKind {\n\tMarkdown = 1,\n\tCode = 2\n}\n\nexport enum CellOutputKind {\n\tText = 1,\n\tError = 2,\n\tRich = 3\n}\n\nexport interface ICellDto {\n\thandle: number;\n\turi: UriComponents,\n\tsource: string[];\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutput[];\n\tmetadata?: NotebookCellMetadata;\n}\n\nexport type NotebookCellsSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tICellDto[]\n];\n\nexport type NotebookCellOutputsSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tIOutput[]\n];\n\nexport interface MainThreadNotebookShape extends IDisposable {\n\t$registerNotebookProvider(extension: NotebookExtensionDescription, viewType: string): Promise<void>;\n\t$unregisterNotebookProvider(viewType: string): Promise<void>;\n\t$registerNotebookRenderer(extension: NotebookExtensionDescription, type: string, selectors: INotebookMimeTypeSelector, handle: number, preloads: UriComponents[]): Promise<void>;\n\t$unregisterNotebookRenderer(handle: number): Promise<void>;\n\t$createNotebookDocument(handle: number, viewType: string, resource: UriComponents): Promise<void>;\n\t$tryApplyEdits(viewType: string, resource: UriComponents, modelVersionId: number, edits: ICellEditOperation[], renderers: number[]): Promise<boolean>;\n\t$updateNotebookLanguages(viewType: string, resource: UriComponents, languages: string[]): Promise<void>;\n\t$updateNotebookMetadata(viewType: string, resource: UriComponents, metadata: NotebookDocumentMetadata): Promise<void>;\n\t$updateNotebookCellMetadata(viewType: string, resource: UriComponents, handle: number, metadata: NotebookCellMetadata | undefined): Promise<void>;\n\t$spliceNotebookCellOutputs(viewType: string, resource: UriComponents, cellHandle: number, splices: NotebookCellOutputsSplice[], renderers: number[]): Promise<void>;\n\t$postMessage(handle: number, value: any): Promise<boolean>;\n}\n\nexport interface MainThreadUrlsShape extends IDisposable {\n\t$registerUriHandler(handle: number, extensionId: ExtensionIdentifier): Promise<void>;\n\t$unregisterUriHandler(handle: number): Promise<void>;\n\t$createAppUri(uri: UriComponents): Promise<UriComponents>;\n}\n\nexport interface ExtHostUrlsShape {\n\t$handleExternalUri(handle: number, uri: UriComponents): Promise<void>;\n}\n\nexport interface ITextSearchComplete {\n\tlimitHit?: boolean;\n}\n\nexport interface MainThreadWorkspaceShape extends IDisposable {\n\t$startFileSearch(includePattern: string | null, includeFolder: UriComponents | null, excludePatternOrDisregardExcludes: string | false | null, maxResults: number | null, token: CancellationToken): Promise<UriComponents[] | null>;\n\t$startTextSearch(query: search.IPatternInfo, folder: UriComponents | null, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<ITextSearchComplete | null>;\n\t$checkExists(folders: UriComponents[], includes: string[], token: CancellationToken): Promise<boolean>;\n\t$saveAll(includeUntitled?: boolean): Promise<boolean>;\n\t$updateWorkspaceFolders(extensionName: string, index: number, deleteCount: number, workspaceFoldersToAdd: { uri: UriComponents, name?: string; }[]): Promise<void>;\n\t$resolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: files.FileChangeType;\n}\n\nexport interface MainThreadFileSystemShape extends IDisposable {\n\t$registerFileSystemProvider(handle: number, scheme: string, capabilities: files.FileSystemProviderCapabilities): void;\n\t$unregisterProvider(handle: number): void;\n\t$onFileSystemChange(handle: number, resource: IFileChangeDto[]): void;\n\n\t$stat(uri: UriComponents): Promise<files.IStat>;\n\t$readdir(resource: UriComponents): Promise<[string, files.FileType][]>;\n\t$readFile(resource: UriComponents): Promise<VSBuffer>;\n\t$writeFile(resource: UriComponents, content: VSBuffer): Promise<void>;\n\t$rename(resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n\t$copy(resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n\t$mkdir(resource: UriComponents): Promise<void>;\n\t$delete(resource: UriComponents, opts: files.FileDeleteOptions): Promise<void>;\n}\n\nexport interface MainThreadLabelServiceShape extends IDisposable {\n\t$registerResourceLabelFormatter(handle: number, formatter: ResourceLabelFormatter): void;\n\t$unregisterResourceLabelFormatter(handle: number): void;\n}\n\nexport interface MainThreadNodeProxyShape extends IDisposable {\n\t$send(message: string): void;\n}\nexport interface ExtHostNodeProxyShape {\n\t$onMessage(message: string): void;\n\t$onClose(): void;\n\t$onDown(): void;\n\t$onUp(): void;\n}\n\nexport interface MainThreadSearchShape extends IDisposable {\n\t$registerFileSearchProvider(handle: number, scheme: string): void;\n\t$registerTextSearchProvider(handle: number, scheme: string): void;\n\t$unregisterProvider(handle: number): void;\n\t$handleFileMatch(handle: number, session: number, data: UriComponents[]): void;\n\t$handleTextMatch(handle: number, session: number, data: search.IRawFileMatch2[]): void;\n\t$handleTelemetry(eventName: string, data: any): void;\n}\n\nexport interface MainThreadTaskShape extends IDisposable {\n\t$createTaskId(task: tasks.TaskDTO): Promise<string>;\n\t$registerTaskProvider(handle: number, type: string): Promise<void>;\n\t$unregisterTaskProvider(handle: number): Promise<void>;\n\t$fetchTasks(filter?: tasks.TaskFilterDTO): Promise<tasks.TaskDTO[]>;\n\t$executeTask(task: tasks.TaskHandleDTO | tasks.TaskDTO): Promise<tasks.TaskExecutionDTO>;\n\t$terminateTask(id: string): Promise<void>;\n\t$registerTaskSystem(scheme: string, info: tasks.TaskSystemInfoDTO): void;\n\t$customExecutionComplete(id: string, result?: number): Promise<void>;\n}\n\nexport interface MainThreadExtensionServiceShape extends IDisposable {\n\t$activateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void>;\n\t$onWillActivateExtension(extensionId: ExtensionIdentifier): void;\n\t$onDidActivateExtension(extensionId: ExtensionIdentifier, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number, activationReason: ExtensionActivationReason): void;\n\t$onExtensionActivationError(extensionId: ExtensionIdentifier, error: ExtensionActivationError): Promise<void>;\n\t$onExtensionRuntimeError(extensionId: ExtensionIdentifier, error: SerializedError): void;\n\t$onExtensionHostExit(code: number): void;\n}\n\nexport interface SCMProviderFeatures {\n\thasQuickDiffProvider?: boolean;\n\tcount?: number;\n\tcommitTemplate?: string;\n\tacceptInputCommand?: modes.Command;\n\tstatusBarCommands?: ICommandDto[];\n}\n\nexport interface SCMGroupFeatures {\n\thideWhenEmpty?: boolean;\n}\n\nexport type SCMRawResource = [\n\tnumber /*handle*/,\n\tUriComponents /*resourceUri*/,\n\tUriComponents[] /*icons: light, dark*/,\n\tstring /*tooltip*/,\n\tboolean /*strike through*/,\n\tboolean /*faded*/\n];\n\nexport type SCMRawResourceSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tSCMRawResource[]\n];\n\nexport type SCMRawResourceSplices = [\n\tnumber, /*handle*/\n\tSCMRawResourceSplice[]\n];\n\nexport interface MainThreadSCMShape extends IDisposable {\n\t$registerSourceControl(handle: number, id: string, label: string, rootUri: UriComponents | undefined): void;\n\t$updateSourceControl(handle: number, features: SCMProviderFeatures): void;\n\t$unregisterSourceControl(handle: number): void;\n\n\t$registerGroup(sourceControlHandle: number, handle: number, id: string, label: string): void;\n\t$updateGroup(sourceControlHandle: number, handle: number, features: SCMGroupFeatures): void;\n\t$updateGroupLabel(sourceControlHandle: number, handle: number, label: string): void;\n\t$unregisterGroup(sourceControlHandle: number, handle: number): void;\n\n\t$spliceResourceStates(sourceControlHandle: number, splices: SCMRawResourceSplices[]): void;\n\n\t$setInputBoxValue(sourceControlHandle: number, value: string): void;\n\t$setInputBoxPlaceholder(sourceControlHandle: number, placeholder: string): void;\n\t$setInputBoxVisibility(sourceControlHandle: number, visible: boolean): void;\n\t$setValidationProviderIsEnabled(sourceControlHandle: number, enabled: boolean): void;\n}\n\nexport type DebugSessionUUID = string;\n\nexport interface IDebugConfiguration {\n\ttype: string;\n\tname: string;\n\trequest: string;\n\t[key: string]: any;\n}\n\nexport interface IStartDebuggingOptions {\n\tparentSessionID?: DebugSessionUUID;\n\trepl?: IDebugSessionReplMode;\n}\n\nexport interface MainThreadDebugServiceShape extends IDisposable {\n\t$registerDebugTypes(debugTypes: string[]): void;\n\t$sessionCached(sessionID: string): void;\n\t$acceptDAMessage(handle: number, message: DebugProtocol.ProtocolMessage): void;\n\t$acceptDAError(handle: number, name: string, message: string, stack: string | undefined): void;\n\t$acceptDAExit(handle: number, code: number | undefined, signal: string | undefined): void;\n\t$registerDebugConfigurationProvider(type: string, triggerKind: DebugConfigurationProviderTriggerKind, hasProvideMethod: boolean, hasResolveMethod: boolean, hasResolve2Method: boolean, hasProvideDaMethod: boolean, handle: number): Promise<void>;\n\t$registerDebugAdapterDescriptorFactory(type: string, handle: number): Promise<void>;\n\t$unregisterDebugConfigurationProvider(handle: number): void;\n\t$unregisterDebugAdapterDescriptorFactory(handle: number): void;\n\t$startDebugging(folder: UriComponents | undefined, nameOrConfig: string | IDebugConfiguration, options: IStartDebuggingOptions): Promise<boolean>;\n\t$setDebugSessionName(id: DebugSessionUUID, name: string): void;\n\t$customDebugAdapterRequest(id: DebugSessionUUID, command: string, args: any): Promise<any>;\n\t$appendDebugConsole(value: string): void;\n\t$startBreakpointEvents(): void;\n\t$registerBreakpoints(breakpoints: Array<ISourceMultiBreakpointDto | IFunctionBreakpointDto | IDataBreakpointDto>): Promise<void>;\n\t$unregisterBreakpoints(breakpointIds: string[], functionBreakpointIds: string[], dataBreakpointIds: string[]): Promise<void>;\n}\n\nexport interface IOpenUriOptions {\n\treadonly allowTunneling?: boolean;\n}\n\nexport interface MainThreadWindowShape extends IDisposable {\n\t$getWindowVisibility(): Promise<boolean>;\n\t$openUri(uri: UriComponents, uriString: string | undefined, options: IOpenUriOptions): Promise<boolean>;\n\t$asExternalUri(uri: UriComponents, options: IOpenUriOptions): Promise<UriComponents>;\n}\n\nexport interface MainThreadTunnelServiceShape extends IDisposable {\n\t$openTunnel(tunnelOptions: TunnelOptions): Promise<TunnelDto | undefined>;\n\t$closeTunnel(remote: { host: string, port: number }): Promise<void>;\n\t$getTunnels(): Promise<TunnelDescription[]>;\n\t$registerCandidateFinder(): Promise<void>;\n\t$setTunnelProvider(): Promise<void>;\n\t$setCandidateFilter(): Promise<void>;\n\t$tunnelServiceReady(): Promise<void>;\n}\n\nexport interface MainThreadTimelineShape extends IDisposable {\n\t$registerTimelineProvider(provider: TimelineProviderDescriptor): void;\n\t$unregisterTimelineProvider(source: string): void;\n\t$emitTimelineChangeEvent(e: TimelineChangeEvent | undefined): void;\n}\n\n// -- extension host\n\nexport interface ExtHostCommandsShape {\n\t$executeContributedCommand<T>(id: string, ...args: any[]): Promise<T>;\n\t$getContributedCommandHandlerDescriptions(): Promise<{ [id: string]: string | ICommandHandlerDescription; }>;\n}\n\nexport interface ExtHostConfigurationShape {\n\t$initializeConfiguration(data: IConfigurationInitData): void;\n\t$acceptConfigurationChanged(data: IConfigurationInitData, change: IConfigurationChange): void;\n}\n\nexport interface ExtHostDiagnosticsShape {\n\t$acceptMarkersChange(data: [UriComponents, IMarkerData[]][]): void;\n}\n\nexport interface ExtHostDocumentContentProvidersShape {\n\t$provideTextDocumentContent(handle: number, uri: UriComponents): Promise<string | null | undefined>;\n}\n\nexport interface IModelAddedData {\n\turi: UriComponents;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n\tmodeId: string;\n\tisDirty: boolean;\n}\nexport interface ExtHostDocumentsShape {\n\t$acceptModelModeChanged(strURL: UriComponents, oldModeId: string, newModeId: string): void;\n\t$acceptModelSaved(strURL: UriComponents): void;\n\t$acceptDirtyStateChanged(strURL: UriComponents, isDirty: boolean): void;\n\t$acceptModelChanged(strURL: UriComponents, e: IModelChangedEvent, isDirty: boolean): void;\n}\n\nexport interface ExtHostDocumentSaveParticipantShape {\n\t$participateInSave(resource: UriComponents, reason: SaveReason): Promise<boolean[]>;\n}\n\nexport interface ITextEditorAddData {\n\tid: string;\n\tdocumentUri: UriComponents;\n\toptions: IResolvedTextEditorConfiguration;\n\tselections: ISelection[];\n\tvisibleRanges: IRange[];\n\teditorPosition: EditorViewColumn | undefined;\n}\nexport interface ITextEditorPositionData {\n\t[id: string]: EditorViewColumn;\n}\nexport interface IEditorPropertiesChangeData {\n\toptions: IResolvedTextEditorConfiguration | null;\n\tselections: ISelectionChangeEvent | null;\n\tvisibleRanges: IRange[] | null;\n}\nexport interface ISelectionChangeEvent {\n\tselections: Selection[];\n\tsource?: string;\n}\n\nexport interface ExtHostEditorsShape {\n\t$acceptEditorPropertiesChanged(id: string, props: IEditorPropertiesChangeData): void;\n\t$acceptEditorPositionData(data: ITextEditorPositionData): void;\n}\n\nexport interface IDocumentsAndEditorsDelta {\n\tremovedDocuments?: UriComponents[];\n\taddedDocuments?: IModelAddedData[];\n\tremovedEditors?: string[];\n\taddedEditors?: ITextEditorAddData[];\n\tnewActiveEditor?: string | null;\n}\n\nexport interface ExtHostDocumentsAndEditorsShape {\n\t$acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void;\n}\n\nexport interface ExtHostTreeViewsShape {\n\t$getChildren(treeViewId: string, treeItemHandle?: string): Promise<ITreeItem[]>;\n\t$setExpanded(treeViewId: string, treeItemHandle: string, expanded: boolean): void;\n\t$setSelection(treeViewId: string, treeItemHandles: string[]): void;\n\t$setVisible(treeViewId: string, visible: boolean): void;\n}\n\nexport interface ExtHostWorkspaceShape {\n\t$initializeWorkspace(workspace: IWorkspaceData | null): void;\n\t$acceptWorkspaceData(workspace: IWorkspaceData | null): void;\n\t$handleTextSearchResult(result: search.IRawFileMatch2, requestId: number): void;\n}\n\nexport interface ExtHostFileSystemShape {\n\t$stat(handle: number, resource: UriComponents): Promise<files.IStat>;\n\t$readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]>;\n\t$readFile(handle: number, resource: UriComponents): Promise<VSBuffer>;\n\t$writeFile(handle: number, resource: UriComponents, content: VSBuffer, opts: files.FileWriteOptions): Promise<void>;\n\t$rename(handle: number, resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n\t$copy(handle: number, resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n\t$mkdir(handle: number, resource: UriComponents): Promise<void>;\n\t$delete(handle: number, resource: UriComponents, opts: files.FileDeleteOptions): Promise<void>;\n\t$watch(handle: number, session: number, resource: UriComponents, opts: files.IWatchOptions): void;\n\t$unwatch(handle: number, session: number): void;\n\t$open(handle: number, resource: UriComponents, opts: files.FileOpenOptions): Promise<number>;\n\t$close(handle: number, fd: number): Promise<void>;\n\t$read(handle: number, fd: number, pos: number, length: number): Promise<VSBuffer>;\n\t$write(handle: number, fd: number, pos: number, data: VSBuffer): Promise<number>;\n}\n\nexport interface ExtHostLabelServiceShape {\n\t$registerResourceLabelFormatter(formatter: ResourceLabelFormatter): IDisposable;\n}\n\nexport interface ExtHostAuthenticationShape {\n\t$getSessions(id: string): Promise<ReadonlyArray<modes.AuthenticationSession>>;\n\t$getSessionAccessToken(id: string, sessionId: string): Promise<string>;\n\t$login(id: string, scopes: string[]): Promise<modes.AuthenticationSession>;\n\t$logout(id: string, sessionId: string): Promise<void>;\n}\n\nexport interface ExtHostSearchShape {\n\t$provideFileSearchResults(handle: number, session: number, query: search.IRawQuery, token: CancellationToken): Promise<search.ISearchCompleteStats>;\n\t$provideTextSearchResults(handle: number, session: number, query: search.IRawTextQuery, token: CancellationToken): Promise<search.ISearchCompleteStats>;\n\t$clearCache(cacheKey: string): Promise<void>;\n}\n\nexport interface IResolveAuthorityErrorResult {\n\ttype: 'error';\n\terror: {\n\t\tmessage: string | undefined;\n\t\tcode: RemoteAuthorityResolverErrorCode;\n\t\tdetail: any;\n\t};\n}\n\nexport interface IResolveAuthorityOKResult {\n\ttype: 'ok';\n\tvalue: ResolverResult;\n}\n\nexport type IResolveAuthorityResult = IResolveAuthorityErrorResult | IResolveAuthorityOKResult;\n\nexport interface ExtHostExtensionServiceShape {\n\t$resolveAuthority(remoteAuthority: string, resolveAttempt: number): Promise<IResolveAuthorityResult>;\n\t$startExtensionHost(enabledExtensionIds: ExtensionIdentifier[]): Promise<void>;\n\t$activateByEvent(activationEvent: string): Promise<void>;\n\t$activate(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<boolean>;\n\t$setRemoteEnvironment(env: { [key: string]: string | null; }): Promise<void>;\n\n\t$deltaExtensions(toAdd: IExtensionDescription[], toRemove: ExtensionIdentifier[]): Promise<void>;\n\n\t$test_latency(n: number): Promise<number>;\n\t$test_up(b: VSBuffer): Promise<number>;\n\t$test_down(size: number): Promise<VSBuffer>;\n}\n\nexport interface FileSystemEvents {\n\tcreated: UriComponents[];\n\tchanged: UriComponents[];\n\tdeleted: UriComponents[];\n}\n\nexport interface ExtHostFileSystemEventServiceShape {\n\t$onFileEvent(events: FileSystemEvents): void;\n\t$onWillRunFileOperation(operation: files.FileOperation, target: UriComponents, source: UriComponents | undefined, timeout: number, token: CancellationToken): Promise<any>;\n\t$onDidRunFileOperation(operation: files.FileOperation, target: UriComponents, source: UriComponents | undefined): void;\n}\n\nexport interface ObjectIdentifier {\n\t$ident?: number;\n}\n\nexport namespace ObjectIdentifier {\n\texport const name = '$ident';\n\texport function mixin<T>(obj: T, id: number): T & ObjectIdentifier {\n\t\tObject.defineProperty(obj, name, { value: id, enumerable: true });\n\t\treturn <T & ObjectIdentifier>obj;\n\t}\n\texport function of(obj: any): number {\n\t\treturn obj[name];\n\t}\n}\n\nexport interface ExtHostHeapServiceShape {\n\t$onGarbageCollection(ids: number[]): void;\n}\nexport interface IRawColorInfo {\n\tcolor: [number, number, number, number];\n\trange: IRange;\n}\n\nexport class IdObject {\n\t_id?: number;\n\tprivate static _n = 0;\n\tstatic mixin<T extends object>(object: T): T & IdObject {\n\t\t(<any>object)._id = IdObject._n++;\n\t\treturn <any>object;\n\t}\n}\n\nexport const enum ISuggestDataDtoField {\n\tlabel = 'a',\n\tkind = 'b',\n\tdetail = 'c',\n\tdocumentation = 'd',\n\tsortText = 'e',\n\tfilterText = 'f',\n\tpreselect = 'g',\n\tinsertText = 'h',\n\tinsertTextRules = 'i',\n\trange = 'j',\n\tcommitCharacters = 'k',\n\tadditionalTextEdits = 'l',\n\tcommand = 'm',\n\tkindModifier = 'n',\n\n\t// to merge into label\n\tlabel2 = 'o',\n}\n\nexport interface ISuggestDataDto {\n\t[ISuggestDataDtoField.label]: string;\n\t[ISuggestDataDtoField.label2]?: string | modes.CompletionItemLabel;\n\t[ISuggestDataDtoField.kind]?: modes.CompletionItemKind;\n\t[ISuggestDataDtoField.detail]?: string;\n\t[ISuggestDataDtoField.documentation]?: string | IMarkdownString;\n\t[ISuggestDataDtoField.sortText]?: string;\n\t[ISuggestDataDtoField.filterText]?: string;\n\t[ISuggestDataDtoField.preselect]?: true;\n\t[ISuggestDataDtoField.insertText]?: string;\n\t[ISuggestDataDtoField.insertTextRules]?: modes.CompletionItemInsertTextRule;\n\t[ISuggestDataDtoField.range]?: IRange | { insert: IRange, replace: IRange; };\n\t[ISuggestDataDtoField.commitCharacters]?: string[];\n\t[ISuggestDataDtoField.additionalTextEdits]?: ISingleEditOperation[];\n\t[ISuggestDataDtoField.command]?: modes.Command;\n\t[ISuggestDataDtoField.kindModifier]?: modes.CompletionItemTag[];\n\t// not-standard\n\tx?: ChainedCacheId;\n}\n\nexport const enum ISuggestResultDtoField {\n\tdefaultRanges = 'a',\n\tcompletions = 'b',\n\tisIncomplete = 'c'\n}\n\nexport interface ISuggestResultDto {\n\t[ISuggestResultDtoField.defaultRanges]: { insert: IRange, replace: IRange; };\n\t[ISuggestResultDtoField.completions]: ISuggestDataDto[];\n\t[ISuggestResultDtoField.isIncomplete]: undefined | true;\n\tx?: number;\n}\n\nexport interface ISignatureHelpDto {\n\tid: CacheId;\n\tsignatures: modes.SignatureInformation[];\n\tactiveSignature: number;\n\tactiveParameter: number;\n}\n\nexport interface ISignatureHelpContextDto {\n\treadonly triggerKind: modes.SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly isRetrigger: boolean;\n\treadonly activeSignatureHelp?: ISignatureHelpDto;\n}\n\nexport interface ILocationDto {\n\turi: UriComponents;\n\trange: IRange;\n}\n\nexport interface IDefinitionLinkDto {\n\toriginSelectionRange?: IRange;\n\turi: UriComponents;\n\trange: IRange;\n\ttargetSelectionRange?: IRange;\n}\n\nexport interface IWorkspaceSymbolDto extends IdObject {\n\tname: string;\n\tcontainerName?: string;\n\tkind: modes.SymbolKind;\n\tlocation: ILocationDto;\n}\n\nexport interface IWorkspaceSymbolsDto extends IdObject {\n\tsymbols: IWorkspaceSymbolDto[];\n}\n\nexport interface IWorkspaceEditEntryMetadataDto {\n\tneedsConfirmation: boolean;\n\tlabel: string;\n\tdescription?: string;\n\ticonPath?: { id: string } | UriComponents | { light: UriComponents, dark: UriComponents };\n}\n\nexport interface IWorkspaceFileEditDto {\n\toldUri?: UriComponents;\n\tnewUri?: UriComponents;\n\toptions?: modes.WorkspaceFileEditOptions\n\tmetadata?: IWorkspaceEditEntryMetadataDto;\n}\n\nexport interface IWorkspaceTextEditDto {\n\tresource: UriComponents;\n\tedit: modes.TextEdit;\n\tmodelVersionId?: number;\n\tmetadata?: IWorkspaceEditEntryMetadataDto;\n}\n\nexport interface IWorkspaceEditDto {\n\tedits: Array<IWorkspaceFileEditDto | IWorkspaceTextEditDto>;\n\n\t// todo@joh reject should go into rename\n\trejectReason?: string;\n}\n\nexport function reviveWorkspaceEditDto(data: IWorkspaceEditDto | undefined): modes.WorkspaceEdit {\n\tif (data && data.edits) {\n\t\tfor (const edit of data.edits) {\n\t\t\tif (typeof (<IWorkspaceTextEditDto>edit).resource === 'object') {\n\t\t\t\t(<IWorkspaceTextEditDto>edit).resource = URI.revive((<IWorkspaceTextEditDto>edit).resource);\n\t\t\t} else {\n\t\t\t\t(<IWorkspaceFileEditDto>edit).newUri = URI.revive((<IWorkspaceFileEditDto>edit).newUri);\n\t\t\t\t(<IWorkspaceFileEditDto>edit).oldUri = URI.revive((<IWorkspaceFileEditDto>edit).oldUri);\n\t\t\t}\n\t\t\tif (edit.metadata && edit.metadata.iconPath) {\n\t\t\t\tedit.metadata = revive(edit.metadata);\n\t\t\t}\n\t\t}\n\t}\n\treturn <modes.WorkspaceEdit>data;\n}\n\nexport type ICommandDto = ObjectIdentifier & modes.Command;\n\nexport interface ICodeActionDto {\n\ttitle: string;\n\tedit?: IWorkspaceEditDto;\n\tdiagnostics?: IMarkerData[];\n\tcommand?: ICommandDto;\n\tkind?: string;\n\tisPreferred?: boolean;\n\tdisabled?: string;\n}\n\nexport interface ICodeActionListDto {\n\tcacheId: number;\n\tactions: ReadonlyArray<ICodeActionDto>;\n}\n\nexport interface ICodeActionProviderMetadataDto {\n\treadonly providedKinds?: readonly string[];\n\treadonly documentation?: ReadonlyArray<{ readonly kind: string, readonly command: ICommandDto }>;\n}\n\nexport type CacheId = number;\nexport type ChainedCacheId = [CacheId, CacheId];\n\nexport interface ILinksListDto {\n\tid?: CacheId;\n\tlinks: ILinkDto[];\n}\n\nexport interface ILinkDto {\n\tcacheId?: ChainedCacheId;\n\trange: IRange;\n\turl?: string | UriComponents;\n\ttooltip?: string;\n}\n\nexport interface ICodeLensListDto {\n\tcacheId?: number;\n\tlenses: ICodeLensDto[];\n}\n\nexport interface ICodeLensDto {\n\tcacheId?: ChainedCacheId;\n\trange: IRange;\n\tcommand?: ICommandDto;\n}\n\nexport type ICallHierarchyItemDto = Dto<CallHierarchyItem>;\n\nexport interface IIncomingCallDto {\n\tfrom: ICallHierarchyItemDto;\n\tfromRanges: IRange[];\n}\n\nexport interface IOutgoingCallDto {\n\tfromRanges: IRange[];\n\tto: ICallHierarchyItemDto;\n}\n\nexport interface ILanguageWordDefinitionDto {\n\tlanguageId: string;\n\tregexSource: string;\n\tregexFlags: string\n}\n\nexport interface ExtHostLanguageFeaturesShape {\n\t$provideDocumentSymbols(handle: number, resource: UriComponents, token: CancellationToken): Promise<modes.DocumentSymbol[] | undefined>;\n\t$provideCodeLenses(handle: number, resource: UriComponents, token: CancellationToken): Promise<ICodeLensListDto | undefined>;\n\t$resolveCodeLens(handle: number, symbol: ICodeLensDto, token: CancellationToken): Promise<ICodeLensDto | undefined>;\n\t$releaseCodeLenses(handle: number, id: number): void;\n\t$provideDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<IDefinitionLinkDto[]>;\n\t$provideDeclaration(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<IDefinitionLinkDto[]>;\n\t$provideImplementation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<IDefinitionLinkDto[]>;\n\t$provideTypeDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<IDefinitionLinkDto[]>;\n\t$provideHover(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.Hover | undefined>;\n\t$provideEvaluatableExpression(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.EvaluatableExpression | undefined>;\n\t$provideDocumentHighlights(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.DocumentHighlight[] | undefined>;\n\t$provideOnTypeRenameRanges(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<IRange[] | undefined>;\n\t$provideReferences(handle: number, resource: UriComponents, position: IPosition, context: modes.ReferenceContext, token: CancellationToken): Promise<ILocationDto[] | undefined>;\n\t$provideCodeActions(handle: number, resource: UriComponents, rangeOrSelection: IRange | ISelection, context: modes.CodeActionContext, token: CancellationToken): Promise<ICodeActionListDto | undefined>;\n\t$releaseCodeActions(handle: number, cacheId: number): void;\n\t$provideDocumentFormattingEdits(handle: number, resource: UriComponents, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: IRange, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideOnTypeFormattingEdits(handle: number, resource: UriComponents, position: IPosition, ch: string, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideWorkspaceSymbols(handle: number, search: string, token: CancellationToken): Promise<IWorkspaceSymbolsDto>;\n\t$resolveWorkspaceSymbol(handle: number, symbol: IWorkspaceSymbolDto, token: CancellationToken): Promise<IWorkspaceSymbolDto | undefined>;\n\t$releaseWorkspaceSymbols(handle: number, id: number): void;\n\t$provideRenameEdits(handle: number, resource: UriComponents, position: IPosition, newName: string, token: CancellationToken): Promise<IWorkspaceEditDto | undefined>;\n\t$resolveRenameLocation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.RenameLocation | undefined>;\n\t$provideDocumentSemanticTokens(handle: number, resource: UriComponents, previousResultId: number, token: CancellationToken): Promise<VSBuffer | null>;\n\t$releaseDocumentSemanticTokens(handle: number, semanticColoringResultId: number): void;\n\t$provideDocumentRangeSemanticTokens(handle: number, resource: UriComponents, range: IRange, token: CancellationToken): Promise<VSBuffer | null>;\n\t$provideCompletionItems(handle: number, resource: UriComponents, position: IPosition, context: modes.CompletionContext, token: CancellationToken): Promise<ISuggestResultDto | undefined>;\n\t$resolveCompletionItem(handle: number, id: ChainedCacheId, token: CancellationToken): Promise<ISuggestDataDto | undefined>;\n\t$releaseCompletionItems(handle: number, id: number): void;\n\t$provideSignatureHelp(handle: number, resource: UriComponents, position: IPosition, context: modes.SignatureHelpContext, token: CancellationToken): Promise<ISignatureHelpDto | undefined>;\n\t$releaseSignatureHelp(handle: number, id: number): void;\n\t$provideDocumentLinks(handle: number, resource: UriComponents, token: CancellationToken): Promise<ILinksListDto | undefined>;\n\t$resolveDocumentLink(handle: number, id: ChainedCacheId, token: CancellationToken): Promise<ILinkDto | undefined>;\n\t$releaseDocumentLinks(handle: number, id: number): void;\n\t$provideDocumentColors(handle: number, resource: UriComponents, token: CancellationToken): Promise<IRawColorInfo[]>;\n\t$provideColorPresentations(handle: number, resource: UriComponents, colorInfo: IRawColorInfo, token: CancellationToken): Promise<modes.IColorPresentation[] | undefined>;\n\t$provideFoldingRanges(handle: number, resource: UriComponents, context: modes.FoldingContext, token: CancellationToken): Promise<modes.FoldingRange[] | undefined>;\n\t$provideSelectionRanges(handle: number, resource: UriComponents, positions: IPosition[], token: CancellationToken): Promise<modes.SelectionRange[][]>;\n\t$prepareCallHierarchy(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<ICallHierarchyItemDto[] | undefined>;\n\t$provideCallHierarchyIncomingCalls(handle: number, sessionId: string, itemId: string, token: CancellationToken): Promise<IIncomingCallDto[] | undefined>;\n\t$provideCallHierarchyOutgoingCalls(handle: number, sessionId: string, itemId: string, token: CancellationToken): Promise<IOutgoingCallDto[] | undefined>;\n\t$releaseCallHierarchy(handle: number, sessionId: string): void;\n\t$setWordDefinitions(wordDefinitions: ILanguageWordDefinitionDto[]): void;\n}\n\nexport interface ExtHostQuickOpenShape {\n\t$onItemSelected(handle: number): void;\n\t$validateInput(input: string): Promise<string | null | undefined>;\n\t$onDidChangeActive(sessionId: number, handles: number[]): void;\n\t$onDidChangeSelection(sessionId: number, handles: number[]): void;\n\t$onDidAccept(sessionId: number): void;\n\t$onDidChangeValue(sessionId: number, value: string): void;\n\t$onDidTriggerButton(sessionId: number, handle: number): void;\n\t$onDidHide(sessionId: number): void;\n}\n\nexport interface IShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: { [key: string]: string | null; };\n}\n\nexport interface IShellDefinitionDto {\n\tlabel: string;\n\tpath: string;\n}\n\nexport interface IShellAndArgsDto {\n\tshell: string;\n\targs: string[] | string | undefined;\n}\n\nexport interface ITerminalDimensionsDto {\n\tcolumns: number;\n\trows: number;\n}\n\nexport interface ExtHostTerminalServiceShape {\n\t$acceptTerminalClosed(id: number, exitCode: number | undefined): void;\n\t$acceptTerminalOpened(id: number, name: string, shellLaunchConfig: IShellLaunchConfigDto): void;\n\t$acceptActiveTerminalChanged(id: number | null): void;\n\t$acceptTerminalProcessId(id: number, processId: number): void;\n\t$acceptTerminalProcessData(id: number, data: string): void;\n\t$acceptTerminalTitleChange(id: number, name: string): void;\n\t$acceptTerminalDimensions(id: number, cols: number, rows: number): void;\n\t$acceptTerminalMaximumDimensions(id: number, cols: number, rows: number): void;\n\t$spawnExtHostProcess(id: number, shellLaunchConfig: IShellLaunchConfigDto, activeWorkspaceRootUri: UriComponents | undefined, cols: number, rows: number, isWorkspaceShellAllowed: boolean): void;\n\t$startExtensionTerminal(id: number, initialDimensions: ITerminalDimensionsDto | undefined): void;\n\t$acceptProcessInput(id: number, data: string): void;\n\t$acceptProcessResize(id: number, cols: number, rows: number): void;\n\t$acceptProcessShutdown(id: number, immediate: boolean): void;\n\t$acceptProcessRequestInitialCwd(id: number): void;\n\t$acceptProcessRequestCwd(id: number): void;\n\t$acceptProcessRequestLatency(id: number): number;\n\t$acceptWorkspacePermissionsChanged(isAllowed: boolean): void;\n\t$getAvailableShells(): Promise<IShellDefinitionDto[]>;\n\t$getDefaultShellAndArgs(useAutomationShell: boolean): Promise<IShellAndArgsDto>;\n\t$handleLink(id: number, link: string): Promise<boolean>;\n\t$initEnvironmentVariableCollections(collections: [string, ISerializableEnvironmentVariableCollection][]): void;\n}\n\nexport interface ExtHostSCMShape {\n\t$provideOriginalResource(sourceControlHandle: number, uri: UriComponents, token: CancellationToken): Promise<UriComponents | null>;\n\t$onInputBoxValueChange(sourceControlHandle: number, value: string): void;\n\t$executeResourceCommand(sourceControlHandle: number, groupHandle: number, handle: number, preserveFocus: boolean): Promise<void>;\n\t$validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string, number] | undefined>;\n\t$setSelectedSourceControls(selectedSourceControlHandles: number[]): Promise<void>;\n}\n\nexport interface ExtHostTaskShape {\n\t$provideTasks(handle: number, validTypes: { [key: string]: boolean; }): Thenable<tasks.TaskSetDTO>;\n\t$resolveTask(handle: number, taskDTO: tasks.TaskDTO): Thenable<tasks.TaskDTO | undefined>;\n\t$onDidStartTask(execution: tasks.TaskExecutionDTO, terminalId: number): void;\n\t$onDidStartTaskProcess(value: tasks.TaskProcessStartedDTO): void;\n\t$onDidEndTaskProcess(value: tasks.TaskProcessEndedDTO): void;\n\t$OnDidEndTask(execution: tasks.TaskExecutionDTO): void;\n\t$resolveVariables(workspaceFolder: UriComponents, toResolve: { process?: { name: string; cwd?: string; }, variables: string[]; }): Promise<{ process?: string; variables: { [key: string]: string; }; }>;\n\t$getDefaultShellAndArgs(): Thenable<{ shell: string, args: string[] | string | undefined; }>;\n\t$jsonTasksSupported(): Thenable<boolean>;\n}\n\nexport interface IBreakpointDto {\n\ttype: string;\n\tid?: string;\n\tenabled: boolean;\n\tcondition?: string;\n\thitCondition?: string;\n\tlogMessage?: string;\n}\n\nexport interface IFunctionBreakpointDto extends IBreakpointDto {\n\ttype: 'function';\n\tfunctionName: string;\n}\n\nexport interface IDataBreakpointDto extends IBreakpointDto {\n\ttype: 'data';\n\tdataId: string;\n\tcanPersist: boolean;\n\tlabel: string;\n\taccessTypes?: DebugProtocol.DataBreakpointAccessType[];\n}\n\nexport interface ISourceBreakpointDto extends IBreakpointDto {\n\ttype: 'source';\n\turi: UriComponents;\n\tline: number;\n\tcharacter: number;\n}\n\nexport interface IBreakpointsDeltaDto {\n\tadded?: Array<ISourceBreakpointDto | IFunctionBreakpointDto | IDataBreakpointDto>;\n\tremoved?: string[];\n\tchanged?: Array<ISourceBreakpointDto | IFunctionBreakpointDto | IDataBreakpointDto>;\n}\n\nexport interface ISourceMultiBreakpointDto {\n\ttype: 'sourceMulti';\n\turi: UriComponents;\n\tlines: {\n\t\tid: string;\n\t\tenabled: boolean;\n\t\tcondition?: string;\n\t\thitCondition?: string;\n\t\tlogMessage?: string;\n\t\tline: number;\n\t\tcharacter: number;\n\t}[];\n}\n\nexport interface IDebugSessionFullDto {\n\tid: DebugSessionUUID;\n\ttype: string;\n\tname: string;\n\tfolderUri: UriComponents | undefined;\n\tconfiguration: IConfig;\n}\n\nexport type IDebugSessionDto = IDebugSessionFullDto | DebugSessionUUID;\n\nexport interface ExtHostDebugServiceShape {\n\t$substituteVariables(folder: UriComponents | undefined, config: IConfig): Promise<IConfig>;\n\t$runInTerminal(args: DebugProtocol.RunInTerminalRequestArguments): Promise<number | undefined>;\n\t$startDASession(handle: number, session: IDebugSessionDto): Promise<void>;\n\t$stopDASession(handle: number): Promise<void>;\n\t$sendDAMessage(handle: number, message: DebugProtocol.ProtocolMessage): void;\n\t$resolveDebugConfiguration(handle: number, folder: UriComponents | undefined, debugConfiguration: IConfig, token: CancellationToken): Promise<IConfig | null | undefined>;\n\t$resolveDebugConfigurationWithSubstitutedVariables(handle: number, folder: UriComponents | undefined, debugConfiguration: IConfig, token: CancellationToken): Promise<IConfig | null | undefined>;\n\t$provideDebugConfigurations(handle: number, folder: UriComponents | undefined, token: CancellationToken): Promise<IConfig[]>;\n\t$legacyDebugAdapterExecutable(handle: number, folderUri: UriComponents | undefined): Promise<IAdapterDescriptor>; // TODO@AW legacy\n\t$provideDebugAdapter(handle: number, session: IDebugSessionDto): Promise<IAdapterDescriptor>;\n\t$acceptDebugSessionStarted(session: IDebugSessionDto): void;\n\t$acceptDebugSessionTerminated(session: IDebugSessionDto): void;\n\t$acceptDebugSessionActiveChanged(session: IDebugSessionDto | undefined): void;\n\t$acceptDebugSessionCustomEvent(session: IDebugSessionDto, event: any): void;\n\t$acceptBreakpointsDelta(delta: IBreakpointsDeltaDto): void;\n\t$acceptDebugSessionNameChanged(session: IDebugSessionDto, name: string): void;\n}\n\n\nexport interface DecorationRequest {\n\treadonly id: number;\n\treadonly handle: number;\n\treadonly uri: UriComponents;\n}\n\nexport type DecorationData = [number, boolean, string, string, ThemeColor];\nexport type DecorationReply = { [id: number]: DecorationData; };\n\nexport interface ExtHostDecorationsShape {\n\t$provideDecorations(requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply>;\n}\n\nexport interface ExtHostWindowShape {\n\t$onDidChangeWindowFocus(value: boolean): void;\n}\n\nexport interface ExtHostLogServiceShape {\n\t$setLevel(level: LogLevel): void;\n}\n\nexport interface MainThreadLogShape {\n\t$log(file: UriComponents, level: LogLevel, args: any[]): void;\n}\n\nexport interface ExtHostOutputServiceShape {\n\t$setVisibleChannel(channelId: string | null): void;\n}\n\nexport interface ExtHostProgressShape {\n\t$acceptProgressCanceled(handle: number): void;\n}\n\nexport interface ExtHostCommentsShape {\n\t$createCommentThreadTemplate(commentControllerHandle: number, uriComponents: UriComponents, range: IRange): void;\n\t$updateCommentThreadTemplate(commentControllerHandle: number, threadHandle: number, range: IRange): Promise<void>;\n\t$deleteCommentThread(commentControllerHandle: number, commentThreadHandle: number): void;\n\t$provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<IRange[] | undefined>;\n\t$toggleReaction(commentControllerHandle: number, threadHandle: number, uri: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void>;\n}\n\nexport interface INotebookSelectionChangeEvent {\n\t// handles\n\tselections: number[];\n}\n\nexport interface INotebookEditorPropertiesChangeData {\n\tselections: INotebookSelectionChangeEvent | null;\n}\n\nexport interface ExtHostNotebookShape {\n\t$resolveNotebook(viewType: string, uri: UriComponents): Promise<number | undefined>;\n\t$executeNotebook(viewType: string, uri: UriComponents, cellHandle: number | undefined, token: CancellationToken): Promise<void>;\n\t$saveNotebook(viewType: string, uri: UriComponents, token: CancellationToken): Promise<boolean>;\n\t$updateActiveEditor(viewType: string, uri: UriComponents): Promise<void>;\n\t$destoryNotebookDocument(viewType: string, uri: UriComponents): Promise<boolean>;\n\t$acceptDisplayOrder(displayOrder: INotebookDisplayOrder): void;\n\t$onDidReceiveMessage(uri: UriComponents, message: any): void;\n\t$acceptModelChanged(uriComponents: UriComponents, event: NotebookCellsChangedEvent): void;\n\t$acceptEditorPropertiesChanged(uriComponents: UriComponents, data: INotebookEditorPropertiesChangeData): void;\n}\n\nexport interface ExtHostStorageShape {\n\t$acceptValue(shared: boolean, key: string, value: object | undefined): void;\n}\n\nexport interface ExtHostThemingShape {\n\t$onColorThemeChange(themeType: string): void;\n}\n\nexport interface MainThreadThemingShape extends IDisposable {\n}\n\nexport interface ExtHostTunnelServiceShape {\n\t$findCandidatePorts(): Promise<{ host: string, port: number, detail: string }[]>;\n\t$filterCandidates(candidates: { host: string, port: number, detail: string }[]): Promise<boolean[]>;\n\t$forwardPort(tunnelOptions: TunnelOptions): Promise<TunnelDto> | undefined;\n\t$closeTunnel(remote: { host: string, port: number }): Promise<void>;\n\t$onDidTunnelsChange(): Promise<void>;\n}\n\nexport interface ExtHostTimelineShape {\n\t$getTimeline(source: string, uri: UriComponents, options: TimelineOptions, token: CancellationToken, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined>;\n}\n\n// --- proxy identifiers\n\nexport const MainContext = {\n\tMainThreadAuthentication: createMainId<MainThreadAuthenticationShape>('MainThreadAuthentication'),\n\tMainThreadClipboard: createMainId<MainThreadClipboardShape>('MainThreadClipboard'),\n\tMainThreadCommands: createMainId<MainThreadCommandsShape>('MainThreadCommands'),\n\tMainThreadComments: createMainId<MainThreadCommentsShape>('MainThreadComments'),\n\tMainThreadConfiguration: createMainId<MainThreadConfigurationShape>('MainThreadConfiguration'),\n\tMainThreadConsole: createMainId<MainThreadConsoleShape>('MainThreadConsole'),\n\tMainThreadDebugService: createMainId<MainThreadDebugServiceShape>('MainThreadDebugService'),\n\tMainThreadDecorations: createMainId<MainThreadDecorationsShape>('MainThreadDecorations'),\n\tMainThreadDiagnostics: createMainId<MainThreadDiagnosticsShape>('MainThreadDiagnostics'),\n\tMainThreadDialogs: createMainId<MainThreadDiaglogsShape>('MainThreadDiaglogs'),\n\tMainThreadDocuments: createMainId<MainThreadDocumentsShape>('MainThreadDocuments'),\n\tMainThreadDocumentContentProviders: createMainId<MainThreadDocumentContentProvidersShape>('MainThreadDocumentContentProviders'),\n\tMainThreadTextEditors: createMainId<MainThreadTextEditorsShape>('MainThreadTextEditors'),\n\tMainThreadEditorInsets: createMainId<MainThreadEditorInsetsShape>('MainThreadEditorInsets'),\n\tMainThreadErrors: createMainId<MainThreadErrorsShape>('MainThreadErrors'),\n\tMainThreadTreeViews: createMainId<MainThreadTreeViewsShape>('MainThreadTreeViews'),\n\tMainThreadDownloadService: createMainId<MainThreadDownloadServiceShape>('MainThreadDownloadService'),\n\tMainThreadKeytar: createMainId<MainThreadKeytarShape>('MainThreadKeytar'),\n\tMainThreadLanguageFeatures: createMainId<MainThreadLanguageFeaturesShape>('MainThreadLanguageFeatures'),\n\tMainThreadLanguages: createMainId<MainThreadLanguagesShape>('MainThreadLanguages'),\n\tMainThreadLog: createMainId<MainThreadLogShape>('MainThread'),\n\tMainThreadMessageService: createMainId<MainThreadMessageServiceShape>('MainThreadMessageService'),\n\tMainThreadOutputService: createMainId<MainThreadOutputServiceShape>('MainThreadOutputService'),\n\tMainThreadProgress: createMainId<MainThreadProgressShape>('MainThreadProgress'),\n\tMainThreadQuickOpen: createMainId<MainThreadQuickOpenShape>('MainThreadQuickOpen'),\n\tMainThreadStatusBar: createMainId<MainThreadStatusBarShape>('MainThreadStatusBar'),\n\tMainThreadStorage: createMainId<MainThreadStorageShape>('MainThreadStorage'),\n\tMainThreadTelemetry: createMainId<MainThreadTelemetryShape>('MainThreadTelemetry'),\n\tMainThreadTerminalService: createMainId<MainThreadTerminalServiceShape>('MainThreadTerminalService'),\n\tMainThreadWebviews: createMainId<MainThreadWebviewsShape>('MainThreadWebviews'),\n\tMainThreadUrls: createMainId<MainThreadUrlsShape>('MainThreadUrls'),\n\tMainThreadWorkspace: createMainId<MainThreadWorkspaceShape>('MainThreadWorkspace'),\n\tMainThreadFileSystem: createMainId<MainThreadFileSystemShape>('MainThreadFileSystem'),\n\tMainThreadExtensionService: createMainId<MainThreadExtensionServiceShape>('MainThreadExtensionService'),\n\tMainThreadSCM: createMainId<MainThreadSCMShape>('MainThreadSCM'),\n\tMainThreadSearch: createMainId<MainThreadSearchShape>('MainThreadSearch'),\n\tMainThreadTask: createMainId<MainThreadTaskShape>('MainThreadTask'),\n\tMainThreadWindow: createMainId<MainThreadWindowShape>('MainThreadWindow'),\n\tMainThreadLabelService: createMainId<MainThreadLabelServiceShape>('MainThreadLabelService'),\n\tMainThreadNotebook: createMainId<MainThreadNotebookShape>('MainThreadNotebook'),\n\tMainThreadNodeProxy: createMainId<MainThreadNodeProxyShape>('MainThreadNodeProxy'),\n\tMainThreadTheming: createMainId<MainThreadThemingShape>('MainThreadTheming'),\n\tMainThreadTunnelService: createMainId<MainThreadTunnelServiceShape>('MainThreadTunnelService'),\n\tMainThreadTimeline: createMainId<MainThreadTimelineShape>('MainThreadTimeline')\n};\n\nexport const ExtHostContext = {\n\tExtHostCommands: createExtId<ExtHostCommandsShape>('ExtHostCommands'),\n\tExtHostConfiguration: createExtId<ExtHostConfigurationShape>('ExtHostConfiguration'),\n\tExtHostDiagnostics: createExtId<ExtHostDiagnosticsShape>('ExtHostDiagnostics'),\n\tExtHostDebugService: createExtId<ExtHostDebugServiceShape>('ExtHostDebugService'),\n\tExtHostDecorations: createExtId<ExtHostDecorationsShape>('ExtHostDecorations'),\n\tExtHostDocumentsAndEditors: createExtId<ExtHostDocumentsAndEditorsShape>('ExtHostDocumentsAndEditors'),\n\tExtHostDocuments: createExtId<ExtHostDocumentsShape>('ExtHostDocuments'),\n\tExtHostDocumentContentProviders: createExtId<ExtHostDocumentContentProvidersShape>('ExtHostDocumentContentProviders'),\n\tExtHostDocumentSaveParticipant: createExtId<ExtHostDocumentSaveParticipantShape>('ExtHostDocumentSaveParticipant'),\n\tExtHostEditors: createExtId<ExtHostEditorsShape>('ExtHostEditors'),\n\tExtHostTreeViews: createExtId<ExtHostTreeViewsShape>('ExtHostTreeViews'),\n\tExtHostFileSystem: createExtId<ExtHostFileSystemShape>('ExtHostFileSystem'),\n\tExtHostFileSystemEventService: createExtId<ExtHostFileSystemEventServiceShape>('ExtHostFileSystemEventService'),\n\tExtHostLanguageFeatures: createExtId<ExtHostLanguageFeaturesShape>('ExtHostLanguageFeatures'),\n\tExtHostQuickOpen: createExtId<ExtHostQuickOpenShape>('ExtHostQuickOpen'),\n\tExtHostExtensionService: createExtId<ExtHostExtensionServiceShape>('ExtHostExtensionService'),\n\tExtHostLogService: createExtId<ExtHostLogServiceShape>('ExtHostLogService'),\n\tExtHostTerminalService: createExtId<ExtHostTerminalServiceShape>('ExtHostTerminalService'),\n\tExtHostSCM: createExtId<ExtHostSCMShape>('ExtHostSCM'),\n\tExtHostSearch: createExtId<ExtHostSearchShape>('ExtHostSearch'),\n\tExtHostTask: createExtId<ExtHostTaskShape>('ExtHostTask'),\n\tExtHostWorkspace: createExtId<ExtHostWorkspaceShape>('ExtHostWorkspace'),\n\tExtHostWindow: createExtId<ExtHostWindowShape>('ExtHostWindow'),\n\tExtHostWebviews: createExtId<ExtHostWebviewsShape>('ExtHostWebviews'),\n\tExtHostEditorInsets: createExtId<ExtHostEditorInsetsShape>('ExtHostEditorInsets'),\n\tExtHostProgress: createMainId<ExtHostProgressShape>('ExtHostProgress'),\n\tExtHostComments: createMainId<ExtHostCommentsShape>('ExtHostComments'),\n\tExtHostStorage: createMainId<ExtHostStorageShape>('ExtHostStorage'),\n\tExtHostUrls: createExtId<ExtHostUrlsShape>('ExtHostUrls'),\n\tExtHostOutputService: createMainId<ExtHostOutputServiceShape>('ExtHostOutputService'),\n\tExtHosLabelService: createMainId<ExtHostLabelServiceShape>('ExtHostLabelService'),\n\tExtHostNotebook: createMainId<ExtHostNotebookShape>('ExtHostNotebook'),\n\tExtHostNodeProxy: createMainId<ExtHostNodeProxyShape>('ExtHostNodeProxy'),\n\tExtHostTheming: createMainId<ExtHostThemingShape>('ExtHostTheming'),\n\tExtHostTunnelService: createMainId<ExtHostTunnelServiceShape>('ExtHostTunnelService'),\n\tExtHostAuthentication: createMainId<ExtHostAuthenticationShape>('ExtHostAuthentication'),\n\tExtHostTimeline: createMainId<ExtHostTimelineShape>('ExtHostTimeline')\n};\n","import { Emitter } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostNodeProxyShape, MainContext, MainThreadNodeProxyShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\n\nexport class ExtHostNodeProxy implements ExtHostNodeProxyShape {\n\t_serviceBrand: any;\n\n\tprivate readonly _onMessage = new Emitter<string>();\n\tpublic readonly onMessage = this._onMessage.event;\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate readonly _onDown = new Emitter<void>();\n\tpublic readonly onDown = this._onDown.event;\n\tprivate readonly _onUp = new Emitter<void>();\n\tpublic readonly onUp = this._onUp.event;\n\n\tprivate readonly proxy: MainThreadNodeProxyShape;\n\n\tconstructor(@IExtHostRpcService rpc: IExtHostRpcService) {\n\t\tthis.proxy = rpc.getProxy(MainContext.MainThreadNodeProxy);\n\t}\n\n\tpublic $onMessage(message: string): void {\n\t\tthis._onMessage.fire(message);\n\t}\n\n\tpublic $onClose(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tpublic $onUp(): void {\n\t\tthis._onUp.fire();\n\t}\n\n\tpublic $onDown(): void {\n\t\tthis._onDown.fire();\n\t}\n\n\tpublic send(message: string): void {\n\t\tthis.proxy.$send(message);\n\t}\n}\n\nexport interface IExtHostNodeProxy extends ExtHostNodeProxy { }\nexport const IExtHostNodeProxy = createDecorator<IExtHostNodeProxy>('IExtHostNodeProxy');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport * as extHostProtocol from 'vs/workbench/api/common/extHost.protocol';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\n\nexport interface IExtHostApiDeprecationService {\n\t_serviceBrand: undefined;\n\n\treport(apiId: string, extension: IExtensionDescription, migrationSuggestion: string): void;\n}\n\nexport const IExtHostApiDeprecationService = createDecorator<IExtHostApiDeprecationService>('IExtHostApiDeprecationService');\n\nexport class ExtHostApiDeprecationService implements IExtHostApiDeprecationService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _reportedUsages = new Set<string>();\n\tprivate readonly _telemetryShape: extHostProtocol.MainThreadTelemetryShape;\n\n\tconstructor(\n\t\t@IExtHostRpcService rpc: IExtHostRpcService,\n\t\t@ILogService private readonly _extHostLogService: ILogService,\n\t) {\n\t\tthis._telemetryShape = rpc.getProxy(extHostProtocol.MainContext.MainThreadTelemetry);\n\t}\n\n\tpublic report(apiId: string, extension: IExtensionDescription, migrationSuggestion: string): void {\n\t\tconst key = this.getUsageKey(apiId, extension);\n\t\tif (this._reportedUsages.has(key)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._reportedUsages.add(key);\n\n\t\tif (extension.isUnderDevelopment) {\n\t\t\tthis._extHostLogService.warn(`[Deprecation Warning] '${apiId}' is deprecated. ${migrationSuggestion}`);\n\t\t}\n\n\t\ttype DeprecationTelemetry = {\n\t\t\textensionId: string;\n\t\t\tapiId: string;\n\t\t};\n\t\ttype DeprecationTelemetryMeta = {\n\t\t\textensionId: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\tapiId: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t};\n\t\tthis._telemetryShape.$publicLog2<DeprecationTelemetry, DeprecationTelemetryMeta>('extHostDeprecatedApiUsage', {\n\t\t\textensionId: extension.identifier.value,\n\t\t\tapiId: apiId,\n\t\t});\n\t}\n\n\tprivate getUsageKey(apiId: string, extension: IExtensionDescription): string {\n\t\treturn `${apiId}-${extension.identifier.value}`;\n\t}\n}\n\n\nexport const NullApiDeprecationService = Object.freeze(new class implements IExtHostApiDeprecationService {\n\t_serviceBrand: undefined;\n\n\tpublic report(_apiId: string, _extension: IExtensionDescription, _warningMessage: string): void {\n\t\t// noop\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport * as modes from 'vs/editor/common/modes';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IMainContext, MainContext, MainThreadAuthenticationShape, ExtHostAuthenticationShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { Disposable } from 'vs/workbench/api/common/extHostTypes';\nimport { IExtensionDescription, ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtHostAuthentication implements ExtHostAuthenticationShape {\n\tprivate _proxy: MainThreadAuthenticationShape;\n\tprivate _authenticationProviders: Map<string, vscode.AuthenticationProvider> = new Map<string, vscode.AuthenticationProvider>();\n\n\tprivate _onDidChangeAuthenticationProviders = new Emitter<vscode.AuthenticationProvidersChangeEvent>();\n\treadonly onDidChangeAuthenticationProviders: Event<vscode.AuthenticationProvidersChangeEvent> = this._onDidChangeAuthenticationProviders.event;\n\n\tprivate _onDidChangeSessions = new Emitter<{ [providerId: string]: vscode.AuthenticationSessionsChangeEvent }>();\n\treadonly onDidChangeSessions: Event<{ [providerId: string]: vscode.AuthenticationSessionsChangeEvent }> = this._onDidChangeSessions.event;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadAuthentication);\n\t}\n\n\tget providerIds(): string[] {\n\t\tconst ids: string[] = [];\n\t\tthis._authenticationProviders.forEach(provider => {\n\t\t\tids.push(provider.id);\n\t\t});\n\n\t\treturn ids;\n\t}\n\n\tasync getSessions(requestingExtension: IExtensionDescription, providerId: string, scopes: string[]): Promise<readonly vscode.AuthenticationSession[]> {\n\t\tconst provider = this._authenticationProviders.get(providerId);\n\t\tif (!provider) {\n\t\t\tthrow new Error(`No authentication provider with id '${providerId}' is currently registered.`);\n\t\t}\n\n\t\tconst extensionId = ExtensionIdentifier.toKey(requestingExtension.identifier);\n\t\tconst orderedScopes = scopes.sort().join(' ');\n\n\t\treturn (await provider.getSessions())\n\t\t\t.filter(session => session.scopes.sort().join(' ') === orderedScopes)\n\t\t\t.map(session => {\n\t\t\t\treturn {\n\t\t\t\t\tid: session.id,\n\t\t\t\t\taccount: session.account,\n\t\t\t\t\tscopes: session.scopes,\n\t\t\t\t\tgetAccessToken: async () => {\n\t\t\t\t\t\tconst isAllowed = await this._proxy.$getSessionsPrompt(\n\t\t\t\t\t\t\tprovider.id,\n\t\t\t\t\t\t\tsession.account.displayName,\n\t\t\t\t\t\t\tprovider.displayName,\n\t\t\t\t\t\t\textensionId,\n\t\t\t\t\t\t\trequestingExtension.displayName || requestingExtension.name);\n\n\t\t\t\t\t\tif (!isAllowed) {\n\t\t\t\t\t\t\tthrow new Error('User did not consent to token access.');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn session.getAccessToken();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tasync login(requestingExtension: IExtensionDescription, providerId: string, scopes: string[]): Promise<vscode.AuthenticationSession> {\n\t\tconst provider = this._authenticationProviders.get(providerId);\n\t\tif (!provider) {\n\t\t\tthrow new Error(`No authentication provider with id '${providerId}' is currently registered.`);\n\t\t}\n\n\t\tconst extensionName = requestingExtension.displayName || requestingExtension.name;\n\t\tconst isAllowed = await this._proxy.$loginPrompt(provider.displayName, extensionName);\n\t\tif (!isAllowed) {\n\t\t\tthrow new Error('User did not consent to login.');\n\t\t}\n\n\t\tconst session = await provider.login(scopes);\n\t\tawait this._proxy.$setTrustedExtension(provider.id, session.account.displayName, ExtensionIdentifier.toKey(requestingExtension.identifier), extensionName);\n\t\treturn {\n\t\t\tid: session.id,\n\t\t\taccount: session.account,\n\t\t\tscopes: session.scopes,\n\t\t\tgetAccessToken: async () => {\n\t\t\t\tconst isAllowed = await this._proxy.$getSessionsPrompt(\n\t\t\t\t\tprovider.id,\n\t\t\t\t\tsession.account.displayName,\n\t\t\t\t\tprovider.displayName,\n\t\t\t\t\tExtensionIdentifier.toKey(requestingExtension.identifier),\n\t\t\t\t\trequestingExtension.displayName || requestingExtension.name);\n\n\t\t\t\tif (!isAllowed) {\n\t\t\t\t\tthrow new Error('User did not consent to token access.');\n\t\t\t\t}\n\n\t\t\t\treturn session.getAccessToken();\n\t\t\t}\n\t\t};\n\t}\n\n\tasync logout(providerId: string, sessionId: string): Promise<void> {\n\t\tconst provider = this._authenticationProviders.get(providerId);\n\t\tif (!provider) {\n\t\t\tthrow new Error(`No authentication provider with id '${providerId}' is currently registered.`);\n\t\t}\n\n\t\treturn provider.logout(sessionId);\n\t}\n\n\tregisterAuthenticationProvider(provider: vscode.AuthenticationProvider): vscode.Disposable {\n\t\tif (this._authenticationProviders.get(provider.id)) {\n\t\t\tthrow new Error(`An authentication provider with id '${provider.id}' is already registered.`);\n\t\t}\n\n\t\tthis._authenticationProviders.set(provider.id, provider);\n\n\t\tconst listener = provider.onDidChangeSessions(e => {\n\t\t\tthis._proxy.$onDidChangeSessions(provider.id, e);\n\t\t\tthis._onDidChangeSessions.fire({ [provider.id]: e });\n\t\t});\n\n\t\tthis._proxy.$registerAuthenticationProvider(provider.id, provider.displayName);\n\t\tthis._onDidChangeAuthenticationProviders.fire({ added: [provider.id], removed: [] });\n\n\t\treturn new Disposable(() => {\n\t\t\tlistener.dispose();\n\t\t\tthis._authenticationProviders.delete(provider.id);\n\t\t\tthis._proxy.$unregisterAuthenticationProvider(provider.id);\n\t\t\tthis._onDidChangeAuthenticationProviders.fire({ added: [], removed: [provider.id] });\n\t\t});\n\t}\n\n\t$login(providerId: string, scopes: string[]): Promise<modes.AuthenticationSession> {\n\t\tconst authProvider = this._authenticationProviders.get(providerId);\n\t\tif (authProvider) {\n\t\t\treturn Promise.resolve(authProvider.login(scopes));\n\t\t}\n\n\t\tthrow new Error(`Unable to find authentication provider with handle: ${providerId}`);\n\t}\n\n\t$logout(providerId: string, sessionId: string): Promise<void> {\n\t\tconst authProvider = this._authenticationProviders.get(providerId);\n\t\tif (authProvider) {\n\t\t\treturn Promise.resolve(authProvider.logout(sessionId));\n\t\t}\n\n\t\tthrow new Error(`Unable to find authentication provider with handle: ${providerId}`);\n\t}\n\n\t$getSessions(providerId: string): Promise<ReadonlyArray<modes.AuthenticationSession>> {\n\t\tconst authProvider = this._authenticationProviders.get(providerId);\n\t\tif (authProvider) {\n\t\t\treturn Promise.resolve(authProvider.getSessions());\n\t\t}\n\n\t\tthrow new Error(`Unable to find authentication provider with handle: ${providerId}`);\n\t}\n\n\tasync $getSessionAccessToken(providerId: string, sessionId: string): Promise<string> {\n\t\tconst authProvider = this._authenticationProviders.get(providerId);\n\t\tif (authProvider) {\n\t\t\tconst sessions = await authProvider.getSessions();\n\t\t\tconst session = sessions.find(session => session.id === sessionId);\n\t\t\tif (session) {\n\t\t\t\treturn session.getAccessToken();\n\t\t\t}\n\n\t\t\tthrow new Error(`Unable to find session with id: ${sessionId}`);\n\t\t}\n\n\t\tthrow new Error(`Unable to find authentication provider with handle: ${providerId}`);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMainContext, MainContext, MainThreadClipboardShape } from 'vs/workbench/api/common/extHost.protocol';\nimport type * as vscode from 'vscode';\n\nexport class ExtHostClipboard implements vscode.Clipboard {\n\n\tprivate readonly _proxy: MainThreadClipboardShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadClipboard);\n\t}\n\n\treadText(): Promise<string> {\n\t\treturn this._proxy.$readText();\n\t}\n\n\twriteText(value: string): Promise<void> {\n\t\treturn this._proxy.$writeText(value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { validateConstraint } from 'vs/base/common/types';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport * as extHostTypes from 'vs/workbench/api/common/extHostTypes';\nimport * as extHostTypeConverter from 'vs/workbench/api/common/extHostTypeConverters';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { MainContext, MainThreadCommandsShape, ExtHostCommandsShape, ObjectIdentifier, ICommandDto } from './extHost.protocol';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport * as modes from 'vs/editor/common/modes';\nimport type * as vscode from 'vscode';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { revive } from 'vs/base/common/marshalling';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Position } from 'vs/editor/common/core/position';\nimport { URI } from 'vs/base/common/uri';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\n\ninterface CommandHandler {\n\tcallback: Function;\n\tthisArg: any;\n\tdescription?: ICommandHandlerDescription;\n}\n\nexport interface ArgumentProcessor {\n\tprocessArgument(arg: any): any;\n}\n\nexport class ExtHostCommands implements ExtHostCommandsShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _commands = new Map<string, CommandHandler>();\n\tprivate readonly _proxy: MainThreadCommandsShape;\n\tprivate readonly _converter: CommandsConverter;\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _argumentProcessors: ArgumentProcessor[];\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadCommands);\n\t\tthis._logService = logService;\n\t\tthis._converter = new CommandsConverter(this, logService);\n\t\tthis._argumentProcessors = [\n\t\t\t{\n\t\t\t\tprocessArgument(a) {\n\t\t\t\t\t// URI, Regex\n\t\t\t\t\treturn revive(a);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tprocessArgument(arg) {\n\t\t\t\t\treturn cloneAndChange(arg, function (obj) {\n\t\t\t\t\t\t// Reverse of https://github.com/Microsoft/vscode/blob/1f28c5fc681f4c01226460b6d1c7e91b8acb4a5b/src/vs/workbench/api/node/extHostCommands.ts#L112-L127\n\t\t\t\t\t\tif (Range.isIRange(obj)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.Range.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Position.isIPosition(obj)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.Position.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Range.isIRange((obj as modes.Location).range) && URI.isUri((obj as modes.Location).uri)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.location.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!Array.isArray(obj)) {\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\tget converter(): CommandsConverter {\n\t\treturn this._converter;\n\t}\n\n\tregisterArgumentProcessor(processor: ArgumentProcessor): void {\n\t\tthis._argumentProcessors.push(processor);\n\t}\n\n\tregisterCommand(global: boolean, id: string, callback: <T>(...args: any[]) => T | Thenable<T>, thisArg?: any, description?: ICommandHandlerDescription): extHostTypes.Disposable {\n\t\tthis._logService.trace('ExtHostCommands#registerCommand', id);\n\n\t\tif (!id.trim().length) {\n\t\t\tthrow new Error('invalid id');\n\t\t}\n\n\t\tif (this._commands.has(id)) {\n\t\t\tthrow new Error(`command '${id}' already exists`);\n\t\t}\n\n\t\tthis._commands.set(id, { callback, thisArg, description });\n\t\tif (global) {\n\t\t\tthis._proxy.$registerCommand(id);\n\t\t}\n\n\t\treturn new extHostTypes.Disposable(() => {\n\t\t\tif (this._commands.delete(id)) {\n\t\t\t\tif (global) {\n\t\t\t\t\tthis._proxy.$unregisterCommand(id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\texecuteCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tthis._logService.trace('ExtHostCommands#executeCommand', id);\n\t\treturn this._doExecuteCommand(id, args, true);\n\t}\n\n\tprivate async _doExecuteCommand<T>(id: string, args: any[], retry: boolean): Promise<T> {\n\n\t\tif (this._commands.has(id)) {\n\t\t\t// we stay inside the extension host and support\n\t\t\t// to pass any kind of parameters around\n\t\t\treturn this._executeContributedCommand<T>(id, args);\n\n\t\t} else {\n\t\t\t// automagically convert some argument types\n\t\t\tconst toArgs = cloneAndChange(args, function (value) {\n\t\t\t\tif (value instanceof extHostTypes.Position) {\n\t\t\t\t\treturn extHostTypeConverter.Position.from(value);\n\t\t\t\t}\n\t\t\t\tif (value instanceof extHostTypes.Range) {\n\t\t\t\t\treturn extHostTypeConverter.Range.from(value);\n\t\t\t\t}\n\t\t\t\tif (value instanceof extHostTypes.Location) {\n\t\t\t\t\treturn extHostTypeConverter.location.from(value);\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tconst result = await this._proxy.$executeCommand<T>(id, toArgs, retry);\n\t\t\t\treturn revive(result);\n\t\t\t} catch (e) {\n\t\t\t\t// Rerun the command when it wasn't known, had arguments, and when retry\n\t\t\t\t// is enabled. We do this because the command might be registered inside\n\t\t\t\t// the extension host now and can therfore accept the arguments as-is.\n\t\t\t\tif (e instanceof Error && e.message === '$executeCommand:retry') {\n\t\t\t\t\treturn this._doExecuteCommand(id, args, false);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _executeContributedCommand<T>(id: string, args: any[]): Promise<T> {\n\t\tconst command = this._commands.get(id);\n\t\tif (!command) {\n\t\t\tthrow new Error('Unknown command');\n\t\t}\n\t\tlet { callback, thisArg, description } = command;\n\t\tif (description) {\n\t\t\tfor (let i = 0; i < description.args.length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateConstraint(args[i], description.args[i].constraint);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn Promise.reject(new Error(`Running the contributed command: '${id}' failed. Illegal argument '${description.args[i].name}' - ${description.args[i].description}`));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = callback.apply(thisArg, args);\n\t\t\treturn Promise.resolve(result);\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err, id);\n\t\t\treturn Promise.reject(new Error(`Running the contributed command: '${id}' failed.`));\n\t\t}\n\t}\n\n\t$executeContributedCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tthis._logService.trace('ExtHostCommands#$executeContributedCommand', id);\n\n\t\tif (!this._commands.has(id)) {\n\t\t\treturn Promise.reject(new Error(`Contributed command '${id}' does not exist.`));\n\t\t} else {\n\t\t\targs = args.map(arg => this._argumentProcessors.reduce((r, p) => p.processArgument(r), arg));\n\t\t\treturn this._executeContributedCommand(id, args);\n\t\t}\n\t}\n\n\tgetCommands(filterUnderscoreCommands: boolean = false): Promise<string[]> {\n\t\tthis._logService.trace('ExtHostCommands#getCommands', filterUnderscoreCommands);\n\n\t\treturn this._proxy.$getCommands().then(result => {\n\t\t\tif (filterUnderscoreCommands) {\n\t\t\t\tresult = result.filter(command => command[0] !== '_');\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t$getContributedCommandHandlerDescriptions(): Promise<{ [id: string]: string | ICommandHandlerDescription }> {\n\t\tconst result: { [id: string]: string | ICommandHandlerDescription } = Object.create(null);\n\t\tthis._commands.forEach((command, id) => {\n\t\t\tlet { description } = command;\n\t\t\tif (description) {\n\t\t\t\tresult[id] = description;\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve(result);\n\t}\n}\n\n\nexport class CommandsConverter {\n\n\tprivate readonly _delegatingCommandId: string;\n\tprivate readonly _cache = new Map<number, vscode.Command>();\n\tprivate _cachIdPool = 0;\n\n\t// --- conversion between internal and api commands\n\tconstructor(\n\t\tprivate readonly _commands: ExtHostCommands,\n\t\tprivate readonly _logService: ILogService\n\t) {\n\t\tthis._delegatingCommandId = `_vscode_delegate_cmd_${Date.now().toString(36)}`;\n\t\tthis._commands.registerCommand(true, this._delegatingCommandId, this._executeConvertedCommand, this);\n\t}\n\n\ttoInternal(command: vscode.Command, disposables: DisposableStore): ICommandDto;\n\ttoInternal(command: vscode.Command | undefined, disposables: DisposableStore): ICommandDto | undefined;\n\ttoInternal(command: vscode.Command | undefined, disposables: DisposableStore): ICommandDto | undefined {\n\n\t\tif (!command) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result: ICommandDto = {\n\t\t\t$ident: undefined,\n\t\t\tid: command.command,\n\t\t\ttitle: command.title,\n\t\t\ttooltip: command.tooltip\n\t\t};\n\n\t\tif (command.command && isNonEmptyArray(command.arguments)) {\n\t\t\t// we have a contributed command with arguments. that\n\t\t\t// means we don't want to send the arguments around\n\n\t\t\tconst id = ++this._cachIdPool;\n\t\t\tthis._cache.set(id, command);\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\tthis._cache.delete(id);\n\t\t\t\tthis._logService.trace('CommandsConverter#DISPOSE', id);\n\t\t\t}));\n\t\t\tresult.$ident = id;\n\n\t\t\tresult.id = this._delegatingCommandId;\n\t\t\tresult.arguments = [id];\n\n\t\t\tthis._logService.trace('CommandsConverter#CREATE', command.command, id);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfromInternal(command: modes.Command): vscode.Command | undefined {\n\n\t\tconst id = ObjectIdentifier.of(command);\n\t\tif (typeof id === 'number') {\n\t\t\treturn this._cache.get(id);\n\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcommand: command.id,\n\t\t\t\ttitle: command.title,\n\t\t\t\targuments: command.arguments\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate _executeConvertedCommand<R>(...args: any[]): Promise<R> {\n\t\tconst actualCmd = this._cache.get(args[0]);\n\t\tthis._logService.trace('CommandsConverter#EXECUTE', args[0], actualCmd ? actualCmd.command : 'MISSING');\n\n\t\tif (!actualCmd) {\n\t\t\treturn Promise.reject('actual command NOT FOUND');\n\t\t}\n\t\treturn this._commands.executeCommand(actualCmd.command, ...(actualCmd.arguments || []));\n\t}\n\n}\n\nexport interface IExtHostCommands extends ExtHostCommands { }\nexport const IExtHostCommands = createDecorator<IExtHostCommands>('IExtHostCommands');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asPromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { debounce } from 'vs/base/common/decorators';\nimport { Emitter } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IRange } from 'vs/editor/common/core/range';\nimport * as modes from 'vs/editor/common/modes';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport * as extHostTypeConverter from 'vs/workbench/api/common/extHostTypeConverters';\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport type * as vscode from 'vscode';\nimport { ExtHostCommentsShape, IMainContext, MainContext, MainThreadCommentsShape, CommentThreadChanges } from './extHost.protocol';\nimport { ExtHostCommands } from './extHostCommands';\n\ntype ProviderHandle = number;\n\nexport class ExtHostComments implements ExtHostCommentsShape, IDisposable {\n\n\tprivate static handlePool = 0;\n\n\tprivate _proxy: MainThreadCommentsShape;\n\n\tprivate _commentControllers: Map<ProviderHandle, ExtHostCommentController> = new Map<ProviderHandle, ExtHostCommentController>();\n\n\tprivate _commentControllersByExtension: Map<string, ExtHostCommentController[]> = new Map<string, ExtHostCommentController[]>();\n\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tcommands: ExtHostCommands,\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadComments);\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === 6) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.handle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn commentController;\n\t\t\t\t} else if (arg && arg.$mid === 7) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn commentThread;\n\t\t\t\t} else if (arg && arg.$mid === 8) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tthread: commentThread,\n\t\t\t\t\t\ttext: arg.text\n\t\t\t\t\t};\n\t\t\t\t} else if (arg && arg.$mid === 9) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet commentUniqueId = arg.commentUniqueId;\n\n\t\t\t\t\tlet comment = commentThread.getCommentByUniqueId(commentUniqueId);\n\n\t\t\t\t\tif (!comment) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn comment;\n\n\t\t\t\t} else if (arg && arg.$mid === 10) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet body = arg.text;\n\t\t\t\t\tlet commentUniqueId = arg.commentUniqueId;\n\n\t\t\t\t\tlet comment = commentThread.getCommentByUniqueId(commentUniqueId);\n\n\t\t\t\t\tif (!comment) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tcomment.body = body;\n\t\t\t\t\treturn comment;\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateCommentController(extension: IExtensionDescription, id: string, label: string): vscode.CommentController {\n\t\tconst handle = ExtHostComments.handlePool++;\n\t\tconst commentController = new ExtHostCommentController(extension, handle, this._proxy, id, label);\n\t\tthis._commentControllers.set(commentController.handle, commentController);\n\n\t\tconst commentControllers = this._commentControllersByExtension.get(ExtensionIdentifier.toKey(extension.identifier)) || [];\n\t\tcommentControllers.push(commentController);\n\t\tthis._commentControllersByExtension.set(ExtensionIdentifier.toKey(extension.identifier), commentControllers);\n\n\t\treturn commentController;\n\t}\n\n\t$createCommentThreadTemplate(commentControllerHandle: number, uriComponents: UriComponents, range: IRange): void {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController) {\n\t\t\treturn;\n\t\t}\n\n\t\tcommentController.$createCommentThreadTemplate(uriComponents, range);\n\t}\n\n\tasync $updateCommentThreadTemplate(commentControllerHandle: number, threadHandle: number, range: IRange) {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController) {\n\t\t\treturn;\n\t\t}\n\n\t\tcommentController.$updateCommentThreadTemplate(threadHandle, range);\n\t}\n\n\t$deleteCommentThread(commentControllerHandle: number, commentThreadHandle: number) {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (commentController) {\n\t\t\tcommentController.$deleteCommentThread(commentThreadHandle);\n\t\t}\n\t}\n\n\t$provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<IRange[] | undefined> {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController || !commentController.commentingRangeProvider) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst document = this._documents.getDocument(URI.revive(uriComponents));\n\t\treturn asPromise(() => {\n\t\t\treturn commentController.commentingRangeProvider!.provideCommentingRanges(document, token);\n\t\t}).then(ranges => ranges ? ranges.map(x => extHostTypeConverter.Range.from(x)) : undefined);\n\t}\n\n\t$toggleReaction(commentControllerHandle: number, threadHandle: number, uri: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void> {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController || !commentController.reactionHandler) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => {\n\t\t\tconst commentThread = commentController.getCommentThread(threadHandle);\n\t\t\tif (commentThread) {\n\t\t\t\tconst vscodeComment = commentThread.getCommentByUniqueId(comment.uniqueIdInThread);\n\n\t\t\t\tif (commentController !== undefined && vscodeComment) {\n\t\t\t\t\tif (commentController.reactionHandler) {\n\t\t\t\t\t\treturn commentController.reactionHandler(vscodeComment, convertFromReaction(reaction));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve(undefined);\n\t\t});\n\t}\n\tdispose() {\n\n\t}\n}\ntype CommentThreadModification = Partial<{\n\trange: vscode.Range,\n\tlabel: string | undefined,\n\tcontextValue: string | undefined,\n\tcomments: vscode.Comment[],\n\tcollapsibleState: vscode.CommentThreadCollapsibleState\n}>;\n\nexport class ExtHostCommentThread implements vscode.CommentThread {\n\tprivate static _handlePool: number = 0;\n\treadonly handle = ExtHostCommentThread._handlePool++;\n\tpublic commentHandle: number = 0;\n\n\tprivate modifications: CommentThreadModification = Object.create(null);\n\n\tset threadId(id: string) {\n\t\tthis._id = id;\n\t}\n\n\tget threadId(): string {\n\t\treturn this._id!;\n\t}\n\n\tget id(): string {\n\t\treturn this._id!;\n\t}\n\n\tget resource(): vscode.Uri {\n\t\treturn this._uri;\n\t}\n\n\tget uri(): vscode.Uri {\n\t\treturn this._uri;\n\t}\n\n\tprivate readonly _onDidUpdateCommentThread = new Emitter<void>();\n\treadonly onDidUpdateCommentThread = this._onDidUpdateCommentThread.event;\n\n\tset range(range: vscode.Range) {\n\t\tif (!range.isEqual(this._range)) {\n\t\t\tthis._range = range;\n\t\t\tthis.modifications.range = range;\n\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t}\n\t}\n\n\tget range(): vscode.Range {\n\t\treturn this._range;\n\t}\n\n\tprivate _label: string | undefined;\n\n\tget label(): string | undefined {\n\t\treturn this._label;\n\t}\n\n\tset label(label: string | undefined) {\n\t\tthis._label = label;\n\t\tthis.modifications.label = label;\n\t\tthis._onDidUpdateCommentThread.fire();\n\t}\n\n\tprivate _contextValue: string | undefined;\n\n\tget contextValue(): string | undefined {\n\t\treturn this._contextValue;\n\t}\n\n\tset contextValue(context: string | undefined) {\n\t\tthis._contextValue = context;\n\t\tthis.modifications.contextValue = context;\n\t\tthis._onDidUpdateCommentThread.fire();\n\t}\n\n\tget comments(): vscode.Comment[] {\n\t\treturn this._comments;\n\t}\n\n\tset comments(newComments: vscode.Comment[]) {\n\t\tthis._comments = newComments;\n\t\tthis.modifications.comments = newComments;\n\t\tthis._onDidUpdateCommentThread.fire();\n\t}\n\n\tprivate _collapseState?: vscode.CommentThreadCollapsibleState;\n\n\tget collapsibleState(): vscode.CommentThreadCollapsibleState {\n\t\treturn this._collapseState!;\n\t}\n\n\tset collapsibleState(newState: vscode.CommentThreadCollapsibleState) {\n\t\tthis._collapseState = newState;\n\t\tthis.modifications.collapsibleState = newState;\n\t\tthis._onDidUpdateCommentThread.fire();\n\t}\n\n\tprivate _localDisposables: types.Disposable[];\n\n\tprivate _isDiposed: boolean;\n\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDiposed;\n\t}\n\n\tprivate _commentsMap: Map<vscode.Comment, number> = new Map<vscode.Comment, number>();\n\n\tprivate _acceptInputDisposables = new MutableDisposable<DisposableStore>();\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadCommentsShape,\n\t\tprivate _commentController: ExtHostCommentController,\n\t\tprivate _id: string | undefined,\n\t\tprivate _uri: vscode.Uri,\n\t\tprivate _range: vscode.Range,\n\t\tprivate _comments: vscode.Comment[],\n\t\textensionId: ExtensionIdentifier\n\t) {\n\t\tthis._acceptInputDisposables.value = new DisposableStore();\n\n\t\tif (this._id === undefined) {\n\t\t\tthis._id = `${_commentController.id}.${this.handle}`;\n\t\t}\n\n\t\tthis._proxy.$createCommentThread(\n\t\t\tthis._commentController.handle,\n\t\t\tthis.handle,\n\t\t\tthis._id,\n\t\t\tthis._uri,\n\t\t\textHostTypeConverter.Range.from(this._range),\n\t\t\textensionId\n\t\t);\n\n\t\tthis._localDisposables = [];\n\t\tthis._isDiposed = false;\n\n\t\tthis._localDisposables.push(this.onDidUpdateCommentThread(() => {\n\t\t\tthis.eventuallyUpdateCommentThread();\n\t\t}));\n\n\t\t// set up comments after ctor to batch update events.\n\t\tthis.comments = _comments;\n\t}\n\n\n\t@debounce(100)\n\teventuallyUpdateCommentThread(): void {\n\t\tif (this._isDiposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._acceptInputDisposables.value) {\n\t\t\tthis._acceptInputDisposables.value = new DisposableStore();\n\t\t}\n\n\t\tconst modified = (value: keyof CommentThreadModification): boolean =>\n\t\t\tObject.prototype.hasOwnProperty.call(this.modifications, value);\n\n\t\tconst formattedModifications: CommentThreadChanges = {};\n\t\tif (modified('range')) {\n\t\t\tformattedModifications.range = extHostTypeConverter.Range.from(this._range);\n\t\t}\n\t\tif (modified('label')) {\n\t\t\tformattedModifications.label = this.label;\n\t\t}\n\t\tif (modified('contextValue')) {\n\t\t\tformattedModifications.contextValue = this.contextValue;\n\t\t}\n\t\tif (modified('comments')) {\n\t\t\tformattedModifications.comments =\n\t\t\t\tthis._comments.map(cmt => convertToModeComment(this, this._commentController, cmt, this._commentsMap));\n\t\t}\n\t\tif (modified('collapsibleState')) {\n\t\t\tformattedModifications.collapseState = convertToCollapsibleState(this._collapseState);\n\t\t}\n\t\tthis.modifications = {};\n\n\t\tthis._proxy.$updateCommentThread(\n\t\t\tthis._commentController.handle,\n\t\t\tthis.handle,\n\t\t\tthis._id!,\n\t\t\tthis._uri,\n\t\t\tformattedModifications\n\t\t);\n\t}\n\n\tgetCommentByUniqueId(uniqueId: number): vscode.Comment | undefined {\n\t\tfor (let key of this._commentsMap) {\n\t\t\tlet comment = key[0];\n\t\t\tlet id = key[1];\n\t\t\tif (uniqueId === id) {\n\t\t\t\treturn comment;\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tdispose() {\n\t\tthis._isDiposed = true;\n\t\tthis._acceptInputDisposables.dispose();\n\t\tthis._localDisposables.forEach(disposable => disposable.dispose());\n\t\tthis._proxy.$deleteCommentThread(\n\t\t\tthis._commentController.handle,\n\t\t\tthis.handle\n\t\t);\n\t}\n}\n\ntype ReactionHandler = (comment: vscode.Comment, reaction: vscode.CommentReaction) => Promise<void>;\n\nclass ExtHostCommentController implements vscode.CommentController {\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tpublic get handle(): number {\n\t\treturn this._handle;\n\t}\n\n\tprivate _threads: Map<number, ExtHostCommentThread> = new Map<number, ExtHostCommentThread>();\n\tcommentingRangeProvider?: vscode.CommentingRangeProvider;\n\n\tprivate _reactionHandler?: ReactionHandler;\n\n\tget reactionHandler(): ReactionHandler | undefined {\n\t\treturn this._reactionHandler;\n\t}\n\n\tset reactionHandler(handler: ReactionHandler | undefined) {\n\t\tthis._reactionHandler = handler;\n\n\t\tthis._proxy.$updateCommentControllerFeatures(this.handle, { reactionHandler: !!handler });\n\t}\n\n\tprivate _options: modes.CommentOptions | undefined;\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\tset options(options: modes.CommentOptions | undefined) {\n\t\tthis._options = options;\n\n\t\tthis._proxy.$updateCommentControllerFeatures(this.handle, { options: this._options });\n\t}\n\n\tconstructor(\n\t\tprivate _extension: IExtensionDescription,\n\t\tprivate _handle: number,\n\t\tprivate _proxy: MainThreadCommentsShape,\n\t\tprivate _id: string,\n\t\tprivate _label: string\n\t) {\n\t\tthis._proxy.$registerCommentController(this.handle, _id, _label);\n\t}\n\n\tcreateCommentThread(resource: vscode.Uri, range: vscode.Range, comments: vscode.Comment[]): vscode.CommentThread;\n\tcreateCommentThread(arg0: vscode.Uri | string, arg1: vscode.Uri | vscode.Range, arg2: vscode.Range | vscode.Comment[], arg3?: vscode.Comment[]): vscode.CommentThread {\n\t\tif (typeof arg0 === 'string') {\n\t\t\tconst commentThread = new ExtHostCommentThread(this._proxy, this, arg0, arg1 as vscode.Uri, arg2 as vscode.Range, arg3 as vscode.Comment[], this._extension.identifier);\n\t\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\t\treturn commentThread;\n\t\t} else {\n\t\t\tconst commentThread = new ExtHostCommentThread(this._proxy, this, undefined, arg0 as vscode.Uri, arg1 as vscode.Range, arg2 as vscode.Comment[], this._extension.identifier);\n\t\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\t\treturn commentThread;\n\t\t}\n\t}\n\n\t$createCommentThreadTemplate(uriComponents: UriComponents, range: IRange): ExtHostCommentThread {\n\t\tconst commentThread = new ExtHostCommentThread(this._proxy, this, undefined, URI.revive(uriComponents), extHostTypeConverter.Range.to(range), [], this._extension.identifier);\n\t\tcommentThread.collapsibleState = modes.CommentThreadCollapsibleState.Expanded;\n\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\treturn commentThread;\n\t}\n\n\t$updateCommentThreadTemplate(threadHandle: number, range: IRange): void {\n\t\tlet thread = this._threads.get(threadHandle);\n\t\tif (thread) {\n\t\t\tthread.range = extHostTypeConverter.Range.to(range);\n\t\t}\n\t}\n\n\t$deleteCommentThread(threadHandle: number): void {\n\t\tlet thread = this._threads.get(threadHandle);\n\n\t\tif (thread) {\n\t\t\tthread.dispose();\n\t\t}\n\n\t\tthis._threads.delete(threadHandle);\n\t}\n\n\tgetCommentThread(handle: number): ExtHostCommentThread | undefined {\n\t\treturn this._threads.get(handle);\n\t}\n\n\tdispose(): void {\n\t\tthis._threads.forEach(value => {\n\t\t\tvalue.dispose();\n\t\t});\n\n\t\tthis._proxy.$unregisterCommentController(this.handle);\n\t}\n}\n\nfunction convertToModeComment(thread: ExtHostCommentThread, commentController: ExtHostCommentController, vscodeComment: vscode.Comment, commentsMap: Map<vscode.Comment, number>): modes.Comment {\n\tlet commentUniqueId = commentsMap.get(vscodeComment)!;\n\tif (!commentUniqueId) {\n\t\tcommentUniqueId = ++thread.commentHandle;\n\t\tcommentsMap.set(vscodeComment, commentUniqueId);\n\t}\n\n\tconst iconPath = vscodeComment.author && vscodeComment.author.iconPath ? vscodeComment.author.iconPath.toString() : undefined;\n\n\treturn {\n\t\tmode: vscodeComment.mode,\n\t\tcontextValue: vscodeComment.contextValue,\n\t\tuniqueIdInThread: commentUniqueId,\n\t\tbody: extHostTypeConverter.MarkdownString.from(vscodeComment.body),\n\t\tuserName: vscodeComment.author.name,\n\t\tuserIconPath: iconPath,\n\t\tlabel: vscodeComment.label,\n\t\tcommentReactions: vscodeComment.reactions ? vscodeComment.reactions.map(reaction => convertToReaction(reaction)) : undefined\n\t};\n}\n\nfunction convertToReaction(reaction: vscode.CommentReaction): modes.CommentReaction {\n\treturn {\n\t\tlabel: reaction.label,\n\t\ticonPath: reaction.iconPath ? extHostTypeConverter.pathOrURIToURI(reaction.iconPath) : undefined,\n\t\tcount: reaction.count,\n\t\thasReacted: reaction.authorHasReacted,\n\t};\n}\n\nfunction convertFromReaction(reaction: modes.CommentReaction): vscode.CommentReaction {\n\treturn {\n\t\tlabel: reaction.label || '',\n\t\tcount: reaction.count || 0,\n\t\ticonPath: reaction.iconPath ? URI.revive(reaction.iconPath) : '',\n\t\tauthorHasReacted: reaction.hasReacted || false\n\t};\n}\n\nfunction convertToCollapsibleState(kind: vscode.CommentThreadCollapsibleState | undefined): modes.CommentThreadCollapsibleState {\n\tif (kind !== undefined) {\n\t\tswitch (kind) {\n\t\t\tcase types.CommentThreadCollapsibleState.Expanded:\n\t\t\t\treturn modes.CommentThreadCollapsibleState.Expanded;\n\t\t\tcase types.CommentThreadCollapsibleState.Collapsed:\n\t\t\t\treturn modes.CommentThreadCollapsibleState.Collapsed;\n\t\t}\n\t}\n\treturn modes.CommentThreadCollapsibleState.Collapsed;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { MainContext, ExtHostDecorationsShape, MainThreadDecorationsShape, DecorationData, DecorationRequest, DecorationReply } from 'vs/workbench/api/common/extHost.protocol';\nimport { Disposable, Decoration } from 'vs/workbench/api/common/extHostTypes';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { asArray } from 'vs/base/common/arrays';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ninterface ProviderData {\n\tprovider: vscode.DecorationProvider;\n\textensionId: ExtensionIdentifier;\n}\n\nexport class ExtHostDecorations implements IExtHostDecorations {\n\n\tprivate static _handlePool = 0;\n\n\treadonly _serviceBrand: undefined;\n\tprivate readonly _provider = new Map<number, ProviderData>();\n\tprivate readonly _proxy: MainThreadDecorationsShape;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadDecorations);\n\t}\n\n\tregisterDecorationProvider(provider: vscode.DecorationProvider, extensionId: ExtensionIdentifier): vscode.Disposable {\n\t\tconst handle = ExtHostDecorations._handlePool++;\n\t\tthis._provider.set(handle, { provider, extensionId });\n\t\tthis._proxy.$registerDecorationProvider(handle, extensionId.value);\n\n\t\tconst listener = provider.onDidChangeDecorations(e => {\n\t\t\tthis._proxy.$onDidChange(handle, !e ? null : asArray(e));\n\t\t});\n\n\t\treturn new Disposable(() => {\n\t\t\tlistener.dispose();\n\t\t\tthis._proxy.$unregisterDecorationProvider(handle);\n\t\t\tthis._provider.delete(handle);\n\t\t});\n\t}\n\n\t$provideDecorations(requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply> {\n\t\tconst result: DecorationReply = Object.create(null);\n\t\treturn Promise.all(requests.map(request => {\n\t\t\tconst { handle, uri, id } = request;\n\t\t\tconst entry = this._provider.get(handle);\n\t\t\tif (!entry) {\n\t\t\t\t// might have been unregistered in the meantime\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst { provider, extensionId } = entry;\n\t\t\treturn Promise.resolve(provider.provideDecoration(URI.revive(uri), token)).then(data => {\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tDecoration.validate(data);\n\t\t\t\t\tresult[id] = <DecorationData>[data.priority, data.bubble, data.title, data.letter, data.color];\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis._logService.warn(`INVALID decoration from extension '${extensionId.value}': ${e}`);\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tthis._logService.error(err);\n\t\t\t});\n\n\t\t})).then(() => {\n\t\t\treturn result;\n\t\t});\n\t}\n}\n\nexport const IExtHostDecorations = createDecorator<IExtHostDecorations>('IExtHostDecorations');\nexport interface IExtHostDecorations extends ExtHostDecorations, ExtHostDecorationsShape { }\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IMarkerData, MarkerSeverity } from 'vs/platform/markers/common/markers';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport type * as vscode from 'vscode';\nimport { MainContext, MainThreadDiagnosticsShape, ExtHostDiagnosticsShape, IMainContext } from './extHost.protocol';\nimport { DiagnosticSeverity } from './extHostTypes';\nimport * as converter from './extHostTypeConverters';\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport class DiagnosticCollection implements vscode.DiagnosticCollection {\n\n\tprivate _isDisposed = false;\n\tprivate _data = new ResourceMap<vscode.Diagnostic[]>();\n\n\tconstructor(\n\t\tprivate readonly _name: string,\n\t\tprivate readonly _owner: string,\n\t\tprivate readonly _maxDiagnosticsPerFile: number,\n\t\tprivate readonly _proxy: MainThreadDiagnosticsShape | undefined,\n\t\tprivate readonly _onDidChangeDiagnostics: Emitter<vscode.Uri[]>\n\t) { }\n\n\tdispose(): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._onDidChangeDiagnostics.fire([...this._data.keys()]);\n\t\t\tif (this._proxy) {\n\t\t\t\tthis._proxy.$clear(this._owner);\n\t\t\t}\n\t\t\tthis._data = undefined!;\n\t\t\tthis._isDisposed = true;\n\t\t}\n\t}\n\n\tget name(): string {\n\t\tthis._checkDisposed();\n\t\treturn this._name;\n\t}\n\n\tset(uri: vscode.Uri, diagnostics: ReadonlyArray<vscode.Diagnostic>): void;\n\tset(entries: ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]>): void;\n\tset(first: vscode.Uri | ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]>, diagnostics?: ReadonlyArray<vscode.Diagnostic>) {\n\n\t\tif (!first) {\n\t\t\t// this set-call is a clear-call\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\n\t\t// the actual implementation for #set\n\n\t\tthis._checkDisposed();\n\t\tlet toSync: vscode.Uri[] = [];\n\n\t\tif (URI.isUri(first)) {\n\n\t\t\tif (!diagnostics) {\n\t\t\t\t// remove this entry\n\t\t\t\tthis.delete(first);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// update single row\n\t\t\tthis._data.set(first, diagnostics.slice());\n\t\t\ttoSync = [first];\n\n\t\t} else if (Array.isArray(first)) {\n\t\t\t// update many rows\n\t\t\ttoSync = [];\n\t\t\tlet lastUri: vscode.Uri | undefined;\n\n\t\t\t// ensure stable-sort\n\t\t\tmergeSort(first, DiagnosticCollection._compareIndexedTuplesByUri);\n\n\t\t\tfor (const tuple of first) {\n\t\t\t\tconst [uri, diagnostics] = tuple;\n\t\t\t\tif (!lastUri || uri.toString() !== lastUri.toString()) {\n\t\t\t\t\tif (lastUri && this._data.get(lastUri)!.length === 0) {\n\t\t\t\t\t\tthis._data.delete(lastUri);\n\t\t\t\t\t}\n\t\t\t\t\tlastUri = uri;\n\t\t\t\t\ttoSync.push(uri);\n\t\t\t\t\tthis._data.set(uri.toString(), []);\n\t\t\t\t}\n\n\t\t\t\tif (!diagnostics) {\n\t\t\t\t\t// [Uri, undefined] means clear this\n\t\t\t\t\tconst currentDiagnostics = this._data.get(uri.toString());\n\t\t\t\t\tif (currentDiagnostics) {\n\t\t\t\t\t\tcurrentDiagnostics.length = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst currentDiagnostics = this._data.get(uri.toString());\n\t\t\t\t\tif (currentDiagnostics) {\n\t\t\t\t\t\tcurrentDiagnostics.push(...diagnostics);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// send event for extensions\n\t\tthis._onDidChangeDiagnostics.fire(toSync);\n\n\t\t// compute change and send to main side\n\t\tif (!this._proxy) {\n\t\t\treturn;\n\t\t}\n\t\tconst entries: [URI, IMarkerData[]][] = [];\n\t\tfor (let uri of toSync) {\n\t\t\tlet marker: IMarkerData[] = [];\n\t\t\tconst diagnostics = this._data.get(uri);\n\t\t\tif (diagnostics) {\n\n\t\t\t\t// no more than N diagnostics per file\n\t\t\t\tif (diagnostics.length > this._maxDiagnosticsPerFile) {\n\t\t\t\t\tmarker = [];\n\t\t\t\t\tconst order = [DiagnosticSeverity.Error, DiagnosticSeverity.Warning, DiagnosticSeverity.Information, DiagnosticSeverity.Hint];\n\t\t\t\t\torderLoop: for (let i = 0; i < 4; i++) {\n\t\t\t\t\t\tfor (let diagnostic of diagnostics) {\n\t\t\t\t\t\t\tif (diagnostic.severity === order[i]) {\n\t\t\t\t\t\t\t\tconst len = marker.push(converter.Diagnostic.from(diagnostic));\n\t\t\t\t\t\t\t\tif (len === this._maxDiagnosticsPerFile) {\n\t\t\t\t\t\t\t\t\tbreak orderLoop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add 'signal' marker for showing omitted errors/warnings\n\t\t\t\t\tmarker.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Info,\n\t\t\t\t\t\tmessage: localize({ key: 'limitHit', comment: ['amount of errors/warning skipped due to limits'] }, \"Not showing {0} further errors and warnings.\", diagnostics.length - this._maxDiagnosticsPerFile),\n\t\t\t\t\t\tstartLineNumber: marker[marker.length - 1].startLineNumber,\n\t\t\t\t\t\tstartColumn: marker[marker.length - 1].startColumn,\n\t\t\t\t\t\tendLineNumber: marker[marker.length - 1].endLineNumber,\n\t\t\t\t\t\tendColumn: marker[marker.length - 1].endColumn\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmarker = diagnostics.map(diag => converter.Diagnostic.from(diag));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tentries.push([uri, marker]);\n\t\t}\n\t\tthis._proxy.$changeMany(this._owner, entries);\n\t}\n\n\tdelete(uri: vscode.Uri): void {\n\t\tthis._checkDisposed();\n\t\tthis._onDidChangeDiagnostics.fire([uri]);\n\t\tthis._data.delete(uri);\n\t\tif (this._proxy) {\n\t\t\tthis._proxy.$changeMany(this._owner, [[uri, undefined]]);\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._checkDisposed();\n\t\tthis._onDidChangeDiagnostics.fire([...this._data.keys()]);\n\t\tthis._data.clear();\n\t\tif (this._proxy) {\n\t\t\tthis._proxy.$clear(this._owner);\n\t\t}\n\t}\n\n\tforEach(callback: (uri: URI, diagnostics: ReadonlyArray<vscode.Diagnostic>, collection: DiagnosticCollection) => any, thisArg?: any): void {\n\t\tthis._checkDisposed();\n\t\tthis._data.forEach((value, uri) => {\n\t\t\tcallback.apply(thisArg, [uri, this.get(uri), this]);\n\t\t});\n\t}\n\n\tget(uri: URI): ReadonlyArray<vscode.Diagnostic> {\n\t\tthis._checkDisposed();\n\t\tconst result = this._data.get(uri);\n\t\tif (Array.isArray(result)) {\n\t\t\treturn <ReadonlyArray<vscode.Diagnostic>>Object.freeze(result.slice(0));\n\t\t}\n\t\treturn [];\n\t}\n\n\thas(uri: URI): boolean {\n\t\tthis._checkDisposed();\n\t\treturn Array.isArray(this._data.get(uri));\n\t}\n\n\tprivate _checkDisposed() {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('illegal state - object is disposed');\n\t\t}\n\t}\n\n\tprivate static _compareIndexedTuplesByUri(a: [vscode.Uri, vscode.Diagnostic[]], b: [vscode.Uri, vscode.Diagnostic[]]): number {\n\t\tif (a[0].toString() < b[0].toString()) {\n\t\t\treturn -1;\n\t\t} else if (a[0].toString() > b[0].toString()) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nexport class ExtHostDiagnostics implements ExtHostDiagnosticsShape {\n\n\tprivate static _idPool: number = 0;\n\tprivate static readonly _maxDiagnosticsPerFile: number = 1000;\n\n\tprivate readonly _proxy: MainThreadDiagnosticsShape;\n\tprivate readonly _collections = new Map<string, DiagnosticCollection>();\n\tprivate readonly _onDidChangeDiagnostics = new Emitter<vscode.Uri[]>();\n\n\tstatic _debouncer(last: (vscode.Uri | string)[] | undefined, current: (vscode.Uri | string)[]): (vscode.Uri | string)[] {\n\t\tif (!last) {\n\t\t\treturn current;\n\t\t} else {\n\t\t\treturn last.concat(current);\n\t\t}\n\t}\n\n\tstatic _mapper(last: (vscode.Uri | string)[]): { uris: vscode.Uri[] } {\n\t\tconst uris: vscode.Uri[] = [];\n\t\tconst map = new Set<string>();\n\t\tfor (const uri of last) {\n\t\t\tif (typeof uri === 'string') {\n\t\t\t\tif (!map.has(uri)) {\n\t\t\t\t\tmap.add(uri);\n\t\t\t\t\turis.push(URI.parse(uri));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!map.has(uri.toString())) {\n\t\t\t\t\tmap.add(uri.toString());\n\t\t\t\t\turis.push(uri);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tObject.freeze(uris);\n\t\treturn { uris };\n\t}\n\n\treadonly onDidChangeDiagnostics: Event<vscode.DiagnosticChangeEvent> = Event.map(Event.debounce(this._onDidChangeDiagnostics.event, ExtHostDiagnostics._debouncer, 50), ExtHostDiagnostics._mapper);\n\n\tconstructor(mainContext: IMainContext, @ILogService private readonly _logService: ILogService) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDiagnostics);\n\t}\n\n\tcreateDiagnosticCollection(extensionId: ExtensionIdentifier, name?: string): vscode.DiagnosticCollection {\n\n\t\tconst { _collections, _proxy, _onDidChangeDiagnostics, _logService } = this;\n\n\t\tconst loggingProxy = new class implements MainThreadDiagnosticsShape {\n\t\t\t$changeMany(owner: string, entries: [UriComponents, IMarkerData[] | undefined][]): void {\n\t\t\t\t_proxy.$changeMany(owner, entries);\n\t\t\t\t_logService.trace('[DiagnosticCollection] change many (extension, owner, uris)', extensionId.value, owner, entries.length === 0 ? 'CLEARING' : entries);\n\t\t\t}\n\t\t\t$clear(owner: string): void {\n\t\t\t\t_proxy.$clear(owner);\n\t\t\t\t_logService.trace('[DiagnosticCollection] remove all (extension, owner)', extensionId.value, owner);\n\t\t\t}\n\t\t\tdispose(): void {\n\t\t\t\t_proxy.dispose();\n\t\t\t}\n\t\t};\n\n\n\t\tlet owner: string;\n\t\tif (!name) {\n\t\t\tname = '_generated_diagnostic_collection_name_#' + ExtHostDiagnostics._idPool++;\n\t\t\towner = name;\n\t\t} else if (!_collections.has(name)) {\n\t\t\towner = name;\n\t\t} else {\n\t\t\tthis._logService.warn(`DiagnosticCollection with name '${name}' does already exist.`);\n\t\t\tdo {\n\t\t\t\towner = name + ExtHostDiagnostics._idPool++;\n\t\t\t} while (_collections.has(owner));\n\t\t}\n\n\t\tconst result = new class extends DiagnosticCollection {\n\t\t\tconstructor() {\n\t\t\t\tsuper(name!, owner, ExtHostDiagnostics._maxDiagnosticsPerFile, loggingProxy, _onDidChangeDiagnostics);\n\t\t\t\t_collections.set(owner, this);\n\t\t\t}\n\t\t\tdispose() {\n\t\t\t\tsuper.dispose();\n\t\t\t\t_collections.delete(owner);\n\t\t\t}\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tgetDiagnostics(resource: vscode.Uri): ReadonlyArray<vscode.Diagnostic>;\n\tgetDiagnostics(): ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]>;\n\tgetDiagnostics(resource?: vscode.Uri): ReadonlyArray<vscode.Diagnostic> | ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]>;\n\tgetDiagnostics(resource?: vscode.Uri): ReadonlyArray<vscode.Diagnostic> | ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]> {\n\t\tif (resource) {\n\t\t\treturn this._getDiagnostics(resource);\n\t\t} else {\n\t\t\tconst index = new Map<string, number>();\n\t\t\tconst res: [vscode.Uri, vscode.Diagnostic[]][] = [];\n\t\t\tthis._collections.forEach(collection => {\n\t\t\t\tcollection.forEach((uri, diagnostics) => {\n\t\t\t\t\tlet idx = index.get(uri.toString());\n\t\t\t\t\tif (typeof idx === 'undefined') {\n\t\t\t\t\t\tidx = res.length;\n\t\t\t\t\t\tindex.set(uri.toString(), idx);\n\t\t\t\t\t\tres.push([uri, []]);\n\t\t\t\t\t}\n\t\t\t\t\tres[idx][1] = res[idx][1].concat(...diagnostics);\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _getDiagnostics(resource: vscode.Uri): ReadonlyArray<vscode.Diagnostic> {\n\t\tlet res: vscode.Diagnostic[] = [];\n\t\tthis._collections.forEach(collection => {\n\t\t\tif (collection.has(resource)) {\n\t\t\t\tres = res.concat(collection.get(resource));\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\tprivate _mirrorCollection: vscode.DiagnosticCollection | undefined;\n\n\t$acceptMarkersChange(data: [UriComponents, IMarkerData[]][]): void {\n\n\t\tif (!this._mirrorCollection) {\n\t\t\tconst name = '_generated_mirror';\n\t\t\tconst collection = new DiagnosticCollection(name, name, ExtHostDiagnostics._maxDiagnosticsPerFile, undefined, this._onDidChangeDiagnostics);\n\t\t\tthis._collections.set(name, collection);\n\t\t\tthis._mirrorCollection = collection;\n\t\t}\n\n\t\tfor (const [uri, markers] of data) {\n\t\t\tthis._mirrorCollection.set(URI.revive(uri), markers.map(converter.Diagnostic.to));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { MainContext, MainThreadDiaglogsShape, IMainContext } from 'vs/workbench/api/common/extHost.protocol';\n\nexport class ExtHostDialogs {\n\n\tprivate readonly _proxy: MainThreadDiaglogsShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDialogs);\n\t}\n\n\tshowOpenDialog(options: vscode.OpenDialogOptions): Promise<URI[] | undefined> {\n\t\treturn this._proxy.$showOpenDialog(options).then(filepaths => {\n\t\t\treturn filepaths ? filepaths.map(p => URI.revive(p)) : undefined;\n\t\t});\n\t}\n\n\tshowSaveDialog(options: vscode.SaveDialogOptions): Promise<URI | undefined> {\n\t\treturn this._proxy.$showSaveDialog(options).then(filepath => {\n\t\t\treturn filepath ? URI.revive(filepath) : undefined;\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Disposable } from 'vs/workbench/api/common/extHostTypes';\nimport type * as vscode from 'vscode';\nimport { MainContext, ExtHostDocumentContentProvidersShape, MainThreadDocumentContentProvidersShape, IMainContext } from './extHost.protocol';\nimport { ExtHostDocumentsAndEditors } from './extHostDocumentsAndEditors';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport class ExtHostDocumentContentProvider implements ExtHostDocumentContentProvidersShape {\n\n\tprivate static _handlePool = 0;\n\n\tprivate readonly _documentContentProviders = new Map<number, vscode.TextDocumentContentProvider>();\n\tprivate readonly _proxy: MainThreadDocumentContentProvidersShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _documentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDocumentContentProviders);\n\t}\n\n\tregisterTextDocumentContentProvider(scheme: string, provider: vscode.TextDocumentContentProvider): vscode.Disposable {\n\t\t// todo@remote\n\t\t// check with scheme from fs-providers!\n\t\tif (Object.keys(Schemas).indexOf(scheme) >= 0) {\n\t\t\tthrow new Error(`scheme '${scheme}' already registered`);\n\t\t}\n\n\t\tconst handle = ExtHostDocumentContentProvider._handlePool++;\n\n\t\tthis._documentContentProviders.set(handle, provider);\n\t\tthis._proxy.$registerTextContentProvider(handle, scheme);\n\n\t\tlet subscription: IDisposable | undefined;\n\t\tif (typeof provider.onDidChange === 'function') {\n\t\t\tsubscription = provider.onDidChange(uri => {\n\t\t\t\tif (uri.scheme !== scheme) {\n\t\t\t\t\tthis._logService.warn(`Provider for scheme '${scheme}' is firing event for schema '${uri.scheme}' which will be IGNORED`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this._documentsAndEditors.getDocument(uri)) {\n\t\t\t\t\tthis.$provideTextDocumentContent(handle, uri).then(value => {\n\t\t\t\t\t\tif (!value && typeof value !== 'string') {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst document = this._documentsAndEditors.getDocument(uri);\n\t\t\t\t\t\tif (!document) {\n\t\t\t\t\t\t\t// disposed in the meantime\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// create lines and compare\n\t\t\t\t\t\tconst lines = value.split(/\\r\\n|\\r|\\n/);\n\n\t\t\t\t\t\t// broadcast event when content changed\n\t\t\t\t\t\tif (!document.equalLines(lines)) {\n\t\t\t\t\t\t\treturn this._proxy.$onVirtualDocumentChange(uri, value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, onUnexpectedError);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn new Disposable(() => {\n\t\t\tif (this._documentContentProviders.delete(handle)) {\n\t\t\t\tthis._proxy.$unregisterTextContentProvider(handle);\n\t\t\t}\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.dispose();\n\t\t\t\tsubscription = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\t$provideTextDocumentContent(handle: number, uri: UriComponents): Promise<string | null | undefined> {\n\t\tconst provider = this._documentContentProviders.get(handle);\n\t\tif (!provider) {\n\t\t\treturn Promise.reject(new Error(`unsupported uri-scheme: ${uri.scheme}`));\n\t\t}\n\t\treturn Promise.resolve(provider.provideTextDocumentContent(URI.revive(uri), CancellationToken.None));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IModelChangedEvent } from 'vs/editor/common/model/mirrorTextModel';\nimport { ExtHostDocumentsShape, IMainContext, MainContext, MainThreadDocumentsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocumentData, setWordDefinitionFor } from 'vs/workbench/api/common/extHostDocumentData';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport * as TypeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport type * as vscode from 'vscode';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { deepFreeze } from 'vs/base/common/objects';\n\nexport class ExtHostDocuments implements ExtHostDocumentsShape {\n\n\tprivate readonly _onDidAddDocument = new Emitter<vscode.TextDocument>();\n\tprivate readonly _onDidRemoveDocument = new Emitter<vscode.TextDocument>();\n\tprivate readonly _onDidChangeDocument = new Emitter<vscode.TextDocumentChangeEvent>();\n\tprivate readonly _onDidSaveDocument = new Emitter<vscode.TextDocument>();\n\n\treadonly onDidAddDocument: Event<vscode.TextDocument> = this._onDidAddDocument.event;\n\treadonly onDidRemoveDocument: Event<vscode.TextDocument> = this._onDidRemoveDocument.event;\n\treadonly onDidChangeDocument: Event<vscode.TextDocumentChangeEvent> = this._onDidChangeDocument.event;\n\treadonly onDidSaveDocument: Event<vscode.TextDocument> = this._onDidSaveDocument.event;\n\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _proxy: MainThreadDocumentsShape;\n\tprivate _documentsAndEditors: ExtHostDocumentsAndEditors;\n\tprivate _documentLoader = new Map<string, Promise<ExtHostDocumentData>>();\n\n\tconstructor(mainContext: IMainContext, documentsAndEditors: ExtHostDocumentsAndEditors) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDocuments);\n\t\tthis._documentsAndEditors = documentsAndEditors;\n\n\t\tthis._documentsAndEditors.onDidRemoveDocuments(documents => {\n\t\t\tfor (const data of documents) {\n\t\t\t\tthis._onDidRemoveDocument.fire(data.document);\n\t\t\t}\n\t\t}, undefined, this._toDispose);\n\t\tthis._documentsAndEditors.onDidAddDocuments(documents => {\n\t\t\tfor (const data of documents) {\n\t\t\t\tthis._onDidAddDocument.fire(data.document);\n\t\t\t}\n\t\t}, undefined, this._toDispose);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose.dispose();\n\t}\n\n\tpublic getAllDocumentData(): ExtHostDocumentData[] {\n\t\treturn this._documentsAndEditors.allDocuments();\n\t}\n\n\tpublic getDocumentData(resource: vscode.Uri): ExtHostDocumentData | undefined {\n\t\tif (!resource) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst data = this._documentsAndEditors.getDocument(resource);\n\t\tif (data) {\n\t\t\treturn data;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic getDocument(resource: vscode.Uri): vscode.TextDocument {\n\t\tconst data = this.getDocumentData(resource);\n\t\tif (!data || !data.document) {\n\t\t\tthrow new Error('Unable to retrieve document from URI');\n\t\t}\n\t\treturn data.document;\n\t}\n\n\tpublic ensureDocumentData(uri: URI): Promise<ExtHostDocumentData> {\n\n\t\tconst cached = this._documentsAndEditors.getDocument(uri);\n\t\tif (cached) {\n\t\t\treturn Promise.resolve(cached);\n\t\t}\n\n\t\tlet promise = this._documentLoader.get(uri.toString());\n\t\tif (!promise) {\n\t\t\tpromise = this._proxy.$tryOpenDocument(uri).then(() => {\n\t\t\t\tthis._documentLoader.delete(uri.toString());\n\t\t\t\treturn assertIsDefined(this._documentsAndEditors.getDocument(uri));\n\t\t\t}, err => {\n\t\t\t\tthis._documentLoader.delete(uri.toString());\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t\tthis._documentLoader.set(uri.toString(), promise);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\tpublic createDocumentData(options?: { language?: string; content?: string }): Promise<URI> {\n\t\treturn this._proxy.$tryCreateDocument(options).then(data => URI.revive(data));\n\t}\n\n\tpublic $acceptModelModeChanged(uriComponents: UriComponents, oldModeId: string, newModeId: string): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\t// Treat a mode change as a remove + add\n\n\t\tthis._onDidRemoveDocument.fire(data.document);\n\t\tdata._acceptLanguageId(newModeId);\n\t\tthis._onDidAddDocument.fire(data.document);\n\t}\n\n\tpublic $acceptModelSaved(uriComponents: UriComponents): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tthis.$acceptDirtyStateChanged(uriComponents, false);\n\t\tthis._onDidSaveDocument.fire(data.document);\n\t}\n\n\tpublic $acceptDirtyStateChanged(uriComponents: UriComponents, isDirty: boolean): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tdata._acceptIsDirty(isDirty);\n\t\tthis._onDidChangeDocument.fire({\n\t\t\tdocument: data.document,\n\t\t\tcontentChanges: []\n\t\t});\n\t}\n\n\tpublic $acceptModelChanged(uriComponents: UriComponents, events: IModelChangedEvent, isDirty: boolean): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tdata._acceptIsDirty(isDirty);\n\t\tdata.onEvents(events);\n\t\tthis._onDidChangeDocument.fire(deepFreeze({\n\t\t\tdocument: data.document,\n\t\t\tcontentChanges: events.changes.map((change) => {\n\t\t\t\treturn {\n\t\t\t\t\trange: TypeConverters.Range.to(change.range),\n\t\t\t\t\trangeOffset: change.rangeOffset,\n\t\t\t\t\trangeLength: change.rangeLength,\n\t\t\t\t\ttext: change.text\n\t\t\t\t};\n\t\t\t})\n\t\t}));\n\t}\n\n\tpublic setWordDefinitionFor(modeId: string, wordDefinition: RegExp | undefined): void {\n\t\tsetWordDefinitionFor(modeId, wordDefinition);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'vs/base/common/assert';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostDocumentsAndEditorsShape, IDocumentsAndEditorsDelta, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocumentData } from 'vs/workbench/api/common/extHostDocumentData';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ExtHostTextEditor } from 'vs/workbench/api/common/extHostTextEditor';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class ExtHostDocumentsAndEditors implements ExtHostDocumentsAndEditorsShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _activeEditorId: string | null = null;\n\n\tprivate readonly _editors = new Map<string, ExtHostTextEditor>();\n\tprivate readonly _documents = new Map<string, ExtHostDocumentData>();\n\n\tprivate readonly _onDidAddDocuments = new Emitter<ExtHostDocumentData[]>();\n\tprivate readonly _onDidRemoveDocuments = new Emitter<ExtHostDocumentData[]>();\n\tprivate readonly _onDidChangeVisibleTextEditors = new Emitter<ExtHostTextEditor[]>();\n\tprivate readonly _onDidChangeActiveTextEditor = new Emitter<ExtHostTextEditor | undefined>();\n\n\treadonly onDidAddDocuments: Event<ExtHostDocumentData[]> = this._onDidAddDocuments.event;\n\treadonly onDidRemoveDocuments: Event<ExtHostDocumentData[]> = this._onDidRemoveDocuments.event;\n\treadonly onDidChangeVisibleTextEditors: Event<ExtHostTextEditor[]> = this._onDidChangeVisibleTextEditors.event;\n\treadonly onDidChangeActiveTextEditor: Event<ExtHostTextEditor | undefined> = this._onDidChangeActiveTextEditor.event;\n\n\tconstructor(\n\t\t@IExtHostRpcService private readonly _extHostRpc: IExtHostRpcService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) { }\n\n\t$acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void {\n\n\t\tconst removedDocuments: ExtHostDocumentData[] = [];\n\t\tconst addedDocuments: ExtHostDocumentData[] = [];\n\t\tconst removedEditors: ExtHostTextEditor[] = [];\n\n\t\tif (delta.removedDocuments) {\n\t\t\tfor (const uriComponent of delta.removedDocuments) {\n\t\t\t\tconst uri = URI.revive(uriComponent);\n\t\t\t\tconst id = uri.toString();\n\t\t\t\tconst data = this._documents.get(id);\n\t\t\t\tthis._documents.delete(id);\n\t\t\t\tif (data) {\n\t\t\t\t\tremovedDocuments.push(data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.addedDocuments) {\n\t\t\tfor (const data of delta.addedDocuments) {\n\t\t\t\tconst resource = URI.revive(data.uri);\n\t\t\t\tassert.ok(!this._documents.has(resource.toString()), `document '${resource} already exists!'`);\n\n\t\t\t\tconst documentData = new ExtHostDocumentData(\n\t\t\t\t\tthis._extHostRpc.getProxy(MainContext.MainThreadDocuments),\n\t\t\t\t\tresource,\n\t\t\t\t\tdata.lines,\n\t\t\t\t\tdata.EOL,\n\t\t\t\t\tdata.modeId,\n\t\t\t\t\tdata.versionId,\n\t\t\t\t\tdata.isDirty\n\t\t\t\t);\n\t\t\t\tthis._documents.set(resource.toString(), documentData);\n\t\t\t\taddedDocuments.push(documentData);\n\t\t\t}\n\t\t}\n\n\t\tif (delta.removedEditors) {\n\t\t\tfor (const id of delta.removedEditors) {\n\t\t\t\tconst editor = this._editors.get(id);\n\t\t\t\tthis._editors.delete(id);\n\t\t\t\tif (editor) {\n\t\t\t\t\tremovedEditors.push(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.addedEditors) {\n\t\t\tfor (const data of delta.addedEditors) {\n\t\t\t\tconst resource = URI.revive(data.documentUri);\n\t\t\t\tassert.ok(this._documents.has(resource.toString()), `document '${resource}' does not exist`);\n\t\t\t\tassert.ok(!this._editors.has(data.id), `editor '${data.id}' already exists!`);\n\n\t\t\t\tconst documentData = this._documents.get(resource.toString())!;\n\t\t\t\tconst editor = new ExtHostTextEditor(\n\t\t\t\t\tdata.id,\n\t\t\t\t\tthis._extHostRpc.getProxy(MainContext.MainThreadTextEditors),\n\t\t\t\t\tthis._logService,\n\t\t\t\t\tdocumentData,\n\t\t\t\t\tdata.selections.map(typeConverters.Selection.to),\n\t\t\t\t\tdata.options,\n\t\t\t\t\tdata.visibleRanges.map(range => typeConverters.Range.to(range)),\n\t\t\t\t\ttypeof data.editorPosition === 'number' ? typeConverters.ViewColumn.to(data.editorPosition) : undefined\n\t\t\t\t);\n\t\t\t\tthis._editors.set(data.id, editor);\n\t\t\t}\n\t\t}\n\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tassert.ok(delta.newActiveEditor === null || this._editors.has(delta.newActiveEditor), `active editor '${delta.newActiveEditor}' does not exist`);\n\t\t\tthis._activeEditorId = delta.newActiveEditor;\n\t\t}\n\n\t\tdispose(removedDocuments);\n\t\tdispose(removedEditors);\n\n\t\t// now that the internal state is complete, fire events\n\t\tif (delta.removedDocuments) {\n\t\t\tthis._onDidRemoveDocuments.fire(removedDocuments);\n\t\t}\n\t\tif (delta.addedDocuments) {\n\t\t\tthis._onDidAddDocuments.fire(addedDocuments);\n\t\t}\n\n\t\tif (delta.removedEditors || delta.addedEditors) {\n\t\t\tthis._onDidChangeVisibleTextEditors.fire(this.allEditors());\n\t\t}\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tthis._onDidChangeActiveTextEditor.fire(this.activeEditor());\n\t\t}\n\t}\n\n\tgetDocument(uri: URI): ExtHostDocumentData | undefined {\n\t\treturn this._documents.get(uri.toString());\n\t}\n\n\tallDocuments(): ExtHostDocumentData[] {\n\t\tconst result: ExtHostDocumentData[] = [];\n\t\tthis._documents.forEach(data => result.push(data));\n\t\treturn result;\n\t}\n\n\tgetEditor(id: string): ExtHostTextEditor | undefined {\n\t\treturn this._editors.get(id);\n\t}\n\n\tactiveEditor(): ExtHostTextEditor | undefined {\n\t\tif (!this._activeEditorId) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn this._editors.get(this._activeEditorId);\n\t\t}\n\t}\n\n\tallEditors(): ExtHostTextEditor[] {\n\t\tconst result: ExtHostTextEditor[] = [];\n\t\tthis._editors.forEach(data => result.push(data));\n\t\treturn result;\n\t}\n}\n\nexport interface IExtHostDocumentsAndEditors extends ExtHostDocumentsAndEditors { }\nexport const IExtHostDocumentsAndEditors = createDecorator<IExtHostDocumentsAndEditors>('IExtHostDocumentsAndEditors');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MainContext, IMainContext, ExtHostFileSystemShape, MainThreadFileSystemShape, IFileChangeDto } from './extHost.protocol';\nimport type * as vscode from 'vscode';\nimport * as files from 'vs/platform/files/common/files';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { FileChangeType, FileSystemError } from 'vs/workbench/api/common/extHostTypes';\nimport * as typeConverter from 'vs/workbench/api/common/extHostTypeConverters';\nimport { ExtHostLanguageFeatures } from 'vs/workbench/api/common/extHostLanguageFeatures';\nimport { Schemas } from 'vs/base/common/network';\nimport { State, StateMachine, LinkComputer, Edge } from 'vs/editor/common/modes/linkComputer';\nimport { commonPrefixLength } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nclass FsLinkProvider {\n\n\tprivate _schemes: string[] = [];\n\tprivate _stateMachine?: StateMachine;\n\n\tadd(scheme: string): void {\n\t\tthis._stateMachine = undefined;\n\t\tthis._schemes.push(scheme);\n\t}\n\n\tdelete(scheme: string): void {\n\t\tconst idx = this._schemes.indexOf(scheme);\n\t\tif (idx >= 0) {\n\t\t\tthis._schemes.splice(idx, 1);\n\t\t\tthis._stateMachine = undefined;\n\t\t}\n\t}\n\n\tprivate _initStateMachine(): void {\n\t\tif (!this._stateMachine) {\n\n\t\t\t// sort and compute common prefix with previous scheme\n\t\t\t// then build state transitions based on the data\n\t\t\tconst schemes = this._schemes.sort();\n\t\t\tconst edges: Edge[] = [];\n\t\t\tlet prevScheme: string | undefined;\n\t\t\tlet prevState: State;\n\t\t\tlet lastState = State.LastKnownState;\n\t\t\tlet nextState = State.LastKnownState;\n\t\t\tfor (const scheme of schemes) {\n\n\t\t\t\t// skip the common prefix of the prev scheme\n\t\t\t\t// and continue with its last state\n\t\t\t\tlet pos = !prevScheme ? 0 : commonPrefixLength(prevScheme, scheme);\n\t\t\t\tif (pos === 0) {\n\t\t\t\t\tprevState = State.Start;\n\t\t\t\t} else {\n\t\t\t\t\tprevState = nextState;\n\t\t\t\t}\n\n\t\t\t\tfor (; pos < scheme.length; pos++) {\n\t\t\t\t\t// keep creating new (next) states until the\n\t\t\t\t\t// end (and the BeforeColon-state) is reached\n\t\t\t\t\tif (pos + 1 === scheme.length) {\n\t\t\t\t\t\t// Save the last state here, because we need to continue for the next scheme\n\t\t\t\t\t\tlastState = nextState;\n\t\t\t\t\t\tnextState = State.BeforeColon;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextState += 1;\n\t\t\t\t\t}\n\t\t\t\t\tedges.push([prevState, scheme.toUpperCase().charCodeAt(pos), nextState]);\n\t\t\t\t\tedges.push([prevState, scheme.toLowerCase().charCodeAt(pos), nextState]);\n\t\t\t\t\tprevState = nextState;\n\t\t\t\t}\n\n\t\t\t\tprevScheme = scheme;\n\t\t\t\t// Restore the last state\n\t\t\t\tnextState = lastState;\n\t\t\t}\n\n\t\t\t// all link must match this pattern `<scheme>:/<more>`\n\t\t\tedges.push([State.BeforeColon, CharCode.Colon, State.AfterColon]);\n\t\t\tedges.push([State.AfterColon, CharCode.Slash, State.End]);\n\n\t\t\tthis._stateMachine = new StateMachine(edges);\n\t\t}\n\t}\n\n\tprovideDocumentLinks(document: vscode.TextDocument): vscode.ProviderResult<vscode.DocumentLink[]> {\n\t\tthis._initStateMachine();\n\n\t\tconst result: vscode.DocumentLink[] = [];\n\t\tconst links = LinkComputer.computeLinks({\n\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\treturn document.lineAt(lineNumber - 1).text;\n\t\t\t},\n\t\t\tgetLineCount(): number {\n\t\t\t\treturn document.lineCount;\n\t\t\t}\n\t\t}, this._stateMachine);\n\n\t\tfor (const link of links) {\n\t\t\tconst docLink = typeConverter.DocumentLink.to(link);\n\t\t\tif (docLink.target) {\n\t\t\t\tresult.push(docLink);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nclass ConsumerFileSystem implements vscode.FileSystem {\n\n\tconstructor(private _proxy: MainThreadFileSystemShape) { }\n\n\tstat(uri: vscode.Uri): Promise<vscode.FileStat> {\n\t\treturn this._proxy.$stat(uri).catch(ConsumerFileSystem._handleError);\n\t}\n\treadDirectory(uri: vscode.Uri): Promise<[string, vscode.FileType][]> {\n\t\treturn this._proxy.$readdir(uri).catch(ConsumerFileSystem._handleError);\n\t}\n\tcreateDirectory(uri: vscode.Uri): Promise<void> {\n\t\treturn this._proxy.$mkdir(uri).catch(ConsumerFileSystem._handleError);\n\t}\n\tasync readFile(uri: vscode.Uri): Promise<Uint8Array> {\n\t\treturn this._proxy.$readFile(uri).then(buff => buff.buffer).catch(ConsumerFileSystem._handleError);\n\t}\n\twriteFile(uri: vscode.Uri, content: Uint8Array): Promise<void> {\n\t\treturn this._proxy.$writeFile(uri, VSBuffer.wrap(content)).catch(ConsumerFileSystem._handleError);\n\t}\n\tdelete(uri: vscode.Uri, options?: { recursive?: boolean; useTrash?: boolean; }): Promise<void> {\n\t\treturn this._proxy.$delete(uri, { ...{ recursive: false, useTrash: false }, ...options }).catch(ConsumerFileSystem._handleError);\n\t}\n\trename(oldUri: vscode.Uri, newUri: vscode.Uri, options?: { overwrite?: boolean; }): Promise<void> {\n\t\treturn this._proxy.$rename(oldUri, newUri, { ...{ overwrite: false }, ...options }).catch(ConsumerFileSystem._handleError);\n\t}\n\tcopy(source: vscode.Uri, destination: vscode.Uri, options?: { overwrite?: boolean }): Promise<void> {\n\t\treturn this._proxy.$copy(source, destination, { ...{ overwrite: false }, ...options }).catch(ConsumerFileSystem._handleError);\n\t}\n\tprivate static _handleError(err: any): never {\n\t\t// generic error\n\t\tif (!(err instanceof Error)) {\n\t\t\tthrow new FileSystemError(String(err));\n\t\t}\n\n\t\t// no provider (unknown scheme) error\n\t\tif (err.name === 'ENOPRO') {\n\t\t\tthrow FileSystemError.Unavailable(err.message);\n\t\t}\n\n\t\t// file system error\n\t\tswitch (err.name) {\n\t\t\tcase files.FileSystemProviderErrorCode.FileExists: throw FileSystemError.FileExists(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileNotFound: throw FileSystemError.FileNotFound(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileNotADirectory: throw FileSystemError.FileNotADirectory(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileIsADirectory: throw FileSystemError.FileIsADirectory(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.NoPermissions: throw FileSystemError.NoPermissions(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.Unavailable: throw FileSystemError.Unavailable(err.message);\n\n\t\t\tdefault: throw new FileSystemError(err.message, err.name as files.FileSystemProviderErrorCode);\n\t\t}\n\t}\n}\n\nexport class ExtHostFileSystem implements ExtHostFileSystemShape {\n\n\tprivate readonly _proxy: MainThreadFileSystemShape;\n\tprivate readonly _linkProvider = new FsLinkProvider();\n\tprivate readonly _fsProvider = new Map<number, vscode.FileSystemProvider>();\n\tprivate readonly _usedSchemes = new Set<string>();\n\tprivate readonly _watches = new Map<number, IDisposable>();\n\n\tprivate _linkProviderRegistration?: IDisposable;\n\tprivate _handlePool: number = 0;\n\n\treadonly fileSystem: vscode.FileSystem;\n\n\tconstructor(mainContext: IMainContext, private _extHostLanguageFeatures: ExtHostLanguageFeatures) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadFileSystem);\n\t\tthis.fileSystem = new ConsumerFileSystem(this._proxy);\n\n\t\t// register used schemes\n\t\tObject.keys(Schemas).forEach(scheme => this._usedSchemes.add(scheme));\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._linkProviderRegistration);\n\t}\n\n\tprivate _registerLinkProviderIfNotYetRegistered(): void {\n\t\tif (!this._linkProviderRegistration) {\n\t\t\tthis._linkProviderRegistration = this._extHostLanguageFeatures.registerDocumentLinkProvider(undefined, '*', this._linkProvider);\n\t\t}\n\t}\n\n\tregisterFileSystemProvider(scheme: string, provider: vscode.FileSystemProvider, options: { isCaseSensitive?: boolean, isReadonly?: boolean } = {}) {\n\n\t\tif (this._usedSchemes.has(scheme)) {\n\t\t\tthrow new Error(`a provider for the scheme '${scheme}' is already registered`);\n\t\t}\n\n\t\t//\n\t\tthis._registerLinkProviderIfNotYetRegistered();\n\n\t\tconst handle = this._handlePool++;\n\t\tthis._linkProvider.add(scheme);\n\t\tthis._usedSchemes.add(scheme);\n\t\tthis._fsProvider.set(handle, provider);\n\n\t\tlet capabilities = files.FileSystemProviderCapabilities.FileReadWrite;\n\t\tif (options.isCaseSensitive) {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\t\tif (options.isReadonly) {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.Readonly;\n\t\t}\n\t\tif (typeof provider.copy === 'function') {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.FileFolderCopy;\n\t\t}\n\t\tif (typeof provider.open === 'function' && typeof provider.close === 'function'\n\t\t\t&& typeof provider.read === 'function' && typeof provider.write === 'function'\n\t\t) {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.FileOpenReadWriteClose;\n\t\t}\n\n\t\tthis._proxy.$registerFileSystemProvider(handle, scheme, capabilities);\n\n\t\tconst subscription = provider.onDidChangeFile(event => {\n\t\t\tconst mapped: IFileChangeDto[] = [];\n\t\t\tfor (const e of event) {\n\t\t\t\tlet { uri: resource, type } = e;\n\t\t\t\tif (resource.scheme !== scheme) {\n\t\t\t\t\t// dropping events for wrong scheme\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet newType: files.FileChangeType | undefined;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase FileChangeType.Changed:\n\t\t\t\t\t\tnewType = files.FileChangeType.UPDATED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.Created:\n\t\t\t\t\t\tnewType = files.FileChangeType.ADDED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.Deleted:\n\t\t\t\t\t\tnewType = files.FileChangeType.DELETED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Unknown FileChangeType');\n\t\t\t\t}\n\t\t\t\tmapped.push({ resource, type: newType });\n\t\t\t}\n\t\t\tthis._proxy.$onFileSystemChange(handle, mapped);\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\tsubscription.dispose();\n\t\t\tthis._linkProvider.delete(scheme);\n\t\t\tthis._usedSchemes.delete(scheme);\n\t\t\tthis._fsProvider.delete(handle);\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\tprivate static _asIStat(stat: vscode.FileStat): files.IStat {\n\t\tconst { type, ctime, mtime, size } = stat;\n\t\treturn { type, ctime, mtime, size };\n\t}\n\n\t$stat(handle: number, resource: UriComponents): Promise<files.IStat> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).stat(URI.revive(resource))).then(ExtHostFileSystem._asIStat);\n\t}\n\n\t$readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).readDirectory(URI.revive(resource)));\n\t}\n\n\t$readFile(handle: number, resource: UriComponents): Promise<VSBuffer> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).readFile(URI.revive(resource))).then(data => VSBuffer.wrap(data));\n\t}\n\n\t$writeFile(handle: number, resource: UriComponents, content: VSBuffer, opts: files.FileWriteOptions): Promise<void> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).writeFile(URI.revive(resource), content.buffer, opts));\n\t}\n\n\t$delete(handle: number, resource: UriComponents, opts: files.FileDeleteOptions): Promise<void> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).delete(URI.revive(resource), opts));\n\t}\n\n\t$rename(handle: number, oldUri: UriComponents, newUri: UriComponents, opts: files.FileOverwriteOptions): Promise<void> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).rename(URI.revive(oldUri), URI.revive(newUri), opts));\n\t}\n\n\t$copy(handle: number, oldUri: UriComponents, newUri: UriComponents, opts: files.FileOverwriteOptions): Promise<void> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.copy) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"copy\"');\n\t\t}\n\t\treturn Promise.resolve(provider.copy(URI.revive(oldUri), URI.revive(newUri), opts));\n\t}\n\n\t$mkdir(handle: number, resource: UriComponents): Promise<void> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).createDirectory(URI.revive(resource)));\n\t}\n\n\t$watch(handle: number, session: number, resource: UriComponents, opts: files.IWatchOptions): void {\n\t\tconst subscription = this._getFsProvider(handle).watch(URI.revive(resource), opts);\n\t\tthis._watches.set(session, subscription);\n\t}\n\n\t$unwatch(_handle: number, session: number): void {\n\t\tconst subscription = this._watches.get(session);\n\t\tif (subscription) {\n\t\t\tsubscription.dispose();\n\t\t\tthis._watches.delete(session);\n\t\t}\n\t}\n\n\t$open(handle: number, resource: UriComponents, opts: files.FileOpenOptions): Promise<number> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.open) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"open\"');\n\t\t}\n\t\treturn Promise.resolve(provider.open(URI.revive(resource), opts));\n\t}\n\n\t$close(handle: number, fd: number): Promise<void> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.close) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"close\"');\n\t\t}\n\t\treturn Promise.resolve(provider.close(fd));\n\t}\n\n\t$read(handle: number, fd: number, pos: number, length: number): Promise<VSBuffer> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.read) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"read\"');\n\t\t}\n\t\tconst data = VSBuffer.alloc(length);\n\t\treturn Promise.resolve(provider.read(fd, pos, data.buffer, 0, length)).then(read => {\n\t\t\treturn data.slice(0, read); // don't send zeros\n\t\t});\n\t}\n\n\t$write(handle: number, fd: number, pos: number, data: VSBuffer): Promise<number> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.write) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"write\"');\n\t\t}\n\t\treturn Promise.resolve(provider.write(fd, pos, data.buffer, 0, data.byteLength));\n\t}\n\n\tprivate _getFsProvider(handle: number): vscode.FileSystemProvider {\n\t\tconst provider = this._fsProvider.get(handle);\n\t\tif (!provider) {\n\t\t\tconst err = new Error();\n\t\t\terr.name = 'ENOPRO';\n\t\t\terr.message = `no provider`;\n\t\t\tthrow err;\n\t\t}\n\t\treturn provider;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AsyncEmitter, Emitter, Event, IWaitUntil } from 'vs/base/common/event';\nimport { IRelativePattern, parse } from 'vs/base/common/glob';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport type * as vscode from 'vscode';\nimport { ExtHostFileSystemEventServiceShape, FileSystemEvents, IMainContext, MainContext, MainThreadTextEditorsShape, IWorkspaceFileEditDto, IWorkspaceTextEditDto } from './extHost.protocol';\nimport * as typeConverter from './extHostTypeConverters';\nimport { Disposable, WorkspaceEdit } from './extHostTypes';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileOperation } from 'vs/platform/files/common/files';\nimport { flatten } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nclass FileSystemWatcher implements vscode.FileSystemWatcher {\n\n\tprivate readonly _onDidCreate = new Emitter<vscode.Uri>();\n\tprivate readonly _onDidChange = new Emitter<vscode.Uri>();\n\tprivate readonly _onDidDelete = new Emitter<vscode.Uri>();\n\tprivate _disposable: Disposable;\n\tprivate _config: number;\n\n\tget ignoreCreateEvents(): boolean {\n\t\treturn Boolean(this._config & 0b001);\n\t}\n\n\tget ignoreChangeEvents(): boolean {\n\t\treturn Boolean(this._config & 0b010);\n\t}\n\n\tget ignoreDeleteEvents(): boolean {\n\t\treturn Boolean(this._config & 0b100);\n\t}\n\n\tconstructor(dispatcher: Event<FileSystemEvents>, globPattern: string | IRelativePattern, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean) {\n\n\t\tthis._config = 0;\n\t\tif (ignoreCreateEvents) {\n\t\t\tthis._config += 0b001;\n\t\t}\n\t\tif (ignoreChangeEvents) {\n\t\t\tthis._config += 0b010;\n\t\t}\n\t\tif (ignoreDeleteEvents) {\n\t\t\tthis._config += 0b100;\n\t\t}\n\n\t\tconst parsedPattern = parse(globPattern);\n\n\t\tconst subscription = dispatcher(events => {\n\t\t\tif (!ignoreCreateEvents) {\n\t\t\t\tfor (let created of events.created) {\n\t\t\t\t\tconst uri = URI.revive(created);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidCreate.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreChangeEvents) {\n\t\t\t\tfor (let changed of events.changed) {\n\t\t\t\t\tconst uri = URI.revive(changed);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidChange.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreDeleteEvents) {\n\t\t\t\tfor (let deleted of events.deleted) {\n\t\t\t\t\tconst uri = URI.revive(deleted);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidDelete.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._disposable = Disposable.from(this._onDidCreate, this._onDidChange, this._onDidDelete, subscription);\n\t}\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n\n\tget onDidCreate(): Event<vscode.Uri> {\n\t\treturn this._onDidCreate.event;\n\t}\n\n\tget onDidChange(): Event<vscode.Uri> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tget onDidDelete(): Event<vscode.Uri> {\n\t\treturn this._onDidDelete.event;\n\t}\n}\n\ninterface IExtensionListener<E> {\n\textension: IExtensionDescription;\n\t(e: E): any;\n}\n\nexport class ExtHostFileSystemEventService implements ExtHostFileSystemEventServiceShape {\n\n\tprivate readonly _onFileSystemEvent = new Emitter<FileSystemEvents>();\n\n\tprivate readonly _onDidRenameFile = new Emitter<vscode.FileRenameEvent>();\n\tprivate readonly _onDidCreateFile = new Emitter<vscode.FileCreateEvent>();\n\tprivate readonly _onDidDeleteFile = new Emitter<vscode.FileDeleteEvent>();\n\tprivate readonly _onWillRenameFile = new AsyncEmitter<vscode.FileWillRenameEvent>();\n\tprivate readonly _onWillCreateFile = new AsyncEmitter<vscode.FileWillCreateEvent>();\n\tprivate readonly _onWillDeleteFile = new AsyncEmitter<vscode.FileWillDeleteEvent>();\n\n\treadonly onDidRenameFile: Event<vscode.FileRenameEvent> = this._onDidRenameFile.event;\n\treadonly onDidCreateFile: Event<vscode.FileCreateEvent> = this._onDidCreateFile.event;\n\treadonly onDidDeleteFile: Event<vscode.FileDeleteEvent> = this._onDidDeleteFile.event;\n\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _mainThreadTextEditors: MainThreadTextEditorsShape = mainContext.getProxy(MainContext.MainThreadTextEditors)\n\t) {\n\t\t//\n\t}\n\n\t//--- file events\n\n\tcreateFileSystemWatcher(globPattern: string | IRelativePattern, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): vscode.FileSystemWatcher {\n\t\treturn new FileSystemWatcher(this._onFileSystemEvent.event, globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents);\n\t}\n\n\t$onFileEvent(events: FileSystemEvents) {\n\t\tthis._onFileSystemEvent.fire(events);\n\t}\n\n\n\t//--- file operations\n\n\t$onDidRunFileOperation(operation: FileOperation, target: UriComponents, source: UriComponents | undefined): void {\n\t\tswitch (operation) {\n\t\t\tcase FileOperation.MOVE:\n\t\t\t\tthis._onDidRenameFile.fire(Object.freeze({ files: [{ oldUri: URI.revive(source!), newUri: URI.revive(target) }] }));\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.DELETE:\n\t\t\t\tthis._onDidDeleteFile.fire(Object.freeze({ files: [URI.revive(target)] }));\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.CREATE:\n\t\t\t\tthis._onDidCreateFile.fire(Object.freeze({ files: [URI.revive(target)] }));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t//ignore, dont send\n\t\t}\n\t}\n\n\n\tgetOnWillRenameFileEvent(extension: IExtensionDescription): Event<vscode.FileWillRenameEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillRenameFile);\n\t}\n\n\tgetOnWillCreateFileEvent(extension: IExtensionDescription): Event<vscode.FileWillCreateEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillCreateFile);\n\t}\n\n\tgetOnWillDeleteFileEvent(extension: IExtensionDescription): Event<vscode.FileWillDeleteEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillDeleteFile);\n\t}\n\n\tprivate _createWillExecuteEvent<E extends IWaitUntil>(extension: IExtensionDescription, emitter: AsyncEmitter<E>): Event<E> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: IExtensionListener<E> = function wrapped(e: E) { listener.call(thisArg, e); };\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn emitter.event(wrappedListener, undefined, disposables);\n\t\t};\n\t}\n\n\tasync $onWillRunFileOperation(operation: FileOperation, target: UriComponents, source: UriComponents | undefined, timeout: number, token: CancellationToken): Promise<any> {\n\t\tswitch (operation) {\n\t\t\tcase FileOperation.MOVE:\n\t\t\t\tawait this._fireWillEvent(this._onWillRenameFile, { files: [{ oldUri: URI.revive(source!), newUri: URI.revive(target) }] }, timeout, token);\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.DELETE:\n\t\t\t\tawait this._fireWillEvent(this._onWillDeleteFile, { files: [URI.revive(target)] }, timeout, token);\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.CREATE:\n\t\t\t\tawait this._fireWillEvent(this._onWillCreateFile, { files: [URI.revive(target)] }, timeout, token);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t//ignore, dont send\n\t\t}\n\t}\n\n\tprivate async _fireWillEvent<E extends IWaitUntil>(emitter: AsyncEmitter<E>, data: Omit<E, 'waitUntil'>, timeout: number, token: CancellationToken): Promise<any> {\n\n\t\tconst edits: WorkspaceEdit[] = [];\n\n\t\tawait emitter.fireAsync(data, token, async (thenable, listener) => {\n\t\t\t// ignore all results except for WorkspaceEdits. Those are stored in an array.\n\t\t\tconst now = Date.now();\n\t\t\tconst result = await Promise.resolve(thenable);\n\t\t\tif (result instanceof WorkspaceEdit) {\n\t\t\t\tedits.push(result);\n\t\t\t}\n\n\t\t\tif (Date.now() - now > timeout) {\n\t\t\t\tthis._logService.warn('SLOW file-participant', (<IExtensionListener<E>>listener).extension?.identifier);\n\t\t\t}\n\t\t});\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (edits.length > 0) {\n\t\t\t// flatten all WorkspaceEdits collected via waitUntil-call\n\t\t\t// and apply them in one go.\n\t\t\tconst allEdits = new Array<Array<IWorkspaceFileEditDto | IWorkspaceTextEditDto>>();\n\t\t\tfor (let edit of edits) {\n\t\t\t\tlet { edits } = typeConverter.WorkspaceEdit.from(edit, this._extHostDocumentsAndEditors);\n\t\t\t\tallEdits.push(edits);\n\t\t\t}\n\t\t\treturn this._mainThreadTextEditors.$tryApplyWorkspaceEdit({ edits: flatten(allEdits) });\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResourceLabelFormatter } from 'vs/platform/label/common/label';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { MainThreadLabelServiceShape, ExtHostLabelServiceShape, MainContext, IMainContext } from 'vs/workbench/api/common/extHost.protocol';\n\nexport class ExtHostLabelService implements ExtHostLabelServiceShape {\n\n\tprivate readonly _proxy: MainThreadLabelServiceShape;\n\tprivate _handlePool: number = 0;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadLabelService);\n\t}\n\n\t$registerResourceLabelFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tconst handle = this._handlePool++;\n\t\tthis._proxy.$registerResourceLabelFormatter(handle, formatter);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unregisterResourceLabelFormatter(handle);\n\t\t});\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { mixin } from 'vs/base/common/objects';\nimport type * as vscode from 'vscode';\nimport * as typeConvert from 'vs/workbench/api/common/extHostTypeConverters';\nimport { Range, Disposable, CompletionList, SnippetString, CodeActionKind, SymbolInformation, DocumentSymbol, SemanticTokensEdits, SemanticTokens, SemanticTokensEdit } from 'vs/workbench/api/common/extHostTypes';\nimport { ISingleEditOperation } from 'vs/editor/common/model';\nimport * as modes from 'vs/editor/common/modes';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { ExtHostCommands, CommandsConverter } from 'vs/workbench/api/common/extHostCommands';\nimport { ExtHostDiagnostics } from 'vs/workbench/api/common/extHostDiagnostics';\nimport { asPromise } from 'vs/base/common/async';\nimport * as extHostProtocol from './extHost.protocol';\nimport { regExpLeadsToEndlessLoop, regExpFlags } from 'vs/base/common/strings';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange, Range as EditorRange } from 'vs/editor/common/core/range';\nimport { isFalsyOrEmpty, isNonEmptyArray, coalesce, asArray } from 'vs/base/common/arrays';\nimport { isObject } from 'vs/base/common/types';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { DisposableStore, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { encodeSemanticTokensDto } from 'vs/workbench/api/common/shared/semanticTokensDto';\nimport { IdGenerator } from 'vs/base/common/idGenerator';\nimport { IExtHostApiDeprecationService } from 'vs/workbench/api/common/extHostApiDeprecationService';\nimport { Cache } from './cache';\n\n// --- adapter\n\nclass DocumentSymbolAdapter {\n\n\tprivate _documents: ExtHostDocuments;\n\tprivate _provider: vscode.DocumentSymbolProvider;\n\n\tconstructor(documents: ExtHostDocuments, provider: vscode.DocumentSymbolProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tprovideDocumentSymbols(resource: URI, token: CancellationToken): Promise<modes.DocumentSymbol[] | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\treturn asPromise(() => this._provider.provideDocumentSymbols(doc, token)).then(value => {\n\t\t\tif (isFalsyOrEmpty(value)) {\n\t\t\t\treturn undefined;\n\t\t\t} else if (value![0] instanceof DocumentSymbol) {\n\t\t\t\treturn (<DocumentSymbol[]>value).map(typeConvert.DocumentSymbol.from);\n\t\t\t} else {\n\t\t\t\treturn DocumentSymbolAdapter._asDocumentSymbolTree(<SymbolInformation[]>value);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _asDocumentSymbolTree(infos: SymbolInformation[]): modes.DocumentSymbol[] {\n\t\t// first sort by start (and end) and then loop over all elements\n\t\t// and build a tree based on containment.\n\t\tinfos = infos.slice(0).sort((a, b) => {\n\t\t\tlet res = a.location.range.start.compareTo(b.location.range.start);\n\t\t\tif (res === 0) {\n\t\t\t\tres = b.location.range.end.compareTo(a.location.range.end);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n\t\tconst res: modes.DocumentSymbol[] = [];\n\t\tconst parentStack: modes.DocumentSymbol[] = [];\n\t\tfor (const info of infos) {\n\t\t\tconst element: modes.DocumentSymbol = {\n\t\t\t\tname: info.name || '!!MISSING: name!!',\n\t\t\t\tkind: typeConvert.SymbolKind.from(info.kind),\n\t\t\t\ttags: info.tags ? info.tags.map(typeConvert.SymbolTag.from) : [],\n\t\t\t\tdetail: '',\n\t\t\t\tcontainerName: info.containerName,\n\t\t\t\trange: typeConvert.Range.from(info.location.range),\n\t\t\t\tselectionRange: typeConvert.Range.from(info.location.range),\n\t\t\t\tchildren: []\n\t\t\t};\n\n\t\t\twhile (true) {\n\t\t\t\tif (parentStack.length === 0) {\n\t\t\t\t\tparentStack.push(element);\n\t\t\t\t\tres.push(element);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst parent = parentStack[parentStack.length - 1];\n\t\t\t\tif (EditorRange.containsRange(parent.range, element.range) && !EditorRange.equalsRange(parent.range, element.range)) {\n\t\t\t\t\tif (parent.children) {\n\t\t\t\t\t\tparent.children.push(element);\n\t\t\t\t\t}\n\t\t\t\t\tparentStack.push(element);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparentStack.pop();\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}\n\nclass CodeLensAdapter {\n\n\tprivate static _badCmd: vscode.Command = { command: 'missing', title: '!!MISSING: command!!' };\n\n\tprivate readonly _cache = new Cache<vscode.CodeLens>('CodeLens');\n\tprivate readonly _disposables = new Map<number, DisposableStore>();\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _commands: CommandsConverter,\n\t\tprivate readonly _provider: vscode.CodeLensProvider\n\t) { }\n\n\tprovideCodeLenses(resource: URI, token: CancellationToken): Promise<extHostProtocol.ICodeLensListDto | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\n\t\treturn asPromise(() => this._provider.provideCodeLenses(doc, token)).then(lenses => {\n\n\t\t\tif (!lenses || token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst cacheId = this._cache.add(lenses);\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tthis._disposables.set(cacheId, disposables);\n\n\t\t\tconst result: extHostProtocol.ICodeLensListDto = {\n\t\t\t\tcacheId,\n\t\t\t\tlenses: [],\n\t\t\t};\n\n\t\t\tfor (let i = 0; i < lenses.length; i++) {\n\t\t\t\tresult.lenses.push({\n\t\t\t\t\tcacheId: [cacheId, i],\n\t\t\t\t\trange: typeConvert.Range.from(lenses[i].range),\n\t\t\t\t\tcommand: this._commands.toInternal(lenses[i].command, disposables)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tresolveCodeLens(symbol: extHostProtocol.ICodeLensDto, token: CancellationToken): Promise<extHostProtocol.ICodeLensDto | undefined> {\n\n\t\tconst lens = symbol.cacheId && this._cache.get(...symbol.cacheId);\n\t\tif (!lens) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tlet resolve: Promise<vscode.CodeLens | undefined | null>;\n\t\tif (typeof this._provider.resolveCodeLens !== 'function' || lens.isResolved) {\n\t\t\tresolve = Promise.resolve(lens);\n\t\t} else {\n\t\t\tresolve = asPromise(() => this._provider.resolveCodeLens!(lens, token));\n\t\t}\n\n\t\treturn resolve.then(newLens => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst disposables = symbol.cacheId && this._disposables.get(symbol.cacheId[0]);\n\t\t\tif (!disposables) {\n\t\t\t\t// We've already been disposed of\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tnewLens = newLens || lens;\n\t\t\tsymbol.command = this._commands.toInternal(newLens.command || CodeLensAdapter._badCmd, disposables);\n\t\t\treturn symbol;\n\t\t});\n\t}\n\n\treleaseCodeLenses(cachedId: number): void {\n\t\tdispose(this._disposables.get(cachedId));\n\t\tthis._disposables.delete(cachedId);\n\t\tthis._cache.delete(cachedId);\n\t}\n}\n\nfunction convertToLocationLinks(value: vscode.Location | vscode.Location[] | vscode.LocationLink[] | undefined | null): modes.LocationLink[] {\n\tif (Array.isArray(value)) {\n\t\treturn (<any>value).map(typeConvert.DefinitionLink.from);\n\t} else if (value) {\n\t\treturn [typeConvert.DefinitionLink.from(value)];\n\t}\n\treturn [];\n}\n\nclass DefinitionAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DefinitionProvider\n\t) { }\n\n\tprovideDefinition(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\treturn asPromise(() => this._provider.provideDefinition(doc, pos, token)).then(convertToLocationLinks);\n\t}\n}\n\nclass DeclarationAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DeclarationProvider\n\t) { }\n\n\tprovideDeclaration(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\treturn asPromise(() => this._provider.provideDeclaration(doc, pos, token)).then(convertToLocationLinks);\n\t}\n}\n\nclass ImplementationAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.ImplementationProvider\n\t) { }\n\n\tprovideImplementation(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\treturn asPromise(() => this._provider.provideImplementation(doc, pos, token)).then(convertToLocationLinks);\n\t}\n}\n\nclass TypeDefinitionAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.TypeDefinitionProvider\n\t) { }\n\n\tprovideTypeDefinition(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\treturn asPromise(() => this._provider.provideTypeDefinition(doc, pos, token)).then(convertToLocationLinks);\n\t}\n}\n\nclass HoverAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.HoverProvider,\n\t) { }\n\n\tpublic provideHover(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.Hover | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideHover(doc, pos, token)).then(value => {\n\t\t\tif (!value || isFalsyOrEmpty(value.contents)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!value.range) {\n\t\t\t\tvalue.range = doc.getWordRangeAtPosition(pos);\n\t\t\t}\n\t\t\tif (!value.range) {\n\t\t\t\tvalue.range = new Range(pos, pos);\n\t\t\t}\n\n\t\t\treturn typeConvert.Hover.from(value);\n\t\t});\n\t}\n}\n\nclass EvaluatableExpressionAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.EvaluatableExpressionProvider,\n\t) { }\n\n\tpublic provideEvaluatableExpression(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.EvaluatableExpression | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideEvaluatableExpression(doc, pos, token)).then(value => {\n\t\t\tif (value) {\n\t\t\t\treturn typeConvert.EvaluatableExpression.from(value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass DocumentHighlightAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentHighlightProvider\n\t) { }\n\n\tprovideDocumentHighlights(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.DocumentHighlight[] | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideDocumentHighlights(doc, pos, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.DocumentHighlight.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass OnTypeRenameAdapter {\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.OnTypeRenameProvider\n\t) { }\n\n\tprovideOnTypeRenameRanges(resource: URI, position: IPosition, token: CancellationToken): Promise<IRange[] | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideOnTypeRenameRanges(doc, pos, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn coalesce(value.map(typeConvert.Range.from));\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass ReferenceAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.ReferenceProvider\n\t) { }\n\n\tprovideReferences(resource: URI, position: IPosition, context: modes.ReferenceContext, token: CancellationToken): Promise<modes.Location[] | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideReferences(doc, pos, context, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.location.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nexport interface CustomCodeAction extends extHostProtocol.ICodeActionDto {\n\t_isSynthetic?: boolean;\n}\n\nclass CodeActionAdapter {\n\tprivate static readonly _maxCodeActionsPerFile: number = 1000;\n\n\tprivate readonly _cache = new Cache<vscode.CodeAction | vscode.Command>('CodeAction');\n\tprivate readonly _disposables = new Map<number, DisposableStore>();\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _commands: CommandsConverter,\n\t\tprivate readonly _diagnostics: ExtHostDiagnostics,\n\t\tprivate readonly _provider: vscode.CodeActionProvider,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extension: IExtensionDescription,\n\t\tprivate readonly _apiDeprecation: IExtHostApiDeprecationService,\n\t) { }\n\n\tprovideCodeActions(resource: URI, rangeOrSelection: IRange | ISelection, context: modes.CodeActionContext, token: CancellationToken): Promise<extHostProtocol.ICodeActionListDto | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst ran = Selection.isISelection(rangeOrSelection)\n\t\t\t? <vscode.Selection>typeConvert.Selection.to(rangeOrSelection)\n\t\t\t: <vscode.Range>typeConvert.Range.to(rangeOrSelection);\n\t\tconst allDiagnostics: vscode.Diagnostic[] = [];\n\n\t\tfor (const diagnostic of this._diagnostics.getDiagnostics(resource)) {\n\t\t\tif (ran.intersection(diagnostic.range)) {\n\t\t\t\tconst newLen = allDiagnostics.push(diagnostic);\n\t\t\t\tif (newLen > CodeActionAdapter._maxCodeActionsPerFile) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst codeActionContext: vscode.CodeActionContext = {\n\t\t\tdiagnostics: allDiagnostics,\n\t\t\tonly: context.only ? new CodeActionKind(context.only) : undefined\n\t\t};\n\n\t\treturn asPromise(() => this._provider.provideCodeActions(doc, ran, codeActionContext, token)).then((commandsOrActions): extHostProtocol.ICodeActionListDto | undefined => {\n\t\t\tif (!isNonEmptyArray(commandsOrActions) || token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst cacheId = this._cache.add(commandsOrActions);\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tthis._disposables.set(cacheId, disposables);\n\n\t\t\tconst actions: CustomCodeAction[] = [];\n\t\t\tfor (const candidate of commandsOrActions) {\n\t\t\t\tif (!candidate) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (CodeActionAdapter._isCommand(candidate)) {\n\t\t\t\t\t// old school: synthetic code action\n\n\t\t\t\t\tthis._apiDeprecation.report('CodeActionProvider.provideCodeActions - return commands', this._extension,\n\t\t\t\t\t\t`Return 'CodeAction' instances instead.`);\n\n\t\t\t\t\tactions.push({\n\t\t\t\t\t\t_isSynthetic: true,\n\t\t\t\t\t\ttitle: candidate.title,\n\t\t\t\t\t\tcommand: this._commands.toInternal(candidate, disposables),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (codeActionContext.only) {\n\t\t\t\t\t\tif (!candidate.kind) {\n\t\t\t\t\t\t\tthis._logService.warn(`${this._extension.identifier.value} - Code actions of kind '${codeActionContext.only.value} 'requested but returned code action does not have a 'kind'. Code action will be dropped. Please set 'CodeAction.kind'.`);\n\t\t\t\t\t\t} else if (!codeActionContext.only.contains(candidate.kind)) {\n\t\t\t\t\t\t\tthis._logService.warn(`${this._extension.identifier.value} - Code actions of kind '${codeActionContext.only.value} 'requested but returned code action is of kind '${candidate.kind.value}'. Code action will be dropped. Please check 'CodeActionContext.only' to only return requested code actions.`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// new school: convert code action\n\t\t\t\t\tactions.push({\n\t\t\t\t\t\ttitle: candidate.title,\n\t\t\t\t\t\tcommand: candidate.command && this._commands.toInternal(candidate.command, disposables),\n\t\t\t\t\t\tdiagnostics: candidate.diagnostics && candidate.diagnostics.map(typeConvert.Diagnostic.from),\n\t\t\t\t\t\tedit: candidate.edit && typeConvert.WorkspaceEdit.from(candidate.edit),\n\t\t\t\t\t\tkind: candidate.kind && candidate.kind.value,\n\t\t\t\t\t\tisPreferred: candidate.isPreferred,\n\t\t\t\t\t\tdisabled: candidate.disabled?.reason\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { cacheId, actions };\n\t\t});\n\t}\n\n\tpublic releaseCodeActions(cachedId: number): void {\n\t\tdispose(this._disposables.get(cachedId));\n\t\tthis._disposables.delete(cachedId);\n\t\tthis._cache.delete(cachedId);\n\t}\n\n\tprivate static _isCommand(thing: any): thing is vscode.Command {\n\t\treturn typeof (<vscode.Command>thing).command === 'string' && typeof (<vscode.Command>thing).title === 'string';\n\t}\n}\n\nclass DocumentFormattingAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentFormattingEditProvider\n\t) { }\n\n\tprovideDocumentFormattingEdits(resource: URI, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\n\t\tconst document = this._documents.getDocument(resource);\n\n\t\treturn asPromise(() => this._provider.provideDocumentFormattingEdits(document, <any>options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.TextEdit.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass RangeFormattingAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentRangeFormattingEditProvider\n\t) { }\n\n\tprovideDocumentRangeFormattingEdits(resource: URI, range: IRange, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\n\t\tconst document = this._documents.getDocument(resource);\n\t\tconst ran = typeConvert.Range.to(range);\n\n\t\treturn asPromise(() => this._provider.provideDocumentRangeFormattingEdits(document, ran, <any>options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.TextEdit.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass OnTypeFormattingAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.OnTypeFormattingEditProvider\n\t) { }\n\n\tautoFormatTriggerCharacters: string[] = []; // not here\n\n\tprovideOnTypeFormattingEdits(resource: URI, position: IPosition, ch: string, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\n\t\tconst document = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideOnTypeFormattingEdits(document, pos, ch, <any>options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.TextEdit.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass NavigateTypeAdapter {\n\n\tprivate readonly _symbolCache = new Map<number, vscode.SymbolInformation>();\n\tprivate readonly _resultCache = new Map<number, [number, number]>();\n\n\tconstructor(\n\t\tprivate readonly _provider: vscode.WorkspaceSymbolProvider,\n\t\tprivate readonly _logService: ILogService\n\t) { }\n\n\tprovideWorkspaceSymbols(search: string, token: CancellationToken): Promise<extHostProtocol.IWorkspaceSymbolsDto> {\n\t\tconst result: extHostProtocol.IWorkspaceSymbolsDto = extHostProtocol.IdObject.mixin({ symbols: [] });\n\t\treturn asPromise(() => this._provider.provideWorkspaceSymbols(search, token)).then(value => {\n\t\t\tif (isNonEmptyArray(value)) {\n\t\t\t\tfor (const item of value) {\n\t\t\t\t\tif (!item) {\n\t\t\t\t\t\t// drop\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!item.name) {\n\t\t\t\t\t\tthis._logService.warn('INVALID SymbolInformation, lacks name', item);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst symbol = extHostProtocol.IdObject.mixin(typeConvert.WorkspaceSymbol.from(item));\n\t\t\t\t\tthis._symbolCache.set(symbol._id!, item);\n\t\t\t\t\tresult.symbols.push(symbol);\n\t\t\t\t}\n\t\t\t}\n\t\t}).then(() => {\n\t\t\tif (result.symbols.length > 0) {\n\t\t\t\tthis._resultCache.set(result._id!, [result.symbols[0]._id!, result.symbols[result.symbols.length - 1]._id!]);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tasync resolveWorkspaceSymbol(symbol: extHostProtocol.IWorkspaceSymbolDto, token: CancellationToken): Promise<extHostProtocol.IWorkspaceSymbolDto | undefined> {\n\t\tif (typeof this._provider.resolveWorkspaceSymbol !== 'function') {\n\t\t\treturn symbol;\n\t\t}\n\n\t\tconst item = this._symbolCache.get(symbol._id!);\n\t\tif (item) {\n\t\t\tconst value = await asPromise(() => this._provider.resolveWorkspaceSymbol!(item, token));\n\t\t\treturn value && mixin(symbol, typeConvert.WorkspaceSymbol.from(value), true);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\treleaseWorkspaceSymbols(id: number): any {\n\t\tconst range = this._resultCache.get(id);\n\t\tif (range) {\n\t\t\tfor (let [from, to] = range; from <= to; from++) {\n\t\t\t\tthis._symbolCache.delete(from);\n\t\t\t}\n\t\t\tthis._resultCache.delete(id);\n\t\t}\n\t}\n}\n\nclass RenameAdapter {\n\n\tstatic supportsResolving(provider: vscode.RenameProvider): boolean {\n\t\treturn typeof provider.prepareRename === 'function';\n\t}\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.RenameProvider,\n\t\tprivate readonly _logService: ILogService\n\t) { }\n\n\tprovideRenameEdits(resource: URI, position: IPosition, newName: string, token: CancellationToken): Promise<extHostProtocol.IWorkspaceEditDto | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideRenameEdits(doc, pos, newName, token)).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn typeConvert.WorkspaceEdit.from(value);\n\t\t}, err => {\n\t\t\tconst rejectReason = RenameAdapter._asMessage(err);\n\t\t\tif (rejectReason) {\n\t\t\t\treturn <extHostProtocol.IWorkspaceEditDto>{ rejectReason, edits: undefined! };\n\t\t\t} else {\n\t\t\t\t// generic error\n\t\t\t\treturn Promise.reject<extHostProtocol.IWorkspaceEditDto>(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tresolveRenameLocation(resource: URI, position: IPosition, token: CancellationToken): Promise<(modes.RenameLocation & modes.Rejection) | undefined> {\n\t\tif (typeof this._provider.prepareRename !== 'function') {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.prepareRename!(doc, pos, token)).then(rangeOrLocation => {\n\n\t\t\tlet range: vscode.Range | undefined;\n\t\t\tlet text: string | undefined;\n\t\t\tif (Range.isRange(rangeOrLocation)) {\n\t\t\t\trange = rangeOrLocation;\n\t\t\t\ttext = doc.getText(rangeOrLocation);\n\n\t\t\t} else if (isObject(rangeOrLocation)) {\n\t\t\t\trange = rangeOrLocation.range;\n\t\t\t\ttext = rangeOrLocation.placeholder;\n\t\t\t}\n\n\t\t\tif (!range) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (range.start.line > pos.line || range.end.line < pos.line) {\n\t\t\t\tthis._logService.warn('INVALID rename location: position line must be within range start/end lines');\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn { range: typeConvert.Range.from(range), text };\n\t\t}, err => {\n\t\t\tconst rejectReason = RenameAdapter._asMessage(err);\n\t\t\tif (rejectReason) {\n\t\t\t\treturn <modes.RenameLocation & modes.Rejection>{ rejectReason, range: undefined!, text: undefined! };\n\t\t\t} else {\n\t\t\t\treturn Promise.reject<any>(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _asMessage(err: any): string | undefined {\n\t\tif (typeof err === 'string') {\n\t\t\treturn err;\n\t\t} else if (err instanceof Error && typeof err.message === 'string') {\n\t\t\treturn err.message;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nclass SemanticTokensPreviousResult {\n\tconstructor(\n\t\tpublic readonly resultId: string | undefined,\n\t\tpublic readonly tokens?: Uint32Array,\n\t) { }\n}\n\ntype RelaxedSemanticTokens = { readonly resultId?: string; readonly data: number[]; };\ntype RelaxedSemanticTokensEdit = { readonly start: number; readonly deleteCount: number; readonly data?: number[]; };\ntype RelaxedSemanticTokensEdits = { readonly resultId?: string; readonly edits: RelaxedSemanticTokensEdit[]; };\n\ntype ProvidedSemanticTokens = vscode.SemanticTokens | RelaxedSemanticTokens;\ntype ProvidedSemanticTokensEdits = vscode.SemanticTokensEdits | RelaxedSemanticTokensEdits;\n\nexport class DocumentSemanticTokensAdapter {\n\n\tprivate readonly _previousResults: Map<number, SemanticTokensPreviousResult>;\n\tprivate _nextResultId = 1;\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentSemanticTokensProvider,\n\t) {\n\t\tthis._previousResults = new Map<number, SemanticTokensPreviousResult>();\n\t}\n\n\tprovideDocumentSemanticTokens(resource: URI, previousResultId: number, token: CancellationToken): Promise<VSBuffer | null> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst previousResult = (previousResultId !== 0 ? this._previousResults.get(previousResultId) : null);\n\t\treturn asPromise(() => {\n\t\t\tif (previousResult && typeof previousResult.resultId === 'string' && typeof this._provider.provideDocumentSemanticTokensEdits === 'function') {\n\t\t\t\treturn this._provider.provideDocumentSemanticTokensEdits(doc, previousResult.resultId, token);\n\t\t\t}\n\t\t\treturn this._provider.provideDocumentSemanticTokens(doc, token);\n\t\t}).then((value: ProvidedSemanticTokens | ProvidedSemanticTokensEdits | null | undefined) => {\n\t\t\tif (previousResult) {\n\t\t\t\tthis._previousResults.delete(previousResultId);\n\t\t\t}\n\t\t\tif (!value) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvalue = DocumentSemanticTokensAdapter._fixProvidedSemanticTokens(value);\n\t\t\treturn this._send(DocumentSemanticTokensAdapter._convertToEdits(previousResult, value), value);\n\t\t});\n\t}\n\n\tasync releaseDocumentSemanticColoring(semanticColoringResultId: number): Promise<void> {\n\t\tthis._previousResults.delete(semanticColoringResultId);\n\t}\n\n\tprivate static _fixProvidedSemanticTokens(v: ProvidedSemanticTokens | ProvidedSemanticTokensEdits): vscode.SemanticTokens | vscode.SemanticTokensEdits {\n\t\tif (DocumentSemanticTokensAdapter._isSemanticTokens(v)) {\n\t\t\tif (DocumentSemanticTokensAdapter._isCorrectSemanticTokens(v)) {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn new SemanticTokens(new Uint32Array(v.data), v.resultId);\n\t\t} else if (DocumentSemanticTokensAdapter._isSemanticTokensEdits(v)) {\n\t\t\tif (DocumentSemanticTokensAdapter._isCorrectSemanticTokensEdits(v)) {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\treturn new SemanticTokensEdits(v.edits.map(edit => new SemanticTokensEdit(edit.start, edit.deleteCount, edit.data ? new Uint32Array(edit.data) : edit.data)), v.resultId);\n\t\t}\n\t\treturn v;\n\t}\n\n\tprivate static _isSemanticTokens(v: ProvidedSemanticTokens | ProvidedSemanticTokensEdits): v is ProvidedSemanticTokens {\n\t\treturn v && !!((v as ProvidedSemanticTokens).data);\n\t}\n\n\tprivate static _isCorrectSemanticTokens(v: ProvidedSemanticTokens): v is vscode.SemanticTokens {\n\t\treturn (v.data instanceof Uint32Array);\n\t}\n\n\tprivate static _isSemanticTokensEdits(v: ProvidedSemanticTokens | ProvidedSemanticTokensEdits): v is ProvidedSemanticTokensEdits {\n\t\treturn v && Array.isArray((v as ProvidedSemanticTokensEdits).edits);\n\t}\n\n\tprivate static _isCorrectSemanticTokensEdits(v: ProvidedSemanticTokensEdits): v is vscode.SemanticTokensEdits {\n\t\tfor (const edit of v.edits) {\n\t\t\tif (!(edit.data instanceof Uint32Array)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _convertToEdits(previousResult: SemanticTokensPreviousResult | null | undefined, newResult: vscode.SemanticTokens | vscode.SemanticTokensEdits): vscode.SemanticTokens | vscode.SemanticTokensEdits {\n\t\tif (!DocumentSemanticTokensAdapter._isSemanticTokens(newResult)) {\n\t\t\treturn newResult;\n\t\t}\n\t\tif (!previousResult || !previousResult.tokens) {\n\t\t\treturn newResult;\n\t\t}\n\t\tconst oldData = previousResult.tokens;\n\t\tconst oldLength = oldData.length;\n\t\tconst newData = newResult.data;\n\t\tconst newLength = newData.length;\n\n\t\tlet commonPrefixLength = 0;\n\t\tconst maxCommonPrefixLength = Math.min(oldLength, newLength);\n\t\twhile (commonPrefixLength < maxCommonPrefixLength && oldData[commonPrefixLength] === newData[commonPrefixLength]) {\n\t\t\tcommonPrefixLength++;\n\t\t}\n\n\t\tif (commonPrefixLength === oldLength && commonPrefixLength === newLength) {\n\t\t\t// complete overlap!\n\t\t\treturn new SemanticTokensEdits([], newResult.resultId);\n\t\t}\n\n\t\tlet commonSuffixLength = 0;\n\t\tconst maxCommonSuffixLength = maxCommonPrefixLength - commonPrefixLength;\n\t\twhile (commonSuffixLength < maxCommonSuffixLength && oldData[oldLength - commonSuffixLength - 1] === newData[newLength - commonSuffixLength - 1]) {\n\t\t\tcommonSuffixLength++;\n\t\t}\n\n\t\treturn new SemanticTokensEdits([{\n\t\t\tstart: commonPrefixLength,\n\t\t\tdeleteCount: (oldLength - commonPrefixLength - commonSuffixLength),\n\t\t\tdata: newData.subarray(commonPrefixLength, newLength - commonSuffixLength)\n\t\t}], newResult.resultId);\n\t}\n\n\tprivate _send(value: vscode.SemanticTokens | vscode.SemanticTokensEdits, original: vscode.SemanticTokens | vscode.SemanticTokensEdits): VSBuffer | null {\n\t\tif (DocumentSemanticTokensAdapter._isSemanticTokens(value)) {\n\t\t\tconst myId = this._nextResultId++;\n\t\t\tthis._previousResults.set(myId, new SemanticTokensPreviousResult(value.resultId, value.data));\n\t\t\treturn encodeSemanticTokensDto({\n\t\t\t\tid: myId,\n\t\t\t\ttype: 'full',\n\t\t\t\tdata: value.data\n\t\t\t});\n\t\t}\n\n\t\tif (DocumentSemanticTokensAdapter._isSemanticTokensEdits(value)) {\n\t\t\tconst myId = this._nextResultId++;\n\t\t\tif (DocumentSemanticTokensAdapter._isSemanticTokens(original)) {\n\t\t\t\t// store the original\n\t\t\t\tthis._previousResults.set(myId, new SemanticTokensPreviousResult(original.resultId, original.data));\n\t\t\t} else {\n\t\t\t\tthis._previousResults.set(myId, new SemanticTokensPreviousResult(value.resultId));\n\t\t\t}\n\t\t\treturn encodeSemanticTokensDto({\n\t\t\t\tid: myId,\n\t\t\t\ttype: 'delta',\n\t\t\t\tdeltas: (value.edits || []).map(edit => ({ start: edit.start, deleteCount: edit.deleteCount, data: edit.data }))\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport class DocumentRangeSemanticTokensAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentRangeSemanticTokensProvider,\n\t) {\n\t}\n\n\tprovideDocumentRangeSemanticTokens(resource: URI, range: IRange, token: CancellationToken): Promise<VSBuffer | null> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\treturn asPromise(() => this._provider.provideDocumentRangeSemanticTokens(doc, typeConvert.Range.to(range), token)).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn this._send(value);\n\t\t});\n\t}\n\n\tprivate _send(value: vscode.SemanticTokens): VSBuffer | null {\n\t\treturn encodeSemanticTokensDto({\n\t\t\tid: 0,\n\t\t\ttype: 'full',\n\t\t\tdata: value.data\n\t\t});\n\t}\n}\n\nclass SuggestAdapter {\n\n\tstatic supportsResolving(provider: vscode.CompletionItemProvider): boolean {\n\t\treturn typeof provider.resolveCompletionItem === 'function';\n\t}\n\n\tprivate _cache = new Cache<vscode.CompletionItem>('CompletionItem');\n\tprivate _disposables = new Map<number, DisposableStore>();\n\n\tprivate _didWarnMust: boolean = false;\n\tprivate _didWarnShould: boolean = false;\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _commands: CommandsConverter,\n\t\tprivate readonly _provider: vscode.CompletionItemProvider,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _apiDeprecation: IExtHostApiDeprecationService,\n\t\tprivate readonly _telemetry: extHostProtocol.MainThreadTelemetryShape,\n\t\tprivate readonly _extension: IExtensionDescription,\n\t) { }\n\n\tasync provideCompletionItems(resource: URI, position: IPosition, context: modes.CompletionContext, token: CancellationToken): Promise<extHostProtocol.ISuggestResultDto | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\t// The default insert/replace ranges. It's important to compute them\n\t\t// before asynchronously asking the provider for its results. See\n\t\t// https://github.com/microsoft/vscode/issues/83400#issuecomment-546851421\n\t\tconst replaceRange = doc.getWordRangeAtPosition(pos) || new Range(pos, pos);\n\t\tconst insertRange = replaceRange.with({ end: pos });\n\n\t\tconst itemsOrList = await asPromise(() => this._provider.provideCompletionItems(doc, pos, token, typeConvert.CompletionContext.to(context)));\n\n\t\tif (!itemsOrList) {\n\t\t\t// undefined and null are valid results\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\t// cancelled -> return without further ado, esp no caching\n\t\t\t// of results as they will leak\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst list = Array.isArray(itemsOrList) ? new CompletionList(itemsOrList) : itemsOrList;\n\n\t\t// keep result for providers that support resolving\n\t\tconst pid: number = SuggestAdapter.supportsResolving(this._provider) ? this._cache.add(list.items) : this._cache.add([]);\n\t\tconst disposables = new DisposableStore();\n\t\tthis._disposables.set(pid, disposables);\n\n\t\tconst completions: extHostProtocol.ISuggestDataDto[] = [];\n\t\tconst result: extHostProtocol.ISuggestResultDto = {\n\t\t\tx: pid,\n\t\t\t[extHostProtocol.ISuggestResultDtoField.completions]: completions,\n\t\t\t[extHostProtocol.ISuggestResultDtoField.defaultRanges]: { replace: typeConvert.Range.from(replaceRange), insert: typeConvert.Range.from(insertRange) },\n\t\t\t[extHostProtocol.ISuggestResultDtoField.isIncomplete]: list.isIncomplete || undefined\n\t\t};\n\n\t\tfor (let i = 0; i < list.items.length; i++) {\n\t\t\tconst item = list.items[i];\n\t\t\t// check for bad completion item first\n\t\t\tconst dto = this._convertCompletionItem(item, [pid, i], insertRange, replaceRange);\n\t\t\tcompletions.push(dto);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tasync resolveCompletionItem(id: extHostProtocol.ChainedCacheId, token: CancellationToken): Promise<extHostProtocol.ISuggestDataDto | undefined> {\n\n\t\tif (typeof this._provider.resolveCompletionItem !== 'function') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst item = this._cache.get(...id);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst _mustNotChange = SuggestAdapter._mustNotChangeHash(item);\n\t\tconst _mayNotChange = SuggestAdapter._mayNotChangeHash(item);\n\n\t\tconst resolvedItem = await asPromise(() => this._provider.resolveCompletionItem!(item, token));\n\n\t\tif (!resolvedItem) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttype BlameExtension = {\n\t\t\textensionId: string;\n\t\t\tkind: string;\n\t\t\tindex: string;\n\t\t};\n\n\t\ttype BlameExtensionMeta = {\n\t\t\textensionId: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\tkind: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t\tindex: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth' };\n\t\t};\n\n\t\tlet _mustNotChangeIndex = !this._didWarnMust && SuggestAdapter._mustNotChangeDiff(_mustNotChange, resolvedItem);\n\t\tif (typeof _mustNotChangeIndex === 'string') {\n\t\t\tthis._logService.warn(`[${this._extension.identifier.value}] INVALID result from 'resolveCompletionItem', extension MUST NOT change any of: label, sortText, filterText, insertText, or textEdit`);\n\t\t\tthis._telemetry.$publicLog2<BlameExtension, BlameExtensionMeta>('badresolvecompletion', { extensionId: this._extension.identifier.value, kind: 'must', index: _mustNotChangeIndex });\n\t\t\tthis._didWarnMust = true;\n\t\t}\n\n\t\tlet _mayNotChangeIndex = !this._didWarnShould && SuggestAdapter._mayNotChangeDiff(_mayNotChange, resolvedItem);\n\t\tif (typeof _mayNotChangeIndex === 'string') {\n\t\t\tthis._logService.info(`[${this._extension.identifier.value}] UNSAVE result from 'resolveCompletionItem', extension SHOULD NOT change any of: additionalTextEdits, or command`);\n\t\t\tthis._telemetry.$publicLog2<BlameExtension, BlameExtensionMeta>('badresolvecompletion', { extensionId: this._extension.identifier.value, kind: 'should', index: _mayNotChangeIndex });\n\t\t\tthis._didWarnShould = true;\n\t\t}\n\n\t\treturn this._convertCompletionItem(resolvedItem, id);\n\t}\n\n\treleaseCompletionItems(id: number): any {\n\t\tdispose(this._disposables.get(id));\n\t\tthis._disposables.delete(id);\n\t\tthis._cache.delete(id);\n\t}\n\n\tprivate _convertCompletionItem(item: vscode.CompletionItem, id: extHostProtocol.ChainedCacheId, defaultInsertRange?: vscode.Range, defaultReplaceRange?: vscode.Range): extHostProtocol.ISuggestDataDto {\n\n\t\tconst disposables = this._disposables.get(id[0]);\n\t\tif (!disposables) {\n\t\t\tthrow Error('DisposableStore is missing...');\n\t\t}\n\n\t\tconst result: extHostProtocol.ISuggestDataDto = {\n\t\t\t//\n\t\t\tx: id,\n\t\t\t//\n\t\t\t[extHostProtocol.ISuggestDataDtoField.label]: item.label ?? '',\n\t\t\t[extHostProtocol.ISuggestDataDtoField.label2]: item.label2,\n\t\t\t[extHostProtocol.ISuggestDataDtoField.kind]: item.kind !== undefined ? typeConvert.CompletionItemKind.from(item.kind) : undefined,\n\t\t\t[extHostProtocol.ISuggestDataDtoField.kindModifier]: item.tags && item.tags.map(typeConvert.CompletionItemTag.from),\n\t\t\t[extHostProtocol.ISuggestDataDtoField.detail]: item.detail,\n\t\t\t[extHostProtocol.ISuggestDataDtoField.documentation]: typeof item.documentation === 'undefined' ? undefined : typeConvert.MarkdownString.fromStrict(item.documentation),\n\t\t\t[extHostProtocol.ISuggestDataDtoField.sortText]: item.sortText !== item.label ? item.sortText : undefined,\n\t\t\t[extHostProtocol.ISuggestDataDtoField.filterText]: item.filterText !== item.label ? item.filterText : undefined,\n\t\t\t[extHostProtocol.ISuggestDataDtoField.preselect]: item.preselect || undefined,\n\t\t\t[extHostProtocol.ISuggestDataDtoField.insertTextRules]: item.keepWhitespace ? modes.CompletionItemInsertTextRule.KeepWhitespace : 0,\n\t\t\t[extHostProtocol.ISuggestDataDtoField.commitCharacters]: item.commitCharacters,\n\t\t\t[extHostProtocol.ISuggestDataDtoField.additionalTextEdits]: item.additionalTextEdits && item.additionalTextEdits.map(typeConvert.TextEdit.from),\n\t\t\t[extHostProtocol.ISuggestDataDtoField.command]: this._commands.toInternal(item.command, disposables),\n\t\t};\n\n\t\t// 'insertText'-logic\n\t\tif (item.textEdit) {\n\t\t\tthis._apiDeprecation.report('CompletionItem.textEdit', this._extension, `Use 'CompletionItem.insertText' and 'CompletionItem.range' instead.`);\n\t\t\tresult[extHostProtocol.ISuggestDataDtoField.insertText] = item.textEdit.newText;\n\n\t\t} else if (typeof item.insertText === 'string') {\n\t\t\tresult[extHostProtocol.ISuggestDataDtoField.insertText] = item.insertText;\n\n\t\t} else if (item.insertText instanceof SnippetString) {\n\t\t\tresult[extHostProtocol.ISuggestDataDtoField.insertText] = item.insertText.value;\n\t\t\tresult[extHostProtocol.ISuggestDataDtoField.insertTextRules]! |= modes.CompletionItemInsertTextRule.InsertAsSnippet;\n\t\t}\n\n\t\t// 'overwrite[Before|After]'-logic\n\t\tlet range: vscode.Range | { inserting: vscode.Range, replacing: vscode.Range; } | undefined;\n\t\tif (item.textEdit) {\n\t\t\trange = item.textEdit.range;\n\t\t} else if (item.range) {\n\t\t\trange = item.range;\n\t\t}\n\n\t\tif (Range.isRange(range)) {\n\t\t\t// \"old\" range\n\t\t\tresult[extHostProtocol.ISuggestDataDtoField.range] = typeConvert.Range.from(range);\n\n\t\t} else if (range && (!defaultInsertRange?.isEqual(range.inserting) || !defaultReplaceRange?.isEqual(range.replacing))) {\n\t\t\t// ONLY send range when it's different from the default ranges (safe bandwidth)\n\t\t\tresult[extHostProtocol.ISuggestDataDtoField.range] = {\n\t\t\t\tinsert: typeConvert.Range.from(range.inserting),\n\t\t\t\treplace: typeConvert.Range.from(range.replacing)\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _mustNotChangeHash(item: vscode.CompletionItem) {\n\t\tconst res = JSON.stringify([item.label, item.sortText, item.filterText, item.insertText, item.range]);\n\t\treturn res;\n\t}\n\n\tprivate static _mustNotChangeDiff(hash: string, item: vscode.CompletionItem): string | void {\n\t\tconst thisArr = [item.label, item.sortText, item.filterText, item.insertText, item.range];\n\t\tconst thisHash = JSON.stringify(thisArr);\n\t\tif (hash === thisHash) {\n\t\t\treturn;\n\t\t}\n\t\tconst arr = JSON.parse(hash);\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tif (JSON.stringify(arr[i] !== JSON.stringify(thisArr[i]))) {\n\t\t\t\treturn i.toString();\n\t\t\t}\n\t\t}\n\t\treturn 'unknown';\n\t}\n\n\tprivate static _mayNotChangeHash(item: vscode.CompletionItem) {\n\t\treturn JSON.stringify([item.additionalTextEdits, item.command]);\n\t}\n\n\tprivate static _mayNotChangeDiff(hash: string, item: vscode.CompletionItem): string | void {\n\t\tconst thisArr = [item.additionalTextEdits, item.command];\n\t\tconst thisHash = JSON.stringify(thisArr);\n\t\tif (hash === thisHash) {\n\t\t\treturn;\n\t\t}\n\t\tconst arr = JSON.parse(hash);\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tif (JSON.stringify(arr[i] !== JSON.stringify(thisArr[i]))) {\n\t\t\t\treturn i.toString();\n\t\t\t}\n\t\t}\n\t\treturn 'unknown';\n\t}\n}\n\nclass SignatureHelpAdapter {\n\n\tprivate readonly _cache = new Cache<vscode.SignatureHelp>('SignatureHelp');\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.SignatureHelpProvider,\n\t) { }\n\n\tprovideSignatureHelp(resource: URI, position: IPosition, context: extHostProtocol.ISignatureHelpContextDto, token: CancellationToken): Promise<extHostProtocol.ISignatureHelpDto | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\tconst vscodeContext = this.reviveContext(context);\n\n\t\treturn asPromise(() => this._provider.provideSignatureHelp(doc, pos, token, vscodeContext)).then(value => {\n\t\t\tif (value) {\n\t\t\t\tconst id = this._cache.add([value]);\n\t\t\t\treturn { ...typeConvert.SignatureHelp.from(value), id };\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate reviveContext(context: extHostProtocol.ISignatureHelpContextDto): vscode.SignatureHelpContext {\n\t\tlet activeSignatureHelp: vscode.SignatureHelp | undefined = undefined;\n\t\tif (context.activeSignatureHelp) {\n\t\t\tconst revivedSignatureHelp = typeConvert.SignatureHelp.to(context.activeSignatureHelp);\n\t\t\tconst saved = this._cache.get(context.activeSignatureHelp.id, 0);\n\t\t\tif (saved) {\n\t\t\t\tactiveSignatureHelp = saved;\n\t\t\t\tactiveSignatureHelp.activeSignature = revivedSignatureHelp.activeSignature;\n\t\t\t\tactiveSignatureHelp.activeParameter = revivedSignatureHelp.activeParameter;\n\t\t\t} else {\n\t\t\t\tactiveSignatureHelp = revivedSignatureHelp;\n\t\t\t}\n\t\t}\n\t\treturn { ...context, activeSignatureHelp };\n\t}\n\n\treleaseSignatureHelp(id: number): any {\n\t\tthis._cache.delete(id);\n\t}\n}\n\nclass LinkProviderAdapter {\n\n\tprivate _cache = new Cache<vscode.DocumentLink>('DocumentLink');\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentLinkProvider\n\t) { }\n\n\tprovideLinks(resource: URI, token: CancellationToken): Promise<extHostProtocol.ILinksListDto | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\n\t\treturn asPromise(() => this._provider.provideDocumentLinks(doc, token)).then(links => {\n\t\t\tif (!Array.isArray(links) || links.length === 0) {\n\t\t\t\t// bad result\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t// cancelled -> return without further ado, esp no caching\n\t\t\t\t// of results as they will leak\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (typeof this._provider.resolveDocumentLink !== 'function') {\n\t\t\t\t// no resolve -> no caching\n\t\t\t\treturn { links: links.map(typeConvert.DocumentLink.from) };\n\n\t\t\t} else {\n\t\t\t\t// cache links for future resolving\n\t\t\t\tconst pid = this._cache.add(links);\n\t\t\t\tconst result: extHostProtocol.ILinksListDto = { links: [], id: pid };\n\t\t\t\tfor (let i = 0; i < links.length; i++) {\n\t\t\t\t\tconst dto: extHostProtocol.ILinkDto = typeConvert.DocumentLink.from(links[i]);\n\t\t\t\t\tdto.cacheId = [pid, i];\n\t\t\t\t\tresult.links.push(dto);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t});\n\t}\n\n\tresolveLink(id: extHostProtocol.ChainedCacheId, token: CancellationToken): Promise<extHostProtocol.ILinkDto | undefined> {\n\t\tif (typeof this._provider.resolveDocumentLink !== 'function') {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tconst item = this._cache.get(...id);\n\t\tif (!item) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn asPromise(() => this._provider.resolveDocumentLink!(item, token)).then(value => {\n\t\t\treturn value && typeConvert.DocumentLink.from(value) || undefined;\n\t\t});\n\t}\n\n\treleaseLinks(id: number): any {\n\t\tthis._cache.delete(id);\n\t}\n}\n\nclass ColorProviderAdapter {\n\n\tconstructor(\n\t\tprivate _documents: ExtHostDocuments,\n\t\tprivate _provider: vscode.DocumentColorProvider\n\t) { }\n\n\tprovideColors(resource: URI, token: CancellationToken): Promise<extHostProtocol.IRawColorInfo[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\treturn asPromise(() => this._provider.provideDocumentColors(doc, token)).then(colors => {\n\t\t\tif (!Array.isArray<vscode.ColorInformation>(colors)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst colorInfos: extHostProtocol.IRawColorInfo[] = colors.map(ci => {\n\t\t\t\treturn {\n\t\t\t\t\tcolor: typeConvert.Color.from(ci.color),\n\t\t\t\t\trange: typeConvert.Range.from(ci.range)\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn colorInfos;\n\t\t});\n\t}\n\n\tprovideColorPresentations(resource: URI, raw: extHostProtocol.IRawColorInfo, token: CancellationToken): Promise<modes.IColorPresentation[] | undefined> {\n\t\tconst document = this._documents.getDocument(resource);\n\t\tconst range = typeConvert.Range.to(raw.range);\n\t\tconst color = typeConvert.Color.to(raw.color);\n\t\treturn asPromise(() => this._provider.provideColorPresentations(color, { document, range }, token)).then(value => {\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn value.map(typeConvert.ColorPresentation.from);\n\t\t});\n\t}\n}\n\nclass FoldingProviderAdapter {\n\n\tconstructor(\n\t\tprivate _documents: ExtHostDocuments,\n\t\tprivate _provider: vscode.FoldingRangeProvider\n\t) { }\n\n\tprovideFoldingRanges(resource: URI, context: modes.FoldingContext, token: CancellationToken): Promise<modes.FoldingRange[] | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\treturn asPromise(() => this._provider.provideFoldingRanges(doc, context, token)).then(ranges => {\n\t\t\tif (!Array.isArray(ranges)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn ranges.map(typeConvert.FoldingRange.from);\n\t\t});\n\t}\n}\n\nclass SelectionRangeAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.SelectionRangeProvider,\n\t\tprivate readonly _logService: ILogService\n\t) { }\n\n\tprovideSelectionRanges(resource: URI, pos: IPosition[], token: CancellationToken): Promise<modes.SelectionRange[][]> {\n\t\tconst document = this._documents.getDocument(resource);\n\t\tconst positions = pos.map(typeConvert.Position.to);\n\n\t\treturn asPromise(() => this._provider.provideSelectionRanges(document, positions, token)).then(allProviderRanges => {\n\t\t\tif (!isNonEmptyArray(allProviderRanges)) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tif (allProviderRanges.length !== positions.length) {\n\t\t\t\tthis._logService.warn('BAD selection ranges, provider must return ranges for each position');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst allResults: modes.SelectionRange[][] = [];\n\t\t\tfor (let i = 0; i < positions.length; i++) {\n\t\t\t\tconst oneResult: modes.SelectionRange[] = [];\n\t\t\t\tallResults.push(oneResult);\n\n\t\t\t\tlet last: vscode.Position | vscode.Range = positions[i];\n\t\t\t\tlet selectionRange = allProviderRanges[i];\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!selectionRange.range.contains(last)) {\n\t\t\t\t\t\tthrow new Error('INVALID selection range, must contain the previous range');\n\t\t\t\t\t}\n\t\t\t\t\toneResult.push(typeConvert.SelectionRange.from(selectionRange));\n\t\t\t\t\tif (!selectionRange.parent) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlast = selectionRange.range;\n\t\t\t\t\tselectionRange = selectionRange.parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn allResults;\n\t\t});\n\t}\n}\n\nclass CallHierarchyAdapter {\n\n\tprivate readonly _idPool = new IdGenerator('');\n\tprivate readonly _cache = new Map<string, Map<string, vscode.CallHierarchyItem>>();\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.CallHierarchyProvider\n\t) { }\n\n\tasync prepareSession(uri: URI, position: IPosition, token: CancellationToken): Promise<extHostProtocol.ICallHierarchyItemDto[] | undefined> {\n\t\tconst doc = this._documents.getDocument(uri);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\tconst items = await this._provider.prepareCallHierarchy(doc, pos, token);\n\t\tif (!items) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst sessionId = this._idPool.nextId();\n\t\tthis._cache.set(sessionId, new Map());\n\n\t\tif (Array.isArray(items)) {\n\t\t\treturn items.map(item => this._cacheAndConvertItem(sessionId, item));\n\t\t} else {\n\t\t\treturn [this._cacheAndConvertItem(sessionId, items)];\n\t\t}\n\t}\n\n\tasync provideCallsTo(sessionId: string, itemId: string, token: CancellationToken): Promise<extHostProtocol.IIncomingCallDto[] | undefined> {\n\t\tconst item = this._itemFromCache(sessionId, itemId);\n\t\tif (!item) {\n\t\t\tthrow new Error('missing call hierarchy item');\n\t\t}\n\t\tconst calls = await this._provider.provideCallHierarchyIncomingCalls(item, token);\n\t\tif (!calls) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn calls.map(call => {\n\t\t\treturn {\n\t\t\t\tfrom: this._cacheAndConvertItem(sessionId, call.from),\n\t\t\t\tfromRanges: call.fromRanges.map(r => typeConvert.Range.from(r))\n\t\t\t};\n\t\t});\n\t}\n\n\tasync provideCallsFrom(sessionId: string, itemId: string, token: CancellationToken): Promise<extHostProtocol.IOutgoingCallDto[] | undefined> {\n\t\tconst item = this._itemFromCache(sessionId, itemId);\n\t\tif (!item) {\n\t\t\tthrow new Error('missing call hierarchy item');\n\t\t}\n\t\tconst calls = await this._provider.provideCallHierarchyOutgoingCalls(item, token);\n\t\tif (!calls) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn calls.map(call => {\n\t\t\treturn {\n\t\t\t\tto: this._cacheAndConvertItem(sessionId, call.to),\n\t\t\t\tfromRanges: call.fromRanges.map(r => typeConvert.Range.from(r))\n\t\t\t};\n\t\t});\n\t}\n\n\treleaseSession(sessionId: string): void {\n\t\tthis._cache.delete(sessionId);\n\t}\n\n\tprivate _cacheAndConvertItem(sessionId: string, item: vscode.CallHierarchyItem): extHostProtocol.ICallHierarchyItemDto {\n\t\tconst map = this._cache.get(sessionId)!;\n\t\tconst dto: extHostProtocol.ICallHierarchyItemDto = {\n\t\t\t_sessionId: sessionId,\n\t\t\t_itemId: map.size.toString(36),\n\t\t\tname: item.name,\n\t\t\tdetail: item.detail,\n\t\t\tkind: typeConvert.SymbolKind.from(item.kind),\n\t\t\turi: item.uri,\n\t\t\trange: typeConvert.Range.from(item.range),\n\t\t\tselectionRange: typeConvert.Range.from(item.selectionRange),\n\t\t};\n\t\tmap.set(dto._itemId, item);\n\t\treturn dto;\n\t}\n\n\tprivate _itemFromCache(sessionId: string, itemId: string): vscode.CallHierarchyItem | undefined {\n\t\tconst map = this._cache.get(sessionId);\n\t\treturn map?.get(itemId);\n\t}\n}\n\ntype Adapter = DocumentSymbolAdapter | CodeLensAdapter | DefinitionAdapter | HoverAdapter\n\t| DocumentHighlightAdapter | ReferenceAdapter | CodeActionAdapter | DocumentFormattingAdapter\n\t| RangeFormattingAdapter | OnTypeFormattingAdapter | NavigateTypeAdapter | RenameAdapter\n\t| SuggestAdapter | SignatureHelpAdapter | LinkProviderAdapter | ImplementationAdapter\n\t| TypeDefinitionAdapter | ColorProviderAdapter | FoldingProviderAdapter | DeclarationAdapter\n\t| SelectionRangeAdapter | CallHierarchyAdapter | DocumentSemanticTokensAdapter | DocumentRangeSemanticTokensAdapter | EvaluatableExpressionAdapter\n\t| OnTypeRenameAdapter;\n\nclass AdapterData {\n\tconstructor(\n\t\treadonly adapter: Adapter,\n\t\treadonly extension: IExtensionDescription | undefined\n\t) { }\n}\n\nexport class ExtHostLanguageFeatures implements extHostProtocol.ExtHostLanguageFeaturesShape {\n\n\tprivate static _handlePool: number = 0;\n\n\tprivate readonly _uriTransformer: IURITransformer | null;\n\tprivate readonly _proxy: extHostProtocol.MainThreadLanguageFeaturesShape;\n\tprivate readonly _telemetryShape: extHostProtocol.MainThreadTelemetryShape;\n\tprivate _documents: ExtHostDocuments;\n\tprivate _commands: ExtHostCommands;\n\tprivate _diagnostics: ExtHostDiagnostics;\n\tprivate _adapter = new Map<number, AdapterData>();\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _apiDeprecation: IExtHostApiDeprecationService;\n\n\tconstructor(\n\t\tmainContext: extHostProtocol.IMainContext,\n\t\turiTransformer: IURITransformer | null,\n\t\tdocuments: ExtHostDocuments,\n\t\tcommands: ExtHostCommands,\n\t\tdiagnostics: ExtHostDiagnostics,\n\t\tlogService: ILogService,\n\t\tapiDeprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tthis._uriTransformer = uriTransformer;\n\t\tthis._proxy = mainContext.getProxy(extHostProtocol.MainContext.MainThreadLanguageFeatures);\n\t\tthis._telemetryShape = mainContext.getProxy(extHostProtocol.MainContext.MainThreadTelemetry);\n\t\tthis._documents = documents;\n\t\tthis._commands = commands;\n\t\tthis._diagnostics = diagnostics;\n\t\tthis._logService = logService;\n\t\tthis._apiDeprecation = apiDeprecationService;\n\t}\n\n\tprivate _transformDocumentSelector(selector: vscode.DocumentSelector): Array<extHostProtocol.IDocumentFilterDto> {\n\t\treturn coalesce(asArray(selector).map(sel => this._doTransformDocumentSelector(sel)));\n\t}\n\n\tprivate _doTransformDocumentSelector(selector: string | vscode.DocumentFilter): extHostProtocol.IDocumentFilterDto | undefined {\n\t\tif (typeof selector === 'string') {\n\t\t\treturn {\n\t\t\t\t$serialized: true,\n\t\t\t\tlanguage: selector\n\t\t\t};\n\t\t}\n\n\t\tif (selector) {\n\t\t\treturn {\n\t\t\t\t$serialized: true,\n\t\t\t\tlanguage: selector.language,\n\t\t\t\tscheme: this._transformScheme(selector.scheme),\n\t\t\t\tpattern: typeof selector.pattern === 'undefined' ? undefined : typeConvert.GlobPattern.from(selector.pattern),\n\t\t\t\texclusive: selector.exclusive\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate _transformScheme(scheme: string | undefined): string | undefined {\n\t\tif (this._uriTransformer && typeof scheme === 'string') {\n\t\t\treturn this._uriTransformer.transformOutgoingScheme(scheme);\n\t\t}\n\t\treturn scheme;\n\t}\n\n\tprivate _createDisposable(handle: number): Disposable {\n\t\treturn new Disposable(() => {\n\t\t\tthis._adapter.delete(handle);\n\t\t\tthis._proxy.$unregister(handle);\n\t\t});\n\t}\n\n\tprivate _nextHandle(): number {\n\t\treturn ExtHostLanguageFeatures._handlePool++;\n\t}\n\n\tprivate _withAdapter<A, R>(handle: number, ctor: { new(...args: any[]): A; }, callback: (adapter: A, extension: IExtensionDescription | undefined) => Promise<R>, fallbackValue: R): Promise<R> {\n\t\tconst data = this._adapter.get(handle);\n\t\tif (!data) {\n\t\t\treturn Promise.resolve(fallbackValue);\n\t\t}\n\n\t\tif (data.adapter instanceof ctor) {\n\t\t\tlet t1: number;\n\t\t\tif (data.extension) {\n\t\t\t\tt1 = Date.now();\n\t\t\t\tthis._logService.trace(`[${data.extension.identifier.value}] INVOKE provider '${(ctor as any).name}'`);\n\t\t\t}\n\t\t\tconst p = callback(data.adapter, data.extension);\n\t\t\tconst extension = data.extension;\n\t\t\tif (extension) {\n\t\t\t\tPromise.resolve(p).then(\n\t\t\t\t\t() => this._logService.trace(`[${extension.identifier.value}] provider DONE after ${Date.now() - t1}ms`),\n\t\t\t\t\terr => {\n\t\t\t\t\t\tthis._logService.error(`[${extension.identifier.value}] provider FAILED`);\n\t\t\t\t\t\tthis._logService.error(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn p;\n\t\t}\n\t\treturn Promise.reject(new Error('no adapter found'));\n\t}\n\n\tprivate _addNewAdapter(adapter: Adapter, extension: IExtensionDescription | undefined): number {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter.set(handle, new AdapterData(adapter, extension));\n\t\treturn handle;\n\t}\n\n\tprivate static _extLabel(ext: IExtensionDescription): string {\n\t\treturn ext.displayName || ext.name;\n\t}\n\n\t// --- outline\n\n\tregisterDocumentSymbolProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentSymbolProvider, metadata?: vscode.DocumentSymbolProviderMetadata): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DocumentSymbolAdapter(this._documents, provider), extension);\n\t\tconst displayName = (metadata && metadata.label) || ExtHostLanguageFeatures._extLabel(extension);\n\t\tthis._proxy.$registerDocumentSymbolProvider(handle, this._transformDocumentSelector(selector), displayName);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentSymbols(handle: number, resource: UriComponents, token: CancellationToken): Promise<modes.DocumentSymbol[] | undefined> {\n\t\treturn this._withAdapter(handle, DocumentSymbolAdapter, adapter => adapter.provideDocumentSymbols(URI.revive(resource), token), undefined);\n\t}\n\n\t// --- code lens\n\n\tregisterCodeLensProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.CodeLensProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tconst eventHandle = typeof provider.onDidChangeCodeLenses === 'function' ? this._nextHandle() : undefined;\n\n\t\tthis._adapter.set(handle, new AdapterData(new CodeLensAdapter(this._documents, this._commands.converter, provider), extension));\n\t\tthis._proxy.$registerCodeLensSupport(handle, this._transformDocumentSelector(selector), eventHandle);\n\t\tlet result = this._createDisposable(handle);\n\n\t\tif (eventHandle !== undefined) {\n\t\t\tconst subscription = provider.onDidChangeCodeLenses!(_ => this._proxy.$emitCodeLensEvent(eventHandle));\n\t\t\tresult = Disposable.from(result, subscription);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t$provideCodeLenses(handle: number, resource: UriComponents, token: CancellationToken): Promise<extHostProtocol.ICodeLensListDto | undefined> {\n\t\treturn this._withAdapter(handle, CodeLensAdapter, adapter => adapter.provideCodeLenses(URI.revive(resource), token), undefined);\n\t}\n\n\t$resolveCodeLens(handle: number, symbol: extHostProtocol.ICodeLensDto, token: CancellationToken): Promise<extHostProtocol.ICodeLensDto | undefined> {\n\t\treturn this._withAdapter(handle, CodeLensAdapter, adapter => adapter.resolveCodeLens(symbol, token), undefined);\n\t}\n\n\t$releaseCodeLenses(handle: number, cacheId: number): void {\n\t\tthis._withAdapter(handle, CodeLensAdapter, adapter => Promise.resolve(adapter.releaseCodeLenses(cacheId)), undefined);\n\t}\n\n\t// --- declaration\n\n\tregisterDefinitionProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DefinitionProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DefinitionAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDefinitionSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\treturn this._withAdapter(handle, DefinitionAdapter, adapter => adapter.provideDefinition(URI.revive(resource), position, token), []);\n\t}\n\n\tregisterDeclarationProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DeclarationProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DeclarationAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDeclarationSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDeclaration(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\treturn this._withAdapter(handle, DeclarationAdapter, adapter => adapter.provideDeclaration(URI.revive(resource), position, token), []);\n\t}\n\n\tregisterImplementationProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.ImplementationProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new ImplementationAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerImplementationSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideImplementation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\treturn this._withAdapter(handle, ImplementationAdapter, adapter => adapter.provideImplementation(URI.revive(resource), position, token), []);\n\t}\n\n\tregisterTypeDefinitionProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.TypeDefinitionProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new TypeDefinitionAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerTypeDefinitionSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideTypeDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\treturn this._withAdapter(handle, TypeDefinitionAdapter, adapter => adapter.provideTypeDefinition(URI.revive(resource), position, token), []);\n\t}\n\n\t// --- extra info\n\n\tregisterHoverProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.HoverProvider, extensionId?: ExtensionIdentifier): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new HoverAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerHoverProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideHover(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.Hover | undefined> {\n\t\treturn this._withAdapter(handle, HoverAdapter, adapter => adapter.provideHover(URI.revive(resource), position, token), undefined);\n\t}\n\n\t// --- debug hover\n\n\tregisterEvaluatableExpressionProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.EvaluatableExpressionProvider, extensionId?: ExtensionIdentifier): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new EvaluatableExpressionAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerEvaluatableExpressionProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideEvaluatableExpression(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.EvaluatableExpression | undefined> {\n\t\treturn this._withAdapter(handle, EvaluatableExpressionAdapter, adapter => adapter.provideEvaluatableExpression(URI.revive(resource), position, token), undefined);\n\t}\n\n\t// --- occurrences\n\n\tregisterDocumentHighlightProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentHighlightProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DocumentHighlightAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDocumentHighlightProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentHighlights(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.DocumentHighlight[] | undefined> {\n\t\treturn this._withAdapter(handle, DocumentHighlightAdapter, adapter => adapter.provideDocumentHighlights(URI.revive(resource), position, token), undefined);\n\t}\n\n\t// --- on type rename\n\n\tregisterOnTypeRenameProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.OnTypeRenameProvider, stopPattern?: RegExp): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new OnTypeRenameAdapter(this._documents, provider), extension);\n\t\tconst serializedStopPattern = stopPattern ? ExtHostLanguageFeatures._serializeRegExp(stopPattern) : undefined;\n\t\tthis._proxy.$registerOnTypeRenameProvider(handle, this._transformDocumentSelector(selector), serializedStopPattern);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideOnTypeRenameRanges(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<IRange[] | undefined> {\n\t\treturn this._withAdapter(handle, OnTypeRenameAdapter, adapter => adapter.provideOnTypeRenameRanges(URI.revive(resource), position, token), undefined);\n\t}\n\n\t// --- references\n\n\tregisterReferenceProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.ReferenceProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new ReferenceAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerReferenceSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideReferences(handle: number, resource: UriComponents, position: IPosition, context: modes.ReferenceContext, token: CancellationToken): Promise<modes.Location[] | undefined> {\n\t\treturn this._withAdapter(handle, ReferenceAdapter, adapter => adapter.provideReferences(URI.revive(resource), position, context, token), undefined);\n\t}\n\n\t// --- quick fix\n\n\tregisterCodeActionProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.CodeActionProvider, metadata?: vscode.CodeActionProviderMetadata): vscode.Disposable {\n\t\tconst store = new DisposableStore();\n\t\tconst handle = this._addNewAdapter(new CodeActionAdapter(this._documents, this._commands.converter, this._diagnostics, provider, this._logService, extension, this._apiDeprecation), extension);\n\t\tthis._proxy.$registerQuickFixSupport(handle, this._transformDocumentSelector(selector), {\n\t\t\tprovidedKinds: metadata?.providedCodeActionKinds?.map(kind => kind.value),\n\t\t\tdocumentation: metadata?.documentation?.map(x => ({\n\t\t\t\tkind: x.kind.value,\n\t\t\t\tcommand: this._commands.converter.toInternal(x.command, store),\n\t\t\t}))\n\t\t}, ExtHostLanguageFeatures._extLabel(extension));\n\t\tstore.add(this._createDisposable(handle));\n\t\treturn store;\n\t}\n\n\n\t$provideCodeActions(handle: number, resource: UriComponents, rangeOrSelection: IRange | ISelection, context: modes.CodeActionContext, token: CancellationToken): Promise<extHostProtocol.ICodeActionListDto | undefined> {\n\t\treturn this._withAdapter(handle, CodeActionAdapter, adapter => adapter.provideCodeActions(URI.revive(resource), rangeOrSelection, context, token), undefined);\n\t}\n\n\t$releaseCodeActions(handle: number, cacheId: number): void {\n\t\tthis._withAdapter(handle, CodeActionAdapter, adapter => Promise.resolve(adapter.releaseCodeActions(cacheId)), undefined);\n\t}\n\n\t// --- formatting\n\n\tregisterDocumentFormattingEditProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentFormattingEditProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DocumentFormattingAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDocumentFormattingSupport(handle, this._transformDocumentSelector(selector), extension.identifier, extension.displayName || extension.name);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentFormattingEdits(handle: number, resource: UriComponents, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\t\treturn this._withAdapter(handle, DocumentFormattingAdapter, adapter => adapter.provideDocumentFormattingEdits(URI.revive(resource), options, token), undefined);\n\t}\n\n\tregisterDocumentRangeFormattingEditProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentRangeFormattingEditProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new RangeFormattingAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerRangeFormattingSupport(handle, this._transformDocumentSelector(selector), extension.identifier, extension.displayName || extension.name);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: IRange, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\t\treturn this._withAdapter(handle, RangeFormattingAdapter, adapter => adapter.provideDocumentRangeFormattingEdits(URI.revive(resource), range, options, token), undefined);\n\t}\n\n\tregisterOnTypeFormattingEditProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.OnTypeFormattingEditProvider, triggerCharacters: string[]): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new OnTypeFormattingAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerOnTypeFormattingSupport(handle, this._transformDocumentSelector(selector), triggerCharacters, extension.identifier);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideOnTypeFormattingEdits(handle: number, resource: UriComponents, position: IPosition, ch: string, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\t\treturn this._withAdapter(handle, OnTypeFormattingAdapter, adapter => adapter.provideOnTypeFormattingEdits(URI.revive(resource), position, ch, options, token), undefined);\n\t}\n\n\t// --- navigate types\n\n\tregisterWorkspaceSymbolProvider(extension: IExtensionDescription, provider: vscode.WorkspaceSymbolProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new NavigateTypeAdapter(provider, this._logService), extension);\n\t\tthis._proxy.$registerNavigateTypeSupport(handle);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideWorkspaceSymbols(handle: number, search: string, token: CancellationToken): Promise<extHostProtocol.IWorkspaceSymbolsDto> {\n\t\treturn this._withAdapter(handle, NavigateTypeAdapter, adapter => adapter.provideWorkspaceSymbols(search, token), { symbols: [] });\n\t}\n\n\t$resolveWorkspaceSymbol(handle: number, symbol: extHostProtocol.IWorkspaceSymbolDto, token: CancellationToken): Promise<extHostProtocol.IWorkspaceSymbolDto | undefined> {\n\t\treturn this._withAdapter(handle, NavigateTypeAdapter, adapter => adapter.resolveWorkspaceSymbol(symbol, token), undefined);\n\t}\n\n\t$releaseWorkspaceSymbols(handle: number, id: number): void {\n\t\tthis._withAdapter(handle, NavigateTypeAdapter, adapter => adapter.releaseWorkspaceSymbols(id), undefined);\n\t}\n\n\t// --- rename\n\n\tregisterRenameProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.RenameProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new RenameAdapter(this._documents, provider, this._logService), extension);\n\t\tthis._proxy.$registerRenameSupport(handle, this._transformDocumentSelector(selector), RenameAdapter.supportsResolving(provider));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideRenameEdits(handle: number, resource: UriComponents, position: IPosition, newName: string, token: CancellationToken): Promise<extHostProtocol.IWorkspaceEditDto | undefined> {\n\t\treturn this._withAdapter(handle, RenameAdapter, adapter => adapter.provideRenameEdits(URI.revive(resource), position, newName, token), undefined);\n\t}\n\n\t$resolveRenameLocation(handle: number, resource: URI, position: IPosition, token: CancellationToken): Promise<modes.RenameLocation | undefined> {\n\t\treturn this._withAdapter(handle, RenameAdapter, adapter => adapter.resolveRenameLocation(URI.revive(resource), position, token), undefined);\n\t}\n\n\t//#region semantic coloring\n\n\tregisterDocumentSemanticTokensProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentSemanticTokensProvider, legend: vscode.SemanticTokensLegend): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tconst eventHandle = (typeof provider.onDidChangeSemanticTokens === 'function' ? this._nextHandle() : undefined);\n\n\t\tthis._adapter.set(handle, new AdapterData(new DocumentSemanticTokensAdapter(this._documents, provider), extension));\n\t\tthis._proxy.$registerDocumentSemanticTokensProvider(handle, this._transformDocumentSelector(selector), legend, eventHandle);\n\t\tlet result = this._createDisposable(handle);\n\n\t\tif (eventHandle) {\n\t\t\tconst subscription = provider.onDidChangeSemanticTokens!(_ => this._proxy.$emitDocumentSemanticTokensEvent(eventHandle));\n\t\t\tresult = Disposable.from(result, subscription);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t$provideDocumentSemanticTokens(handle: number, resource: UriComponents, previousResultId: number, token: CancellationToken): Promise<VSBuffer | null> {\n\t\treturn this._withAdapter(handle, DocumentSemanticTokensAdapter, adapter => adapter.provideDocumentSemanticTokens(URI.revive(resource), previousResultId, token), null);\n\t}\n\n\t$releaseDocumentSemanticTokens(handle: number, semanticColoringResultId: number): void {\n\t\tthis._withAdapter(handle, DocumentSemanticTokensAdapter, adapter => adapter.releaseDocumentSemanticColoring(semanticColoringResultId), undefined);\n\t}\n\n\tregisterDocumentRangeSemanticTokensProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentRangeSemanticTokensProvider, legend: vscode.SemanticTokensLegend): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DocumentRangeSemanticTokensAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDocumentRangeSemanticTokensProvider(handle, this._transformDocumentSelector(selector), legend);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentRangeSemanticTokens(handle: number, resource: UriComponents, range: IRange, token: CancellationToken): Promise<VSBuffer | null> {\n\t\treturn this._withAdapter(handle, DocumentRangeSemanticTokensAdapter, adapter => adapter.provideDocumentRangeSemanticTokens(URI.revive(resource), range, token), null);\n\t}\n\n\t//#endregion\n\n\t// --- suggestion\n\n\tregisterCompletionItemProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.CompletionItemProvider, triggerCharacters: string[]): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new SuggestAdapter(this._documents, this._commands.converter, provider, this._logService, this._apiDeprecation, this._telemetryShape, extension), extension);\n\t\tthis._proxy.$registerSuggestSupport(handle, this._transformDocumentSelector(selector), triggerCharacters, SuggestAdapter.supportsResolving(provider), extension.identifier);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideCompletionItems(handle: number, resource: UriComponents, position: IPosition, context: modes.CompletionContext, token: CancellationToken): Promise<extHostProtocol.ISuggestResultDto | undefined> {\n\t\treturn this._withAdapter(handle, SuggestAdapter, adapter => adapter.provideCompletionItems(URI.revive(resource), position, context, token), undefined);\n\t}\n\n\t$resolveCompletionItem(handle: number, id: extHostProtocol.ChainedCacheId, token: CancellationToken): Promise<extHostProtocol.ISuggestDataDto | undefined> {\n\t\treturn this._withAdapter(handle, SuggestAdapter, adapter => adapter.resolveCompletionItem(id, token), undefined);\n\t}\n\n\t$releaseCompletionItems(handle: number, id: number): void {\n\t\tthis._withAdapter(handle, SuggestAdapter, adapter => adapter.releaseCompletionItems(id), undefined);\n\t}\n\n\t// --- parameter hints\n\n\tregisterSignatureHelpProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.SignatureHelpProvider, metadataOrTriggerChars: string[] | vscode.SignatureHelpProviderMetadata): vscode.Disposable {\n\t\tconst metadata: extHostProtocol.ISignatureHelpProviderMetadataDto | undefined = Array.isArray(metadataOrTriggerChars)\n\t\t\t? { triggerCharacters: metadataOrTriggerChars, retriggerCharacters: [] }\n\t\t\t: metadataOrTriggerChars;\n\n\t\tconst handle = this._addNewAdapter(new SignatureHelpAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerSignatureHelpProvider(handle, this._transformDocumentSelector(selector), metadata);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideSignatureHelp(handle: number, resource: UriComponents, position: IPosition, context: extHostProtocol.ISignatureHelpContextDto, token: CancellationToken): Promise<extHostProtocol.ISignatureHelpDto | undefined> {\n\t\treturn this._withAdapter(handle, SignatureHelpAdapter, adapter => adapter.provideSignatureHelp(URI.revive(resource), position, context, token), undefined);\n\t}\n\n\t$releaseSignatureHelp(handle: number, id: number): void {\n\t\tthis._withAdapter(handle, SignatureHelpAdapter, adapter => adapter.releaseSignatureHelp(id), undefined);\n\t}\n\n\t// --- links\n\n\tregisterDocumentLinkProvider(extension: IExtensionDescription | undefined, selector: vscode.DocumentSelector, provider: vscode.DocumentLinkProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new LinkProviderAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDocumentLinkProvider(handle, this._transformDocumentSelector(selector), typeof provider.resolveDocumentLink === 'function');\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentLinks(handle: number, resource: UriComponents, token: CancellationToken): Promise<extHostProtocol.ILinksListDto | undefined> {\n\t\treturn this._withAdapter(handle, LinkProviderAdapter, adapter => adapter.provideLinks(URI.revive(resource), token), undefined);\n\t}\n\n\t$resolveDocumentLink(handle: number, id: extHostProtocol.ChainedCacheId, token: CancellationToken): Promise<extHostProtocol.ILinkDto | undefined> {\n\t\treturn this._withAdapter(handle, LinkProviderAdapter, adapter => adapter.resolveLink(id, token), undefined);\n\t}\n\n\t$releaseDocumentLinks(handle: number, id: number): void {\n\t\tthis._withAdapter(handle, LinkProviderAdapter, adapter => adapter.releaseLinks(id), undefined);\n\t}\n\n\tregisterColorProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentColorProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new ColorProviderAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDocumentColorProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentColors(handle: number, resource: UriComponents, token: CancellationToken): Promise<extHostProtocol.IRawColorInfo[]> {\n\t\treturn this._withAdapter(handle, ColorProviderAdapter, adapter => adapter.provideColors(URI.revive(resource), token), []);\n\t}\n\n\t$provideColorPresentations(handle: number, resource: UriComponents, colorInfo: extHostProtocol.IRawColorInfo, token: CancellationToken): Promise<modes.IColorPresentation[] | undefined> {\n\t\treturn this._withAdapter(handle, ColorProviderAdapter, adapter => adapter.provideColorPresentations(URI.revive(resource), colorInfo, token), undefined);\n\t}\n\n\tregisterFoldingRangeProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.FoldingRangeProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new FoldingProviderAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerFoldingRangeProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideFoldingRanges(handle: number, resource: UriComponents, context: vscode.FoldingContext, token: CancellationToken): Promise<modes.FoldingRange[] | undefined> {\n\t\treturn this._withAdapter(handle, FoldingProviderAdapter, adapter => adapter.provideFoldingRanges(URI.revive(resource), context, token), undefined);\n\t}\n\n\t// --- smart select\n\n\tregisterSelectionRangeProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.SelectionRangeProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new SelectionRangeAdapter(this._documents, provider, this._logService), extension);\n\t\tthis._proxy.$registerSelectionRangeProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideSelectionRanges(handle: number, resource: UriComponents, positions: IPosition[], token: CancellationToken): Promise<modes.SelectionRange[][]> {\n\t\treturn this._withAdapter(handle, SelectionRangeAdapter, adapter => adapter.provideSelectionRanges(URI.revive(resource), positions, token), []);\n\t}\n\n\t// --- call hierarchy\n\n\tregisterCallHierarchyProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.CallHierarchyProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new CallHierarchyAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerCallHierarchyProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$prepareCallHierarchy(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<extHostProtocol.ICallHierarchyItemDto[] | undefined> {\n\t\treturn this._withAdapter(handle, CallHierarchyAdapter, adapter => Promise.resolve(adapter.prepareSession(URI.revive(resource), position, token)), undefined);\n\t}\n\n\t$provideCallHierarchyIncomingCalls(handle: number, sessionId: string, itemId: string, token: CancellationToken): Promise<extHostProtocol.IIncomingCallDto[] | undefined> {\n\t\treturn this._withAdapter(handle, CallHierarchyAdapter, adapter => adapter.provideCallsTo(sessionId, itemId, token), undefined);\n\t}\n\n\t$provideCallHierarchyOutgoingCalls(handle: number, sessionId: string, itemId: string, token: CancellationToken): Promise<extHostProtocol.IOutgoingCallDto[] | undefined> {\n\t\treturn this._withAdapter(handle, CallHierarchyAdapter, adapter => adapter.provideCallsFrom(sessionId, itemId, token), undefined);\n\t}\n\n\t$releaseCallHierarchy(handle: number, sessionId: string): void {\n\t\tthis._withAdapter(handle, CallHierarchyAdapter, adapter => Promise.resolve(adapter.releaseSession(sessionId)), undefined);\n\t}\n\n\t// --- configuration\n\n\tprivate static _serializeRegExp(regExp: RegExp): extHostProtocol.IRegExpDto {\n\t\treturn {\n\t\t\tpattern: regExp.source,\n\t\t\tflags: regExpFlags(regExp),\n\t\t};\n\t}\n\n\tprivate static _serializeIndentationRule(indentationRule: vscode.IndentationRule): extHostProtocol.IIndentationRuleDto {\n\t\treturn {\n\t\t\tdecreaseIndentPattern: ExtHostLanguageFeatures._serializeRegExp(indentationRule.decreaseIndentPattern),\n\t\t\tincreaseIndentPattern: ExtHostLanguageFeatures._serializeRegExp(indentationRule.increaseIndentPattern),\n\t\t\tindentNextLinePattern: indentationRule.indentNextLinePattern ? ExtHostLanguageFeatures._serializeRegExp(indentationRule.indentNextLinePattern) : undefined,\n\t\t\tunIndentedLinePattern: indentationRule.unIndentedLinePattern ? ExtHostLanguageFeatures._serializeRegExp(indentationRule.unIndentedLinePattern) : undefined,\n\t\t};\n\t}\n\n\tprivate static _serializeOnEnterRule(onEnterRule: vscode.OnEnterRule): extHostProtocol.IOnEnterRuleDto {\n\t\treturn {\n\t\t\tbeforeText: ExtHostLanguageFeatures._serializeRegExp(onEnterRule.beforeText),\n\t\t\tafterText: onEnterRule.afterText ? ExtHostLanguageFeatures._serializeRegExp(onEnterRule.afterText) : undefined,\n\t\t\toneLineAboveText: onEnterRule.oneLineAboveText ? ExtHostLanguageFeatures._serializeRegExp(onEnterRule.oneLineAboveText) : undefined,\n\t\t\taction: onEnterRule.action\n\t\t};\n\t}\n\n\tprivate static _serializeOnEnterRules(onEnterRules: vscode.OnEnterRule[]): extHostProtocol.IOnEnterRuleDto[] {\n\t\treturn onEnterRules.map(ExtHostLanguageFeatures._serializeOnEnterRule);\n\t}\n\n\tsetLanguageConfiguration(extension: IExtensionDescription, languageId: string, configuration: vscode.LanguageConfiguration): vscode.Disposable {\n\t\tlet { wordPattern } = configuration;\n\n\t\t// check for a valid word pattern\n\t\tif (wordPattern && regExpLeadsToEndlessLoop(wordPattern)) {\n\t\t\tthrow new Error(`Invalid language configuration: wordPattern '${wordPattern}' is not allowed to match the empty string.`);\n\t\t}\n\n\t\t// word definition\n\t\tif (wordPattern) {\n\t\t\tthis._documents.setWordDefinitionFor(languageId, wordPattern);\n\t\t} else {\n\t\t\tthis._documents.setWordDefinitionFor(languageId, undefined);\n\t\t}\n\n\t\tif (configuration.__electricCharacterSupport) {\n\t\t\tthis._apiDeprecation.report('LanguageConfiguration.__electricCharacterSupport', extension,\n\t\t\t\t`Do not use.`);\n\t\t}\n\n\t\tif (configuration.__characterPairSupport) {\n\t\t\tthis._apiDeprecation.report('LanguageConfiguration.__characterPairSupport', extension,\n\t\t\t\t`Do not use.`);\n\t\t}\n\n\t\tconst handle = this._nextHandle();\n\t\tconst serializedConfiguration: extHostProtocol.ILanguageConfigurationDto = {\n\t\t\tcomments: configuration.comments,\n\t\t\tbrackets: configuration.brackets,\n\t\t\twordPattern: configuration.wordPattern ? ExtHostLanguageFeatures._serializeRegExp(configuration.wordPattern) : undefined,\n\t\t\tindentationRules: configuration.indentationRules ? ExtHostLanguageFeatures._serializeIndentationRule(configuration.indentationRules) : undefined,\n\t\t\tonEnterRules: configuration.onEnterRules ? ExtHostLanguageFeatures._serializeOnEnterRules(configuration.onEnterRules) : undefined,\n\t\t\t__electricCharacterSupport: configuration.__electricCharacterSupport,\n\t\t\t__characterPairSupport: configuration.__characterPairSupport,\n\t\t};\n\t\tthis._proxy.$setLanguageConfiguration(handle, languageId, serializedConfiguration);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$setWordDefinitions(wordDefinitions: extHostProtocol.ILanguageWordDefinitionDto[]): void {\n\t\tfor (const wordDefinition of wordDefinitions) {\n\t\t\tthis._documents.setWordDefinitionFor(wordDefinition.languageId, new RegExp(wordDefinition.regexSource, wordDefinition.regexFlags));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadLanguagesShape, IMainContext } from './extHost.protocol';\nimport type * as vscode from 'vscode';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\n\nexport class ExtHostLanguages {\n\n\tprivate readonly _proxy: MainThreadLanguagesShape;\n\tprivate readonly _documents: ExtHostDocuments;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tdocuments: ExtHostDocuments\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadLanguages);\n\t\tthis._documents = documents;\n\t}\n\n\tgetLanguages(): Promise<string[]> {\n\t\treturn this._proxy.$getLanguages();\n\t}\n\n\tasync changeLanguage(uri: vscode.Uri, languageId: string): Promise<vscode.TextDocument> {\n\t\tawait this._proxy.$changeLanguage(uri, languageId);\n\t\tconst data = this._documents.getDocumentData(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error(`document '${uri.toString}' NOT found`);\n\t\t}\n\t\treturn data.document;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport Severity from 'vs/base/common/severity';\nimport type * as vscode from 'vscode';\nimport { MainContext, MainThreadMessageServiceShape, MainThreadMessageOptions, IMainContext } from './extHost.protocol';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction isMessageItem(item: any): item is vscode.MessageItem {\n\treturn item && item.title;\n}\n\nexport class ExtHostMessageService {\n\n\tprivate _proxy: MainThreadMessageServiceShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadMessageService);\n\t}\n\n\n\tshowMessage(extension: IExtensionDescription, severity: Severity, message: string, optionsOrFirstItem: vscode.MessageOptions | string | undefined, rest: string[]): Promise<string | undefined>;\n\tshowMessage(extension: IExtensionDescription, severity: Severity, message: string, optionsOrFirstItem: vscode.MessageOptions | vscode.MessageItem | undefined, rest: vscode.MessageItem[]): Promise<vscode.MessageItem | undefined>;\n\tshowMessage(extension: IExtensionDescription, severity: Severity, message: string, optionsOrFirstItem: vscode.MessageOptions | vscode.MessageItem | string | undefined, rest: Array<vscode.MessageItem | string>): Promise<string | vscode.MessageItem | undefined>;\n\tshowMessage(extension: IExtensionDescription, severity: Severity, message: string, optionsOrFirstItem: vscode.MessageOptions | string | vscode.MessageItem | undefined, rest: Array<string | vscode.MessageItem>): Promise<string | vscode.MessageItem | undefined> {\n\n\t\tconst options: MainThreadMessageOptions = { extension };\n\t\tlet items: (string | vscode.MessageItem)[];\n\n\t\tif (typeof optionsOrFirstItem === 'string' || isMessageItem(optionsOrFirstItem)) {\n\t\t\titems = [optionsOrFirstItem, ...rest];\n\t\t} else {\n\t\t\toptions.modal = optionsOrFirstItem && optionsOrFirstItem.modal;\n\t\t\titems = rest;\n\t\t}\n\n\t\tconst commands: { title: string; isCloseAffordance: boolean; handle: number; }[] = [];\n\n\t\tfor (let handle = 0; handle < items.length; handle++) {\n\t\t\tconst command = items[handle];\n\t\t\tif (typeof command === 'string') {\n\t\t\t\tcommands.push({ title: command, handle, isCloseAffordance: false });\n\t\t\t} else if (typeof command === 'object') {\n\t\t\t\tlet { title, isCloseAffordance } = command;\n\t\t\t\tcommands.push({ title, isCloseAffordance: !!isCloseAffordance, handle });\n\t\t\t} else {\n\t\t\t\tthis._logService.warn('Invalid message item:', command);\n\t\t\t}\n\t\t}\n\n\t\treturn this._proxy.$showMessage(severity, message, options, commands).then(handle => {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\treturn items[handle];\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { readonly } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { CellKind, CellOutputKind, ExtHostNotebookShape, IMainContext, MainContext, MainThreadNotebookShape, NotebookCellOutputsSplice, MainThreadDocumentsShape, INotebookEditorPropertiesChangeData } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { CellEditType, CellUri, diff, ICellEditOperation, ICellInsertEdit, IErrorOutput, INotebookDisplayOrder, INotebookEditData, IOrderedMimeType, IStreamOutput, ITransformedDisplayOutputDto, mimeTypeSupportedByCore, NotebookCellsChangedEvent, NotebookCellsSplice2, sortMimeTypes, ICellDeleteEdit, notebookDocumentMetadataDefaults, NotebookCellsChangeType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { Disposable as VSCodeDisposable } from './extHostTypes';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtHostDocumentData } from 'vs/workbench/api/common/extHostDocumentData';\nimport { NotImplementedProxy } from 'vs/base/common/types';\n\ninterface IObservable<T> {\n\tproxy: T;\n\tonDidChange: Event<void>;\n}\n\nfunction getObservable<T extends Object>(obj: T): IObservable<T> {\n\tconst onDidChange = new Emitter<void>();\n\tconst proxy = new Proxy(obj, {\n\t\tset(target: T, p: PropertyKey, value: any, _receiver: any): boolean {\n\t\t\ttarget[p as keyof T] = value;\n\t\t\tonDidChange.fire();\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn {\n\t\tproxy,\n\t\tonDidChange: onDidChange.event\n\t};\n}\n\nexport class ExtHostCell extends Disposable implements vscode.NotebookCell {\n\n\t// private originalSource: string[];\n\tprivate _outputs: any[];\n\tprivate _onDidChangeOutputs = new Emitter<ISplice<vscode.CellOutput>[]>();\n\tonDidChangeOutputs: Event<ISplice<vscode.CellOutput>[]> = this._onDidChangeOutputs.event;\n\t// private _textDocument: vscode.TextDocument | undefined;\n\t// private _initalVersion: number = -1;\n\tprivate _outputMapping = new Set<vscode.CellOutput>();\n\tprivate _metadata: vscode.NotebookCellMetadata;\n\n\tprivate _metadataChangeListener: IDisposable;\n\n\tprivate _documentData: ExtHostDocumentData;\n\n\tget document(): vscode.TextDocument {\n\t\treturn this._documentData.document;\n\t}\n\n\tget source() {\n\t\t// todo@jrieken remove this\n\t\treturn this._documentData.getText();\n\t}\n\n\tconstructor(\n\t\tprivate readonly viewType: string,\n\t\tprivate readonly documentUri: URI,\n\t\treadonly handle: number,\n\t\treadonly uri: URI,\n\t\tcontent: string,\n\t\tpublic readonly cellKind: CellKind,\n\t\tpublic language: string,\n\t\toutputs: any[],\n\t\t_metadata: vscode.NotebookCellMetadata | undefined,\n\t\tprivate _proxy: MainThreadNotebookShape,\n\t) {\n\t\tsuper();\n\t\tthis._documentData = new ExtHostDocumentData(\n\t\t\tnew class extends NotImplementedProxy<MainThreadDocumentsShape>('document') { },\n\t\t\turi,\n\t\t\tcontent.split(/\\r|\\n|\\r\\n/g), '\\n',\n\t\t\tlanguage, 0, false\n\t\t);\n\n\t\tthis._outputs = outputs;\n\n\t\tconst observableMetadata = getObservable(_metadata || {});\n\t\tthis._metadata = observableMetadata.proxy;\n\t\tthis._metadataChangeListener = this._register(observableMetadata.onDidChange(() => {\n\t\t\tthis.updateMetadata();\n\t\t}));\n\t}\n\n\tget outputs() {\n\t\treturn this._outputs;\n\t}\n\n\tset outputs(newOutputs: vscode.CellOutput[]) {\n\t\tlet diffs = diff<vscode.CellOutput>(this._outputs || [], newOutputs || [], (a) => {\n\t\t\treturn this._outputMapping.has(a);\n\t\t});\n\n\t\tdiffs.forEach(diff => {\n\t\t\tfor (let i = diff.start; i < diff.start + diff.deleteCount; i++) {\n\t\t\t\tthis._outputMapping.delete(this._outputs[i]);\n\t\t\t}\n\n\t\t\tdiff.toInsert.forEach(output => {\n\t\t\t\tthis._outputMapping.add(output);\n\t\t\t});\n\t\t});\n\n\t\tthis._outputs = newOutputs;\n\t\tthis._onDidChangeOutputs.fire(diffs);\n\t}\n\n\tget metadata() {\n\t\treturn this._metadata;\n\t}\n\n\tset metadata(newMetadata: vscode.NotebookCellMetadata) {\n\t\t// Don't apply metadata defaults here, 'undefined' means 'inherit from document metadata'\n\t\tthis._metadataChangeListener.dispose();\n\t\tconst observableMetadata = getObservable(newMetadata);\n\t\tthis._metadata = observableMetadata.proxy;\n\t\tthis._metadataChangeListener = this._register(observableMetadata.onDidChange(() => {\n\t\t\tthis.updateMetadata();\n\t\t}));\n\n\t\tthis.updateMetadata();\n\t}\n\n\tprivate updateMetadata(): Promise<void> {\n\t\treturn this._proxy.$updateNotebookCellMetadata(this.viewType, this.documentUri, this.handle, this._metadata);\n\t}\n\n\tattachTextDocument(document: ExtHostDocumentData) {\n\t\tthis._documentData = document;\n\t\t// this._initalVersion = this._documentData.version;\n\t}\n\n\tdetachTextDocument() {\n\t\t// no-op? keep stale document until new comes along?\n\n\t\t// if (this._textDocument && this._textDocument.version !== this._initalVersion) {\n\t\t// \tthis.originalSource = this._textDocument.getText().split(/\\r|\\n|\\r\\n/g);\n\t\t// }\n\t\t// this._textDocument = undefined;\n\t\t// this._initalVersion = -1;\n\t}\n}\n\nexport class ExtHostNotebookDocument extends Disposable implements vscode.NotebookDocument {\n\tprivate static _handlePool: number = 0;\n\treadonly handle = ExtHostNotebookDocument._handlePool++;\n\n\tprivate _cells: ExtHostCell[] = [];\n\n\tprivate _cellDisposableMapping = new Map<number, DisposableStore>();\n\n\tget cells() {\n\t\treturn this._cells;\n\t}\n\n\tprivate _languages: string[] = [];\n\n\tget languages() {\n\t\treturn this._languages = [];\n\t}\n\n\tset languages(newLanguages: string[]) {\n\t\tthis._languages = newLanguages;\n\t\tthis._proxy.$updateNotebookLanguages(this.viewType, this.uri, this._languages);\n\t}\n\n\tprivate _metadata: Required<vscode.NotebookDocumentMetadata> = notebookDocumentMetadataDefaults;\n\tprivate _metadataChangeListener: IDisposable;\n\n\tget metadata() {\n\t\treturn this._metadata;\n\t}\n\n\tset metadata(newMetadata: Required<vscode.NotebookDocumentMetadata>) {\n\t\tthis._metadataChangeListener.dispose();\n\t\tnewMetadata = {\n\t\t\t...notebookDocumentMetadataDefaults,\n\t\t\t...newMetadata\n\t\t};\n\t\tif (this._metadataChangeListener) {\n\t\t\tthis._metadataChangeListener.dispose();\n\t\t}\n\n\t\tconst observableMetadata = getObservable(newMetadata);\n\t\tthis._metadata = observableMetadata.proxy;\n\t\tthis._metadataChangeListener = this._register(observableMetadata.onDidChange(() => {\n\t\t\tthis.updateMetadata();\n\t\t}));\n\n\t\tthis.updateMetadata();\n\t}\n\n\tprivate _displayOrder: string[] = [];\n\n\tget displayOrder() {\n\t\treturn this._displayOrder;\n\t}\n\n\tset displayOrder(newOrder: string[]) {\n\t\tthis._displayOrder = newOrder;\n\t}\n\n\tprivate _versionId = 0;\n\n\tget versionId() {\n\t\treturn this._versionId;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _proxy: MainThreadNotebookShape,\n\t\tprivate _documentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tpublic viewType: string,\n\t\tpublic uri: URI,\n\t\tpublic renderingHandler: ExtHostNotebookOutputRenderingHandler\n\t) {\n\t\tsuper();\n\n\t\tconst observableMetadata = getObservable(notebookDocumentMetadataDefaults);\n\t\tthis._metadata = observableMetadata.proxy;\n\t\tthis._metadataChangeListener = this._register(observableMetadata.onDidChange(() => {\n\t\t\tthis.updateMetadata();\n\t\t}));\n\t}\n\n\tprivate updateMetadata() {\n\t\tthis._proxy.$updateNotebookMetadata(this.viewType, this.uri, this._metadata);\n\t}\n\n\tdispose() {\n\t\tsuper.dispose();\n\t\tthis._cellDisposableMapping.forEach(cell => cell.dispose());\n\t}\n\n\tget fileName() { return this.uri.fsPath; }\n\n\tget isDirty() { return false; }\n\n\taccpetModelChanged(event: NotebookCellsChangedEvent) {\n\t\tif (event.kind === NotebookCellsChangeType.ModelChange) {\n\t\t\tthis.$spliceNotebookCells(event.changes);\n\t\t} else if (event.kind === NotebookCellsChangeType.Move) {\n\t\t\tthis.$moveCell(event.index, event.newIdx);\n\t\t} else if (event.kind === NotebookCellsChangeType.CellClearOutput) {\n\t\t\tthis.$clearCellOutputs(event.index);\n\t\t} else if (event.kind === NotebookCellsChangeType.CellsClearOutput) {\n\t\t\tthis.$clearAllCellOutputs();\n\t\t} else if (event.kind === NotebookCellsChangeType.ChangeLanguage) {\n\t\t\tthis.$changeCellLanguage(event.index, event.language);\n\t\t}\n\n\t\tthis._versionId = event.versionId;\n\t}\n\n\tprivate $spliceNotebookCells(splices: NotebookCellsSplice2[]): void {\n\t\tif (!splices.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tlet cellDtos = splice[2];\n\t\t\tlet newCells = cellDtos.map(cell => {\n\t\t\t\tconst extCell = new ExtHostCell(this.viewType, this.uri, cell.handle, URI.revive(cell.uri), cell.source.join('\\n'), cell.cellKind, cell.language, cell.outputs, cell.metadata, this._proxy);\n\t\t\t\tconst documentData = this._documentsAndEditors.getDocument(URI.revive(cell.uri));\n\n\t\t\t\tif (documentData) {\n\t\t\t\t\textCell.attachTextDocument(documentData);\n\t\t\t\t}\n\n\t\t\t\tif (!this._cellDisposableMapping.has(extCell.handle)) {\n\t\t\t\t\tthis._cellDisposableMapping.set(extCell.handle, new DisposableStore());\n\t\t\t\t}\n\n\t\t\t\tlet store = this._cellDisposableMapping.get(extCell.handle)!;\n\n\t\t\t\tstore.add(extCell.onDidChangeOutputs((diffs) => {\n\t\t\t\t\tthis.eventuallyUpdateCellOutputs(extCell, diffs);\n\t\t\t\t}));\n\n\t\t\t\treturn extCell;\n\t\t\t});\n\n\t\t\tfor (let j = splice[0]; j < splice[0] + splice[1]; j++) {\n\t\t\t\tthis._cellDisposableMapping.get(this.cells[j].handle)?.dispose();\n\t\t\t\tthis._cellDisposableMapping.delete(this.cells[j].handle);\n\n\t\t\t}\n\n\t\t\tthis.cells.splice(splice[0], splice[1], ...newCells);\n\t\t});\n\t}\n\n\tprivate $moveCell(index: number, newIdx: number) {\n\t\tconst cells = this.cells.splice(index, 1);\n\t\tthis.cells.splice(newIdx, 0, ...cells);\n\t}\n\n\tprivate $clearCellOutputs(index: number) {\n\t\tconst cell = this.cells[index];\n\t\tcell.outputs = [];\n\t}\n\n\tprivate $clearAllCellOutputs() {\n\t\tthis.cells.forEach(cell => cell.outputs = []);\n\t}\n\n\tprivate $changeCellLanguage(index: number, language: string) {\n\t\tconst cell = this.cells[index];\n\t\tcell.language = language;\n\t}\n\n\teventuallyUpdateCellOutputs(cell: ExtHostCell, diffs: ISplice<vscode.CellOutput>[]) {\n\t\tlet renderers = new Set<number>();\n\t\tlet outputDtos: NotebookCellOutputsSplice[] = diffs.map(diff => {\n\t\t\tlet outputs = diff.toInsert;\n\n\t\t\tlet transformedOutputs = outputs.map(output => {\n\t\t\t\tif (output.outputKind === CellOutputKind.Rich) {\n\t\t\t\t\tconst ret = this.transformMimeTypes(output);\n\n\t\t\t\t\tif (ret.orderedMimeTypes[ret.pickedMimeTypeIndex].isResolved) {\n\t\t\t\t\t\trenderers.add(ret.orderedMimeTypes[ret.pickedMimeTypeIndex].rendererId!);\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\n\t\t\t\t} else {\n\t\t\t\t\treturn output as IStreamOutput | IErrorOutput;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn [diff.start, diff.deleteCount, transformedOutputs];\n\t\t});\n\n\t\tthis._proxy.$spliceNotebookCellOutputs(this.viewType, this.uri, cell.handle, outputDtos, Array.from(renderers));\n\t}\n\n\ttransformMimeTypes(output: vscode.CellDisplayOutput): ITransformedDisplayOutputDto {\n\t\tlet mimeTypes = Object.keys(output.data);\n\n\t\t// TODO@rebornix, the document display order might be assigned a bit later. We need to postpone sending the outputs to the core side.\n\t\tlet coreDisplayOrder = this.renderingHandler.outputDisplayOrder;\n\t\tconst sorted = sortMimeTypes(mimeTypes, coreDisplayOrder?.userOrder || [], this._displayOrder, coreDisplayOrder?.defaultOrder || []);\n\n\t\tlet orderMimeTypes: IOrderedMimeType[] = [];\n\n\t\tsorted.forEach(mimeType => {\n\t\t\tlet handlers = this.renderingHandler.findBestMatchedRenderer(mimeType);\n\n\t\t\tif (handlers.length) {\n\t\t\t\tlet renderedOutput = handlers[0].render(this, output, mimeType);\n\n\t\t\t\torderMimeTypes.push({\n\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\tisResolved: true,\n\t\t\t\t\trendererId: handlers[0].handle,\n\t\t\t\t\toutput: renderedOutput\n\t\t\t\t});\n\n\t\t\t\tfor (let i = 1; i < handlers.length; i++) {\n\t\t\t\t\torderMimeTypes.push({\n\t\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\t\tisResolved: false,\n\t\t\t\t\t\trendererId: handlers[i].handle\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (mimeTypeSupportedByCore(mimeType)) {\n\t\t\t\t\torderMimeTypes.push({\n\t\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\t\tisResolved: false,\n\t\t\t\t\t\trendererId: -1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\torderMimeTypes.push({\n\t\t\t\t\tmimeType: mimeType,\n\t\t\t\t\tisResolved: false\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\toutputKind: output.outputKind,\n\t\t\tdata: output.data,\n\t\t\torderedMimeTypes: orderMimeTypes,\n\t\t\tpickedMimeTypeIndex: 0\n\t\t};\n\t}\n\n\tgetCell(cellHandle: number) {\n\t\treturn this.cells.find(cell => cell.handle === cellHandle);\n\t}\n\n\tattachCellTextDocument(textDocument: ExtHostDocumentData) {\n\t\tlet cell = this.cells.find(cell => cell.uri.toString() === textDocument.document.uri.toString());\n\t\tif (cell) {\n\t\t\tcell.attachTextDocument(textDocument);\n\t\t}\n\t}\n\n\tdetachCellTextDocument(textDocument: ExtHostDocumentData) {\n\t\tlet cell = this.cells.find(cell => cell.uri.toString() === textDocument.document.uri.toString());\n\t\tif (cell) {\n\t\t\tcell.detachTextDocument();\n\t\t}\n\t}\n}\n\nexport class NotebookEditorCellEdit {\n\tprivate _finalized: boolean = false;\n\tprivate readonly _documentVersionId: number;\n\tprivate _collectedEdits: ICellEditOperation[] = [];\n\tprivate _renderers = new Set<number>();\n\n\tconstructor(\n\t\treadonly editor: ExtHostNotebookEditor\n\t) {\n\t\tthis._documentVersionId = editor.document.versionId;\n\t}\n\n\tfinalize(): INotebookEditData {\n\t\tthis._finalized = true;\n\t\treturn {\n\t\t\tdocumentVersionId: this._documentVersionId,\n\t\t\tedits: this._collectedEdits,\n\t\t\trenderers: Array.from(this._renderers)\n\t\t};\n\t}\n\n\tprivate _throwIfFinalized() {\n\t\tif (this._finalized) {\n\t\t\tthrow new Error('Edit is only valid while callback runs');\n\t\t}\n\t}\n\n\tinsert(index: number, content: string | string[], language: string, type: CellKind, outputs: vscode.CellOutput[], metadata: vscode.NotebookCellMetadata | undefined): void {\n\t\tthis._throwIfFinalized();\n\n\t\tconst sourceArr = Array.isArray(content) ? content : content.split(/\\r|\\n|\\r\\n/g);\n\t\tlet cell = {\n\t\t\tsource: sourceArr,\n\t\t\tlanguage,\n\t\t\tcellKind: type,\n\t\t\toutputs: (outputs as any[]), // TODO@rebornix\n\t\t\tmetadata\n\t\t};\n\n\t\tconst transformedOutputs = outputs.map(output => {\n\t\t\tif (output.outputKind === CellOutputKind.Rich) {\n\t\t\t\tconst ret = this.editor.document.transformMimeTypes(output);\n\n\t\t\t\tif (ret.orderedMimeTypes[ret.pickedMimeTypeIndex].isResolved) {\n\t\t\t\t\tthis._renderers.add(ret.orderedMimeTypes[ret.pickedMimeTypeIndex].rendererId!);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\treturn output as IStreamOutput | IErrorOutput;\n\t\t\t}\n\t\t});\n\n\t\tcell.outputs = transformedOutputs;\n\n\t\tthis._collectedEdits.push({\n\t\t\teditType: CellEditType.Insert,\n\t\t\tindex,\n\t\t\tcells: [cell]\n\t\t});\n\t}\n\n\tdelete(index: number): void {\n\t\tthis._throwIfFinalized();\n\n\t\tthis._collectedEdits.push({\n\t\t\teditType: CellEditType.Delete,\n\t\t\tindex,\n\t\t\tcount: 1\n\t\t});\n\t}\n}\n\nexport class ExtHostNotebookEditor extends Disposable implements vscode.NotebookEditor {\n\tprivate _viewColumn: vscode.ViewColumn | undefined;\n\n\tselection?: ExtHostCell = undefined;\n\tonDidReceiveMessage: vscode.Event<any> = this._onDidReceiveMessage.event;\n\n\tconstructor(\n\t\tprivate readonly viewType: string,\n\t\treadonly id: string,\n\t\tpublic uri: URI,\n\t\tprivate _proxy: MainThreadNotebookShape,\n\t\tprivate _onDidReceiveMessage: Emitter<any>,\n\t\tpublic document: ExtHostNotebookDocument,\n\t\tprivate _documentsAndEditors: ExtHostDocumentsAndEditors\n\t) {\n\t\tsuper();\n\t\tthis._register(this._documentsAndEditors.onDidAddDocuments(documents => {\n\t\t\tfor (const documentData of documents) {\n\t\t\t\tlet data = CellUri.parse(documentData.document.uri);\n\t\t\t\tif (data) {\n\t\t\t\t\tif (this.document.uri.toString() === data.notebook.toString()) {\n\t\t\t\t\t\tdocument.attachCellTextDocument(documentData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._documentsAndEditors.onDidRemoveDocuments(documents => {\n\t\t\tfor (const documentData of documents) {\n\t\t\t\tlet data = CellUri.parse(documentData.document.uri);\n\t\t\t\tif (data) {\n\t\t\t\t\tif (this.document.uri.toString() === data.notebook.toString()) {\n\t\t\t\t\t\tdocument.detachCellTextDocument(documentData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tedit(callback: (editBuilder: NotebookEditorCellEdit) => void): Thenable<boolean> {\n\t\tconst edit = new NotebookEditorCellEdit(this);\n\t\tcallback(edit);\n\t\treturn this._applyEdit(edit);\n\t}\n\n\tprivate _applyEdit(editBuilder: NotebookEditorCellEdit): Promise<boolean> {\n\t\tconst editData = editBuilder.finalize();\n\n\t\t// return when there is nothing to do\n\t\tif (editData.edits.length === 0) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tlet compressedEdits: ICellEditOperation[] = [];\n\t\tlet compressedEditsIndex = -1;\n\n\t\tfor (let i = 0; i < editData.edits.length; i++) {\n\t\t\tif (compressedEditsIndex < 0) {\n\t\t\t\tcompressedEdits.push(editData.edits[i]);\n\t\t\t\tcompressedEditsIndex++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet prevIndex = compressedEditsIndex;\n\t\t\tlet prev = compressedEdits[prevIndex];\n\n\t\t\tif (prev.editType === CellEditType.Insert && editData.edits[i].editType === CellEditType.Insert) {\n\t\t\t\tif (prev.index === editData.edits[i].index) {\n\t\t\t\t\tprev.cells.push(...(editData.edits[i] as ICellInsertEdit).cells);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (prev.editType === CellEditType.Delete && editData.edits[i].editType === CellEditType.Delete) {\n\t\t\t\tif (prev.index === editData.edits[i].index) {\n\t\t\t\t\tprev.count += (editData.edits[i] as ICellDeleteEdit).count;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcompressedEdits.push(editData.edits[i]);\n\t\t\tcompressedEditsIndex++;\n\t\t}\n\n\t\treturn this._proxy.$tryApplyEdits(this.viewType, this.uri, editData.documentVersionId, compressedEdits, editData.renderers);\n\t}\n\n\tget viewColumn(): vscode.ViewColumn | undefined {\n\t\treturn this._viewColumn;\n\t}\n\n\tset viewColumn(value) {\n\t\tthrow readonly('viewColumn');\n\t}\n\n\tasync postMessage(message: any): Promise<boolean> {\n\t\treturn this._proxy.$postMessage(this.document.handle, message);\n\t}\n\n}\n\nexport class ExtHostNotebookOutputRenderer {\n\tprivate static _handlePool: number = 0;\n\treadonly handle = ExtHostNotebookOutputRenderer._handlePool++;\n\n\tconstructor(\n\t\tpublic type: string,\n\t\tpublic filter: vscode.NotebookOutputSelector,\n\t\tpublic renderer: vscode.NotebookOutputRenderer\n\t) {\n\n\t}\n\n\tmatches(mimeType: string): boolean {\n\t\tif (this.filter.subTypes) {\n\t\t\tif (this.filter.subTypes.indexOf(mimeType) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\trender(document: ExtHostNotebookDocument, output: vscode.CellDisplayOutput, mimeType: string): string {\n\t\tlet html = this.renderer.render(document, output, mimeType);\n\n\t\treturn html;\n\t}\n}\n\nexport interface ExtHostNotebookOutputRenderingHandler {\n\toutputDisplayOrder: INotebookDisplayOrder | undefined;\n\tfindBestMatchedRenderer(mimeType: string): ExtHostNotebookOutputRenderer[];\n}\n\nexport class ExtHostNotebookController implements ExtHostNotebookShape, ExtHostNotebookOutputRenderingHandler {\n\tprivate static _handlePool: number = 0;\n\n\tprivate readonly _proxy: MainThreadNotebookShape;\n\tprivate readonly _notebookProviders = new Map<string, { readonly provider: vscode.NotebookProvider, readonly extension: IExtensionDescription; }>();\n\tprivate readonly _notebookContentProviders = new Map<string, { readonly provider: vscode.NotebookContentProvider, readonly extension: IExtensionDescription; }>();\n\tprivate readonly _documents = new Map<string, ExtHostNotebookDocument>();\n\tprivate readonly _editors = new Map<string, { editor: ExtHostNotebookEditor, onDidReceiveMessage: Emitter<any>; }>();\n\tprivate readonly _notebookOutputRenderers = new Map<number, ExtHostNotebookOutputRenderer>();\n\n\tprivate readonly _onDidChangeNotebookDocument = new Emitter<{ document: ExtHostNotebookDocument, changes: NotebookCellsChangedEvent[]; }>();\n\treadonly onDidChangeNotebookDocument: Event<{ document: ExtHostNotebookDocument, changes: NotebookCellsChangedEvent[]; }> = this._onDidChangeNotebookDocument.event;\n\n\tprivate _outputDisplayOrder: INotebookDisplayOrder | undefined;\n\n\tget outputDisplayOrder(): INotebookDisplayOrder | undefined {\n\t\treturn this._outputDisplayOrder;\n\t}\n\n\tprivate _activeNotebookDocument: ExtHostNotebookDocument | undefined;\n\n\tget activeNotebookDocument() {\n\t\treturn this._activeNotebookDocument;\n\t}\n\n\tprivate _activeNotebookEditor: ExtHostNotebookEditor | undefined;\n\n\tget activeNotebookEditor() {\n\t\treturn this._activeNotebookEditor;\n\t}\n\n\tprivate _onDidOpenNotebookDocument = new Emitter<vscode.NotebookDocument>();\n\tonDidOpenNotebookDocument: Event<vscode.NotebookDocument> = this._onDidOpenNotebookDocument.event;\n\n\tconstructor(mainContext: IMainContext, commands: ExtHostCommands, private _documentsAndEditors: ExtHostDocumentsAndEditors) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadNotebook);\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === 12) {\n\t\t\t\t\tconst documentHandle = arg.notebookEditor?.notebookHandle;\n\t\t\t\t\tconst cellHandle = arg.cell.handle;\n\n\t\t\t\t\tfor (let value of this._editors) {\n\t\t\t\t\t\tif (value[1].editor.document.handle === documentHandle) {\n\t\t\t\t\t\t\tconst cell = value[1].editor.document.getCell(cellHandle);\n\t\t\t\t\t\t\tif (cell) {\n\t\t\t\t\t\t\t\treturn cell;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterNotebookOutputRenderer(\n\t\ttype: string,\n\t\textension: IExtensionDescription,\n\t\tfilter: vscode.NotebookOutputSelector,\n\t\trenderer: vscode.NotebookOutputRenderer\n\t): vscode.Disposable {\n\t\tlet extHostRenderer = new ExtHostNotebookOutputRenderer(type, filter, renderer);\n\t\tthis._notebookOutputRenderers.set(extHostRenderer.handle, extHostRenderer);\n\t\tthis._proxy.$registerNotebookRenderer({ id: extension.identifier, location: extension.extensionLocation }, type, filter, extHostRenderer.handle, renderer.preloads || []);\n\t\treturn new VSCodeDisposable(() => {\n\t\t\tthis._notebookOutputRenderers.delete(extHostRenderer.handle);\n\t\t\tthis._proxy.$unregisterNotebookRenderer(extHostRenderer.handle);\n\t\t});\n\t}\n\n\tfindBestMatchedRenderer(mimeType: string): ExtHostNotebookOutputRenderer[] {\n\t\tlet matches: ExtHostNotebookOutputRenderer[] = [];\n\t\tfor (let renderer of this._notebookOutputRenderers) {\n\t\t\tif (renderer[1].matches(mimeType)) {\n\t\t\t\tmatches.push(renderer[1]);\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t}\n\n\tregisterNotebookProvider(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\tprovider: vscode.NotebookProvider,\n\t): vscode.Disposable {\n\n\t\tif (this._notebookProviders.has(viewType)) {\n\t\t\tthrow new Error(`Notebook provider for '${viewType}' already registered`);\n\t\t}\n\n\t\tthis._notebookProviders.set(viewType, { extension, provider });\n\t\tthis._proxy.$registerNotebookProvider({ id: extension.identifier, location: extension.extensionLocation }, viewType);\n\t\treturn new VSCodeDisposable(() => {\n\t\t\tthis._notebookProviders.delete(viewType);\n\t\t\tthis._proxy.$unregisterNotebookProvider(viewType);\n\t\t});\n\t}\n\n\tregisterNotebookContentProvider(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\tprovider: vscode.NotebookContentProvider,\n\t): vscode.Disposable {\n\n\t\tif (this._notebookProviders.has(viewType)) {\n\t\t\tthrow new Error(`Notebook provider for '${viewType}' already registered`);\n\t\t}\n\n\t\tthis._notebookContentProviders.set(viewType, { extension, provider });\n\t\tthis._proxy.$registerNotebookProvider({ id: extension.identifier, location: extension.extensionLocation }, viewType);\n\t\treturn new VSCodeDisposable(() => {\n\t\t\tthis._notebookContentProviders.delete(viewType);\n\t\t\tthis._proxy.$unregisterNotebookProvider(viewType);\n\t\t});\n\t}\n\n\tasync _resolveNotebookFromContentProvider(viewType: string, uri: UriComponents): Promise<number | undefined> {\n\t\tlet provider = this._notebookContentProviders.get(viewType);\n\n\t\tif (provider) {\n\t\t\tconst revivedUri = URI.revive(uri);\n\t\t\tif (!this._documents.has(revivedUri.toString())) {\n\t\t\t\tlet document = new ExtHostNotebookDocument(this._proxy, this._documentsAndEditors, viewType, revivedUri, this);\n\t\t\t\tawait this._proxy.$createNotebookDocument(\n\t\t\t\t\tdocument.handle,\n\t\t\t\t\tviewType,\n\t\t\t\t\turi\n\t\t\t\t);\n\n\t\t\t\tthis._documents.set(revivedUri.toString(), document);\n\t\t\t}\n\n\t\t\tconst onDidReceiveMessage = new Emitter<any>();\n\n\t\t\tlet editor = new ExtHostNotebookEditor(\n\t\t\t\tviewType,\n\t\t\t\t`${ExtHostNotebookController._handlePool++}`,\n\t\t\t\trevivedUri,\n\t\t\t\tthis._proxy,\n\t\t\t\tonDidReceiveMessage,\n\t\t\t\tthis._documents.get(revivedUri.toString())!,\n\t\t\t\tthis._documentsAndEditors\n\t\t\t);\n\n\t\t\tthis._editors.set(revivedUri.toString(), { editor, onDidReceiveMessage });\n\n\t\t\tconst data = await provider.provider.open(revivedUri);\n\t\t\teditor.document.languages = data.languages;\n\t\t\teditor.document.metadata = {\n\t\t\t\t...notebookDocumentMetadataDefaults,\n\t\t\t\t...data.metadata\n\t\t\t};\n\n\t\t\tawait editor.edit(editBuilder => {\n\t\t\t\tfor (let i = 0; i < data.cells.length; i++) {\n\t\t\t\t\tconst cell = data.cells[i];\n\t\t\t\t\teditBuilder.insert(0, cell.source, cell.language, cell.cellKind, cell.outputs, cell.metadata);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._onDidOpenNotebookDocument.fire(editor.document);\n\t\t\treturn editor.document.handle;\n\t\t} else {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t}\n\n\tasync $resolveNotebook(viewType: string, uri: UriComponents): Promise<number | undefined> {\n\t\tlet notebookFromNotebookContentProvider = await this._resolveNotebookFromContentProvider(viewType, uri);\n\n\t\tif (notebookFromNotebookContentProvider !== undefined) {\n\t\t\treturn notebookFromNotebookContentProvider;\n\t\t}\n\n\t\tlet provider = this._notebookProviders.get(viewType);\n\n\t\tif (provider) {\n\t\t\tif (!this._documents.has(URI.revive(uri).toString())) {\n\t\t\t\tlet document = new ExtHostNotebookDocument(this._proxy, this._documentsAndEditors, viewType, URI.revive(uri), this);\n\t\t\t\tawait this._proxy.$createNotebookDocument(\n\t\t\t\t\tdocument.handle,\n\t\t\t\t\tviewType,\n\t\t\t\t\turi\n\t\t\t\t);\n\n\t\t\t\tthis._documents.set(URI.revive(uri).toString(), document);\n\t\t\t}\n\n\t\t\tconst onDidReceiveMessage = new Emitter<any>();\n\n\t\t\tlet editor = new ExtHostNotebookEditor(\n\t\t\t\tviewType,\n\t\t\t\t`${ExtHostNotebookController._handlePool++}`,\n\t\t\t\tURI.revive(uri),\n\t\t\t\tthis._proxy,\n\t\t\t\tonDidReceiveMessage,\n\t\t\t\tthis._documents.get(URI.revive(uri).toString())!,\n\t\t\t\tthis._documentsAndEditors\n\t\t\t);\n\n\t\t\tthis._editors.set(URI.revive(uri).toString(), { editor, onDidReceiveMessage });\n\t\t\tawait provider.provider.resolveNotebook(editor);\n\t\t\t// await editor.document.$updateCells();\n\t\t\treturn editor.document.handle;\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tasync $executeNotebook(viewType: string, uri: UriComponents, cellHandle: number | undefined, token: CancellationToken): Promise<void> {\n\t\tlet document = this._documents.get(URI.revive(uri).toString());\n\n\t\tif (!document) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._notebookContentProviders.has(viewType)) {\n\t\t\tlet cell = cellHandle !== undefined ? document.getCell(cellHandle) : undefined;\n\n\t\t\treturn this._notebookContentProviders.get(viewType)!.provider.executeCell(document, cell, token);\n\t\t}\n\n\t\tlet provider = this._notebookProviders.get(viewType);\n\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet cell = cellHandle !== undefined ? document.getCell(cellHandle) : undefined;\n\t\treturn provider.provider.executeCell(document!, cell, token);\n\t}\n\n\tasync $saveNotebook(viewType: string, uri: UriComponents, token: CancellationToken): Promise<boolean> {\n\t\tlet document = this._documents.get(URI.revive(uri).toString());\n\t\tif (!document) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._notebookContentProviders.has(viewType)) {\n\t\t\ttry {\n\t\t\t\tawait this._notebookContentProviders.get(viewType)!.provider.save(document, token);\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tlet provider = this._notebookProviders.get(viewType);\n\n\t\tif (provider && document) {\n\t\t\treturn await provider.provider.save(document);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync $updateActiveEditor(viewType: string, uri: UriComponents): Promise<void> {\n\t\tthis._activeNotebookDocument = this._documents.get(URI.revive(uri).toString());\n\t\tthis._activeNotebookEditor = this._editors.get(URI.revive(uri).toString())?.editor;\n\t}\n\n\tasync $destoryNotebookDocument(viewType: string, uri: UriComponents): Promise<boolean> {\n\t\tlet provider = this._notebookProviders.get(viewType);\n\n\t\tif (!provider) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet document = this._documents.get(URI.revive(uri).toString());\n\n\t\tif (document) {\n\t\t\tdocument.dispose();\n\t\t\tthis._documents.delete(URI.revive(uri).toString());\n\t\t}\n\n\t\tlet editor = this._editors.get(URI.revive(uri).toString());\n\n\t\tif (editor) {\n\t\t\teditor.editor.dispose();\n\t\t\teditor.onDidReceiveMessage.dispose();\n\t\t\tthis._editors.delete(URI.revive(uri).toString());\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t$acceptDisplayOrder(displayOrder: INotebookDisplayOrder): void {\n\t\tthis._outputDisplayOrder = displayOrder;\n\t}\n\n\t$onDidReceiveMessage(uri: UriComponents, message: any): void {\n\t\tlet editor = this._editors.get(URI.revive(uri).toString());\n\n\t\tif (editor) {\n\t\t\teditor.onDidReceiveMessage.fire(message);\n\t\t}\n\t}\n\n\t$acceptModelChanged(uriComponents: UriComponents, event: NotebookCellsChangedEvent): void {\n\t\tlet editor = this._editors.get(URI.revive(uriComponents).toString());\n\n\t\tif (editor) {\n\t\t\teditor.editor.document.accpetModelChanged(event);\n\t\t\tthis._onDidChangeNotebookDocument.fire({\n\t\t\t\tdocument: editor.editor.document,\n\t\t\t\tchanges: [event]\n\t\t\t});\n\t\t}\n\n\t}\n\n\t$acceptEditorPropertiesChanged(uriComponents: UriComponents, data: INotebookEditorPropertiesChangeData): void {\n\t\tlet editor = this._editors.get(URI.revive(uriComponents).toString());\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (data.selections) {\n\t\t\tconst cells = editor.editor.document.cells;\n\n\t\t\tif (data.selections.selections.length) {\n\t\t\t\tconst firstCell = data.selections.selections[0];\n\t\t\t\teditor.editor.selection = cells.find(cell => cell.handle === firstCell);\n\t\t\t} else {\n\t\t\t\teditor.editor.selection = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadOutputServiceShape, ExtHostOutputServiceShape } from './extHost.protocol';\nimport type * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\n\nexport abstract class AbstractExtHostOutputChannel extends Disposable implements vscode.OutputChannel {\n\n\treadonly _id: Promise<string>;\n\tprivate readonly _name: string;\n\tprotected readonly _proxy: MainThreadOutputServiceShape;\n\tprivate _disposed: boolean;\n\tprivate _offset: number;\n\n\tprotected readonly _onDidAppend: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidAppend: Event<void> = this._onDidAppend.event;\n\n\tconstructor(name: string, log: boolean, file: URI | undefined, proxy: MainThreadOutputServiceShape) {\n\t\tsuper();\n\n\t\tthis._name = name;\n\t\tthis._proxy = proxy;\n\t\tthis._id = proxy.$register(this.name, log, file);\n\t\tthis._disposed = false;\n\t\tthis._offset = 0;\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tappend(value: string): void {\n\t\tthis.validate();\n\t\tthis._offset += value ? VSBuffer.fromString(value).byteLength : 0;\n\t}\n\n\tupdate(): void {\n\t\tthis._id.then(id => this._proxy.$update(id));\n\t}\n\n\tappendLine(value: string): void {\n\t\tthis.validate();\n\t\tthis.append(value + '\\n');\n\t}\n\n\tclear(): void {\n\t\tthis.validate();\n\t\tconst till = this._offset;\n\t\tthis._id.then(id => this._proxy.$clear(id, till));\n\t}\n\n\tshow(columnOrPreserveFocus?: vscode.ViewColumn | boolean, preserveFocus?: boolean): void {\n\t\tthis.validate();\n\t\tthis._id.then(id => this._proxy.$reveal(id, !!(typeof columnOrPreserveFocus === 'boolean' ? columnOrPreserveFocus : preserveFocus)));\n\t}\n\n\thide(): void {\n\t\tthis.validate();\n\t\tthis._id.then(id => this._proxy.$close(id));\n\t}\n\n\tprotected validate(): void {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error('Channel has been closed');\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (!this._disposed) {\n\t\t\tthis._id\n\t\t\t\t.then(id => this._proxy.$dispose(id))\n\t\t\t\t.then(() => this._disposed = true);\n\t\t}\n\t}\n}\n\nexport class ExtHostPushOutputChannel extends AbstractExtHostOutputChannel {\n\n\tconstructor(name: string, proxy: MainThreadOutputServiceShape) {\n\t\tsuper(name, false, undefined, proxy);\n\t}\n\n\tappend(value: string): void {\n\t\tsuper.append(value);\n\t\tthis._id.then(id => this._proxy.$append(id, value));\n\t\tthis._onDidAppend.fire();\n\t}\n}\n\nclass ExtHostLogFileOutputChannel extends AbstractExtHostOutputChannel {\n\n\tconstructor(name: string, file: URI, proxy: MainThreadOutputServiceShape) {\n\t\tsuper(name, true, file, proxy);\n\t}\n\n\tappend(value: string): void {\n\t\tthrow new Error('Not supported');\n\t}\n}\n\nexport class LazyOutputChannel implements vscode.OutputChannel {\n\n\tconstructor(\n\t\treadonly name: string,\n\t\tprivate readonly _channel: Promise<AbstractExtHostOutputChannel>\n\t) { }\n\n\tappend(value: string): void {\n\t\tthis._channel.then(channel => channel.append(value));\n\t}\n\tappendLine(value: string): void {\n\t\tthis._channel.then(channel => channel.appendLine(value));\n\t}\n\tclear(): void {\n\t\tthis._channel.then(channel => channel.clear());\n\t}\n\tshow(columnOrPreserveFocus?: vscode.ViewColumn | boolean, preserveFocus?: boolean): void {\n\t\tthis._channel.then(channel => channel.show(columnOrPreserveFocus, preserveFocus));\n\t}\n\thide(): void {\n\t\tthis._channel.then(channel => channel.hide());\n\t}\n\tdispose(): void {\n\t\tthis._channel.then(channel => channel.dispose());\n\t}\n}\n\nexport class ExtHostOutputService implements ExtHostOutputServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected readonly _proxy: MainThreadOutputServiceShape;\n\n\tconstructor(@IExtHostRpcService extHostRpc: IExtHostRpcService) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadOutputService);\n\t}\n\n\t$setVisibleChannel(channelId: string): void {\n\t}\n\n\tcreateOutputChannel(name: string): vscode.OutputChannel {\n\t\tname = name.trim();\n\t\tif (!name) {\n\t\t\tthrow new Error('illegal argument `name`. must not be falsy');\n\t\t}\n\t\treturn new ExtHostPushOutputChannel(name, this._proxy);\n\t}\n\n\tcreateOutputChannelFromLogFile(name: string, file: URI): vscode.OutputChannel {\n\t\tname = name.trim();\n\t\tif (!name) {\n\t\t\tthrow new Error('illegal argument `name`. must not be falsy');\n\t\t}\n\t\tif (!file) {\n\t\t\tthrow new Error('illegal argument `file`. must not be falsy');\n\t\t}\n\t\treturn new ExtHostLogFileOutputChannel(name, file, this._proxy);\n\t}\n}\n\nexport interface IExtHostOutputService extends ExtHostOutputService { }\nexport const IExtHostOutputService = createDecorator<IExtHostOutputService>('IExtHostOutputService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asPromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { IExtHostWorkspaceProvider } from 'vs/workbench/api/common/extHostWorkspace';\nimport { InputBox, InputBoxOptions, QuickInput, QuickInputButton, QuickPick, QuickPickItem, QuickPickOptions, WorkspaceFolder, WorkspaceFolderPickOptions } from 'vscode';\nimport { ExtHostQuickOpenShape, IMainContext, MainContext, MainThreadQuickOpenShape, TransferQuickPickItems, TransferQuickInput, TransferQuickInputButton } from './extHost.protocol';\nimport { URI } from 'vs/base/common/uri';\nimport { ThemeIcon, QuickInputButtons } from 'vs/workbench/api/common/extHostTypes';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { coalesce } from 'vs/base/common/arrays';\n\nexport type Item = string | QuickPickItem;\n\nexport class ExtHostQuickOpen implements ExtHostQuickOpenShape {\n\n\tprivate _proxy: MainThreadQuickOpenShape;\n\tprivate _workspace: IExtHostWorkspaceProvider;\n\tprivate _commands: ExtHostCommands;\n\n\tprivate _onDidSelectItem?: (handle: number) => void;\n\tprivate _validateInput?: (input: string) => string | undefined | null | Thenable<string | undefined | null>;\n\n\tprivate _sessions = new Map<number, ExtHostQuickInput>();\n\n\tprivate _instances = 0;\n\n\tconstructor(mainContext: IMainContext, workspace: IExtHostWorkspaceProvider, commands: ExtHostCommands) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadQuickOpen);\n\t\tthis._workspace = workspace;\n\t\tthis._commands = commands;\n\t}\n\n\tshowQuickPick(itemsOrItemsPromise: QuickPickItem[] | Promise<QuickPickItem[]>, enableProposedApi: boolean, options: QuickPickOptions & { canPickMany: true; }, token?: CancellationToken): Promise<QuickPickItem[] | undefined>;\n\tshowQuickPick(itemsOrItemsPromise: string[] | Promise<string[]>, enableProposedApi: boolean, options?: QuickPickOptions, token?: CancellationToken): Promise<string | undefined>;\n\tshowQuickPick(itemsOrItemsPromise: QuickPickItem[] | Promise<QuickPickItem[]>, enableProposedApi: boolean, options?: QuickPickOptions, token?: CancellationToken): Promise<QuickPickItem | undefined>;\n\tshowQuickPick(itemsOrItemsPromise: Item[] | Promise<Item[]>, enableProposedApi: boolean, options?: QuickPickOptions, token: CancellationToken = CancellationToken.None): Promise<Item | Item[] | undefined> {\n\n\t\t// clear state from last invocation\n\t\tthis._onDidSelectItem = undefined;\n\n\t\tconst itemsPromise = <Promise<Item[]>>Promise.resolve(itemsOrItemsPromise);\n\n\t\tconst instance = ++this._instances;\n\n\t\tconst quickPickWidget = this._proxy.$show(instance, {\n\t\t\tplaceHolder: options && options.placeHolder,\n\t\t\tmatchOnDescription: options && options.matchOnDescription,\n\t\t\tmatchOnDetail: options && options.matchOnDetail,\n\t\t\tignoreFocusLost: options && options.ignoreFocusOut,\n\t\t\tcanPickMany: options && options.canPickMany\n\t\t}, token);\n\n\t\tconst widgetClosedMarker = {};\n\t\tconst widgetClosedPromise = quickPickWidget.then(() => widgetClosedMarker);\n\n\t\treturn Promise.race([widgetClosedPromise, itemsPromise]).then(result => {\n\t\t\tif (result === widgetClosedMarker) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn itemsPromise.then(items => {\n\n\t\t\t\tconst pickItems: TransferQuickPickItems[] = [];\n\t\t\t\tfor (let handle = 0; handle < items.length; handle++) {\n\n\t\t\t\t\tconst item = items[handle];\n\t\t\t\t\tlet label: string;\n\t\t\t\t\tlet description: string | undefined;\n\t\t\t\t\tlet detail: string | undefined;\n\t\t\t\t\tlet picked: boolean | undefined;\n\t\t\t\t\tlet alwaysShow: boolean | undefined;\n\n\t\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\t\tlabel = item;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlabel = item.label;\n\t\t\t\t\t\tdescription = item.description;\n\t\t\t\t\t\tdetail = item.detail;\n\t\t\t\t\t\tpicked = item.picked;\n\t\t\t\t\t\talwaysShow = item.alwaysShow;\n\t\t\t\t\t}\n\t\t\t\t\tpickItems.push({\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tdescription,\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tdetail,\n\t\t\t\t\t\tpicked,\n\t\t\t\t\t\talwaysShow\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// handle selection changes\n\t\t\t\tif (options && typeof options.onDidSelectItem === 'function') {\n\t\t\t\t\tthis._onDidSelectItem = (handle) => {\n\t\t\t\t\t\toptions.onDidSelectItem!(items[handle]);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// show items\n\t\t\t\tthis._proxy.$setItems(instance, pickItems);\n\n\t\t\t\treturn quickPickWidget.then(handle => {\n\t\t\t\t\tif (typeof handle === 'number') {\n\t\t\t\t\t\treturn items[handle];\n\t\t\t\t\t} else if (Array.isArray(handle)) {\n\t\t\t\t\t\treturn handle.map(h => items[h]);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}).then(undefined, err => {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tthis._proxy.$setError(instance, err);\n\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\t$onItemSelected(handle: number): void {\n\t\tif (this._onDidSelectItem) {\n\t\t\tthis._onDidSelectItem(handle);\n\t\t}\n\t}\n\n\t// ---- input\n\n\tshowInput(options?: InputBoxOptions, token: CancellationToken = CancellationToken.None): Promise<string | undefined> {\n\n\t\t// global validate fn used in callback below\n\t\tthis._validateInput = options ? options.validateInput : undefined;\n\n\t\treturn this._proxy.$input(options, typeof this._validateInput === 'function', token)\n\t\t\t.then(undefined, err => {\n\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t}\n\n\t$validateInput(input: string): Promise<string | null | undefined> {\n\t\tif (this._validateInput) {\n\t\t\treturn asPromise(() => this._validateInput!(input));\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t// ---- workspace folder picker\n\n\tasync showWorkspaceFolderPick(options?: WorkspaceFolderPickOptions, token = CancellationToken.None): Promise<WorkspaceFolder | undefined> {\n\t\tconst selectedFolder = await this._commands.executeCommand<WorkspaceFolder>('_workbench.pickWorkspaceFolder', [options]);\n\t\tif (!selectedFolder) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst workspaceFolders = await this._workspace.getWorkspaceFolders2();\n\t\tif (!workspaceFolders) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn workspaceFolders.find(folder => folder.uri.toString() === selectedFolder.uri.toString());\n\t}\n\n\t// ---- QuickInput\n\n\tcreateQuickPick<T extends QuickPickItem>(extensionId: ExtensionIdentifier, enableProposedApi: boolean): QuickPick<T> {\n\t\tconst session: ExtHostQuickPick<T> = new ExtHostQuickPick(this._proxy, extensionId, enableProposedApi, () => this._sessions.delete(session._id));\n\t\tthis._sessions.set(session._id, session);\n\t\treturn session;\n\t}\n\n\tcreateInputBox(extensionId: ExtensionIdentifier): InputBox {\n\t\tconst session: ExtHostInputBox = new ExtHostInputBox(this._proxy, extensionId, () => this._sessions.delete(session._id));\n\t\tthis._sessions.set(session._id, session);\n\t\treturn session;\n\t}\n\n\t$onDidChangeValue(sessionId: number, value: string): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession._fireDidChangeValue(value);\n\t\t}\n\t}\n\n\t$onDidAccept(sessionId: number): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession._fireDidAccept();\n\t\t}\n\t}\n\n\t$onDidChangeActive(sessionId: number, handles: number[]): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session instanceof ExtHostQuickPick) {\n\t\t\tsession._fireDidChangeActive(handles);\n\t\t}\n\t}\n\n\t$onDidChangeSelection(sessionId: number, handles: number[]): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session instanceof ExtHostQuickPick) {\n\t\t\tsession._fireDidChangeSelection(handles);\n\t\t}\n\t}\n\n\t$onDidTriggerButton(sessionId: number, handle: number): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession._fireDidTriggerButton(handle);\n\t\t}\n\t}\n\n\t$onDidHide(sessionId: number): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession._fireDidHide();\n\t\t}\n\t}\n}\n\nclass ExtHostQuickInput implements QuickInput {\n\n\tprivate static _nextId = 1;\n\t_id = ExtHostQuickPick._nextId++;\n\n\tprivate _title: string | undefined;\n\tprivate _steps: number | undefined;\n\tprivate _totalSteps: number | undefined;\n\tprivate _visible = false;\n\tprivate _expectingHide = false;\n\tprivate _enabled = true;\n\tprivate _busy = false;\n\tprivate _ignoreFocusOut = true;\n\tprivate _value = '';\n\tprivate _placeholder: string | undefined;\n\tprivate _buttons: QuickInputButton[] = [];\n\tprivate _handlesToButtons = new Map<number, QuickInputButton>();\n\tprivate readonly _onDidAcceptEmitter = new Emitter<void>();\n\tprivate readonly _onDidChangeValueEmitter = new Emitter<string>();\n\tprivate readonly _onDidTriggerButtonEmitter = new Emitter<QuickInputButton>();\n\tprivate readonly _onDidHideEmitter = new Emitter<void>();\n\tprivate _updateTimeout: any;\n\tprivate _pendingUpdate: TransferQuickInput = { id: this._id };\n\n\tprivate _disposed = false;\n\tprotected _disposables: IDisposable[] = [\n\t\tthis._onDidTriggerButtonEmitter,\n\t\tthis._onDidHideEmitter,\n\t\tthis._onDidAcceptEmitter,\n\t\tthis._onDidChangeValueEmitter\n\t];\n\n\tconstructor(protected _proxy: MainThreadQuickOpenShape, protected _extensionId: ExtensionIdentifier, private _onDidDispose: () => void) {\n\t}\n\n\tget title() {\n\t\treturn this._title;\n\t}\n\n\tset title(title: string | undefined) {\n\t\tthis._title = title;\n\t\tthis.update({ title });\n\t}\n\n\tget step() {\n\t\treturn this._steps;\n\t}\n\n\tset step(step: number | undefined) {\n\t\tthis._steps = step;\n\t\tthis.update({ step });\n\t}\n\n\tget totalSteps() {\n\t\treturn this._totalSteps;\n\t}\n\n\tset totalSteps(totalSteps: number | undefined) {\n\t\tthis._totalSteps = totalSteps;\n\t\tthis.update({ totalSteps });\n\t}\n\n\tget enabled() {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\tthis._enabled = enabled;\n\t\tthis.update({ enabled });\n\t}\n\n\tget busy() {\n\t\treturn this._busy;\n\t}\n\n\tset busy(busy: boolean) {\n\t\tthis._busy = busy;\n\t\tthis.update({ busy });\n\t}\n\n\tget ignoreFocusOut() {\n\t\treturn this._ignoreFocusOut;\n\t}\n\n\tset ignoreFocusOut(ignoreFocusOut: boolean) {\n\t\tthis._ignoreFocusOut = ignoreFocusOut;\n\t\tthis.update({ ignoreFocusOut });\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tthis._value = value;\n\t\tthis.update({ value });\n\t}\n\n\tget placeholder() {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string | undefined) {\n\t\tthis._placeholder = placeholder;\n\t\tthis.update({ placeholder });\n\t}\n\n\tonDidChangeValue = this._onDidChangeValueEmitter.event;\n\n\tonDidAccept = this._onDidAcceptEmitter.event;\n\n\tget buttons() {\n\t\treturn this._buttons;\n\t}\n\n\tset buttons(buttons: QuickInputButton[]) {\n\t\tthis._buttons = buttons.slice();\n\t\tthis._handlesToButtons.clear();\n\t\tbuttons.forEach((button, i) => {\n\t\t\tconst handle = button === QuickInputButtons.Back ? -1 : i;\n\t\t\tthis._handlesToButtons.set(handle, button);\n\t\t});\n\t\tthis.update({\n\t\t\tbuttons: buttons.map<TransferQuickInputButton>((button, i) => ({\n\t\t\t\ticonPath: getIconUris(button.iconPath),\n\t\t\t\ttooltip: button.tooltip,\n\t\t\t\thandle: button === QuickInputButtons.Back ? -1 : i,\n\t\t\t}))\n\t\t});\n\t}\n\n\tonDidTriggerButton = this._onDidTriggerButtonEmitter.event;\n\n\tshow(): void {\n\t\tthis._visible = true;\n\t\tthis._expectingHide = true;\n\t\tthis.update({ visible: true });\n\t}\n\n\thide(): void {\n\t\tthis._visible = false;\n\t\tthis.update({ visible: false });\n\t}\n\n\tonDidHide = this._onDidHideEmitter.event;\n\n\t_fireDidAccept() {\n\t\tthis._onDidAcceptEmitter.fire();\n\t}\n\n\t_fireDidChangeValue(value: string) {\n\t\tthis._value = value;\n\t\tthis._onDidChangeValueEmitter.fire(value);\n\t}\n\n\t_fireDidTriggerButton(handle: number) {\n\t\tconst button = this._handlesToButtons.get(handle);\n\t\tif (button) {\n\t\t\tthis._onDidTriggerButtonEmitter.fire(button);\n\t\t}\n\t}\n\n\t_fireDidHide() {\n\t\tif (this._expectingHide) {\n\t\t\tthis._expectingHide = false;\n\t\t\tthis._onDidHideEmitter.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposed = true;\n\t\tthis._fireDidHide();\n\t\tthis._disposables = dispose(this._disposables);\n\t\tif (this._updateTimeout) {\n\t\t\tclearTimeout(this._updateTimeout);\n\t\t\tthis._updateTimeout = undefined;\n\t\t}\n\t\tthis._onDidDispose();\n\t\tthis._proxy.$dispose(this._id);\n\t}\n\n\tprotected update(properties: Record<string, any>): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const key of Object.keys(properties)) {\n\t\t\tconst value = properties[key];\n\t\t\tthis._pendingUpdate[key] = value === undefined ? null : value;\n\t\t}\n\n\t\tif ('visible' in this._pendingUpdate) {\n\t\t\tif (this._updateTimeout) {\n\t\t\t\tclearTimeout(this._updateTimeout);\n\t\t\t\tthis._updateTimeout = undefined;\n\t\t\t}\n\t\t\tthis.dispatchUpdate();\n\t\t} else if (this._visible && !this._updateTimeout) {\n\t\t\t// Defer the update so that multiple changes to setters dont cause a redraw each\n\t\t\tthis._updateTimeout = setTimeout(() => {\n\t\t\t\tthis._updateTimeout = undefined;\n\t\t\t\tthis.dispatchUpdate();\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\tprivate dispatchUpdate() {\n\t\tthis._proxy.$createOrUpdate(this._pendingUpdate);\n\t\tthis._pendingUpdate = { id: this._id };\n\t}\n}\n\nfunction getIconUris(iconPath: QuickInputButton['iconPath']): { dark: URI, light?: URI } | { id: string } {\n\tif (iconPath instanceof ThemeIcon) {\n\t\treturn { id: iconPath.id };\n\t}\n\tconst dark = getDarkIconUri(iconPath as any);\n\tconst light = getLightIconUri(iconPath as any);\n\treturn { dark, light };\n}\n\nfunction getLightIconUri(iconPath: string | URI | { light: URI; dark: URI; }) {\n\treturn getIconUri(typeof iconPath === 'object' && 'light' in iconPath ? iconPath.light : iconPath);\n}\n\nfunction getDarkIconUri(iconPath: string | URI | { light: URI; dark: URI; }) {\n\treturn getIconUri(typeof iconPath === 'object' && 'dark' in iconPath ? iconPath.dark : iconPath);\n}\n\nfunction getIconUri(iconPath: string | URI) {\n\tif (URI.isUri(iconPath)) {\n\t\treturn iconPath;\n\t}\n\treturn URI.file(iconPath);\n}\n\nclass ExtHostQuickPick<T extends QuickPickItem> extends ExtHostQuickInput implements QuickPick<T> {\n\n\tprivate _items: T[] = [];\n\tprivate _handlesToItems = new Map<number, T>();\n\tprivate _itemsToHandles = new Map<T, number>();\n\tprivate _canSelectMany = false;\n\tprivate _matchOnDescription = true;\n\tprivate _matchOnDetail = true;\n\tprivate _sortByLabel = true;\n\tprivate _activeItems: T[] = [];\n\tprivate readonly _onDidChangeActiveEmitter = new Emitter<T[]>();\n\tprivate _selectedItems: T[] = [];\n\tprivate readonly _onDidChangeSelectionEmitter = new Emitter<T[]>();\n\n\tconstructor(proxy: MainThreadQuickOpenShape, extensionId: ExtensionIdentifier, enableProposedApi: boolean, onDispose: () => void) {\n\t\tsuper(proxy, extensionId, onDispose);\n\t\tthis._disposables.push(\n\t\t\tthis._onDidChangeActiveEmitter,\n\t\t\tthis._onDidChangeSelectionEmitter,\n\t\t);\n\t\tthis.update({ type: 'quickPick' });\n\t}\n\n\tget items() {\n\t\treturn this._items;\n\t}\n\n\tset items(items: T[]) {\n\t\tthis._items = items.slice();\n\t\tthis._handlesToItems.clear();\n\t\tthis._itemsToHandles.clear();\n\t\titems.forEach((item, i) => {\n\t\t\tthis._handlesToItems.set(i, item);\n\t\t\tthis._itemsToHandles.set(item, i);\n\t\t});\n\t\tthis.update({\n\t\t\titems: items.map((item, i) => ({\n\t\t\t\tlabel: item.label,\n\t\t\t\tdescription: item.description,\n\t\t\t\thandle: i,\n\t\t\t\tdetail: item.detail,\n\t\t\t\tpicked: item.picked,\n\t\t\t\talwaysShow: item.alwaysShow\n\t\t\t}))\n\t\t});\n\t}\n\n\tget canSelectMany() {\n\t\treturn this._canSelectMany;\n\t}\n\n\tset canSelectMany(canSelectMany: boolean) {\n\t\tthis._canSelectMany = canSelectMany;\n\t\tthis.update({ canSelectMany });\n\t}\n\n\tget matchOnDescription() {\n\t\treturn this._matchOnDescription;\n\t}\n\n\tset matchOnDescription(matchOnDescription: boolean) {\n\t\tthis._matchOnDescription = matchOnDescription;\n\t\tthis.update({ matchOnDescription });\n\t}\n\n\tget matchOnDetail() {\n\t\treturn this._matchOnDetail;\n\t}\n\n\tset matchOnDetail(matchOnDetail: boolean) {\n\t\tthis._matchOnDetail = matchOnDetail;\n\t\tthis.update({ matchOnDetail });\n\t}\n\n\tget sortByLabel() {\n\t\treturn this._sortByLabel;\n\t}\n\n\tset sortByLabel(sortByLabel: boolean) {\n\t\tthis._sortByLabel = sortByLabel;\n\t\tthis.update({ sortByLabel });\n\t}\n\n\tget activeItems() {\n\t\treturn this._activeItems;\n\t}\n\n\tset activeItems(activeItems: T[]) {\n\t\tthis._activeItems = activeItems.filter(item => this._itemsToHandles.has(item));\n\t\tthis.update({ activeItems: this._activeItems.map(item => this._itemsToHandles.get(item)) });\n\t}\n\n\tonDidChangeActive = this._onDidChangeActiveEmitter.event;\n\n\tget selectedItems() {\n\t\treturn this._selectedItems;\n\t}\n\n\tset selectedItems(selectedItems: T[]) {\n\t\tthis._selectedItems = selectedItems.filter(item => this._itemsToHandles.has(item));\n\t\tthis.update({ selectedItems: this._selectedItems.map(item => this._itemsToHandles.get(item)) });\n\t}\n\n\tonDidChangeSelection = this._onDidChangeSelectionEmitter.event;\n\n\t_fireDidChangeActive(handles: number[]) {\n\t\tconst items = coalesce(handles.map(handle => this._handlesToItems.get(handle)));\n\t\tthis._activeItems = items;\n\t\tthis._onDidChangeActiveEmitter.fire(items);\n\t}\n\n\t_fireDidChangeSelection(handles: number[]) {\n\t\tconst items = coalesce(handles.map(handle => this._handlesToItems.get(handle)));\n\t\tthis._selectedItems = items;\n\t\tthis._onDidChangeSelectionEmitter.fire(items);\n\t}\n}\n\nclass ExtHostInputBox extends ExtHostQuickInput implements InputBox {\n\n\tprivate _password = false;\n\tprivate _prompt: string | undefined;\n\tprivate _validationMessage: string | undefined;\n\n\tconstructor(proxy: MainThreadQuickOpenShape, extensionId: ExtensionIdentifier, onDispose: () => void) {\n\t\tsuper(proxy, extensionId, onDispose);\n\t\tthis.update({ type: 'inputBox' });\n\t}\n\n\tget password() {\n\t\treturn this._password;\n\t}\n\n\tset password(password: boolean) {\n\t\tthis._password = password;\n\t\tthis.update({ password });\n\t}\n\n\tget prompt() {\n\t\treturn this._prompt;\n\t}\n\n\tset prompt(prompt: string | undefined) {\n\t\tthis._prompt = prompt;\n\t\tthis.update({ prompt });\n\t}\n\n\tget validationMessage() {\n\t\treturn this._validationMessage;\n\t}\n\n\tset validationMessage(validationMessage: string | undefined) {\n\t\tthis._validationMessage = validationMessage;\n\t\tthis.update({ validationMessage });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { debounce } from 'vs/base/common/decorators';\nimport { DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { asPromise } from 'vs/base/common/async';\nimport { ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { MainContext, MainThreadSCMShape, SCMRawResource, SCMRawResourceSplice, SCMRawResourceSplices, IMainContext, ExtHostSCMShape, ICommandDto, MainThreadTelemetryShape } from './extHost.protocol';\nimport { sortedDiff, equals } from 'vs/base/common/arrays';\nimport { comparePaths } from 'vs/base/common/comparers';\nimport type * as vscode from 'vscode';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\n\ntype ProviderHandle = number;\ntype GroupHandle = number;\ntype ResourceStateHandle = number;\n\nfunction getIconResource(decorations?: vscode.SourceControlResourceThemableDecorations): vscode.Uri | undefined {\n\tif (!decorations) {\n\t\treturn undefined;\n\t} else if (typeof decorations.iconPath === 'string') {\n\t\treturn URI.file(decorations.iconPath);\n\t} else {\n\t\treturn decorations.iconPath;\n\t}\n}\n\nfunction compareResourceThemableDecorations(a: vscode.SourceControlResourceThemableDecorations, b: vscode.SourceControlResourceThemableDecorations): number {\n\tif (!a.iconPath && !b.iconPath) {\n\t\treturn 0;\n\t} else if (!a.iconPath) {\n\t\treturn -1;\n\t} else if (!b.iconPath) {\n\t\treturn 1;\n\t}\n\n\tconst aPath = typeof a.iconPath === 'string' ? a.iconPath : a.iconPath.fsPath;\n\tconst bPath = typeof b.iconPath === 'string' ? b.iconPath : b.iconPath.fsPath;\n\treturn comparePaths(aPath, bPath);\n}\n\nfunction compareResourceStatesDecorations(a: vscode.SourceControlResourceDecorations, b: vscode.SourceControlResourceDecorations): number {\n\tlet result = 0;\n\n\tif (a.strikeThrough !== b.strikeThrough) {\n\t\treturn a.strikeThrough ? 1 : -1;\n\t}\n\n\tif (a.faded !== b.faded) {\n\t\treturn a.faded ? 1 : -1;\n\t}\n\n\tif (a.tooltip !== b.tooltip) {\n\t\treturn (a.tooltip || '').localeCompare(b.tooltip || '');\n\t}\n\n\tresult = compareResourceThemableDecorations(a, b);\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.light && b.light) {\n\t\tresult = compareResourceThemableDecorations(a.light, b.light);\n\t} else if (a.light) {\n\t\treturn 1;\n\t} else if (b.light) {\n\t\treturn -1;\n\t}\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.dark && b.dark) {\n\t\tresult = compareResourceThemableDecorations(a.dark, b.dark);\n\t} else if (a.dark) {\n\t\treturn 1;\n\t} else if (b.dark) {\n\t\treturn -1;\n\t}\n\n\treturn result;\n}\n\nfunction compareResourceStates(a: vscode.SourceControlResourceState, b: vscode.SourceControlResourceState): number {\n\tlet result = comparePaths(a.resourceUri.fsPath, b.resourceUri.fsPath, true);\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.decorations && b.decorations) {\n\t\tresult = compareResourceStatesDecorations(a.decorations, b.decorations);\n\t} else if (a.decorations) {\n\t\treturn 1;\n\t} else if (b.decorations) {\n\t\treturn -1;\n\t}\n\n\treturn result;\n}\n\nfunction compareArgs(a: any[], b: any[]): boolean {\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction commandEquals(a: vscode.Command, b: vscode.Command): boolean {\n\treturn a.command === b.command\n\t\t&& a.title === b.title\n\t\t&& a.tooltip === b.tooltip\n\t\t&& (a.arguments && b.arguments ? compareArgs(a.arguments, b.arguments) : a.arguments === b.arguments);\n}\n\nfunction commandListEquals(a: readonly vscode.Command[], b: readonly vscode.Command[]): boolean {\n\treturn equals(a, b, commandEquals);\n}\n\nexport interface IValidateInput {\n\t(value: string, cursorPosition: number): vscode.ProviderResult<vscode.SourceControlInputBoxValidation | undefined | null>;\n}\n\nexport class ExtHostSCMInputBox implements vscode.SourceControlInputBox {\n\n\tprivate _value: string = '';\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tthis._proxy.$setInputBoxValue(this._sourceControlHandle, value);\n\t\tthis.updateValue(value);\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<string>();\n\n\tget onDidChange(): Event<string> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tprivate _placeholder: string = '';\n\n\tget placeholder(): string {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string) {\n\t\tthis._proxy.$setInputBoxPlaceholder(this._sourceControlHandle, placeholder);\n\t\tthis._placeholder = placeholder;\n\t}\n\n\tprivate _validateInput: IValidateInput | undefined;\n\n\tget validateInput(): IValidateInput | undefined {\n\t\tif (!this._extension.enableProposedApi) {\n\t\t\tthrow new Error(`[${this._extension.identifier.value}]: Proposed API is only available when running out of dev or with the following command line switch: --enable-proposed-api ${this._extension.identifier.value}`);\n\t\t}\n\n\t\treturn this._validateInput;\n\t}\n\n\tset validateInput(fn: IValidateInput | undefined) {\n\t\tif (!this._extension.enableProposedApi) {\n\t\t\tthrow new Error(`[${this._extension.identifier.value}]: Proposed API is only available when running out of dev or with the following command line switch: --enable-proposed-api ${this._extension.identifier.value}`);\n\t\t}\n\n\t\tif (fn && typeof fn !== 'function') {\n\t\t\tthrow new Error(`[${this._extension.identifier.value}]: Invalid SCM input box validation function`);\n\t\t}\n\n\t\tthis._validateInput = fn;\n\t\tthis._proxy.$setValidationProviderIsEnabled(this._sourceControlHandle, !!fn);\n\t}\n\n\tprivate _visible: boolean = true;\n\n\tget visible(): boolean {\n\t\treturn this._visible;\n\t}\n\n\tset visible(visible: boolean) {\n\t\tvisible = !!visible;\n\n\t\tif (this._visible === visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._visible = visible;\n\t\tthis._proxy.$setInputBoxVisibility(this._sourceControlHandle, visible);\n\t}\n\n\tconstructor(private _extension: IExtensionDescription, private _proxy: MainThreadSCMShape, private _sourceControlHandle: number) {\n\t\t// noop\n\t}\n\n\t$onInputBoxValueChange(value: string): void {\n\t\tthis.updateValue(value);\n\t}\n\n\tprivate updateValue(value: string): void {\n\t\tthis._value = value;\n\t\tthis._onDidChange.fire(value);\n\t}\n}\n\nclass ExtHostSourceControlResourceGroup implements vscode.SourceControlResourceGroup {\n\n\tprivate static _handlePool: number = 0;\n\tprivate _resourceHandlePool: number = 0;\n\tprivate _resourceStates: vscode.SourceControlResourceState[] = [];\n\n\tprivate _resourceStatesMap: Map<ResourceStateHandle, vscode.SourceControlResourceState> = new Map<ResourceStateHandle, vscode.SourceControlResourceState>();\n\tprivate _resourceStatesCommandsMap: Map<ResourceStateHandle, vscode.Command> = new Map<ResourceStateHandle, vscode.Command>();\n\n\tprivate readonly _onDidUpdateResourceStates = new Emitter<void>();\n\treadonly onDidUpdateResourceStates = this._onDidUpdateResourceStates.event;\n\tprivate readonly _onDidDispose = new Emitter<void>();\n\treadonly onDidDispose = this._onDidDispose.event;\n\n\tprivate _handlesSnapshot: number[] = [];\n\tprivate _resourceSnapshot: vscode.SourceControlResourceState[] = [];\n\n\tget id(): string { return this._id; }\n\n\tget label(): string { return this._label; }\n\tset label(label: string) {\n\t\tthis._label = label;\n\t\tthis._proxy.$updateGroupLabel(this._sourceControlHandle, this.handle, label);\n\t}\n\n\tprivate _hideWhenEmpty: boolean | undefined = undefined;\n\tget hideWhenEmpty(): boolean | undefined { return this._hideWhenEmpty; }\n\tset hideWhenEmpty(hideWhenEmpty: boolean | undefined) {\n\t\tthis._hideWhenEmpty = hideWhenEmpty;\n\t\tthis._proxy.$updateGroup(this._sourceControlHandle, this.handle, { hideWhenEmpty });\n\t}\n\n\tget resourceStates(): vscode.SourceControlResourceState[] { return [...this._resourceStates]; }\n\tset resourceStates(resources: vscode.SourceControlResourceState[]) {\n\t\tthis._resourceStates = [...resources];\n\t\tthis._onDidUpdateResourceStates.fire();\n\t}\n\n\treadonly handle = ExtHostSourceControlResourceGroup._handlePool++;\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadSCMShape,\n\t\tprivate _commands: ExtHostCommands,\n\t\tprivate _sourceControlHandle: number,\n\t\tprivate _id: string,\n\t\tprivate _label: string,\n\t) {\n\t\tthis._proxy.$registerGroup(_sourceControlHandle, this.handle, _id, _label);\n\t}\n\n\tgetResourceState(handle: number): vscode.SourceControlResourceState | undefined {\n\t\treturn this._resourceStatesMap.get(handle);\n\t}\n\n\t$executeResourceCommand(handle: number, preserveFocus: boolean): Promise<void> {\n\t\tconst command = this._resourceStatesCommandsMap.get(handle);\n\n\t\tif (!command) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => this._commands.executeCommand(command.command, ...(command.arguments || []), preserveFocus));\n\t}\n\n\t_takeResourceStateSnapshot(): SCMRawResourceSplice[] {\n\t\tconst snapshot = [...this._resourceStates].sort(compareResourceStates);\n\t\tconst diffs = sortedDiff(this._resourceSnapshot, snapshot, compareResourceStates);\n\n\t\tconst splices = diffs.map<ISplice<{ rawResource: SCMRawResource, handle: number }>>(diff => {\n\t\t\tconst toInsert = diff.toInsert.map(r => {\n\t\t\t\tconst handle = this._resourceHandlePool++;\n\t\t\t\tthis._resourceStatesMap.set(handle, r);\n\n\t\t\t\tconst sourceUri = r.resourceUri;\n\t\t\t\tconst iconUri = getIconResource(r.decorations);\n\t\t\t\tconst lightIconUri = r.decorations && getIconResource(r.decorations.light) || iconUri;\n\t\t\t\tconst darkIconUri = r.decorations && getIconResource(r.decorations.dark) || iconUri;\n\t\t\t\tconst icons: UriComponents[] = [];\n\n\t\t\t\tif (r.command) {\n\t\t\t\t\tthis._resourceStatesCommandsMap.set(handle, r.command);\n\t\t\t\t}\n\n\t\t\t\tif (lightIconUri) {\n\t\t\t\t\ticons.push(lightIconUri);\n\t\t\t\t}\n\n\t\t\t\tif (darkIconUri && (darkIconUri.toString() !== lightIconUri?.toString())) {\n\t\t\t\t\ticons.push(darkIconUri);\n\t\t\t\t}\n\n\t\t\t\tconst tooltip = (r.decorations && r.decorations.tooltip) || '';\n\t\t\t\tconst strikeThrough = r.decorations && !!r.decorations.strikeThrough;\n\t\t\t\tconst faded = r.decorations && !!r.decorations.faded;\n\n\t\t\t\tconst rawResource = [handle, sourceUri, icons, tooltip, strikeThrough, faded] as SCMRawResource;\n\n\t\t\t\treturn { rawResource, handle };\n\t\t\t});\n\n\t\t\treturn { start: diff.start, deleteCount: diff.deleteCount, toInsert };\n\t\t});\n\n\t\tconst rawResourceSplices = splices\n\t\t\t.map(({ start, deleteCount, toInsert }) => [start, deleteCount, toInsert.map(i => i.rawResource)] as SCMRawResourceSplice);\n\n\t\tconst reverseSplices = splices.reverse();\n\n\t\tfor (const { start, deleteCount, toInsert } of reverseSplices) {\n\t\t\tconst handles = toInsert.map(i => i.handle);\n\t\t\tconst handlesToDelete = this._handlesSnapshot.splice(start, deleteCount, ...handles);\n\n\t\t\tfor (const handle of handlesToDelete) {\n\t\t\t\tthis._resourceStatesMap.delete(handle);\n\t\t\t\tthis._resourceStatesCommandsMap.delete(handle);\n\t\t\t}\n\t\t}\n\n\t\tthis._resourceSnapshot = snapshot;\n\t\treturn rawResourceSplices;\n\t}\n\n\tdispose(): void {\n\t\tthis._proxy.$unregisterGroup(this._sourceControlHandle, this.handle);\n\t\tthis._onDidDispose.fire();\n\t}\n}\n\nclass ExtHostSourceControl implements vscode.SourceControl {\n\n\tprivate static _handlePool: number = 0;\n\tprivate _groups: Map<GroupHandle, ExtHostSourceControlResourceGroup> = new Map<GroupHandle, ExtHostSourceControlResourceGroup>();\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tget rootUri(): vscode.Uri | undefined {\n\t\treturn this._rootUri;\n\t}\n\n\tprivate _inputBox: ExtHostSCMInputBox;\n\tget inputBox(): ExtHostSCMInputBox { return this._inputBox; }\n\n\tprivate _count: number | undefined = undefined;\n\n\tget count(): number | undefined {\n\t\treturn this._count;\n\t}\n\n\tset count(count: number | undefined) {\n\t\tif (this._count === count) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._count = count;\n\t\tthis._proxy.$updateSourceControl(this.handle, { count });\n\t}\n\n\tprivate _quickDiffProvider: vscode.QuickDiffProvider | undefined = undefined;\n\n\tget quickDiffProvider(): vscode.QuickDiffProvider | undefined {\n\t\treturn this._quickDiffProvider;\n\t}\n\n\tset quickDiffProvider(quickDiffProvider: vscode.QuickDiffProvider | undefined) {\n\t\tthis._quickDiffProvider = quickDiffProvider;\n\t\tthis._proxy.$updateSourceControl(this.handle, { hasQuickDiffProvider: !!quickDiffProvider });\n\t}\n\n\tprivate _commitTemplate: string | undefined = undefined;\n\n\tget commitTemplate(): string | undefined {\n\t\treturn this._commitTemplate;\n\t}\n\n\tset commitTemplate(commitTemplate: string | undefined) {\n\t\tif (commitTemplate === this._commitTemplate) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._commitTemplate = commitTemplate;\n\t\tthis._proxy.$updateSourceControl(this.handle, { commitTemplate });\n\t}\n\n\tprivate _acceptInputDisposables = new MutableDisposable<DisposableStore>();\n\tprivate _acceptInputCommand: vscode.Command | undefined = undefined;\n\n\tget acceptInputCommand(): vscode.Command | undefined {\n\t\treturn this._acceptInputCommand;\n\t}\n\n\tset acceptInputCommand(acceptInputCommand: vscode.Command | undefined) {\n\t\tthis._acceptInputDisposables.value = new DisposableStore();\n\n\t\tthis._acceptInputCommand = acceptInputCommand;\n\n\t\tconst internal = this._commands.converter.toInternal(acceptInputCommand, this._acceptInputDisposables.value);\n\t\tthis._proxy.$updateSourceControl(this.handle, { acceptInputCommand: internal });\n\t}\n\n\tprivate _statusBarDisposables = new MutableDisposable<DisposableStore>();\n\tprivate _statusBarCommands: vscode.Command[] | undefined = undefined;\n\n\tget statusBarCommands(): vscode.Command[] | undefined {\n\t\treturn this._statusBarCommands;\n\t}\n\n\tset statusBarCommands(statusBarCommands: vscode.Command[] | undefined) {\n\t\tif (this._statusBarCommands && statusBarCommands && commandListEquals(this._statusBarCommands, statusBarCommands)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._statusBarDisposables.value = new DisposableStore();\n\n\t\tthis._statusBarCommands = statusBarCommands;\n\n\t\tconst internal = (statusBarCommands || []).map(c => this._commands.converter.toInternal(c, this._statusBarDisposables.value!)) as ICommandDto[];\n\t\tthis._proxy.$updateSourceControl(this.handle, { statusBarCommands: internal });\n\t}\n\n\tprivate _selected: boolean = false;\n\n\tget selected(): boolean {\n\t\treturn this._selected;\n\t}\n\n\tprivate readonly _onDidChangeSelection = new Emitter<boolean>();\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\tprivate handle: number = ExtHostSourceControl._handlePool++;\n\n\tconstructor(\n\t\t_extension: IExtensionDescription,\n\t\tprivate _proxy: MainThreadSCMShape,\n\t\tprivate _commands: ExtHostCommands,\n\t\tprivate _id: string,\n\t\tprivate _label: string,\n\t\tprivate _rootUri?: vscode.Uri\n\t) {\n\t\tthis._inputBox = new ExtHostSCMInputBox(_extension, this._proxy, this.handle);\n\t\tthis._proxy.$registerSourceControl(this.handle, _id, _label, _rootUri);\n\t}\n\n\tprivate updatedResourceGroups = new Set<ExtHostSourceControlResourceGroup>();\n\n\tcreateResourceGroup(id: string, label: string): ExtHostSourceControlResourceGroup {\n\t\tconst group = new ExtHostSourceControlResourceGroup(this._proxy, this._commands, this.handle, id, label);\n\n\t\tconst updateListener = group.onDidUpdateResourceStates(() => {\n\t\t\tthis.updatedResourceGroups.add(group);\n\t\t\tthis.eventuallyUpdateResourceStates();\n\t\t});\n\n\t\tEvent.once(group.onDidDispose)(() => {\n\t\t\tthis.updatedResourceGroups.delete(group);\n\t\t\tupdateListener.dispose();\n\t\t\tthis._groups.delete(group.handle);\n\t\t});\n\n\t\tthis._groups.set(group.handle, group);\n\t\treturn group;\n\t}\n\n\t@debounce(100)\n\teventuallyUpdateResourceStates(): void {\n\t\tconst splices: SCMRawResourceSplices[] = [];\n\n\t\tthis.updatedResourceGroups.forEach(group => {\n\t\t\tconst snapshot = group._takeResourceStateSnapshot();\n\n\t\t\tif (snapshot.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsplices.push([group.handle, snapshot]);\n\t\t});\n\n\t\tif (splices.length > 0) {\n\t\t\tthis._proxy.$spliceResourceStates(this.handle, splices);\n\t\t}\n\n\t\tthis.updatedResourceGroups.clear();\n\t}\n\n\tgetResourceGroup(handle: GroupHandle): ExtHostSourceControlResourceGroup | undefined {\n\t\treturn this._groups.get(handle);\n\t}\n\n\tsetSelectionState(selected: boolean): void {\n\t\tthis._selected = selected;\n\t\tthis._onDidChangeSelection.fire(selected);\n\t}\n\n\tdispose(): void {\n\t\tthis._acceptInputDisposables.dispose();\n\t\tthis._statusBarDisposables.dispose();\n\n\t\tthis._groups.forEach(group => group.dispose());\n\t\tthis._proxy.$unregisterSourceControl(this.handle);\n\t}\n}\n\nexport class ExtHostSCM implements ExtHostSCMShape {\n\n\tprivate static _handlePool: number = 0;\n\n\tprivate _proxy: MainThreadSCMShape;\n\tprivate readonly _telemetry: MainThreadTelemetryShape;\n\tprivate _sourceControls: Map<ProviderHandle, ExtHostSourceControl> = new Map<ProviderHandle, ExtHostSourceControl>();\n\tprivate _sourceControlsByExtension: Map<string, ExtHostSourceControl[]> = new Map<string, ExtHostSourceControl[]>();\n\n\tprivate readonly _onDidChangeActiveProvider = new Emitter<vscode.SourceControl>();\n\tget onDidChangeActiveProvider(): Event<vscode.SourceControl> { return this._onDidChangeActiveProvider.event; }\n\n\tprivate _selectedSourceControlHandles = new Set<number>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate _commands: ExtHostCommands,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadSCM);\n\t\tthis._telemetry = mainContext.getProxy(MainContext.MainThreadTelemetry);\n\n\t\t_commands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === 3) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.sourceControlHandle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst group = sourceControl.getResourceGroup(arg.groupHandle);\n\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn group.getResourceState(arg.handle);\n\t\t\t\t} else if (arg && arg.$mid === 4) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.sourceControlHandle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn sourceControl.getResourceGroup(arg.groupHandle);\n\t\t\t\t} else if (arg && arg.$mid === 5) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.handle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn sourceControl;\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateSourceControl(extension: IExtensionDescription, id: string, label: string, rootUri: vscode.Uri | undefined): vscode.SourceControl {\n\t\tthis.logService.trace('ExtHostSCM#createSourceControl', extension.identifier.value, id, label, rootUri);\n\n\t\ttype TEvent = { extensionId: string; };\n\t\ttype TMeta = { extensionId: { classification: 'SystemMetaData', purpose: 'FeatureInsight' }; };\n\t\tthis._telemetry.$publicLog2<TEvent, TMeta>('api/scm/createSourceControl', {\n\t\t\textensionId: extension.identifier.value,\n\t\t});\n\n\t\tconst handle = ExtHostSCM._handlePool++;\n\t\tconst sourceControl = new ExtHostSourceControl(extension, this._proxy, this._commands, id, label, rootUri);\n\t\tthis._sourceControls.set(handle, sourceControl);\n\n\t\tconst sourceControls = this._sourceControlsByExtension.get(ExtensionIdentifier.toKey(extension.identifier)) || [];\n\t\tsourceControls.push(sourceControl);\n\t\tthis._sourceControlsByExtension.set(ExtensionIdentifier.toKey(extension.identifier), sourceControls);\n\n\t\treturn sourceControl;\n\t}\n\n\t// Deprecated\n\tgetLastInputBox(extension: IExtensionDescription): ExtHostSCMInputBox | undefined {\n\t\tthis.logService.trace('ExtHostSCM#getLastInputBox', extension.identifier.value);\n\n\t\tconst sourceControls = this._sourceControlsByExtension.get(ExtensionIdentifier.toKey(extension.identifier));\n\t\tconst sourceControl = sourceControls && sourceControls[sourceControls.length - 1];\n\t\treturn sourceControl && sourceControl.inputBox;\n\t}\n\n\t$provideOriginalResource(sourceControlHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<UriComponents | null> {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tthis.logService.trace('ExtHostSCM#$provideOriginalResource', sourceControlHandle, uri.toString());\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl || !sourceControl.quickDiffProvider || !sourceControl.quickDiffProvider.provideOriginalResource) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn asPromise(() => sourceControl.quickDiffProvider!.provideOriginalResource!(uri, token))\n\t\t\t.then<UriComponents | null>(r => r || null);\n\t}\n\n\t$onInputBoxValueChange(sourceControlHandle: number, value: string): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$onInputBoxValueChange', sourceControlHandle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tsourceControl.inputBox.$onInputBoxValueChange(value);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$executeResourceCommand(sourceControlHandle: number, groupHandle: number, handle: number, preserveFocus: boolean): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$executeResourceCommand', sourceControlHandle, groupHandle, handle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst group = sourceControl.getResourceGroup(groupHandle);\n\n\t\tif (!group) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn group.$executeResourceCommand(handle, preserveFocus);\n\t}\n\n\t$validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string, number] | undefined> {\n\t\tthis.logService.trace('ExtHostSCM#$validateInput', sourceControlHandle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (!sourceControl.inputBox.validateInput) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => sourceControl.inputBox.validateInput!(value, cursorPosition)).then(result => {\n\t\t\tif (!result) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\n\t\t\treturn Promise.resolve<[string, number]>([result.message, result.type]);\n\t\t});\n\t}\n\n\t$setSelectedSourceControls(selectedSourceControlHandles: number[]): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$setSelectedSourceControls', selectedSourceControlHandles);\n\n\t\tconst set = new Set<number>();\n\n\t\tfor (const handle of selectedSourceControlHandles) {\n\t\t\tset.add(handle);\n\t\t}\n\n\t\tset.forEach(handle => {\n\t\t\tif (!this._selectedSourceControlHandles.has(handle)) {\n\t\t\t\tconst sourceControl = this._sourceControls.get(handle);\n\n\t\t\t\tif (!sourceControl) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsourceControl.setSelectionState(true);\n\t\t\t}\n\t\t});\n\n\t\tthis._selectedSourceControlHandles.forEach(handle => {\n\t\t\tif (!set.has(handle)) {\n\t\t\t\tconst sourceControl = this._sourceControls.get(handle);\n\n\t\t\t\tif (!sourceControl) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsourceControl.setSelectionState(false);\n\t\t\t}\n\t\t});\n\n\t\tthis._selectedSourceControlHandles = set;\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StatusbarAlignment as MainThreadStatusBarAlignment } from 'vs/workbench/services/statusbar/common/statusbar';\nimport { StatusBarAlignment as ExtHostStatusBarAlignment, Disposable, ThemeColor } from './extHostTypes';\nimport type * as vscode from 'vscode';\nimport { MainContext, MainThreadStatusBarShape, IMainContext, ICommandDto } from './extHost.protocol';\nimport { localize } from 'vs/nls';\nimport { CommandsConverter } from 'vs/workbench/api/common/extHostCommands';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nexport class ExtHostStatusBarEntry implements vscode.StatusBarItem {\n\tprivate static ID_GEN = 0;\n\n\tprivate _id: number;\n\tprivate _alignment: number;\n\tprivate _priority?: number;\n\tprivate _disposed: boolean = false;\n\tprivate _visible: boolean = false;\n\n\tprivate _statusId: string;\n\tprivate _statusName: string;\n\n\tprivate _text: string = '';\n\tprivate _tooltip?: string;\n\tprivate _color?: string | ThemeColor;\n\tprivate readonly _internalCommandRegistration = new DisposableStore();\n\tprivate _command?: {\n\t\treadonly fromApi: string | vscode.Command,\n\t\treadonly internal: ICommandDto,\n\t};\n\n\tprivate _timeoutHandle: any;\n\tprivate _proxy: MainThreadStatusBarShape;\n\tprivate _commands: CommandsConverter;\n\n\tconstructor(proxy: MainThreadStatusBarShape, commands: CommandsConverter, id: string, name: string, alignment: ExtHostStatusBarAlignment = ExtHostStatusBarAlignment.Left, priority?: number) {\n\t\tthis._id = ExtHostStatusBarEntry.ID_GEN++;\n\t\tthis._proxy = proxy;\n\t\tthis._commands = commands;\n\t\tthis._statusId = id;\n\t\tthis._statusName = name;\n\t\tthis._alignment = alignment;\n\t\tthis._priority = priority;\n\t}\n\n\tpublic get id(): number {\n\t\treturn this._id;\n\t}\n\n\tpublic get alignment(): vscode.StatusBarAlignment {\n\t\treturn this._alignment;\n\t}\n\n\tpublic get priority(): number | undefined {\n\t\treturn this._priority;\n\t}\n\n\tpublic get text(): string {\n\t\treturn this._text;\n\t}\n\n\tpublic get tooltip(): string | undefined {\n\t\treturn this._tooltip;\n\t}\n\n\tpublic get color(): string | ThemeColor | undefined {\n\t\treturn this._color;\n\t}\n\n\tpublic get command(): string | vscode.Command | undefined {\n\t\treturn this._command?.fromApi;\n\t}\n\n\tpublic set text(text: string) {\n\t\tthis._text = text;\n\t\tthis.update();\n\t}\n\n\tpublic set tooltip(tooltip: string | undefined) {\n\t\tthis._tooltip = tooltip;\n\t\tthis.update();\n\t}\n\n\tpublic set color(color: string | ThemeColor | undefined) {\n\t\tthis._color = color;\n\t\tthis.update();\n\t}\n\n\tpublic set command(command: string | vscode.Command | undefined) {\n\t\tif (this._command?.fromApi === command) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._internalCommandRegistration.clear();\n\t\tif (typeof command === 'string') {\n\t\t\tthis._command = {\n\t\t\t\tfromApi: command,\n\t\t\t\tinternal: this._commands.toInternal({ title: '', command }, this._internalCommandRegistration),\n\t\t\t};\n\t\t} else if (command) {\n\t\t\tthis._command = {\n\t\t\t\tfromApi: command,\n\t\t\t\tinternal: this._commands.toInternal(command, this._internalCommandRegistration),\n\t\t\t};\n\t\t} else {\n\t\t\tthis._command = undefined;\n\t\t}\n\t\tthis.update();\n\t}\n\n\tpublic show(): void {\n\t\tthis._visible = true;\n\t\tthis.update();\n\t}\n\n\tpublic hide(): void {\n\t\tclearTimeout(this._timeoutHandle);\n\t\tthis._visible = false;\n\t\tthis._proxy.$dispose(this.id);\n\t}\n\n\tprivate update(): void {\n\t\tif (this._disposed || !this._visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout(this._timeoutHandle);\n\n\t\t// Defer the update so that multiple changes to setters dont cause a redraw each\n\t\tthis._timeoutHandle = setTimeout(() => {\n\t\t\tthis._timeoutHandle = undefined;\n\n\t\t\t// Set to status bar\n\t\t\tthis._proxy.$setEntry(this.id, this._statusId, this._statusName, this.text, this.tooltip, this._command?.internal, this.color,\n\t\t\t\tthis._alignment === ExtHostStatusBarAlignment.Left ? MainThreadStatusBarAlignment.LEFT : MainThreadStatusBarAlignment.RIGHT,\n\t\t\t\tthis._priority);\n\t\t}, 0);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.hide();\n\t\tthis._disposed = true;\n\t}\n}\n\nclass StatusBarMessage {\n\n\tprivate _item: vscode.StatusBarItem;\n\tprivate _messages: { message: string }[] = [];\n\n\tconstructor(statusBar: ExtHostStatusBar) {\n\t\tthis._item = statusBar.createStatusBarEntry('status.extensionMessage', localize('status.extensionMessage', \"Extension Status\"), ExtHostStatusBarAlignment.Left, Number.MIN_VALUE);\n\t}\n\n\tdispose() {\n\t\tthis._messages.length = 0;\n\t\tthis._item.dispose();\n\t}\n\n\tsetMessage(message: string): Disposable {\n\t\tconst data: { message: string } = { message }; // use object to not confuse equal strings\n\t\tthis._messages.unshift(data);\n\t\tthis._update();\n\n\t\treturn new Disposable(() => {\n\t\t\tconst idx = this._messages.indexOf(data);\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._messages.splice(idx, 1);\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _update() {\n\t\tif (this._messages.length > 0) {\n\t\t\tthis._item.text = this._messages[0].message;\n\t\t\tthis._item.show();\n\t\t} else {\n\t\t\tthis._item.hide();\n\t\t}\n\t}\n}\n\nexport class ExtHostStatusBar {\n\n\tprivate readonly _proxy: MainThreadStatusBarShape;\n\tprivate readonly _commands: CommandsConverter;\n\tprivate _statusMessage: StatusBarMessage;\n\n\tconstructor(mainContext: IMainContext, commands: CommandsConverter) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadStatusBar);\n\t\tthis._commands = commands;\n\t\tthis._statusMessage = new StatusBarMessage(this);\n\t}\n\n\tcreateStatusBarEntry(id: string, name: string, alignment?: ExtHostStatusBarAlignment, priority?: number): vscode.StatusBarItem {\n\t\treturn new ExtHostStatusBarEntry(this._proxy, this._commands, id, name, alignment, priority);\n\t}\n\n\tsetStatusBarMessage(text: string, timeoutOrThenable?: number | Thenable<any>): Disposable {\n\n\t\tconst d = this._statusMessage.setMessage(text);\n\t\tlet handle: any;\n\n\t\tif (typeof timeoutOrThenable === 'number') {\n\t\t\thandle = setTimeout(() => d.dispose(), timeoutOrThenable);\n\t\t} else if (typeof timeoutOrThenable !== 'undefined') {\n\t\t\ttimeoutOrThenable.then(() => d.dispose(), () => d.dispose());\n\t\t}\n\n\t\treturn new Disposable(() => {\n\t\t\td.dispose();\n\t\t\tclearTimeout(handle);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadStorageShape, ExtHostStorageShape } from './extHost.protocol';\nimport { Emitter } from 'vs/base/common/event';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IStorageChangeEvent {\n\tshared: boolean;\n\tkey: string;\n\tvalue: object;\n}\n\nexport class ExtHostStorage implements ExtHostStorageShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _proxy: MainThreadStorageShape;\n\n\tprivate readonly _onDidChangeStorage = new Emitter<IStorageChangeEvent>();\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tconstructor(mainContext: IExtHostRpcService) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadStorage);\n\t}\n\n\tgetValue<T>(shared: boolean, key: string, defaultValue?: T): Promise<T | undefined> {\n\t\treturn this._proxy.$getValue<T>(shared, key).then(value => value || defaultValue);\n\t}\n\n\tsetValue(shared: boolean, key: string, value: object): Promise<void> {\n\t\treturn this._proxy.$setValue(shared, key, value);\n\t}\n\n\t$acceptValue(shared: boolean, key: string, value: object): void {\n\t\tthis._onDidChangeStorage.fire({ shared, key, value });\n\t}\n}\n\nexport interface IExtHostStorage extends ExtHostStorage { }\nexport const IExtHostStorage = createDecorator<IExtHostStorage>('IExtHostStorage');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ExtHostTerminalServiceShape, MainContext, MainThreadTerminalServiceShape, IShellLaunchConfigDto, IShellDefinitionDto, IShellAndArgsDto, ITerminalDimensionsDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostConfigProvider } from 'vs/workbench/api/common/extHostConfiguration';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ITerminalChildProcess, ITerminalDimensions, EXT_HOST_CREATION_DELAY } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { timeout } from 'vs/base/common/async';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { TerminalDataBufferer } from 'vs/workbench/contrib/terminal/common/terminalDataBuffering';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Disposable as VSCodeDisposable, EnvironmentVariableMutatorType } from './extHostTypes';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\n\nexport interface IExtHostTerminalService extends ExtHostTerminalServiceShape {\n\n\t_serviceBrand: undefined;\n\n\tactiveTerminal: vscode.Terminal | undefined;\n\tterminals: vscode.Terminal[];\n\n\tonDidCloseTerminal: Event<vscode.Terminal>;\n\tonDidOpenTerminal: Event<vscode.Terminal>;\n\tonDidChangeActiveTerminal: Event<vscode.Terminal | undefined>;\n\tonDidChangeTerminalDimensions: Event<vscode.TerminalDimensionsChangeEvent>;\n\tonDidWriteTerminalData: Event<vscode.TerminalDataWriteEvent>;\n\n\tcreateTerminal(name?: string, shellPath?: string, shellArgs?: string[] | string): vscode.Terminal;\n\tcreateTerminalFromOptions(options: vscode.TerminalOptions): vscode.Terminal;\n\tcreateExtensionTerminal(options: vscode.ExtensionTerminalOptions): vscode.Terminal;\n\tattachPtyToTerminal(id: number, pty: vscode.Pseudoterminal): void;\n\tgetDefaultShell(useAutomationShell: boolean, configProvider: ExtHostConfigProvider): string;\n\tgetDefaultShellArgs(useAutomationShell: boolean, configProvider: ExtHostConfigProvider): string[] | string;\n\tregisterLinkHandler(handler: vscode.TerminalLinkHandler): vscode.Disposable;\n\tgetEnvironmentVariableCollection(extension: IExtensionDescription, persistent?: boolean): vscode.EnvironmentVariableCollection;\n}\n\nexport const IExtHostTerminalService = createDecorator<IExtHostTerminalService>('IExtHostTerminalService');\n\nexport class BaseExtHostTerminal {\n\tpublic _id: number | undefined;\n\tprotected _idPromise: Promise<number>;\n\tprivate _idPromiseComplete: ((value: number) => any) | undefined;\n\tprivate _disposed: boolean = false;\n\tprivate _queuedRequests: ApiRequest[] = [];\n\n\tconstructor(\n\t\tprotected _proxy: MainThreadTerminalServiceShape,\n\t\tid?: number\n\t) {\n\t\tthis._idPromise = new Promise<number>(c => {\n\t\t\tif (id !== undefined) {\n\t\t\t\tthis._id = id;\n\t\t\t\tc(id);\n\t\t\t} else {\n\t\t\t\tthis._idPromiseComplete = c;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._queueApiRequest(this._proxy.$dispose, []);\n\t\t}\n\t}\n\n\tprotected _checkDisposed() {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error('Terminal has already been disposed');\n\t\t}\n\t}\n\n\tprotected _queueApiRequest(callback: (...args: any[]) => void, args: any[]): void {\n\t\tconst request: ApiRequest = new ApiRequest(callback, args);\n\t\tif (!this._id) {\n\t\t\tthis._queuedRequests.push(request);\n\t\t\treturn;\n\t\t}\n\t\trequest.run(this._proxy, this._id);\n\t}\n\n\tpublic _runQueuedRequests(id: number): void {\n\t\tthis._id = id;\n\t\tif (this._idPromiseComplete) {\n\t\t\tthis._idPromiseComplete(id);\n\t\t\tthis._idPromiseComplete = undefined;\n\t\t}\n\t\tthis._queuedRequests.forEach((r) => {\n\t\t\tr.run(this._proxy, id);\n\t\t});\n\t\tthis._queuedRequests.length = 0;\n\t}\n}\n\nexport class ExtHostTerminal extends BaseExtHostTerminal implements vscode.Terminal {\n\tprivate _pidPromise: Promise<number | undefined>;\n\tprivate _cols: number | undefined;\n\tprivate _pidPromiseComplete: ((value: number | undefined) => any) | undefined;\n\tprivate _rows: number | undefined;\n\tprivate _exitStatus: vscode.TerminalExitStatus | undefined;\n\n\tpublic isOpen: boolean = false;\n\n\tconstructor(\n\t\tproxy: MainThreadTerminalServiceShape,\n\t\tprivate readonly _creationOptions: vscode.TerminalOptions | vscode.ExtensionTerminalOptions,\n\t\tprivate _name?: string,\n\t\tid?: number\n\t) {\n\t\tsuper(proxy, id);\n\t\tthis._creationOptions = Object.freeze(this._creationOptions);\n\t\tthis._pidPromise = new Promise<number>(c => this._pidPromiseComplete = c);\n\t}\n\n\tpublic async create(\n\t\tshellPath?: string,\n\t\tshellArgs?: string[] | string,\n\t\tcwd?: string | URI,\n\t\tenv?: { [key: string]: string | null },\n\t\twaitOnExit?: boolean,\n\t\tstrictEnv?: boolean,\n\t\thideFromUser?: boolean\n\t): Promise<void> {\n\t\tconst result = await this._proxy.$createTerminal({ name: this._name, shellPath, shellArgs, cwd, env, waitOnExit, strictEnv, hideFromUser });\n\t\tthis._name = result.name;\n\t\tthis._runQueuedRequests(result.id);\n\t}\n\n\tpublic async createExtensionTerminal(): Promise<number> {\n\t\tconst result = await this._proxy.$createTerminal({ name: this._name, isExtensionTerminal: true });\n\t\tthis._name = result.name;\n\t\tthis._runQueuedRequests(result.id);\n\t\treturn result.id;\n\t}\n\n\tpublic get name(): string {\n\t\treturn this._name || '';\n\t}\n\n\tpublic set name(name: string) {\n\t\tthis._name = name;\n\t}\n\n\tpublic get exitStatus(): vscode.TerminalExitStatus | undefined {\n\t\treturn this._exitStatus;\n\t}\n\n\tpublic get dimensions(): vscode.TerminalDimensions | undefined {\n\t\tif (this._cols === undefined || this._rows === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\tcolumns: this._cols,\n\t\t\trows: this._rows\n\t\t};\n\t}\n\n\tpublic setExitCode(code: number | undefined) {\n\t\tthis._exitStatus = Object.freeze({ code });\n\t}\n\n\tpublic setDimensions(cols: number, rows: number): boolean {\n\t\tif (cols === this._cols && rows === this._rows) {\n\t\t\t// Nothing changed\n\t\t\treturn false;\n\t\t}\n\t\tthis._cols = cols;\n\t\tthis._rows = rows;\n\t\treturn true;\n\t}\n\n\tpublic get processId(): Promise<number | undefined> {\n\t\treturn this._pidPromise;\n\t}\n\n\tpublic get creationOptions(): Readonly<vscode.TerminalOptions | vscode.ExtensionTerminalOptions> {\n\t\treturn this._creationOptions;\n\t}\n\n\tpublic sendText(text: string, addNewLine: boolean = true): void {\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$sendText, [text, addNewLine]);\n\t}\n\n\tpublic show(preserveFocus: boolean): void {\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$show, [preserveFocus]);\n\t}\n\n\tpublic hide(): void {\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$hide, []);\n\t}\n\n\tpublic _setProcessId(processId: number | undefined): void {\n\t\t// The event may fire 2 times when the panel is restored\n\t\tif (this._pidPromiseComplete) {\n\t\t\tthis._pidPromiseComplete(processId);\n\t\t\tthis._pidPromiseComplete = undefined;\n\t\t} else {\n\t\t\t// Recreate the promise if this is the nth processId set (e.g. reused task terminals)\n\t\t\tthis._pidPromise.then(pid => {\n\t\t\t\tif (pid !== processId) {\n\t\t\t\t\tthis._pidPromise = Promise.resolve(processId);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass ApiRequest {\n\tprivate _callback: (...args: any[]) => void;\n\tprivate _args: any[];\n\n\tconstructor(callback: (...args: any[]) => void, args: any[]) {\n\t\tthis._callback = callback;\n\t\tthis._args = args;\n\t}\n\n\tpublic run(proxy: MainThreadTerminalServiceShape, id: number) {\n\t\tthis._callback.apply(proxy, [id].concat(this._args));\n\t}\n}\n\nexport class ExtHostPseudoterminal implements ITerminalChildProcess {\n\tprivate readonly _onProcessData = new Emitter<string>();\n\tpublic readonly onProcessData: Event<string> = this._onProcessData.event;\n\tprivate readonly _onProcessExit = new Emitter<number | undefined>();\n\tpublic readonly onProcessExit: Event<number | undefined> = this._onProcessExit.event;\n\tprivate readonly _onProcessReady = new Emitter<{ pid: number, cwd: string }>();\n\tpublic get onProcessReady(): Event<{ pid: number, cwd: string }> { return this._onProcessReady.event; }\n\tprivate readonly _onProcessTitleChanged = new Emitter<string>();\n\tpublic readonly onProcessTitleChanged: Event<string> = this._onProcessTitleChanged.event;\n\tprivate readonly _onProcessOverrideDimensions = new Emitter<ITerminalDimensions | undefined>();\n\tpublic get onProcessOverrideDimensions(): Event<ITerminalDimensions | undefined> { return this._onProcessOverrideDimensions.event; }\n\n\tconstructor(private readonly _pty: vscode.Pseudoterminal) { }\n\n\tshutdown(): void {\n\t\tthis._pty.close();\n\t}\n\n\tinput(data: string): void {\n\t\tif (this._pty.handleInput) {\n\t\t\tthis._pty.handleInput(data);\n\t\t}\n\t}\n\n\tresize(cols: number, rows: number): void {\n\t\tif (this._pty.setDimensions) {\n\t\t\tthis._pty.setDimensions({ columns: cols, rows });\n\t\t}\n\t}\n\n\tgetInitialCwd(): Promise<string> {\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetCwd(): Promise<string> {\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetLatency(): Promise<number> {\n\t\treturn Promise.resolve(0);\n\t}\n\n\tstartSendingEvents(initialDimensions: ITerminalDimensionsDto | undefined): void {\n\t\t// Attach the listeners\n\t\tthis._pty.onDidWrite(e => this._onProcessData.fire(e));\n\t\tif (this._pty.onDidClose) {\n\t\t\tthis._pty.onDidClose((e: number | void = undefined) => {\n\t\t\t\tthis._onProcessExit.fire(e === void 0 ? undefined : e);\n\t\t\t});\n\t\t}\n\t\tif (this._pty.onDidOverrideDimensions) {\n\t\t\tthis._pty.onDidOverrideDimensions(e => this._onProcessOverrideDimensions.fire(e ? { cols: e.columns, rows: e.rows } : e));\n\t\t}\n\n\t\tthis._pty.open(initialDimensions ? initialDimensions : undefined);\n\t\tthis._onProcessReady.fire({ pid: -1, cwd: '' });\n\t}\n}\n\nexport abstract class BaseExtHostTerminalService implements IExtHostTerminalService, ExtHostTerminalServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected _proxy: MainThreadTerminalServiceShape;\n\tprotected _activeTerminal: ExtHostTerminal | undefined;\n\tprotected _terminals: ExtHostTerminal[] = [];\n\tprotected _terminalProcesses: { [id: number]: ITerminalChildProcess } = {};\n\tprotected _terminalProcessDisposables: { [id: number]: IDisposable } = {};\n\tprotected _extensionTerminalAwaitingStart: { [id: number]: { initialDimensions: ITerminalDimensionsDto | undefined } | undefined } = {};\n\tprotected _getTerminalPromises: { [id: number]: Promise<ExtHostTerminal> } = {};\n\n\tprivate readonly _bufferer: TerminalDataBufferer;\n\tprivate readonly _linkHandlers: Set<vscode.TerminalLinkHandler> = new Set();\n\n\tpublic get activeTerminal(): ExtHostTerminal | undefined { return this._activeTerminal; }\n\tpublic get terminals(): ExtHostTerminal[] { return this._terminals; }\n\n\tprotected readonly _onDidCloseTerminal: Emitter<vscode.Terminal> = new Emitter<vscode.Terminal>();\n\tpublic get onDidCloseTerminal(): Event<vscode.Terminal> { return this._onDidCloseTerminal && this._onDidCloseTerminal.event; }\n\tprotected readonly _onDidOpenTerminal: Emitter<vscode.Terminal> = new Emitter<vscode.Terminal>();\n\tpublic get onDidOpenTerminal(): Event<vscode.Terminal> { return this._onDidOpenTerminal && this._onDidOpenTerminal.event; }\n\tprotected readonly _onDidChangeActiveTerminal: Emitter<vscode.Terminal | undefined> = new Emitter<vscode.Terminal | undefined>();\n\tpublic get onDidChangeActiveTerminal(): Event<vscode.Terminal | undefined> { return this._onDidChangeActiveTerminal && this._onDidChangeActiveTerminal.event; }\n\tprotected readonly _onDidChangeTerminalDimensions: Emitter<vscode.TerminalDimensionsChangeEvent> = new Emitter<vscode.TerminalDimensionsChangeEvent>();\n\tpublic get onDidChangeTerminalDimensions(): Event<vscode.TerminalDimensionsChangeEvent> { return this._onDidChangeTerminalDimensions && this._onDidChangeTerminalDimensions.event; }\n\tprotected readonly _onDidWriteTerminalData: Emitter<vscode.TerminalDataWriteEvent>;\n\tpublic get onDidWriteTerminalData(): Event<vscode.TerminalDataWriteEvent> { return this._onDidWriteTerminalData && this._onDidWriteTerminalData.event; }\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadTerminalService);\n\t\tthis._bufferer = new TerminalDataBufferer(this._proxy.$sendProcessData);\n\t\tthis._onDidWriteTerminalData = new Emitter<vscode.TerminalDataWriteEvent>({\n\t\t\tonFirstListenerAdd: () => this._proxy.$startSendingDataEvents(),\n\t\t\tonLastListenerRemove: () => this._proxy.$stopSendingDataEvents()\n\t\t});\n\t}\n\n\tpublic abstract createTerminal(name?: string, shellPath?: string, shellArgs?: string[] | string): vscode.Terminal;\n\tpublic abstract createTerminalFromOptions(options: vscode.TerminalOptions): vscode.Terminal;\n\tpublic abstract getDefaultShell(useAutomationShell: boolean, configProvider: ExtHostConfigProvider): string;\n\tpublic abstract getDefaultShellArgs(useAutomationShell: boolean, configProvider: ExtHostConfigProvider): string[] | string;\n\tpublic abstract $spawnExtHostProcess(id: number, shellLaunchConfigDto: IShellLaunchConfigDto, activeWorkspaceRootUriComponents: UriComponents, cols: number, rows: number, isWorkspaceShellAllowed: boolean): Promise<void>;\n\tpublic abstract $getAvailableShells(): Promise<IShellDefinitionDto[]>;\n\tpublic abstract $getDefaultShellAndArgs(useAutomationShell: boolean): Promise<IShellAndArgsDto>;\n\tpublic abstract $acceptWorkspacePermissionsChanged(isAllowed: boolean): void;\n\tpublic abstract getEnvironmentVariableCollection(extension: IExtensionDescription, persistent?: boolean): vscode.EnvironmentVariableCollection;\n\tpublic abstract $initEnvironmentVariableCollections(collections: [string, ISerializableEnvironmentVariableCollection][]): void;\n\n\tpublic createExtensionTerminal(options: vscode.ExtensionTerminalOptions): vscode.Terminal {\n\t\tconst terminal = new ExtHostTerminal(this._proxy, options, options.name);\n\t\tconst p = new ExtHostPseudoterminal(options.pty);\n\t\tterminal.createExtensionTerminal().then(id => {\n\t\t\tconst disposable = this._setupExtHostProcessListeners(id, p);\n\t\t\tthis._terminalProcessDisposables[id] = disposable;\n\t\t});\n\t\tthis._terminals.push(terminal);\n\t\treturn terminal;\n\t}\n\n\tpublic attachPtyToTerminal(id: number, pty: vscode.Pseudoterminal): void {\n\t\tconst terminal = this._getTerminalByIdEventually(id);\n\t\tif (!terminal) {\n\t\t\tthrow new Error(`Cannot resolve terminal with id ${id} for virtual process`);\n\t\t}\n\t\tconst p = new ExtHostPseudoterminal(pty);\n\t\tconst disposable = this._setupExtHostProcessListeners(id, p);\n\t\tthis._terminalProcessDisposables[id] = disposable;\n\t}\n\n\tpublic async $acceptActiveTerminalChanged(id: number | null): Promise<void> {\n\t\tconst original = this._activeTerminal;\n\t\tif (id === null) {\n\t\t\tthis._activeTerminal = undefined;\n\t\t\tif (original !== this._activeTerminal) {\n\t\t\t\tthis._onDidChangeActiveTerminal.fire(this._activeTerminal);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tconst terminal = await this._getTerminalByIdEventually(id);\n\t\tif (terminal) {\n\t\t\tthis._activeTerminal = terminal;\n\t\t\tif (original !== this._activeTerminal) {\n\t\t\t\tthis._onDidChangeActiveTerminal.fire(this._activeTerminal);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalProcessData(id: number, data: string): Promise<void> {\n\t\tconst terminal = await this._getTerminalByIdEventually(id);\n\t\tif (terminal) {\n\t\t\tthis._onDidWriteTerminalData.fire({ terminal, data });\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalDimensions(id: number, cols: number, rows: number): Promise<void> {\n\t\tconst terminal = await this._getTerminalByIdEventually(id);\n\t\tif (terminal) {\n\t\t\tif (terminal.setDimensions(cols, rows)) {\n\t\t\t\tthis._onDidChangeTerminalDimensions.fire({\n\t\t\t\t\tterminal: terminal,\n\t\t\t\t\tdimensions: terminal.dimensions as vscode.TerminalDimensions\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalMaximumDimensions(id: number, cols: number, rows: number): Promise<void> {\n\t\tawait this._getTerminalByIdEventually(id);\n\n\t\tif (this._terminalProcesses[id]) {\n\t\t\t// Extension pty terminal only - when virtual process resize fires it means that the\n\t\t\t// terminal's maximum dimensions changed\n\t\t\tthis._terminalProcesses[id]?.resize(cols, rows);\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalTitleChange(id: number, name: string): Promise<void> {\n\t\tawait this._getTerminalByIdEventually(id);\n\t\tconst extHostTerminal = this._getTerminalObjectById(this.terminals, id);\n\t\tif (extHostTerminal) {\n\t\t\textHostTerminal.name = name;\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalClosed(id: number, exitCode: number | undefined): Promise<void> {\n\t\tawait this._getTerminalByIdEventually(id);\n\t\tconst index = this._getTerminalObjectIndexById(this.terminals, id);\n\t\tif (index !== null) {\n\t\t\tconst terminal = this._terminals.splice(index, 1)[0];\n\t\t\tterminal.setExitCode(exitCode);\n\t\t\tthis._onDidCloseTerminal.fire(terminal);\n\t\t}\n\t}\n\n\tpublic $acceptTerminalOpened(id: number, name: string, shellLaunchConfigDto: IShellLaunchConfigDto): void {\n\t\tconst index = this._getTerminalObjectIndexById(this._terminals, id);\n\t\tif (index !== null) {\n\t\t\t// The terminal has already been created (via createTerminal*), only fire the event\n\t\t\tthis._onDidOpenTerminal.fire(this.terminals[index]);\n\t\t\tthis.terminals[index].isOpen = true;\n\t\t\treturn;\n\t\t}\n\n\t\tconst creationOptions: vscode.TerminalOptions = {\n\t\t\tname: shellLaunchConfigDto.name,\n\t\t\tshellPath: shellLaunchConfigDto.executable,\n\t\t\tshellArgs: shellLaunchConfigDto.args,\n\t\t\tcwd: typeof shellLaunchConfigDto.cwd === 'string' ? shellLaunchConfigDto.cwd : URI.revive(shellLaunchConfigDto.cwd),\n\t\t\tenv: shellLaunchConfigDto.env\n\t\t};\n\t\tconst terminal = new ExtHostTerminal(this._proxy, creationOptions, name, id);\n\t\tthis._terminals.push(terminal);\n\t\tthis._onDidOpenTerminal.fire(terminal);\n\t\tterminal.isOpen = true;\n\t}\n\n\tpublic async $acceptTerminalProcessId(id: number, processId: number): Promise<void> {\n\t\tconst terminal = await this._getTerminalByIdEventually(id);\n\t\tif (terminal) {\n\t\t\tterminal._setProcessId(processId);\n\t\t}\n\t}\n\n\tpublic async $startExtensionTerminal(id: number, initialDimensions: ITerminalDimensionsDto | undefined): Promise<void> {\n\t\t// Make sure the ExtHostTerminal exists so onDidOpenTerminal has fired before we call\n\t\t// Pseudoterminal.start\n\t\tconst terminal = await this._getTerminalByIdEventually(id);\n\t\tif (!terminal) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for onDidOpenTerminal to fire\n\t\tlet openPromise: Promise<void>;\n\t\tif (terminal.isOpen) {\n\t\t\topenPromise = Promise.resolve();\n\t\t} else {\n\t\t\topenPromise = new Promise<void>(r => {\n\t\t\t\t// Ensure open is called after onDidOpenTerminal\n\t\t\t\tconst listener = this.onDidOpenTerminal(async e => {\n\t\t\t\t\tif (e === terminal) {\n\t\t\t\t\t\tlistener.dispose();\n\t\t\t\t\t\tr();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tawait openPromise;\n\n\t\tif (this._terminalProcesses[id]) {\n\t\t\t(this._terminalProcesses[id] as ExtHostPseudoterminal).startSendingEvents(initialDimensions);\n\t\t} else {\n\t\t\t// Defer startSendingEvents call to when _setupExtHostProcessListeners is called\n\t\t\tthis._extensionTerminalAwaitingStart[id] = { initialDimensions };\n\t\t}\n\n\t}\n\n\tprotected _setupExtHostProcessListeners(id: number, p: ITerminalChildProcess): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\tdisposables.add(p.onProcessReady((e: { pid: number, cwd: string }) => this._proxy.$sendProcessReady(id, e.pid, e.cwd)));\n\t\tdisposables.add(p.onProcessTitleChanged(title => this._proxy.$sendProcessTitle(id, title)));\n\n\t\t// Buffer data events to reduce the amount of messages going to the renderer\n\t\tthis._bufferer.startBuffering(id, p.onProcessData);\n\t\tdisposables.add(p.onProcessExit(exitCode => this._onProcessExit(id, exitCode)));\n\n\t\tif (p.onProcessOverrideDimensions) {\n\t\t\tdisposables.add(p.onProcessOverrideDimensions(e => this._proxy.$sendOverrideDimensions(id, e)));\n\t\t}\n\t\tthis._terminalProcesses[id] = p;\n\n\t\tconst awaitingStart = this._extensionTerminalAwaitingStart[id];\n\t\tif (awaitingStart && p instanceof ExtHostPseudoterminal) {\n\t\t\tp.startSendingEvents(awaitingStart.initialDimensions);\n\t\t\tdelete this._extensionTerminalAwaitingStart[id];\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tpublic $acceptProcessInput(id: number, data: string): void {\n\t\tthis._terminalProcesses[id]?.input(data);\n\t}\n\n\tpublic $acceptProcessResize(id: number, cols: number, rows: number): void {\n\t\ttry {\n\t\t\tthis._terminalProcesses[id]?.resize(cols, rows);\n\t\t} catch (error) {\n\t\t\t// We tried to write to a closed pipe / channel.\n\t\t\tif (error.code !== 'EPIPE' && error.code !== 'ERR_IPC_CHANNEL_CLOSED') {\n\t\t\t\tthrow (error);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic $acceptProcessShutdown(id: number, immediate: boolean): void {\n\t\tthis._terminalProcesses[id]?.shutdown(immediate);\n\t}\n\n\tpublic $acceptProcessRequestInitialCwd(id: number): void {\n\t\tthis._terminalProcesses[id]?.getInitialCwd().then(initialCwd => this._proxy.$sendProcessInitialCwd(id, initialCwd));\n\t}\n\n\tpublic $acceptProcessRequestCwd(id: number): void {\n\t\tthis._terminalProcesses[id]?.getCwd().then(cwd => this._proxy.$sendProcessCwd(id, cwd));\n\t}\n\n\tpublic $acceptProcessRequestLatency(id: number): number {\n\t\treturn id;\n\t}\n\n\tpublic registerLinkHandler(handler: vscode.TerminalLinkHandler): vscode.Disposable {\n\t\tthis._linkHandlers.add(handler);\n\t\tif (this._linkHandlers.size === 1) {\n\t\t\tthis._proxy.$startHandlingLinks();\n\t\t}\n\t\treturn new VSCodeDisposable(() => {\n\t\t\tthis._linkHandlers.delete(handler);\n\t\t\tif (this._linkHandlers.size === 0) {\n\t\t\t\tthis._proxy.$stopHandlingLinks();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async $handleLink(id: number, link: string): Promise<boolean> {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (!terminal) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Call each handler synchronously so multiple handlers aren't triggered at once\n\t\tconst it = this._linkHandlers.values();\n\t\tlet next = it.next();\n\t\twhile (!next.done) {\n\t\t\tconst handled = await next.value.handleLink(terminal, link);\n\t\t\tif (handled) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tnext = it.next();\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _onProcessExit(id: number, exitCode: number | undefined): void {\n\t\tthis._bufferer.stopBuffering(id);\n\n\t\t// Remove process reference\n\t\tdelete this._terminalProcesses[id];\n\t\tdelete this._extensionTerminalAwaitingStart[id];\n\n\t\t// Clean up process disposables\n\t\tconst processDiposable = this._terminalProcessDisposables[id];\n\t\tif (processDiposable) {\n\t\t\tprocessDiposable.dispose();\n\t\t\tdelete this._terminalProcessDisposables[id];\n\t\t}\n\n\t\t// Send exit event to main side\n\t\tthis._proxy.$sendProcessExit(id, exitCode);\n\t}\n\n\t// TODO: This could be improved by using a single promise and resolve it when the terminal is ready\n\tprivate _getTerminalByIdEventually(id: number, retries: number = 5): Promise<ExtHostTerminal | undefined> {\n\t\tif (!this._getTerminalPromises[id]) {\n\t\t\tthis._getTerminalPromises[id] = this._createGetTerminalPromise(id, retries);\n\t\t}\n\t\treturn this._getTerminalPromises[id];\n\t}\n\n\tprivate _createGetTerminalPromise(id: number, retries: number = 5): Promise<ExtHostTerminal> {\n\t\treturn new Promise(c => {\n\t\t\tif (retries === 0) {\n\t\t\t\tc(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst terminal = this._getTerminalById(id);\n\t\t\tif (terminal) {\n\t\t\t\tc(terminal);\n\t\t\t} else {\n\t\t\t\t// This should only be needed immediately after createTerminalRenderer is called as\n\t\t\t\t// the ExtHostTerminal has not yet been iniitalized\n\t\t\t\ttimeout(EXT_HOST_CREATION_DELAY * 2).then(() => c(this._createGetTerminalPromise(id, retries - 1)));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _getTerminalById(id: number): ExtHostTerminal | null {\n\t\treturn this._getTerminalObjectById(this._terminals, id);\n\t}\n\n\tprivate _getTerminalObjectById<T extends ExtHostTerminal>(array: T[], id: number): T | null {\n\t\tconst index = this._getTerminalObjectIndexById(array, id);\n\t\treturn index !== null ? array[index] : null;\n\t}\n\n\tprivate _getTerminalObjectIndexById<T extends ExtHostTerminal>(array: T[], id: number): number | null {\n\t\tlet index: number | null = null;\n\t\tarray.some((item, i) => {\n\t\t\tconst thisId = item._id;\n\t\t\tif (thisId === id) {\n\t\t\t\tindex = i;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\treturn index;\n\t}\n}\n\nexport class EnvironmentVariableCollection implements vscode.EnvironmentVariableCollection {\n\treadonly map: Map<string, vscode.EnvironmentVariableMutator> = new Map();\n\tprivate _persistent: boolean = true;\n\n\tpublic get persistent(): boolean { return this._persistent; }\n\tpublic set persistent(value: boolean) {\n\t\tthis._persistent = value;\n\t\tthis._onDidChangeCollection.fire();\n\t}\n\n\tprotected readonly _onDidChangeCollection: Emitter<void> = new Emitter<void>();\n\tget onDidChangeCollection(): Event<void> { return this._onDidChangeCollection && this._onDidChangeCollection.event; }\n\n\tconstructor(\n\t\tserialized?: ISerializableEnvironmentVariableCollection\n\t) {\n\t\tthis.map = new Map(serialized);\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\treplace(variable: string, value: string): void {\n\t\tthis._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Replace });\n\t}\n\n\tappend(variable: string, value: string): void {\n\t\tthis._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Append });\n\t}\n\n\tprepend(variable: string, value: string): void {\n\t\tthis._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Prepend });\n\t}\n\n\tprivate _setIfDiffers(variable: string, mutator: vscode.EnvironmentVariableMutator): void {\n\t\tconst current = this.map.get(variable);\n\t\tif (!current || current.value !== mutator.value || current.type !== mutator.type) {\n\t\t\tthis.map.set(variable, mutator);\n\t\t\tthis._onDidChangeCollection.fire();\n\t\t}\n\t}\n\n\tget(variable: string): vscode.EnvironmentVariableMutator | undefined {\n\t\treturn this.map.get(variable);\n\t}\n\n\tforEach(callback: (variable: string, mutator: vscode.EnvironmentVariableMutator, collection: vscode.EnvironmentVariableCollection) => any, thisArg?: any): void {\n\t\tthis.map.forEach((value, key) => callback.call(thisArg, key, value, this));\n\t}\n\n\tdelete(variable: string): void {\n\t\tthis.map.delete(variable);\n\t\tthis._onDidChangeCollection.fire();\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t\tthis._onDidChangeCollection.fire();\n\t}\n}\n\nexport class WorkerExtHostTerminalService extends BaseExtHostTerminalService {\n\tpublic createTerminal(name?: string, shellPath?: string, shellArgs?: string[] | string): vscode.Terminal {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic createTerminalFromOptions(options: vscode.TerminalOptions): vscode.Terminal {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic getDefaultShell(useAutomationShell: boolean, configProvider: ExtHostConfigProvider): string {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic getDefaultShellArgs(useAutomationShell: boolean, configProvider: ExtHostConfigProvider): string[] | string {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic $spawnExtHostProcess(id: number, shellLaunchConfigDto: IShellLaunchConfigDto, activeWorkspaceRootUriComponents: UriComponents, cols: number, rows: number, isWorkspaceShellAllowed: boolean): Promise<void> {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic $getAvailableShells(): Promise<IShellDefinitionDto[]> {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic async $getDefaultShellAndArgs(useAutomationShell: boolean): Promise<IShellAndArgsDto> {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic $acceptWorkspacePermissionsChanged(isAllowed: boolean): void {\n\t\t// No-op for web worker ext host as workspace permissions aren't used\n\t}\n\n\tpublic getEnvironmentVariableCollection(extension: IExtensionDescription, persistent?: boolean): vscode.EnvironmentVariableCollection {\n\t\t// This is not implemented so worker ext host extensions cannot influence terminal envs\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic $initEnvironmentVariableCollections(collections: [string, ISerializableEnvironmentVariableCollection][]): void {\n\t\t// No-op for web worker ext host as collections aren't used\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as arrays from 'vs/base/common/arrays';\nimport { ExtHostEditorsShape, IEditorPropertiesChangeData, IMainContext, ITextDocumentShowOptions, ITextEditorPositionData, MainContext, MainThreadTextEditorsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { ExtHostTextEditor, TextEditorDecorationType } from 'vs/workbench/api/common/extHostTextEditor';\nimport * as TypeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { TextEditorSelectionChangeKind } from 'vs/workbench/api/common/extHostTypes';\nimport type * as vscode from 'vscode';\n\nexport class ExtHostEditors implements ExtHostEditorsShape {\n\n\tprivate readonly _onDidChangeTextEditorSelection = new Emitter<vscode.TextEditorSelectionChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorOptions = new Emitter<vscode.TextEditorOptionsChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorVisibleRanges = new Emitter<vscode.TextEditorVisibleRangesChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorViewColumn = new Emitter<vscode.TextEditorViewColumnChangeEvent>();\n\tprivate readonly _onDidChangeActiveTextEditor = new Emitter<vscode.TextEditor | undefined>();\n\tprivate readonly _onDidChangeVisibleTextEditors = new Emitter<vscode.TextEditor[]>();\n\n\treadonly onDidChangeTextEditorSelection: Event<vscode.TextEditorSelectionChangeEvent> = this._onDidChangeTextEditorSelection.event;\n\treadonly onDidChangeTextEditorOptions: Event<vscode.TextEditorOptionsChangeEvent> = this._onDidChangeTextEditorOptions.event;\n\treadonly onDidChangeTextEditorVisibleRanges: Event<vscode.TextEditorVisibleRangesChangeEvent> = this._onDidChangeTextEditorVisibleRanges.event;\n\treadonly onDidChangeTextEditorViewColumn: Event<vscode.TextEditorViewColumnChangeEvent> = this._onDidChangeTextEditorViewColumn.event;\n\treadonly onDidChangeActiveTextEditor: Event<vscode.TextEditor | undefined> = this._onDidChangeActiveTextEditor.event;\n\treadonly onDidChangeVisibleTextEditors: Event<vscode.TextEditor[]> = this._onDidChangeVisibleTextEditors.event;\n\n\n\tprivate _proxy: MainThreadTextEditorsShape;\n\tprivate _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\textHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTextEditors);\n\t\tthis._extHostDocumentsAndEditors = extHostDocumentsAndEditors;\n\n\t\tthis._extHostDocumentsAndEditors.onDidChangeVisibleTextEditors(e => this._onDidChangeVisibleTextEditors.fire(e));\n\t\tthis._extHostDocumentsAndEditors.onDidChangeActiveTextEditor(e => this._onDidChangeActiveTextEditor.fire(e));\n\t}\n\n\tgetActiveTextEditor(): ExtHostTextEditor | undefined {\n\t\treturn this._extHostDocumentsAndEditors.activeEditor();\n\t}\n\n\tgetVisibleTextEditors(): vscode.TextEditor[] {\n\t\treturn this._extHostDocumentsAndEditors.allEditors();\n\t}\n\n\tshowTextDocument(document: vscode.TextDocument, column: vscode.ViewColumn, preserveFocus: boolean): Promise<vscode.TextEditor>;\n\tshowTextDocument(document: vscode.TextDocument, options: { column: vscode.ViewColumn, preserveFocus: boolean, pinned: boolean }): Promise<vscode.TextEditor>;\n\tshowTextDocument(document: vscode.TextDocument, columnOrOptions: vscode.ViewColumn | vscode.TextDocumentShowOptions | undefined, preserveFocus?: boolean): Promise<vscode.TextEditor>;\n\tshowTextDocument(document: vscode.TextDocument, columnOrOptions: vscode.ViewColumn | vscode.TextDocumentShowOptions | undefined, preserveFocus?: boolean): Promise<vscode.TextEditor> {\n\t\tlet options: ITextDocumentShowOptions;\n\t\tif (typeof columnOrOptions === 'number') {\n\t\t\toptions = {\n\t\t\t\tposition: TypeConverters.ViewColumn.from(columnOrOptions),\n\t\t\t\tpreserveFocus\n\t\t\t};\n\t\t} else if (typeof columnOrOptions === 'object') {\n\t\t\toptions = {\n\t\t\t\tposition: TypeConverters.ViewColumn.from(columnOrOptions.viewColumn),\n\t\t\t\tpreserveFocus: columnOrOptions.preserveFocus,\n\t\t\t\tselection: typeof columnOrOptions.selection === 'object' ? TypeConverters.Range.from(columnOrOptions.selection) : undefined,\n\t\t\t\tpinned: typeof columnOrOptions.preview === 'boolean' ? !columnOrOptions.preview : undefined\n\t\t\t};\n\t\t} else {\n\t\t\toptions = {\n\t\t\t\tpreserveFocus: false\n\t\t\t};\n\t\t}\n\n\t\treturn this._proxy.$tryShowTextDocument(document.uri, options).then(id => {\n\t\t\tconst editor = id && this._extHostDocumentsAndEditors.getEditor(id);\n\t\t\tif (editor) {\n\t\t\t\treturn editor;\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Failed to show text document ${document.uri.toString()}, should show in editor #${id}`);\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateTextEditorDecorationType(options: vscode.DecorationRenderOptions): vscode.TextEditorDecorationType {\n\t\treturn new TextEditorDecorationType(this._proxy, options);\n\t}\n\n\tapplyWorkspaceEdit(edit: vscode.WorkspaceEdit): Promise<boolean> {\n\t\tconst dto = TypeConverters.WorkspaceEdit.from(edit, this._extHostDocumentsAndEditors);\n\t\treturn this._proxy.$tryApplyWorkspaceEdit(dto);\n\t}\n\n\t// --- called from main thread\n\n\t$acceptEditorPropertiesChanged(id: string, data: IEditorPropertiesChangeData): void {\n\t\tconst textEditor = this._extHostDocumentsAndEditors.getEditor(id);\n\t\tif (!textEditor) {\n\t\t\tthrow new Error('unknown text editor');\n\t\t}\n\n\t\t// (1) set all properties\n\t\tif (data.options) {\n\t\t\ttextEditor._acceptOptions(data.options);\n\t\t}\n\t\tif (data.selections) {\n\t\t\tconst selections = data.selections.selections.map(TypeConverters.Selection.to);\n\t\t\ttextEditor._acceptSelections(selections);\n\t\t}\n\t\tif (data.visibleRanges) {\n\t\t\tconst visibleRanges = arrays.coalesce(data.visibleRanges.map(TypeConverters.Range.to));\n\t\t\ttextEditor._acceptVisibleRanges(visibleRanges);\n\t\t}\n\n\t\t// (2) fire change events\n\t\tif (data.options) {\n\t\t\tthis._onDidChangeTextEditorOptions.fire({\n\t\t\t\ttextEditor: textEditor,\n\t\t\t\toptions: { ...data.options, lineNumbers: TypeConverters.TextEditorLineNumbersStyle.to(data.options.lineNumbers) }\n\t\t\t});\n\t\t}\n\t\tif (data.selections) {\n\t\t\tconst kind = TextEditorSelectionChangeKind.fromValue(data.selections.source);\n\t\t\tconst selections = data.selections.selections.map(TypeConverters.Selection.to);\n\t\t\tthis._onDidChangeTextEditorSelection.fire({\n\t\t\t\ttextEditor,\n\t\t\t\tselections,\n\t\t\t\tkind\n\t\t\t});\n\t\t}\n\t\tif (data.visibleRanges) {\n\t\t\tconst visibleRanges = arrays.coalesce(data.visibleRanges.map(TypeConverters.Range.to));\n\t\t\tthis._onDidChangeTextEditorVisibleRanges.fire({\n\t\t\t\ttextEditor,\n\t\t\t\tvisibleRanges\n\t\t\t});\n\t\t}\n\t}\n\n\t$acceptEditorPositionData(data: ITextEditorPositionData): void {\n\t\tfor (const id in data) {\n\t\t\tconst textEditor = this._extHostDocumentsAndEditors.getEditor(id);\n\t\t\tif (!textEditor) {\n\t\t\t\tthrow new Error('Unknown text editor');\n\t\t\t}\n\t\t\tconst viewColumn = TypeConverters.ViewColumn.to(data[id]);\n\t\t\tif (textEditor.viewColumn !== viewColumn) {\n\t\t\t\ttextEditor._acceptViewColumn(viewColumn);\n\t\t\t\tthis._onDidChangeTextEditorViewColumn.fire({ textEditor, viewColumn });\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDiffInformation(id: string): Promise<vscode.LineChange[]> {\n\t\treturn Promise.resolve(this._proxy.$getDiffInformation(id));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { UriComponents, URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostTimelineShape, MainThreadTimelineShape, IMainContext, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { Timeline, TimelineItem, TimelineOptions, TimelineProvider, InternalTimelineOptions } from 'vs/workbench/contrib/timeline/common/timeline';\nimport { IDisposable, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CommandsConverter, ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { ThemeIcon } from 'vs/workbench/api/common/extHostTypes';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport interface IExtHostTimeline extends ExtHostTimelineShape {\n\treadonly _serviceBrand: undefined;\n\t$getTimeline(id: string, uri: UriComponents, options: vscode.TimelineOptions, token: vscode.CancellationToken, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined>;\n}\n\nexport const IExtHostTimeline = createDecorator<IExtHostTimeline>('IExtHostTimeline');\n\nexport class ExtHostTimeline implements IExtHostTimeline {\n\t_serviceBrand: undefined;\n\n\tprivate _proxy: MainThreadTimelineShape;\n\n\tprivate _providers = new Map<string, TimelineProvider>();\n\n\tprivate _itemsBySourceAndUriMap = new Map<string, Map<string | undefined, Map<string, vscode.TimelineItem>>>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tcommands: ExtHostCommands,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTimeline);\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === 11) {\n\t\t\t\t\tconst uri = arg.uri === undefined ? undefined : URI.revive(arg.uri);\n\t\t\t\t\treturn this._itemsBySourceAndUriMap.get(arg.source)?.get(getUriKey(uri))?.get(arg.handle);\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tasync $getTimeline(id: string, uri: UriComponents, options: vscode.TimelineOptions, token: vscode.CancellationToken, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined> {\n\t\tconst provider = this._providers.get(id);\n\t\treturn provider?.provideTimeline(URI.revive(uri), options, token, internalOptions);\n\t}\n\n\tregisterTimelineProvider(scheme: string | string[], provider: vscode.TimelineProvider, _extensionId: ExtensionIdentifier, commandConverter: CommandsConverter): IDisposable {\n\t\tconst timelineDisposables = new DisposableStore();\n\n\t\tconst convertTimelineItem = this.convertTimelineItem(provider.id, commandConverter, timelineDisposables).bind(this);\n\n\t\tlet disposable: IDisposable | undefined;\n\t\tif (provider.onDidChange) {\n\t\t\tdisposable = provider.onDidChange(e => this._proxy.$emitTimelineChangeEvent({ uri: undefined, reset: true, ...e, id: provider.id }), this);\n\t\t}\n\n\t\tconst itemsBySourceAndUriMap = this._itemsBySourceAndUriMap;\n\t\treturn this.registerTimelineProviderCore({\n\t\t\t...provider,\n\t\t\tscheme: scheme,\n\t\t\tonDidChange: undefined,\n\t\t\tasync provideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken, internalOptions?: InternalTimelineOptions) {\n\t\t\t\tif (internalOptions?.resetCache) {\n\t\t\t\t\ttimelineDisposables.clear();\n\n\t\t\t\t\t// For now, only allow the caching of a single Uri\n\t\t\t\t\t// itemsBySourceAndUriMap.get(provider.id)?.get(getUriKey(uri))?.clear();\n\t\t\t\t\titemsBySourceAndUriMap.get(provider.id)?.clear();\n\t\t\t\t}\n\n\t\t\t\tconst result = await provider.provideTimeline(uri, options, token);\n\t\t\t\t// Intentional == we don't know how a provider will respond\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\tif (result == null) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// TODO: Should we bother converting all the data if we aren't caching? Meaning it is being requested by an extension?\n\n\t\t\t\tconst convertItem = convertTimelineItem(uri, internalOptions);\n\t\t\t\treturn {\n\t\t\t\t\t...result,\n\t\t\t\t\tsource: provider.id,\n\t\t\t\t\titems: result.items.map(convertItem)\n\t\t\t\t};\n\t\t\t},\n\t\t\tdispose() {\n\t\t\t\tfor (const sourceMap of itemsBySourceAndUriMap.values()) {\n\t\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t\t}\n\n\t\t\t\tdisposable?.dispose();\n\t\t\t\ttimelineDisposables.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertTimelineItem(source: string, commandConverter: CommandsConverter, disposables: DisposableStore) {\n\t\treturn (uri: URI, options?: InternalTimelineOptions) => {\n\t\t\tlet items: Map<string, vscode.TimelineItem> | undefined;\n\t\t\tif (options?.cacheResults) {\n\t\t\t\tlet itemsByUri = this._itemsBySourceAndUriMap.get(source);\n\t\t\t\tif (itemsByUri === undefined) {\n\t\t\t\t\titemsByUri = new Map();\n\t\t\t\t\tthis._itemsBySourceAndUriMap.set(source, itemsByUri);\n\t\t\t\t}\n\n\t\t\t\tconst uriKey = getUriKey(uri);\n\t\t\t\titems = itemsByUri.get(uriKey);\n\t\t\t\tif (items === undefined) {\n\t\t\t\t\titems = new Map();\n\t\t\t\t\titemsByUri.set(uriKey, items);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (item: vscode.TimelineItem): TimelineItem => {\n\t\t\t\tconst { iconPath, ...props } = item;\n\n\t\t\t\tconst handle = `${source}|${item.id ?? item.timestamp}`;\n\t\t\t\titems?.set(handle, item);\n\n\t\t\t\tlet icon;\n\t\t\t\tlet iconDark;\n\t\t\t\tlet themeIcon;\n\t\t\t\tif (item.iconPath) {\n\t\t\t\t\tif (iconPath instanceof ThemeIcon) {\n\t\t\t\t\t\tthemeIcon = { id: iconPath.id };\n\t\t\t\t\t}\n\t\t\t\t\telse if (URI.isUri(iconPath)) {\n\t\t\t\t\t\ticon = iconPath;\n\t\t\t\t\t\ticonDark = iconPath;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t({ light: icon, dark: iconDark } = iconPath as { light: URI; dark: URI });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...props,\n\t\t\t\t\tid: props.id ?? undefined,\n\t\t\t\t\thandle: handle,\n\t\t\t\t\tsource: source,\n\t\t\t\t\tcommand: item.command ? commandConverter.toInternal(item.command, disposables) : undefined,\n\t\t\t\t\ticon: icon,\n\t\t\t\t\ticonDark: iconDark,\n\t\t\t\t\tthemeIcon: themeIcon\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n\n\tprivate registerTimelineProviderCore(provider: TimelineProvider): IDisposable {\n\t\t// console.log(`ExtHostTimeline#registerTimelineProvider: id=${provider.id}`);\n\n\t\tconst existing = this._providers.get(provider.id);\n\t\tif (existing) {\n\t\t\tthrow new Error(`Timeline Provider ${provider.id} already exists.`);\n\t\t}\n\n\t\tthis._proxy.$registerTimelineProvider({\n\t\t\tid: provider.id,\n\t\t\tlabel: provider.label,\n\t\t\tscheme: provider.scheme\n\t\t});\n\t\tthis._providers.set(provider.id, provider);\n\n\t\treturn toDisposable(() => {\n\t\t\tfor (const sourceMap of this._itemsBySourceAndUriMap.values()) {\n\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t}\n\n\t\t\tthis._providers.delete(provider.id);\n\t\t\tthis._proxy.$unregisterTimelineProvider(provider.id);\n\t\t\tprovider.dispose();\n\t\t});\n\t}\n}\n\nfunction getUriKey(uri: URI | undefined): string | undefined {\n\treturn uri?.toString();\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtHostTunnelServiceShape, MainContext, MainThreadTunnelServiceShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport * as vscode from 'vscode';\nimport { RemoteTunnel, TunnelOptions } from 'vs/platform/remote/common/tunnel';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Emitter } from 'vs/base/common/event';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\n\nexport interface TunnelDto {\n\tremoteAddress: { port: number, host: string };\n\tlocalAddress: { port: number, host: string } | string;\n}\n\nexport namespace TunnelDto {\n\texport function fromApiTunnel(tunnel: vscode.Tunnel): TunnelDto {\n\t\treturn { remoteAddress: tunnel.remoteAddress, localAddress: tunnel.localAddress };\n\t}\n\texport function fromServiceTunnel(tunnel: RemoteTunnel): TunnelDto {\n\t\treturn { remoteAddress: { host: tunnel.tunnelRemoteHost, port: tunnel.tunnelRemotePort }, localAddress: tunnel.localAddress };\n\t}\n}\n\nexport interface Tunnel extends vscode.Disposable {\n\tremote: { port: number, host: string };\n\tlocalAddress: string;\n}\n\nexport interface IExtHostTunnelService extends ExtHostTunnelServiceShape {\n\treadonly _serviceBrand: undefined;\n\topenTunnel(forward: TunnelOptions): Promise<vscode.Tunnel | undefined>;\n\tgetTunnels(): Promise<vscode.TunnelDescription[]>;\n\tonDidChangeTunnels: vscode.Event<void>;\n\tsetTunnelExtensionFunctions(provider: vscode.RemoteAuthorityResolver | undefined): Promise<IDisposable>;\n}\n\nexport const IExtHostTunnelService = createDecorator<IExtHostTunnelService>('IExtHostTunnelService');\n\nexport class ExtHostTunnelService implements IExtHostTunnelService {\n\t_serviceBrand: undefined;\n\tonDidChangeTunnels: vscode.Event<void> = (new Emitter<void>()).event;\n\tprivate readonly _proxy: MainThreadTunnelServiceShape;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadTunnelService);\n\t}\n\n\tasync openTunnel(forward: TunnelOptions): Promise<vscode.Tunnel | undefined> {\n\t\treturn undefined;\n\t}\n\tasync getTunnels(): Promise<vscode.TunnelDescription[]> {\n\t\treturn [];\n\t}\n\tasync $findCandidatePorts(): Promise<{ host: string, port: number; detail: string; }[]> {\n\t\treturn [];\n\t}\n\tasync $filterCandidates(candidates: { host: string, port: number, detail: string }[]): Promise<boolean[]> {\n\t\treturn candidates.map(() => true);\n\t}\n\tasync setTunnelExtensionFunctions(provider: vscode.RemoteAuthorityResolver | undefined): Promise<IDisposable> {\n\t\tawait this._proxy.$tunnelServiceReady();\n\t\treturn { dispose: () => { } };\n\t}\n\t$forwardPort(tunnelOptions: TunnelOptions): Promise<TunnelDto> | undefined { return undefined; }\n\tasync $closeTunnel(remote: { host: string, port: number }): Promise<void> { }\n\tasync $onDidTunnelsChange(): Promise<void> { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { MainContext, IMainContext, ExtHostUrlsShape, MainThreadUrlsShape } from './extHost.protocol';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtHostUrls implements ExtHostUrlsShape {\n\n\tprivate static HandlePool = 0;\n\tprivate readonly _proxy: MainThreadUrlsShape;\n\n\tprivate handles = new Set<string>();\n\tprivate handlers = new Map<number, vscode.UriHandler>();\n\n\tconstructor(\n\t\tmainContext: IMainContext\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadUrls);\n\t}\n\n\tregisterUriHandler(extensionId: ExtensionIdentifier, handler: vscode.UriHandler): vscode.Disposable {\n\t\tif (this.handles.has(ExtensionIdentifier.toKey(extensionId))) {\n\t\t\tthrow new Error(`Protocol handler already registered for extension ${extensionId}`);\n\t\t}\n\n\t\tconst handle = ExtHostUrls.HandlePool++;\n\t\tthis.handles.add(ExtensionIdentifier.toKey(extensionId));\n\t\tthis.handlers.set(handle, handler);\n\t\tthis._proxy.$registerUriHandler(handle, extensionId);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.handles.delete(ExtensionIdentifier.toKey(extensionId));\n\t\t\tthis.handlers.delete(handle);\n\t\t\tthis._proxy.$unregisterUriHandler(handle);\n\t\t});\n\t}\n\n\t$handleExternalUri(handle: number, uri: UriComponents): Promise<void> {\n\t\tconst handler = this.handlers.get(handle);\n\n\t\tif (!handler) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\ttry {\n\t\t\thandler.handleUri(URI.revive(uri));\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tasync createAppUri(uri: URI): Promise<vscode.Uri> {\n\t\treturn URI.revive(await this._proxy.$createAppUri(uri));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { hash } from 'vs/base/common/hash';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as modes from 'vs/editor/common/modes';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtHostApiDeprecationService } from 'vs/workbench/api/common/extHostApiDeprecationService';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { IExtensionStoragePaths } from 'vs/workbench/api/common/extHostStoragePaths';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { EditorViewColumn } from 'vs/workbench/api/common/shared/editor';\nimport { asWebviewUri, WebviewInitData } from 'vs/workbench/api/common/shared/webview';\nimport type * as vscode from 'vscode';\nimport { Cache } from './cache';\nimport * as extHostProtocol from './extHost.protocol';\nimport * as extHostTypes from './extHostTypes';\n\ntype IconPath = URI | { light: URI, dark: URI };\n\nexport class ExtHostWebview implements vscode.Webview {\n\n\treadonly #handle: extHostProtocol.WebviewPanelHandle;\n\treadonly #proxy: extHostProtocol.MainThreadWebviewsShape;\n\treadonly #deprecationService: IExtHostApiDeprecationService;\n\n\treadonly #initData: WebviewInitData;\n\treadonly #workspace: IExtHostWorkspace | undefined;\n\treadonly #extension: IExtensionDescription;\n\n\t#html: string = '';\n\t#options: vscode.WebviewOptions;\n\t#isDisposed: boolean = false;\n\t#hasCalledAsWebviewUri = false;\n\n\tconstructor(\n\t\thandle: extHostProtocol.WebviewPanelHandle,\n\t\tproxy: extHostProtocol.MainThreadWebviewsShape,\n\t\toptions: vscode.WebviewOptions,\n\t\tinitData: WebviewInitData,\n\t\tworkspace: IExtHostWorkspace | undefined,\n\t\textension: IExtensionDescription,\n\t\tdeprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tthis.#handle = handle;\n\t\tthis.#proxy = proxy;\n\t\tthis.#options = options;\n\t\tthis.#initData = initData;\n\t\tthis.#workspace = workspace;\n\t\tthis.#extension = extension;\n\t\tthis.#deprecationService = deprecationService;\n\t}\n\n\t/* internal */ readonly _onMessageEmitter = new Emitter<any>();\n\tpublic readonly onDidReceiveMessage: Event<any> = this._onMessageEmitter.event;\n\n\tpublic dispose() {\n\t\tthis._onMessageEmitter.dispose();\n\t}\n\n\tpublic asWebviewUri(resource: vscode.Uri): vscode.Uri {\n\t\tthis.#hasCalledAsWebviewUri = true;\n\t\treturn asWebviewUri(this.#initData, this.#handle, resource);\n\t}\n\n\tpublic get cspSource(): string {\n\t\treturn this.#initData.webviewCspSource\n\t\t\t.replace('{{uuid}}', this.#handle);\n\t}\n\n\tpublic get html(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#html;\n\t}\n\n\tpublic set html(value: string) {\n\t\tthis.assertNotDisposed();\n\t\tif (this.#html !== value) {\n\t\t\tthis.#html = value;\n\t\t\tif (!this.#hasCalledAsWebviewUri && /([\"'])vscode-resource:([^\\s'\"]+?)([\"'])/i.test(value)) {\n\t\t\t\tthis.#hasCalledAsWebviewUri = true;\n\t\t\t\tthis.#deprecationService.report('Webview vscode-resource: uris', this.#extension,\n\t\t\t\t\t`Please migrate to use the 'webview.asWebviewUri' api instead: https://aka.ms/vscode-webview-use-aswebviewuri`);\n\t\t\t}\n\t\t\tthis.#proxy.$setHtml(this.#handle, value);\n\t\t}\n\t}\n\n\tpublic get options(): vscode.WebviewOptions {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#options;\n\t}\n\n\tpublic set options(newOptions: vscode.WebviewOptions) {\n\t\tthis.assertNotDisposed();\n\t\tthis.#proxy.$setOptions(this.#handle, convertWebviewOptions(this.#extension, this.#workspace, newOptions));\n\t\tthis.#options = newOptions;\n\t}\n\n\tpublic postMessage(message: any): Promise<boolean> {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#proxy.$postMessage(this.#handle, message);\n\t}\n\n\tprivate assertNotDisposed() {\n\t\tif (this.#isDisposed) {\n\t\t\tthrow new Error('Webview is disposed');\n\t\t}\n\t}\n}\n\nexport class ExtHostWebviewEditor extends Disposable implements vscode.WebviewPanel {\n\n\treadonly #handle: extHostProtocol.WebviewPanelHandle;\n\treadonly #proxy: extHostProtocol.MainThreadWebviewsShape;\n\treadonly #viewType: string;\n\n\treadonly #webview: ExtHostWebview;\n\treadonly #options: vscode.WebviewPanelOptions;\n\n\t#title: string;\n\t#iconPath?: IconPath;\n\t#viewColumn: vscode.ViewColumn | undefined = undefined;\n\t#visible: boolean = true;\n\t#active: boolean = true;\n\t#isDisposed: boolean = false;\n\n\treadonly #onDidDispose = this._register(new Emitter<void>());\n\tpublic readonly onDidDispose = this.#onDidDispose.event;\n\n\treadonly #onDidChangeViewState = this._register(new Emitter<vscode.WebviewPanelOnDidChangeViewStateEvent>());\n\tpublic readonly onDidChangeViewState = this.#onDidChangeViewState.event;\n\n\tconstructor(\n\t\thandle: extHostProtocol.WebviewPanelHandle,\n\t\tproxy: extHostProtocol.MainThreadWebviewsShape,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tviewColumn: vscode.ViewColumn | undefined,\n\t\teditorOptions: vscode.WebviewPanelOptions,\n\t\twebview: ExtHostWebview\n\t) {\n\t\tsuper();\n\t\tthis.#handle = handle;\n\t\tthis.#proxy = proxy;\n\t\tthis.#viewType = viewType;\n\t\tthis.#options = editorOptions;\n\t\tthis.#viewColumn = viewColumn;\n\t\tthis.#title = title;\n\t\tthis.#webview = webview;\n\t}\n\n\tpublic dispose() {\n\t\tif (this.#isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#isDisposed = true;\n\t\tthis.#onDidDispose.fire();\n\t\tthis.#proxy.$disposeWebview(this.#handle);\n\t\tthis.#webview.dispose();\n\n\t\tsuper.dispose();\n\t}\n\n\tget webview() {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#webview;\n\t}\n\n\tget viewType(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#viewType;\n\t}\n\n\tget title(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#title;\n\t}\n\n\tset title(value: string) {\n\t\tthis.assertNotDisposed();\n\t\tif (this.#title !== value) {\n\t\t\tthis.#title = value;\n\t\t\tthis.#proxy.$setTitle(this.#handle, value);\n\t\t}\n\t}\n\n\tget iconPath(): IconPath | undefined {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#iconPath;\n\t}\n\n\tset iconPath(value: IconPath | undefined) {\n\t\tthis.assertNotDisposed();\n\t\tif (this.#iconPath !== value) {\n\t\t\tthis.#iconPath = value;\n\n\t\t\tthis.#proxy.$setIconPath(this.#handle, URI.isUri(value) ? { light: value, dark: value } : value);\n\t\t}\n\t}\n\n\tget options() {\n\t\treturn this.#options;\n\t}\n\n\tget viewColumn(): vscode.ViewColumn | undefined {\n\t\tthis.assertNotDisposed();\n\t\tif (typeof this.#viewColumn === 'number' && this.#viewColumn < 0) {\n\t\t\t// We are using a symbolic view column\n\t\t\t// Return undefined instead to indicate that the real view column is currently unknown but will be resolved.\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.#viewColumn;\n\t}\n\n\tpublic get active(): boolean {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#active;\n\t}\n\n\tpublic get visible(): boolean {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#visible;\n\t}\n\n\t_updateViewState(newState: { active: boolean; visible: boolean; viewColumn: vscode.ViewColumn; }) {\n\t\tif (this.#isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.active !== newState.active || this.visible !== newState.visible || this.viewColumn !== newState.viewColumn) {\n\t\t\tthis.#active = newState.active;\n\t\t\tthis.#visible = newState.visible;\n\t\t\tthis.#viewColumn = newState.viewColumn;\n\t\t\tthis.#onDidChangeViewState.fire({ webviewPanel: this });\n\t\t}\n\t}\n\n\tpublic postMessage(message: any): Promise<boolean> {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#proxy.$postMessage(this.#handle, message);\n\t}\n\n\tpublic reveal(viewColumn?: vscode.ViewColumn, preserveFocus?: boolean): void {\n\t\tthis.assertNotDisposed();\n\t\tthis.#proxy.$reveal(this.#handle, {\n\t\t\tviewColumn: viewColumn ? typeConverters.ViewColumn.from(viewColumn) : undefined,\n\t\t\tpreserveFocus: !!preserveFocus\n\t\t});\n\t}\n\n\tprivate assertNotDisposed() {\n\t\tif (this.#isDisposed) {\n\t\t\tthrow new Error('Webview is disposed');\n\t\t}\n\t}\n}\n\nclass CustomDocumentStoreEntry {\n\n\tprivate _backupCounter = 1;\n\n\tconstructor(\n\t\tpublic readonly document: vscode.CustomDocument,\n\t\tprivate readonly _storagePath: string,\n\t) { }\n\n\tprivate readonly _edits = new Cache<vscode.CustomDocumentEditEvent>('custom documents');\n\n\tprivate _backup?: vscode.CustomDocumentBackup;\n\n\taddEdit(item: vscode.CustomDocumentEditEvent): number {\n\t\treturn this._edits.add([item]);\n\t}\n\n\tasync undo(editId: number, isDirty: boolean): Promise<void> {\n\t\tawait this.getEdit(editId).undo();\n\t\tif (!isDirty) {\n\t\t\tthis.disposeBackup();\n\t\t}\n\t}\n\n\tasync redo(editId: number, isDirty: boolean): Promise<void> {\n\t\tawait this.getEdit(editId).redo();\n\t\tif (!isDirty) {\n\t\t\tthis.disposeBackup();\n\t\t}\n\t}\n\n\tdisposeEdits(editIds: number[]): void {\n\t\tfor (const id of editIds) {\n\t\t\tthis._edits.delete(id);\n\t\t}\n\t}\n\n\tgetNewBackupUri(): URI {\n\t\treturn joinPath(URI.file(this._storagePath), hashPath(this.document.uri) + (this._backupCounter++));\n\t}\n\n\tupdateBackup(backup: vscode.CustomDocumentBackup): void {\n\t\tthis._backup?.delete();\n\t\tthis._backup = backup;\n\t}\n\n\tdisposeBackup(): void {\n\t\tthis._backup?.delete();\n\t\tthis._backup = undefined;\n\t}\n\n\tprivate getEdit(editId: number): vscode.CustomDocumentEditEvent {\n\t\tconst edit = this._edits.get(editId, 0);\n\t\tif (!edit) {\n\t\t\tthrow new Error('No edit found');\n\t\t}\n\t\treturn edit;\n\t}\n}\n\nclass CustomDocumentStore {\n\tprivate readonly _documents = new Map<string, CustomDocumentStoreEntry>();\n\n\tpublic get(viewType: string, resource: vscode.Uri): CustomDocumentStoreEntry | undefined {\n\t\treturn this._documents.get(this.key(viewType, resource));\n\t}\n\n\tpublic add(viewType: string, document: vscode.CustomDocument, storagePath: string): CustomDocumentStoreEntry {\n\t\tconst key = this.key(viewType, document.uri);\n\t\tif (this._documents.has(key)) {\n\t\t\tthrow new Error(`Document already exists for viewType:${viewType} resource:${document.uri}`);\n\t\t}\n\t\tconst entry = new CustomDocumentStoreEntry(document, storagePath);\n\t\tthis._documents.set(key, entry);\n\t\treturn entry;\n\t}\n\n\tpublic delete(viewType: string, document: vscode.CustomDocument) {\n\t\tconst key = this.key(viewType, document.uri);\n\t\tthis._documents.delete(key);\n\t}\n\n\tprivate key(viewType: string, resource: vscode.Uri): string {\n\t\treturn `${viewType}@@@${resource}`;\n\t}\n\n}\n\nconst enum WebviewEditorType {\n\tText,\n\tCustom\n}\n\ntype ProviderEntry = {\n\treadonly extension: IExtensionDescription;\n\treadonly type: WebviewEditorType.Text;\n\treadonly provider: vscode.CustomTextEditorProvider;\n} | {\n\treadonly extension: IExtensionDescription;\n\treadonly type: WebviewEditorType.Custom;\n\treadonly provider: vscode.CustomReadonlyEditorProvider;\n};\n\nclass EditorProviderStore {\n\tprivate readonly _providers = new Map<string, ProviderEntry>();\n\n\tpublic addTextProvider(viewType: string, extension: IExtensionDescription, provider: vscode.CustomTextEditorProvider): vscode.Disposable {\n\t\treturn this.add(WebviewEditorType.Text, viewType, extension, provider);\n\t}\n\n\tpublic addCustomProvider(viewType: string, extension: IExtensionDescription, provider: vscode.CustomReadonlyEditorProvider): vscode.Disposable {\n\t\treturn this.add(WebviewEditorType.Custom, viewType, extension, provider);\n\t}\n\n\tpublic get(viewType: string): ProviderEntry | undefined {\n\t\treturn this._providers.get(viewType);\n\t}\n\n\tprivate add(type: WebviewEditorType, viewType: string, extension: IExtensionDescription, provider: vscode.CustomTextEditorProvider | vscode.CustomReadonlyEditorProvider): vscode.Disposable {\n\t\tif (this._providers.has(viewType)) {\n\t\t\tthrow new Error(`Provider for viewType:${viewType} already registered`);\n\t\t}\n\t\tthis._providers.set(viewType, { type, extension, provider } as ProviderEntry);\n\t\treturn new extHostTypes.Disposable(() => this._providers.delete(viewType));\n\t}\n}\n\nexport class ExtHostWebviews implements extHostProtocol.ExtHostWebviewsShape {\n\n\tprivate static newHandle(): extHostProtocol.WebviewPanelHandle {\n\t\treturn generateUuid();\n\t}\n\n\tprivate readonly _proxy: extHostProtocol.MainThreadWebviewsShape;\n\tprivate readonly _webviewPanels = new Map<extHostProtocol.WebviewPanelHandle, ExtHostWebviewEditor>();\n\n\tprivate readonly _serializers = new Map<string, {\n\t\treadonly serializer: vscode.WebviewPanelSerializer;\n\t\treadonly extension: IExtensionDescription;\n\t}>();\n\n\tprivate readonly _editorProviders = new EditorProviderStore();\n\n\tprivate readonly _documents = new CustomDocumentStore();\n\n\tconstructor(\n\t\tmainContext: extHostProtocol.IMainContext,\n\t\tprivate readonly initData: WebviewInitData,\n\t\tprivate readonly workspace: IExtHostWorkspace | undefined,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _deprecationService: IExtHostApiDeprecationService,\n\t\tprivate readonly _extHostDocuments: ExtHostDocuments,\n\t\tprivate readonly _extensionStoragePaths?: IExtensionStoragePaths,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(extHostProtocol.MainContext.MainThreadWebviews);\n\t}\n\n\tpublic createWebviewPanel(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tshowOptions: vscode.ViewColumn | { viewColumn: vscode.ViewColumn, preserveFocus?: boolean },\n\t\toptions: (vscode.WebviewPanelOptions & vscode.WebviewOptions) = {},\n\t): vscode.WebviewPanel {\n\t\tconst viewColumn = typeof showOptions === 'object' ? showOptions.viewColumn : showOptions;\n\t\tconst webviewShowOptions = {\n\t\t\tviewColumn: typeConverters.ViewColumn.from(viewColumn),\n\t\t\tpreserveFocus: typeof showOptions === 'object' && !!showOptions.preserveFocus\n\t\t};\n\n\t\tconst handle = ExtHostWebviews.newHandle();\n\t\tthis._proxy.$createWebviewPanel(toExtensionData(extension), handle, viewType, title, webviewShowOptions, convertWebviewOptions(extension, this.workspace, options));\n\n\t\tconst webview = new ExtHostWebview(handle, this._proxy, options, this.initData, this.workspace, extension, this._deprecationService);\n\t\tconst panel = new ExtHostWebviewEditor(handle, this._proxy, viewType, title, viewColumn, options, webview);\n\t\tthis._webviewPanels.set(handle, panel);\n\t\treturn panel;\n\t}\n\n\tpublic registerWebviewPanelSerializer(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\tserializer: vscode.WebviewPanelSerializer\n\t): vscode.Disposable {\n\t\tif (this._serializers.has(viewType)) {\n\t\t\tthrow new Error(`Serializer for '${viewType}' already registered`);\n\t\t}\n\n\t\tthis._serializers.set(viewType, { serializer, extension });\n\t\tthis._proxy.$registerSerializer(viewType);\n\n\t\treturn new extHostTypes.Disposable(() => {\n\t\t\tthis._serializers.delete(viewType);\n\t\t\tthis._proxy.$unregisterSerializer(viewType);\n\t\t});\n\t}\n\n\tpublic registerCustomEditorProvider(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\tprovider: vscode.CustomReadonlyEditorProvider | vscode.CustomTextEditorProvider,\n\t\toptions: { webviewOptions?: vscode.WebviewPanelOptions, supportsMultipleEditorsPerDocument?: boolean },\n\t): vscode.Disposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif ('resolveCustomTextEditor' in provider) {\n\t\t\tdisposables.add(this._editorProviders.addTextProvider(viewType, extension, provider));\n\t\t\tthis._proxy.$registerTextEditorProvider(toExtensionData(extension), viewType, options.webviewOptions || {}, {\n\t\t\t\tsupportsMove: !!provider.moveCustomTextEditor,\n\t\t\t});\n\t\t} else {\n\t\t\tdisposables.add(this._editorProviders.addCustomProvider(viewType, extension, provider));\n\n\t\t\tif (this.supportEditing(provider)) {\n\t\t\t\tdisposables.add(provider.onDidChangeCustomDocument(e => {\n\t\t\t\t\tconst entry = this.getCustomDocumentEntry(viewType, e.document.uri);\n\t\t\t\t\tif (isEditEvent(e)) {\n\t\t\t\t\t\tconst editId = entry.addEdit(e);\n\t\t\t\t\t\tthis._proxy.$onDidEdit(e.document.uri, viewType, editId, e.label);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._proxy.$onContentChange(e.document.uri, viewType);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tthis._proxy.$registerCustomEditorProvider(toExtensionData(extension), viewType, options.webviewOptions || {}, !!options.supportsMultipleEditorsPerDocument);\n\t\t}\n\n\t\treturn extHostTypes.Disposable.from(\n\t\t\tdisposables,\n\t\t\tnew extHostTypes.Disposable(() => {\n\t\t\t\tthis._proxy.$unregisterEditorProvider(viewType);\n\t\t\t}));\n\t}\n\n\tpublic $onMessage(\n\t\thandle: extHostProtocol.WebviewPanelHandle,\n\t\tmessage: any\n\t): void {\n\t\tconst panel = this.getWebviewPanel(handle);\n\t\tif (panel) {\n\t\t\tpanel.webview._onMessageEmitter.fire(message);\n\t\t}\n\t}\n\n\tpublic $onMissingCsp(\n\t\t_handle: extHostProtocol.WebviewPanelHandle,\n\t\textensionId: string\n\t): void {\n\t\tthis._logService.warn(`${extensionId} created a webview without a content security policy: https://aka.ms/vscode-webview-missing-csp`);\n\t}\n\n\tpublic $onDidChangeWebviewPanelViewStates(newStates: extHostProtocol.WebviewPanelViewStateData): void {\n\t\tconst handles = Object.keys(newStates);\n\t\t// Notify webviews of state changes in the following order:\n\t\t// - Non-visible\n\t\t// - Visible\n\t\t// - Active\n\t\thandles.sort((a, b) => {\n\t\t\tconst stateA = newStates[a];\n\t\t\tconst stateB = newStates[b];\n\t\t\tif (stateA.active) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (stateB.active) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn (+stateA.visible) - (+stateB.visible);\n\t\t});\n\n\t\tfor (const handle of handles) {\n\t\t\tconst panel = this.getWebviewPanel(handle);\n\t\t\tif (!panel) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newState = newStates[handle];\n\t\t\tpanel._updateViewState({\n\t\t\t\tactive: newState.active,\n\t\t\t\tvisible: newState.visible,\n\t\t\t\tviewColumn: typeConverters.ViewColumn.to(newState.position),\n\t\t\t});\n\t\t}\n\t}\n\n\tasync $onDidDisposeWebviewPanel(handle: extHostProtocol.WebviewPanelHandle): Promise<void> {\n\t\tconst panel = this.getWebviewPanel(handle);\n\t\tif (panel) {\n\t\t\tpanel.dispose();\n\t\t\tthis._webviewPanels.delete(handle);\n\t\t}\n\t}\n\n\tasync $deserializeWebviewPanel(\n\t\twebviewHandle: extHostProtocol.WebviewPanelHandle,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tstate: any,\n\t\tposition: EditorViewColumn,\n\t\toptions: modes.IWebviewOptions & modes.IWebviewPanelOptions\n\t): Promise<void> {\n\t\tconst entry = this._serializers.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No serializer found for '${viewType}'`);\n\t\t}\n\t\tconst { serializer, extension } = entry;\n\n\t\tconst webview = new ExtHostWebview(webviewHandle, this._proxy, options, this.initData, this.workspace, extension, this._deprecationService);\n\t\tconst revivedPanel = new ExtHostWebviewEditor(webviewHandle, this._proxy, viewType, title, typeof position === 'number' && position >= 0 ? typeConverters.ViewColumn.to(position) : undefined, options, webview);\n\t\tthis._webviewPanels.set(webviewHandle, revivedPanel);\n\t\tawait serializer.deserializeWebviewPanel(revivedPanel, state);\n\t}\n\n\tasync $createCustomDocument(resource: UriComponents, viewType: string, backupId: string | undefined, cancellation: CancellationToken) {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No provider found for '${viewType}'`);\n\t\t}\n\n\t\tif (entry.type !== WebviewEditorType.Custom) {\n\t\t\tthrow new Error(`Invalid provide type for '${viewType}'`);\n\t\t}\n\n\t\tconst revivedResource = URI.revive(resource);\n\t\tconst document = await entry.provider.openCustomDocument(revivedResource, { backupId }, cancellation);\n\n\t\tconst storageRoot = this._extensionStoragePaths?.workspaceValue(entry.extension) ?? this._extensionStoragePaths?.globalValue(entry.extension);\n\t\tthis._documents.add(viewType, document, storageRoot!);\n\n\t\treturn { editable: this.supportEditing(entry.provider) };\n\t}\n\n\tasync $disposeCustomDocument(resource: UriComponents, viewType: string): Promise<void> {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No provider found for '${viewType}'`);\n\t\t}\n\n\t\tif (entry.type !== WebviewEditorType.Custom) {\n\t\t\tthrow new Error(`Invalid provider type for '${viewType}'`);\n\t\t}\n\n\t\tconst revivedResource = URI.revive(resource);\n\t\tconst { document } = this.getCustomDocumentEntry(viewType, revivedResource);\n\t\tthis._documents.delete(viewType, document);\n\t\tdocument.dispose();\n\t}\n\n\tasync $resolveWebviewEditor(\n\t\tresource: UriComponents,\n\t\thandle: extHostProtocol.WebviewPanelHandle,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tposition: EditorViewColumn,\n\t\toptions: modes.IWebviewOptions & modes.IWebviewPanelOptions,\n\t\tcancellation: CancellationToken,\n\t): Promise<void> {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No provider found for '${viewType}'`);\n\t\t}\n\n\t\tconst webview = new ExtHostWebview(handle, this._proxy, options, this.initData, this.workspace, entry.extension, this._deprecationService);\n\t\tconst revivedPanel = new ExtHostWebviewEditor(handle, this._proxy, viewType, title, typeof position === 'number' && position >= 0 ? typeConverters.ViewColumn.to(position) : undefined, options, webview);\n\t\tthis._webviewPanels.set(handle, revivedPanel);\n\n\t\tconst revivedResource = URI.revive(resource);\n\n\t\tswitch (entry.type) {\n\t\t\tcase WebviewEditorType.Custom:\n\t\t\t\t{\n\t\t\t\t\tconst { document } = this.getCustomDocumentEntry(viewType, revivedResource);\n\t\t\t\t\treturn entry.provider.resolveCustomEditor(document, revivedPanel, cancellation);\n\t\t\t\t}\n\t\t\tcase WebviewEditorType.Text:\n\t\t\t\t{\n\t\t\t\t\tconst document = this._extHostDocuments.getDocument(revivedResource);\n\t\t\t\t\treturn entry.provider.resolveCustomTextEditor(document, revivedPanel, cancellation);\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tthrow new Error('Unknown webview provider type');\n\t\t\t\t}\n\t\t}\n\t}\n\n\t$disposeEdits(resourceComponents: UriComponents, viewType: string, editIds: number[]): void {\n\t\tconst document = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tdocument.disposeEdits(editIds);\n\t}\n\n\tasync $onMoveCustomEditor(handle: string, newResourceComponents: UriComponents, viewType: string): Promise<void> {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No provider found for '${viewType}'`);\n\t\t}\n\n\t\tif (!(entry.provider as vscode.CustomTextEditorProvider).moveCustomTextEditor) {\n\t\t\tthrow new Error(`Provider does not implement move '${viewType}'`);\n\t\t}\n\n\t\tconst webview = this.getWebviewPanel(handle);\n\t\tif (!webview) {\n\t\t\tthrow new Error(`No webview found`);\n\t\t}\n\n\t\tconst resource = URI.revive(newResourceComponents);\n\t\tconst document = this._extHostDocuments.getDocument(resource);\n\t\tawait (entry.provider as vscode.CustomTextEditorProvider).moveCustomTextEditor!(document, webview, CancellationToken.None);\n\t}\n\n\tasync $undo(resourceComponents: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\treturn entry.undo(editId, isDirty);\n\t}\n\n\tasync $redo(resourceComponents: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\treturn entry.redo(editId, isDirty);\n\t}\n\n\tasync $revert(resourceComponents: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tconst provider = this.getCustomEditorProvider(viewType);\n\t\tawait provider.revertCustomDocument(entry.document, cancellation);\n\t\tentry.disposeBackup();\n\t}\n\n\tasync $onSave(resourceComponents: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tconst provider = this.getCustomEditorProvider(viewType);\n\t\tawait provider.saveCustomDocument(entry.document, cancellation);\n\t\tentry.disposeBackup();\n\t}\n\n\tasync $onSaveAs(resourceComponents: UriComponents, viewType: string, targetResource: UriComponents, cancellation: CancellationToken): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tconst provider = this.getCustomEditorProvider(viewType);\n\t\treturn provider.saveCustomDocumentAs(entry.document, URI.revive(targetResource), cancellation);\n\t}\n\n\tasync $backup(resourceComponents: UriComponents, viewType: string, cancellation: CancellationToken): Promise<string> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tconst provider = this.getCustomEditorProvider(viewType);\n\n\t\tconst backup = await provider.backupCustomDocument(entry.document, {\n\t\t\tdestination: entry.getNewBackupUri(),\n\t\t}, cancellation);\n\t\tentry.updateBackup(backup);\n\t\treturn backup.id;\n\t}\n\n\tprivate getWebviewPanel(handle: extHostProtocol.WebviewPanelHandle): ExtHostWebviewEditor | undefined {\n\t\treturn this._webviewPanels.get(handle);\n\t}\n\n\tprivate getCustomDocumentEntry(viewType: string, resource: UriComponents): CustomDocumentStoreEntry {\n\t\tconst entry = this._documents.get(viewType, URI.revive(resource));\n\t\tif (!entry) {\n\t\t\tthrow new Error('No custom document found');\n\t\t}\n\t\treturn entry;\n\t}\n\n\tprivate getCustomEditorProvider(viewType: string): vscode.CustomEditorProvider {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tconst provider = entry?.provider;\n\t\tif (!provider || !this.supportEditing(provider)) {\n\t\t\tthrow new Error('Custom document is not editable');\n\t\t}\n\t\treturn provider;\n\t}\n\n\tprivate supportEditing(\n\t\tprovider: vscode.CustomTextEditorProvider | vscode.CustomEditorProvider | vscode.CustomReadonlyEditorProvider\n\t): provider is vscode.CustomEditorProvider {\n\t\treturn !!(provider as vscode.CustomEditorProvider).onDidChangeCustomDocument;\n\t}\n}\n\nfunction toExtensionData(extension: IExtensionDescription): extHostProtocol.WebviewExtensionDescription {\n\treturn { id: extension.identifier, location: extension.extensionLocation };\n}\n\nfunction convertWebviewOptions(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n\toptions: vscode.WebviewPanelOptions & vscode.WebviewOptions,\n): modes.IWebviewOptions {\n\treturn {\n\t\t...options,\n\t\tlocalResourceRoots: options.localResourceRoots || getDefaultLocalResourceRoots(extension, workspace)\n\t};\n}\n\nfunction getDefaultLocalResourceRoots(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n): URI[] {\n\treturn [\n\t\t...(workspace?.getWorkspaceFolders() || []).map(x => x.uri),\n\t\textension.extensionLocation,\n\t];\n}\n\nfunction isEditEvent(e: vscode.CustomDocumentContentChangeEvent | vscode.CustomDocumentEditEvent): e is vscode.CustomDocumentEditEvent {\n\treturn typeof (e as vscode.CustomDocumentEditEvent).undo === 'function'\n\t\t&& typeof (e as vscode.CustomDocumentEditEvent).redo === 'function';\n}\n\nfunction hashPath(resource: URI): string {\n\tconst str = resource.scheme === Schemas.file || resource.scheme === Schemas.untitled ? resource.fsPath : resource.toString();\n\treturn hash(str) + '';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ExtHostWindowShape, MainContext, MainThreadWindowShape, IMainContext, IOpenUriOptions } from './extHost.protocol';\nimport { WindowState } from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\n\nexport class ExtHostWindow implements ExtHostWindowShape {\n\n\tprivate static InitialState: WindowState = {\n\t\tfocused: true\n\t};\n\n\tprivate _proxy: MainThreadWindowShape;\n\n\tprivate readonly _onDidChangeWindowState = new Emitter<WindowState>();\n\treadonly onDidChangeWindowState: Event<WindowState> = this._onDidChangeWindowState.event;\n\n\tprivate _state = ExtHostWindow.InitialState;\n\tget state(): WindowState { return this._state; }\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadWindow);\n\t\tthis._proxy.$getWindowVisibility().then(isFocused => this.$onDidChangeWindowFocus(isFocused));\n\t}\n\n\t$onDidChangeWindowFocus(focused: boolean): void {\n\t\tif (focused === this._state.focused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state = { ...this._state, focused };\n\t\tthis._onDidChangeWindowState.fire(this._state);\n\t}\n\n\topenUri(stringOrUri: string | URI, options: IOpenUriOptions): Promise<boolean> {\n\t\tlet uriAsString: string | undefined;\n\t\tif (typeof stringOrUri === 'string') {\n\t\t\turiAsString = stringOrUri;\n\t\t\ttry {\n\t\t\t\tstringOrUri = URI.parse(stringOrUri);\n\t\t\t} catch (e) {\n\t\t\t\treturn Promise.reject(`Invalid uri - '${stringOrUri}'`);\n\t\t\t}\n\t\t}\n\t\tif (isFalsyOrWhitespace(stringOrUri.scheme)) {\n\t\t\treturn Promise.reject('Invalid scheme - cannot be empty');\n\t\t} else if (stringOrUri.scheme === Schemas.command) {\n\t\t\treturn Promise.reject(`Invalid scheme '${stringOrUri.scheme}'`);\n\t\t}\n\t\treturn this._proxy.$openUri(stringOrUri, uriAsString, options);\n\t}\n\n\tasync asExternalUri(uri: URI, options: IOpenUriOptions): Promise<URI> {\n\t\tif (isFalsyOrWhitespace(uri.scheme)) {\n\t\t\treturn Promise.reject('Invalid scheme - cannot be empty');\n\t\t} else if (!new Set([Schemas.http, Schemas.https]).has(uri.scheme)) {\n\t\t\treturn Promise.reject(`Invalid scheme '${uri.scheme}'`);\n\t\t}\n\n\t\tconst result = await this._proxy.$asExternalUri(uri, options);\n\t\treturn URI.from(result);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironment, IStaticWorkspaceData, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IExtensionStoragePaths } from 'vs/workbench/api/common/extHostStoragePaths';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtHostRpcService } from '../common/extHostRpcService';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport class ExtensionStoragePaths implements IExtensionStoragePaths {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _workspace?: IStaticWorkspaceData;\n\tprivate readonly _environment: IEnvironment;\n\n\treadonly whenReady: Promise<string | undefined>;\n\tprivate _value?: string;\n\n\tconstructor(\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IExtHostRpcService private readonly _extHostRpc: IExtHostRpcService,\n\t) {\n\t\tthis._workspace = withNullAsUndefined(initData.workspace);\n\t\tthis._environment = initData.environment;\n\t\tthis.whenReady = this._getOrCreateWorkspaceStoragePath().then(value => this._value = value);\n\t}\n\n\tworkspaceValue(extension: IExtensionDescription): string | undefined {\n\t\tif (this._value) {\n\t\t\treturn path.join(this._value, extension.identifier.value);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tglobalValue(extension: IExtensionDescription): string {\n\t\treturn path.join(this._environment.globalStorageHome.fsPath, extension.identifier.value.toLowerCase());\n\t}\n\n\tprivate async _getOrCreateWorkspaceStoragePath(): Promise<string | undefined> {\n\t\tif (!this._workspace) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (!this._environment.appSettingsHome) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst storageName = this._workspace.id;\n\t\tconst storagePath = path.join(this._environment.appSettingsHome.fsPath, 'workspaceStorage', storageName);\n\n\t\t// NOTE@coder: Use the file system proxy so this will work in the browser.\n\t\tconst fileSystem = this._extHostRpc.getProxy(MainContext.MainThreadFileSystem);\n\t\ttry {\n\t\t\tawait fileSystem.$stat(URI.file(storagePath));\n\t\t\treturn storagePath;\n\t\t} catch (error) {\n\t\t\t// Doesn't exist.\n\t\t}\n\n\t\ttry {\n\t\t\t// NOTE@coder: $writeFile performs a mkdirp.\n\t\t\tawait fileSystem.$writeFile(\n\t\t\t\tURI.file(path.join(storagePath, 'meta.json')),\n\t\t\t\tVSBuffer.fromString(\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tid: this._workspace.id,\n\t\t\t\t\t\tconfiguration: this._workspace.configuration && URI.revive(this._workspace.configuration).toString(),\n\t\t\t\t\t\tname: this._workspace.name\n\t\t\t\t\t}, undefined, 2)\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn storagePath;\n\n\t\t} catch (e) {\n\t\t\tthis._logService.error(e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport { ExtHostLogServiceShape, MainThreadLogShape, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { UriComponents } from 'vs/base/common/uri';\n\nexport class ExtHostLogService extends AbstractLogService implements ILogService, ExtHostLogServiceShape {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _proxy: MainThreadLogShape;\n\tprivate readonly _logFile: UriComponents;\n\n\tconstructor(\n\t\t@IExtHostRpcService rpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t) {\n\t\tsuper();\n\t\tthis._proxy = rpc.getProxy(MainContext.MainThreadLog);\n\t\tthis._logFile = initData.logFile.toJSON();\n\t\tthis.setLevel(initData.logLevel);\n\t}\n\n\t$setLevel(level: LogLevel): void {\n\t\tthis.setLevel(level);\n\t}\n\n\ttrace(_message: string, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Trace, Array.from(arguments));\n\t\t}\n\t}\n\n\tdebug(_message: string, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Debug, Array.from(arguments));\n\t\t}\n\t}\n\n\tinfo(_message: string, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Info, Array.from(arguments));\n\t\t}\n\t}\n\n\twarn(_message: string, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Warning, Array.from(arguments));\n\t\t}\n\t}\n\n\terror(_message: string | Error, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Error, Array.from(arguments));\n\t\t}\n\t}\n\n\tcritical(_message: string | Error, ..._args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._proxy.$log(this._logFile, LogLevel.Critical, Array.from(arguments));\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IURITransformer, transformIncomingURIs } from 'vs/base/common/uriIpc';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { LazyPromise } from 'vs/workbench/services/extensions/common/lazyPromise';\nimport { IRPCProtocol, ProxyIdentifier, getStringIdentifierForProxy } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface JSONStringifyReplacer {\n\t(key: string, value: any): any;\n}\n\nfunction safeStringify(obj: any, replacer: JSONStringifyReplacer | null): string {\n\ttry {\n\t\treturn JSON.stringify(obj, <(key: string, value: any) => any>replacer);\n\t} catch (err) {\n\t\treturn 'null';\n\t}\n}\n\nfunction stringify(obj: any, replacer: JSONStringifyReplacer | null): string {\n\treturn JSON.stringify(obj, <(key: string, value: any) => any>replacer);\n}\n\nfunction createURIReplacer(transformer: IURITransformer | null): JSONStringifyReplacer | null {\n\tif (!transformer) {\n\t\treturn null;\n\t}\n\treturn (key: string, value: any): any => {\n\t\tif (value && value.$mid === 1) {\n\t\t\treturn transformer.transformOutgoing(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport const enum ResponsiveState {\n\tResponsive = 0,\n\tUnresponsive = 1\n}\n\nexport interface IRPCProtocolLogger {\n\tlogIncoming(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nconst noop = () => { };\n\nexport class RPCProtocol extends Disposable implements IRPCProtocol {\n\n\tprivate static readonly UNRESPONSIVE_TIME = 3 * 1000; // 3s\n\n\tprivate readonly _onDidChangeResponsiveState: Emitter<ResponsiveState> = this._register(new Emitter<ResponsiveState>());\n\tpublic readonly onDidChangeResponsiveState: Event<ResponsiveState> = this._onDidChangeResponsiveState.event;\n\n\tprivate readonly _protocol: IMessagePassingProtocol;\n\tprivate readonly _logger: IRPCProtocolLogger | null;\n\tprivate readonly _uriTransformer: IURITransformer | null;\n\tprivate readonly _uriReplacer: JSONStringifyReplacer | null;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _locals: any[];\n\tprivate readonly _proxies: any[];\n\tprivate _lastMessageId: number;\n\tprivate readonly _cancelInvokedHandlers: { [req: string]: () => void; };\n\tprivate readonly _pendingRPCReplies: { [msgId: string]: LazyPromise; };\n\tprivate _responsiveState: ResponsiveState;\n\tprivate _unacknowledgedCount: number;\n\tprivate _unresponsiveTime: number;\n\tprivate _asyncCheckUresponsive: RunOnceScheduler;\n\n\tconstructor(protocol: IMessagePassingProtocol, logger: IRPCProtocolLogger | null = null, transformer: IURITransformer | null = null) {\n\t\tsuper();\n\t\tthis._protocol = protocol;\n\t\tthis._logger = logger;\n\t\tthis._uriTransformer = transformer;\n\t\tthis._uriReplacer = createURIReplacer(this._uriTransformer);\n\t\tthis._isDisposed = false;\n\t\tthis._locals = [];\n\t\tthis._proxies = [];\n\t\tfor (let i = 0, len = ProxyIdentifier.count; i < len; i++) {\n\t\t\tthis._locals[i] = null;\n\t\t\tthis._proxies[i] = null;\n\t\t}\n\t\tthis._lastMessageId = 0;\n\t\tthis._cancelInvokedHandlers = Object.create(null);\n\t\tthis._pendingRPCReplies = {};\n\t\tthis._responsiveState = ResponsiveState.Responsive;\n\t\tthis._unacknowledgedCount = 0;\n\t\tthis._unresponsiveTime = 0;\n\t\tthis._asyncCheckUresponsive = this._register(new RunOnceScheduler(() => this._checkUnresponsive(), 1000));\n\t\tthis._protocol.onMessage((msg) => this._receiveOneMessage(msg));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\n\t\t// Release all outstanding promises with a canceled error\n\t\tObject.keys(this._pendingRPCReplies).forEach((msgId) => {\n\t\t\tconst pending = this._pendingRPCReplies[msgId];\n\t\t\tpending.resolveErr(errors.canceled());\n\t\t});\n\t}\n\n\tprivate _onWillSendRequest(req: number): void {\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// Since this is the first request we are sending in a while,\n\t\t\t// mark this moment as the start for the countdown to unresponsive time\n\t\t\tthis._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n\t\t}\n\t\tthis._unacknowledgedCount++;\n\t\tif (!this._asyncCheckUresponsive.isScheduled()) {\n\t\t\tthis._asyncCheckUresponsive.schedule();\n\t\t}\n\t}\n\n\tprivate _onDidReceiveAcknowledge(req: number): void {\n\t\t// The next possible unresponsive time is now + delta.\n\t\tthis._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n\t\tthis._unacknowledgedCount--;\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// No more need to check for unresponsive\n\t\t\tthis._asyncCheckUresponsive.cancel();\n\t\t}\n\t\t// The ext host is responsive!\n\t\tthis._setResponsiveState(ResponsiveState.Responsive);\n\t}\n\n\tprivate _checkUnresponsive(): void {\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// Not waiting for anything => cannot say if it is responsive or not\n\t\t\treturn;\n\t\t}\n\n\t\tif (Date.now() > this._unresponsiveTime) {\n\t\t\t// Unresponsive!!\n\t\t\tthis._setResponsiveState(ResponsiveState.Unresponsive);\n\t\t} else {\n\t\t\t// Not (yet) unresponsive, be sure to check again soon\n\t\t\tthis._asyncCheckUresponsive.schedule();\n\t\t}\n\t}\n\n\tprivate _setResponsiveState(newResponsiveState: ResponsiveState): void {\n\t\tif (this._responsiveState === newResponsiveState) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._responsiveState = newResponsiveState;\n\t\tthis._onDidChangeResponsiveState.fire(this._responsiveState);\n\t}\n\n\tpublic get responsiveState(): ResponsiveState {\n\t\treturn this._responsiveState;\n\t}\n\n\tpublic transformIncomingURIs<T>(obj: T): T {\n\t\tif (!this._uriTransformer) {\n\t\t\treturn obj;\n\t\t}\n\t\treturn transformIncomingURIs(obj, this._uriTransformer);\n\t}\n\n\tpublic getProxy<T>(identifier: ProxyIdentifier<T>): T {\n\t\tconst rpcId = identifier.nid;\n\t\tif (!this._proxies[rpcId]) {\n\t\t\tthis._proxies[rpcId] = this._createProxy(rpcId);\n\t\t}\n\t\treturn this._proxies[rpcId];\n\t}\n\n\tprivate _createProxy<T>(rpcId: number): T {\n\t\tlet handler = {\n\t\t\tget: (target: any, name: PropertyKey) => {\n\t\t\t\tif (typeof name === 'string' && !target[name] && name.charCodeAt(0) === CharCode.DollarSign) {\n\t\t\t\t\ttarget[name] = (...myArgs: any[]) => {\n\t\t\t\t\t\treturn this._remoteCall(rpcId, name, myArgs);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn target[name];\n\t\t\t}\n\t\t};\n\t\treturn new Proxy(Object.create(null), handler);\n\t}\n\n\tpublic set<T, R extends T>(identifier: ProxyIdentifier<T>, value: R): R {\n\t\tthis._locals[identifier.nid] = value;\n\t\treturn value;\n\t}\n\n\tpublic assertRegistered(identifiers: ProxyIdentifier<any>[]): void {\n\t\tfor (let i = 0, len = identifiers.length; i < len; i++) {\n\t\t\tconst identifier = identifiers[i];\n\t\t\tif (!this._locals[identifier.nid]) {\n\t\t\t\tthrow new Error(`Missing actor ${identifier.sid} (isMain: ${identifier.isMain})`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _receiveOneMessage(rawmsg: VSBuffer): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst msgLength = rawmsg.byteLength;\n\t\tconst buff = MessageBuffer.read(rawmsg, 0);\n\t\tconst messageType = <MessageType>buff.readUInt8();\n\t\tconst req = buff.readUInt32();\n\n\t\tswitch (messageType) {\n\t\t\tcase MessageType.RequestJSONArgs:\n\t\t\tcase MessageType.RequestJSONArgsWithCancellation: {\n\t\t\t\tlet { rpcId, method, args } = MessageIO.deserializeRequestJSONArgs(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\targs = transformIncomingURIs(args, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestJSONArgsWithCancellation));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.RequestMixedArgs:\n\t\t\tcase MessageType.RequestMixedArgsWithCancellation: {\n\t\t\t\tlet { rpcId, method, args } = MessageIO.deserializeRequestMixedArgs(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\targs = transformIncomingURIs(args, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestMixedArgsWithCancellation));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.Acknowledged: {\n\t\t\t\tif (this._logger) {\n\t\t\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `ack`);\n\t\t\t\t}\n\t\t\t\tthis._onDidReceiveAcknowledge(req);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.Cancel: {\n\t\t\t\tthis._receiveCancel(msgLength, req);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKEmpty: {\n\t\t\t\tthis._receiveReply(msgLength, req, undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKJSON: {\n\t\t\t\tlet value = MessageIO.deserializeReplyOKJSON(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\tvalue = transformIncomingURIs(value, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKVSBuffer: {\n\t\t\t\tlet value = MessageIO.deserializeReplyOKVSBuffer(buff);\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyErrError: {\n\t\t\t\tlet err = MessageIO.deserializeReplyErrError(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\terr = transformIncomingURIs(err, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveReplyErr(msgLength, req, err);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyErrEmpty: {\n\t\t\t\tthis._receiveReplyErr(msgLength, req, undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.error(`received unexpected message`);\n\t\t\t\tconsole.error(rawmsg);\n\t\t}\n\t}\n\n\tprivate _receiveRequest(msgLength: number, req: number, rpcId: number, method: string, args: any[], usesCancellationToken: boolean): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.OtherSide, `receiveRequest ${getStringIdentifierForProxy(rpcId)}.${method}(`, args);\n\t\t}\n\t\tconst callId = String(req);\n\n\t\tlet promise: Promise<any>;\n\t\tlet cancel: () => void;\n\t\tif (usesCancellationToken) {\n\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\targs.push(cancellationTokenSource.token);\n\t\t\tpromise = this._invokeHandler(rpcId, method, args);\n\t\t\tcancel = () => cancellationTokenSource.cancel();\n\t\t} else {\n\t\t\t// cannot be cancelled\n\t\t\tpromise = this._invokeHandler(rpcId, method, args);\n\t\t\tcancel = noop;\n\t\t}\n\n\t\tthis._cancelInvokedHandlers[callId] = cancel;\n\n\t\t// Acknowledge the request\n\t\tconst msg = MessageIO.serializeAcknowledged(req);\n\t\tif (this._logger) {\n\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `ack`);\n\t\t}\n\t\tthis._protocol.send(msg);\n\n\t\tpromise.then((r) => {\n\t\t\tdelete this._cancelInvokedHandlers[callId];\n\t\t\tconst msg = MessageIO.serializeReplyOK(req, r, this._uriReplacer);\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `reply:`, r);\n\t\t\t}\n\t\t\tthis._protocol.send(msg);\n\t\t}, (err) => {\n\t\t\tdelete this._cancelInvokedHandlers[callId];\n\t\t\tconst msg = MessageIO.serializeReplyErr(req, err);\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `replyErr:`, err);\n\t\t\t}\n\t\t\tthis._protocol.send(msg);\n\t\t});\n\t}\n\n\tprivate _receiveCancel(msgLength: number, req: number): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.OtherSide, `receiveCancel`);\n\t\t}\n\t\tconst callId = String(req);\n\t\tif (this._cancelInvokedHandlers[callId]) {\n\t\t\tthis._cancelInvokedHandlers[callId]();\n\t\t}\n\t}\n\n\tprivate _receiveReply(msgLength: number, req: number, value: any): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `receiveReply:`, value);\n\t\t}\n\t\tconst callId = String(req);\n\t\tif (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingReply = this._pendingRPCReplies[callId];\n\t\tdelete this._pendingRPCReplies[callId];\n\n\t\tpendingReply.resolveOk(value);\n\t}\n\n\tprivate _receiveReplyErr(msgLength: number, req: number, value: any): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `receiveReplyErr:`, value);\n\t\t}\n\n\t\tconst callId = String(req);\n\t\tif (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingReply = this._pendingRPCReplies[callId];\n\t\tdelete this._pendingRPCReplies[callId];\n\n\t\tlet err: any = undefined;\n\t\tif (value) {\n\t\t\tif (value.$isError) {\n\t\t\t\terr = new Error();\n\t\t\t\terr.name = value.name;\n\t\t\t\terr.message = value.message;\n\t\t\t\terr.stack = value.stack;\n\t\t\t} else {\n\t\t\t\terr = value;\n\t\t\t}\n\t\t}\n\t\tpendingReply.resolveErr(err);\n\t}\n\n\tprivate _invokeHandler(rpcId: number, methodName: string, args: any[]): Promise<any> {\n\t\ttry {\n\t\t\treturn Promise.resolve(this._doInvokeHandler(rpcId, methodName, args));\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tprivate _doInvokeHandler(rpcId: number, methodName: string, args: any[]): any {\n\t\tconst actor = this._locals[rpcId];\n\t\tif (!actor) {\n\t\t\tthrow new Error('Unknown actor ' + getStringIdentifierForProxy(rpcId));\n\t\t}\n\t\tlet method = actor[methodName];\n\t\tif (typeof method !== 'function') {\n\t\t\tthrow new Error('Unknown method ' + methodName + ' on actor ' + getStringIdentifierForProxy(rpcId));\n\t\t}\n\t\treturn method.apply(actor, args);\n\t}\n\n\tprivate _remoteCall(rpcId: number, methodName: string, args: any[]): Promise<any> {\n\t\tif (this._isDisposed) {\n\t\t\treturn Promise.reject<any>(errors.canceled());\n\t\t}\n\t\tlet cancellationToken: CancellationToken | null = null;\n\t\tif (args.length > 0 && CancellationToken.isCancellationToken(args[args.length - 1])) {\n\t\t\tcancellationToken = args.pop();\n\t\t}\n\n\t\tif (cancellationToken && cancellationToken.isCancellationRequested) {\n\t\t\t// No need to do anything...\n\t\t\treturn Promise.reject<any>(errors.canceled());\n\t\t}\n\n\t\tconst serializedRequestArguments = MessageIO.serializeRequestArguments(args, this._uriReplacer);\n\n\t\tconst req = ++this._lastMessageId;\n\t\tconst callId = String(req);\n\t\tconst result = new LazyPromise();\n\n\t\tif (cancellationToken) {\n\t\t\tcancellationToken.onCancellationRequested(() => {\n\t\t\t\tconst msg = MessageIO.serializeCancel(req);\n\t\t\t\tif (this._logger) {\n\t\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, `cancel`);\n\t\t\t\t}\n\t\t\t\tthis._protocol.send(MessageIO.serializeCancel(req));\n\t\t\t});\n\t\t}\n\n\t\tthis._pendingRPCReplies[callId] = result;\n\t\tthis._onWillSendRequest(req);\n\t\tconst msg = MessageIO.serializeRequest(req, rpcId, methodName, serializedRequestArguments, !!cancellationToken);\n\t\tif (this._logger) {\n\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, `request: ${getStringIdentifierForProxy(rpcId)}.${methodName}(`, args);\n\t\t}\n\t\tthis._protocol.send(msg);\n\t\treturn result;\n\t}\n}\n\nclass MessageBuffer {\n\n\tpublic static alloc(type: MessageType, req: number, messageSize: number): MessageBuffer {\n\t\tlet result = new MessageBuffer(VSBuffer.alloc(messageSize + 1 /* type */ + 4 /* req */), 0);\n\t\tresult.writeUInt8(type);\n\t\tresult.writeUInt32(req);\n\t\treturn result;\n\t}\n\n\tpublic static read(buff: VSBuffer, offset: number): MessageBuffer {\n\t\treturn new MessageBuffer(buff, offset);\n\t}\n\n\tprivate _buff: VSBuffer;\n\tprivate _offset: number;\n\n\tpublic get buffer(): VSBuffer {\n\t\treturn this._buff;\n\t}\n\n\tprivate constructor(buff: VSBuffer, offset: number) {\n\t\tthis._buff = buff;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic static sizeUInt8(): number {\n\t\treturn 1;\n\t}\n\n\tpublic writeUInt8(n: number): void {\n\t\tthis._buff.writeUInt8(n, this._offset); this._offset += 1;\n\t}\n\n\tpublic readUInt8(): number {\n\t\tconst n = this._buff.readUInt8(this._offset); this._offset += 1;\n\t\treturn n;\n\t}\n\n\tpublic writeUInt32(n: number): void {\n\t\tthis._buff.writeUInt32BE(n, this._offset); this._offset += 4;\n\t}\n\n\tpublic readUInt32(): number {\n\t\tconst n = this._buff.readUInt32BE(this._offset); this._offset += 4;\n\t\treturn n;\n\t}\n\n\tpublic static sizeShortString(str: VSBuffer): number {\n\t\treturn 1 /* string length */ + str.byteLength /* actual string */;\n\t}\n\n\tpublic writeShortString(str: VSBuffer): void {\n\t\tthis._buff.writeUInt8(str.byteLength, this._offset); this._offset += 1;\n\t\tthis._buff.set(str, this._offset); this._offset += str.byteLength;\n\t}\n\n\tpublic readShortString(): string {\n\t\tconst strByteLength = this._buff.readUInt8(this._offset); this._offset += 1;\n\t\tconst strBuff = this._buff.slice(this._offset, this._offset + strByteLength);\n\t\tconst str = strBuff.toString(); this._offset += strByteLength;\n\t\treturn str;\n\t}\n\n\tpublic static sizeLongString(str: VSBuffer): number {\n\t\treturn 4 /* string length */ + str.byteLength /* actual string */;\n\t}\n\n\tpublic writeLongString(str: VSBuffer): void {\n\t\tthis._buff.writeUInt32BE(str.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(str, this._offset); this._offset += str.byteLength;\n\t}\n\n\tpublic readLongString(): string {\n\t\tconst strByteLength = this._buff.readUInt32BE(this._offset); this._offset += 4;\n\t\tconst strBuff = this._buff.slice(this._offset, this._offset + strByteLength);\n\t\tconst str = strBuff.toString(); this._offset += strByteLength;\n\t\treturn str;\n\t}\n\n\tpublic writeBuffer(buff: VSBuffer): void {\n\t\tthis._buff.writeUInt32BE(buff.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(buff, this._offset); this._offset += buff.byteLength;\n\t}\n\n\tpublic static sizeVSBuffer(buff: VSBuffer): number {\n\t\treturn 4 /* buffer length */ + buff.byteLength /* actual buffer */;\n\t}\n\n\tpublic writeVSBuffer(buff: VSBuffer): void {\n\t\tthis._buff.writeUInt32BE(buff.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(buff, this._offset); this._offset += buff.byteLength;\n\t}\n\n\tpublic readVSBuffer(): VSBuffer {\n\t\tconst buffLength = this._buff.readUInt32BE(this._offset); this._offset += 4;\n\t\tconst buff = this._buff.slice(this._offset, this._offset + buffLength); this._offset += buffLength;\n\t\treturn buff;\n\t}\n\n\tpublic static sizeMixedArray(arr: VSBuffer[], arrType: ArgType[]): number {\n\t\tlet size = 0;\n\t\tsize += 1; // arr length\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tconst el = arr[i];\n\t\t\tconst elType = arrType[i];\n\t\t\tsize += 1; // arg type\n\t\t\tswitch (elType) {\n\t\t\t\tcase ArgType.String:\n\t\t\t\t\tsize += this.sizeLongString(el);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.VSBuffer:\n\t\t\t\t\tsize += this.sizeVSBuffer(el);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.Undefined:\n\t\t\t\t\t// empty...\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t}\n\n\tpublic writeMixedArray(arr: VSBuffer[], arrType: ArgType[]): void {\n\t\tthis._buff.writeUInt8(arr.length, this._offset); this._offset += 1;\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tconst el = arr[i];\n\t\t\tconst elType = arrType[i];\n\t\t\tswitch (elType) {\n\t\t\t\tcase ArgType.String:\n\t\t\t\t\tthis.writeUInt8(ArgType.String);\n\t\t\t\t\tthis.writeLongString(el);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.VSBuffer:\n\t\t\t\t\tthis.writeUInt8(ArgType.VSBuffer);\n\t\t\t\t\tthis.writeVSBuffer(el);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.Undefined:\n\t\t\t\t\tthis.writeUInt8(ArgType.Undefined);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readMixedArray(): Array<string | VSBuffer | undefined> {\n\t\tconst arrLen = this._buff.readUInt8(this._offset); this._offset += 1;\n\t\tlet arr: Array<string | VSBuffer | undefined> = new Array(arrLen);\n\t\tfor (let i = 0; i < arrLen; i++) {\n\t\t\tconst argType = <ArgType>this.readUInt8();\n\t\t\tswitch (argType) {\n\t\t\t\tcase ArgType.String:\n\t\t\t\t\tarr[i] = this.readLongString();\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.VSBuffer:\n\t\t\t\t\tarr[i] = this.readVSBuffer();\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.Undefined:\n\t\t\t\t\tarr[i] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n}\n\ntype SerializedRequestArguments = { type: 'mixed'; args: VSBuffer[]; argsType: ArgType[]; } | { type: 'simple'; args: string; };\n\nclass MessageIO {\n\n\tprivate static _arrayContainsBufferOrUndefined(arr: any[]): boolean {\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (arr[i] instanceof VSBuffer) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (typeof arr[i] === 'undefined') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static serializeRequestArguments(args: any[], replacer: JSONStringifyReplacer | null): SerializedRequestArguments {\n\t\tif (this._arrayContainsBufferOrUndefined(args)) {\n\t\t\tlet massagedArgs: VSBuffer[] = [];\n\t\t\tlet massagedArgsType: ArgType[] = [];\n\t\t\tfor (let i = 0, len = args.length; i < len; i++) {\n\t\t\t\tconst arg = args[i];\n\t\t\t\tif (arg instanceof VSBuffer) {\n\t\t\t\t\tmassagedArgs[i] = arg;\n\t\t\t\t\tmassagedArgsType[i] = ArgType.VSBuffer;\n\t\t\t\t} else if (typeof arg === 'undefined') {\n\t\t\t\t\tmassagedArgs[i] = VSBuffer.alloc(0);\n\t\t\t\t\tmassagedArgsType[i] = ArgType.Undefined;\n\t\t\t\t} else {\n\t\t\t\t\tmassagedArgs[i] = VSBuffer.fromString(stringify(arg, replacer));\n\t\t\t\t\tmassagedArgsType[i] = ArgType.String;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: 'mixed',\n\t\t\t\targs: massagedArgs,\n\t\t\t\targsType: massagedArgsType\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\ttype: 'simple',\n\t\t\targs: stringify(args, replacer)\n\t\t};\n\t}\n\n\tpublic static serializeRequest(req: number, rpcId: number, method: string, serializedArgs: SerializedRequestArguments, usesCancellationToken: boolean): VSBuffer {\n\t\tif (serializedArgs.type === 'mixed') {\n\t\t\treturn this._requestMixedArgs(req, rpcId, method, serializedArgs.args, serializedArgs.argsType, usesCancellationToken);\n\t\t}\n\t\treturn this._requestJSONArgs(req, rpcId, method, serializedArgs.args, usesCancellationToken);\n\t}\n\n\tprivate static _requestJSONArgs(req: number, rpcId: number, method: string, args: string, usesCancellationToken: boolean): VSBuffer {\n\t\tconst methodBuff = VSBuffer.fromString(method);\n\t\tconst argsBuff = VSBuffer.fromString(args);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt8();\n\t\tlen += MessageBuffer.sizeShortString(methodBuff);\n\t\tlen += MessageBuffer.sizeLongString(argsBuff);\n\n\t\tlet result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestJSONArgsWithCancellation : MessageType.RequestJSONArgs, req, len);\n\t\tresult.writeUInt8(rpcId);\n\t\tresult.writeShortString(methodBuff);\n\t\tresult.writeLongString(argsBuff);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeRequestJSONArgs(buff: MessageBuffer): { rpcId: number; method: string; args: any[]; } {\n\t\tconst rpcId = buff.readUInt8();\n\t\tconst method = buff.readShortString();\n\t\tconst args = buff.readLongString();\n\t\treturn {\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: JSON.parse(args)\n\t\t};\n\t}\n\n\tprivate static _requestMixedArgs(req: number, rpcId: number, method: string, args: VSBuffer[], argsType: ArgType[], usesCancellationToken: boolean): VSBuffer {\n\t\tconst methodBuff = VSBuffer.fromString(method);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt8();\n\t\tlen += MessageBuffer.sizeShortString(methodBuff);\n\t\tlen += MessageBuffer.sizeMixedArray(args, argsType);\n\n\t\tlet result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestMixedArgsWithCancellation : MessageType.RequestMixedArgs, req, len);\n\t\tresult.writeUInt8(rpcId);\n\t\tresult.writeShortString(methodBuff);\n\t\tresult.writeMixedArray(args, argsType);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeRequestMixedArgs(buff: MessageBuffer): { rpcId: number; method: string; args: any[]; } {\n\t\tconst rpcId = buff.readUInt8();\n\t\tconst method = buff.readShortString();\n\t\tconst rawargs = buff.readMixedArray();\n\t\tconst args: any[] = new Array(rawargs.length);\n\t\tfor (let i = 0, len = rawargs.length; i < len; i++) {\n\t\t\tconst rawarg = rawargs[i];\n\t\t\tif (typeof rawarg === 'string') {\n\t\t\t\targs[i] = JSON.parse(rawarg);\n\t\t\t} else {\n\t\t\t\targs[i] = rawarg;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: args\n\t\t};\n\t}\n\n\tpublic static serializeAcknowledged(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.Acknowledged, req, 0).buffer;\n\t}\n\n\tpublic static serializeCancel(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.Cancel, req, 0).buffer;\n\t}\n\n\tpublic static serializeReplyOK(req: number, res: any, replacer: JSONStringifyReplacer | null): VSBuffer {\n\t\tif (typeof res === 'undefined') {\n\t\t\treturn this._serializeReplyOKEmpty(req);\n\t\t}\n\t\tif (res instanceof VSBuffer) {\n\t\t\treturn this._serializeReplyOKVSBuffer(req, res);\n\t\t}\n\t\treturn this._serializeReplyOKJSON(req, safeStringify(res, replacer));\n\t}\n\n\tprivate static _serializeReplyOKEmpty(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.ReplyOKEmpty, req, 0).buffer;\n\t}\n\n\tprivate static _serializeReplyOKVSBuffer(req: number, res: VSBuffer): VSBuffer {\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeVSBuffer(res);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyOKVSBuffer, req, len);\n\t\tresult.writeVSBuffer(res);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyOKVSBuffer(buff: MessageBuffer): VSBuffer {\n\t\treturn buff.readVSBuffer();\n\t}\n\n\tprivate static _serializeReplyOKJSON(req: number, res: string): VSBuffer {\n\t\tconst resBuff = VSBuffer.fromString(res);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeLongString(resBuff);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyOKJSON, req, len);\n\t\tresult.writeLongString(resBuff);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyOKJSON(buff: MessageBuffer): any {\n\t\tconst res = buff.readLongString();\n\t\treturn JSON.parse(res);\n\t}\n\n\tpublic static serializeReplyErr(req: number, err: any): VSBuffer {\n\t\tif (err) {\n\t\t\treturn this._serializeReplyErrEror(req, err);\n\t\t}\n\t\treturn this._serializeReplyErrEmpty(req);\n\t}\n\n\tprivate static _serializeReplyErrEror(req: number, _err: Error): VSBuffer {\n\t\tconst errBuff = VSBuffer.fromString(safeStringify(errors.transformErrorForSerialization(_err), null));\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeLongString(errBuff);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyErrError, req, len);\n\t\tresult.writeLongString(errBuff);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyErrError(buff: MessageBuffer): Error {\n\t\tconst err = buff.readLongString();\n\t\treturn JSON.parse(err);\n\t}\n\n\tprivate static _serializeReplyErrEmpty(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.ReplyErrEmpty, req, 0).buffer;\n\t}\n}\n\nconst enum MessageType {\n\tRequestJSONArgs = 1,\n\tRequestJSONArgsWithCancellation = 2,\n\tRequestMixedArgs = 3,\n\tRequestMixedArgsWithCancellation = 4,\n\tAcknowledged = 5,\n\tCancel = 6,\n\tReplyOKEmpty = 7,\n\tReplyOKVSBuffer = 8,\n\tReplyOKJSON = 9,\n\tReplyErrError = 10,\n\tReplyErrEmpty = 11,\n}\n\nconst enum ArgType {\n\tString = 1,\n\tVSBuffer = 2,\n\tUndefined = 3\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mapArrayOrNot } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as glob from 'vs/base/common/glob';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport { fuzzyContains, getNLines } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IFilesConfiguration, FILES_EXCLUDE_CONFIG } from 'vs/platform/files/common/files';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { Event } from 'vs/base/common/event';\nimport { relative } from 'vs/base/common/path';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ResourceGlobMatcher } from 'vs/workbench/common/resources';\n\nexport const VIEWLET_ID = 'workbench.view.search';\nexport const PANEL_ID = 'workbench.panel.search';\nexport const VIEW_ID = 'workbench.view.search';\n\nexport const SEARCH_EXCLUDE_CONFIG = 'search.exclude';\n\nexport const ISearchService = createDecorator<ISearchService>('searchService');\n\n/**\n * A service that enables to search for files or with in files.\n */\nexport interface ISearchService {\n\t_serviceBrand: undefined;\n\ttextSearch(query: ITextQuery, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void): Promise<ISearchComplete>;\n\tfileSearch(query: IFileQuery, token?: CancellationToken): Promise<ISearchComplete>;\n\tclearCache(cacheKey: string): Promise<void>;\n\tregisterSearchResultProvider(scheme: string, type: SearchProviderType, provider: ISearchResultProvider): IDisposable;\n}\n\n/**\n * TODO@roblou - split text from file search entirely, or share code in a more natural way.\n */\nexport const enum SearchProviderType {\n\tfile,\n\ttext\n}\n\nexport interface ISearchResultProvider {\n\ttextSearch(query: ITextQuery, onProgress?: (p: ISearchProgressItem) => void, token?: CancellationToken): Promise<ISearchComplete>;\n\tfileSearch(query: IFileQuery, token?: CancellationToken): Promise<ISearchComplete>;\n\tclearCache(cacheKey: string): Promise<void>;\n}\n\nexport interface IFolderQuery<U extends UriComponents = URI> {\n\tfolder: U;\n\tfolderName?: string;\n\texcludePattern?: glob.IExpression;\n\tincludePattern?: glob.IExpression;\n\tfileEncoding?: string;\n\tdisregardIgnoreFiles?: boolean;\n\tdisregardGlobalIgnoreFiles?: boolean;\n\tignoreSymlinks?: boolean;\n}\n\nexport interface ICommonQueryProps<U extends UriComponents> {\n\t/** For telemetry - indicates what is triggering the source */\n\t_reason?: string;\n\n\tfolderQueries: IFolderQuery<U>[];\n\tincludePattern?: glob.IExpression;\n\texcludePattern?: glob.IExpression;\n\textraFileResources?: U[];\n\n\tmaxResults?: number;\n\tusingSearchPaths?: boolean;\n}\n\nexport interface IFileQueryProps<U extends UriComponents> extends ICommonQueryProps<U> {\n\ttype: QueryType.File;\n\tfilePattern?: string;\n\n\t/**\n\t * If true no results will be returned. Instead `limitHit` will indicate if at least one result exists or not.\n\t * Currently does not work with queries including a 'siblings clause'.\n\t */\n\texists?: boolean;\n\tsortByScore?: boolean;\n\tcacheKey?: string;\n}\n\nexport interface ITextQueryProps<U extends UriComponents> extends ICommonQueryProps<U> {\n\ttype: QueryType.Text;\n\tcontentPattern: IPatternInfo;\n\n\tpreviewOptions?: ITextSearchPreviewOptions;\n\tmaxFileSize?: number;\n\tusePCRE2?: boolean;\n\tafterContext?: number;\n\tbeforeContext?: number;\n\n\tuserDisabledExcludesAndIgnoreFiles?: boolean;\n}\n\nexport type IFileQuery = IFileQueryProps<URI>;\nexport type IRawFileQuery = IFileQueryProps<UriComponents>;\nexport type ITextQuery = ITextQueryProps<URI>;\nexport type IRawTextQuery = ITextQueryProps<UriComponents>;\n\nexport type IRawQuery = IRawTextQuery | IRawFileQuery;\nexport type ISearchQuery = ITextQuery | IFileQuery;\n\nexport const enum QueryType {\n\tFile = 1,\n\tText = 2\n}\n\n/* __GDPR__FRAGMENT__\n\t\"IPatternInfo\" : {\n\t\t\"pattern\" : { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isRegExp\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"isWordMatch\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"wordSeparators\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isMultiline\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"isCaseSensitive\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"isSmartCase\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t}\n*/\nexport interface IPatternInfo {\n\tpattern: string;\n\tisRegExp?: boolean;\n\tisWordMatch?: boolean;\n\twordSeparators?: string;\n\tisMultiline?: boolean;\n\tisUnicode?: boolean;\n\tisCaseSensitive?: boolean;\n}\n\nexport interface IExtendedExtensionSearchOptions {\n\tusePCRE2?: boolean;\n}\n\nexport interface IFileMatch<U extends UriComponents = URI> {\n\tresource: U;\n\tresults?: ITextSearchResult[];\n}\n\nexport type IRawFileMatch2 = IFileMatch<UriComponents>;\n\nexport interface ITextSearchPreviewOptions {\n\tmatchLines: number;\n\tcharsPerLine: number;\n}\n\nexport interface ISearchRange {\n\treadonly startLineNumber: number;\n\treadonly startColumn: number;\n\treadonly endLineNumber: number;\n\treadonly endColumn: number;\n}\n\nexport interface ITextSearchResultPreview {\n\ttext: string;\n\tmatches: ISearchRange | ISearchRange[];\n}\n\nexport interface ITextSearchMatch {\n\turi?: URI;\n\tranges: ISearchRange | ISearchRange[];\n\tpreview: ITextSearchResultPreview;\n}\n\nexport interface ITextSearchContext {\n\turi?: URI;\n\ttext: string;\n\tlineNumber: number;\n}\n\nexport type ITextSearchResult = ITextSearchMatch | ITextSearchContext;\n\nexport function resultIsMatch(result: ITextSearchResult): result is ITextSearchMatch {\n\treturn !!(<ITextSearchMatch>result).preview;\n}\n\nexport interface IProgressMessage {\n\tmessage?: string;\n}\n\nexport type ISearchProgressItem = IFileMatch | IProgressMessage;\n\nexport function isFileMatch(p: ISearchProgressItem): p is IFileMatch {\n\treturn !!(<IFileMatch>p).resource;\n}\n\nexport function isProgressMessage(p: ISearchProgressItem): p is IProgressMessage {\n\treturn !isFileMatch(p);\n}\n\nexport interface ISearchCompleteStats {\n\tlimitHit?: boolean;\n\tstats?: IFileSearchStats | ITextSearchStats;\n}\n\nexport interface ISearchComplete extends ISearchCompleteStats {\n\tresults: IFileMatch[];\n\texit?: SearchCompletionExitCode\n}\n\nexport const enum SearchCompletionExitCode {\n\tNormal,\n\tNewSearchStarted\n}\n\nexport interface ITextSearchStats {\n\ttype: 'textSearchProvider' | 'searchProcess';\n}\n\nexport interface IFileSearchStats {\n\tfromCache: boolean;\n\tdetailStats: ISearchEngineStats | ICachedSearchStats | IFileSearchProviderStats;\n\n\tresultCount: number;\n\ttype: 'fileSearchProvider' | 'searchProcess';\n\tsortingTime?: number;\n}\n\nexport interface ICachedSearchStats {\n\tcacheWasResolved: boolean;\n\tcacheLookupTime: number;\n\tcacheFilterTime: number;\n\tcacheEntryCount: number;\n}\n\nexport interface ISearchEngineStats {\n\tfileWalkTime: number;\n\tdirectoriesWalked: number;\n\tfilesWalked: number;\n\tcmdTime: number;\n\tcmdResultCount?: number;\n}\n\nexport interface IFileSearchProviderStats {\n\tproviderTime: number;\n\tpostProcessTime: number;\n}\n\nexport class FileMatch implements IFileMatch {\n\tresults: ITextSearchResult[] = [];\n\tconstructor(public resource: URI) {\n\t\t// empty\n\t}\n}\n\nexport class TextSearchMatch implements ITextSearchMatch {\n\tranges: ISearchRange | ISearchRange[];\n\tpreview: ITextSearchResultPreview;\n\n\tconstructor(text: string, range: ISearchRange | ISearchRange[], previewOptions?: ITextSearchPreviewOptions) {\n\t\tthis.ranges = range;\n\n\t\t// Trim preview if this is one match and a single-line match with a preview requested.\n\t\t// Otherwise send the full text, like for replace or for showing multiple previews.\n\t\t// TODO this is fishy.\n\t\tif (previewOptions && previewOptions.matchLines === 1 && (!Array.isArray(range) || range.length === 1) && isSingleLineRange(range)) {\n\t\t\tconst oneRange = Array.isArray(range) ? range[0] : range;\n\n\t\t\t// 1 line preview requested\n\t\t\ttext = getNLines(text, previewOptions.matchLines);\n\t\t\tconst leadingChars = Math.floor(previewOptions.charsPerLine / 5);\n\t\t\tconst previewStart = Math.max(oneRange.startColumn - leadingChars, 0);\n\t\t\tconst previewText = text.substring(previewStart, previewOptions.charsPerLine + previewStart);\n\n\t\t\tconst endColInPreview = (oneRange.endLineNumber - oneRange.startLineNumber + 1) <= previewOptions.matchLines ?\n\t\t\t\tMath.min(previewText.length, oneRange.endColumn - previewStart) :  // if number of match lines will not be trimmed by previewOptions\n\t\t\t\tpreviewText.length; // if number of lines is trimmed\n\n\t\t\tconst oneLineRange = new OneLineRange(0, oneRange.startColumn - previewStart, endColInPreview);\n\t\t\tthis.preview = {\n\t\t\t\ttext: previewText,\n\t\t\t\tmatches: Array.isArray(range) ? [oneLineRange] : oneLineRange\n\t\t\t};\n\t\t} else {\n\t\t\tconst firstMatchLine = Array.isArray(range) ? range[0].startLineNumber : range.startLineNumber;\n\n\t\t\tthis.preview = {\n\t\t\t\ttext,\n\t\t\t\tmatches: mapArrayOrNot(range, r => new SearchRange(r.startLineNumber - firstMatchLine, r.startColumn, r.endLineNumber - firstMatchLine, r.endColumn))\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction isSingleLineRange(range: ISearchRange | ISearchRange[]): boolean {\n\treturn Array.isArray(range) ?\n\t\trange[0].startLineNumber === range[0].endLineNumber :\n\t\trange.startLineNumber === range.endLineNumber;\n}\n\nexport class SearchRange implements ISearchRange {\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.startColumn = startColumn;\n\t\tthis.endLineNumber = endLineNumber;\n\t\tthis.endColumn = endColumn;\n\t}\n}\n\nexport class OneLineRange extends SearchRange {\n\tconstructor(lineNumber: number, startColumn: number, endColumn: number) {\n\t\tsuper(lineNumber, startColumn, lineNumber, endColumn);\n\t}\n}\n\nexport const enum SearchSortOrder {\n\tDefault = 'default',\n\tFileNames = 'fileNames',\n\tType = 'type',\n\tModified = 'modified',\n\tCountDescending = 'countDescending',\n\tCountAscending = 'countAscending'\n}\n\nexport interface ISearchConfigurationProperties {\n\texclude: glob.IExpression;\n\tuseRipgrep: boolean;\n\t/**\n\t * Use ignore file for file search.\n\t */\n\tuseIgnoreFiles: boolean;\n\tuseGlobalIgnoreFiles: boolean;\n\tfollowSymlinks: boolean;\n\tsmartCase: boolean;\n\tglobalFindClipboard: boolean;\n\tlocation: 'sidebar' | 'panel';\n\tuseReplacePreview: boolean;\n\tshowLineNumbers: boolean;\n\tusePCRE2: boolean;\n\tactionsPosition: 'auto' | 'right';\n\tmaintainFileSearchCache: boolean;\n\tcollapseResults: 'auto' | 'alwaysCollapse' | 'alwaysExpand';\n\tsearchOnType: boolean;\n\tseedOnFocus: boolean;\n\tseedWithNearestWord: boolean;\n\tsearchOnTypeDebouncePeriod: number;\n\tsearchEditor: {\n\t\tdoubleClickBehaviour: 'selectWord' | 'goToLocation' | 'openLocationToSide',\n\t\texperimental: { reusePriorSearchConfiguration: boolean }\n\t};\n\tsortOrder: SearchSortOrder;\n}\n\nexport interface ISearchConfiguration extends IFilesConfiguration {\n\tsearch: ISearchConfigurationProperties;\n\teditor: {\n\t\twordSeparators: string;\n\t};\n}\n\nexport function getExcludes(configuration: ISearchConfiguration, includeSearchExcludes = true): glob.IExpression | undefined {\n\tconst fileExcludes = configuration && configuration.files && configuration.files.exclude;\n\tconst searchExcludes = includeSearchExcludes && configuration && configuration.search && configuration.search.exclude;\n\n\tif (!fileExcludes && !searchExcludes) {\n\t\treturn undefined;\n\t}\n\n\tif (!fileExcludes || !searchExcludes) {\n\t\treturn fileExcludes || searchExcludes;\n\t}\n\n\tlet allExcludes: glob.IExpression = Object.create(null);\n\t// clone the config as it could be frozen\n\tallExcludes = objects.mixin(allExcludes, objects.deepClone(fileExcludes));\n\tallExcludes = objects.mixin(allExcludes, objects.deepClone(searchExcludes), true);\n\n\treturn allExcludes;\n}\n\nexport function createResourceExcludeMatcher(instantiationService: IInstantiationService, configurationService: IConfigurationService): ResourceGlobMatcher {\n\treturn instantiationService.createInstance(\n\t\tResourceGlobMatcher,\n\t\troot => getExcludes(root ? configurationService.getValue<ISearchConfiguration>({ resource: root }) : configurationService.getValue<ISearchConfiguration>()) || Object.create(null),\n\t\tevent => event.affectsConfiguration(FILES_EXCLUDE_CONFIG) || event.affectsConfiguration(SEARCH_EXCLUDE_CONFIG)\n\t);\n}\n\nexport function pathIncludedInQuery(queryProps: ICommonQueryProps<URI>, fsPath: string): boolean {\n\tif (queryProps.excludePattern && glob.match(queryProps.excludePattern, fsPath)) {\n\t\treturn false;\n\t}\n\n\tif (queryProps.includePattern && !glob.match(queryProps.includePattern, fsPath)) {\n\t\treturn false;\n\t}\n\n\t// If searchPaths are being used, the extra file must be in a subfolder and match the pattern, if present\n\tif (queryProps.usingSearchPaths) {\n\t\treturn !!queryProps.folderQueries && queryProps.folderQueries.every(fq => {\n\t\t\tconst searchPath = fq.folder.fsPath;\n\t\t\tif (extpath.isEqualOrParent(fsPath, searchPath)) {\n\t\t\t\tconst relPath = relative(searchPath, fsPath);\n\t\t\t\treturn !fq.includePattern || !!glob.match(fq.includePattern, relPath);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn true;\n}\n\nexport enum SearchErrorCode {\n\tunknownEncoding = 1,\n\tregexParseError,\n\tglobParseError,\n\tinvalidLiteral,\n\trgProcessError,\n\tother\n}\n\nexport class SearchError extends Error {\n\tconstructor(message: string, readonly code?: SearchErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function deserializeSearchError(errorMsg: string): SearchError {\n\ttry {\n\t\tconst details = JSON.parse(errorMsg);\n\t\treturn new SearchError(details.message, details.code);\n\t} catch (e) {\n\t\treturn new SearchError(errorMsg, SearchErrorCode.other);\n\t}\n}\n\nexport function serializeSearchError(searchError: SearchError): Error {\n\tconst details = { message: searchError.message, code: searchError.code };\n\treturn new Error(JSON.stringify(details));\n}\nexport interface ITelemetryEvent {\n\teventName: string;\n\tdata: ITelemetryData;\n}\n\nexport interface IRawSearchService {\n\tfileSearch(search: IRawFileQuery): Event<ISerializedSearchProgressItem | ISerializedSearchComplete>;\n\ttextSearch(search: IRawTextQuery): Event<ISerializedSearchProgressItem | ISerializedSearchComplete>;\n\tclearCache(cacheKey: string): Promise<void>;\n}\n\nexport interface IRawFileMatch {\n\tbase?: string;\n\t/**\n\t * The path of the file relative to the containing `base` folder.\n\t * This path is exactly as it appears on the filesystem.\n\t */\n\trelativePath: string;\n\t/**\n\t * This path is transformed for search purposes. For example, this could be\n\t * the `relativePath` with the workspace folder name prepended. This way the\n\t * search algorithm would also match against the name of the containing folder.\n\t *\n\t * If not given, the search algorithm should use `relativePath`.\n\t */\n\tsearchPath?: string;\n}\n\nexport interface ISearchEngine<T> {\n\tsearch: (onResult: (matches: T) => void, onProgress: (progress: IProgressMessage) => void, done: (error: Error | null, complete: ISearchEngineSuccess) => void) => void;\n\tcancel: () => void;\n}\n\nexport interface ISerializedSearchSuccess {\n\ttype: 'success';\n\tlimitHit: boolean;\n\tstats?: IFileSearchStats | ITextSearchStats;\n}\n\nexport interface ISearchEngineSuccess {\n\tlimitHit: boolean;\n\tstats: ISearchEngineStats;\n}\n\nexport interface ISerializedSearchError {\n\ttype: 'error';\n\terror: {\n\t\tmessage: string,\n\t\tstack: string\n\t};\n}\n\nexport type ISerializedSearchComplete = ISerializedSearchSuccess | ISerializedSearchError;\n\nexport function isSerializedSearchComplete(arg: ISerializedSearchProgressItem | ISerializedSearchComplete): arg is ISerializedSearchComplete {\n\tif ((arg as any).type === 'error') {\n\t\treturn true;\n\t} else if ((arg as any).type === 'success') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport function isSerializedSearchSuccess(arg: ISerializedSearchComplete): arg is ISerializedSearchSuccess {\n\treturn arg.type === 'success';\n}\n\nexport function isSerializedFileMatch(arg: ISerializedSearchProgressItem): arg is ISerializedFileMatch {\n\treturn !!(<ISerializedFileMatch>arg).path;\n}\n\nexport function isFilePatternMatch(candidate: IRawFileMatch, normalizedFilePatternLowercase: string): boolean {\n\tconst pathToMatch = candidate.searchPath ? candidate.searchPath : candidate.relativePath;\n\treturn fuzzyContains(pathToMatch, normalizedFilePatternLowercase);\n}\n\nexport interface ISerializedFileMatch {\n\tpath: string;\n\tresults?: ITextSearchResult[];\n\tnumMatches?: number;\n}\n\n// Type of the possible values for progress calls from the engine\nexport type ISerializedSearchProgressItem = ISerializedFileMatch | ISerializedFileMatch[] | IProgressMessage;\nexport type IFileSearchProgressItem = IRawFileMatch | IRawFileMatch[] | IProgressMessage;\n\n\nexport class SerializableFileMatch implements ISerializedFileMatch {\n\tpath: string;\n\tresults: ITextSearchMatch[];\n\n\tconstructor(path: string) {\n\t\tthis.path = path;\n\t\tthis.results = [];\n\t}\n\n\taddMatch(match: ITextSearchMatch): void {\n\t\tthis.results.push(match);\n\t}\n\n\tserialize(): ISerializedFileMatch {\n\t\treturn {\n\t\t\tpath: this.path,\n\t\t\tresults: this.results,\n\t\t\tnumMatches: this.results.length\n\t\t};\n\t}\n}\n\n/**\n *  Computes the patterns that the provider handles. Discards sibling clauses and 'false' patterns\n */\nexport function resolvePatternsForProvider(globalPattern: glob.IExpression | undefined, folderPattern: glob.IExpression | undefined): string[] {\n\tconst merged = {\n\t\t...(globalPattern || {}),\n\t\t...(folderPattern || {})\n\t};\n\n\treturn Object.keys(merged)\n\t\t.filter(key => {\n\t\t\tconst value = merged[key];\n\t\t\treturn typeof value === 'boolean' && value;\n\t\t});\n}\n\nexport class QueryGlobTester {\n\n\tprivate _excludeExpression: glob.IExpression;\n\tprivate _parsedExcludeExpression: glob.ParsedExpression;\n\n\tprivate _parsedIncludeExpression: glob.ParsedExpression | null = null;\n\n\tconstructor(config: ISearchQuery, folderQuery: IFolderQuery) {\n\t\tthis._excludeExpression = {\n\t\t\t...(config.excludePattern || {}),\n\t\t\t...(folderQuery.excludePattern || {})\n\t\t};\n\t\tthis._parsedExcludeExpression = glob.parse(this._excludeExpression);\n\n\t\t// Empty includeExpression means include nothing, so no {} shortcuts\n\t\tlet includeExpression: glob.IExpression | undefined = config.includePattern;\n\t\tif (folderQuery.includePattern) {\n\t\t\tif (includeExpression) {\n\t\t\t\tincludeExpression = {\n\t\t\t\t\t...includeExpression,\n\t\t\t\t\t...folderQuery.includePattern\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tincludeExpression = folderQuery.includePattern;\n\t\t\t}\n\t\t}\n\n\t\tif (includeExpression) {\n\t\t\tthis._parsedIncludeExpression = glob.parse(includeExpression);\n\t\t}\n\t}\n\n\t/**\n\t * Guaranteed sync - siblingsFn should not return a promise.\n\t */\n\tincludedInQuerySync(testPath: string, basename?: string, hasSibling?: (name: string) => boolean): boolean {\n\t\tif (this._parsedExcludeExpression && this._parsedExcludeExpression(testPath, basename, hasSibling)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._parsedIncludeExpression && !this._parsedIncludeExpression(testPath, basename, hasSibling)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Guaranteed async.\n\t */\n\tincludedInQuery(testPath: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): Promise<boolean> {\n\t\tconst excludeP = Promise.resolve(this._parsedExcludeExpression(testPath, basename, hasSibling)).then(result => !!result);\n\n\t\treturn excludeP.then(excluded => {\n\t\t\tif (excluded) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this._parsedIncludeExpression ?\n\t\t\t\tPromise.resolve(this._parsedIncludeExpression(testPath, basename, hasSibling)).then(result => !!result) :\n\t\t\t\tPromise.resolve(true);\n\t\t}).then(included => {\n\t\t\treturn included;\n\t\t});\n\t}\n\n\thasSiblingExcludeClauses(): boolean {\n\t\treturn hasSiblingClauses(this._excludeExpression);\n\t}\n}\n\nfunction hasSiblingClauses(pattern: glob.IExpression): boolean {\n\tfor (const key in pattern) {\n\t\tif (typeof pattern[key] !== 'boolean') {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { delta as arrayDelta, mapArrayOrNot } from 'vs/base/common/arrays';\nimport { Barrier } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { Counter } from 'vs/base/common/numbers';\nimport { basename, basenameOrAuthority, dirname, isEqual, relativePath } from 'vs/base/common/resources';\nimport { compare } from 'vs/base/common/strings';\nimport { withUndefinedAsNull } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Severity } from 'vs/platform/notification/common/notification';\nimport { Workspace, WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { Range, RelativePattern } from 'vs/workbench/api/common/extHostTypes';\nimport { ITextQueryBuilderOptions } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { IRawFileMatch2, resultIsMatch } from 'vs/workbench/services/search/common/search';\nimport * as vscode from 'vscode';\nimport { ExtHostWorkspaceShape, IWorkspaceData, MainContext, MainThreadMessageServiceShape, MainThreadWorkspaceShape } from './extHost.protocol';\n\nexport interface IExtHostWorkspaceProvider {\n\tgetWorkspaceFolder2(uri: vscode.Uri, resolveParent?: boolean): Promise<vscode.WorkspaceFolder | undefined>;\n\tresolveWorkspaceFolder(uri: vscode.Uri): Promise<vscode.WorkspaceFolder | undefined>;\n\tgetWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined>;\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nfunction isFolderEqual(folderA: URI, folderB: URI): boolean {\n\treturn isEqual(folderA, folderB);\n}\n\nfunction compareWorkspaceFolderByUri(a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder): number {\n\treturn isFolderEqual(a.uri, b.uri) ? 0 : compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction compareWorkspaceFolderByUriAndNameAndIndex(a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder): number {\n\tif (a.index !== b.index) {\n\t\treturn a.index < b.index ? -1 : 1;\n\t}\n\n\treturn isFolderEqual(a.uri, b.uri) ? compare(a.name, b.name) : compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction delta(oldFolders: vscode.WorkspaceFolder[], newFolders: vscode.WorkspaceFolder[], compare: (a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder) => number): { removed: vscode.WorkspaceFolder[], added: vscode.WorkspaceFolder[] } {\n\tconst oldSortedFolders = oldFolders.slice(0).sort(compare);\n\tconst newSortedFolders = newFolders.slice(0).sort(compare);\n\n\treturn arrayDelta(oldSortedFolders, newSortedFolders, compare);\n}\n\ninterface MutableWorkspaceFolder extends vscode.WorkspaceFolder {\n\tname: string;\n\tindex: number;\n}\n\nclass ExtHostWorkspaceImpl extends Workspace {\n\n\tstatic toExtHostWorkspace(data: IWorkspaceData | null, previousConfirmedWorkspace?: ExtHostWorkspaceImpl, previousUnconfirmedWorkspace?: ExtHostWorkspaceImpl): { workspace: ExtHostWorkspaceImpl | null, added: vscode.WorkspaceFolder[], removed: vscode.WorkspaceFolder[] } {\n\t\tif (!data) {\n\t\t\treturn { workspace: null, added: [], removed: [] };\n\t\t}\n\n\t\tconst { id, name, folders, configuration, isUntitled } = data;\n\t\tconst newWorkspaceFolders: vscode.WorkspaceFolder[] = [];\n\n\t\t// If we have an existing workspace, we try to find the folders that match our\n\t\t// data and update their properties. It could be that an extension stored them\n\t\t// for later use and we want to keep them \"live\" if they are still present.\n\t\tconst oldWorkspace = previousConfirmedWorkspace;\n\t\tif (previousConfirmedWorkspace) {\n\t\t\tfolders.forEach((folderData, index) => {\n\t\t\t\tconst folderUri = URI.revive(folderData.uri);\n\t\t\t\tconst existingFolder = ExtHostWorkspaceImpl._findFolder(previousUnconfirmedWorkspace || previousConfirmedWorkspace, folderUri);\n\n\t\t\t\tif (existingFolder) {\n\t\t\t\t\texistingFolder.name = folderData.name;\n\t\t\t\t\texistingFolder.index = folderData.index;\n\n\t\t\t\t\tnewWorkspaceFolders.push(existingFolder);\n\t\t\t\t} else {\n\t\t\t\t\tnewWorkspaceFolders.push({ uri: folderUri, name: folderData.name, index });\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewWorkspaceFolders.push(...folders.map(({ uri, name, index }) => ({ uri: URI.revive(uri), name, index })));\n\t\t}\n\n\t\t// make sure to restore sort order based on index\n\t\tnewWorkspaceFolders.sort((f1, f2) => f1.index < f2.index ? -1 : 1);\n\n\t\tconst workspace = new ExtHostWorkspaceImpl(id, name, newWorkspaceFolders, configuration ? URI.revive(configuration) : null, !!isUntitled);\n\t\tconst { added, removed } = delta(oldWorkspace ? oldWorkspace.workspaceFolders : [], workspace.workspaceFolders, compareWorkspaceFolderByUri);\n\n\t\treturn { workspace, added, removed };\n\t}\n\n\tprivate static _findFolder(workspace: ExtHostWorkspaceImpl, folderUriToFind: URI): MutableWorkspaceFolder | undefined {\n\t\tfor (let i = 0; i < workspace.folders.length; i++) {\n\t\t\tconst folder = workspace.workspaceFolders[i];\n\t\t\tif (isFolderEqual(folder.uri, folderUriToFind)) {\n\t\t\t\treturn folder;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate readonly _workspaceFolders: vscode.WorkspaceFolder[] = [];\n\tprivate readonly _structure = TernarySearchTree.forUris<vscode.WorkspaceFolder>();\n\n\tconstructor(id: string, private _name: string, folders: vscode.WorkspaceFolder[], configuration: URI | null, private _isUntitled: boolean) {\n\t\tsuper(id, folders.map(f => new WorkspaceFolder(f)), configuration);\n\n\t\t// setup the workspace folder data structure\n\t\tfolders.forEach(folder => {\n\t\t\tthis._workspaceFolders.push(folder);\n\t\t\tthis._structure.set(folder.uri, folder);\n\t\t});\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tget isUntitled(): boolean {\n\t\treturn this._isUntitled;\n\t}\n\n\tget workspaceFolders(): vscode.WorkspaceFolder[] {\n\t\treturn this._workspaceFolders.slice(0);\n\t}\n\n\tgetWorkspaceFolder(uri: URI, resolveParent?: boolean): vscode.WorkspaceFolder | undefined {\n\t\tif (resolveParent && this._structure.get(uri)) {\n\t\t\t// `uri` is a workspace folder so we check for its parent\n\t\t\turi = dirname(uri);\n\t\t}\n\t\treturn this._structure.findSubstr(uri);\n\t}\n\n\tresolveWorkspaceFolder(uri: URI): vscode.WorkspaceFolder | undefined {\n\t\treturn this._structure.get(uri);\n\t}\n}\n\nexport class ExtHostWorkspace implements ExtHostWorkspaceShape, IExtHostWorkspaceProvider {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeWorkspace = new Emitter<vscode.WorkspaceFoldersChangeEvent>();\n\treadonly onDidChangeWorkspace: Event<vscode.WorkspaceFoldersChangeEvent> = this._onDidChangeWorkspace.event;\n\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _requestIdProvider: Counter;\n\tprivate readonly _barrier: Barrier;\n\n\tprivate _confirmedWorkspace?: ExtHostWorkspaceImpl;\n\tprivate _unconfirmedWorkspace?: ExtHostWorkspaceImpl;\n\n\tprivate readonly _proxy: MainThreadWorkspaceShape;\n\tprivate readonly _messageService: MainThreadMessageServiceShape;\n\n\tprivate readonly _activeSearchCallbacks: ((match: IRawFileMatch2) => any)[] = [];\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tthis._logService = logService;\n\t\tthis._requestIdProvider = new Counter();\n\t\tthis._barrier = new Barrier();\n\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadWorkspace);\n\t\tthis._messageService = extHostRpc.getProxy(MainContext.MainThreadMessageService);\n\t\tconst data = initData.workspace;\n\t\tthis._confirmedWorkspace = data ? new ExtHostWorkspaceImpl(data.id, data.name, [], data.configuration ? URI.revive(data.configuration) : null, !!data.isUntitled) : undefined;\n\t}\n\n\t$initializeWorkspace(data: IWorkspaceData | null): void {\n\t\tthis.$acceptWorkspaceData(data);\n\t\tthis._barrier.open();\n\t}\n\n\twaitForInitializeCall(): Promise<boolean> {\n\t\treturn this._barrier.wait();\n\t}\n\n\t// --- workspace ---\n\n\tget workspace(): Workspace | undefined {\n\t\treturn this._actualWorkspace;\n\t}\n\n\tget name(): string | undefined {\n\t\treturn this._actualWorkspace ? this._actualWorkspace.name : undefined;\n\t}\n\n\tget workspaceFile(): vscode.Uri | undefined {\n\t\tif (this._actualWorkspace) {\n\t\t\tif (this._actualWorkspace.configuration) {\n\t\t\t\tif (this._actualWorkspace.isUntitled) {\n\t\t\t\t\treturn URI.from({ scheme: Schemas.untitled, path: basename(dirname(this._actualWorkspace.configuration)) }); // Untitled Worspace: return untitled URI\n\t\t\t\t}\n\n\t\t\t\treturn this._actualWorkspace.configuration; // Workspace: return the configuration location\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate get _actualWorkspace(): ExtHostWorkspaceImpl | undefined {\n\t\treturn this._unconfirmedWorkspace || this._confirmedWorkspace;\n\t}\n\n\tgetWorkspaceFolders(): vscode.WorkspaceFolder[] | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tasync getWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tupdateWorkspaceFolders(extension: IExtensionDescription, index: number, deleteCount: number, ...workspaceFoldersToAdd: { uri: vscode.Uri, name?: string }[]): boolean {\n\t\tconst validatedDistinctWorkspaceFoldersToAdd: { uri: vscode.Uri, name?: string }[] = [];\n\t\tif (Array.isArray(workspaceFoldersToAdd)) {\n\t\t\tworkspaceFoldersToAdd.forEach(folderToAdd => {\n\t\t\t\tif (URI.isUri(folderToAdd.uri) && !validatedDistinctWorkspaceFoldersToAdd.some(f => isFolderEqual(f.uri, folderToAdd.uri))) {\n\t\t\t\t\tvalidatedDistinctWorkspaceFoldersToAdd.push({ uri: folderToAdd.uri, name: folderToAdd.name || basenameOrAuthority(folderToAdd.uri) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (!!this._unconfirmedWorkspace) {\n\t\t\treturn false; // prevent accumulated calls without a confirmed workspace\n\t\t}\n\n\t\tif ([index, deleteCount].some(i => typeof i !== 'number' || i < 0)) {\n\t\t\treturn false; // validate numbers\n\t\t}\n\n\t\tif (deleteCount === 0 && validatedDistinctWorkspaceFoldersToAdd.length === 0) {\n\t\t\treturn false; // nothing to delete or add\n\t\t}\n\n\t\tconst currentWorkspaceFolders: MutableWorkspaceFolder[] = this._actualWorkspace ? this._actualWorkspace.workspaceFolders : [];\n\t\tif (index + deleteCount > currentWorkspaceFolders.length) {\n\t\t\treturn false; // cannot delete more than we have\n\t\t}\n\n\t\t// Simulate the updateWorkspaceFolders method on our data to do more validation\n\t\tconst newWorkspaceFolders = currentWorkspaceFolders.slice(0);\n\t\tnewWorkspaceFolders.splice(index, deleteCount, ...validatedDistinctWorkspaceFoldersToAdd.map(f => ({ uri: f.uri, name: f.name || basenameOrAuthority(f.uri), index: undefined! /* fixed later */ })));\n\n\t\tfor (let i = 0; i < newWorkspaceFolders.length; i++) {\n\t\t\tconst folder = newWorkspaceFolders[i];\n\t\t\tif (newWorkspaceFolders.some((otherFolder, index) => index !== i && isFolderEqual(folder.uri, otherFolder.uri))) {\n\t\t\t\treturn false; // cannot add the same folder multiple times\n\t\t\t}\n\t\t}\n\n\t\tnewWorkspaceFolders.forEach((f, index) => f.index = index); // fix index\n\t\tconst { added, removed } = delta(currentWorkspaceFolders, newWorkspaceFolders, compareWorkspaceFolderByUriAndNameAndIndex);\n\t\tif (added.length === 0 && removed.length === 0) {\n\t\t\treturn false; // nothing actually changed\n\t\t}\n\n\t\t// Trigger on main side\n\t\tif (this._proxy) {\n\t\t\tconst extName = extension.displayName || extension.name;\n\t\t\tthis._proxy.$updateWorkspaceFolders(extName, index, deleteCount, validatedDistinctWorkspaceFoldersToAdd).then(undefined, error => {\n\n\t\t\t\t// in case of an error, make sure to clear out the unconfirmed workspace\n\t\t\t\t// because we cannot expect the acknowledgement from the main side for this\n\t\t\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t\t\t// show error to user\n\t\t\t\tthis._messageService.$showMessage(Severity.Error, localize('updateerror', \"Extension '{0}' failed to update workspace folders: {1}\", extName, error.toString()), { extension }, []);\n\t\t\t});\n\t\t}\n\n\t\t// Try to accept directly\n\t\tthis.trySetWorkspaceFolders(newWorkspaceFolders);\n\n\t\treturn true;\n\t}\n\n\tgetWorkspaceFolder(uri: vscode.Uri, resolveParent?: boolean): vscode.WorkspaceFolder | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync getWorkspaceFolder2(uri: vscode.Uri, resolveParent?: boolean): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync resolveWorkspaceFolder(uri: vscode.Uri): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.resolveWorkspaceFolder(uri);\n\t}\n\n\tgetPath(): string | undefined {\n\n\t\t// this is legacy from the days before having\n\t\t// multi-root and we keep it only alive if there\n\t\t// is just one workspace folder.\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst { folders } = this._actualWorkspace;\n\t\tif (folders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// #54483 @Joh Why are we still using fsPath?\n\t\treturn folders[0].uri.fsPath;\n\t}\n\n\tgetRelativePath(pathOrUri: string | vscode.Uri, includeWorkspace?: boolean): string {\n\n\t\tlet resource: URI | undefined;\n\t\tlet path: string = '';\n\t\tif (typeof pathOrUri === 'string') {\n\t\t\tresource = URI.file(pathOrUri);\n\t\t\tpath = pathOrUri;\n\t\t} else if (typeof pathOrUri !== 'undefined') {\n\t\t\tresource = pathOrUri;\n\t\t\tpath = pathOrUri.fsPath;\n\t\t}\n\n\t\tif (!resource) {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst folder = this.getWorkspaceFolder(\n\t\t\tresource,\n\t\t\ttrue\n\t\t);\n\n\t\tif (!folder) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (typeof includeWorkspace === 'undefined' && this._actualWorkspace) {\n\t\t\tincludeWorkspace = this._actualWorkspace.folders.length > 1;\n\t\t}\n\n\t\tlet result = relativePath(folder.uri, resource);\n\t\tif (includeWorkspace && folder.name) {\n\t\t\tresult = `${folder.name}/${result}`;\n\t\t}\n\t\treturn result!;\n\t}\n\n\tprivate trySetWorkspaceFolders(folders: vscode.WorkspaceFolder[]): void {\n\n\t\t// Update directly here. The workspace is unconfirmed as long as we did not get an\n\t\t// acknowledgement from the main side (via $acceptWorkspaceData)\n\t\tif (this._actualWorkspace) {\n\t\t\tthis._unconfirmedWorkspace = ExtHostWorkspaceImpl.toExtHostWorkspace({\n\t\t\t\tid: this._actualWorkspace.id,\n\t\t\t\tname: this._actualWorkspace.name,\n\t\t\t\tconfiguration: this._actualWorkspace.configuration,\n\t\t\t\tfolders,\n\t\t\t\tisUntitled: this._actualWorkspace.isUntitled\n\t\t\t} as IWorkspaceData, this._actualWorkspace).workspace || undefined;\n\t\t}\n\t}\n\n\t$acceptWorkspaceData(data: IWorkspaceData | null): void {\n\n\t\tconst { workspace, added, removed } = ExtHostWorkspaceImpl.toExtHostWorkspace(data, this._confirmedWorkspace, this._unconfirmedWorkspace);\n\n\t\t// Update our workspace object. We have a confirmed workspace, so we drop our\n\t\t// unconfirmed workspace.\n\t\tthis._confirmedWorkspace = workspace || undefined;\n\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t// Events\n\t\tthis._onDidChangeWorkspace.fire(Object.freeze({\n\t\t\tadded,\n\t\t\tremoved,\n\t\t}));\n\t}\n\n\t// --- search ---\n\n\t/**\n\t * Note, null/undefined have different and important meanings for \"exclude\"\n\t */\n\tfindFiles(include: string | RelativePattern | undefined, exclude: vscode.GlobPattern | null | undefined, maxResults: number | undefined, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(`extHostWorkspace#findFiles: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles`);\n\n\t\tlet excludePatternOrDisregardExcludes: string | false | undefined = undefined;\n\t\tif (exclude === null) {\n\t\t\texcludePatternOrDisregardExcludes = false;\n\t\t} else if (exclude) {\n\t\t\tif (typeof exclude === 'string') {\n\t\t\t\texcludePatternOrDisregardExcludes = exclude;\n\t\t\t} else {\n\t\t\t\texcludePatternOrDisregardExcludes = exclude.pattern;\n\t\t\t}\n\t\t}\n\n\t\tif (token && token.isCancellationRequested) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst { includePattern, folder } = parseSearchInclude(include);\n\t\treturn this._proxy.$startFileSearch(\n\t\t\twithUndefinedAsNull(includePattern),\n\t\t\twithUndefinedAsNull(folder),\n\t\t\twithUndefinedAsNull(excludePatternOrDisregardExcludes),\n\t\t\twithUndefinedAsNull(maxResults),\n\t\t\ttoken\n\t\t)\n\t\t\t.then(data => Array.isArray(data) ? data.map(d => URI.revive(d)) : []);\n\t}\n\n\tasync findTextInFiles(query: vscode.TextSearchQuery, options: vscode.FindTextInFilesOptions, callback: (result: vscode.TextSearchResult) => void, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.TextSearchComplete> {\n\t\tthis._logService.trace(`extHostWorkspace#findTextInFiles: textSearch, extension: ${extensionId.value}, entryPoint: findTextInFiles`);\n\n\t\tconst requestId = this._requestIdProvider.getNext();\n\n\t\tconst previewOptions: vscode.TextSearchPreviewOptions = typeof options.previewOptions === 'undefined' ?\n\t\t\t{\n\t\t\t\tmatchLines: 100,\n\t\t\t\tcharsPerLine: 10000\n\t\t\t} :\n\t\t\toptions.previewOptions;\n\n\t\tlet includePattern: string | undefined;\n\t\tlet folder: URI | undefined;\n\t\tif (options.include) {\n\t\t\tif (typeof options.include === 'string') {\n\t\t\t\tincludePattern = options.include;\n\t\t\t} else {\n\t\t\t\tincludePattern = options.include.pattern;\n\t\t\t\tfolder = (options.include as RelativePattern).baseFolder || URI.file(options.include.base);\n\t\t\t}\n\t\t}\n\n\t\tconst excludePattern = (typeof options.exclude === 'string') ? options.exclude :\n\t\t\toptions.exclude ? options.exclude.pattern : undefined;\n\t\tconst queryOptions: ITextQueryBuilderOptions = {\n\t\t\tignoreSymlinks: typeof options.followSymlinks === 'boolean' ? !options.followSymlinks : undefined,\n\t\t\tdisregardIgnoreFiles: typeof options.useIgnoreFiles === 'boolean' ? !options.useIgnoreFiles : undefined,\n\t\t\tdisregardGlobalIgnoreFiles: typeof options.useGlobalIgnoreFiles === 'boolean' ? !options.useGlobalIgnoreFiles : undefined,\n\t\t\tdisregardExcludeSettings: typeof options.useDefaultExcludes === 'boolean' ? !options.useDefaultExcludes : true,\n\t\t\tfileEncoding: options.encoding,\n\t\t\tmaxResults: options.maxResults,\n\t\t\tpreviewOptions,\n\t\t\tafterContext: options.afterContext,\n\t\t\tbeforeContext: options.beforeContext,\n\n\t\t\tincludePattern: includePattern,\n\t\t\texcludePattern: excludePattern\n\t\t};\n\n\t\tconst isCanceled = false;\n\n\t\tthis._activeSearchCallbacks[requestId] = p => {\n\t\t\tif (isCanceled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst uri = URI.revive(p.resource);\n\t\t\tp.results!.forEach(result => {\n\t\t\t\tif (resultIsMatch(result)) {\n\t\t\t\t\tcallback(<vscode.TextSearchMatch>{\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tpreview: {\n\t\t\t\t\t\t\ttext: result.preview.text,\n\t\t\t\t\t\t\tmatches: mapArrayOrNot(\n\t\t\t\t\t\t\t\tresult.preview.matches,\n\t\t\t\t\t\t\t\tm => new Range(m.startLineNumber, m.startColumn, m.endLineNumber, m.endColumn))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tranges: mapArrayOrNot(\n\t\t\t\t\t\t\tresult.ranges,\n\t\t\t\t\t\t\tr => new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn))\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcallback(<vscode.TextSearchContext>{\n\t\t\t\t\t\turi,\n\t\t\t\t\t\ttext: result.text,\n\t\t\t\t\t\tlineNumber: result.lineNumber\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await this._proxy.$startTextSearch(\n\t\t\t\tquery,\n\t\t\t\twithUndefinedAsNull(folder),\n\t\t\t\tqueryOptions,\n\t\t\t\trequestId,\n\t\t\t\ttoken);\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\treturn result || {};\n\t\t} catch (err) {\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t$handleTextSearchResult(result: IRawFileMatch2, requestId: number): void {\n\t\tif (this._activeSearchCallbacks[requestId]) {\n\t\t\tthis._activeSearchCallbacks[requestId](result);\n\t\t}\n\t}\n\n\tsaveAll(includeUntitled?: boolean): Promise<boolean> {\n\t\treturn this._proxy.$saveAll(includeUntitled);\n\t}\n\n\tresolveProxy(url: string): Promise<string | undefined> {\n\t\treturn this._proxy.$resolveProxy(url);\n\t}\n}\n\nexport const IExtHostWorkspace = createDecorator<IExtHostWorkspace>('IExtHostWorkspace');\nexport interface IExtHostWorkspace extends ExtHostWorkspace, ExtHostWorkspaceShape, IExtHostWorkspaceProvider { }\n\nfunction parseSearchInclude(include: RelativePattern | string | undefined): { includePattern?: string, folder?: URI } {\n\tlet includePattern: string | undefined;\n\tlet includeFolder: URI | undefined;\n\tif (include) {\n\t\tif (typeof include === 'string') {\n\t\t\tincludePattern = include;\n\t\t} else {\n\t\t\tincludePattern = include.pattern;\n\n\t\t\t// include.base must be an absolute path\n\t\t\tincludeFolder = include.baseFolder || URI.file(include.base);\n\t\t}\n\t}\n\n\treturn {\n\t\tincludePattern: includePattern,\n\t\tfolder: includeFolder\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mixin, deepClone } from 'vs/base/common/objects';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport type * as vscode from 'vscode';\nimport { ExtHostWorkspace, IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { ExtHostConfigurationShape, MainThreadConfigurationShape, IConfigurationInitData, MainContext } from './extHost.protocol';\nimport { ConfigurationTarget as ExtHostConfigurationTarget } from './extHostTypes';\nimport { ConfigurationTarget, IConfigurationChange, IConfigurationData, IConfigurationOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Configuration, ConfigurationChangeEvent } from 'vs/platform/configuration/common/configurationModels';\nimport { ConfigurationScope, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { isObject } from 'vs/base/common/types';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Barrier } from 'vs/base/common/async';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { URI } from 'vs/base/common/uri';\n\nfunction lookUp(tree: any, key: string) {\n\tif (key) {\n\t\tconst parts = key.split('.');\n\t\tlet node = tree;\n\t\tfor (let i = 0; node && i < parts.length; i++) {\n\t\t\tnode = node[parts[i]];\n\t\t}\n\t\treturn node;\n\t}\n}\n\ntype ConfigurationInspect<T> = {\n\tkey: string;\n\n\tdefaultValue?: T;\n\tglobalValue?: T;\n\tworkspaceValue?: T,\n\tworkspaceFolderValue?: T,\n\n\tdefaultLanguageValue?: T;\n\tglobalLanguageValue?: T;\n\tworkspaceLanguageValue?: T;\n\tworkspaceFolderLanguageValue?: T;\n\n\tlanguageIds?: string[];\n};\n\nfunction isUri(thing: any): thing is vscode.Uri {\n\treturn thing instanceof URI;\n}\n\nfunction isResourceLanguage(thing: any): thing is { uri: URI, languageId: string } {\n\treturn thing\n\t\t&& thing.uri instanceof URI\n\t\t&& (thing.languageId && typeof thing.languageId === 'string');\n}\n\nfunction isLanguage(thing: any): thing is { languageId: string } {\n\treturn thing\n\t\t&& !thing.uri\n\t\t&& (thing.languageId && typeof thing.languageId === 'string');\n}\n\nfunction isWorkspaceFolder(thing: any): thing is vscode.WorkspaceFolder {\n\treturn thing\n\t\t&& thing.uri instanceof URI\n\t\t&& (!thing.name || typeof thing.name === 'string')\n\t\t&& (!thing.index || typeof thing.index === 'number');\n}\n\nfunction scopeToOverrides(scope: vscode.ConfigurationScope | undefined | null): IConfigurationOverrides | undefined {\n\tif (isUri(scope)) {\n\t\treturn { resource: scope };\n\t}\n\tif (isResourceLanguage(scope)) {\n\t\treturn { resource: scope.uri, overrideIdentifier: scope.languageId };\n\t}\n\tif (isLanguage(scope)) {\n\t\treturn { overrideIdentifier: scope.languageId };\n\t}\n\tif (isWorkspaceFolder(scope)) {\n\t\treturn { resource: scope.uri };\n\t}\n\tif (scope === null) {\n\t\treturn { resource: null };\n\t}\n\treturn undefined;\n}\n\nexport class ExtHostConfiguration implements ExtHostConfigurationShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _proxy: MainThreadConfigurationShape;\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _extHostWorkspace: ExtHostWorkspace;\n\tprivate readonly _barrier: Barrier;\n\tprivate _actual: ExtHostConfigProvider | null;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostWorkspace extHostWorkspace: IExtHostWorkspace,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadConfiguration);\n\t\tthis._extHostWorkspace = extHostWorkspace;\n\t\tthis._logService = logService;\n\t\tthis._barrier = new Barrier();\n\t\tthis._actual = null;\n\t}\n\n\tpublic getConfigProvider(): Promise<ExtHostConfigProvider> {\n\t\treturn this._barrier.wait().then(_ => this._actual!);\n\t}\n\n\t$initializeConfiguration(data: IConfigurationInitData): void {\n\t\tthis._actual = new ExtHostConfigProvider(this._proxy, this._extHostWorkspace, data, this._logService);\n\t\tthis._barrier.open();\n\t}\n\n\t$acceptConfigurationChanged(data: IConfigurationInitData, change: IConfigurationChange): void {\n\t\tthis.getConfigProvider().then(provider => provider.$acceptConfigurationChanged(data, change));\n\t}\n}\n\nexport class ExtHostConfigProvider {\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<vscode.ConfigurationChangeEvent>();\n\tprivate readonly _proxy: MainThreadConfigurationShape;\n\tprivate readonly _extHostWorkspace: ExtHostWorkspace;\n\tprivate _configurationScopes: Map<string, ConfigurationScope | undefined>;\n\tprivate _configuration: Configuration;\n\tprivate _logService: ILogService;\n\n\tconstructor(proxy: MainThreadConfigurationShape, extHostWorkspace: ExtHostWorkspace, data: IConfigurationInitData, logService: ILogService) {\n\t\tthis._proxy = proxy;\n\t\tthis._logService = logService;\n\t\tthis._extHostWorkspace = extHostWorkspace;\n\t\tthis._configuration = Configuration.parse(data);\n\t\tthis._configurationScopes = this._toMap(data.configurationScopes);\n\t}\n\n\tget onDidChangeConfiguration(): Event<vscode.ConfigurationChangeEvent> {\n\t\treturn this._onDidChangeConfiguration && this._onDidChangeConfiguration.event;\n\t}\n\n\t$acceptConfigurationChanged(data: IConfigurationInitData, change: IConfigurationChange) {\n\t\tconst previous = { data: this._configuration.toData(), workspace: this._extHostWorkspace.workspace };\n\t\tthis._configuration = Configuration.parse(data);\n\t\tthis._configurationScopes = this._toMap(data.configurationScopes);\n\t\tthis._onDidChangeConfiguration.fire(this._toConfigurationChangeEvent(change, previous));\n\t}\n\n\tgetConfiguration(section?: string, scope?: vscode.ConfigurationScope | null, extensionDescription?: IExtensionDescription): vscode.WorkspaceConfiguration {\n\t\tconst overrides = scopeToOverrides(scope) || {};\n\t\tconst config = this._toReadonlyValue(section\n\t\t\t? lookUp(this._configuration.getValue(undefined, overrides, this._extHostWorkspace.workspace), section)\n\t\t\t: this._configuration.getValue(undefined, overrides, this._extHostWorkspace.workspace));\n\n\t\tif (section) {\n\t\t\tthis._validateConfigurationAccess(section, overrides, extensionDescription?.identifier);\n\t\t}\n\n\t\tfunction parseConfigurationTarget(arg: boolean | ExtHostConfigurationTarget): ConfigurationTarget | null {\n\t\t\tif (arg === undefined || arg === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (typeof arg === 'boolean') {\n\t\t\t\treturn arg ? ConfigurationTarget.USER : ConfigurationTarget.WORKSPACE;\n\t\t\t}\n\n\t\t\tswitch (arg) {\n\t\t\t\tcase ExtHostConfigurationTarget.Global: return ConfigurationTarget.USER;\n\t\t\t\tcase ExtHostConfigurationTarget.Workspace: return ConfigurationTarget.WORKSPACE;\n\t\t\t\tcase ExtHostConfigurationTarget.WorkspaceFolder: return ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t\t}\n\t\t}\n\n\t\tconst result: vscode.WorkspaceConfiguration = {\n\t\t\thas(key: string): boolean {\n\t\t\t\treturn typeof lookUp(config, key) !== 'undefined';\n\t\t\t},\n\t\t\tget: <T>(key: string, defaultValue?: T) => {\n\t\t\t\tthis._validateConfigurationAccess(section ? `${section}.${key}` : key, overrides, extensionDescription?.identifier);\n\t\t\t\tlet result = lookUp(config, key);\n\t\t\t\tif (typeof result === 'undefined') {\n\t\t\t\t\tresult = defaultValue;\n\t\t\t\t} else {\n\t\t\t\t\tlet clonedConfig: any | undefined = undefined;\n\t\t\t\t\tconst cloneOnWriteProxy = (target: any, accessor: string): any => {\n\t\t\t\t\t\tlet clonedTarget: any | undefined = undefined;\n\t\t\t\t\t\tconst cloneTarget = () => {\n\t\t\t\t\t\t\tclonedConfig = clonedConfig ? clonedConfig : deepClone(config);\n\t\t\t\t\t\t\tclonedTarget = clonedTarget ? clonedTarget : lookUp(clonedConfig, accessor);\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn isObject(target) ?\n\t\t\t\t\t\t\tnew Proxy(target, {\n\t\t\t\t\t\t\t\tget: (target: any, property: PropertyKey) => {\n\t\t\t\t\t\t\t\t\tif (typeof property === 'string' && property.toLowerCase() === 'tojson') {\n\t\t\t\t\t\t\t\t\t\tcloneTarget();\n\t\t\t\t\t\t\t\t\t\treturn () => clonedTarget;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (clonedConfig) {\n\t\t\t\t\t\t\t\t\t\tclonedTarget = clonedTarget ? clonedTarget : lookUp(clonedConfig, accessor);\n\t\t\t\t\t\t\t\t\t\treturn clonedTarget[property];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst result = target[property];\n\t\t\t\t\t\t\t\t\tif (typeof property === 'string') {\n\t\t\t\t\t\t\t\t\t\treturn cloneOnWriteProxy(result, `${accessor}.${property}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tset: (_target: any, property: PropertyKey, value: any) => {\n\t\t\t\t\t\t\t\t\tcloneTarget();\n\t\t\t\t\t\t\t\t\tif (clonedTarget) {\n\t\t\t\t\t\t\t\t\t\tclonedTarget[property] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdeleteProperty: (_target: any, property: PropertyKey) => {\n\t\t\t\t\t\t\t\t\tcloneTarget();\n\t\t\t\t\t\t\t\t\tif (clonedTarget) {\n\t\t\t\t\t\t\t\t\t\tdelete clonedTarget[property];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefineProperty: (_target: any, property: PropertyKey, descriptor: any) => {\n\t\t\t\t\t\t\t\t\tcloneTarget();\n\t\t\t\t\t\t\t\t\tif (clonedTarget) {\n\t\t\t\t\t\t\t\t\t\tObject.defineProperty(clonedTarget, property, descriptor);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}) : target;\n\t\t\t\t\t};\n\t\t\t\t\tresult = cloneOnWriteProxy(result, key);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tupdate: (key: string, value: any, extHostConfigurationTarget: ExtHostConfigurationTarget | boolean, scopeToLanguage?: boolean) => {\n\t\t\t\tkey = section ? `${section}.${key}` : key;\n\t\t\t\tconst target = parseConfigurationTarget(extHostConfigurationTarget);\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\treturn this._proxy.$updateConfigurationOption(target, key, value, overrides, scopeToLanguage);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._proxy.$removeConfigurationOption(target, key, overrides, scopeToLanguage);\n\t\t\t\t}\n\t\t\t},\n\t\t\tinspect: <T>(key: string): ConfigurationInspect<T> | undefined => {\n\t\t\t\tkey = section ? `${section}.${key}` : key;\n\t\t\t\tconst config = deepClone(this._configuration.inspect<T>(key, overrides, this._extHostWorkspace.workspace));\n\t\t\t\tif (config) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey,\n\n\t\t\t\t\t\tdefaultValue: config.default?.value,\n\t\t\t\t\t\tglobalValue: config.user?.value,\n\t\t\t\t\t\tworkspaceValue: config.workspace?.value,\n\t\t\t\t\t\tworkspaceFolderValue: config.workspaceFolder?.value,\n\n\t\t\t\t\t\tdefaultLanguageValue: config.default?.override,\n\t\t\t\t\t\tglobalLanguageValue: config.user?.override,\n\t\t\t\t\t\tworkspaceLanguageValue: config.workspace?.override,\n\t\t\t\t\t\tworkspaceFolderLanguageValue: config.workspaceFolder?.override,\n\n\t\t\t\t\t\tlanguageIds: config.overrideIdentifiers\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t};\n\n\t\tif (typeof config === 'object') {\n\t\t\tmixin(result, config, false);\n\t\t}\n\n\t\treturn <vscode.WorkspaceConfiguration>Object.freeze(result);\n\t}\n\n\tprivate _toReadonlyValue(result: any): any {\n\t\tconst readonlyProxy = (target: any): any => {\n\t\t\treturn isObject(target) ?\n\t\t\t\tnew Proxy(target, {\n\t\t\t\t\tget: (target: any, property: PropertyKey) => readonlyProxy(target[property]),\n\t\t\t\t\tset: (_target: any, property: PropertyKey, _value: any) => { throw new Error(`TypeError: Cannot assign to read only property '${String(property)}' of object`); },\n\t\t\t\t\tdeleteProperty: (_target: any, property: PropertyKey) => { throw new Error(`TypeError: Cannot delete read only property '${String(property)}' of object`); },\n\t\t\t\t\tdefineProperty: (_target: any, property: PropertyKey) => { throw new Error(`TypeError: Cannot define property '${String(property)}' for a readonly object`); },\n\t\t\t\t\tsetPrototypeOf: (_target: any) => { throw new Error(`TypeError: Cannot set prototype for a readonly object`); },\n\t\t\t\t\tisExtensible: () => false,\n\t\t\t\t\tpreventExtensions: () => true\n\t\t\t\t}) : target;\n\t\t};\n\t\treturn readonlyProxy(result);\n\t}\n\n\tprivate _validateConfigurationAccess(key: string, overrides?: IConfigurationOverrides, extensionId?: ExtensionIdentifier): void {\n\t\tconst scope = OVERRIDE_PROPERTY_PATTERN.test(key) ? ConfigurationScope.RESOURCE : this._configurationScopes.get(key);\n\t\tconst extensionIdText = extensionId ? `[${extensionId.value}] ` : '';\n\t\tif (ConfigurationScope.RESOURCE === scope) {\n\t\t\tif (typeof overrides?.resource === 'undefined') {\n\t\t\t\tthis._logService.warn(`${extensionIdText}Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for '${key}', provide the URI of a resource or 'null' for any resource.`);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (ConfigurationScope.WINDOW === scope) {\n\t\t\tif (overrides?.resource) {\n\t\t\t\tthis._logService.warn(`${extensionIdText}Accessing a window scoped configuration for a resource is not expected. To associate '${key}' to a resource, define its scope to 'resource' in configuration contributions in 'package.json'.`);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate _toConfigurationChangeEvent(change: IConfigurationChange, previous: { data: IConfigurationData, workspace: Workspace | undefined }): vscode.ConfigurationChangeEvent {\n\t\tconst event = new ConfigurationChangeEvent(change, previous, this._configuration, this._extHostWorkspace.workspace);\n\t\treturn Object.freeze({\n\t\t\taffectsConfiguration: (section: string, scope?: vscode.ConfigurationScope) => event.affectsConfiguration(section, scopeToOverrides(scope))\n\t\t});\n\t}\n\n\tprivate _toMap(scopes: [string, ConfigurationScope | undefined][]): Map<string, ConfigurationScope | undefined> {\n\t\treturn scopes.reduce((result, scope) => { result.set(scope[0], scope[1]); return result; }, new Map<string, ConfigurationScope | undefined>());\n\t}\n\n}\n\nexport const IExtHostConfiguration = createDecorator<IExtHostConfiguration>('IExtHostConfiguration');\nexport interface IExtHostConfiguration extends ExtHostConfiguration { }\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { originalFSPath } from 'vs/base/common/resources';\nimport { Barrier } from 'vs/base/common/async';\nimport { dispose, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtHostExtensionServiceShape, IInitData, MainContext, MainThreadExtensionServiceShape, MainThreadTelemetryShape, MainThreadWorkspaceShape, IResolveAuthorityResult } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostConfiguration, IExtHostConfiguration } from 'vs/workbench/api/common/extHostConfiguration';\nimport { ActivatedExtension, EmptyExtension, ExtensionActivationReason, ExtensionActivationTimes, ExtensionActivationTimesBuilder, ExtensionsActivator, IExtensionAPI, IExtensionModule, HostExtension, ExtensionActivationTimesFragment } from 'vs/workbench/api/common/extHostExtensionActivator';\nimport { ExtHostStorage, IExtHostStorage } from 'vs/workbench/api/common/extHostStorage';\nimport { ExtHostWorkspace, IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { ExtensionActivationError, checkProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport type * as vscode from 'vscode';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Schemas } from 'vs/base/common/network';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ExtensionMemento } from 'vs/workbench/api/common/extHostMemento';\nimport { RemoteAuthorityResolverError } from 'vs/workbench/api/common/extHostTypes';\nimport { ResolvedAuthority, ResolvedOptions, RemoteAuthorityResolverErrorCode } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IInstantiationService, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { IExtensionStoragePaths } from 'vs/workbench/api/common/extHostStoragePaths';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IExtHostNodeProxy } from 'vs/server/browser/extHostNodeProxy';\nimport { IExtHostTunnelService } from 'vs/workbench/api/common/extHostTunnelService';\nimport { IExtHostTerminalService } from 'vs/workbench/api/common/extHostTerminalService';\n\ninterface ITestRunner {\n\t/** Old test runner API, as exported from `vscode/lib/testrunner` */\n\trun(testsRoot: string, clb: (error: Error, failures?: number) => void): void;\n}\n\ninterface INewTestRunner {\n\t/** New test runner API, as explained in the extension test doc */\n\trun(): Promise<void>;\n}\n\nexport const IHostUtils = createDecorator<IHostUtils>('IHostUtils');\n\nexport interface IHostUtils {\n\t_serviceBrand: undefined;\n\texit(code?: number): void;\n\texists(path: string): Promise<boolean>;\n\trealpath(path: string): Promise<string>;\n}\n\ntype TelemetryActivationEventFragment = {\n\tid: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n\tname: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n\textensionVersion: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n\tpublisherDisplayName: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tactivationEvents: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tisBuiltin: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\treason: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treasonId: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n};\n\nexport abstract class AbstractExtHostExtensionService implements ExtHostExtensionServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate static readonly WORKSPACE_CONTAINS_TIMEOUT = 7000;\n\n\tprotected readonly _hostUtils: IHostUtils;\n\tprotected readonly _initData: IInitData;\n\tprotected readonly _extHostContext: IExtHostRpcService;\n\tprotected readonly _instaService: IInstantiationService;\n\tprotected readonly _extHostWorkspace: ExtHostWorkspace;\n\tprotected readonly _extHostConfiguration: ExtHostConfiguration;\n\tprotected readonly _logService: ILogService;\n\tprotected readonly _nodeProxy: IExtHostNodeProxy;\n\tprotected readonly _extHostTunnelService: IExtHostTunnelService;\n\tprotected readonly _extHostTerminalService: IExtHostTerminalService;\n\n\tprotected readonly _mainThreadWorkspaceProxy: MainThreadWorkspaceShape;\n\tprotected readonly _mainThreadTelemetryProxy: MainThreadTelemetryShape;\n\tprotected readonly _mainThreadExtensionsProxy: MainThreadExtensionServiceShape;\n\n\tprivate readonly _almostReadyToRunExtensions: Barrier;\n\tprivate readonly _readyToStartExtensionHost: Barrier;\n\tprivate readonly _readyToRunExtensions: Barrier;\n\tprotected readonly _registry: ExtensionDescriptionRegistry;\n\tprivate readonly _storage: ExtHostStorage;\n\tprivate readonly _storagePath: IExtensionStoragePaths;\n\tprivate readonly _activator: ExtensionsActivator;\n\tprivate _extensionPathIndex: Promise<TernarySearchTree<string, IExtensionDescription>> | null;\n\n\tprivate readonly _resolvers: { [authorityPrefix: string]: vscode.RemoteAuthorityResolver; };\n\n\tprivate _started: boolean;\n\n\tprivate readonly _disposables: DisposableStore;\n\n\tconstructor(\n\t\t@IInstantiationService instaService: IInstantiationService,\n\t\t@IHostUtils hostUtils: IHostUtils,\n\t\t@IExtHostRpcService extHostContext: IExtHostRpcService,\n\t\t@IExtHostWorkspace extHostWorkspace: IExtHostWorkspace,\n\t\t@IExtHostConfiguration extHostConfiguration: IExtHostConfiguration,\n\t\t@ILogService logService: ILogService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IExtensionStoragePaths storagePath: IExtensionStoragePaths,\n\t\t@IExtHostNodeProxy nodeProxy: IExtHostNodeProxy,\n\t\t@IExtHostTunnelService extHostTunnelService: IExtHostTunnelService,\n\t\t@IExtHostTerminalService extHostTerminalService: IExtHostTerminalService\n\t) {\n\t\tthis._hostUtils = hostUtils;\n\t\tthis._extHostContext = extHostContext;\n\t\tthis._initData = initData;\n\n\t\tthis._extHostWorkspace = extHostWorkspace;\n\t\tthis._extHostConfiguration = extHostConfiguration;\n\t\tthis._logService = logService;\n\t\tthis._nodeProxy = nodeProxy;\n\t\tthis._extHostTunnelService = extHostTunnelService;\n\t\tthis._extHostTerminalService = extHostTerminalService;\n\t\tthis._disposables = new DisposableStore();\n\n\t\tthis._mainThreadWorkspaceProxy = this._extHostContext.getProxy(MainContext.MainThreadWorkspace);\n\t\tthis._mainThreadTelemetryProxy = this._extHostContext.getProxy(MainContext.MainThreadTelemetry);\n\t\tthis._mainThreadExtensionsProxy = this._extHostContext.getProxy(MainContext.MainThreadExtensionService);\n\n\t\tthis._almostReadyToRunExtensions = new Barrier();\n\t\tthis._readyToStartExtensionHost = new Barrier();\n\t\tthis._readyToRunExtensions = new Barrier();\n\t\tthis._registry = new ExtensionDescriptionRegistry(this._initData.extensions);\n\t\tthis._storage = new ExtHostStorage(this._extHostContext);\n\t\tthis._storagePath = storagePath;\n\n\t\tthis._instaService = instaService.createChild(new ServiceCollection(\n\t\t\t[IExtHostStorage, this._storage]\n\t\t));\n\n\t\tconst hostExtensions = new Set<string>();\n\t\tthis._initData.hostExtensions.forEach((extensionId) => hostExtensions.add(ExtensionIdentifier.toKey(extensionId)));\n\n\t\tthis._activator = new ExtensionsActivator(\n\t\t\tthis._registry,\n\t\t\tthis._initData.resolvedExtensions,\n\t\t\tthis._initData.hostExtensions,\n\t\t\t{\n\t\t\t\tonExtensionActivationError: (extensionId: ExtensionIdentifier, error: ExtensionActivationError): void => {\n\t\t\t\t\tthis._mainThreadExtensionsProxy.$onExtensionActivationError(extensionId, error);\n\t\t\t\t},\n\n\t\t\t\tactualActivateExtension: async (extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<ActivatedExtension> => {\n\t\t\t\t\tif (hostExtensions.has(ExtensionIdentifier.toKey(extensionId))) {\n\t\t\t\t\t\tawait this._mainThreadExtensionsProxy.$activateExtension(extensionId, reason);\n\t\t\t\t\t\treturn new HostExtension();\n\t\t\t\t\t}\n\t\t\t\t\tconst extensionDescription = this._registry.getExtensionDescription(extensionId)!;\n\t\t\t\t\treturn this._activateExtension(extensionDescription, reason);\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis._logService\n\t\t);\n\t\tthis._extensionPathIndex = null;\n\t\tthis._resolvers = Object.create(null);\n\t\tthis._started = false;\n\t}\n\n\tpublic async initialize(): Promise<void> {\n\t\ttry {\n\n\t\t\tawait this._beforeAlmostReadyToRunExtensions();\n\t\t\tthis._almostReadyToRunExtensions.open();\n\n\t\t\tawait this._extHostWorkspace.waitForInitializeCall();\n\t\t\tthis._readyToStartExtensionHost.open();\n\n\t\t\tif (this._initData.autoStart) {\n\t\t\t\tthis._startExtensionHost();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\terrors.onUnexpectedError(err);\n\t\t}\n\t}\n\n\tprotected abstract _beforeAlmostReadyToRunExtensions(): Promise<void>;\n\n\tpublic async deactivateAll(): Promise<void> {\n\t\tlet allPromises: Promise<void>[] = [];\n\t\ttry {\n\t\t\tconst allExtensions = this._registry.getAllExtensionDescriptions();\n\t\t\tconst allExtensionsIds = allExtensions.map(ext => ext.identifier);\n\t\t\tconst activatedExtensions = allExtensionsIds.filter(id => this.isActivated(id));\n\n\t\t\tallPromises = activatedExtensions.map((extensionId) => {\n\t\t\t\treturn this._deactivate(extensionId);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\t// TODO: write to log once we have one\n\t\t}\n\t\tawait Promise.all(allPromises);\n\t}\n\n\tpublic isActivated(extensionId: ExtensionIdentifier): boolean {\n\t\tif (this._readyToRunExtensions.isOpen()) {\n\t\t\treturn this._activator.isActivated(extensionId);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _activateByEvent(activationEvent: string, startup: boolean): Promise<void> {\n\t\treturn this._activator.activateByEvent(activationEvent, startup);\n\t}\n\n\tprivate _activateById(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\treturn this._activator.activateById(extensionId, reason);\n\t}\n\n\tpublic activateByIdWithErrors(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\treturn this._activateById(extensionId, reason).then(() => {\n\t\t\tconst extension = this._activator.getActivatedExtension(extensionId);\n\t\t\tif (extension.activationFailed) {\n\t\t\t\t// activation failed => bubble up the error as the promise result\n\t\t\t\treturn Promise.reject(extension.activationFailedError);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tpublic getExtensionRegistry(): Promise<ExtensionDescriptionRegistry> {\n\t\treturn this._readyToRunExtensions.wait().then(_ => this._registry);\n\t}\n\n\tpublic getExtensionExports(extensionId: ExtensionIdentifier): IExtensionAPI | null | undefined {\n\t\tif (this._readyToRunExtensions.isOpen()) {\n\t\t\treturn this._activator.getActivatedExtension(extensionId).exports;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// create trie to enable fast 'filename -> extension id' look up\n\tpublic getExtensionPathIndex(): Promise<TernarySearchTree<string, IExtensionDescription>> {\n\t\tif (!this._extensionPathIndex) {\n\t\t\tconst tree = TernarySearchTree.forPaths<IExtensionDescription>();\n\t\t\tconst extensions = this._registry.getAllExtensionDescriptions().map(ext => {\n\t\t\t\tif (!ext.main) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn this._hostUtils.realpath(ext.extensionLocation.fsPath).then(value => tree.set(URI.file(value).fsPath, ext));\n\t\t\t});\n\t\t\tthis._extensionPathIndex = Promise.all(extensions).then(() => tree);\n\t\t}\n\t\treturn this._extensionPathIndex;\n\t}\n\n\tprivate _deactivate(extensionId: ExtensionIdentifier): Promise<void> {\n\t\tlet result = Promise.resolve(undefined);\n\n\t\tif (!this._readyToRunExtensions.isOpen()) {\n\t\t\treturn result;\n\t\t}\n\n\t\tif (!this._activator.isActivated(extensionId)) {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst extension = this._activator.getActivatedExtension(extensionId);\n\t\tif (!extension) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// call deactivate if available\n\t\ttry {\n\t\t\tif (typeof extension.module.deactivate === 'function') {\n\t\t\t\tresult = Promise.resolve(extension.module.deactivate()).then(undefined, (err) => {\n\t\t\t\t\t// TODO: Do something with err if this is not the shutdown case\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// TODO: Do something with err if this is not the shutdown case\n\t\t}\n\n\t\t// clean up subscriptions\n\t\ttry {\n\t\t\tdispose(extension.subscriptions);\n\t\t} catch (err) {\n\t\t\t// TODO: Do something with err if this is not the shutdown case\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// --- impl\n\n\tprivate _activateExtension(extensionDescription: IExtensionDescription, reason: ExtensionActivationReason): Promise<ActivatedExtension> {\n\t\tthis._mainThreadExtensionsProxy.$onWillActivateExtension(extensionDescription.identifier);\n\t\treturn this._doActivateExtension(extensionDescription, reason).then((activatedExtension) => {\n\t\t\tconst activationTimes = activatedExtension.activationTimes;\n\t\t\tthis._mainThreadExtensionsProxy.$onDidActivateExtension(extensionDescription.identifier, activationTimes.codeLoadingTime, activationTimes.activateCallTime, activationTimes.activateResolvedTime, reason);\n\t\t\tthis._logExtensionActivationTimes(extensionDescription, reason, 'success', activationTimes);\n\t\t\treturn activatedExtension;\n\t\t}, (err) => {\n\t\t\tthis._logExtensionActivationTimes(extensionDescription, reason, 'failure');\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tprivate _logExtensionActivationTimes(extensionDescription: IExtensionDescription, reason: ExtensionActivationReason, outcome: string, activationTimes?: ExtensionActivationTimes) {\n\t\tconst event = getTelemetryActivationEvent(extensionDescription, reason);\n\t\ttype ExtensionActivationTimesClassification = {\n\t\t\toutcome: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t} & TelemetryActivationEventFragment & ExtensionActivationTimesFragment;\n\n\t\ttype ExtensionActivationTimesEvent = {\n\t\t\toutcome: string\n\t\t} & ActivationTimesEvent & TelemetryActivationEvent;\n\n\t\ttype ActivationTimesEvent = {\n\t\t\tstartup?: boolean;\n\t\t\tcodeLoadingTime?: number;\n\t\t\tactivateCallTime?: number;\n\t\t\tactivateResolvedTime?: number;\n\t\t};\n\n\t\tthis._mainThreadTelemetryProxy.$publicLog2<ExtensionActivationTimesEvent, ExtensionActivationTimesClassification>('extensionActivationTimes', {\n\t\t\t...event,\n\t\t\t...(activationTimes || {}),\n\t\t\toutcome\n\t\t});\n\t}\n\n\tprivate _doActivateExtension(extensionDescription: IExtensionDescription, reason: ExtensionActivationReason): Promise<ActivatedExtension> {\n\t\tconst event = getTelemetryActivationEvent(extensionDescription, reason);\n\t\ttype ActivatePluginClassification = {} & TelemetryActivationEventFragment;\n\t\tthis._mainThreadTelemetryProxy.$publicLog2<TelemetryActivationEvent, ActivatePluginClassification>('activatePlugin', event);\n\t\tif (!extensionDescription.main) {\n\t\t\t// Treat the extension as being empty => NOT AN ERROR CASE\n\t\t\treturn Promise.resolve(new EmptyExtension(ExtensionActivationTimes.NONE));\n\t\t}\n\n\t\tthis._logService.info(`ExtensionService#_doActivateExtension ${extensionDescription.identifier.value} ${JSON.stringify(reason)}`);\n\t\tthis._logService.flush();\n\n\t\tconst activationTimesBuilder = new ExtensionActivationTimesBuilder(reason.startup);\n\t\treturn Promise.all([\n\t\t\tthis._loadCommonJSModule<IExtensionModule>(extensionDescription, activationTimesBuilder),\n\t\t\tthis._loadExtensionContext(extensionDescription)\n\t\t]).then(values => {\n\t\t\treturn AbstractExtHostExtensionService._callActivate(this._logService, extensionDescription.identifier, values[0], values[1], activationTimesBuilder);\n\t\t});\n\t}\n\n\tprotected abstract _loadCommonJSModule<T>(module: URI | IExtensionDescription, activationTimesBuilder: ExtensionActivationTimesBuilder): Promise<T>;\n\n\tprivate _loadExtensionContext(extensionDescription: IExtensionDescription): Promise<vscode.ExtensionContext> {\n\n\t\tconst globalState = new ExtensionMemento(extensionDescription.identifier.value, true, this._storage);\n\t\tconst workspaceState = new ExtensionMemento(extensionDescription.identifier.value, false, this._storage);\n\n\t\tthis._logService.trace(`ExtensionService#loadExtensionContext ${extensionDescription.identifier.value}`);\n\t\treturn Promise.all([\n\t\t\tglobalState.whenReady,\n\t\t\tworkspaceState.whenReady,\n\t\t\tthis._storagePath.whenReady\n\t\t]).then(() => {\n\t\t\tconst that = this;\n\t\t\treturn Object.freeze<vscode.ExtensionContext>({\n\t\t\t\tglobalState,\n\t\t\t\tworkspaceState,\n\t\t\t\tsubscriptions: [],\n\t\t\t\tget extensionUri() { return extensionDescription.extensionLocation; },\n\t\t\t\tget extensionPath() { return extensionDescription.extensionLocation.fsPath; },\n\t\t\t\tget storagePath() { return that._storagePath.workspaceValue(extensionDescription); },\n\t\t\t\tget globalStoragePath() { return that._storagePath.globalValue(extensionDescription); },\n\t\t\t\tasAbsolutePath(relativePath: string) { return path.join(extensionDescription.extensionLocation.fsPath, relativePath); },\n\t\t\t\tget logPath() { return path.join(that._initData.logsLocation.fsPath, extensionDescription.identifier.value); },\n\t\t\t\tget environmentVariableCollection() {\n\t\t\t\t\tcheckProposedApiEnabled(extensionDescription);\n\t\t\t\t\treturn that._extHostTerminalService.getEnvironmentVariableCollection(extensionDescription);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate static _callActivate(logService: ILogService, extensionId: ExtensionIdentifier, extensionModule: IExtensionModule, context: vscode.ExtensionContext, activationTimesBuilder: ExtensionActivationTimesBuilder): Promise<ActivatedExtension> {\n\t\t// Make sure the extension's surface is not undefined\n\t\textensionModule = extensionModule || {\n\t\t\tactivate: undefined,\n\t\t\tdeactivate: undefined\n\t\t};\n\n\t\treturn this._callActivateOptional(logService, extensionId, extensionModule, context, activationTimesBuilder).then((extensionExports) => {\n\t\t\treturn new ActivatedExtension(false, null, activationTimesBuilder.build(), extensionModule, extensionExports, context.subscriptions);\n\t\t});\n\t}\n\n\tprivate static _callActivateOptional(logService: ILogService, extensionId: ExtensionIdentifier, extensionModule: IExtensionModule, context: vscode.ExtensionContext, activationTimesBuilder: ExtensionActivationTimesBuilder): Promise<IExtensionAPI> {\n\t\tif (typeof extensionModule.activate === 'function') {\n\t\t\ttry {\n\t\t\t\tactivationTimesBuilder.activateCallStart();\n\t\t\t\tlogService.trace(`ExtensionService#_callActivateOptional ${extensionId.value}`);\n\t\t\t\tconst scope = typeof global === 'object' ? global : self; // `global` is nodejs while `self` is for workers\n\t\t\t\tconst activateResult: Promise<IExtensionAPI> = extensionModule.activate.apply(scope, [context]);\n\t\t\t\tactivationTimesBuilder.activateCallStop();\n\n\t\t\t\tactivationTimesBuilder.activateResolveStart();\n\t\t\t\treturn Promise.resolve(activateResult).then((value) => {\n\t\t\t\t\tactivationTimesBuilder.activateResolveStop();\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t} else {\n\t\t\t// No activate found => the module is the extension's exports\n\t\t\treturn Promise.resolve<IExtensionAPI>(extensionModule);\n\t\t}\n\t}\n\n\t// -- eager activation\n\n\t// Handle \"eager\" activation extensions\n\tprivate _handleEagerExtensions(): Promise<void> {\n\t\tthis._activateByEvent('*', true).then(undefined, (err) => {\n\t\t\tthis._logService.error(err);\n\t\t});\n\n\t\tthis._disposables.add(this._extHostWorkspace.onDidChangeWorkspace((e) => this._handleWorkspaceContainsEagerExtensions(e.added)));\n\t\tconst folders = this._extHostWorkspace.workspace ? this._extHostWorkspace.workspace.folders : [];\n\t\treturn this._handleWorkspaceContainsEagerExtensions(folders);\n\t}\n\n\tprivate _handleWorkspaceContainsEagerExtensions(folders: ReadonlyArray<vscode.WorkspaceFolder>): Promise<void> {\n\t\tif (folders.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn Promise.all(\n\t\t\tthis._registry.getAllExtensionDescriptions().map((desc) => {\n\t\t\t\treturn this._handleWorkspaceContainsEagerExtension(folders, desc);\n\t\t\t})\n\t\t).then(() => { });\n\t}\n\n\tprivate _handleWorkspaceContainsEagerExtension(folders: ReadonlyArray<vscode.WorkspaceFolder>, desc: IExtensionDescription): Promise<void> {\n\t\tconst activationEvents = desc.activationEvents;\n\t\tif (!activationEvents) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (this.isActivated(desc.identifier)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst fileNames: string[] = [];\n\t\tconst globPatterns: string[] = [];\n\n\t\tconst localWithRemote = !this._initData.remote.isRemote && !!this._initData.remote.authority;\n\t\tfor (const activationEvent of activationEvents) {\n\t\t\tif (/^workspaceContains:/.test(activationEvent)) {\n\t\t\t\tconst fileNameOrGlob = activationEvent.substr('workspaceContains:'.length);\n\t\t\t\tif (fileNameOrGlob.indexOf('*') >= 0 || fileNameOrGlob.indexOf('?') >= 0 || localWithRemote) {\n\t\t\t\t\tglobPatterns.push(fileNameOrGlob);\n\t\t\t\t} else {\n\t\t\t\t\tfileNames.push(fileNameOrGlob);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (fileNames.length === 0 && globPatterns.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst fileNamePromise = Promise.all(fileNames.map((fileName) => this._activateIfFileName(folders, desc.identifier, fileName))).then(() => { });\n\t\tconst globPatternPromise = this._activateIfGlobPatterns(folders, desc.identifier, globPatterns);\n\n\t\treturn Promise.all([fileNamePromise, globPatternPromise]).then(() => { });\n\t}\n\n\tprivate async _activateIfFileName(folders: ReadonlyArray<vscode.WorkspaceFolder>, extensionId: ExtensionIdentifier, fileName: string): Promise<void> {\n\n\t\t// find exact path\n\t\tfor (const { uri } of folders) {\n\t\t\tif (await this._hostUtils.exists(path.join(URI.revive(uri).fsPath, fileName))) {\n\t\t\t\t// the file was found\n\t\t\t\treturn (\n\t\t\t\t\tthis._activateById(extensionId, { startup: true, extensionId, activationEvent: `workspaceContains:${fileName}` })\n\t\t\t\t\t\t.then(undefined, err => this._logService.error(err))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate async _activateIfGlobPatterns(folders: ReadonlyArray<vscode.WorkspaceFolder>, extensionId: ExtensionIdentifier, globPatterns: string[]): Promise<void> {\n\t\tthis._logService.trace(`extensionHostMain#activateIfGlobPatterns: fileSearch, extension: ${extensionId.value}, entryPoint: workspaceContains`);\n\n\t\tif (globPatterns.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\tconst searchP = this._mainThreadWorkspaceProxy.$checkExists(folders.map(folder => folder.uri), globPatterns, tokenSource.token);\n\n\t\tconst timer = setTimeout(async () => {\n\t\t\ttokenSource.cancel();\n\t\t\tthis._activateById(extensionId, { startup: true, extensionId, activationEvent: `workspaceContainsTimeout:${globPatterns.join(',')}` })\n\t\t\t\t.then(undefined, err => this._logService.error(err));\n\t\t}, AbstractExtHostExtensionService.WORKSPACE_CONTAINS_TIMEOUT);\n\n\t\tlet exists: boolean = false;\n\t\ttry {\n\t\t\texists = await searchP;\n\t\t} catch (err) {\n\t\t\tif (!errors.isPromiseCanceledError(err)) {\n\t\t\t\tthis._logService.error(err);\n\t\t\t}\n\t\t}\n\n\t\ttokenSource.dispose();\n\t\tclearTimeout(timer);\n\n\t\tif (exists) {\n\t\t\t// a file was found matching one of the glob patterns\n\t\t\treturn (\n\t\t\t\tthis._activateById(extensionId, { startup: true, extensionId, activationEvent: `workspaceContains:${globPatterns.join(',')}` })\n\t\t\t\t\t.then(undefined, err => this._logService.error(err))\n\t\t\t);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate _handleExtensionTests(): Promise<void> {\n\t\treturn this._doHandleExtensionTests().then(undefined, error => {\n\t\t\tconsole.error(error); // ensure any error message makes it onto the console\n\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n\n\tprivate async _doHandleExtensionTests(): Promise<void> {\n\t\tconst { extensionDevelopmentLocationURI, extensionTestsLocationURI } = this._initData.environment;\n\t\tif (!(extensionDevelopmentLocationURI && extensionTestsLocationURI && extensionTestsLocationURI.scheme === Schemas.file)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst extensionTestsPath = originalFSPath(extensionTestsLocationURI);\n\n\t\t// Require the test runner via node require from the provided path\n\t\tlet testRunner: ITestRunner | INewTestRunner | undefined;\n\t\tlet requireError: Error | undefined;\n\t\ttry {\n\t\t\ttestRunner = await this._loadCommonJSModule(URI.file(extensionTestsPath), new ExtensionActivationTimesBuilder(false));\n\t\t} catch (error) {\n\t\t\trequireError = error;\n\t\t}\n\n\t\t// Execute the runner if it follows the old `run` spec\n\t\tif (testRunner && typeof testRunner.run === 'function') {\n\t\t\treturn new Promise<void>((c, e) => {\n\t\t\t\tconst oldTestRunnerCallback = (error: Error, failures: number | undefined) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\te(error.toString());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc(undefined);\n\t\t\t\t\t}\n\n\t\t\t\t\t// after tests have run, we shutdown the host\n\t\t\t\t\tthis._gracefulExit(error || (typeof failures === 'number' && failures > 0) ? 1 /* ERROR */ : 0 /* OK */);\n\t\t\t\t};\n\n\t\t\t\tconst runResult = testRunner!.run(extensionTestsPath, oldTestRunnerCallback);\n\n\t\t\t\t// Using the new API `run(): Promise<void>`\n\t\t\t\tif (runResult && runResult.then) {\n\t\t\t\t\trunResult\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t\tthis._gracefulExit(0);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err: Error) => {\n\t\t\t\t\t\t\te(err.toString());\n\t\t\t\t\t\t\tthis._gracefulExit(1);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Otherwise make sure to shutdown anyway even in case of an error\n\t\telse {\n\t\t\tthis._gracefulExit(1 /* ERROR */);\n\t\t}\n\n\t\treturn Promise.reject(new Error(requireError ? requireError.toString() : nls.localize('extensionTestError', \"Path {0} does not point to a valid extension test runner.\", extensionTestsPath)));\n\t}\n\n\tprivate _gracefulExit(code: number): void {\n\t\t// to give the PH process a chance to flush any outstanding console\n\t\t// messages to the main process, we delay the exit() by some time\n\t\tsetTimeout(() => {\n\t\t\t// If extension tests are running, give the exit code to the renderer\n\t\t\tif (this._initData.remote.isRemote && !!this._initData.environment.extensionTestsLocationURI) {\n\t\t\t\tthis._mainThreadExtensionsProxy.$onExtensionHostExit(code);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._hostUtils.exit(code);\n\t\t}, 500);\n\t}\n\n\tprivate _startExtensionHost(): Promise<void> {\n\t\tif (this._started) {\n\t\t\tthrow new Error(`Extension host is already started!`);\n\t\t}\n\t\tthis._started = true;\n\n\t\treturn this._readyToStartExtensionHost.wait()\n\t\t\t.then(() => this._readyToRunExtensions.open())\n\t\t\t.then(() => this._handleEagerExtensions())\n\t\t\t.then(() => this._handleExtensionTests())\n\t\t\t.then(() => {\n\t\t\t\tthis._logService.info(`eager extensions activated`);\n\t\t\t});\n\t}\n\n\t// -- called by extensions\n\n\tpublic registerRemoteAuthorityResolver(authorityPrefix: string, resolver: vscode.RemoteAuthorityResolver): vscode.Disposable {\n\t\tthis._resolvers[authorityPrefix] = resolver;\n\t\treturn toDisposable(() => {\n\t\t\tdelete this._resolvers[authorityPrefix];\n\t\t});\n\t}\n\n\t// -- called by main thread\n\n\tpublic async $resolveAuthority(remoteAuthority: string, resolveAttempt: number): Promise<IResolveAuthorityResult> {\n\t\tconst authorityPlusIndex = remoteAuthority.indexOf('+');\n\t\tif (authorityPlusIndex === -1) {\n\t\t\tthrow new Error(`Not an authority that can be resolved!`);\n\t\t}\n\t\tconst authorityPrefix = remoteAuthority.substr(0, authorityPlusIndex);\n\n\t\tawait this._almostReadyToRunExtensions.wait();\n\t\tawait this._activateByEvent(`onResolveRemoteAuthority:${authorityPrefix}`, false);\n\n\t\tconst resolver = this._resolvers[authorityPrefix];\n\t\tif (!resolver) {\n\t\t\treturn {\n\t\t\t\ttype: 'error',\n\t\t\t\terror: {\n\t\t\t\t\tcode: RemoteAuthorityResolverErrorCode.NoResolverFound,\n\t\t\t\t\tmessage: `No remote extension installed to resolve ${authorityPrefix}.`,\n\t\t\t\t\tdetail: undefined\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await resolver.resolve(remoteAuthority, { resolveAttempt });\n\t\t\tthis._disposables.add(await this._extHostTunnelService.setTunnelExtensionFunctions(resolver));\n\n\t\t\t// Split merged API result into separate authority/options\n\t\t\tconst authority: ResolvedAuthority = {\n\t\t\t\tauthority: remoteAuthority,\n\t\t\t\thost: result.host,\n\t\t\t\tport: result.port\n\t\t\t};\n\t\t\tconst options: ResolvedOptions = {\n\t\t\t\textensionHostEnv: result.extensionHostEnv\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\ttype: 'ok',\n\t\t\t\tvalue: {\n\t\t\t\t\tauthority,\n\t\t\t\t\toptions,\n\t\t\t\t\ttunnelInformation: { environmentTunnels: result.environmentTunnels }\n\t\t\t\t}\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tif (err instanceof RemoteAuthorityResolverError) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\terror: {\n\t\t\t\t\t\tcode: err._code,\n\t\t\t\t\t\tmessage: err._message,\n\t\t\t\t\t\tdetail: err._detail\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tpublic $startExtensionHost(enabledExtensionIds: ExtensionIdentifier[]): Promise<void> {\n\t\tthis._registry.keepOnly(enabledExtensionIds);\n\t\treturn this._startExtensionHost();\n\t}\n\n\tpublic $activateByEvent(activationEvent: string): Promise<void> {\n\t\treturn (\n\t\t\tthis._readyToRunExtensions.wait()\n\t\t\t\t.then(_ => this._activateByEvent(activationEvent, false))\n\t\t);\n\t}\n\n\tpublic async $activate(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<boolean> {\n\t\tawait this._readyToRunExtensions.wait();\n\t\tif (!this._registry.getExtensionDescription(extensionId)) {\n\t\t\t// unknown extension => ignore\n\t\t\treturn false;\n\t\t}\n\t\tawait this._activateById(extensionId, reason);\n\t\treturn true;\n\t}\n\n\tpublic async $deltaExtensions(toAdd: IExtensionDescription[], toRemove: ExtensionIdentifier[]): Promise<void> {\n\t\ttoAdd.forEach((extension) => (<any>extension).extensionLocation = URI.revive(extension.extensionLocation));\n\n\t\tconst trie = await this.getExtensionPathIndex();\n\n\t\tawait Promise.all(toRemove.map(async (extensionId) => {\n\t\t\tconst extensionDescription = this._registry.getExtensionDescription(extensionId);\n\t\t\tif (!extensionDescription) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst realpathValue = await this._hostUtils.realpath(extensionDescription.extensionLocation.fsPath);\n\t\t\ttrie.delete(URI.file(realpathValue).fsPath);\n\t\t}));\n\n\t\tawait Promise.all(toAdd.map(async (extensionDescription) => {\n\t\t\tconst realpathValue = await this._hostUtils.realpath(extensionDescription.extensionLocation.fsPath);\n\t\t\ttrie.set(URI.file(realpathValue).fsPath, extensionDescription);\n\t\t}));\n\n\t\tthis._registry.deltaExtensions(toAdd, toRemove);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic async $test_latency(n: number): Promise<number> {\n\t\treturn n;\n\t}\n\n\tpublic async $test_up(b: VSBuffer): Promise<number> {\n\t\treturn b.byteLength;\n\t}\n\n\tpublic async $test_down(size: number): Promise<VSBuffer> {\n\t\tlet buff = VSBuffer.alloc(size);\n\t\tlet value = Math.random() % 256;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tbuff.writeUInt8(value, i);\n\t\t}\n\t\treturn buff;\n\t}\n\n\tpublic abstract async $setRemoteEnvironment(env: { [key: string]: string | null }): Promise<void>;\n}\n\n\ntype TelemetryActivationEvent = {\n\tid: string;\n\tname: string;\n\textensionVersion: string;\n\tpublisherDisplayName: string;\n\tactivationEvents: string | null;\n\tisBuiltin: boolean;\n\treason: string;\n\treasonId: string;\n};\n\nfunction getTelemetryActivationEvent(extensionDescription: IExtensionDescription, reason: ExtensionActivationReason): TelemetryActivationEvent {\n\tconst event = {\n\t\tid: extensionDescription.identifier.value,\n\t\tname: extensionDescription.name,\n\t\textensionVersion: extensionDescription.version,\n\t\tpublisherDisplayName: extensionDescription.publisher,\n\t\tactivationEvents: extensionDescription.activationEvents ? extensionDescription.activationEvents.join(',') : null,\n\t\tisBuiltin: extensionDescription.isBuiltin,\n\t\treason: reason.activationEvent,\n\t\treasonId: reason.extensionId.value,\n\t};\n\n\treturn event;\n}\n\n\nexport const IExtHostExtensionService = createDecorator<IExtHostExtensionService>('IExtHostExtensionService');\n\nexport interface IExtHostExtensionService extends AbstractExtHostExtensionService {\n\t_serviceBrand: undefined;\n\tinitialize(): Promise<void>;\n\tisActivated(extensionId: ExtensionIdentifier): boolean;\n\tactivateByIdWithErrors(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void>;\n\tdeactivateAll(): Promise<void>;\n\tgetExtensionExports(extensionId: ExtensionIdentifier): IExtensionAPI | null | undefined;\n\tgetExtensionRegistry(): Promise<ExtensionDescriptionRegistry>;\n\tgetExtensionPathIndex(): Promise<TernarySearchTree<string, IExtensionDescription>>;\n\tregisterRemoteAuthorityResolver(authorityPrefix: string, resolver: vscode.RemoteAuthorityResolver): vscode.Disposable;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { asPromise } from 'vs/base/common/async';\nimport {\n\tMainContext, MainThreadDebugServiceShape, ExtHostDebugServiceShape, DebugSessionUUID,\n\tIBreakpointsDeltaDto, ISourceMultiBreakpointDto, IFunctionBreakpointDto, IDebugSessionDto\n} from 'vs/workbench/api/common/extHost.protocol';\nimport { Disposable, Position, Location, SourceBreakpoint, FunctionBreakpoint, DebugAdapterServer, DebugAdapterExecutable, DataBreakpoint, DebugConsoleMode, DebugAdapterInlineImplementation } from 'vs/workbench/api/common/extHostTypes';\nimport { AbstractDebugAdapter } from 'vs/workbench/contrib/debug/common/abstractDebugAdapter';\nimport { IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { IExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { ExtHostDocumentsAndEditors, IExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { IDebuggerContribution, IConfig, IDebugAdapter, IDebugAdapterServer, IDebugAdapterExecutable, IAdapterDescriptor, IDebugAdapterImpl } from 'vs/workbench/contrib/debug/common/debug';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { ExtHostConfigProvider, IExtHostConfiguration } from '../common/extHostConfiguration';\nimport { convertToVSCPaths, convertToDAPaths, isDebuggerMainContribution } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport type * as vscode from 'vscode';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport const IExtHostDebugService = createDecorator<IExtHostDebugService>('IExtHostDebugService');\n\nexport interface IExtHostDebugService extends ExtHostDebugServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tonDidStartDebugSession: Event<vscode.DebugSession>;\n\tonDidTerminateDebugSession: Event<vscode.DebugSession>;\n\tonDidChangeActiveDebugSession: Event<vscode.DebugSession | undefined>;\n\tactiveDebugSession: vscode.DebugSession | undefined;\n\tactiveDebugConsole: vscode.DebugConsole;\n\tonDidReceiveDebugSessionCustomEvent: Event<vscode.DebugSessionCustomEvent>;\n\tonDidChangeBreakpoints: Event<vscode.BreakpointsChangeEvent>;\n\tbreakpoints: vscode.Breakpoint[];\n\n\taddBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void>;\n\tremoveBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void>;\n\tstartDebugging(folder: vscode.WorkspaceFolder | undefined, nameOrConfig: string | vscode.DebugConfiguration, options: vscode.DebugSessionOptions): Promise<boolean>;\n\tregisterDebugConfigurationProvider(type: string, provider: vscode.DebugConfigurationProvider, trigger: vscode.DebugConfigurationProviderTriggerKind): vscode.Disposable;\n\tregisterDebugAdapterDescriptorFactory(extension: IExtensionDescription, type: string, factory: vscode.DebugAdapterDescriptorFactory): vscode.Disposable;\n\tregisterDebugAdapterTrackerFactory(type: string, factory: vscode.DebugAdapterTrackerFactory): vscode.Disposable;\n\tasDebugSourceUri(source: vscode.DebugProtocolSource, session?: vscode.DebugSession): vscode.Uri;\n}\n\nexport class ExtHostDebugServiceBase implements IExtHostDebugService, ExtHostDebugServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _configProviderHandleCounter: number;\n\tprivate _configProviders: ConfigProviderTuple[];\n\n\tprivate _adapterFactoryHandleCounter: number;\n\tprivate _adapterFactories: DescriptorFactoryTuple[];\n\n\tprivate _trackerFactoryHandleCounter: number;\n\tprivate _trackerFactories: TrackerFactoryTuple[];\n\n\tprivate _debugServiceProxy: MainThreadDebugServiceShape;\n\tprivate _debugSessions: Map<DebugSessionUUID, ExtHostDebugSession> = new Map<DebugSessionUUID, ExtHostDebugSession>();\n\n\tprivate readonly _onDidStartDebugSession: Emitter<vscode.DebugSession>;\n\tget onDidStartDebugSession(): Event<vscode.DebugSession> { return this._onDidStartDebugSession.event; }\n\n\tprivate readonly _onDidTerminateDebugSession: Emitter<vscode.DebugSession>;\n\tget onDidTerminateDebugSession(): Event<vscode.DebugSession> { return this._onDidTerminateDebugSession.event; }\n\n\tprivate readonly _onDidChangeActiveDebugSession: Emitter<vscode.DebugSession | undefined>;\n\tget onDidChangeActiveDebugSession(): Event<vscode.DebugSession | undefined> { return this._onDidChangeActiveDebugSession.event; }\n\n\tprivate _activeDebugSession: ExtHostDebugSession | undefined;\n\tget activeDebugSession(): ExtHostDebugSession | undefined { return this._activeDebugSession; }\n\n\tprivate readonly _onDidReceiveDebugSessionCustomEvent: Emitter<vscode.DebugSessionCustomEvent>;\n\tget onDidReceiveDebugSessionCustomEvent(): Event<vscode.DebugSessionCustomEvent> { return this._onDidReceiveDebugSessionCustomEvent.event; }\n\n\tprivate _activeDebugConsole: ExtHostDebugConsole;\n\tget activeDebugConsole(): ExtHostDebugConsole { return this._activeDebugConsole; }\n\n\tprivate _breakpoints: Map<string, vscode.Breakpoint>;\n\tprivate _breakpointEventsActive: boolean;\n\n\tprivate readonly _onDidChangeBreakpoints: Emitter<vscode.BreakpointsChangeEvent>;\n\n\tprivate _aexCommands: Map<string, string>;\n\tprivate _debugAdapters: Map<number, IDebugAdapter>;\n\tprivate _debugAdaptersTrackers: Map<number, vscode.DebugAdapterTracker>;\n\n\tprivate _variableResolver: IConfigurationResolverService | undefined;\n\n\tprivate _signService: ISignService | undefined;\n\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpcService: IExtHostRpcService,\n\t\t@IExtHostWorkspace private _workspaceService: IExtHostWorkspace,\n\t\t@IExtHostExtensionService private _extensionService: IExtHostExtensionService,\n\t\t@IExtHostDocumentsAndEditors private _editorsService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration protected _configurationService: IExtHostConfiguration,\n\t\t@IExtHostCommands private _commandService: IExtHostCommands\n\t) {\n\t\tthis._configProviderHandleCounter = 0;\n\t\tthis._configProviders = [];\n\n\t\tthis._adapterFactoryHandleCounter = 0;\n\t\tthis._adapterFactories = [];\n\n\t\tthis._trackerFactoryHandleCounter = 0;\n\t\tthis._trackerFactories = [];\n\n\t\tthis._aexCommands = new Map();\n\t\tthis._debugAdapters = new Map();\n\t\tthis._debugAdaptersTrackers = new Map();\n\n\t\tthis._onDidStartDebugSession = new Emitter<vscode.DebugSession>();\n\t\tthis._onDidTerminateDebugSession = new Emitter<vscode.DebugSession>();\n\t\tthis._onDidChangeActiveDebugSession = new Emitter<vscode.DebugSession | undefined>();\n\t\tthis._onDidReceiveDebugSessionCustomEvent = new Emitter<vscode.DebugSessionCustomEvent>();\n\n\t\tthis._debugServiceProxy = extHostRpcService.getProxy(MainContext.MainThreadDebugService);\n\n\t\tthis._onDidChangeBreakpoints = new Emitter<vscode.BreakpointsChangeEvent>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis.startBreakpoints();\n\t\t\t}\n\t\t});\n\n\t\tthis._activeDebugConsole = new ExtHostDebugConsole(this._debugServiceProxy);\n\n\t\tthis._breakpoints = new Map<string, vscode.Breakpoint>();\n\t\tthis._breakpointEventsActive = false;\n\n\t\tthis._extensionService.getExtensionRegistry().then((extensionRegistry: ExtensionDescriptionRegistry) => {\n\t\t\textensionRegistry.onDidChange(_ => {\n\t\t\t\tthis.registerAllDebugTypes(extensionRegistry);\n\t\t\t});\n\t\t\tthis.registerAllDebugTypes(extensionRegistry);\n\t\t});\n\t}\n\n\tpublic asDebugSourceUri(src: vscode.DebugProtocolSource, session?: vscode.DebugSession): URI {\n\n\t\tconst source = <any>src;\n\n\t\tif (typeof source.sourceReference === 'number') {\n\t\t\t// src can be retrieved via DAP's \"source\" request\n\n\t\t\tlet debug = `debug:${encodeURIComponent(source.path || '')}`;\n\t\t\tlet sep = '?';\n\n\t\t\tif (session) {\n\t\t\t\tdebug += `${sep}session=${encodeURIComponent(session.id)}`;\n\t\t\t\tsep = '&';\n\t\t\t}\n\n\t\t\tdebug += `${sep}ref=${source.sourceReference}`;\n\n\t\t\treturn URI.parse(debug);\n\t\t} else if (source.path) {\n\t\t\t// src is just a local file path\n\t\t\treturn URI.file(source.path);\n\t\t} else {\n\t\t\tthrow new Error(`cannot create uri from DAP 'source' object; properties 'path' and 'sourceReference' are both missing.`);\n\t\t}\n\t}\n\n\tprivate registerAllDebugTypes(extensionRegistry: ExtensionDescriptionRegistry) {\n\n\t\tconst debugTypes: string[] = [];\n\t\tthis._aexCommands.clear();\n\n\t\tfor (const ed of extensionRegistry.getAllExtensionDescriptions()) {\n\t\t\tif (ed.contributes) {\n\t\t\t\tconst debuggers = <IDebuggerContribution[]>ed.contributes['debuggers'];\n\t\t\t\tif (debuggers && debuggers.length > 0) {\n\t\t\t\t\tfor (const dbg of debuggers) {\n\t\t\t\t\t\tif (isDebuggerMainContribution(dbg)) {\n\t\t\t\t\t\t\tdebugTypes.push(dbg.type);\n\t\t\t\t\t\t\tif (dbg.adapterExecutableCommand) {\n\t\t\t\t\t\t\t\tthis._aexCommands.set(dbg.type, dbg.adapterExecutableCommand);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._debugServiceProxy.$registerDebugTypes(debugTypes);\n\t}\n\n\t// extension debug API\n\n\tget onDidChangeBreakpoints(): Event<vscode.BreakpointsChangeEvent> {\n\t\treturn this._onDidChangeBreakpoints.event;\n\t}\n\n\tget breakpoints(): vscode.Breakpoint[] {\n\n\t\tthis.startBreakpoints();\n\n\t\tconst result: vscode.Breakpoint[] = [];\n\t\tthis._breakpoints.forEach(bp => result.push(bp));\n\t\treturn result;\n\t}\n\n\tpublic addBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void> {\n\n\t\tthis.startBreakpoints();\n\n\t\t// filter only new breakpoints\n\t\tconst breakpoints = breakpoints0.filter(bp => {\n\t\t\tconst id = bp.id;\n\t\t\tif (!this._breakpoints.has(id)) {\n\t\t\t\tthis._breakpoints.set(id, bp);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\t// send notification for added breakpoints\n\t\tthis.fireBreakpointChanges(breakpoints, [], []);\n\n\t\t// convert added breakpoints to DTOs\n\t\tconst dtos: Array<ISourceMultiBreakpointDto | IFunctionBreakpointDto> = [];\n\t\tconst map = new Map<string, ISourceMultiBreakpointDto>();\n\t\tfor (const bp of breakpoints) {\n\t\t\tif (bp instanceof SourceBreakpoint) {\n\t\t\t\tlet dto = map.get(bp.location.uri.toString());\n\t\t\t\tif (!dto) {\n\t\t\t\t\tdto = <ISourceMultiBreakpointDto>{\n\t\t\t\t\t\ttype: 'sourceMulti',\n\t\t\t\t\t\turi: bp.location.uri,\n\t\t\t\t\t\tlines: []\n\t\t\t\t\t};\n\t\t\t\t\tmap.set(bp.location.uri.toString(), dto);\n\t\t\t\t\tdtos.push(dto);\n\t\t\t\t}\n\t\t\t\tdto.lines.push({\n\t\t\t\t\tid: bp.id,\n\t\t\t\t\tenabled: bp.enabled,\n\t\t\t\t\tcondition: bp.condition,\n\t\t\t\t\thitCondition: bp.hitCondition,\n\t\t\t\t\tlogMessage: bp.logMessage,\n\t\t\t\t\tline: bp.location.range.start.line,\n\t\t\t\t\tcharacter: bp.location.range.start.character\n\t\t\t\t});\n\t\t\t} else if (bp instanceof FunctionBreakpoint) {\n\t\t\t\tdtos.push({\n\t\t\t\t\ttype: 'function',\n\t\t\t\t\tid: bp.id,\n\t\t\t\t\tenabled: bp.enabled,\n\t\t\t\t\thitCondition: bp.hitCondition,\n\t\t\t\t\tlogMessage: bp.logMessage,\n\t\t\t\t\tcondition: bp.condition,\n\t\t\t\t\tfunctionName: bp.functionName\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// send DTOs to VS Code\n\t\treturn this._debugServiceProxy.$registerBreakpoints(dtos);\n\t}\n\n\tpublic removeBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void> {\n\n\t\tthis.startBreakpoints();\n\n\t\t// remove from array\n\t\tconst breakpoints = breakpoints0.filter(b => this._breakpoints.delete(b.id));\n\n\t\t// send notification\n\t\tthis.fireBreakpointChanges([], breakpoints, []);\n\n\t\t// unregister with VS Code\n\t\tconst ids = breakpoints.filter(bp => bp instanceof SourceBreakpoint).map(bp => bp.id);\n\t\tconst fids = breakpoints.filter(bp => bp instanceof FunctionBreakpoint).map(bp => bp.id);\n\t\tconst dids = breakpoints.filter(bp => bp instanceof DataBreakpoint).map(bp => bp.id);\n\t\treturn this._debugServiceProxy.$unregisterBreakpoints(ids, fids, dids);\n\t}\n\n\tpublic startDebugging(folder: vscode.WorkspaceFolder | undefined, nameOrConfig: string | vscode.DebugConfiguration, options: vscode.DebugSessionOptions): Promise<boolean> {\n\t\treturn this._debugServiceProxy.$startDebugging(folder ? folder.uri : undefined, nameOrConfig, {\n\t\t\tparentSessionID: options.parentSession ? options.parentSession.id : undefined,\n\t\t\trepl: options.consoleMode === DebugConsoleMode.MergeWithParent ? 'mergeWithParent' : 'separate'\n\t\t});\n\t}\n\n\tpublic registerDebugConfigurationProvider(type: string, provider: vscode.DebugConfigurationProvider, trigger: vscode.DebugConfigurationProviderTriggerKind): vscode.Disposable {\n\n\t\tif (!provider) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\tif (provider.debugAdapterExecutable) {\n\t\t\tconsole.error('DebugConfigurationProvider.debugAdapterExecutable is deprecated and will be removed soon; please use DebugAdapterDescriptorFactory.createDebugAdapterDescriptor instead.');\n\t\t}\n\n\t\tconst handle = this._configProviderHandleCounter++;\n\t\tthis._configProviders.push({ type, handle, provider });\n\n\t\tthis._debugServiceProxy.$registerDebugConfigurationProvider(type, trigger,\n\t\t\t!!provider.provideDebugConfigurations,\n\t\t\t!!provider.resolveDebugConfiguration,\n\t\t\t!!provider.resolveDebugConfigurationWithSubstitutedVariables,\n\t\t\t!!provider.debugAdapterExecutable,\t\t// TODO@AW: deprecated\n\t\t\thandle);\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._configProviders = this._configProviders.filter(p => p.provider !== provider);\t\t// remove\n\t\t\tthis._debugServiceProxy.$unregisterDebugConfigurationProvider(handle);\n\t\t});\n\t}\n\n\tpublic registerDebugAdapterDescriptorFactory(extension: IExtensionDescription, type: string, factory: vscode.DebugAdapterDescriptorFactory): vscode.Disposable {\n\n\t\tif (!factory) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\t// a DebugAdapterDescriptorFactory can only be registered in the extension that contributes the debugger\n\t\tif (!this.definesDebugType(extension, type)) {\n\t\t\tthrow new Error(`a DebugAdapterDescriptorFactory can only be registered from the extension that defines the '${type}' debugger.`);\n\t\t}\n\n\t\t// make sure that only one factory for this type is registered\n\t\tif (this.getAdapterDescriptorFactoryByType(type)) {\n\t\t\tthrow new Error(`a DebugAdapterDescriptorFactory can only be registered once per a type.`);\n\t\t}\n\n\t\tconst handle = this._adapterFactoryHandleCounter++;\n\t\tthis._adapterFactories.push({ type, handle, factory });\n\n\t\tthis._debugServiceProxy.$registerDebugAdapterDescriptorFactory(type, handle);\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._adapterFactories = this._adapterFactories.filter(p => p.factory !== factory);\t\t// remove\n\t\t\tthis._debugServiceProxy.$unregisterDebugAdapterDescriptorFactory(handle);\n\t\t});\n\t}\n\n\tpublic registerDebugAdapterTrackerFactory(type: string, factory: vscode.DebugAdapterTrackerFactory): vscode.Disposable {\n\n\t\tif (!factory) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\tconst handle = this._trackerFactoryHandleCounter++;\n\t\tthis._trackerFactories.push({ type, handle, factory });\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._trackerFactories = this._trackerFactories.filter(p => p.factory !== factory);\t\t// remove\n\t\t});\n\t}\n\n\t// RPC methods (ExtHostDebugServiceShape)\n\n\tpublic async $runInTerminal(args: DebugProtocol.RunInTerminalRequestArguments): Promise<number | undefined> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprotected createVariableResolver(folders: vscode.WorkspaceFolder[], editorService: ExtHostDocumentsAndEditors, configurationService: ExtHostConfigProvider): AbstractVariableResolverService {\n\t\treturn new ExtHostVariableResolverService(folders, editorService, configurationService);\n\t}\n\n\tpublic async $substituteVariables(folderUri: UriComponents | undefined, config: IConfig): Promise<IConfig> {\n\t\tif (!this._variableResolver) {\n\t\t\tconst [workspaceFolders, configProvider] = await Promise.all([this._workspaceService.getWorkspaceFolders2(), this._configurationService.getConfigProvider()]);\n\t\t\tthis._variableResolver = this.createVariableResolver(workspaceFolders || [], this._editorsService, configProvider!);\n\t\t}\n\t\tlet ws: IWorkspaceFolder | undefined;\n\t\tconst folder = await this.getFolder(folderUri);\n\t\tif (folder) {\n\t\t\tws = {\n\t\t\t\turi: folder.uri,\n\t\t\t\tname: folder.name,\n\t\t\t\tindex: folder.index,\n\t\t\t\ttoResource: () => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._variableResolver.resolveAny(ws, config);\n\t}\n\n\tprotected createDebugAdapter(adapter: IAdapterDescriptor, session: ExtHostDebugSession): AbstractDebugAdapter | undefined {\n\t\tif (adapter.type === 'implementation') {\n\t\t\treturn new DirectDebugAdapter(adapter.implementation);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected createSignService(): ISignService | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic async $startDASession(debugAdapterHandle: number, sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst mythis = this;\n\n\t\tconst session = await this.getSession(sessionDto);\n\n\t\treturn this.getAdapterDescriptor(this.getAdapterDescriptorFactoryByType(session.type), session).then(daDescriptor => {\n\n\t\t\tif (!daDescriptor) {\n\t\t\t\tthrow new Error(`Couldn't find a debug adapter descriptor for debug type '${session.type}' (extension might have failed to activate)`);\n\t\t\t}\n\n\t\t\tconst adapterDescriptor = this.convertToDto(daDescriptor);\n\n\t\t\tconst da = this.createDebugAdapter(adapterDescriptor, session);\n\t\t\tif (!da) {\n\t\t\t\tthrow new Error(`Couldn't create a debug adapter for type '${session.type}'.`);\n\t\t\t}\n\n\t\t\tconst debugAdapter = da;\n\n\t\t\tthis._debugAdapters.set(debugAdapterHandle, debugAdapter);\n\n\t\t\treturn this.getDebugAdapterTrackers(session).then(tracker => {\n\n\t\t\t\tif (tracker) {\n\t\t\t\t\tthis._debugAdaptersTrackers.set(debugAdapterHandle, tracker);\n\t\t\t\t}\n\n\t\t\t\tdebugAdapter.onMessage(async message => {\n\n\t\t\t\t\tif (message.type === 'request' && (<DebugProtocol.Request>message).command === 'handshake') {\n\n\t\t\t\t\t\tconst request = <DebugProtocol.Request>message;\n\n\t\t\t\t\t\tconst response: DebugProtocol.Response = {\n\t\t\t\t\t\t\ttype: 'response',\n\t\t\t\t\t\t\tseq: 0,\n\t\t\t\t\t\t\tcommand: request.command,\n\t\t\t\t\t\t\trequest_seq: request.seq,\n\t\t\t\t\t\t\tsuccess: true\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!this._signService) {\n\t\t\t\t\t\t\tthis._signService = this.createSignService();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (this._signService) {\n\t\t\t\t\t\t\t\tconst signature = await this._signService.sign(request.arguments.value);\n\t\t\t\t\t\t\t\tresponse.body = {\n\t\t\t\t\t\t\t\t\tsignature: signature\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tdebugAdapter.sendResponse(response);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error('no signer');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tresponse.success = false;\n\t\t\t\t\t\t\tresponse.message = e.message;\n\t\t\t\t\t\t\tdebugAdapter.sendResponse(response);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (tracker && tracker.onDidSendMessage) {\n\t\t\t\t\t\t\ttracker.onDidSendMessage(message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// DA -> VS Code\n\t\t\t\t\t\tmessage = convertToVSCPaths(message, true);\n\n\t\t\t\t\t\tmythis._debugServiceProxy.$acceptDAMessage(debugAdapterHandle, message);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdebugAdapter.onError(err => {\n\t\t\t\t\tif (tracker && tracker.onError) {\n\t\t\t\t\t\ttracker.onError(err);\n\t\t\t\t\t}\n\t\t\t\t\tthis._debugServiceProxy.$acceptDAError(debugAdapterHandle, err.name, err.message, err.stack);\n\t\t\t\t});\n\t\t\t\tdebugAdapter.onExit((code: number | null) => {\n\t\t\t\t\tif (tracker && tracker.onExit) {\n\t\t\t\t\t\ttracker.onExit(withNullAsUndefined(code), undefined);\n\t\t\t\t\t}\n\t\t\t\t\tthis._debugServiceProxy.$acceptDAExit(debugAdapterHandle, withNullAsUndefined(code), undefined);\n\t\t\t\t});\n\n\t\t\t\tif (tracker && tracker.onWillStartSession) {\n\t\t\t\t\ttracker.onWillStartSession();\n\t\t\t\t}\n\n\t\t\t\treturn debugAdapter.startSession();\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic $sendDAMessage(debugAdapterHandle: number, message: DebugProtocol.ProtocolMessage): void {\n\n\t\t// VS Code -> DA\n\t\tmessage = convertToDAPaths(message, false);\n\n\t\tconst tracker = this._debugAdaptersTrackers.get(debugAdapterHandle);\t// TODO@AW: same handle?\n\t\tif (tracker && tracker.onWillReceiveMessage) {\n\t\t\ttracker.onWillReceiveMessage(message);\n\t\t}\n\n\t\tconst da = this._debugAdapters.get(debugAdapterHandle);\n\t\tif (da) {\n\t\t\tda.sendMessage(message);\n\t\t}\n\t}\n\n\tpublic $stopDASession(debugAdapterHandle: number): Promise<void> {\n\n\t\tconst tracker = this._debugAdaptersTrackers.get(debugAdapterHandle);\n\t\tthis._debugAdaptersTrackers.delete(debugAdapterHandle);\n\t\tif (tracker && tracker.onWillStopSession) {\n\t\t\ttracker.onWillStopSession();\n\t\t}\n\n\t\tconst da = this._debugAdapters.get(debugAdapterHandle);\n\t\tthis._debugAdapters.delete(debugAdapterHandle);\n\t\tif (da) {\n\t\t\treturn da.stopSession();\n\t\t} else {\n\t\t\treturn Promise.resolve(void 0);\n\t\t}\n\t}\n\n\tpublic $acceptBreakpointsDelta(delta: IBreakpointsDeltaDto): void {\n\n\t\tconst a: vscode.Breakpoint[] = [];\n\t\tconst r: vscode.Breakpoint[] = [];\n\t\tconst c: vscode.Breakpoint[] = [];\n\n\t\tif (delta.added) {\n\t\t\tfor (const bpd of delta.added) {\n\t\t\t\tconst id = bpd.id;\n\t\t\t\tif (id && !this._breakpoints.has(id)) {\n\t\t\t\t\tlet bp: vscode.Breakpoint;\n\t\t\t\t\tif (bpd.type === 'function') {\n\t\t\t\t\t\tbp = new FunctionBreakpoint(bpd.functionName, bpd.enabled, bpd.condition, bpd.hitCondition, bpd.logMessage);\n\t\t\t\t\t} else if (bpd.type === 'data') {\n\t\t\t\t\t\tbp = new DataBreakpoint(bpd.label, bpd.dataId, bpd.canPersist, bpd.enabled, bpd.hitCondition, bpd.condition, bpd.logMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst uri = URI.revive(bpd.uri);\n\t\t\t\t\t\tbp = new SourceBreakpoint(new Location(uri, new Position(bpd.line, bpd.character)), bpd.enabled, bpd.condition, bpd.hitCondition, bpd.logMessage);\n\t\t\t\t\t}\n\t\t\t\t\t(bp as any)._id = id;\n\t\t\t\t\tthis._breakpoints.set(id, bp);\n\t\t\t\t\ta.push(bp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.removed) {\n\t\t\tfor (const id of delta.removed) {\n\t\t\t\tconst bp = this._breakpoints.get(id);\n\t\t\t\tif (bp) {\n\t\t\t\t\tthis._breakpoints.delete(id);\n\t\t\t\t\tr.push(bp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.changed) {\n\t\t\tfor (const bpd of delta.changed) {\n\t\t\t\tif (bpd.id) {\n\t\t\t\t\tconst bp = this._breakpoints.get(bpd.id);\n\t\t\t\t\tif (bp) {\n\t\t\t\t\t\tif (bp instanceof FunctionBreakpoint && bpd.type === 'function') {\n\t\t\t\t\t\t\tconst fbp = <any>bp;\n\t\t\t\t\t\t\tfbp.enabled = bpd.enabled;\n\t\t\t\t\t\t\tfbp.condition = bpd.condition;\n\t\t\t\t\t\t\tfbp.hitCondition = bpd.hitCondition;\n\t\t\t\t\t\t\tfbp.logMessage = bpd.logMessage;\n\t\t\t\t\t\t\tfbp.functionName = bpd.functionName;\n\t\t\t\t\t\t} else if (bp instanceof SourceBreakpoint && bpd.type === 'source') {\n\t\t\t\t\t\t\tconst sbp = <any>bp;\n\t\t\t\t\t\t\tsbp.enabled = bpd.enabled;\n\t\t\t\t\t\t\tsbp.condition = bpd.condition;\n\t\t\t\t\t\t\tsbp.hitCondition = bpd.hitCondition;\n\t\t\t\t\t\t\tsbp.logMessage = bpd.logMessage;\n\t\t\t\t\t\t\tsbp.location = new Location(URI.revive(bpd.uri), new Position(bpd.line, bpd.character));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc.push(bp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.fireBreakpointChanges(a, r, c);\n\t}\n\n\tpublic $provideDebugConfigurations(configProviderHandle: number, folderUri: UriComponents | undefined, token: CancellationToken): Promise<vscode.DebugConfiguration[]> {\n\t\treturn asPromise(async () => {\n\t\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\t\tif (!provider) {\n\t\t\t\tthrow new Error('no DebugConfigurationProvider found');\n\t\t\t}\n\t\t\tif (!provider.provideDebugConfigurations) {\n\t\t\t\tthrow new Error('DebugConfigurationProvider has no method provideDebugConfigurations');\n\t\t\t}\n\t\t\tconst folder = await this.getFolder(folderUri);\n\t\t\treturn provider.provideDebugConfigurations(folder, token);\n\t\t}).then(debugConfigurations => {\n\t\t\tif (!debugConfigurations) {\n\t\t\t\tthrow new Error('nothing returned from DebugConfigurationProvider.provideDebugConfigurations');\n\t\t\t}\n\t\t\treturn debugConfigurations;\n\t\t});\n\t}\n\n\tpublic $resolveDebugConfiguration(configProviderHandle: number, folderUri: UriComponents | undefined, debugConfiguration: vscode.DebugConfiguration, token: CancellationToken): Promise<vscode.DebugConfiguration | null | undefined> {\n\t\treturn asPromise(async () => {\n\t\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\t\tif (!provider) {\n\t\t\t\tthrow new Error('no DebugConfigurationProvider found');\n\t\t\t}\n\t\t\tif (!provider.resolveDebugConfiguration) {\n\t\t\t\tthrow new Error('DebugConfigurationProvider has no method resolveDebugConfiguration');\n\t\t\t}\n\t\t\tconst folder = await this.getFolder(folderUri);\n\t\t\treturn provider.resolveDebugConfiguration(folder, debugConfiguration, token);\n\t\t});\n\t}\n\n\tpublic $resolveDebugConfigurationWithSubstitutedVariables(configProviderHandle: number, folderUri: UriComponents | undefined, debugConfiguration: vscode.DebugConfiguration, token: CancellationToken): Promise<vscode.DebugConfiguration | null | undefined> {\n\t\treturn asPromise(async () => {\n\t\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\t\tif (!provider) {\n\t\t\t\tthrow new Error('no DebugConfigurationProvider found');\n\t\t\t}\n\t\t\tif (!provider.resolveDebugConfigurationWithSubstitutedVariables) {\n\t\t\t\tthrow new Error('DebugConfigurationProvider has no method resolveDebugConfigurationWithSubstitutedVariables');\n\t\t\t}\n\t\t\tconst folder = await this.getFolder(folderUri);\n\t\t\treturn provider.resolveDebugConfigurationWithSubstitutedVariables(folder, debugConfiguration, token);\n\t\t});\n\t}\n\n\t// TODO@AW deprecated and legacy\n\tpublic $legacyDebugAdapterExecutable(configProviderHandle: number, folderUri: UriComponents | undefined): Promise<IAdapterDescriptor> {\n\t\treturn asPromise(async () => {\n\t\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\t\tif (!provider) {\n\t\t\t\tthrow new Error('no DebugConfigurationProvider found');\n\t\t\t}\n\t\t\tif (!provider.debugAdapterExecutable) {\n\t\t\t\tthrow new Error('DebugConfigurationProvider has no method debugAdapterExecutable');\n\t\t\t}\n\t\t\tconst folder = await this.getFolder(folderUri);\n\t\t\treturn provider.debugAdapterExecutable(folder, CancellationToken.None);\n\t\t}).then(executable => {\n\t\t\tif (!executable) {\n\t\t\t\tthrow new Error('nothing returned from DebugConfigurationProvider.debugAdapterExecutable');\n\t\t\t}\n\t\t\treturn this.convertToDto(executable);\n\t\t});\n\t}\n\n\tpublic async $provideDebugAdapter(adapterFactoryHandle: number, sessionDto: IDebugSessionDto): Promise<IAdapterDescriptor> {\n\t\tconst adapterDescriptorFactory = this.getAdapterDescriptorFactoryByHandle(adapterFactoryHandle);\n\t\tif (!adapterDescriptorFactory) {\n\t\t\treturn Promise.reject(new Error('no adapter descriptor factory found for handle'));\n\t\t}\n\t\tconst session = await this.getSession(sessionDto);\n\t\treturn this.getAdapterDescriptor(adapterDescriptorFactory, session).then(adapterDescriptor => {\n\t\t\tif (!adapterDescriptor) {\n\t\t\t\tthrow new Error(`Couldn't find a debug adapter descriptor for debug type '${session.type}'`);\n\t\t\t}\n\t\t\treturn this.convertToDto(adapterDescriptor);\n\t\t});\n\t}\n\n\tpublic async $acceptDebugSessionStarted(sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tthis._onDidStartDebugSession.fire(session);\n\t}\n\n\tpublic async $acceptDebugSessionTerminated(sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tif (session) {\n\t\t\tthis._onDidTerminateDebugSession.fire(session);\n\t\t\tthis._debugSessions.delete(session.id);\n\t\t}\n\t}\n\n\tpublic async $acceptDebugSessionActiveChanged(sessionDto: IDebugSessionDto | undefined): Promise<void> {\n\t\tthis._activeDebugSession = sessionDto ? await this.getSession(sessionDto) : undefined;\n\t\tthis._onDidChangeActiveDebugSession.fire(this._activeDebugSession);\n\t}\n\n\tpublic async $acceptDebugSessionNameChanged(sessionDto: IDebugSessionDto, name: string): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tif (session) {\n\t\t\tsession._acceptNameChanged(name);\n\t\t}\n\t}\n\n\tpublic async $acceptDebugSessionCustomEvent(sessionDto: IDebugSessionDto, event: any): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tconst ee: vscode.DebugSessionCustomEvent = {\n\t\t\tsession: session,\n\t\t\tevent: event.event,\n\t\t\tbody: event.body\n\t\t};\n\t\tthis._onDidReceiveDebugSessionCustomEvent.fire(ee);\n\t}\n\n\t// private & dto helpers\n\n\tprivate convertToDto(x: vscode.DebugAdapterDescriptor): IAdapterDescriptor {\n\n\t\tif (x instanceof DebugAdapterExecutable) {\n\t\t\treturn <IDebugAdapterExecutable>{\n\t\t\t\ttype: 'executable',\n\t\t\t\tcommand: x.command,\n\t\t\t\targs: x.args,\n\t\t\t\toptions: x.options\n\t\t\t};\n\t\t} else if (x instanceof DebugAdapterServer) {\n\t\t\treturn <IDebugAdapterServer>{\n\t\t\t\ttype: 'server',\n\t\t\t\tport: x.port,\n\t\t\t\thost: x.host\n\t\t\t};\n\t\t} else if (x instanceof DebugAdapterInlineImplementation) {\n\t\t\treturn <IDebugAdapterImpl>{\n\t\t\t\ttype: 'implementation',\n\t\t\t\timplementation: x.implementation\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new Error('convertToDto unexpected type');\n\t\t}\n\t}\n\n\tprivate getAdapterDescriptorFactoryByType(type: string): vscode.DebugAdapterDescriptorFactory | undefined {\n\t\tconst results = this._adapterFactories.filter(p => p.type === type);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].factory;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getAdapterDescriptorFactoryByHandle(handle: number): vscode.DebugAdapterDescriptorFactory | undefined {\n\t\tconst results = this._adapterFactories.filter(p => p.handle === handle);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].factory;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getConfigProviderByHandle(handle: number): vscode.DebugConfigurationProvider | undefined {\n\t\tconst results = this._configProviders.filter(p => p.handle === handle);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].provider;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate definesDebugType(ed: IExtensionDescription, type: string) {\n\t\tif (ed.contributes) {\n\t\t\tconst debuggers = <IDebuggerContribution[]>ed.contributes['debuggers'];\n\t\t\tif (debuggers && debuggers.length > 0) {\n\t\t\t\tfor (const dbg of debuggers) {\n\t\t\t\t\t// only debugger contributions with a \"label\" are considered a \"defining\" debugger contribution\n\t\t\t\t\tif (dbg.label && dbg.type) {\n\t\t\t\t\t\tif (dbg.type === type) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate getDebugAdapterTrackers(session: ExtHostDebugSession): Promise<vscode.DebugAdapterTracker | undefined> {\n\n\t\tconst config = session.configuration;\n\t\tconst type = config.type;\n\n\t\tconst promises = this._trackerFactories\n\t\t\t.filter(tuple => tuple.type === type || tuple.type === '*')\n\t\t\t.map(tuple => asPromise<vscode.ProviderResult<vscode.DebugAdapterTracker>>(() => tuple.factory.createDebugAdapterTracker(session)).then(p => p, err => null));\n\n\t\treturn Promise.race([\n\t\t\tPromise.all(promises).then(result => {\n\t\t\t\tconst trackers = <vscode.DebugAdapterTracker[]>result.filter(t => !!t);\t// filter null\n\t\t\t\tif (trackers.length > 0) {\n\t\t\t\t\treturn new MultiTracker(trackers);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnew Promise<never>((resolve, reject) => {\n\t\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\treject(new Error('timeout'));\n\t\t\t\t}, 1000);\n\t\t\t})\n\t\t]).catch(err => {\n\t\t\t// ignore errors\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate async getAdapterDescriptor(adapterDescriptorFactory: vscode.DebugAdapterDescriptorFactory | undefined, session: ExtHostDebugSession): Promise<vscode.DebugAdapterDescriptor | undefined> {\n\n\t\t// a \"debugServer\" attribute in the launch config takes precedence\n\t\tconst serverPort = session.configuration.debugServer;\n\t\tif (typeof serverPort === 'number') {\n\t\t\treturn Promise.resolve(new DebugAdapterServer(serverPort));\n\t\t}\n\n\t\t// TODO@AW legacy\n\t\tconst pair = this._configProviders.filter(p => p.type === session.type).pop();\n\t\tif (pair && pair.provider.debugAdapterExecutable) {\n\t\t\tconst func = pair.provider.debugAdapterExecutable;\n\t\t\treturn asPromise(() => func(session.workspaceFolder, CancellationToken.None)).then(executable => {\n\t\t\t\tif (executable) {\n\t\t\t\t\treturn executable;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tif (adapterDescriptorFactory) {\n\t\t\tconst extensionRegistry = await this._extensionService.getExtensionRegistry();\n\t\t\treturn asPromise(() => adapterDescriptorFactory.createDebugAdapterDescriptor(session, this.daExecutableFromPackage(session, extensionRegistry))).then(daDescriptor => {\n\t\t\t\tif (daDescriptor) {\n\t\t\t\t\treturn daDescriptor;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\t// try deprecated command based extension API \"adapterExecutableCommand\" to determine the executable\n\t\t// TODO@AW legacy\n\t\tconst aex = this._aexCommands.get(session.type);\n\t\tif (aex) {\n\t\t\tconst folder = session.workspaceFolder;\n\t\t\tconst rootFolder = folder ? folder.uri.toString() : undefined;\n\t\t\treturn this._commandService.executeCommand(aex, rootFolder).then((ae: any) => {\n\t\t\t\treturn new DebugAdapterExecutable(ae.command, ae.args || []);\n\t\t\t});\n\t\t}\n\n\t\t// fallback: use executable information from package.json\n\t\tconst extensionRegistry = await this._extensionService.getExtensionRegistry();\n\t\treturn Promise.resolve(this.daExecutableFromPackage(session, extensionRegistry));\n\t}\n\n\tprotected daExecutableFromPackage(session: ExtHostDebugSession, extensionRegistry: ExtensionDescriptionRegistry): DebugAdapterExecutable | undefined {\n\t\treturn undefined;\n\t}\n\n\tprivate startBreakpoints() {\n\t\tif (!this._breakpointEventsActive) {\n\t\t\tthis._breakpointEventsActive = true;\n\t\t\tthis._debugServiceProxy.$startBreakpointEvents();\n\t\t}\n\t}\n\n\tprivate fireBreakpointChanges(added: vscode.Breakpoint[], removed: vscode.Breakpoint[], changed: vscode.Breakpoint[]) {\n\t\tif (added.length > 0 || removed.length > 0 || changed.length > 0) {\n\t\t\tthis._onDidChangeBreakpoints.fire(Object.freeze({\n\t\t\t\tadded,\n\t\t\t\tremoved,\n\t\t\t\tchanged,\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async getSession(dto: IDebugSessionDto): Promise<ExtHostDebugSession> {\n\t\tif (dto) {\n\t\t\tif (typeof dto === 'string') {\n\t\t\t\tconst ds = this._debugSessions.get(dto);\n\t\t\t\tif (ds) {\n\t\t\t\t\treturn ds;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet ds = this._debugSessions.get(dto.id);\n\t\t\t\tif (!ds) {\n\t\t\t\t\tconst folder = await this.getFolder(dto.folderUri);\n\t\t\t\t\tds = new ExtHostDebugSession(this._debugServiceProxy, dto.id, dto.type, dto.name, folder, dto.configuration);\n\t\t\t\t\tthis._debugSessions.set(ds.id, ds);\n\t\t\t\t\tthis._debugServiceProxy.$sessionCached(ds.id);\n\t\t\t\t}\n\t\t\t\treturn ds;\n\t\t\t}\n\t\t}\n\t\tthrow new Error('cannot find session');\n\t}\n\n\tprivate getFolder(_folderUri: UriComponents | undefined): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tif (_folderUri) {\n\t\t\tconst folderURI = URI.revive(_folderUri);\n\t\t\treturn this._workspaceService.resolveWorkspaceFolder(folderURI);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nexport class ExtHostDebugSession implements vscode.DebugSession {\n\n\tconstructor(\n\t\tprivate _debugServiceProxy: MainThreadDebugServiceShape,\n\t\tprivate _id: DebugSessionUUID,\n\t\tprivate _type: string,\n\t\tprivate _name: string,\n\t\tprivate _workspaceFolder: vscode.WorkspaceFolder | undefined,\n\t\tprivate _configuration: vscode.DebugConfiguration) {\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get type(): string {\n\t\treturn this._type;\n\t}\n\n\tpublic get name(): string {\n\t\treturn this._name;\n\t}\n\n\tpublic set name(name: string) {\n\t\tthis._name = name;\n\t\tthis._debugServiceProxy.$setDebugSessionName(this._id, name);\n\t}\n\n\t_acceptNameChanged(name: string) {\n\t\tthis._name = name;\n\t}\n\n\tpublic get workspaceFolder(): vscode.WorkspaceFolder | undefined {\n\t\treturn this._workspaceFolder;\n\t}\n\n\tpublic get configuration(): vscode.DebugConfiguration {\n\t\treturn this._configuration;\n\t}\n\n\tpublic customRequest(command: string, args: any): Promise<any> {\n\t\treturn this._debugServiceProxy.$customDebugAdapterRequest(this._id, command, args);\n\t}\n}\n\nexport class ExtHostDebugConsole implements vscode.DebugConsole {\n\n\tprivate _debugServiceProxy: MainThreadDebugServiceShape;\n\n\tconstructor(proxy: MainThreadDebugServiceShape) {\n\t\tthis._debugServiceProxy = proxy;\n\t}\n\n\tappend(value: string): void {\n\t\tthis._debugServiceProxy.$appendDebugConsole(value);\n\t}\n\n\tappendLine(value: string): void {\n\t\tthis.append(value + '\\n');\n\t}\n}\n\nexport class ExtHostVariableResolverService extends AbstractVariableResolverService {\n\n\tconstructor(folders: vscode.WorkspaceFolder[], editorService: ExtHostDocumentsAndEditors, configurationService: ExtHostConfigProvider, env?: IProcessEnvironment) {\n\t\tsuper({\n\t\t\tgetFolderUri: (folderName: string): URI | undefined => {\n\t\t\t\tconst found = folders.filter(f => f.name === folderName);\n\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\treturn found[0].uri;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn folders.length;\n\t\t\t},\n\t\t\tgetConfigurationValue: (folderUri: URI, section: string): string | undefined => {\n\t\t\t\treturn configurationService.getConfiguration(undefined, folderUri).get<string>(section);\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn env ? env['VSCODE_EXEC_PATH'] : undefined;\n\t\t\t},\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\treturn path.normalize(activeEditor.document.uri.fsPath);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor && !activeEditor.selection.isEmpty) {\n\t\t\t\t\treturn activeEditor.document.getText(activeEditor.selection);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\treturn String(activeEditor.selection.end.line + 1);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}, env);\n\t}\n}\n\ninterface ConfigProviderTuple {\n\ttype: string;\n\thandle: number;\n\tprovider: vscode.DebugConfigurationProvider;\n}\n\ninterface DescriptorFactoryTuple {\n\ttype: string;\n\thandle: number;\n\tfactory: vscode.DebugAdapterDescriptorFactory;\n}\n\ninterface TrackerFactoryTuple {\n\ttype: string;\n\thandle: number;\n\tfactory: vscode.DebugAdapterTrackerFactory;\n}\n\nclass MultiTracker implements vscode.DebugAdapterTracker {\n\n\tconstructor(private trackers: vscode.DebugAdapterTracker[]) {\n\t}\n\n\tonWillStartSession(): void {\n\t\tthis.trackers.forEach(t => t.onWillStartSession ? t.onWillStartSession() : undefined);\n\t}\n\n\tonWillReceiveMessage(message: any): void {\n\t\tthis.trackers.forEach(t => t.onWillReceiveMessage ? t.onWillReceiveMessage(message) : undefined);\n\t}\n\n\tonDidSendMessage(message: any): void {\n\t\tthis.trackers.forEach(t => t.onDidSendMessage ? t.onDidSendMessage(message) : undefined);\n\t}\n\n\tonWillStopSession(): void {\n\t\tthis.trackers.forEach(t => t.onWillStopSession ? t.onWillStopSession() : undefined);\n\t}\n\n\tonError(error: Error): void {\n\t\tthis.trackers.forEach(t => t.onError ? t.onError(error) : undefined);\n\t}\n\n\tonExit(code: number, signal: string): void {\n\t\tthis.trackers.forEach(t => t.onExit ? t.onExit(code, signal) : undefined);\n\t}\n}\n\n/*\n * Call directly into a debug adapter implementation\n */\nclass DirectDebugAdapter extends AbstractDebugAdapter {\n\n\tconstructor(private implementation: vscode.DebugAdapter) {\n\t\tsuper();\n\n\t\timplementation.onDidSendMessage((message: vscode.DebugProtocolMessage) => {\n\t\t\tthis.acceptMessage(message as DebugProtocol.ProtocolMessage);\n\t\t});\n\t}\n\n\tstartSession(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tsendMessage(message: DebugProtocol.ProtocolMessage): void {\n\t\tthis.implementation.handleMessage(message);\n\t}\n\n\tstopSession(): Promise<void> {\n\t\tthis.implementation.dispose();\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\n\nexport class WorkerExtHostDebugService extends ExtHostDebugServiceBase {\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpcService: IExtHostRpcService,\n\t\t@IExtHostWorkspace workspaceService: IExtHostWorkspace,\n\t\t@IExtHostExtensionService extensionService: IExtHostExtensionService,\n\t\t@IExtHostDocumentsAndEditors editorsService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration configurationService: IExtHostConfiguration,\n\t\t@IExtHostCommands commandService: IExtHostCommands\n\t) {\n\t\tsuper(extHostRpcService, workspaceService, extensionService, editorsService, configurationService, commandService);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { MainThreadTelemetryShape, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostConfigProvider, IExtHostConfiguration } from 'vs/workbench/api/common/extHostConfiguration';\nimport { nullExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\nimport * as vscode from 'vscode';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IExtensionApiFactory } from 'vs/workbench/api/common/extHost.api.impl';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { platform } from 'vs/base/common/process';\nimport { ILogService } from 'vs/platform/log/common/log';\n\n\ninterface LoadFunction {\n\t(request: string): any;\n}\n\ninterface INodeModuleFactory {\n\treadonly nodeModuleName: string | string[];\n\tload(request: string, parent: URI, original: LoadFunction): any;\n\talternativeModuleName?(name: string): string | undefined;\n}\n\nexport abstract class RequireInterceptor {\n\n\tprotected readonly _factories: Map<string, INodeModuleFactory>;\n\tprotected readonly _alternatives: ((moduleName: string) => string | undefined)[];\n\n\tconstructor(\n\t\tprivate _apiFactory: IExtensionApiFactory,\n\t\tprivate _extensionRegistry: ExtensionDescriptionRegistry,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@IExtHostConfiguration private readonly _extHostConfiguration: IExtHostConfiguration,\n\t\t@IExtHostExtensionService private readonly _extHostExtensionService: IExtHostExtensionService,\n\t\t@IExtHostInitDataService private readonly _initData: IExtHostInitDataService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._factories = new Map<string, INodeModuleFactory>();\n\t\tthis._alternatives = [];\n\t}\n\n\tasync install(): Promise<void> {\n\n\t\tthis._installInterceptor();\n\n\t\tconst configProvider = await this._extHostConfiguration.getConfigProvider();\n\t\tconst extensionPaths = await this._extHostExtensionService.getExtensionPathIndex();\n\n\t\tthis.register(new VSCodeNodeModuleFactory(this._apiFactory, extensionPaths, this._extensionRegistry, configProvider, this._logService));\n\t\tthis.register(this._instaService.createInstance(KeytarNodeModuleFactory));\n\t\tif (this._initData.remote.isRemote) {\n\t\t\tthis.register(this._instaService.createInstance(OpenNodeModuleFactory, extensionPaths, this._initData.environment.appUriScheme));\n\t\t}\n\t}\n\n\tprotected abstract _installInterceptor(): void;\n\n\tpublic register(interceptor: INodeModuleFactory): void {\n\t\tif (Array.isArray(interceptor.nodeModuleName)) {\n\t\t\tfor (let moduleName of interceptor.nodeModuleName) {\n\t\t\t\tthis._factories.set(moduleName, interceptor);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._factories.set(interceptor.nodeModuleName, interceptor);\n\t\t}\n\t\tif (typeof interceptor.alternativeModuleName === 'function') {\n\t\t\tthis._alternatives.push((moduleName) => {\n\t\t\t\treturn interceptor.alternativeModuleName!(moduleName);\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region --- vscode-module\n\nclass VSCodeNodeModuleFactory implements INodeModuleFactory {\n\tpublic readonly nodeModuleName = 'vscode';\n\n\tprivate readonly _extApiImpl = new Map<string, typeof vscode>();\n\tprivate _defaultApiImpl?: typeof vscode;\n\n\tconstructor(\n\t\tprivate readonly _apiFactory: IExtensionApiFactory,\n\t\tprivate readonly _extensionPaths: TernarySearchTree<string, IExtensionDescription>,\n\t\tprivate readonly _extensionRegistry: ExtensionDescriptionRegistry,\n\t\tprivate readonly _configProvider: ExtHostConfigProvider,\n\t\tprivate readonly _logService: ILogService,\n\t) {\n\t}\n\n\tpublic load(_request: string, parent: URI): any {\n\n\t\t// get extension id from filename and api for extension\n\t\tconst ext = this._extensionPaths.findSubstr(parent.fsPath);\n\t\tif (ext) {\n\t\t\tlet apiImpl = this._extApiImpl.get(ExtensionIdentifier.toKey(ext.identifier));\n\t\t\tif (!apiImpl) {\n\t\t\t\tapiImpl = this._apiFactory(ext, this._extensionRegistry, this._configProvider);\n\t\t\t\tthis._extApiImpl.set(ExtensionIdentifier.toKey(ext.identifier), apiImpl);\n\t\t\t}\n\t\t\treturn apiImpl;\n\t\t}\n\n\t\t// fall back to a default implementation\n\t\tif (!this._defaultApiImpl) {\n\t\t\tlet extensionPathsPretty = '';\n\t\t\tthis._extensionPaths.forEach((value, index) => extensionPathsPretty += `\\t${index} -> ${value.identifier.value}\\n`);\n\t\t\tthis._logService.warn(`Could not identify extension for 'vscode' require call from ${parent.fsPath}. These are the extension path mappings: \\n${extensionPathsPretty}`);\n\t\t\tthis._defaultApiImpl = this._apiFactory(nullExtensionDescription, this._extensionRegistry, this._configProvider);\n\t\t}\n\t\treturn this._defaultApiImpl;\n\t}\n}\n\n//#endregion\n\n\n//#region --- keytar-module\n\ninterface IKeytarModule {\n\tgetPassword(service: string, account: string): Promise<string | null>;\n\tsetPassword(service: string, account: string, password: string): Promise<void>;\n\tdeletePassword(service: string, account: string): Promise<boolean>;\n\tfindPassword(service: string): Promise<string | null>;\n\tfindCredentials(service: string): Promise<Array<{ account: string, password: string }>>;\n}\n\nclass KeytarNodeModuleFactory implements INodeModuleFactory {\n\tpublic readonly nodeModuleName: string = 'keytar';\n\n\tprivate alternativeNames: Set<string> | undefined;\n\tprivate _impl: IKeytarModule;\n\n\tconstructor(\n\t\t@IExtHostRpcService rpcService: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\n\t) {\n\t\tconst { environment } = initData;\n\t\tconst mainThreadKeytar = rpcService.getProxy(MainContext.MainThreadKeytar);\n\n\t\tif (environment.appRoot) {\n\t\t\tlet appRoot = environment.appRoot.fsPath;\n\t\t\tif (platform === 'win32') {\n\t\t\t\tappRoot = appRoot.replace(/\\\\/g, '/');\n\t\t\t}\n\t\t\tif (appRoot[appRoot.length - 1] === '/') {\n\t\t\t\tappRoot = appRoot.substr(0, appRoot.length - 1);\n\t\t\t}\n\t\t\tthis.alternativeNames = new Set();\n\t\t\tthis.alternativeNames.add(`${appRoot}/node_modules.asar/keytar`);\n\t\t\tthis.alternativeNames.add(`${appRoot}/node_modules/keytar`);\n\t\t}\n\t\tthis._impl = {\n\t\t\tgetPassword: (service: string, account: string): Promise<string | null> => {\n\t\t\t\treturn mainThreadKeytar.$getPassword(service, account);\n\t\t\t},\n\t\t\tsetPassword: (service: string, account: string, password: string): Promise<void> => {\n\t\t\t\treturn mainThreadKeytar.$setPassword(service, account, password);\n\t\t\t},\n\t\t\tdeletePassword: (service: string, account: string): Promise<boolean> => {\n\t\t\t\treturn mainThreadKeytar.$deletePassword(service, account);\n\t\t\t},\n\t\t\tfindPassword: (service: string): Promise<string | null> => {\n\t\t\t\treturn mainThreadKeytar.$findPassword(service);\n\t\t\t},\n\t\t\tfindCredentials(service: string): Promise<Array<{ account: string, password: string }>> {\n\t\t\t\treturn mainThreadKeytar.$findCredentials(service);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic load(_request: string, _parent: URI): any {\n\t\treturn this._impl;\n\t}\n\n\tpublic alternativeModuleName(name: string): string | undefined {\n\t\tconst length = name.length;\n\t\t// We need at least something like: `?/keytar` which requires\n\t\t// more than 7 characters.\n\t\tif (length <= 7 || !this.alternativeNames) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst sep = length - 7;\n\t\tif ((name.charAt(sep) === '/' || name.charAt(sep) === '\\\\') && name.endsWith('keytar')) {\n\t\t\tname = name.replace(/\\\\/g, '/');\n\t\t\tif (this.alternativeNames.has(name)) {\n\t\t\t\treturn 'keytar';\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n//#endregion\n\n\n//#region --- opn/open-module\n\ninterface OpenOptions {\n\twait: boolean;\n\tapp: string | string[];\n}\n\ninterface IOriginalOpen {\n\t(target: string, options?: OpenOptions): Thenable<any>;\n}\n\ninterface IOpenModule {\n\t(target: string, options?: OpenOptions): Thenable<void>;\n}\n\nclass OpenNodeModuleFactory implements INodeModuleFactory {\n\n\tpublic readonly nodeModuleName: string[] = ['open', 'opn'];\n\n\tprivate _extensionId: string | undefined;\n\tprivate _original?: IOriginalOpen;\n\tprivate _impl: IOpenModule;\n\tprivate _mainThreadTelemetry: MainThreadTelemetryShape;\n\n\tconstructor(\n\t\tprivate readonly _extensionPaths: TernarySearchTree<string, IExtensionDescription>,\n\t\tprivate readonly _appUriScheme: string,\n\t\t@IExtHostRpcService rpcService: IExtHostRpcService,\n\t) {\n\n\t\tthis._mainThreadTelemetry = rpcService.getProxy(MainContext.MainThreadTelemetry);\n\t\tconst mainThreadWindow = rpcService.getProxy(MainContext.MainThreadWindow);\n\n\t\tthis._impl = (target, options) => {\n\t\t\tconst uri: URI = URI.parse(target);\n\t\t\t// If we have options use the original method.\n\t\t\tif (options) {\n\t\t\t\treturn this.callOriginal(target, options);\n\t\t\t}\n\t\t\tif (uri.scheme === 'http' || uri.scheme === 'https') {\n\t\t\t\treturn mainThreadWindow.$openUri(uri, target, { allowTunneling: true });\n\t\t\t} else if (uri.scheme === 'mailto' || uri.scheme === this._appUriScheme) {\n\t\t\t\treturn mainThreadWindow.$openUri(uri, target, {});\n\t\t\t}\n\t\t\treturn this.callOriginal(target, options);\n\t\t};\n\t}\n\n\tpublic load(request: string, parent: URI, original: LoadFunction): any {\n\t\t// get extension id from filename and api for extension\n\t\tconst extension = this._extensionPaths.findSubstr(parent.fsPath);\n\t\tif (extension) {\n\t\t\tthis._extensionId = extension.identifier.value;\n\t\t\tthis.sendShimmingTelemetry();\n\t\t}\n\n\t\tthis._original = original(request);\n\t\treturn this._impl;\n\t}\n\n\tprivate callOriginal(target: string, options: OpenOptions | undefined): Thenable<any> {\n\t\tthis.sendNoForwardTelemetry();\n\t\treturn this._original!(target, options);\n\t}\n\n\tprivate sendShimmingTelemetry(): void {\n\t\tif (!this._extensionId) {\n\t\t\treturn;\n\t\t}\n\t\ttype ShimmingOpenClassification = {\n\t\t\textension: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t};\n\t\tthis._mainThreadTelemetry.$publicLog2<{ extension: string }, ShimmingOpenClassification>('shimming.open', { extension: this._extensionId });\n\t}\n\n\tprivate sendNoForwardTelemetry(): void {\n\t\tif (!this._extensionId) {\n\t\t\treturn;\n\t\t}\n\t\ttype ShimmingOpenCallNoForwardClassification = {\n\t\t\textension: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t};\n\t\tthis._mainThreadTelemetry.$publicLog2<{ extension: string }, ShimmingOpenCallNoForwardClassification>('shimming.open.call.noForward', { extension: this._extensionId });\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as Objects from 'vs/base/common/objects';\nimport { asPromise } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nimport { MainContext, MainThreadTaskShape, ExtHostTaskShape } from 'vs/workbench/api/common/extHost.protocol';\n\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport { IExtHostWorkspaceProvider, IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport type * as vscode from 'vscode';\nimport * as tasks from '../common/shared/tasks';\nimport { IExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { IExtHostConfiguration } from 'vs/workbench/api/common/extHostConfiguration';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IExtHostTerminalService } from 'vs/workbench/api/common/extHostTerminalService';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport * as Platform from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtHostApiDeprecationService } from 'vs/workbench/api/common/extHostApiDeprecationService';\nimport { USER_TASKS_GROUP_KEY } from 'vs/workbench/contrib/tasks/common/taskService';\n\nexport interface IExtHostTask extends ExtHostTaskShape {\n\n\treadonly _serviceBrand: undefined;\n\n\ttaskExecutions: vscode.TaskExecution[];\n\tonDidStartTask: Event<vscode.TaskStartEvent>;\n\tonDidEndTask: Event<vscode.TaskEndEvent>;\n\tonDidStartTaskProcess: Event<vscode.TaskProcessStartEvent>;\n\tonDidEndTaskProcess: Event<vscode.TaskProcessEndEvent>;\n\n\tregisterTaskProvider(extension: IExtensionDescription, type: string, provider: vscode.TaskProvider): vscode.Disposable;\n\tregisterTaskSystem(scheme: string, info: tasks.TaskSystemInfoDTO): void;\n\tfetchTasks(filter?: vscode.TaskFilter): Promise<vscode.Task[]>;\n\texecuteTask(extension: IExtensionDescription, task: vscode.Task): Promise<vscode.TaskExecution>;\n\tterminateTask(execution: vscode.TaskExecution): Promise<void>;\n}\n\nexport namespace TaskDefinitionDTO {\n\texport function from(value: vscode.TaskDefinition): tasks.TaskDefinitionDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: tasks.TaskDefinitionDTO): vscode.TaskDefinition | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport namespace TaskPresentationOptionsDTO {\n\texport function from(value: vscode.TaskPresentationOptions): tasks.TaskPresentationOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: tasks.TaskPresentationOptionsDTO): vscode.TaskPresentationOptions | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport namespace ProcessExecutionOptionsDTO {\n\texport function from(value: vscode.ProcessExecutionOptions): tasks.ProcessExecutionOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: tasks.ProcessExecutionOptionsDTO): vscode.ProcessExecutionOptions | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport namespace ProcessExecutionDTO {\n\texport function is(value: tasks.ShellExecutionDTO | tasks.ProcessExecutionDTO | tasks.CustomExecutionDTO | undefined): value is tasks.ProcessExecutionDTO {\n\t\tif (value) {\n\t\t\tconst candidate = value as tasks.ProcessExecutionDTO;\n\t\t\treturn candidate && !!candidate.process;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\texport function from(value: vscode.ProcessExecution): tasks.ProcessExecutionDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: tasks.ProcessExecutionDTO = {\n\t\t\tprocess: value.process,\n\t\t\targs: value.args\n\t\t};\n\t\tif (value.options) {\n\t\t\tresult.options = ProcessExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: tasks.ProcessExecutionDTO): types.ProcessExecution | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new types.ProcessExecution(value.process, value.args, value.options);\n\t}\n}\n\nexport namespace ShellExecutionOptionsDTO {\n\texport function from(value: vscode.ShellExecutionOptions): tasks.ShellExecutionOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: tasks.ShellExecutionOptionsDTO): vscode.ShellExecutionOptions | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport namespace ShellExecutionDTO {\n\texport function is(value: tasks.ShellExecutionDTO | tasks.ProcessExecutionDTO | tasks.CustomExecutionDTO | undefined): value is tasks.ShellExecutionDTO {\n\t\tif (value) {\n\t\t\tconst candidate = value as tasks.ShellExecutionDTO;\n\t\t\treturn candidate && (!!candidate.commandLine || !!candidate.command);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\texport function from(value: vscode.ShellExecution): tasks.ShellExecutionDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: tasks.ShellExecutionDTO = {\n\t\t};\n\t\tif (value.commandLine !== undefined) {\n\t\t\tresult.commandLine = value.commandLine;\n\t\t} else {\n\t\t\tresult.command = value.command;\n\t\t\tresult.args = value.args;\n\t\t}\n\t\tif (value.options) {\n\t\t\tresult.options = ShellExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: tasks.ShellExecutionDTO): types.ShellExecution | undefined {\n\t\tif (value === undefined || value === null || (value.command === undefined && value.commandLine === undefined)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (value.commandLine) {\n\t\t\treturn new types.ShellExecution(value.commandLine, value.options);\n\t\t} else {\n\t\t\treturn new types.ShellExecution(value.command!, value.args ? value.args : [], value.options);\n\t\t}\n\t}\n}\n\nexport namespace CustomExecutionDTO {\n\texport function is(value: tasks.ShellExecutionDTO | tasks.ProcessExecutionDTO | tasks.CustomExecutionDTO | undefined): value is tasks.CustomExecutionDTO {\n\t\tif (value) {\n\t\t\tlet candidate = value as tasks.CustomExecutionDTO;\n\t\t\treturn candidate && candidate.customExecution === 'customExecution';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function from(value: vscode.CustomExecution): tasks.CustomExecutionDTO {\n\t\treturn {\n\t\t\tcustomExecution: 'customExecution'\n\t\t};\n\t}\n}\n\n\nexport namespace TaskHandleDTO {\n\texport function from(value: types.Task): tasks.TaskHandleDTO {\n\t\tlet folder: UriComponents | string;\n\t\tif (value.scope !== undefined && typeof value.scope !== 'number') {\n\t\t\tfolder = value.scope.uri;\n\t\t} else if (value.scope !== undefined && typeof value.scope === 'number') {\n\t\t\tfolder = USER_TASKS_GROUP_KEY;\n\t\t}\n\t\treturn {\n\t\t\tid: value._id!,\n\t\t\tworkspaceFolder: folder!\n\t\t};\n\t}\n}\n\nexport namespace TaskDTO {\n\texport function fromMany(tasks: vscode.Task[], extension: IExtensionDescription): tasks.TaskDTO[] {\n\t\tif (tasks === undefined || tasks === null) {\n\t\t\treturn [];\n\t\t}\n\t\tconst result: tasks.TaskDTO[] = [];\n\t\tfor (let task of tasks) {\n\t\t\tconst converted = from(task, extension);\n\t\t\tif (converted) {\n\t\t\t\tresult.push(converted);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\texport function from(value: vscode.Task, extension: IExtensionDescription): tasks.TaskDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet execution: tasks.ShellExecutionDTO | tasks.ProcessExecutionDTO | tasks.CustomExecutionDTO | undefined;\n\t\tif (value.execution instanceof types.ProcessExecution) {\n\t\t\texecution = ProcessExecutionDTO.from(value.execution);\n\t\t} else if (value.execution instanceof types.ShellExecution) {\n\t\t\texecution = ShellExecutionDTO.from(value.execution);\n\t\t} else if (value.execution && value.execution instanceof types.CustomExecution) {\n\t\t\texecution = CustomExecutionDTO.from(<types.CustomExecution>value.execution);\n\t\t}\n\n\t\tconst definition: tasks.TaskDefinitionDTO | undefined = TaskDefinitionDTO.from(value.definition);\n\t\tlet scope: number | UriComponents;\n\t\tif (value.scope) {\n\t\t\tif (typeof value.scope === 'number') {\n\t\t\t\tscope = value.scope;\n\t\t\t} else {\n\t\t\t\tscope = value.scope.uri;\n\t\t\t}\n\t\t} else {\n\t\t\t// To continue to support the deprecated task constructor that doesn't take a scope, we must add a scope here:\n\t\t\tscope = types.TaskScope.Workspace;\n\t\t}\n\t\tif (!definition || !scope) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst group = (value.group as types.TaskGroup) ? (value.group as types.TaskGroup).id : undefined;\n\t\tconst result: tasks.TaskDTO = {\n\t\t\t_id: (value as types.Task)._id!,\n\t\t\tdefinition,\n\t\t\tname: value.name,\n\t\t\tsource: {\n\t\t\t\textensionId: extension.identifier.value,\n\t\t\t\tlabel: value.source,\n\t\t\t\tscope: scope\n\t\t\t},\n\t\t\texecution: execution!,\n\t\t\tisBackground: value.isBackground,\n\t\t\tgroup: group,\n\t\t\tpresentationOptions: TaskPresentationOptionsDTO.from(value.presentationOptions),\n\t\t\tproblemMatchers: value.problemMatchers,\n\t\t\thasDefinedMatchers: (value as types.Task).hasDefinedMatchers,\n\t\t\trunOptions: (<vscode.Task>value).runOptions ? (<vscode.Task>value).runOptions : { reevaluateOnRerun: true },\n\t\t\tdetail: (<vscode.Task2>value).detail\n\t\t};\n\t\treturn result;\n\t}\n\texport async function to(value: tasks.TaskDTO | undefined, workspace: IExtHostWorkspaceProvider): Promise<types.Task | undefined> {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet execution: types.ShellExecution | types.ProcessExecution | undefined;\n\t\tif (ProcessExecutionDTO.is(value.execution)) {\n\t\t\texecution = ProcessExecutionDTO.to(value.execution);\n\t\t} else if (ShellExecutionDTO.is(value.execution)) {\n\t\t\texecution = ShellExecutionDTO.to(value.execution);\n\t\t}\n\t\tconst definition: vscode.TaskDefinition | undefined = TaskDefinitionDTO.to(value.definition);\n\t\tlet scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined;\n\t\tif (value.source) {\n\t\t\tif (value.source.scope !== undefined) {\n\t\t\t\tif (typeof value.source.scope === 'number') {\n\t\t\t\t\tscope = value.source.scope;\n\t\t\t\t} else {\n\t\t\t\t\tscope = await workspace.resolveWorkspaceFolder(URI.revive(value.source.scope));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscope = types.TaskScope.Workspace;\n\t\t\t}\n\t\t}\n\t\tif (!definition || !scope) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result = new types.Task(definition, scope, value.name!, value.source.label, execution, value.problemMatchers);\n\t\tif (value.isBackground !== undefined) {\n\t\t\tresult.isBackground = value.isBackground;\n\t\t}\n\t\tif (value.group !== undefined) {\n\t\t\tresult.group = types.TaskGroup.from(value.group);\n\t\t}\n\t\tif (value.presentationOptions) {\n\t\t\tresult.presentationOptions = TaskPresentationOptionsDTO.to(value.presentationOptions)!;\n\t\t}\n\t\tif (value._id) {\n\t\t\tresult._id = value._id;\n\t\t}\n\t\tif (value.detail) {\n\t\t\tresult.detail = value.detail;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport namespace TaskFilterDTO {\n\texport function from(value: vscode.TaskFilter | undefined): tasks.TaskFilterDTO | undefined {\n\t\treturn value;\n\t}\n\n\texport function to(value: tasks.TaskFilterDTO): vscode.TaskFilter | undefined {\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn Objects.assign(Object.create(null), value);\n\t}\n}\n\nclass TaskExecutionImpl implements vscode.TaskExecution {\n\n\tconstructor(private readonly _tasks: ExtHostTaskBase, readonly _id: string, private readonly _task: vscode.Task) {\n\t}\n\n\tpublic get task(): vscode.Task {\n\t\treturn this._task;\n\t}\n\n\tpublic terminate(): void {\n\t\tthis._tasks.terminateTask(this);\n\t}\n\n\tpublic fireDidStartProcess(value: tasks.TaskProcessStartedDTO): void {\n\t}\n\n\tpublic fireDidEndProcess(value: tasks.TaskProcessEndedDTO): void {\n\t}\n}\n\nexport namespace TaskExecutionDTO {\n\texport async function to(value: tasks.TaskExecutionDTO, tasks: ExtHostTaskBase, workspaceProvider: IExtHostWorkspaceProvider): Promise<vscode.TaskExecution> {\n\t\tconst task = await TaskDTO.to(value.task, workspaceProvider);\n\t\tif (!task) {\n\t\t\tthrow new Error('Unexpected: Task cannot be created.');\n\t\t}\n\t\treturn new TaskExecutionImpl(tasks, value.id, task);\n\t}\n\texport function from(value: vscode.TaskExecution): tasks.TaskExecutionDTO {\n\t\treturn {\n\t\t\tid: (value as TaskExecutionImpl)._id,\n\t\t\ttask: undefined\n\t\t};\n\t}\n}\n\nexport interface HandlerData {\n\ttype: string;\n\tprovider: vscode.TaskProvider;\n\textension: IExtensionDescription;\n}\n\nexport abstract class ExtHostTaskBase implements ExtHostTaskShape {\n\treadonly _serviceBrand: undefined;\n\n\tprotected readonly _proxy: MainThreadTaskShape;\n\tprotected readonly _workspaceProvider: IExtHostWorkspaceProvider;\n\tprotected readonly _editorService: IExtHostDocumentsAndEditors;\n\tprotected readonly _configurationService: IExtHostConfiguration;\n\tprotected readonly _terminalService: IExtHostTerminalService;\n\tprotected readonly _logService: ILogService;\n\tprotected readonly _deprecationService: IExtHostApiDeprecationService;\n\tprotected _handleCounter: number;\n\tprotected _handlers: Map<number, HandlerData>;\n\tprotected _taskExecutions: Map<string, TaskExecutionImpl>;\n\tprotected _providedCustomExecutions2: Map<string, types.CustomExecution>;\n\tprivate _notProvidedCustomExecutions: Set<string>; // Used for custom executions tasks that are created and run through executeTask.\n\tprotected _activeCustomExecutions2: Map<string, types.CustomExecution>;\n\tprivate _lastStartedTask: string | undefined;\n\tprotected readonly _onDidExecuteTask: Emitter<vscode.TaskStartEvent> = new Emitter<vscode.TaskStartEvent>();\n\tprotected readonly _onDidTerminateTask: Emitter<vscode.TaskEndEvent> = new Emitter<vscode.TaskEndEvent>();\n\n\tprotected readonly _onDidTaskProcessStarted: Emitter<vscode.TaskProcessStartEvent> = new Emitter<vscode.TaskProcessStartEvent>();\n\tprotected readonly _onDidTaskProcessEnded: Emitter<vscode.TaskProcessEndEvent> = new Emitter<vscode.TaskProcessEndEvent>();\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IExtHostWorkspace workspaceService: IExtHostWorkspace,\n\t\t@IExtHostDocumentsAndEditors editorService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration configurationService: IExtHostConfiguration,\n\t\t@IExtHostTerminalService extHostTerminalService: IExtHostTerminalService,\n\t\t@ILogService logService: ILogService,\n\t\t@IExtHostApiDeprecationService deprecationService: IExtHostApiDeprecationService\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadTask);\n\t\tthis._workspaceProvider = workspaceService;\n\t\tthis._editorService = editorService;\n\t\tthis._configurationService = configurationService;\n\t\tthis._terminalService = extHostTerminalService;\n\t\tthis._handleCounter = 0;\n\t\tthis._handlers = new Map<number, HandlerData>();\n\t\tthis._taskExecutions = new Map<string, TaskExecutionImpl>();\n\t\tthis._providedCustomExecutions2 = new Map<string, types.CustomExecution>();\n\t\tthis._notProvidedCustomExecutions = new Set<string>();\n\t\tthis._activeCustomExecutions2 = new Map<string, types.CustomExecution>();\n\t\tthis._logService = logService;\n\t\tthis._deprecationService = deprecationService;\n\t}\n\n\tpublic registerTaskProvider(extension: IExtensionDescription, type: string, provider: vscode.TaskProvider): vscode.Disposable {\n\t\tif (!provider) {\n\t\t\treturn new types.Disposable(() => { });\n\t\t}\n\t\tconst handle = this.nextHandle();\n\t\tthis._handlers.set(handle, { type, provider, extension });\n\t\tthis._proxy.$registerTaskProvider(handle, type);\n\t\treturn new types.Disposable(() => {\n\t\t\tthis._handlers.delete(handle);\n\t\t\tthis._proxy.$unregisterTaskProvider(handle);\n\t\t});\n\t}\n\n\tpublic registerTaskSystem(scheme: string, info: tasks.TaskSystemInfoDTO): void {\n\t\tthis._proxy.$registerTaskSystem(scheme, info);\n\t}\n\n\tpublic fetchTasks(filter?: vscode.TaskFilter): Promise<vscode.Task[]> {\n\t\treturn this._proxy.$fetchTasks(TaskFilterDTO.from(filter)).then(async (values) => {\n\t\t\tconst result: vscode.Task[] = [];\n\t\t\tfor (let value of values) {\n\t\t\t\tconst task = await TaskDTO.to(value, this._workspaceProvider);\n\t\t\t\tif (task) {\n\t\t\t\t\tresult.push(task);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tpublic abstract async executeTask(extension: IExtensionDescription, task: vscode.Task): Promise<vscode.TaskExecution>;\n\n\tpublic get taskExecutions(): vscode.TaskExecution[] {\n\t\tconst result: vscode.TaskExecution[] = [];\n\t\tthis._taskExecutions.forEach(value => result.push(value));\n\t\treturn result;\n\t}\n\n\tpublic terminateTask(execution: vscode.TaskExecution): Promise<void> {\n\t\tif (!(execution instanceof TaskExecutionImpl)) {\n\t\t\tthrow new Error('No valid task execution provided');\n\t\t}\n\t\treturn this._proxy.$terminateTask((execution as TaskExecutionImpl)._id);\n\t}\n\n\tpublic get onDidStartTask(): Event<vscode.TaskStartEvent> {\n\t\treturn this._onDidExecuteTask.event;\n\t}\n\n\tprotected async resolveDefinition(uri: number | UriComponents | undefined, definition: vscode.TaskDefinition | undefined): Promise<vscode.TaskDefinition | undefined> {\n\t\treturn definition;\n\t}\n\n\tpublic async $onDidStartTask(execution: tasks.TaskExecutionDTO, terminalId: number): Promise<void> {\n\t\tconst customExecution: types.CustomExecution | undefined = this._providedCustomExecutions2.get(execution.id);\n\t\tif (customExecution) {\n\t\t\tif (this._activeCustomExecutions2.get(execution.id) !== undefined) {\n\t\t\t\tthrow new Error('We should not be trying to start the same custom task executions twice.');\n\t\t\t}\n\n\t\t\t// Clone the custom execution to keep the original untouched. This is important for multiple runs of the same task.\n\t\t\tthis._activeCustomExecutions2.set(execution.id, customExecution);\n\t\t\tthis._terminalService.attachPtyToTerminal(terminalId, await customExecution.callback(await this.resolveDefinition(execution.task?.source.scope, execution.task?.definition)));\n\t\t}\n\t\tthis._lastStartedTask = execution.id;\n\n\t\tthis._onDidExecuteTask.fire({\n\t\t\texecution: await this.getTaskExecution(execution)\n\t\t});\n\t}\n\n\tpublic get onDidEndTask(): Event<vscode.TaskEndEvent> {\n\t\treturn this._onDidTerminateTask.event;\n\t}\n\n\tpublic async $OnDidEndTask(execution: tasks.TaskExecutionDTO): Promise<void> {\n\t\tconst _execution = await this.getTaskExecution(execution);\n\t\tthis._taskExecutions.delete(execution.id);\n\t\tthis.customExecutionComplete(execution);\n\t\tthis._onDidTerminateTask.fire({\n\t\t\texecution: _execution\n\t\t});\n\t}\n\n\tpublic get onDidStartTaskProcess(): Event<vscode.TaskProcessStartEvent> {\n\t\treturn this._onDidTaskProcessStarted.event;\n\t}\n\n\tpublic async $onDidStartTaskProcess(value: tasks.TaskProcessStartedDTO): Promise<void> {\n\t\tconst execution = await this.getTaskExecution(value.id);\n\t\tif (execution) {\n\t\t\tthis._onDidTaskProcessStarted.fire({\n\t\t\t\texecution: execution,\n\t\t\t\tprocessId: value.processId\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic get onDidEndTaskProcess(): Event<vscode.TaskProcessEndEvent> {\n\t\treturn this._onDidTaskProcessEnded.event;\n\t}\n\n\tpublic async $onDidEndTaskProcess(value: tasks.TaskProcessEndedDTO): Promise<void> {\n\t\tconst execution = await this.getTaskExecution(value.id);\n\t\tif (execution) {\n\t\t\tthis._onDidTaskProcessEnded.fire({\n\t\t\t\texecution: execution,\n\t\t\t\texitCode: value.exitCode\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected abstract provideTasksInternal(validTypes: { [key: string]: boolean; }, taskIdPromises: Promise<void>[], handler: HandlerData, value: vscode.Task[] | null | undefined): { tasks: tasks.TaskDTO[], extension: IExtensionDescription };\n\n\tpublic $provideTasks(handle: number, validTypes: { [key: string]: boolean; }): Thenable<tasks.TaskSetDTO> {\n\t\tconst handler = this._handlers.get(handle);\n\t\tif (!handler) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\n\t\t// Set up a list of task ID promises that we can wait on\n\t\t// before returning the provided tasks. The ensures that\n\t\t// our task IDs are calculated for any custom execution tasks.\n\t\t// Knowing this ID ahead of time is needed because when a task\n\t\t// start event is fired this is when the custom execution is called.\n\t\t// The task start event is also the first time we see the ID from the main\n\t\t// thread, which is too late for us because we need to save an map\n\t\t// from an ID to the custom execution function. (Kind of a cart before the horse problem).\n\t\tconst taskIdPromises: Promise<void>[] = [];\n\t\tconst fetchPromise = asPromise(() => handler.provider.provideTasks(CancellationToken.None)).then(value => {\n\t\t\treturn this.provideTasksInternal(validTypes, taskIdPromises, handler, value);\n\t\t});\n\n\t\treturn new Promise((resolve) => {\n\t\t\tfetchPromise.then((result) => {\n\t\t\t\tPromise.all(taskIdPromises).then(() => {\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected abstract async resolveTaskInternal(resolvedTaskDTO: tasks.TaskDTO): Promise<tasks.TaskDTO | undefined>;\n\n\tpublic async $resolveTask(handle: number, taskDTO: tasks.TaskDTO): Promise<tasks.TaskDTO | undefined> {\n\t\tconst handler = this._handlers.get(handle);\n\t\tif (!handler) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\n\t\tif (taskDTO.definition.type !== handler.type) {\n\t\t\tthrow new Error(`Unexpected: Task of type [${taskDTO.definition.type}] cannot be resolved by provider of type [${handler.type}].`);\n\t\t}\n\n\t\tconst task = await TaskDTO.to(taskDTO, this._workspaceProvider);\n\t\tif (!task) {\n\t\t\tthrow new Error('Unexpected: Task cannot be resolved.');\n\t\t}\n\n\t\tconst resolvedTask = await handler.provider.resolveTask(task, CancellationToken.None);\n\t\tif (!resolvedTask) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.checkDeprecation(resolvedTask, handler);\n\n\t\tconst resolvedTaskDTO: tasks.TaskDTO | undefined = TaskDTO.from(resolvedTask, handler.extension);\n\t\tif (!resolvedTaskDTO) {\n\t\t\tthrow new Error('Unexpected: Task cannot be resolved.');\n\t\t}\n\n\t\tif (resolvedTask.definition !== task.definition) {\n\t\t\tthrow new Error('Unexpected: The resolved task definition must be the same object as the original task definition. The task definition cannot be changed.');\n\t\t}\n\n\t\tif (CustomExecutionDTO.is(resolvedTaskDTO.execution)) {\n\t\t\tawait this.addCustomExecution(resolvedTaskDTO, resolvedTask, true);\n\t\t}\n\n\t\treturn await this.resolveTaskInternal(resolvedTaskDTO);\n\t}\n\n\tpublic abstract async $resolveVariables(uriComponents: UriComponents, toResolve: { process?: { name: string; cwd?: string; path?: string }, variables: string[] }): Promise<{ process?: string, variables: { [key: string]: string; } }>;\n\n\tpublic abstract $getDefaultShellAndArgs(): Promise<{ shell: string, args: string[] | string | undefined }>;\n\n\tprivate nextHandle(): number {\n\t\treturn this._handleCounter++;\n\t}\n\n\tprotected async addCustomExecution(taskDTO: tasks.TaskDTO, task: vscode.Task, isProvided: boolean): Promise<void> {\n\t\tconst taskId = await this._proxy.$createTaskId(taskDTO);\n\t\tif (!isProvided && !this._providedCustomExecutions2.has(taskId)) {\n\t\t\tthis._notProvidedCustomExecutions.add(taskId);\n\t\t}\n\t\tthis._providedCustomExecutions2.set(taskId, <types.CustomExecution>task.execution);\n\t}\n\n\tprotected async getTaskExecution(execution: tasks.TaskExecutionDTO | string, task?: vscode.Task): Promise<TaskExecutionImpl> {\n\t\tif (typeof execution === 'string') {\n\t\t\tconst taskExecution = this._taskExecutions.get(execution);\n\t\t\tif (!taskExecution) {\n\t\t\t\tthrow new Error('Unexpected: The specified task is missing an execution');\n\t\t\t}\n\t\t\treturn taskExecution;\n\t\t}\n\n\t\tlet result: TaskExecutionImpl | undefined = this._taskExecutions.get(execution.id);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tconst taskToCreate = task ? task : await TaskDTO.to(execution.task, this._workspaceProvider);\n\t\tif (!taskToCreate) {\n\t\t\tthrow new Error('Unexpected: Task does not exist.');\n\t\t}\n\t\tconst createdResult: TaskExecutionImpl = new TaskExecutionImpl(this, execution.id, taskToCreate);\n\t\tthis._taskExecutions.set(execution.id, createdResult);\n\t\treturn createdResult;\n\t}\n\n\tprotected checkDeprecation(task: vscode.Task, handler: HandlerData) {\n\t\tconst tTask = (task as types.Task);\n\t\tif (tTask._deprecated) {\n\t\t\tthis._deprecationService.report('Task.constructor', handler.extension, 'Use the Task constructor that takes a `scope` instead.');\n\t\t}\n\t}\n\n\tprivate customExecutionComplete(execution: tasks.TaskExecutionDTO): void {\n\t\tconst extensionCallback2: vscode.CustomExecution | undefined = this._activeCustomExecutions2.get(execution.id);\n\t\tif (extensionCallback2) {\n\t\t\tthis._activeCustomExecutions2.delete(execution.id);\n\t\t}\n\n\t\t// Technically we don't really need to do this, however, if an extension\n\t\t// is executing a task through \"executeTask\" over and over again\n\t\t// with different properties in the task definition, then the map of executions\n\t\t// could grow indefinitely, something we don't want.\n\t\tif (this._notProvidedCustomExecutions.has(execution.id) && (this._lastStartedTask !== execution.id)) {\n\t\t\tthis._providedCustomExecutions2.delete(execution.id);\n\t\t\tthis._notProvidedCustomExecutions.delete(execution.id);\n\t\t}\n\t\tlet iterator = this._notProvidedCustomExecutions.values();\n\t\tlet iteratorResult = iterator.next();\n\t\twhile (!iteratorResult.done) {\n\t\t\tif (!this._activeCustomExecutions2.has(iteratorResult.value) && (this._lastStartedTask !== iteratorResult.value)) {\n\t\t\t\tthis._providedCustomExecutions2.delete(iteratorResult.value);\n\t\t\t\tthis._notProvidedCustomExecutions.delete(iteratorResult.value);\n\t\t\t}\n\t\t\titeratorResult = iterator.next();\n\t\t}\n\t}\n\n\tpublic abstract async $jsonTasksSupported(): Promise<boolean>;\n}\n\nexport class WorkerExtHostTask extends ExtHostTaskBase {\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IExtHostWorkspace workspaceService: IExtHostWorkspace,\n\t\t@IExtHostDocumentsAndEditors editorService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration configurationService: IExtHostConfiguration,\n\t\t@IExtHostTerminalService extHostTerminalService: IExtHostTerminalService,\n\t\t@ILogService logService: ILogService,\n\t\t@IExtHostApiDeprecationService deprecationService: IExtHostApiDeprecationService\n\t) {\n\t\tsuper(extHostRpc, initData, workspaceService, editorService, configurationService, extHostTerminalService, logService, deprecationService);\n\t\tif (initData.remote.isRemote && initData.remote.authority) {\n\t\t\tthis.registerTaskSystem(Schemas.vscodeRemote, {\n\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\tauthority: initData.remote.authority,\n\t\t\t\tplatform: Platform.PlatformToString(Platform.Platform.Web)\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async executeTask(extension: IExtensionDescription, task: vscode.Task): Promise<vscode.TaskExecution> {\n\t\tconst dto = TaskDTO.from(task, extension);\n\t\tif (dto === undefined) {\n\t\t\treturn Promise.reject(new Error('Task is not valid'));\n\t\t}\n\n\t\t// If this task is a custom execution, then we need to save it away\n\t\t// in the provided custom execution map that is cleaned up after the\n\t\t// task is executed.\n\t\tif (CustomExecutionDTO.is(dto.execution)) {\n\t\t\tawait this.addCustomExecution(dto, task, false);\n\t\t} else {\n\t\t\tthrow new Error('Not implemented');\n\t\t}\n\n\t\treturn this._proxy.$executeTask(dto).then(value => this.getTaskExecution(value, task));\n\t}\n\n\tprotected provideTasksInternal(validTypes: { [key: string]: boolean; }, taskIdPromises: Promise<void>[], handler: HandlerData, value: vscode.Task[] | null | undefined): { tasks: tasks.TaskDTO[], extension: IExtensionDescription } {\n\t\tconst taskDTOs: tasks.TaskDTO[] = [];\n\t\tif (value) {\n\t\t\tfor (let task of value) {\n\t\t\t\tthis.checkDeprecation(task, handler);\n\t\t\t\tif (!task.definition || !validTypes[task.definition.type]) {\n\t\t\t\t\tthis._logService.warn(`The task [${task.source}, ${task.name}] uses an undefined task type. The task will be ignored in the future.`);\n\t\t\t\t}\n\n\t\t\t\tconst taskDTO: tasks.TaskDTO | undefined = TaskDTO.from(task, handler.extension);\n\t\t\t\tif (taskDTO && CustomExecutionDTO.is(taskDTO.execution)) {\n\t\t\t\t\ttaskDTOs.push(taskDTO);\n\t\t\t\t\t// The ID is calculated on the main thread task side, so, let's call into it here.\n\t\t\t\t\t// We need the task id's pre-computed for custom task executions because when OnDidStartTask\n\t\t\t\t\t// is invoked, we have to be able to map it back to our data.\n\t\t\t\t\ttaskIdPromises.push(this.addCustomExecution(taskDTO, task, true));\n\t\t\t\t} else {\n\t\t\t\t\tthis._logService.warn('Only custom execution tasks supported.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\ttasks: taskDTOs,\n\t\t\textension: handler.extension\n\t\t};\n\t}\n\n\tprotected async resolveTaskInternal(resolvedTaskDTO: tasks.TaskDTO): Promise<tasks.TaskDTO | undefined> {\n\t\tif (CustomExecutionDTO.is(resolvedTaskDTO.execution)) {\n\t\t\treturn resolvedTaskDTO;\n\t\t} else {\n\t\t\tthis._logService.warn('Only custom execution tasks supported.');\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic async $resolveVariables(uriComponents: UriComponents, toResolve: { process?: { name: string; cwd?: string; path?: string }, variables: string[] }): Promise<{ process?: string, variables: { [key: string]: string; } }> {\n\t\tconst result = {\n\t\t\tprocess: <unknown>undefined as string,\n\t\t\tvariables: Object.create(null)\n\t\t};\n\t\treturn result;\n\t}\n\n\tpublic $getDefaultShellAndArgs(): Promise<{ shell: string, args: string[] | string | undefined }> {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tpublic async $jsonTasksSupported(): Promise<boolean> {\n\t\treturn false;\n\t}\n}\n\nexport const IExtHostTask = createDecorator<IExtHostTask>('IExtHostTask');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport * as errors from 'vs/base/common/errors';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { IInitData, MainContext, MainThreadConsoleShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { RPCProtocol } from 'vs/workbench/services/extensions/common/rpcProtocol';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getSingletonServiceDescriptors } from 'vs/platform/instantiation/common/extensions';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService, ExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IURITransformerService, URITransformerService } from 'vs/workbench/api/common/extHostUriTransformerService';\nimport { IExtHostExtensionService, IHostUtils } from 'vs/workbench/api/common/extHostExtensionService';\n\nexport interface IExitFn {\n\t(code?: number): any;\n}\n\nexport interface IConsolePatchFn {\n\t(mainThreadConsole: MainThreadConsoleShape): any;\n}\n\nexport class ExtensionHostMain {\n\n\tprivate _isTerminating: boolean;\n\tprivate readonly _hostUtils: IHostUtils;\n\tprivate readonly _extensionService: IExtHostExtensionService;\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\tprotocol: IMessagePassingProtocol,\n\t\tinitData: IInitData,\n\t\thostUtils: IHostUtils,\n\t\turiTransformer: IURITransformer | null\n\t) {\n\t\tthis._isTerminating = false;\n\t\tthis._hostUtils = hostUtils;\n\t\tconst rpcProtocol = new RPCProtocol(protocol, null, uriTransformer);\n\n\t\t// ensure URIs are transformed and revived\n\t\tinitData = ExtensionHostMain._transform(initData, rpcProtocol);\n\n\t\t// bootstrap services\n\t\tconst services = new ServiceCollection(...getSingletonServiceDescriptors());\n\t\tservices.set(IExtHostInitDataService, { _serviceBrand: undefined, ...initData });\n\t\tservices.set(IExtHostRpcService, new ExtHostRpcService(rpcProtocol));\n\t\tservices.set(IURITransformerService, new URITransformerService(uriTransformer));\n\t\tservices.set(IHostUtils, hostUtils);\n\n\t\tconst instaService: IInstantiationService = new InstantiationService(services, true);\n\n\t\t// todo@joh\n\t\t// ugly self - inject\n\t\tconst logService = instaService.invokeFunction(accessor => accessor.get(ILogService));\n\t\tthis._disposables.add(logService);\n\n\t\tlogService.info('extension host started');\n\t\tlogService.trace('initData', initData);\n\n\t\t// todo@joh\n\t\t// ugly self - inject\n\t\t// must call initialize *after* creating the extension service\n\t\t// because `initialize` itself creates instances that depend on it\n\t\tthis._extensionService = instaService.invokeFunction(accessor => accessor.get(IExtHostExtensionService));\n\t\tthis._extensionService.initialize();\n\n\t\t// error forwarding and stack trace scanning\n\t\tError.stackTraceLimit = 100; // increase number of stack frames (from 10, https://github.com/v8/v8/wiki/Stack-Trace-API)\n\t\tconst extensionErrors = new WeakMap<Error, IExtensionDescription | undefined>();\n\t\tthis._extensionService.getExtensionPathIndex().then(map => {\n\t\t\t(<any>Error).prepareStackTrace = (error: Error, stackTrace: errors.V8CallSite[]) => {\n\t\t\t\tlet stackTraceMessage = '';\n\t\t\t\tlet extension: IExtensionDescription | undefined;\n\t\t\t\tlet fileName: string;\n\t\t\t\tfor (const call of stackTrace) {\n\t\t\t\t\tstackTraceMessage += `\\n\\tat ${call.toString()}`;\n\t\t\t\t\tfileName = call.getFileName();\n\t\t\t\t\tif (!extension && fileName) {\n\t\t\t\t\t\textension = map.findSubstr(fileName);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\textensionErrors.set(error, extension);\n\t\t\t\treturn `${error.name || 'Error'}: ${error.message || ''}${stackTraceMessage}`;\n\t\t\t};\n\t\t});\n\n\t\tconst mainThreadExtensions = rpcProtocol.getProxy(MainContext.MainThreadExtensionService);\n\t\tconst mainThreadErrors = rpcProtocol.getProxy(MainContext.MainThreadErrors);\n\t\terrors.setUnexpectedErrorHandler(err => {\n\t\t\tconst data = errors.transformErrorForSerialization(err);\n\t\t\tconst extension = extensionErrors.get(err);\n\t\t\tif (extension) {\n\t\t\t\tmainThreadExtensions.$onExtensionRuntimeError(extension.identifier, data);\n\t\t\t} else {\n\t\t\t\tmainThreadErrors.$onUnexpectedError(data);\n\t\t\t}\n\t\t});\n\t}\n\n\tterminate(): void {\n\t\tif (this._isTerminating) {\n\t\t\t// we are already shutting down...\n\t\t\treturn;\n\t\t}\n\t\tthis._isTerminating = true;\n\n\t\tthis._disposables.dispose();\n\n\t\terrors.setUnexpectedErrorHandler((err) => {\n\t\t\t// TODO: write to log once we have one\n\t\t});\n\n\t\tconst extensionsDeactivated = this._extensionService.deactivateAll();\n\n\t\t// Give extensions 1 second to wrap up any async dispose, then exit in at most 4 seconds\n\t\tsetTimeout(() => {\n\t\t\tPromise.race([timeout(4000), extensionsDeactivated]).finally(() => this._hostUtils.exit());\n\t\t}, 1000);\n\t}\n\n\tprivate static _transform(initData: IInitData, rpcProtocol: RPCProtocol): IInitData {\n\t\tinitData.extensions.forEach((ext) => (<any>ext).extensionLocation = URI.revive(rpcProtocol.transformIncomingURIs(ext.extensionLocation)));\n\t\tinitData.environment.appRoot = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.appRoot));\n\t\tinitData.environment.appSettingsHome = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.appSettingsHome));\n\t\tconst extDevLocs = initData.environment.extensionDevelopmentLocationURI;\n\t\tif (extDevLocs) {\n\t\t\tinitData.environment.extensionDevelopmentLocationURI = extDevLocs.map(url => URI.revive(rpcProtocol.transformIncomingURIs(url)));\n\t\t}\n\t\tinitData.environment.extensionTestsLocationURI = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.extensionTestsLocationURI));\n\t\tinitData.environment.globalStorageHome = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.globalStorageHome));\n\t\tinitData.environment.userHome = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.userHome));\n\t\tinitData.logsLocation = URI.revive(rpcProtocol.transformIncomingURIs(initData.logsLocation));\n\t\tinitData.logFile = URI.revive(rpcProtocol.transformIncomingURIs(initData.logFile));\n\t\tinitData.workspace = rpcProtocol.transformIncomingURIs(initData.workspace);\n\t\treturn initData;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport * as glob from 'vs/base/common/glob';\nimport * as resources from 'vs/base/common/resources';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileMatch, IFileSearchProviderStats, IFolderQuery, ISearchCompleteStats, IFileQuery, QueryGlobTester, resolvePatternsForProvider } from 'vs/workbench/services/search/common/search';\nimport { FileSearchProvider, FileSearchOptions } from 'vs/workbench/services/search/common/searchExtTypes';\nimport { nextTick } from 'vs/base/common/process';\n\nexport interface IInternalFileMatch {\n\tbase: URI;\n\toriginal?: URI;\n\trelativePath?: string; // Not present for extraFiles or absolute path matches\n\tbasename: string;\n\tsize?: number;\n}\n\nexport interface IDirectoryEntry {\n\tbase: URI;\n\trelativePath: string;\n\tbasename: string;\n}\n\nexport interface IDirectoryTree {\n\trootEntries: IDirectoryEntry[];\n\tpathToEntries: { [relativePath: string]: IDirectoryEntry[] };\n}\n\nclass FileSearchEngine {\n\tprivate filePattern?: string;\n\tprivate includePattern?: glob.ParsedExpression;\n\tprivate maxResults?: number;\n\tprivate exists?: boolean;\n\tprivate isLimitHit = false;\n\tprivate resultCount = 0;\n\tprivate isCanceled = false;\n\n\tprivate activeCancellationTokens: Set<CancellationTokenSource>;\n\n\tprivate globalExcludePattern?: glob.ParsedExpression;\n\n\tconstructor(private config: IFileQuery, private provider: FileSearchProvider, private sessionToken?: CancellationToken) {\n\t\tthis.filePattern = config.filePattern;\n\t\tthis.includePattern = config.includePattern && glob.parse(config.includePattern);\n\t\tthis.maxResults = config.maxResults || undefined;\n\t\tthis.exists = config.exists;\n\t\tthis.activeCancellationTokens = new Set<CancellationTokenSource>();\n\n\t\tthis.globalExcludePattern = config.excludePattern && glob.parse(config.excludePattern);\n\t}\n\n\tcancel(): void {\n\t\tthis.isCanceled = true;\n\t\tthis.activeCancellationTokens.forEach(t => t.cancel());\n\t\tthis.activeCancellationTokens = new Set();\n\t}\n\n\tsearch(_onResult: (match: IInternalFileMatch) => void): Promise<IInternalSearchComplete> {\n\t\tconst folderQueries = this.config.folderQueries || [];\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst onResult = (match: IInternalFileMatch) => {\n\t\t\t\tthis.resultCount++;\n\t\t\t\t_onResult(match);\n\t\t\t};\n\n\t\t\t// Support that the file pattern is a full path to a file that exists\n\t\t\tif (this.isCanceled) {\n\t\t\t\treturn resolve({ limitHit: this.isLimitHit });\n\t\t\t}\n\n\t\t\t// For each extra file\n\t\t\tif (this.config.extraFileResources) {\n\t\t\t\tthis.config.extraFileResources\n\t\t\t\t\t.forEach(extraFile => {\n\t\t\t\t\t\tconst extraFileStr = extraFile.toString(); // ?\n\t\t\t\t\t\tconst basename = path.basename(extraFileStr);\n\t\t\t\t\t\tif (this.globalExcludePattern && this.globalExcludePattern(extraFileStr, basename)) {\n\t\t\t\t\t\t\treturn; // excluded\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File: Check for match on file pattern and include pattern\n\t\t\t\t\t\tthis.matchFile(onResult, { base: extraFile, basename });\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t// For each root folder\n\t\t\tPromise.all(folderQueries.map(fq => {\n\t\t\t\treturn this.searchInFolder(fq, onResult);\n\t\t\t})).then(stats => {\n\t\t\t\tresolve({\n\t\t\t\t\tlimitHit: this.isLimitHit,\n\t\t\t\t\tstats: stats[0] || undefined // Only looking at single-folder workspace stats...\n\t\t\t\t});\n\t\t\t}, (err: Error) => {\n\t\t\t\treject(new Error(toErrorMessage(err)));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate searchInFolder(fq: IFolderQuery<URI>, onResult: (match: IInternalFileMatch) => void): Promise<IFileSearchProviderStats | null> {\n\t\tconst cancellation = new CancellationTokenSource();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst options = this.getSearchOptionsForFolder(fq);\n\t\t\tconst tree = this.initDirectoryTree();\n\n\t\t\tconst queryTester = new QueryGlobTester(this.config, fq);\n\t\t\tconst noSiblingsClauses = !queryTester.hasSiblingExcludeClauses();\n\n\t\t\tlet providerSW: StopWatch;\n\t\t\tnew Promise(_resolve => nextTick(_resolve))\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.activeCancellationTokens.add(cancellation);\n\n\t\t\t\t\tproviderSW = StopWatch.create();\n\t\t\t\t\treturn this.provider.provideFileSearchResults(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: this.config.filePattern || ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tcancellation.token);\n\t\t\t\t})\n\t\t\t\t.then(results => {\n\t\t\t\t\tconst providerTime = providerSW.elapsed();\n\t\t\t\t\tconst postProcessSW = StopWatch.create();\n\n\t\t\t\t\tif (this.isCanceled && !this.isLimitHit) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (results) {\n\t\t\t\t\t\tresults.forEach(result => {\n\t\t\t\t\t\t\tconst relativePath = path.posix.relative(fq.folder.path, result.path);\n\n\t\t\t\t\t\t\tif (noSiblingsClauses) {\n\t\t\t\t\t\t\t\tconst basename = path.basename(result.path);\n\t\t\t\t\t\t\t\tthis.matchFile(onResult, { base: fq.folder, relativePath, basename });\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// TODO: Optimize siblings clauses with ripgrep here.\n\t\t\t\t\t\t\tthis.addDirectoryEntries(tree, fq.folder, relativePath, onResult);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.activeCancellationTokens.delete(cancellation);\n\t\t\t\t\tif (this.isCanceled && !this.isLimitHit) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.matchDirectoryTree(tree, queryTester, onResult);\n\t\t\t\t\treturn <IFileSearchProviderStats>{\n\t\t\t\t\t\tproviderTime,\n\t\t\t\t\t\tpostProcessTime: postProcessSW.elapsed()\n\t\t\t\t\t};\n\t\t\t\t}).then(\n\t\t\t\t\tstats => {\n\t\t\t\t\t\tcancellation.dispose();\n\t\t\t\t\t\tresolve(stats);\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tcancellation.dispose();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getSearchOptionsForFolder(fq: IFolderQuery<URI>): FileSearchOptions {\n\t\tconst includes = resolvePatternsForProvider(this.config.includePattern, fq.includePattern);\n\t\tconst excludes = resolvePatternsForProvider(this.config.excludePattern, fq.excludePattern);\n\n\t\treturn {\n\t\t\tfolder: fq.folder,\n\t\t\texcludes,\n\t\t\tincludes,\n\t\t\tuseIgnoreFiles: !fq.disregardIgnoreFiles,\n\t\t\tuseGlobalIgnoreFiles: !fq.disregardGlobalIgnoreFiles,\n\t\t\tfollowSymlinks: !fq.ignoreSymlinks,\n\t\t\tmaxResults: this.config.maxResults,\n\t\t\tsession: this.sessionToken\n\t\t};\n\t}\n\n\tprivate initDirectoryTree(): IDirectoryTree {\n\t\tconst tree: IDirectoryTree = {\n\t\t\trootEntries: [],\n\t\t\tpathToEntries: Object.create(null)\n\t\t};\n\t\ttree.pathToEntries['.'] = tree.rootEntries;\n\t\treturn tree;\n\t}\n\n\tprivate addDirectoryEntries({ pathToEntries }: IDirectoryTree, base: URI, relativeFile: string, onResult: (result: IInternalFileMatch) => void) {\n\t\t// Support relative paths to files from a root resource (ignores excludes)\n\t\tif (relativeFile === this.filePattern) {\n\t\t\tconst basename = path.basename(this.filePattern);\n\t\t\tthis.matchFile(onResult, { base: base, relativePath: this.filePattern, basename });\n\t\t}\n\n\t\tfunction add(relativePath: string) {\n\t\t\tconst basename = path.basename(relativePath);\n\t\t\tconst dirname = path.dirname(relativePath);\n\t\t\tlet entries = pathToEntries[dirname];\n\t\t\tif (!entries) {\n\t\t\t\tentries = pathToEntries[dirname] = [];\n\t\t\t\tadd(dirname);\n\t\t\t}\n\t\t\tentries.push({\n\t\t\t\tbase,\n\t\t\t\trelativePath,\n\t\t\t\tbasename\n\t\t\t});\n\t\t}\n\n\t\tadd(relativeFile);\n\t}\n\n\tprivate matchDirectoryTree({ rootEntries, pathToEntries }: IDirectoryTree, queryTester: QueryGlobTester, onResult: (result: IInternalFileMatch) => void) {\n\t\tconst self = this;\n\t\tconst filePattern = this.filePattern;\n\t\tfunction matchDirectory(entries: IDirectoryEntry[]) {\n\t\t\tconst hasSibling = glob.hasSiblingFn(() => entries.map(entry => entry.basename));\n\t\t\tfor (let i = 0, n = entries.length; i < n; i++) {\n\t\t\t\tconst entry = entries[i];\n\t\t\t\tconst { relativePath, basename } = entry;\n\n\t\t\t\t// Check exclude pattern\n\t\t\t\t// If the user searches for the exact file name, we adjust the glob matching\n\t\t\t\t// to ignore filtering by siblings because the user seems to know what she\n\t\t\t\t// is searching for and we want to include the result in that case anyway\n\t\t\t\tif (!queryTester.includedInQuerySync(relativePath, basename, filePattern !== basename ? hasSibling : undefined)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst sub = pathToEntries[relativePath];\n\t\t\t\tif (sub) {\n\t\t\t\t\tmatchDirectory(sub);\n\t\t\t\t} else {\n\t\t\t\t\tif (relativePath === filePattern) {\n\t\t\t\t\t\tcontinue; // ignore file if its path matches with the file pattern because that is already matched above\n\t\t\t\t\t}\n\n\t\t\t\t\tself.matchFile(onResult, entry);\n\t\t\t\t}\n\n\t\t\t\tif (self.isLimitHit) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmatchDirectory(rootEntries);\n\t}\n\n\tprivate matchFile(onResult: (result: IInternalFileMatch) => void, candidate: IInternalFileMatch): void {\n\t\tif (!this.includePattern || (candidate.relativePath && this.includePattern(candidate.relativePath, candidate.basename))) {\n\t\t\tif (this.exists || (this.maxResults && this.resultCount >= this.maxResults)) {\n\t\t\t\tthis.isLimitHit = true;\n\t\t\t\tthis.cancel();\n\t\t\t}\n\n\t\t\tif (!this.isLimitHit) {\n\t\t\t\tonResult(candidate);\n\t\t\t}\n\t\t}\n\t}\n}\n\ninterface IInternalSearchComplete {\n\tlimitHit: boolean;\n\tstats?: IFileSearchProviderStats;\n}\n\nexport class FileSearchManager {\n\n\tprivate static readonly BATCH_SIZE = 512;\n\n\tprivate readonly sessions = new Map<string, CancellationTokenSource>();\n\n\tfileSearch(config: IFileQuery, provider: FileSearchProvider, onBatch: (matches: IFileMatch[]) => void, token: CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst sessionTokenSource = this.getSessionTokenSource(config.cacheKey);\n\t\tconst engine = new FileSearchEngine(config, provider, sessionTokenSource && sessionTokenSource.token);\n\n\t\tlet resultCount = 0;\n\t\tconst onInternalResult = (batch: IInternalFileMatch[]) => {\n\t\t\tresultCount += batch.length;\n\t\t\tonBatch(batch.map(m => this.rawMatchToSearchItem(m)));\n\t\t};\n\n\t\treturn this.doSearch(engine, FileSearchManager.BATCH_SIZE, onInternalResult, token).then(\n\t\t\tresult => {\n\t\t\t\treturn <ISearchCompleteStats>{\n\t\t\t\t\tlimitHit: result.limitHit,\n\t\t\t\t\tstats: {\n\t\t\t\t\t\tfromCache: false,\n\t\t\t\t\t\ttype: 'fileSearchProvider',\n\t\t\t\t\t\tresultCount,\n\t\t\t\t\t\tdetailStats: result.stats\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tclearCache(cacheKey: string): void {\n\t\tconst sessionTokenSource = this.getSessionTokenSource(cacheKey);\n\t\tif (sessionTokenSource) {\n\t\t\tsessionTokenSource.cancel();\n\t\t}\n\t}\n\n\tprivate getSessionTokenSource(cacheKey: string | undefined): CancellationTokenSource | undefined {\n\t\tif (!cacheKey) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.sessions.has(cacheKey)) {\n\t\t\tthis.sessions.set(cacheKey, new CancellationTokenSource());\n\t\t}\n\n\t\treturn this.sessions.get(cacheKey);\n\t}\n\n\tprivate rawMatchToSearchItem(match: IInternalFileMatch): IFileMatch {\n\t\tif (match.relativePath) {\n\t\t\treturn {\n\t\t\t\tresource: resources.joinPath(match.base, match.relativePath)\n\t\t\t};\n\t\t} else {\n\t\t\t// extraFileResources\n\t\t\treturn {\n\t\t\t\tresource: match.base\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate doSearch(engine: FileSearchEngine, batchSize: number, onResultBatch: (matches: IInternalFileMatch[]) => void, token: CancellationToken): Promise<IInternalSearchComplete> {\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tengine.cancel();\n\t\t});\n\n\t\tconst _onResult = (match: IInternalFileMatch) => {\n\t\t\tif (match) {\n\t\t\t\tbatch.push(match);\n\t\t\t\tif (batchSize > 0 && batch.length >= batchSize) {\n\t\t\t\t\tonResultBatch(batch);\n\t\t\t\t\tbatch = [];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet batch: IInternalFileMatch[] = [];\n\t\treturn engine.search(_onResult).then(result => {\n\t\t\tif (batch.length) {\n\t\t\t\tonResultBatch(batch);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, error => {\n\t\t\tif (batch.length) {\n\t\t\t\tonResultBatch(batch);\n\t\t\t}\n\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { mapArrayOrNot } from 'vs/base/common/arrays';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport * as resources from 'vs/base/common/resources';\nimport * as glob from 'vs/base/common/glob';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtendedExtensionSearchOptions, IFileMatch, IFolderQuery, IPatternInfo, ISearchCompleteStats, ITextQuery, ITextSearchContext, ITextSearchMatch, ITextSearchResult, QueryGlobTester, resolvePatternsForProvider } from 'vs/workbench/services/search/common/search';\nimport { TextSearchProvider, TextSearchResult, TextSearchMatch, TextSearchComplete, Range, TextSearchOptions, TextSearchQuery } from 'vs/workbench/services/search/common/searchExtTypes';\nimport { nextTick } from 'vs/base/common/process';\n\nexport interface IFileUtils {\n\treaddir: (resource: URI) => Promise<string[]>;\n\ttoCanonicalName: (encoding: string) => string;\n}\n\nexport class TextSearchManager {\n\n\tprivate collector: TextSearchResultsCollector | null = null;\n\n\tprivate isLimitHit = false;\n\tprivate resultCount = 0;\n\n\tconstructor(private query: ITextQuery, private provider: TextSearchProvider, private fileUtils: IFileUtils) { }\n\n\tsearch(onProgress: (matches: IFileMatch[]) => void, token: CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst folderQueries = this.query.folderQueries || [];\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\ttoken.onCancellationRequested(() => tokenSource.cancel());\n\n\t\treturn new Promise<ISearchCompleteStats>((resolve, reject) => {\n\t\t\tthis.collector = new TextSearchResultsCollector(onProgress);\n\n\t\t\tlet isCanceled = false;\n\t\t\tconst onResult = (result: TextSearchResult, folderIdx: number) => {\n\t\t\t\tif (isCanceled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.isLimitHit) {\n\t\t\t\t\tconst resultSize = this.resultSize(result);\n\t\t\t\t\tif (extensionResultIsMatch(result) && typeof this.query.maxResults === 'number' && this.resultCount + resultSize > this.query.maxResults) {\n\t\t\t\t\t\tthis.isLimitHit = true;\n\t\t\t\t\t\tisCanceled = true;\n\t\t\t\t\t\ttokenSource.cancel();\n\n\t\t\t\t\t\tresult = this.trimResultToSize(result, this.query.maxResults - this.resultCount);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst newResultSize = this.resultSize(result);\n\t\t\t\t\tthis.resultCount += newResultSize;\n\t\t\t\t\tif (newResultSize > 0) {\n\t\t\t\t\t\tthis.collector!.add(result, folderIdx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// For each root folder\n\t\t\tPromise.all(folderQueries.map((fq, i) => {\n\t\t\t\treturn this.searchInFolder(fq, r => onResult(r, i), tokenSource.token);\n\t\t\t})).then(results => {\n\t\t\t\ttokenSource.dispose();\n\t\t\t\tthis.collector!.flush();\n\n\t\t\t\tconst someFolderHitLImit = results.some(result => !!result && !!result.limitHit);\n\t\t\t\tresolve({\n\t\t\t\t\tlimitHit: this.isLimitHit || someFolderHitLImit,\n\t\t\t\t\tstats: {\n\t\t\t\t\t\ttype: 'textSearchProvider'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, (err: Error) => {\n\t\t\t\ttokenSource.dispose();\n\t\t\t\tconst errMsg = toErrorMessage(err);\n\t\t\t\treject(new Error(errMsg));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate resultSize(result: TextSearchResult): number {\n\t\tconst match = <TextSearchMatch>result;\n\t\treturn Array.isArray(match.ranges) ?\n\t\t\tmatch.ranges.length :\n\t\t\t1;\n\t}\n\n\tprivate trimResultToSize(result: TextSearchMatch, size: number): TextSearchMatch {\n\t\tconst rangesArr = Array.isArray(result.ranges) ? result.ranges : [result.ranges];\n\t\tconst matchesArr = Array.isArray(result.preview.matches) ? result.preview.matches : [result.preview.matches];\n\n\t\treturn {\n\t\t\tranges: rangesArr.slice(0, size),\n\t\t\tpreview: {\n\t\t\t\tmatches: matchesArr.slice(0, size),\n\t\t\t\ttext: result.preview.text\n\t\t\t},\n\t\t\turi: result.uri\n\t\t};\n\t}\n\n\tprivate searchInFolder(folderQuery: IFolderQuery<URI>, onResult: (result: TextSearchResult) => void, token: CancellationToken): Promise<TextSearchComplete | null | undefined> {\n\t\tconst queryTester = new QueryGlobTester(this.query, folderQuery);\n\t\tconst testingPs: Promise<void>[] = [];\n\t\tconst progress = {\n\t\t\treport: (result: TextSearchResult) => {\n\t\t\t\tif (!this.validateProviderResult(result)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst hasSibling = folderQuery.folder.scheme === 'file' ?\n\t\t\t\t\tglob.hasSiblingPromiseFn(() => {\n\t\t\t\t\t\treturn this.fileUtils.readdir(resources.dirname(result.uri));\n\t\t\t\t\t}) :\n\t\t\t\t\tundefined;\n\n\t\t\t\tconst relativePath = resources.relativePath(folderQuery.folder, result.uri);\n\t\t\t\tif (relativePath) {\n\t\t\t\t\ttestingPs.push(\n\t\t\t\t\t\tqueryTester.includedInQuery(relativePath, path.basename(relativePath), hasSibling)\n\t\t\t\t\t\t\t.then(included => {\n\t\t\t\t\t\t\t\tif (included) {\n\t\t\t\t\t\t\t\t\tonResult(result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst searchOptions = this.getSearchOptionsForFolder(folderQuery);\n\t\treturn new Promise(resolve => nextTick(resolve))\n\t\t\t.then(() => this.provider.provideTextSearchResults(patternInfoToQuery(this.query.contentPattern), searchOptions, progress, token))\n\t\t\t.then(result => {\n\t\t\t\treturn Promise.all(testingPs)\n\t\t\t\t\t.then(() => result);\n\t\t\t});\n\t}\n\n\tprivate validateProviderResult(result: TextSearchResult): boolean {\n\t\tif (extensionResultIsMatch(result)) {\n\t\t\tif (Array.isArray(result.ranges)) {\n\t\t\t\tif (!Array.isArray(result.preview.matches)) {\n\t\t\t\t\tconsole.warn('INVALID - A text search provider match\\'s`ranges` and`matches` properties must have the same type.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif ((<Range[]>result.preview.matches).length !== result.ranges.length) {\n\t\t\t\t\tconsole.warn('INVALID - A text search provider match\\'s`ranges` and`matches` properties must have the same length.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(result.preview.matches)) {\n\t\t\t\t\tconsole.warn('INVALID - A text search provider match\\'s`ranges` and`matches` properties must have the same length.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate getSearchOptionsForFolder(fq: IFolderQuery<URI>): TextSearchOptions {\n\t\tconst includes = resolvePatternsForProvider(this.query.includePattern, fq.includePattern);\n\t\tconst excludes = resolvePatternsForProvider(this.query.excludePattern, fq.excludePattern);\n\n\t\tconst options = <TextSearchOptions>{\n\t\t\tfolder: URI.from(fq.folder),\n\t\t\texcludes,\n\t\t\tincludes,\n\t\t\tuseIgnoreFiles: !fq.disregardIgnoreFiles,\n\t\t\tuseGlobalIgnoreFiles: !fq.disregardGlobalIgnoreFiles,\n\t\t\tfollowSymlinks: !fq.ignoreSymlinks,\n\t\t\tencoding: fq.fileEncoding && this.fileUtils.toCanonicalName(fq.fileEncoding),\n\t\t\tmaxFileSize: this.query.maxFileSize,\n\t\t\tmaxResults: this.query.maxResults,\n\t\t\tpreviewOptions: this.query.previewOptions,\n\t\t\tafterContext: this.query.afterContext,\n\t\t\tbeforeContext: this.query.beforeContext\n\t\t};\n\t\t(<IExtendedExtensionSearchOptions>options).usePCRE2 = this.query.usePCRE2;\n\t\treturn options;\n\t}\n}\n\nfunction patternInfoToQuery(patternInfo: IPatternInfo): TextSearchQuery {\n\treturn <TextSearchQuery>{\n\t\tisCaseSensitive: patternInfo.isCaseSensitive || false,\n\t\tisRegExp: patternInfo.isRegExp || false,\n\t\tisWordMatch: patternInfo.isWordMatch || false,\n\t\tisMultiline: patternInfo.isMultiline || false,\n\t\tpattern: patternInfo.pattern\n\t};\n}\n\nexport class TextSearchResultsCollector {\n\tprivate _batchedCollector: BatchedCollector<IFileMatch>;\n\n\tprivate _currentFolderIdx: number = -1;\n\tprivate _currentUri: URI | undefined;\n\tprivate _currentFileMatch: IFileMatch | null = null;\n\n\tconstructor(private _onResult: (result: IFileMatch[]) => void) {\n\t\tthis._batchedCollector = new BatchedCollector<IFileMatch>(512, items => this.sendItems(items));\n\t}\n\n\tadd(data: TextSearchResult, folderIdx: number): void {\n\t\t// Collects TextSearchResults into IInternalFileMatches and collates using BatchedCollector.\n\t\t// This is efficient for ripgrep which sends results back one file at a time. It wouldn't be efficient for other search\n\t\t// providers that send results in random order. We could do this step afterwards instead.\n\t\tif (this._currentFileMatch && (this._currentFolderIdx !== folderIdx || !resources.isEqual(this._currentUri, data.uri))) {\n\t\t\tthis.pushToCollector();\n\t\t\tthis._currentFileMatch = null;\n\t\t}\n\n\t\tif (!this._currentFileMatch) {\n\t\t\tthis._currentFolderIdx = folderIdx;\n\t\t\tthis._currentFileMatch = {\n\t\t\t\tresource: data.uri,\n\t\t\t\tresults: []\n\t\t\t};\n\t\t}\n\n\t\tthis._currentFileMatch.results!.push(extensionResultToFrontendResult(data));\n\t}\n\n\tprivate pushToCollector(): void {\n\t\tconst size = this._currentFileMatch && this._currentFileMatch.results ?\n\t\t\tthis._currentFileMatch.results.length :\n\t\t\t0;\n\t\tthis._batchedCollector.addItem(this._currentFileMatch!, size);\n\t}\n\n\tflush(): void {\n\t\tthis.pushToCollector();\n\t\tthis._batchedCollector.flush();\n\t}\n\n\tprivate sendItems(items: IFileMatch[]): void {\n\t\tthis._onResult(items);\n\t}\n}\n\nfunction extensionResultToFrontendResult(data: TextSearchResult): ITextSearchResult {\n\t// Warning: result from RipgrepTextSearchEH has fake Range. Don't depend on any other props beyond these...\n\tif (extensionResultIsMatch(data)) {\n\t\treturn <ITextSearchMatch>{\n\t\t\tpreview: {\n\t\t\t\tmatches: mapArrayOrNot(data.preview.matches, m => ({\n\t\t\t\t\tstartLineNumber: m.start.line,\n\t\t\t\t\tstartColumn: m.start.character,\n\t\t\t\t\tendLineNumber: m.end.line,\n\t\t\t\t\tendColumn: m.end.character\n\t\t\t\t})),\n\t\t\t\ttext: data.preview.text\n\t\t\t},\n\t\t\tranges: mapArrayOrNot(data.ranges, r => ({\n\t\t\t\tstartLineNumber: r.start.line,\n\t\t\t\tstartColumn: r.start.character,\n\t\t\t\tendLineNumber: r.end.line,\n\t\t\t\tendColumn: r.end.character\n\t\t\t}))\n\t\t};\n\t} else {\n\t\treturn <ITextSearchContext>{\n\t\t\ttext: data.text,\n\t\t\tlineNumber: data.lineNumber\n\t\t};\n\t}\n}\n\nexport function extensionResultIsMatch(data: TextSearchResult): data is TextSearchMatch {\n\treturn !!(<TextSearchMatch>data).preview;\n}\n\n/**\n * Collects items that have a size - before the cumulative size of collected items reaches START_BATCH_AFTER_COUNT, the callback is called for every\n * set of items collected.\n * But after that point, the callback is called with batches of maxBatchSize.\n * If the batch isn't filled within some time, the callback is also called.\n */\nexport class BatchedCollector<T> {\n\tprivate static readonly TIMEOUT = 4000;\n\n\t// After START_BATCH_AFTER_COUNT items have been collected, stop flushing on timeout\n\tprivate static readonly START_BATCH_AFTER_COUNT = 50;\n\n\tprivate totalNumberCompleted = 0;\n\tprivate batch: T[] = [];\n\tprivate batchSize = 0;\n\tprivate timeoutHandle: any;\n\n\tconstructor(private maxBatchSize: number, private cb: (items: T[]) => void) {\n\t}\n\n\taddItem(item: T, size: number): void {\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addItemToBatch(item, size);\n\t}\n\n\taddItems(items: T[], size: number): void {\n\t\tif (!items) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addItemsToBatch(items, size);\n\t}\n\n\tprivate addItemToBatch(item: T, size: number): void {\n\t\tthis.batch.push(item);\n\t\tthis.batchSize += size;\n\t\tthis.onUpdate();\n\t}\n\n\tprivate addItemsToBatch(item: T[], size: number): void {\n\t\tthis.batch = this.batch.concat(item);\n\t\tthis.batchSize += size;\n\t\tthis.onUpdate();\n\t}\n\n\tprivate onUpdate(): void {\n\t\tif (this.totalNumberCompleted < BatchedCollector.START_BATCH_AFTER_COUNT) {\n\t\t\t// Flush because we aren't batching yet\n\t\t\tthis.flush();\n\t\t} else if (this.batchSize >= this.maxBatchSize) {\n\t\t\t// Flush because the batch is full\n\t\t\tthis.flush();\n\t\t} else if (!this.timeoutHandle) {\n\t\t\t// No timeout running, start a timeout to flush\n\t\t\tthis.timeoutHandle = setTimeout(() => {\n\t\t\t\tthis.flush();\n\t\t\t}, BatchedCollector.TIMEOUT);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this.batchSize) {\n\t\t\tthis.totalNumberCompleted += this.batchSize;\n\t\t\tthis.cb(this.batch);\n\t\t\tthis.batch = [];\n\t\t\tthis.batchSize = 0;\n\n\t\t\tif (this.timeoutHandle) {\n\t\t\t\tclearTimeout(this.timeoutHandle);\n\t\t\t\tthis.timeoutHandle = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport type * as vscode from 'vscode';\nimport { ExtHostSearchShape, MainThreadSearchShape, MainContext } from '../common/extHost.protocol';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { FileSearchManager } from 'vs/workbench/services/search/common/fileSearchManager';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IURITransformerService } from 'vs/workbench/api/common/extHostUriTransformerService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRawFileQuery, ISearchCompleteStats, IFileQuery, IRawTextQuery, IRawQuery, ITextQuery, IFolderQuery } from 'vs/workbench/services/search/common/search';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { TextSearchManager } from 'vs/workbench/services/search/common/textSearchManager';\n\nexport interface IExtHostSearch extends ExtHostSearchShape {\n\tregisterTextSearchProvider(scheme: string, provider: vscode.TextSearchProvider): IDisposable;\n\tregisterFileSearchProvider(scheme: string, provider: vscode.FileSearchProvider): IDisposable;\n}\n\nexport const IExtHostSearch = createDecorator<IExtHostSearch>('IExtHostSearch');\n\nexport class ExtHostSearch implements ExtHostSearchShape {\n\n\tprotected readonly _proxy: MainThreadSearchShape = this.extHostRpc.getProxy(MainContext.MainThreadSearch);\n\tprotected _handlePool: number = 0;\n\n\tprivate readonly _textSearchProvider = new Map<number, vscode.TextSearchProvider>();\n\tprivate readonly _textSearchUsedSchemes = new Set<string>();\n\tprivate readonly _fileSearchProvider = new Map<number, vscode.FileSearchProvider>();\n\tprivate readonly _fileSearchUsedSchemes = new Set<string>();\n\n\tprivate readonly _fileSearchManager = new FileSearchManager();\n\n\tconstructor(\n\t\t@IExtHostRpcService private extHostRpc: IExtHostRpcService,\n\t\t@IURITransformerService protected _uriTransformer: IURITransformerService,\n\t\t@ILogService protected _logService: ILogService\n\t) { }\n\n\tprotected _transformScheme(scheme: string): string {\n\t\treturn this._uriTransformer.transformOutgoingScheme(scheme);\n\t}\n\n\tregisterTextSearchProvider(scheme: string, provider: vscode.TextSearchProvider): IDisposable {\n\t\tif (this._textSearchUsedSchemes.has(scheme)) {\n\t\t\tthrow new Error(`a text search provider for the scheme '${scheme}' is already registered`);\n\t\t}\n\n\t\tthis._textSearchUsedSchemes.add(scheme);\n\t\tconst handle = this._handlePool++;\n\t\tthis._textSearchProvider.set(handle, provider);\n\t\tthis._proxy.$registerTextSearchProvider(handle, this._transformScheme(scheme));\n\t\treturn toDisposable(() => {\n\t\t\tthis._textSearchUsedSchemes.delete(scheme);\n\t\t\tthis._textSearchProvider.delete(handle);\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\tregisterFileSearchProvider(scheme: string, provider: vscode.FileSearchProvider): IDisposable {\n\t\tif (this._fileSearchUsedSchemes.has(scheme)) {\n\t\t\tthrow new Error(`a file search provider for the scheme '${scheme}' is already registered`);\n\t\t}\n\n\t\tthis._fileSearchUsedSchemes.add(scheme);\n\t\tconst handle = this._handlePool++;\n\t\tthis._fileSearchProvider.set(handle, provider);\n\t\tthis._proxy.$registerFileSearchProvider(handle, this._transformScheme(scheme));\n\t\treturn toDisposable(() => {\n\t\t\tthis._fileSearchUsedSchemes.delete(scheme);\n\t\t\tthis._fileSearchProvider.delete(handle);\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\t$provideFileSearchResults(handle: number, session: number, rawQuery: IRawFileQuery, token: vscode.CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst query = reviveQuery(rawQuery);\n\t\tconst provider = this._fileSearchProvider.get(handle);\n\t\tif (provider) {\n\t\t\treturn this._fileSearchManager.fileSearch(query, provider, batch => {\n\t\t\t\tthis._proxy.$handleFileMatch(handle, session, batch.map(p => p.resource));\n\t\t\t}, token);\n\t\t} else {\n\t\t\tthrow new Error('unknown provider: ' + handle);\n\t\t}\n\t}\n\n\t$clearCache(cacheKey: string): Promise<void> {\n\t\tthis._fileSearchManager.clearCache(cacheKey);\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$provideTextSearchResults(handle: number, session: number, rawQuery: IRawTextQuery, token: vscode.CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst provider = this._textSearchProvider.get(handle);\n\t\tif (!provider || !provider.provideTextSearchResults) {\n\t\t\tthrow new Error(`Unknown provider ${handle}`);\n\t\t}\n\n\t\tconst query = reviveQuery(rawQuery);\n\t\tconst engine = this.createTextSearchManager(query, provider);\n\t\treturn engine.search(progress => this._proxy.$handleTextMatch(handle, session, progress), token);\n\t}\n\n\tprotected createTextSearchManager(query: ITextQuery, provider: vscode.TextSearchProvider): TextSearchManager {\n\t\treturn new TextSearchManager(query, provider, {\n\t\t\treaddir: resource => Promise.resolve([]), // TODO@rob implement\n\t\t\ttoCanonicalName: encoding => encoding\n\t\t});\n\t}\n}\n\nexport function reviveQuery<U extends IRawQuery>(rawQuery: U): U extends IRawTextQuery ? ITextQuery : IFileQuery {\n\treturn {\n\t\t...<any>rawQuery, // TODO@rob ???\n\t\t...{\n\t\t\tfolderQueries: rawQuery.folderQueries && rawQuery.folderQueries.map(reviveFolderQuery),\n\t\t\textraFileResources: rawQuery.extraFileResources && rawQuery.extraFileResources.map(components => URI.revive(components))\n\t\t}\n\t};\n}\n\nfunction reviveFolderQuery(rawFolderQuery: IFolderQuery<UriComponents>): IFolderQuery<URI> {\n\treturn {\n\t\t...rawFolderQuery,\n\t\tfolder: URI.revive(rawFolderQuery.folder)\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as path from 'vs/base/common/path';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport { TextEditorCursorStyle } from 'vs/editor/common/config/editorOptions';\nimport { OverviewRulerLane } from 'vs/editor/common/model';\nimport * as languageConfiguration from 'vs/editor/common/modes/languageConfiguration';\nimport { score } from 'vs/editor/common/modes/languageSelector';\nimport * as files from 'vs/platform/files/common/files';\nimport { ExtHostContext, MainContext, ExtHostLogServiceShape, UIKind } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostApiCommands } from 'vs/workbench/api/common/extHostApiCommands';\nimport { ExtHostClipboard } from 'vs/workbench/api/common/extHostClipboard';\nimport { IExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { ExtHostComments } from 'vs/workbench/api/common/extHostComments';\nimport { ExtHostConfigProvider, IExtHostConfiguration } from 'vs/workbench/api/common/extHostConfiguration';\nimport { ExtHostDiagnostics } from 'vs/workbench/api/common/extHostDiagnostics';\nimport { ExtHostDialogs } from 'vs/workbench/api/common/extHostDialogs';\nimport { ExtHostDocumentContentProvider } from 'vs/workbench/api/common/extHostDocumentContentProviders';\nimport { ExtHostDocumentSaveParticipant } from 'vs/workbench/api/common/extHostDocumentSaveParticipant';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { IExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { IExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { ExtHostFileSystem } from 'vs/workbench/api/common/extHostFileSystem';\nimport { ExtHostFileSystemEventService } from 'vs/workbench/api/common/extHostFileSystemEventService';\nimport { ExtHostLanguageFeatures } from 'vs/workbench/api/common/extHostLanguageFeatures';\nimport { ExtHostLanguages } from 'vs/workbench/api/common/extHostLanguages';\nimport { ExtHostMessageService } from 'vs/workbench/api/common/extHostMessageService';\nimport { IExtHostOutputService } from 'vs/workbench/api/common/extHostOutput';\nimport { ExtHostProgress } from 'vs/workbench/api/common/extHostProgress';\nimport { ExtHostQuickOpen } from 'vs/workbench/api/common/extHostQuickOpen';\nimport { ExtHostSCM } from 'vs/workbench/api/common/extHostSCM';\nimport { ExtHostStatusBar } from 'vs/workbench/api/common/extHostStatusBar';\nimport { IExtHostStorage } from 'vs/workbench/api/common/extHostStorage';\nimport { IExtHostTerminalService } from 'vs/workbench/api/common/extHostTerminalService';\nimport { ExtHostEditors } from 'vs/workbench/api/common/extHostTextEditors';\nimport { ExtHostTreeViews } from 'vs/workbench/api/common/extHostTreeViews';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport * as extHostTypes from 'vs/workbench/api/common/extHostTypes';\nimport { ExtHostUrls } from 'vs/workbench/api/common/extHostUrls';\nimport { ExtHostWebviews } from 'vs/workbench/api/common/extHostWebview';\nimport { ExtHostWindow } from 'vs/workbench/api/common/extHostWindow';\nimport { IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { throwProposedApiError, checkProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { ProxyIdentifier } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\nimport * as vscode from 'vscode';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { originalFSPath } from 'vs/base/common/resources';\nimport { values } from 'vs/base/common/collections';\nimport { ExtHostEditorInsets } from 'vs/workbench/api/common/extHostCodeInsets';\nimport { ExtHostLabelService } from 'vs/workbench/api/common/extHostLabelService';\nimport { getRemoteName } from 'vs/platform/remote/common/remoteHosts';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostDecorations } from 'vs/workbench/api/common/extHostDecorations';\nimport { IExtHostTask } from 'vs/workbench/api/common/extHostTask';\nimport { IExtHostDebugService } from 'vs/workbench/api/common/extHostDebugService';\nimport { IExtHostSearch } from 'vs/workbench/api/common/extHostSearch';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IURITransformerService } from 'vs/workbench/api/common/extHostUriTransformerService';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { ExtHostNotebookController } from 'vs/workbench/api/common/extHostNotebook';\nimport { IExtHostNodeProxy } from 'vs/server/browser/extHostNodeProxy';\nimport { ExtHostTheming } from 'vs/workbench/api/common/extHostTheming';\nimport { IExtHostTunnelService } from 'vs/workbench/api/common/extHostTunnelService';\nimport { IExtHostApiDeprecationService } from 'vs/workbench/api/common/extHostApiDeprecationService';\nimport { ExtHostAuthentication } from 'vs/workbench/api/common/extHostAuthentication';\nimport { ExtHostTimeline } from 'vs/workbench/api/common/extHostTimeline';\nimport { ExtHostNotebookConcatDocument } from 'vs/workbench/api/common/extHostNotebookConcatDocument';\nimport { IExtensionStoragePaths } from 'vs/workbench/api/common/extHostStoragePaths';\n\nexport interface IExtensionApiFactory {\n\t(extension: IExtensionDescription, registry: ExtensionDescriptionRegistry, configProvider: ExtHostConfigProvider): typeof vscode;\n}\n\n/**\n * This method instantiates and returns the extension API surface\n */\nexport function createApiFactoryAndRegisterActors(accessor: ServicesAccessor): IExtensionApiFactory {\n\n\t// services\n\tconst initData = accessor.get(IExtHostInitDataService);\n\tconst extensionService = accessor.get(IExtHostExtensionService);\n\tconst extHostWorkspace = accessor.get(IExtHostWorkspace);\n\tconst extHostConfiguration = accessor.get(IExtHostConfiguration);\n\tconst uriTransformer = accessor.get(IURITransformerService);\n\tconst rpcProtocol = accessor.get(IExtHostRpcService);\n\tconst extHostStorage = accessor.get(IExtHostStorage);\n\tconst extensionStoragePaths = accessor.get(IExtensionStoragePaths);\n\tconst extHostLogService = accessor.get(ILogService);\n\tconst extHostNodeProxy = accessor.get(IExtHostNodeProxy);\n\tconst extHostTunnelService = accessor.get(IExtHostTunnelService);\n\tconst extHostApiDeprecation = accessor.get(IExtHostApiDeprecationService);\n\n\t// register addressable instances\n\trpcProtocol.set(ExtHostContext.ExtHostLogService, <ExtHostLogServiceShape><any>extHostLogService);\n\trpcProtocol.set(ExtHostContext.ExtHostWorkspace, extHostWorkspace);\n\trpcProtocol.set(ExtHostContext.ExtHostConfiguration, extHostConfiguration);\n\trpcProtocol.set(ExtHostContext.ExtHostExtensionService, extensionService);\n\trpcProtocol.set(ExtHostContext.ExtHostStorage, extHostStorage);\n\trpcProtocol.set(ExtHostContext.ExtHostNodeProxy, extHostNodeProxy);\n\trpcProtocol.set(ExtHostContext.ExtHostTunnelService, extHostTunnelService);\n\n\t// automatically create and register addressable instances\n\tconst extHostDecorations = rpcProtocol.set(ExtHostContext.ExtHostDecorations, accessor.get(IExtHostDecorations));\n\tconst extHostDocumentsAndEditors = rpcProtocol.set(ExtHostContext.ExtHostDocumentsAndEditors, accessor.get(IExtHostDocumentsAndEditors));\n\tconst extHostCommands = rpcProtocol.set(ExtHostContext.ExtHostCommands, accessor.get(IExtHostCommands));\n\tconst extHostTerminalService = rpcProtocol.set(ExtHostContext.ExtHostTerminalService, accessor.get(IExtHostTerminalService));\n\tconst extHostDebugService = rpcProtocol.set(ExtHostContext.ExtHostDebugService, accessor.get(IExtHostDebugService));\n\tconst extHostSearch = rpcProtocol.set(ExtHostContext.ExtHostSearch, accessor.get(IExtHostSearch));\n\tconst extHostTask = rpcProtocol.set(ExtHostContext.ExtHostTask, accessor.get(IExtHostTask));\n\tconst extHostOutputService = rpcProtocol.set(ExtHostContext.ExtHostOutputService, accessor.get(IExtHostOutputService));\n\n\t// manually create and register addressable instances\n\tconst extHostUrls = rpcProtocol.set(ExtHostContext.ExtHostUrls, new ExtHostUrls(rpcProtocol));\n\tconst extHostDocuments = rpcProtocol.set(ExtHostContext.ExtHostDocuments, new ExtHostDocuments(rpcProtocol, extHostDocumentsAndEditors));\n\tconst extHostDocumentContentProviders = rpcProtocol.set(ExtHostContext.ExtHostDocumentContentProviders, new ExtHostDocumentContentProvider(rpcProtocol, extHostDocumentsAndEditors, extHostLogService));\n\tconst extHostDocumentSaveParticipant = rpcProtocol.set(ExtHostContext.ExtHostDocumentSaveParticipant, new ExtHostDocumentSaveParticipant(extHostLogService, extHostDocuments, rpcProtocol.getProxy(MainContext.MainThreadTextEditors)));\n\tconst extHostEditors = rpcProtocol.set(ExtHostContext.ExtHostEditors, new ExtHostEditors(rpcProtocol, extHostDocumentsAndEditors));\n\tconst extHostTreeViews = rpcProtocol.set(ExtHostContext.ExtHostTreeViews, new ExtHostTreeViews(rpcProtocol.getProxy(MainContext.MainThreadTreeViews), extHostCommands, extHostLogService));\n\tconst extHostEditorInsets = rpcProtocol.set(ExtHostContext.ExtHostEditorInsets, new ExtHostEditorInsets(rpcProtocol.getProxy(MainContext.MainThreadEditorInsets), extHostEditors, initData.environment));\n\tconst extHostDiagnostics = rpcProtocol.set(ExtHostContext.ExtHostDiagnostics, new ExtHostDiagnostics(rpcProtocol, extHostLogService));\n\tconst extHostLanguageFeatures = rpcProtocol.set(ExtHostContext.ExtHostLanguageFeatures, new ExtHostLanguageFeatures(rpcProtocol, uriTransformer, extHostDocuments, extHostCommands, extHostDiagnostics, extHostLogService, extHostApiDeprecation));\n\tconst extHostFileSystem = rpcProtocol.set(ExtHostContext.ExtHostFileSystem, new ExtHostFileSystem(rpcProtocol, extHostLanguageFeatures));\n\tconst extHostFileSystemEvent = rpcProtocol.set(ExtHostContext.ExtHostFileSystemEventService, new ExtHostFileSystemEventService(rpcProtocol, extHostLogService, extHostDocumentsAndEditors));\n\tconst extHostQuickOpen = rpcProtocol.set(ExtHostContext.ExtHostQuickOpen, new ExtHostQuickOpen(rpcProtocol, extHostWorkspace, extHostCommands));\n\tconst extHostSCM = rpcProtocol.set(ExtHostContext.ExtHostSCM, new ExtHostSCM(rpcProtocol, extHostCommands, extHostLogService));\n\tconst extHostComment = rpcProtocol.set(ExtHostContext.ExtHostComments, new ExtHostComments(rpcProtocol, extHostCommands, extHostDocuments));\n\tconst extHostWindow = rpcProtocol.set(ExtHostContext.ExtHostWindow, new ExtHostWindow(rpcProtocol));\n\tconst extHostProgress = rpcProtocol.set(ExtHostContext.ExtHostProgress, new ExtHostProgress(rpcProtocol.getProxy(MainContext.MainThreadProgress)));\n\tconst extHostLabelService = rpcProtocol.set(ExtHostContext.ExtHosLabelService, new ExtHostLabelService(rpcProtocol));\n\tconst extHostNotebook = rpcProtocol.set(ExtHostContext.ExtHostNotebook, new ExtHostNotebookController(rpcProtocol, extHostCommands, extHostDocumentsAndEditors));\n\tconst extHostTheming = rpcProtocol.set(ExtHostContext.ExtHostTheming, new ExtHostTheming(rpcProtocol));\n\tconst extHostAuthentication = rpcProtocol.set(ExtHostContext.ExtHostAuthentication, new ExtHostAuthentication(rpcProtocol));\n\tconst extHostTimeline = rpcProtocol.set(ExtHostContext.ExtHostTimeline, new ExtHostTimeline(rpcProtocol, extHostCommands));\n\tconst extHostWebviews = rpcProtocol.set(ExtHostContext.ExtHostWebviews, new ExtHostWebviews(rpcProtocol, initData.environment, extHostWorkspace, extHostLogService, extHostApiDeprecation, extHostDocuments, extensionStoragePaths));\n\n\t// Check that no named customers are missing\n\tconst expected: ProxyIdentifier<any>[] = values(ExtHostContext);\n\trpcProtocol.assertRegistered(expected);\n\n\t// Other instances\n\tconst extHostClipboard = new ExtHostClipboard(rpcProtocol);\n\tconst extHostMessageService = new ExtHostMessageService(rpcProtocol, extHostLogService);\n\tconst extHostDialogs = new ExtHostDialogs(rpcProtocol);\n\tconst extHostStatusBar = new ExtHostStatusBar(rpcProtocol, extHostCommands.converter);\n\tconst extHostLanguages = new ExtHostLanguages(rpcProtocol, extHostDocuments);\n\n\t// Register API-ish commands\n\tExtHostApiCommands.register(extHostCommands);\n\n\treturn function (extension: IExtensionDescription, extensionRegistry: ExtensionDescriptionRegistry, configProvider: ExtHostConfigProvider): typeof vscode {\n\n\t\t// Check document selectors for being overly generic. Technically this isn't a problem but\n\t\t// in practice many extensions say they support `fooLang` but need fs-access to do so. Those\n\t\t// extension should specify then the `file`-scheme, e.g. `{ scheme: 'fooLang', language: 'fooLang' }`\n\t\t// We only inform once, it is not a warning because we just want to raise awareness and because\n\t\t// we cannot say if the extension is doing it right or wrong...\n\t\tconst checkSelector = (function () {\n\t\t\tlet done = (!extension.isUnderDevelopment);\n\t\t\tfunction informOnce(selector: vscode.DocumentSelector) {\n\t\t\t\tif (!done) {\n\t\t\t\t\textHostLogService.info(`Extension '${extension.identifier.value}' uses a document selector without scheme. Learn more about this: https://go.microsoft.com/fwlink/?linkid=872305`);\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn function perform(selector: vscode.DocumentSelector): vscode.DocumentSelector {\n\t\t\t\tif (Array.isArray(selector)) {\n\t\t\t\t\tselector.forEach(perform);\n\t\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\t\tinformOnce(selector);\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof selector.scheme === 'undefined') {\n\t\t\t\t\t\tinformOnce(selector);\n\t\t\t\t\t}\n\t\t\t\t\tif (!extension.enableProposedApi && typeof selector.exclusive === 'boolean') {\n\t\t\t\t\t\tthrowProposedApiError(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn selector;\n\t\t\t};\n\t\t})();\n\n\t\tconst authentication: typeof vscode.authentication = {\n\t\t\tregisterAuthenticationProvider(provider: vscode.AuthenticationProvider): vscode.Disposable {\n\t\t\t\treturn extHostAuthentication.registerAuthenticationProvider(provider);\n\t\t\t},\n\t\t\tget onDidChangeAuthenticationProviders(): Event<vscode.AuthenticationProvidersChangeEvent> {\n\t\t\t\treturn extHostAuthentication.onDidChangeAuthenticationProviders;\n\t\t\t},\n\t\t\tget providerIds(): string[] {\n\t\t\t\treturn extHostAuthentication.providerIds;\n\t\t\t},\n\t\t\tgetSessions(providerId: string, scopes: string[]): Thenable<readonly vscode.AuthenticationSession[]> {\n\t\t\t\treturn extHostAuthentication.getSessions(extension, providerId, scopes);\n\t\t\t},\n\t\t\tlogin(providerId: string, scopes: string[]): Thenable<vscode.AuthenticationSession> {\n\t\t\t\treturn extHostAuthentication.login(extension, providerId, scopes);\n\t\t\t},\n\t\t\tlogout(providerId: string, sessionId: string): Thenable<void> {\n\t\t\t\treturn extHostAuthentication.logout(providerId, sessionId);\n\t\t\t},\n\t\t\tget onDidChangeSessions(): Event<{ [providerId: string]: vscode.AuthenticationSessionsChangeEvent }> {\n\t\t\t\treturn extHostAuthentication.onDidChangeSessions;\n\t\t\t},\n\t\t};\n\n\t\t// namespace: commands\n\t\tconst commands: typeof vscode.commands = {\n\t\t\tregisterCommand(id: string, command: <T>(...args: any[]) => T | Thenable<T>, thisArgs?: any): vscode.Disposable {\n\t\t\t\treturn extHostCommands.registerCommand(true, id, command, thisArgs);\n\t\t\t},\n\t\t\tregisterTextEditorCommand(id: string, callback: (textEditor: vscode.TextEditor, edit: vscode.TextEditorEdit, ...args: any[]) => void, thisArg?: any): vscode.Disposable {\n\t\t\t\treturn extHostCommands.registerCommand(true, id, (...args: any[]): any => {\n\t\t\t\t\tconst activeTextEditor = extHostEditors.getActiveTextEditor();\n\t\t\t\t\tif (!activeTextEditor) {\n\t\t\t\t\t\textHostLogService.warn('Cannot execute ' + id + ' because there is no active text editor.');\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn activeTextEditor.edit((edit: vscode.TextEditorEdit) => {\n\t\t\t\t\t\tcallback.apply(thisArg, [activeTextEditor, edit, ...args]);\n\n\t\t\t\t\t}).then((result) => {\n\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\textHostLogService.warn('Edits from command ' + id + ' were not applied.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\textHostLogService.warn('An error occurred while running command ' + id, err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tregisterDiffInformationCommand: (id: string, callback: (diff: vscode.LineChange[], ...args: any[]) => any, thisArg?: any): vscode.Disposable => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostCommands.registerCommand(true, id, async (...args: any[]): Promise<any> => {\n\t\t\t\t\tconst activeTextEditor = extHostEditors.getActiveTextEditor();\n\t\t\t\t\tif (!activeTextEditor) {\n\t\t\t\t\t\textHostLogService.warn('Cannot execute ' + id + ' because there is no active text editor.');\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst diff = await extHostEditors.getDiffInformation(activeTextEditor.id);\n\t\t\t\t\tcallback.apply(thisArg, [diff, ...args]);\n\t\t\t\t});\n\t\t\t},\n\t\t\texecuteCommand<T>(id: string, ...args: any[]): Thenable<T> {\n\t\t\t\treturn extHostCommands.executeCommand<T>(id, ...args);\n\t\t\t},\n\t\t\tgetCommands(filterInternal: boolean = false): Thenable<string[]> {\n\t\t\t\treturn extHostCommands.getCommands(filterInternal);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: env\n\t\tconst env: typeof vscode.env = {\n\t\t\tget machineId() { return initData.telemetryInfo.machineId; },\n\t\t\tget sessionId() { return initData.telemetryInfo.sessionId; },\n\t\t\tget language() { return initData.environment.appLanguage; },\n\t\t\tget appName() { return initData.environment.appName; },\n\t\t\tget appRoot() { return initData.environment.appRoot!.fsPath; },\n\t\t\tget uriScheme() { return initData.environment.appUriScheme; },\n\t\t\tget logLevel() {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn typeConverters.LogLevel.to(extHostLogService.getLevel());\n\t\t\t},\n\t\t\tget onDidChangeLogLevel() {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn Event.map(extHostLogService.onDidChangeLogLevel, l => typeConverters.LogLevel.to(l));\n\t\t\t},\n\t\t\tget clipboard(): vscode.Clipboard {\n\t\t\t\treturn extHostClipboard;\n\t\t\t},\n\t\t\tget shell() {\n\t\t\t\treturn extHostTerminalService.getDefaultShell(false, configProvider);\n\t\t\t},\n\t\t\topenExternal(uri: URI) {\n\t\t\t\treturn extHostWindow.openUri(uri, { allowTunneling: !!initData.remote.authority });\n\t\t\t},\n\t\t\tasExternalUri(uri: URI) {\n\t\t\t\tif (uri.scheme === initData.environment.appUriScheme) {\n\t\t\t\t\treturn extHostUrls.createAppUri(uri);\n\t\t\t\t}\n\n\t\t\t\treturn extHostWindow.asExternalUri(uri, { allowTunneling: !!initData.remote.authority });\n\t\t\t},\n\t\t\tget remoteName() {\n\t\t\t\treturn getRemoteName(initData.remote.authority);\n\t\t\t},\n\t\t\tget uiKind() {\n\t\t\t\treturn initData.uiKind;\n\t\t\t}\n\t\t};\n\t\tif (!initData.environment.extensionTestsLocationURI) {\n\t\t\t// allow to patch env-function when running tests\n\t\t\tObject.freeze(env);\n\t\t}\n\n\t\tconst extensionKind = initData.remote.isRemote\n\t\t\t? extHostTypes.ExtensionKind.Workspace\n\t\t\t: extHostTypes.ExtensionKind.UI;\n\n\t\t// namespace: extensions\n\t\tconst extensions: typeof vscode.extensions = {\n\t\t\tgetExtension(extensionId: string): Extension<any> | undefined {\n\t\t\t\tconst desc = extensionRegistry.getExtensionDescription(extensionId);\n\t\t\t\tif (desc) {\n\t\t\t\t\treturn new Extension(extensionService, extension.identifier, desc, extensionKind);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tget all(): Extension<any>[] {\n\t\t\t\treturn extensionRegistry.getAllExtensionDescriptions().map((desc) => new Extension(extensionService, extension.identifier, desc, extensionKind));\n\t\t\t},\n\t\t\tget onDidChange() {\n\t\t\t\treturn extensionRegistry.onDidChange;\n\t\t\t}\n\t\t};\n\n\t\t// namespace: languages\n\t\tconst languages: typeof vscode.languages = {\n\t\t\tcreateDiagnosticCollection(name?: string): vscode.DiagnosticCollection {\n\t\t\t\treturn extHostDiagnostics.createDiagnosticCollection(extension.identifier, name);\n\t\t\t},\n\t\t\tget onDidChangeDiagnostics() {\n\t\t\t\treturn extHostDiagnostics.onDidChangeDiagnostics;\n\t\t\t},\n\t\t\tgetDiagnostics: (resource?: vscode.Uri) => {\n\t\t\t\treturn <any>extHostDiagnostics.getDiagnostics(resource);\n\t\t\t},\n\t\t\tgetLanguages(): Thenable<string[]> {\n\t\t\t\treturn extHostLanguages.getLanguages();\n\t\t\t},\n\t\t\tsetTextDocumentLanguage(document: vscode.TextDocument, languageId: string): Thenable<vscode.TextDocument> {\n\t\t\t\treturn extHostLanguages.changeLanguage(document.uri, languageId);\n\t\t\t},\n\t\t\tmatch(selector: vscode.DocumentSelector, document: vscode.TextDocument): number {\n\t\t\t\treturn score(typeConverters.LanguageSelector.from(selector), document.uri, document.languageId, true);\n\t\t\t},\n\t\t\tregisterCodeActionsProvider(selector: vscode.DocumentSelector, provider: vscode.CodeActionProvider, metadata?: vscode.CodeActionProviderMetadata): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCodeActionProvider(extension, checkSelector(selector), provider, metadata);\n\t\t\t},\n\t\t\tregisterCodeLensProvider(selector: vscode.DocumentSelector, provider: vscode.CodeLensProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCodeLensProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDefinitionProvider(selector: vscode.DocumentSelector, provider: vscode.DefinitionProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDefinitionProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDeclarationProvider(selector: vscode.DocumentSelector, provider: vscode.DeclarationProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDeclarationProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterImplementationProvider(selector: vscode.DocumentSelector, provider: vscode.ImplementationProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerImplementationProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterTypeDefinitionProvider(selector: vscode.DocumentSelector, provider: vscode.TypeDefinitionProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerTypeDefinitionProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterHoverProvider(selector: vscode.DocumentSelector, provider: vscode.HoverProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerHoverProvider(extension, checkSelector(selector), provider, extension.identifier);\n\t\t\t},\n\t\t\tregisterEvaluatableExpressionProvider(selector: vscode.DocumentSelector, provider: vscode.EvaluatableExpressionProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerEvaluatableExpressionProvider(extension, checkSelector(selector), provider, extension.identifier);\n\t\t\t},\n\t\t\tregisterDocumentHighlightProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentHighlightProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentHighlightProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterOnTypeRenameProvider(selector: vscode.DocumentSelector, provider: vscode.OnTypeRenameProvider, stopPattern?: RegExp): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostLanguageFeatures.registerOnTypeRenameProvider(extension, checkSelector(selector), provider, stopPattern);\n\t\t\t},\n\t\t\tregisterReferenceProvider(selector: vscode.DocumentSelector, provider: vscode.ReferenceProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerReferenceProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterRenameProvider(selector: vscode.DocumentSelector, provider: vscode.RenameProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerRenameProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDocumentSymbolProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentSymbolProvider, metadata?: vscode.DocumentSymbolProviderMetadata): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentSymbolProvider(extension, checkSelector(selector), provider, metadata);\n\t\t\t},\n\t\t\tregisterWorkspaceSymbolProvider(provider: vscode.WorkspaceSymbolProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerWorkspaceSymbolProvider(extension, provider);\n\t\t\t},\n\t\t\tregisterDocumentFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentFormattingEditProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentFormattingEditProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDocumentRangeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentRangeFormattingEditProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentRangeFormattingEditProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterOnTypeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.OnTypeFormattingEditProvider, firstTriggerCharacter: string, ...moreTriggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerOnTypeFormattingEditProvider(extension, checkSelector(selector), provider, [firstTriggerCharacter].concat(moreTriggerCharacters));\n\t\t\t},\n\t\t\tregisterDocumentSemanticTokensProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentSemanticTokensProvider, legend: vscode.SemanticTokensLegend): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentSemanticTokensProvider(extension, checkSelector(selector), provider, legend);\n\t\t\t},\n\t\t\tregisterDocumentRangeSemanticTokensProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentRangeSemanticTokensProvider, legend: vscode.SemanticTokensLegend): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentRangeSemanticTokensProvider(extension, checkSelector(selector), provider, legend);\n\t\t\t},\n\t\t\tregisterSignatureHelpProvider(selector: vscode.DocumentSelector, provider: vscode.SignatureHelpProvider, firstItem?: string | vscode.SignatureHelpProviderMetadata, ...remaining: string[]): vscode.Disposable {\n\t\t\t\tif (typeof firstItem === 'object') {\n\t\t\t\t\treturn extHostLanguageFeatures.registerSignatureHelpProvider(extension, checkSelector(selector), provider, firstItem);\n\t\t\t\t}\n\t\t\t\treturn extHostLanguageFeatures.registerSignatureHelpProvider(extension, checkSelector(selector), provider, typeof firstItem === 'undefined' ? [] : [firstItem, ...remaining]);\n\t\t\t},\n\t\t\tregisterCompletionItemProvider(selector: vscode.DocumentSelector, provider: vscode.CompletionItemProvider, ...triggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCompletionItemProvider(extension, checkSelector(selector), provider, triggerCharacters);\n\t\t\t},\n\t\t\tregisterDocumentLinkProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentLinkProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentLinkProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterColorProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentColorProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerColorProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterFoldingRangeProvider(selector: vscode.DocumentSelector, provider: vscode.FoldingRangeProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerFoldingRangeProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterSelectionRangeProvider(selector: vscode.DocumentSelector, provider: vscode.SelectionRangeProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerSelectionRangeProvider(extension, selector, provider);\n\t\t\t},\n\t\t\tregisterCallHierarchyProvider(selector: vscode.DocumentSelector, provider: vscode.CallHierarchyProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCallHierarchyProvider(extension, selector, provider);\n\t\t\t},\n\t\t\tsetLanguageConfiguration: (language: string, configuration: vscode.LanguageConfiguration): vscode.Disposable => {\n\t\t\t\treturn extHostLanguageFeatures.setLanguageConfiguration(extension, language, configuration);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: window\n\t\tconst window: typeof vscode.window = {\n\t\t\tget activeTextEditor() {\n\t\t\t\treturn extHostEditors.getActiveTextEditor();\n\t\t\t},\n\t\t\tget visibleTextEditors() {\n\t\t\t\treturn extHostEditors.getVisibleTextEditors();\n\t\t\t},\n\t\t\tget activeTerminal() {\n\t\t\t\treturn extHostTerminalService.activeTerminal;\n\t\t\t},\n\t\t\tget terminals() {\n\t\t\t\treturn extHostTerminalService.terminals;\n\t\t\t},\n\t\t\tshowTextDocument(documentOrUri: vscode.TextDocument | vscode.Uri, columnOrOptions?: vscode.ViewColumn | vscode.TextDocumentShowOptions, preserveFocus?: boolean): Thenable<vscode.TextEditor> {\n\t\t\t\tlet documentPromise: Promise<vscode.TextDocument>;\n\t\t\t\tif (URI.isUri(documentOrUri)) {\n\t\t\t\t\tdocumentPromise = Promise.resolve(workspace.openTextDocument(documentOrUri));\n\t\t\t\t} else {\n\t\t\t\t\tdocumentPromise = Promise.resolve(<vscode.TextDocument>documentOrUri);\n\t\t\t\t}\n\t\t\t\treturn documentPromise.then(document => {\n\t\t\t\t\treturn extHostEditors.showTextDocument(document, columnOrOptions, preserveFocus);\n\t\t\t\t});\n\t\t\t},\n\t\t\tcreateTextEditorDecorationType(options: vscode.DecorationRenderOptions): vscode.TextEditorDecorationType {\n\t\t\t\treturn extHostEditors.createTextEditorDecorationType(options);\n\t\t\t},\n\t\t\tonDidChangeActiveTextEditor(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostEditors.onDidChangeActiveTextEditor(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeVisibleTextEditors(listener, thisArg, disposables) {\n\t\t\t\treturn extHostEditors.onDidChangeVisibleTextEditors(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorSelection(listener: (e: vscode.TextEditorSelectionChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn extHostEditors.onDidChangeTextEditorSelection(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorOptions(listener: (e: vscode.TextEditorOptionsChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn extHostEditors.onDidChangeTextEditorOptions(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorVisibleRanges(listener: (e: vscode.TextEditorVisibleRangesChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn extHostEditors.onDidChangeTextEditorVisibleRanges(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorViewColumn(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostEditors.onDidChangeTextEditorViewColumn(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidCloseTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostTerminalService.onDidCloseTerminal(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidOpenTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostTerminalService.onDidOpenTerminal(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeActiveTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostTerminalService.onDidChangeActiveTerminal(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeTerminalDimensions(listener, thisArg?, disposables?) {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostTerminalService.onDidChangeTerminalDimensions(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidWriteTerminalData(listener, thisArg?, disposables?) {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostTerminalService.onDidWriteTerminalData(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tget state() {\n\t\t\t\treturn extHostWindow.state;\n\t\t\t},\n\t\t\tonDidChangeWindowState(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostWindow.onDidChangeWindowState(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tshowInformationMessage(message: string, ...rest: Array<vscode.MessageOptions | string | vscode.MessageItem>) {\n\t\t\t\treturn <Thenable<any>>extHostMessageService.showMessage(extension, Severity.Info, message, rest[0], <Array<string | vscode.MessageItem>>rest.slice(1));\n\t\t\t},\n\t\t\tshowWarningMessage(message: string, ...rest: Array<vscode.MessageOptions | string | vscode.MessageItem>) {\n\t\t\t\treturn <Thenable<any>>extHostMessageService.showMessage(extension, Severity.Warning, message, rest[0], <Array<string | vscode.MessageItem>>rest.slice(1));\n\t\t\t},\n\t\t\tshowErrorMessage(message: string, ...rest: Array<vscode.MessageOptions | string | vscode.MessageItem>) {\n\t\t\t\treturn <Thenable<any>>extHostMessageService.showMessage(extension, Severity.Error, message, rest[0], <Array<string | vscode.MessageItem>>rest.slice(1));\n\t\t\t},\n\t\t\tshowQuickPick(items: any, options?: vscode.QuickPickOptions, token?: vscode.CancellationToken): any {\n\t\t\t\treturn extHostQuickOpen.showQuickPick(items, !!extension.enableProposedApi, options, token);\n\t\t\t},\n\t\t\tshowWorkspaceFolderPick(options?: vscode.WorkspaceFolderPickOptions) {\n\t\t\t\treturn extHostQuickOpen.showWorkspaceFolderPick(options);\n\t\t\t},\n\t\t\tshowInputBox(options?: vscode.InputBoxOptions, token?: vscode.CancellationToken) {\n\t\t\t\treturn extHostQuickOpen.showInput(options, token);\n\t\t\t},\n\t\t\tshowOpenDialog(options) {\n\t\t\t\treturn extHostDialogs.showOpenDialog(options);\n\t\t\t},\n\t\t\tshowSaveDialog(options) {\n\t\t\t\treturn extHostDialogs.showSaveDialog(options);\n\t\t\t},\n\t\t\tcreateStatusBarItem(alignmentOrOptions?: vscode.StatusBarAlignment | vscode.window.StatusBarItemOptions, priority?: number): vscode.StatusBarItem {\n\t\t\t\tlet id: string;\n\t\t\t\tlet name: string;\n\t\t\t\tlet alignment: number | undefined;\n\n\t\t\t\tif (alignmentOrOptions && typeof alignmentOrOptions !== 'number') {\n\t\t\t\t\tid = alignmentOrOptions.id;\n\t\t\t\t\tname = alignmentOrOptions.name;\n\t\t\t\t\talignment = alignmentOrOptions.alignment;\n\t\t\t\t\tpriority = alignmentOrOptions.priority;\n\t\t\t\t} else {\n\t\t\t\t\tid = extension.identifier.value;\n\t\t\t\t\tname = nls.localize('extensionLabel', \"{0} (Extension)\", extension.displayName || extension.name);\n\t\t\t\t\talignment = alignmentOrOptions;\n\t\t\t\t\tpriority = priority;\n\t\t\t\t}\n\n\t\t\t\treturn extHostStatusBar.createStatusBarEntry(id, name, alignment, priority);\n\t\t\t},\n\t\t\tsetStatusBarMessage(text: string, timeoutOrThenable?: number | Thenable<any>): vscode.Disposable {\n\t\t\t\treturn extHostStatusBar.setStatusBarMessage(text, timeoutOrThenable);\n\t\t\t},\n\t\t\twithScmProgress<R>(task: (progress: vscode.Progress<number>) => Thenable<R>) {\n\t\t\t\textHostApiDeprecation.report('window.withScmProgress', extension,\n\t\t\t\t\t`Use 'withProgress' instead.`);\n\n\t\t\t\treturn extHostProgress.withProgress(extension, { location: extHostTypes.ProgressLocation.SourceControl }, (progress, token) => task({ report(n: number) { /*noop*/ } }));\n\t\t\t},\n\t\t\twithProgress<R>(options: vscode.ProgressOptions, task: (progress: vscode.Progress<{ message?: string; worked?: number }>, token: vscode.CancellationToken) => Thenable<R>) {\n\t\t\t\treturn extHostProgress.withProgress(extension, options, task);\n\t\t\t},\n\t\t\tcreateOutputChannel(name: string): vscode.OutputChannel {\n\t\t\t\treturn extHostOutputService.createOutputChannel(name);\n\t\t\t},\n\t\t\tcreateWebviewPanel(viewType: string, title: string, showOptions: vscode.ViewColumn | { viewColumn: vscode.ViewColumn, preserveFocus?: boolean }, options?: vscode.WebviewPanelOptions & vscode.WebviewOptions): vscode.WebviewPanel {\n\t\t\t\treturn extHostWebviews.createWebviewPanel(extension, viewType, title, showOptions, options);\n\t\t\t},\n\t\t\tcreateWebviewTextEditorInset(editor: vscode.TextEditor, line: number, height: number, options?: vscode.WebviewOptions): vscode.WebviewEditorInset {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostEditorInsets.createWebviewEditorInset(editor, line, height, options, extension);\n\t\t\t},\n\t\t\tcreateTerminal(nameOrOptions?: vscode.TerminalOptions | vscode.ExtensionTerminalOptions | string, shellPath?: string, shellArgs?: string[] | string): vscode.Terminal {\n\t\t\t\tif (typeof nameOrOptions === 'object') {\n\t\t\t\t\tif ('pty' in nameOrOptions) {\n\t\t\t\t\t\treturn extHostTerminalService.createExtensionTerminal(nameOrOptions);\n\t\t\t\t\t}\n\t\t\t\t\treturn extHostTerminalService.createTerminalFromOptions(nameOrOptions);\n\t\t\t\t}\n\t\t\t\treturn extHostTerminalService.createTerminal(nameOrOptions, shellPath, shellArgs);\n\t\t\t},\n\t\t\tregisterTerminalLinkHandler(handler: vscode.TerminalLinkHandler): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostTerminalService.registerLinkHandler(handler);\n\t\t\t},\n\t\t\tregisterTreeDataProvider(viewId: string, treeDataProvider: vscode.TreeDataProvider<any>): vscode.Disposable {\n\t\t\t\treturn extHostTreeViews.registerTreeDataProvider(viewId, treeDataProvider, extension);\n\t\t\t},\n\t\t\tcreateTreeView(viewId: string, options: { treeDataProvider: vscode.TreeDataProvider<any> }): vscode.TreeView<any> {\n\t\t\t\treturn extHostTreeViews.createTreeView(viewId, options, extension);\n\t\t\t},\n\t\t\tregisterWebviewPanelSerializer: (viewType: string, serializer: vscode.WebviewPanelSerializer) => {\n\t\t\t\treturn extHostWebviews.registerWebviewPanelSerializer(extension, viewType, serializer);\n\t\t\t},\n\t\t\tregisterCustomEditorProvider: (viewType: string, provider: vscode.CustomTextEditorProvider, options: { webviewOptions?: vscode.WebviewPanelOptions } = {}) => {\n\t\t\t\treturn extHostWebviews.registerCustomEditorProvider(extension, viewType, provider, options);\n\t\t\t},\n\t\t\tregisterCustomEditorProvider2: (viewType: string, provider: vscode.CustomReadonlyEditorProvider, options: { webviewOptions?: vscode.WebviewPanelOptions, supportsMultipleEditorsPerDocument?: boolean } = {}) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostWebviews.registerCustomEditorProvider(extension, viewType, provider, options);\n\t\t\t},\n\t\t\tregisterDecorationProvider(provider: vscode.DecorationProvider) {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostDecorations.registerDecorationProvider(provider, extension.identifier);\n\t\t\t},\n\t\t\tregisterUriHandler(handler: vscode.UriHandler) {\n\t\t\t\treturn extHostUrls.registerUriHandler(extension.identifier, handler);\n\t\t\t},\n\t\t\tcreateQuickPick<T extends vscode.QuickPickItem>(): vscode.QuickPick<T> {\n\t\t\t\treturn extHostQuickOpen.createQuickPick(extension.identifier, !!extension.enableProposedApi);\n\t\t\t},\n\t\t\tcreateInputBox(): vscode.InputBox {\n\t\t\t\treturn extHostQuickOpen.createInputBox(extension.identifier);\n\t\t\t},\n\t\t\tget activeColorTheme(): vscode.ColorTheme {\n\t\t\t\treturn extHostTheming.activeColorTheme;\n\t\t\t},\n\t\t\tonDidChangeActiveColorTheme(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostTheming.onDidChangeActiveColorTheme(listener, thisArg, disposables);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: workspace\n\n\t\tconst workspace: typeof vscode.workspace = {\n\t\t\tget rootPath() {\n\t\t\t\textHostApiDeprecation.report('workspace.rootPath', extension,\n\t\t\t\t\t`Please use 'workspace.workspaceFolders' instead. More details: https://aka.ms/vscode-eliminating-rootpath`);\n\n\t\t\t\treturn extHostWorkspace.getPath();\n\t\t\t},\n\t\t\tset rootPath(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\tgetWorkspaceFolder(resource) {\n\t\t\t\treturn extHostWorkspace.getWorkspaceFolder(resource);\n\t\t\t},\n\t\t\tget workspaceFolders() {\n\t\t\t\treturn extHostWorkspace.getWorkspaceFolders();\n\t\t\t},\n\t\t\tget name() {\n\t\t\t\treturn extHostWorkspace.name;\n\t\t\t},\n\t\t\tset name(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\tget workspaceFile() {\n\t\t\t\treturn extHostWorkspace.workspaceFile;\n\t\t\t},\n\t\t\tset workspaceFile(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\tupdateWorkspaceFolders: (index, deleteCount, ...workspaceFoldersToAdd) => {\n\t\t\t\treturn extHostWorkspace.updateWorkspaceFolders(extension, index, deleteCount || 0, ...workspaceFoldersToAdd);\n\t\t\t},\n\t\t\tonDidChangeWorkspaceFolders: function (listener, thisArgs?, disposables?) {\n\t\t\t\treturn extHostWorkspace.onDidChangeWorkspace(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tasRelativePath: (pathOrUri, includeWorkspace?) => {\n\t\t\t\treturn extHostWorkspace.getRelativePath(pathOrUri, includeWorkspace);\n\t\t\t},\n\t\t\tfindFiles: (include, exclude, maxResults?, token?) => {\n\t\t\t\t// Note, undefined/null have different meanings on \"exclude\"\n\t\t\t\treturn extHostWorkspace.findFiles(typeConverters.GlobPattern.from(include), typeConverters.GlobPattern.from(exclude), maxResults, extension.identifier, token);\n\t\t\t},\n\t\t\tfindTextInFiles: (query: vscode.TextSearchQuery, optionsOrCallback: vscode.FindTextInFilesOptions | ((result: vscode.TextSearchResult) => void), callbackOrToken?: vscode.CancellationToken | ((result: vscode.TextSearchResult) => void), token?: vscode.CancellationToken) => {\n\t\t\t\tlet options: vscode.FindTextInFilesOptions;\n\t\t\t\tlet callback: (result: vscode.TextSearchResult) => void;\n\n\t\t\t\tif (typeof optionsOrCallback === 'object') {\n\t\t\t\t\toptions = optionsOrCallback;\n\t\t\t\t\tcallback = callbackOrToken as (result: vscode.TextSearchResult) => void;\n\t\t\t\t} else {\n\t\t\t\t\toptions = {};\n\t\t\t\t\tcallback = optionsOrCallback;\n\t\t\t\t\ttoken = callbackOrToken as vscode.CancellationToken;\n\t\t\t\t}\n\n\t\t\t\treturn extHostWorkspace.findTextInFiles(query, options || {}, callback, extension.identifier, token);\n\t\t\t},\n\t\t\tsaveAll: (includeUntitled?) => {\n\t\t\t\treturn extHostWorkspace.saveAll(includeUntitled);\n\t\t\t},\n\t\t\tapplyEdit(edit: vscode.WorkspaceEdit): Thenable<boolean> {\n\t\t\t\treturn extHostEditors.applyWorkspaceEdit(edit);\n\t\t\t},\n\t\t\tcreateFileSystemWatcher: (pattern, ignoreCreate, ignoreChange, ignoreDelete): vscode.FileSystemWatcher => {\n\t\t\t\treturn extHostFileSystemEvent.createFileSystemWatcher(typeConverters.GlobPattern.from(pattern), ignoreCreate, ignoreChange, ignoreDelete);\n\t\t\t},\n\t\t\tget textDocuments() {\n\t\t\t\treturn extHostDocuments.getAllDocumentData().map(data => data.document);\n\t\t\t},\n\t\t\tset textDocuments(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\topenTextDocument(uriOrFileNameOrOptions?: vscode.Uri | string | { language?: string; content?: string; }) {\n\t\t\t\tlet uriPromise: Thenable<URI>;\n\n\t\t\t\tconst options = uriOrFileNameOrOptions as { language?: string; content?: string; };\n\t\t\t\tif (typeof uriOrFileNameOrOptions === 'string') {\n\t\t\t\t\turiPromise = Promise.resolve(URI.file(uriOrFileNameOrOptions));\n\t\t\t\t} else if (URI.isUri(uriOrFileNameOrOptions)) {\n\t\t\t\t\turiPromise = Promise.resolve(uriOrFileNameOrOptions);\n\t\t\t\t} else if (!options || typeof options === 'object') {\n\t\t\t\t\turiPromise = extHostDocuments.createDocumentData(options);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('illegal argument - uriOrFileNameOrOptions');\n\t\t\t\t}\n\n\t\t\t\treturn uriPromise.then(uri => {\n\t\t\t\t\treturn extHostDocuments.ensureDocumentData(uri).then(() => {\n\t\t\t\t\t\treturn extHostDocuments.getDocument(uri);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tonDidOpenTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocuments.onDidAddDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidCloseTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocuments.onDidRemoveDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocuments.onDidChangeDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidSaveTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocuments.onDidSaveDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonWillSaveTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocumentSaveParticipant.getOnWillSaveTextDocumentEvent(extension)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeConfiguration: (listener: (_: any) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) => {\n\t\t\t\treturn configProvider.onDidChangeConfiguration(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tgetConfiguration(section?: string, scope?: vscode.ConfigurationScope | null): vscode.WorkspaceConfiguration {\n\t\t\t\tscope = arguments.length === 1 ? undefined : scope;\n\t\t\t\treturn configProvider.getConfiguration(section, scope, extension);\n\t\t\t},\n\t\t\tregisterTextDocumentContentProvider(scheme: string, provider: vscode.TextDocumentContentProvider) {\n\t\t\t\treturn extHostDocumentContentProviders.registerTextDocumentContentProvider(scheme, provider);\n\t\t\t},\n\t\t\tregisterTaskProvider: (type: string, provider: vscode.TaskProvider) => {\n\t\t\t\textHostApiDeprecation.report('window.registerTaskProvider', extension,\n\t\t\t\t\t`Use the corresponding function on the 'tasks' namespace instead`);\n\n\t\t\t\treturn extHostTask.registerTaskProvider(extension, type, provider);\n\t\t\t},\n\t\t\tregisterFileSystemProvider(scheme, provider, options) {\n\t\t\t\treturn extHostFileSystem.registerFileSystemProvider(scheme, provider, options);\n\t\t\t},\n\t\t\tget fs() {\n\t\t\t\treturn extHostFileSystem.fileSystem;\n\t\t\t},\n\t\t\tregisterFileSearchProvider: (scheme: string, provider: vscode.FileSearchProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostSearch.registerFileSearchProvider(scheme, provider);\n\t\t\t},\n\t\t\tregisterTextSearchProvider: (scheme: string, provider: vscode.TextSearchProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostSearch.registerTextSearchProvider(scheme, provider);\n\t\t\t},\n\t\t\tregisterRemoteAuthorityResolver: (authorityPrefix: string, resolver: vscode.RemoteAuthorityResolver) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extensionService.registerRemoteAuthorityResolver(authorityPrefix, resolver);\n\t\t\t},\n\t\t\tregisterResourceLabelFormatter: (formatter: vscode.ResourceLabelFormatter) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostLabelService.$registerResourceLabelFormatter(formatter);\n\t\t\t},\n\t\t\tonDidCreateFiles: (listener, thisArg, disposables) => {\n\t\t\t\treturn extHostFileSystemEvent.onDidCreateFile(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidDeleteFiles: (listener, thisArg, disposables) => {\n\t\t\t\treturn extHostFileSystemEvent.onDidDeleteFile(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidRenameFiles: (listener, thisArg, disposables) => {\n\t\t\t\treturn extHostFileSystemEvent.onDidRenameFile(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonWillCreateFiles: (listener: (e: vscode.FileWillCreateEvent) => any, thisArg?: any, disposables?: vscode.Disposable[]) => {\n\t\t\t\treturn extHostFileSystemEvent.getOnWillCreateFileEvent(extension)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonWillDeleteFiles: (listener: (e: vscode.FileWillDeleteEvent) => any, thisArg?: any, disposables?: vscode.Disposable[]) => {\n\t\t\t\treturn extHostFileSystemEvent.getOnWillDeleteFileEvent(extension)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonWillRenameFiles: (listener: (e: vscode.FileWillRenameEvent) => any, thisArg?: any, disposables?: vscode.Disposable[]) => {\n\t\t\t\treturn extHostFileSystemEvent.getOnWillRenameFileEvent(extension)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\topenTunnel: (forward: vscode.TunnelOptions) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostTunnelService.openTunnel(forward).then(value => {\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthrow new Error('cannot open tunnel');\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tget tunnels() {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostTunnelService.getTunnels();\n\t\t\t},\n\t\t\tonDidChangeTunnels: (listener, thisArg?, disposables?) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostTunnelService.onDidChangeTunnels(listener, thisArg, disposables);\n\n\t\t\t},\n\t\t\tregisterTimelineProvider: (scheme: string | string[], provider: vscode.TimelineProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostTimeline.registerTimelineProvider(scheme, provider, extension.identifier, extHostCommands.converter);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: scm\n\t\tconst scm: typeof vscode.scm = {\n\t\t\tget inputBox() {\n\t\t\t\textHostApiDeprecation.report('scm.inputBox', extension,\n\t\t\t\t\t`Use 'SourceControl.inputBox' instead`);\n\n\t\t\t\treturn extHostSCM.getLastInputBox(extension)!; // Strict null override - Deprecated api\n\t\t\t},\n\t\t\tcreateSourceControl(id: string, label: string, rootUri?: vscode.Uri) {\n\t\t\t\treturn extHostSCM.createSourceControl(extension, id, label, rootUri);\n\t\t\t}\n\t\t};\n\n\t\tconst comment: typeof vscode.comments = {\n\t\t\tcreateCommentController(id: string, label: string) {\n\t\t\t\treturn extHostComment.createCommentController(extension, id, label);\n\t\t\t}\n\t\t};\n\n\t\tconst comments = comment;\n\n\t\t// namespace: debug\n\t\tconst debug: typeof vscode.debug = {\n\t\t\tget activeDebugSession() {\n\t\t\t\treturn extHostDebugService.activeDebugSession;\n\t\t\t},\n\t\t\tget activeDebugConsole() {\n\t\t\t\treturn extHostDebugService.activeDebugConsole;\n\t\t\t},\n\t\t\tget breakpoints() {\n\t\t\t\treturn extHostDebugService.breakpoints;\n\t\t\t},\n\t\t\tonDidStartDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidStartDebugSession(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidTerminateDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidTerminateDebugSession(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeActiveDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidChangeActiveDebugSession(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidReceiveDebugSessionCustomEvent(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidReceiveDebugSessionCustomEvent(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeBreakpoints(listener, thisArgs?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidChangeBreakpoints(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tregisterDebugConfigurationProvider(debugType: string, provider: vscode.DebugConfigurationProvider, triggerKind?: vscode.DebugConfigurationProviderTriggerKind) {\n\t\t\t\treturn extHostDebugService.registerDebugConfigurationProvider(debugType, provider, triggerKind || extHostTypes.DebugConfigurationProviderTriggerKind.Initial);\n\t\t\t},\n\t\t\tregisterDebugAdapterDescriptorFactory(debugType: string, factory: vscode.DebugAdapterDescriptorFactory) {\n\t\t\t\treturn extHostDebugService.registerDebugAdapterDescriptorFactory(extension, debugType, factory);\n\t\t\t},\n\t\t\tregisterDebugAdapterTrackerFactory(debugType: string, factory: vscode.DebugAdapterTrackerFactory) {\n\t\t\t\treturn extHostDebugService.registerDebugAdapterTrackerFactory(debugType, factory);\n\t\t\t},\n\t\t\tstartDebugging(folder: vscode.WorkspaceFolder | undefined, nameOrConfig: string | vscode.DebugConfiguration, parentSessionOrOptions?: vscode.DebugSession | vscode.DebugSessionOptions) {\n\t\t\t\tif (!parentSessionOrOptions || (typeof parentSessionOrOptions === 'object' && 'configuration' in parentSessionOrOptions)) {\n\t\t\t\t\treturn extHostDebugService.startDebugging(folder, nameOrConfig, { parentSession: parentSessionOrOptions });\n\t\t\t\t}\n\t\t\t\treturn extHostDebugService.startDebugging(folder, nameOrConfig, parentSessionOrOptions || {});\n\t\t\t},\n\t\t\taddBreakpoints(breakpoints: vscode.Breakpoint[]) {\n\t\t\t\treturn extHostDebugService.addBreakpoints(breakpoints);\n\t\t\t},\n\t\t\tremoveBreakpoints(breakpoints: vscode.Breakpoint[]) {\n\t\t\t\treturn extHostDebugService.removeBreakpoints(breakpoints);\n\t\t\t},\n\t\t\tasDebugSourceUri(source: vscode.DebugProtocolSource, session?: vscode.DebugSession): vscode.Uri {\n\t\t\t\treturn extHostDebugService.asDebugSourceUri(source, session);\n\t\t\t}\n\t\t};\n\n\t\tconst tasks: typeof vscode.tasks = {\n\t\t\tregisterTaskProvider: (type: string, provider: vscode.TaskProvider) => {\n\t\t\t\treturn extHostTask.registerTaskProvider(extension, type, provider);\n\t\t\t},\n\t\t\tfetchTasks: (filter?: vscode.TaskFilter): Thenable<vscode.Task[]> => {\n\t\t\t\treturn extHostTask.fetchTasks(filter);\n\t\t\t},\n\t\t\texecuteTask: (task: vscode.Task): Thenable<vscode.TaskExecution> => {\n\t\t\t\treturn extHostTask.executeTask(extension, task);\n\t\t\t},\n\t\t\tget taskExecutions(): vscode.TaskExecution[] {\n\t\t\t\treturn extHostTask.taskExecutions;\n\t\t\t},\n\t\t\tonDidStartTask: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostTask.onDidStartTask(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidEndTask: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostTask.onDidEndTask(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidStartTaskProcess: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostTask.onDidStartTaskProcess(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidEndTaskProcess: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostTask.onDidEndTaskProcess(listeners, thisArgs, disposables);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: notebook\n\t\tconst notebook: typeof vscode.notebook = {\n\t\t\tget onDidOpenNotebookDocument(): Event<vscode.NotebookDocument> {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostNotebook.onDidOpenNotebookDocument;\n\t\t\t},\n\t\t\tregisterNotebookProvider: (viewType: string, provider: vscode.NotebookProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostNotebook.registerNotebookProvider(extension, viewType, provider);\n\t\t\t},\n\t\t\tregisterNotebookContentProvider: (viewType: string, provider: vscode.NotebookContentProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostNotebook.registerNotebookContentProvider(extension, viewType, provider);\n\t\t\t},\n\t\t\tregisterNotebookOutputRenderer: (type: string, outputFilter: vscode.NotebookOutputSelector, renderer: vscode.NotebookOutputRenderer) => {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostNotebook.registerNotebookOutputRenderer(type, extension, outputFilter, renderer);\n\t\t\t},\n\t\t\tget activeNotebookDocument(): vscode.NotebookDocument | undefined {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostNotebook.activeNotebookDocument;\n\t\t\t},\n\t\t\tget activeNotebookEditor(): vscode.NotebookEditor | undefined {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostNotebook.activeNotebookEditor;\n\t\t\t},\n\t\t\tonDidChangeNotebookDocument(listener, thisArgs?, disposables?) {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostNotebook.onDidChangeNotebookDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tcreateConcatTextDocument(notebook, selector) {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn new ExtHostNotebookConcatDocument(extHostNotebook, extHostDocuments, notebook, selector);\n\t\t\t}\n\t\t};\n\n\t\treturn <typeof vscode>{\n\t\t\tversion: initData.version,\n\t\t\t// namespaces\n\t\t\tauthentication,\n\t\t\tcommands,\n\t\t\tdebug,\n\t\t\tenv,\n\t\t\textensions,\n\t\t\tlanguages,\n\t\t\tscm,\n\t\t\tcomment,\n\t\t\tcomments,\n\t\t\ttasks,\n\t\t\tnotebook,\n\t\t\twindow,\n\t\t\tworkspace,\n\t\t\t// types\n\t\t\tBreakpoint: extHostTypes.Breakpoint,\n\t\t\tCancellationTokenSource: CancellationTokenSource,\n\t\t\tCodeAction: extHostTypes.CodeAction,\n\t\t\tCodeActionKind: extHostTypes.CodeActionKind,\n\t\t\tCodeActionTrigger: extHostTypes.CodeActionTrigger,\n\t\t\tCodeLens: extHostTypes.CodeLens,\n\t\t\tCodeInset: extHostTypes.CodeInset,\n\t\t\tColor: extHostTypes.Color,\n\t\t\tColorInformation: extHostTypes.ColorInformation,\n\t\t\tColorPresentation: extHostTypes.ColorPresentation,\n\t\t\tCommentThreadCollapsibleState: extHostTypes.CommentThreadCollapsibleState,\n\t\t\tCommentMode: extHostTypes.CommentMode,\n\t\t\tCompletionItem: extHostTypes.CompletionItem,\n\t\t\tCompletionItemKind: extHostTypes.CompletionItemKind,\n\t\t\tCompletionItemTag: extHostTypes.CompletionItemTag,\n\t\t\tCompletionList: extHostTypes.CompletionList,\n\t\t\tCompletionTriggerKind: extHostTypes.CompletionTriggerKind,\n\t\t\tConfigurationTarget: extHostTypes.ConfigurationTarget,\n\t\t\tDebugAdapterExecutable: extHostTypes.DebugAdapterExecutable,\n\t\t\tDebugAdapterServer: extHostTypes.DebugAdapterServer,\n\t\t\tDebugAdapterInlineImplementation: extHostTypes.DebugAdapterInlineImplementation,\n\t\t\tDecorationRangeBehavior: extHostTypes.DecorationRangeBehavior,\n\t\t\tDiagnostic: extHostTypes.Diagnostic,\n\t\t\tDiagnosticRelatedInformation: extHostTypes.DiagnosticRelatedInformation,\n\t\t\tDiagnosticSeverity: extHostTypes.DiagnosticSeverity,\n\t\t\tDiagnosticTag: extHostTypes.DiagnosticTag,\n\t\t\tDisposable: extHostTypes.Disposable,\n\t\t\tDocumentHighlight: extHostTypes.DocumentHighlight,\n\t\t\tDocumentHighlightKind: extHostTypes.DocumentHighlightKind,\n\t\t\tDocumentLink: extHostTypes.DocumentLink,\n\t\t\tDocumentSymbol: extHostTypes.DocumentSymbol,\n\t\t\tEndOfLine: extHostTypes.EndOfLine,\n\t\t\tEnvironmentVariableMutatorType: extHostTypes.EnvironmentVariableMutatorType,\n\t\t\tEvaluatableExpression: extHostTypes.EvaluatableExpression,\n\t\t\tEventEmitter: Emitter,\n\t\t\tExtensionKind: extHostTypes.ExtensionKind,\n\t\t\tCustomExecution: extHostTypes.CustomExecution,\n\t\t\tCustomExecution2: extHostTypes.CustomExecution,\n\t\t\tFileChangeType: extHostTypes.FileChangeType,\n\t\t\tFileSystemError: extHostTypes.FileSystemError,\n\t\t\tFileType: files.FileType,\n\t\t\tFoldingRange: extHostTypes.FoldingRange,\n\t\t\tFoldingRangeKind: extHostTypes.FoldingRangeKind,\n\t\t\tFunctionBreakpoint: extHostTypes.FunctionBreakpoint,\n\t\t\tHover: extHostTypes.Hover,\n\t\t\tIndentAction: languageConfiguration.IndentAction,\n\t\t\tLocation: extHostTypes.Location,\n\t\t\tLogLevel: extHostTypes.LogLevel,\n\t\t\tMarkdownString: extHostTypes.MarkdownString,\n\t\t\tOverviewRulerLane: OverviewRulerLane,\n\t\t\tParameterInformation: extHostTypes.ParameterInformation,\n\t\t\tPosition: extHostTypes.Position,\n\t\t\tProcessExecution: extHostTypes.ProcessExecution,\n\t\t\tProgressLocation: extHostTypes.ProgressLocation,\n\t\t\tQuickInputButtons: extHostTypes.QuickInputButtons,\n\t\t\tRange: extHostTypes.Range,\n\t\t\tRelativePattern: extHostTypes.RelativePattern,\n\t\t\tResolvedAuthority: extHostTypes.ResolvedAuthority,\n\t\t\tRemoteAuthorityResolverError: extHostTypes.RemoteAuthorityResolverError,\n\t\t\tSemanticTokensLegend: extHostTypes.SemanticTokensLegend,\n\t\t\tSemanticTokensBuilder: extHostTypes.SemanticTokensBuilder,\n\t\t\tSemanticTokens: extHostTypes.SemanticTokens,\n\t\t\tSemanticTokensEdits: extHostTypes.SemanticTokensEdits,\n\t\t\tSemanticTokensEdit: extHostTypes.SemanticTokensEdit,\n\t\t\tSelection: extHostTypes.Selection,\n\t\t\tSelectionRange: extHostTypes.SelectionRange,\n\t\t\tShellExecution: extHostTypes.ShellExecution,\n\t\t\tShellQuoting: extHostTypes.ShellQuoting,\n\t\t\tSignatureHelpTriggerKind: extHostTypes.SignatureHelpTriggerKind,\n\t\t\tSignatureHelp: extHostTypes.SignatureHelp,\n\t\t\tSignatureInformation: extHostTypes.SignatureInformation,\n\t\t\tSnippetString: extHostTypes.SnippetString,\n\t\t\tSourceBreakpoint: extHostTypes.SourceBreakpoint,\n\t\t\tSourceControlInputBoxValidationType: extHostTypes.SourceControlInputBoxValidationType,\n\t\t\tStatusBarAlignment: extHostTypes.StatusBarAlignment,\n\t\t\tSymbolInformation: extHostTypes.SymbolInformation,\n\t\t\tSymbolKind: extHostTypes.SymbolKind,\n\t\t\tSymbolTag: extHostTypes.SymbolTag,\n\t\t\tTask: extHostTypes.Task,\n\t\t\tTask2: extHostTypes.Task,\n\t\t\tTaskGroup: extHostTypes.TaskGroup,\n\t\t\tTaskPanelKind: extHostTypes.TaskPanelKind,\n\t\t\tTaskRevealKind: extHostTypes.TaskRevealKind,\n\t\t\tTaskScope: extHostTypes.TaskScope,\n\t\t\tTextDocumentSaveReason: extHostTypes.TextDocumentSaveReason,\n\t\t\tTextEdit: extHostTypes.TextEdit,\n\t\t\tTextEditorCursorStyle: TextEditorCursorStyle,\n\t\t\tTextEditorLineNumbersStyle: extHostTypes.TextEditorLineNumbersStyle,\n\t\t\tTextEditorRevealType: extHostTypes.TextEditorRevealType,\n\t\t\tTextEditorSelectionChangeKind: extHostTypes.TextEditorSelectionChangeKind,\n\t\t\tThemeColor: extHostTypes.ThemeColor,\n\t\t\tThemeIcon: extHostTypes.ThemeIcon,\n\t\t\tTreeItem: extHostTypes.TreeItem,\n\t\t\tTreeItem2: extHostTypes.TreeItem,\n\t\t\tTreeItemCollapsibleState: extHostTypes.TreeItemCollapsibleState,\n\t\t\tUri: URI,\n\t\t\tViewColumn: extHostTypes.ViewColumn,\n\t\t\tWorkspaceEdit: extHostTypes.WorkspaceEdit,\n\t\t\t// proposed\n\t\t\tCallHierarchyOutgoingCall: extHostTypes.CallHierarchyOutgoingCall,\n\t\t\tCallHierarchyIncomingCall: extHostTypes.CallHierarchyIncomingCall,\n\t\t\tCallHierarchyItem: extHostTypes.CallHierarchyItem,\n\t\t\tDebugConsoleMode: extHostTypes.DebugConsoleMode,\n\t\t\tDebugConfigurationProviderTriggerKind: extHostTypes.DebugConfigurationProviderTriggerKind,\n\t\t\tDecoration: extHostTypes.Decoration,\n\t\t\tUIKind: UIKind,\n\t\t\tColorThemeKind: extHostTypes.ColorThemeKind,\n\t\t\tTimelineItem: extHostTypes.TimelineItem,\n\t\t\tCellKind: extHostTypes.CellKind,\n\t\t\tCellOutputKind: extHostTypes.CellOutputKind,\n\t\t\tNotebookCellRunState: extHostTypes.NotebookCellRunState\n\t\t};\n\t};\n}\n\nclass Extension<T> implements vscode.Extension<T> {\n\n\tprivate _extensionService: IExtHostExtensionService;\n\tprivate _originExtensionId: ExtensionIdentifier;\n\tprivate _identifier: ExtensionIdentifier;\n\n\treadonly id: string;\n\treadonly extensionUri: URI;\n\treadonly extensionPath: string;\n\treadonly packageJSON: IExtensionDescription;\n\treadonly extensionKind: vscode.ExtensionKind;\n\n\tconstructor(extensionService: IExtHostExtensionService, originExtensionId: ExtensionIdentifier, description: IExtensionDescription, kind: extHostTypes.ExtensionKind) {\n\t\tthis._extensionService = extensionService;\n\t\tthis._originExtensionId = originExtensionId;\n\t\tthis._identifier = description.identifier;\n\t\tthis.id = description.identifier.value;\n\t\tthis.extensionUri = description.extensionLocation;\n\t\tthis.extensionPath = path.normalize(originalFSPath(description.extensionLocation));\n\t\tthis.packageJSON = description;\n\t\tthis.extensionKind = kind;\n\t}\n\n\tget isActive(): boolean {\n\t\treturn this._extensionService.isActivated(this._identifier);\n\t}\n\n\tget exports(): T {\n\t\tif (this.packageJSON.api === 'none') {\n\t\t\treturn undefined!; // Strict nulloverride - Public api\n\t\t}\n\t\treturn <T>this._extensionService.getExtensionExports(this._identifier);\n\t}\n\n\tactivate(): Thenable<T> {\n\t\treturn this._extensionService.activateByIdWithErrors(this._identifier, { startup: false, extensionId: this._originExtensionId, activationEvent: 'api' }).then(() => this.exports);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createApiFactoryAndRegisterActors } from 'vs/workbench/api/common/extHost.api.impl';\nimport { ExtensionActivationTimesBuilder } from 'vs/workbench/api/common/extHostExtensionActivator';\nimport { AbstractExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { URI } from 'vs/base/common/uri';\nimport { RequireInterceptor } from 'vs/workbench/api/common/extHostRequireInterceptor';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { loadCommonJSModule } from 'vs/server/browser/worker';\n\nclass WorkerRequireInterceptor extends RequireInterceptor {\n\n\t_installInterceptor() { }\n\n\tgetModule(request: string, parent: URI): undefined | any {\n\t\tfor (let alternativeModuleName of this._alternatives) {\n\t\t\tlet alternative = alternativeModuleName(request);\n\t\t\tif (alternative) {\n\t\t\t\trequest = alternative;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this._factories.has(request)) {\n\t\t\treturn this._factories.get(request)!.load(request, parent, () => { throw new Error('CANNOT LOAD MODULE from here.'); });\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class ExtHostExtensionService extends AbstractExtHostExtensionService {\n\n\tprivate _fakeModules?: WorkerRequireInterceptor;\n\n\tprotected async _beforeAlmostReadyToRunExtensions(): Promise<void> {\n\t\t// initialize API and register actors\n\t\tconst apiFactory = this._instaService.invokeFunction(createApiFactoryAndRegisterActors);\n\t\tthis._fakeModules = this._instaService.createInstance(WorkerRequireInterceptor, apiFactory, this._registry);\n\t\tawait this._fakeModules.install();\n\t}\n\n\tprotected async _loadCommonJSModule<T>(module: URI | IExtensionDescription, activationTimesBuilder: ExtensionActivationTimesBuilder): Promise<T> {\n\t\tif (!URI.isUri(module) && module.extensionKind !== 'web') {\n\t\t\treturn loadCommonJSModule(module, activationTimesBuilder, this._nodeProxy, this._logService, this._fakeModules!.getModule('vscode', module.extensionLocation));\n\t\t}\n\n\t\tif (!URI.isUri(module)) {\n\t\t\tmodule = joinPath(module.extensionLocation, module.main!);\n\t\t}\n\n\t\tmodule = module.with({ path: ensureSuffix(module.path, '.js') });\n\t\tconst response = await fetch(module.toString(true));\n\n\t\tif (response.status !== 200) {\n\t\t\tthrow new Error(response.statusText);\n\t\t}\n\n\t\t// fetch JS sources as text and create a new function around it\n\t\tconst initFn = new Function('module', 'exports', 'require', 'window', await response.text());\n\n\t\t// define commonjs globals: `module`, `exports`, and `require`\n\t\tconst _exports = {};\n\t\tconst _module = { exports: _exports };\n\t\tconst _require = (request: string) => {\n\t\t\tconst result = this._fakeModules!.getModule(request, <URI>module);\n\t\t\tif (result === undefined) {\n\t\t\t\tthrow new Error(`Cannot load module '${request}'`);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\ttry {\n\t\t\tactivationTimesBuilder.codeLoadingStart();\n\t\t\tinitFn(_module, _exports, _require, self);\n\t\t\treturn <T>(_module.exports !== _exports ? _module.exports : _exports);\n\t\t} finally {\n\t\t\tactivationTimesBuilder.codeLoadingStop();\n\t\t}\n\t}\n\n\tasync $setRemoteEnvironment(_env: { [key: string]: string | null }): Promise<void> {\n\t\tthrow new Error('Not supported');\n\t}\n}\n\nfunction ensureSuffix(path: string, suffix: string): string {\n\treturn path.endsWith(suffix) ? path : path + suffix;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IExtHostOutputService, ExtHostOutputService } from 'vs/workbench/api/common/extHostOutput';\nimport { IExtHostWorkspace, ExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { IExtHostDecorations, ExtHostDecorations } from 'vs/workbench/api/common/extHostDecorations';\nimport { IExtHostConfiguration, ExtHostConfiguration } from 'vs/workbench/api/common/extHostConfiguration';\nimport { IExtHostCommands, ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { IExtHostDocumentsAndEditors, ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { IExtHostTerminalService, WorkerExtHostTerminalService } from 'vs/workbench/api/common/extHostTerminalService';\nimport { IExtHostTask, WorkerExtHostTask } from 'vs/workbench/api/common/extHostTask';\nimport { IExtHostDebugService, WorkerExtHostDebugService } from 'vs/workbench/api/common/extHostDebugService';\nimport { IExtHostSearch, ExtHostSearch } from 'vs/workbench/api/common/extHostSearch';\nimport { IExtensionStoragePaths } from 'vs/workbench/api/common/extHostStoragePaths';\nimport { IExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { IExtHostStorage, ExtHostStorage } from 'vs/workbench/api/common/extHostStorage';\nimport { ExtHostExtensionService } from 'vs/workbench/api/worker/extHostExtensionService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtHostLogService } from 'vs/workbench/api/worker/extHostLogService';\nimport { ExtHostNodeProxy, IExtHostNodeProxy } from 'vs/server/browser/extHostNodeProxy';\nimport { ExtensionStoragePaths } from 'vs/workbench/api/node/extHostStoragePaths';\nimport { IExtHostTunnelService, ExtHostTunnelService } from 'vs/workbench/api/common/extHostTunnelService';\nimport { IExtHostApiDeprecationService, ExtHostApiDeprecationService, } from 'vs/workbench/api/common/extHostApiDeprecationService';\n\n// register singleton services\nregisterSingleton(ILogService, ExtHostLogService);\nregisterSingleton(IExtHostApiDeprecationService, ExtHostApiDeprecationService);\nregisterSingleton(IExtHostOutputService, ExtHostOutputService);\nregisterSingleton(IExtHostWorkspace, ExtHostWorkspace);\nregisterSingleton(IExtHostDecorations, ExtHostDecorations);\nregisterSingleton(IExtHostConfiguration, ExtHostConfiguration);\nregisterSingleton(IExtHostCommands, ExtHostCommands);\nregisterSingleton(IExtHostDocumentsAndEditors, ExtHostDocumentsAndEditors);\nregisterSingleton(IExtHostStorage, ExtHostStorage);\nregisterSingleton(IExtHostExtensionService, ExtHostExtensionService);\nregisterSingleton(IExtHostSearch, ExtHostSearch);\nregisterSingleton(IExtHostNodeProxy, ExtHostNodeProxy);\nregisterSingleton(IExtHostTunnelService, ExtHostTunnelService);\n\nregisterSingleton(IExtHostTerminalService, WorkerExtHostTerminalService);\nregisterSingleton(IExtHostTask, WorkerExtHostTask);\nregisterSingleton(IExtHostDebugService, WorkerExtHostDebugService);\nregisterSingleton(IExtensionStoragePaths, ExtensionStoragePaths);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { isMessageOfType, MessageType, createMessageOfType } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\nimport { IInitData } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtensionHostMain } from 'vs/workbench/services/extensions/common/extensionHostMain';\nimport { IHostUtils } from 'vs/workbench/api/common/extHostExtensionService';\nimport 'vs/workbench/services/extensions/worker/extHost.services';\n\n//#region --- Define, capture, and override some globals\n\ndeclare function postMessage(data: any, transferables?: Transferable[]): void;\n\ndeclare namespace self {\n\tlet close: any;\n\tlet postMessage: any;\n\tlet addEventLister: any;\n\tlet indexedDB: { open: any, [k: string]: any };\n\tlet caches: { open: any, [k: string]: any };\n}\n\nconst nativeClose = self.close.bind(self);\nself.close = () => console.trace(`'close' has been blocked`);\n\nconst nativePostMessage = postMessage.bind(self);\nself.postMessage = () => console.trace(`'postMessage' has been blocked`);\n\nconst nativeAddEventLister = addEventListener.bind(self);\nself.addEventLister = () => console.trace(`'addEventListener' has been blocked`);\n\n//#endregion ---\n\nconst hostUtil = new class implements IHostUtils {\n\t_serviceBrand: undefined;\n\texit(_code?: number | undefined): void {\n\t\tnativeClose();\n\t}\n\tasync exists(_path: string): Promise<boolean> {\n\t\treturn true;\n\t}\n\tasync realpath(path: string): Promise<string> {\n\t\treturn path;\n\t}\n};\n\n\nclass ExtensionWorker {\n\n\t// protocol\n\treadonly protocol: IMessagePassingProtocol;\n\n\tconstructor() {\n\n\t\tlet emitter = new Emitter<VSBuffer>();\n\t\tlet terminating = false;\n\n\n\t\tnativeAddEventLister('message', event => {\n\t\t\tconst { data } = event;\n\t\t\tif (!(data instanceof ArrayBuffer)) {\n\t\t\t\tconsole.warn('UNKNOWN data received', data);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst msg = VSBuffer.wrap(new Uint8Array(data, 0, data.byteLength));\n\t\t\tif (isMessageOfType(msg, MessageType.Terminate)) {\n\t\t\t\t// handle terminate-message right here\n\t\t\t\tterminating = true;\n\t\t\t\tonTerminate();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// emit non-terminate messages to the outside\n\t\t\temitter.fire(msg);\n\t\t});\n\n\t\tthis.protocol = {\n\t\t\tonMessage: emitter.event,\n\t\t\tsend: vsbuf => {\n\t\t\t\tif (!terminating) {\n\t\t\t\t\tconst data = vsbuf.buffer.buffer.slice(vsbuf.buffer.byteOffset, vsbuf.buffer.byteOffset + vsbuf.buffer.byteLength);\n\t\t\t\t\tnativePostMessage(data, [data]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n\ninterface IRendererConnection {\n\tprotocol: IMessagePassingProtocol;\n\tinitData: IInitData;\n}\nfunction connectToRenderer(protocol: IMessagePassingProtocol): Promise<IRendererConnection> {\n\treturn new Promise<IRendererConnection>(resolve => {\n\t\tconst once = protocol.onMessage(raw => {\n\t\t\tonce.dispose();\n\t\t\tconst initData = <IInitData>JSON.parse(raw.toString());\n\t\t\tprotocol.send(createMessageOfType(MessageType.Initialized));\n\t\t\tresolve({ protocol, initData });\n\t\t});\n\t\tprotocol.send(createMessageOfType(MessageType.Ready));\n\t});\n}\n\nlet onTerminate = nativeClose;\n\n(function create(): void {\n\tconst res = new ExtensionWorker();\n\n\tconnectToRenderer(res.protocol).then(data => {\n\n\t\tconst extHostMain = new ExtensionHostMain(\n\t\t\tdata.protocol,\n\t\t\tdata.initData,\n\t\t\thostUtil,\n\t\t\tnull,\n\t\t);\n\n\t\tonTerminate = () => extHostMain.terminate();\n\t});\n})();\n"]}