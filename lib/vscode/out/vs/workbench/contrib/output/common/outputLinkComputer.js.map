{"version":3,"sources":["vs/workbench/contrib/output/common/fake","vs/workbench/contrib/output/common/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/workbench/contrib/output/common/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/workbench/contrib/output/common/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/workbench/contrib/output/common/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/workbench/contrib/output/common/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/workbench/contrib/output/common/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/workbench/contrib/output/common/file:/repo/lib/vscode/src/vs/workbench/contrib/output/common/outputLinkComputer.ts"],"names":["__m","__M","deps","result","i","len","length","isThenable","obj","then","createCancelablePromise","callback","source","cancellation_1","CancellationTokenSource","thenable","token","promise","Promise","resolve","reject","onCancellationRequested","errors","canceled","value","dispose","err","[object Object]","cancel","this","undefined","onfinally","finally","exports","raceCancellation","defaultValue","race","raceTimeout","timeout","onTimeout","promiseResolve","timer","setTimeout","clearTimeout","asPromise","item","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","c","e","Sequencer","current","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","delay","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","handle","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","lifecycle_1","toDisposable","ignoreErrors","_","sequence","promiseFactories","results","index","thenHandler","push","n","first","shouldStop","t","loop","factory","Limiter","maxDegreeOfParalellism","_size","outstandingPromises","runningPromises","_onFinished","event_1","Emitter","onFinished","event","size","consume","iLimitedTask","shift","consumed","fire","Queue","super","ResourceQueue","queues","Map","resource","key","toString","has","delete","set","get","forEach","clear","TimeoutTimer","runner","_token","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","bind","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","Object","freeze","didTimeout","timeRemaining","runWhenIdle","disposed","IdleValue","executor","_didRun","_executor","_value","_error","_handle","retry","async","retries","lastError","error","TaskSequentializer","taskId","_pending","pending","_a","onCancel","donePending","triggerNext","_next","next","run","promiseReject","isPathSeparator","code","toSlashes","osPath","replace","path_1","posix","sep","getRoot","path","firstLetter","charCodeAt","pos","start","slice","isWindowsDriveLetter","indexOf","isUNC","platform_1","isWindows","isNaN","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","name","isWindowsOS","invalidFileChars","test","lastIndex","trim","isEqual","pathA","pathB","ignoreCase","identityEquals","strings_1","equalsIgnoreCase","isEqualOrParent","candidate","separator","startsWithIgnoreCase","sepOffset","charAt","sanitizeFilePath","cwd","endsWith","isAbsolute","join","normalize","rtrim","isRootOrDriveLetter","pathNormalized","indexOfPath","toLowerCase","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","data","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeSettings","webviewPanel","RemoteAuthorities","_hosts","create","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","authority","host","port","connectionToken","uri","query","encodeURIComponent","fsPath","uri_1","URI","from","scheme","platform","isWeb","window","location","pathname","values","forEachable","keys","map","getOrSet","mapToString","entries","setToString","StringIterator","_pos","a","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","ch","compareSubstring","compareSubstringIgnoreCase","substring","UriIteratorState","UriIterator","_states","_stateIdx","caseSensitive","network_1","isLinux","_pathIterator","reset","fragment","hasNext","cmp","compare","Error","TernarySearchTreeNode","left","mid","right","TernarySearchTree","segments","_iter","_root","element","iter","node","segment","val","oldElement","stack","isEmpty","dir","parent","pop","_nodeIterator","res","idx","_forEach","done","ResourceMap","Symbol","toStringTag","toKey","clb","thisArg","parse","tuple","iterator","resourceMap","Touch","LinkedMap","_map","_head","_tail","last","touch","previous","addItemLast","addItemFirst","remove","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","Math","min","max","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","pattern","splitChar","inBraces","inBrackets","curVal","char","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","options","patternKey","trimForExclusions","match","parsedPattern","wrapRelativePattern","base","substr","basename","exec","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","split","filter","withBasenames","arrays","allPaths","reduce","all","concat","trivia3","trivia4and5","regExp","RegExp","parseRegExp","regEx","every","s","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","strings","escapeRegExpCharacters","toRegExp","arg2","extpath","paths","relative","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","getOwnPropertyNames","when","hasSibling","matched","async_1","m","requiresSiblings","parseExpressionPattern","some","resultExpression","extname","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","originalFSPath","uriToFsPath","hasToIgnoreCase","parentCandidate","isEqualAuthority","a1","a2","hasTrailingPathSeparator","fsp","p","relativePath","to","caseInsensitivePath","fromPath","toPath","getComparisonKey","with","basenameOrAuthority","second","ignoreFragment","p1","p2","dirname","console","joinPath","pathFragment","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","items","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","lastIndexOf","property","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forUris","glob_1","root","rootExpression","findSubstr","toLocalResource","OutputLinkComputer","ctx","createData","computePatterns","workspaceFolders","sort","resourceStrA","resourceStrB","resourceStr","workspaceFolder","createPatterns","models","getMirrorModels","arrays_1","find","model","getModel","links","lines","getValue","folderUri","folderPatterns","resourceCreator","toResource","folderRelativePath","resources","detectLinks","workspaceFolderPath","workspaceFolderVariants","workspaceFolderVariant","validPathCharacterPattern","pathPattern","strictPathPattern","line","lineIndex","offset","resourceString","lineNumber","columnNumber","format","fullMatch","linkRange","startColumn","startLineNumber","endColumn","endLineNumber","link","range_1","Range","areIntersectingOrTouching","range","url","call"],"mappings":"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","file":"outputLinkComputer.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T> {\n\tlet promiseResolve: (() => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.();\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\t// NOTE@coder: Use fsPath for Windows support.\n\t\tlet query = `path=${encodeURIComponent(uri.fsPath)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\n\n/**\n * @deprecated ES6: use `[...SetOrMap.values()]`\n */\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\n/**\n * @deprecated ES6: use `[...map.keys()]`\n */\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\t//todo@jrieken the case-sensitive logic is copied form `resources.ts#hasToIgnoreCase`\n\t\t\t// which cannot be used because it depends on this\n\t\t\tconst caseSensitive = key.scheme === Schemas.file && isLinux;\n\t\t\tthis._pathIterator = new PathIterator(false, caseSensitive);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator());\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<K, V>): Iterator<V> {\n\t\tlet res: { done: false; value: V; };\n\t\tlet idx: number;\n\t\tlet data: V[];\n\t\tconst next = (): IteratorResult<V> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: V, index: K) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<K, V> | undefined, callback: (value: V, index: K) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V>{\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n/**\n * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n * URI queries are included, fragments are ignored.\n */\nexport function getComparisonKey(resource: URI, caseInsensitivePath = hasToIgnoreCase(resource)): string {\n\tlet path = resource.path || '/';\n\tif (caseInsensitivePath) {\n\t\tpath = path.toLowerCase();\n\t}\n\treturn resource.with({ authority: resource.authority.toLowerCase(), path: path, fragment: null }).toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * URI queries must match, fragments are ignored.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase) && base.query === parentCandidate.query;\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path || '/', parentCandidate.path || '/', ignoreCase, '/') && base.query === parentCandidate.query;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests whether the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\n/**\n * Tests whether two resources are the same.  URI queries must match, fragments are ignored unless requested.\n */\nexport function isEqual(first: URI | undefined, second: URI | undefined, caseInsensitivePath = hasToIgnoreCase(first), ignoreFragment = true): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn (p1 === p2 || caseInsensitivePath && equalsIgnoreCase(p1, p2)) && first.query === second.query && (ignoreFragment || first.fragment === second.fragment);\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tlet dirname;\n\tif (resource.scheme === Schemas.file) {\n\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t} else {\n\t\tdirname = paths.posix.dirname(resource.path);\n\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t}\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === 'file') {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, caseInsensitivePath = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (caseInsensitivePath) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI, expression: ParsedExpression }> = TernarySearchTree.forUris<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMirrorModel, IWorkerContext } from 'vs/editor/common/services/editorSimpleWorker';\nimport { ILink } from 'vs/editor/common/modes';\nimport { URI } from 'vs/base/common/uri';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as resources from 'vs/base/common/resources';\nimport * as strings from 'vs/base/common/strings';\nimport { Range } from 'vs/editor/common/core/range';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Schemas } from 'vs/base/common/network';\nimport { find } from 'vs/base/common/arrays';\n\nexport interface ICreateData {\n\tworkspaceFolders: string[];\n}\n\nexport interface IResourceCreator {\n\ttoResource: (folderRelativePath: string) => URI | null;\n}\n\nexport class OutputLinkComputer {\n\tprivate patterns = new Map<URI /* folder uri */, RegExp[]>();\n\n\tconstructor(private ctx: IWorkerContext, createData: ICreateData) {\n\t\tthis.computePatterns(createData);\n\t}\n\n\tprivate computePatterns(createData: ICreateData): void {\n\n\t\t// Produce patterns for each workspace root we are configured with\n\t\t// This means that we will be able to detect links for paths that\n\t\t// contain any of the workspace roots as segments.\n\t\tconst workspaceFolders = createData.workspaceFolders\n\t\t\t.sort((resourceStrA, resourceStrB) => resourceStrB.length - resourceStrA.length) // longest paths first (for https://github.com/microsoft/vscode/issues/88121)\n\t\t\t.map(resourceStr => URI.parse(resourceStr));\n\n\t\tfor (const workspaceFolder of workspaceFolders) {\n\t\t\tconst patterns = OutputLinkComputer.createPatterns(workspaceFolder);\n\t\t\tthis.patterns.set(workspaceFolder, patterns);\n\t\t}\n\t}\n\n\tprivate getModel(uri: string): IMirrorModel | undefined {\n\t\tconst models = this.ctx.getMirrorModels();\n\n\t\treturn find(models, model => model.uri.toString() === uri);\n\t}\n\n\tcomputeLinks(uri: string): ILink[] {\n\t\tconst model = this.getModel(uri);\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst links: ILink[] = [];\n\t\tconst lines = model.getValue().split(/\\r\\n|\\r|\\n/);\n\n\t\t// For each workspace root patterns\n\t\tfor (const [folderUri, folderPatterns] of this.patterns) {\n\t\t\tconst resourceCreator: IResourceCreator = {\n\t\t\t\ttoResource: (folderRelativePath: string): URI | null => {\n\t\t\t\t\tif (typeof folderRelativePath === 'string') {\n\t\t\t\t\t\treturn resources.joinPath(folderUri, folderRelativePath);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\t\t\tlinks.push(...OutputLinkComputer.detectLinks(lines[i], i + 1, folderPatterns, resourceCreator));\n\t\t\t}\n\t\t}\n\n\t\treturn links;\n\t}\n\n\tstatic createPatterns(workspaceFolder: URI): RegExp[] {\n\t\tconst patterns: RegExp[] = [];\n\n\t\tconst workspaceFolderPath = workspaceFolder.scheme === Schemas.file ? workspaceFolder.fsPath : workspaceFolder.path;\n\t\tconst workspaceFolderVariants = [workspaceFolderPath];\n\t\tif (isWindows && workspaceFolder.scheme === Schemas.file) {\n\t\t\tworkspaceFolderVariants.push(extpath.toSlashes(workspaceFolderPath));\n\t\t}\n\n\t\tfor (const workspaceFolderVariant of workspaceFolderVariants) {\n\t\t\tconst validPathCharacterPattern = '[^\\\\s\\\\(\\\\):<>\"]';\n\t\t\tconst validPathCharacterOrSpacePattern = `(?:${validPathCharacterPattern}| ${validPathCharacterPattern})`;\n\t\t\tconst pathPattern = `${validPathCharacterOrSpacePattern}+\\\\.${validPathCharacterPattern}+`;\n\t\t\tconst strictPathPattern = `${validPathCharacterPattern}+`;\n\n\t\t\t// Example: /workspaces/express/server.js on line 8, column 13\n\t\t\tpatterns.push(new RegExp(strings.escapeRegExpCharacters(workspaceFolderVariant) + `(${pathPattern}) on line ((\\\\d+)(, column (\\\\d+))?)`, 'gi'));\n\n\t\t\t// Example: /workspaces/express/server.js:line 8, column 13\n\t\t\tpatterns.push(new RegExp(strings.escapeRegExpCharacters(workspaceFolderVariant) + `(${pathPattern}):line ((\\\\d+)(, column (\\\\d+))?)`, 'gi'));\n\n\t\t\t// Example: /workspaces/mankala/Features.ts(45): error\n\t\t\t// Example: /workspaces/mankala/Features.ts (45): error\n\t\t\t// Example: /workspaces/mankala/Features.ts(45,18): error\n\t\t\t// Example: /workspaces/mankala/Features.ts (45,18): error\n\t\t\t// Example: /workspaces/mankala/Features Special.ts (45,18): error\n\t\t\tpatterns.push(new RegExp(strings.escapeRegExpCharacters(workspaceFolderVariant) + `(${pathPattern})(\\\\s?\\\\((\\\\d+)(,(\\\\d+))?)\\\\)`, 'gi'));\n\n\t\t\t// Example: at /workspaces/mankala/Game.ts\n\t\t\t// Example: at /workspaces/mankala/Game.ts:336\n\t\t\t// Example: at /workspaces/mankala/Game.ts:336:9\n\t\t\tpatterns.push(new RegExp(strings.escapeRegExpCharacters(workspaceFolderVariant) + `(${strictPathPattern})(:(\\\\d+))?(:(\\\\d+))?`, 'gi'));\n\t\t}\n\n\t\treturn patterns;\n\t}\n\n\t/**\n\t * Detect links. Made static to allow for tests.\n\t */\n\tstatic detectLinks(line: string, lineIndex: number, patterns: RegExp[], resourceCreator: IResourceCreator): ILink[] {\n\t\tconst links: ILink[] = [];\n\n\t\tpatterns.forEach(pattern => {\n\t\t\tpattern.lastIndex = 0; // the holy grail of software development\n\n\t\t\tlet match: RegExpExecArray | null;\n\t\t\tlet offset = 0;\n\t\t\twhile ((match = pattern.exec(line)) !== null) {\n\n\t\t\t\t// Convert the relative path information to a resource that we can use in links\n\t\t\t\tconst folderRelativePath = strings.rtrim(match[1], '.').replace(/\\\\/g, '/'); // remove trailing \".\" that likely indicate end of sentence\n\t\t\t\tlet resourceString: string | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tconst resource = resourceCreator.toResource(folderRelativePath);\n\t\t\t\t\tif (resource) {\n\t\t\t\t\t\tresourceString = resource.toString();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcontinue; // we might find an invalid URI and then we dont want to loose all other links\n\t\t\t\t}\n\n\t\t\t\t// Append line/col information to URI if matching\n\t\t\t\tif (match[3]) {\n\t\t\t\t\tconst lineNumber = match[3];\n\n\t\t\t\t\tif (match[5]) {\n\t\t\t\t\t\tconst columnNumber = match[5];\n\t\t\t\t\t\tresourceString = strings.format('{0}#{1},{2}', resourceString, lineNumber, columnNumber);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresourceString = strings.format('{0}#{1}', resourceString, lineNumber);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst fullMatch = strings.rtrim(match[0], '.'); // remove trailing \".\" that likely indicate end of sentence\n\n\t\t\t\tconst index = line.indexOf(fullMatch, offset);\n\t\t\t\toffset += index + fullMatch.length;\n\n\t\t\t\tconst linkRange = {\n\t\t\t\t\tstartColumn: index + 1,\n\t\t\t\t\tstartLineNumber: lineIndex,\n\t\t\t\t\tendColumn: index + 1 + fullMatch.length,\n\t\t\t\t\tendLineNumber: lineIndex\n\t\t\t\t};\n\n\t\t\t\tif (links.some(link => Range.areIntersectingOrTouching(link.range, linkRange))) {\n\t\t\t\t\treturn; // Do not detect duplicate links\n\t\t\t\t}\n\n\t\t\t\tlinks.push({\n\t\t\t\t\trange: linkRange,\n\t\t\t\t\turl: resourceString\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn links;\n\t}\n}\n\nexport function create(ctx: IWorkerContext, createData: ICreateData): OutputLinkComputer {\n\treturn new OutputLinkComputer(ctx, createData);\n}\n"]}