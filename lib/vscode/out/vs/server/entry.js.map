{"version":3,"sources":["vs/server/fake","vs/server/vs/base/common/performance.js","vs/server/vs/base/node/languagePacks.js","vs/server/file:/repo/lib/vscode/src/vs/base/common/assert.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/decorators.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/errors.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/arrays.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/functional.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/json.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/lifecycle.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/linkedList.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/event.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/cancellation.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/platform.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/process.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/path.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/stream.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/strings.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/buffer.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/types.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/objects.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uri.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/amd.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/console.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/marshalling.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/normalization.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/labels.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uriIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uuid.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/decoder.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/macAddress.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/id.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/paths.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/pfs.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/extpath.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/watcher.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/date.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/errorMessage.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/severity.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/processes.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/download/common/download.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/server/file:/repo/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/files.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/io.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/localizations/common/localizations.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/common/log.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/fileService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/common/logIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/node/spdlogService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/product/common/product.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/environment/node/environmentService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/localizations/node/localizations.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/product/common/productService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/common/request.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/common/requestIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/node/proxy.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/state/node/state.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/state/node/stateService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/storage/common/storage.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/server/common/nodeProxy.ts","vs/server/file:/repo/lib/vscode/src/vs/server/common/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/insights.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/logger.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/nls.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/connection.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/protocol.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/util.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/channel.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/zip.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/marketplace.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/node/requestService.ts","vs/server/file:/repo/lib/vscode/src/vs/code/node/cliProcessMain.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/server.ts","vs/server/file:/repo/lib/vscode/src/vs/server/entry.ts"],"names":["__m","__M","deps","result","i","len","length","_factory","sharedObj","_performanceEntries","_dataLen","_timeStamp","console","timeStamp","bind","mark","name","push","Date","now","getEntries","entries","timestamp","getEntry","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","factory","nodeRequire","path","fs","perf","exists","file","Promise","c","rimraf","location","e","lstat","err","stats","then","stat","isDirectory","isSymbolicLink","dir","readdir","files","children","all","map","child","join","rmdir","undefined","unlink","code","readFile","resolve","reject","data","writeFile","content","getNLSConfiguration","commit","userDataPath","metaDataFile","locale","availableLanguages","pseudo","process","env","initialLocale","defaultResult","configs","configFile","JSON","parse","readFileSync","getLanguagePackConfigurations","config","index","lastIndexOf","substring","error","resolveLanguagePackLocale","packConfig","mainPack","hash","translations","fileExists","packId","cacheRoot","coreLocation","translationsConfigFile","corruptedFile","*","_languagePackId","_translationsConfigFile","_cacheRoot","_resolvedLanguagePackCoreLocation","_corruptedFile","corrupted","toDelete","d","utimes","touch","catch","mkdir","recursive","mkdirp","values","metadata","packData","contents","bundles","Object","keys","writes","bundle","modules","create","module","defaultMessages","messages","targetStrings","elem","translatedMessage","key","replace","stringify","exports","ok","value","message","Error","createDecorator","mapFn","descriptor","fnKey","fn","get","memoizeId","createMemoizer","memoizeKeyPrefix","self","warn","memoizeKey","args","this","hasOwnProperty","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","forEach","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","ErrorHandler","[object Object]","listeners","unexpectedErrorHandler","stack","listener","_removeListener","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","split","String","NotImplementedError","super","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","element","pop","j","firstIndex","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","groupBy","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","o","min","isCancellationRequested","errors_1","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","distinctES6","Set","has","add","uniqueFilter","lastIndex","first","notFoundValue","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","indexer","merger","t","reduce","r","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","asArray","getRandomElement","once","_this","didCall","arguments","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","count","digits","hexValue","ch","charCodeAt","scanNext","isWhitespace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","sep","last","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","dispose","disposables","isDisposable","thing","combinedDisposable","toDisposable","DisposableStore","_toDispose","_isDisposed","DISABLE_DISPOSED_WARNING","_store","freeze","MutableDisposable","_value","ReferenceCollection","references","Map","reference","counter","createReferencedObject","set","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","next","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","Symbol","iterator","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","global","define","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_userAgent","isElectronRenderer","versions","electron","navigator","platform","rawNlsConfig","nlsConfig","resolved","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","_globals","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","newWriteableStream","WriteableStreamImpl","isReadableStream","pause","resume","destroy","every","state","flowing","ended","destroyed","flowData","flowErrors","flowEnd","write","fullDataBuffer","consumeReadable","readable","chunks","chunk","read","consumeReadableWithLimit","maxChunks","lastReadChunk","consumeStream","stream","consumeStreamWithLimit","wrapperStream","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","diff","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","readUInt16LE","writeUInt16LE","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","toSlashes","osPath","path_1","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","indexOfPath","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","assertType","condition","assertIsDefined","assertAllDefined","prototype","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","types_1","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","getOrDefault","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","change","_URI","percentDecode","components","uri","pathFragment","newPath","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","line","column","label","isOneStringArg","consoleArgs","replacer","flags","revive","depth","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeSettings","webviewPanel","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","pathname","forEachable","getOrSet","mapToString","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","UriIteratorState","UriIterator","_states","_stateIdx","caseSensitive","network_1","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","iter","val","oldElement","_nodeIterator","_forEach","done","ResourceMap","toStringTag","toKey","clb","thisArg","tuple","resourceMap","Touch","LinkedMap","_map","_head","_tail","previous","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","max","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","some","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","removeAccents","regex","originalFSPath","hasToIgnoreCase","parentCandidate","isEqualAuthority","a1","a2","hasTrailingPathSeparator","fsp","caseInsensitivePath","fromPath","toPath","getComparisonKey","basenameOrAuthority","second","ignoreFragment","p1","p2","joinPath","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forUris","glob_1","rootExpression","findSubstr","toLocalResource","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","userHome","tildify","getBaseLabel","normalizedUserHomeCached","normalizedUserHome","original","normalized","untildify","ellipsis","unc","home","Type","shorten","pathSeparator","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","remoteAuthority","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformOutgoing","transformIncomingURIs","transformAndReviveIncomingURIs","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","require","__$__nodeRequire","cmdline","windows","unix","invalidMacAddresses","validateMacAddress","tempCandidate","getMac","child_process_1","stdout","stdin","macAddressCandidate","machineId","virtualMachineHint","mac","_virtualMachineOUIs","forStrings","vmOui","interfaceCount","interfaces","os_1","networkInterfaces","_isVirtualMachineMacAdress","getMachineId","crypto","resolve_1","reject_1","macAddress","macAddress_1","createHash","update","digest","getMacMachineId","uuid","pathsPath","amd_1","getAppDataPath","getDefaultUserDataPath","RimRafMode","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","chmod","util_1","promisify","handleDirectoryChildren","readdirSync","normalization_1","oldPath","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","writeFilePathQueues","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","pfs_1","ix","realpath","access","constants","R_OK","realpathSync","accessSync","doWatchNonRecursive","onChange","originalFileName","mapPathToStatDisposable","watcherDisposables","disposable","watcher","fs_1","watch","removeAllListeners","folderChildren","raw","changedFileName","changedFilePath","statDisposable","timeoutHandle","CHANGE_BUFFER_DELAY","watchFile","watchFolder","State","DataType","RequestType","ResponseType","BufferReader","bytes","BufferWriter","buffer_1","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","send","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","listen","timeoutTimer","requests","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","arrays_1","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","emptyBuffer","getEmptyBuffer","ChunkStream","_chunks","_totalLength","buff","byteCount","_read","advance","resultOffset","chunkIndex","chunkPart","ProtocolMessageType","ProtocolConstants","ProtocolMessage","ack","writtenTime","ProtocolReader","socket","_onMessage","_register","_state","readHead","readLen","messageType","_socket","_incomingData","onData","acceptChunk","lastReadTime","ProtocolWriter","lastWriteTime","_writeNow","_writeSoon","head","wasEmpty","_bufferAdd","_bufferTake","Protocol","_onClose","onClose","_socketWriter","_socketReader","Client","ipc_1","getSocket","sendDisconnect","BufferedEmitter","_hasListeners","_isDeliveringMessages","_bufferedMessages","_deliverMessages","QueueElement","resultLen","it","PersistentProtocol","initialChunk","_onControlMessage","onControlMessage","_onSocketClose","onSocketClose","_onSocketTimeout","onSocketTimeout","_isReconnecting","_outgoingUnackMsg","_outgoingMsgId","_outgoingAckId","_outgoingAckTimeout","_incomingMsgId","_incomingAckId","_incomingMsgLastTime","_incomingAckTimeout","_outgoingKeepAliveTimeout","_incomingKeepAliveTimeout","_socketDisposables","_receiveMessage","_sendKeepAliveCheck","_recvKeepAliveCheck","unacknowledgedCount","timeSinceLastOutgoingMsg","timeSinceLastIncomingMsg","initialDataChunk","flushBuffer","toSend","_recvAckCheck","peek","_sendAckCheck","readEntireBuffer","_sendAck","oldestUnacknowledgedMsg","timeSinceOldestUnacknowledgedMsg","propertyIsEvent","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","_target","propKey","methodArgs","NodeSocket","_listener","off","Constants","ReadState","WebSocketNodeSocket","_onData","mask","ipc_net_1","_acceptChunk","onEnd","headerLen","secondByte","hasMask","unmask","cnt","v","bytesLeft","m3","m2","m1","generateRandomPipeName","randomSuffix","Server","server","toClientConnectionEvent","onConnection","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","nls","minute","hour","day","week","month","year","fromNow","date","appendAgoLabel","seconds","nls_1","localize","toLocalISOString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","types","detail","getParseErrorMessage","errorCode","Severity","_warning","_warn","_info","_displayStrings","Warning","Info","fromValue","Ignore","default","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","ee","cp","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","withExtension","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","ExtensionHostDebugBroadcastChannel","_onCloseEmitter","_onReloadEmitter","_onTerminateEmitter","_onLogToEmitter","_onAttachEmitter","sessionId","subId","ChannelName","ExtensionHostDebugChannelClient","onReload","onAttachSession","onLogToSession","onTerminateSession","transformIncomingURI","transformIncomingExtension","extension","uriIpc_1","manifest","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","uriTransformer","local","zip","unzip","install","getManifest","installFromGallery","uninstall","reinstallFromGallery","getInstalled","extensions","updateMetadata","getExtensionsReport","ExtensionManagementChannelClient","zipLocation","vsix","force","ExtensionTipsChannel","getConfigBasedTips","getImportantExecutableBasedTips","getOtherExecutableBasedTips","getAllWorkspacesTips","nlsRegex","localizeManifest","ExtensionsLifecycle","environmentService","logService","processesLimiter","script","parseScript","info","identifier","version","runLifecycleHook","getExtensionStoragePath","scriptKey","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","errorMessage_1","uninstallHook","opts","silent","extensionUninstallProcess","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","VERSION_REGEXP","isValidVersionStr","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","isIExtensionIdentifier","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","areSameExtensions","ExtensionIdentifierWithVersion","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","properties","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","report","malicious","ExtensionsManifestCache","extensionsManagementService","extensionsManifestCache","onDidUnInstallExtension","invalidate","pfs","WatcherChannel","onLogMessage","setRoots","setVerboseLogging","stop","WatcherChannelClient","enable","roots","FileWatcher","onDidFilesChange","verboseLogging","isDisposed","restartCounter","startWatching","ipc_cp_1","AMD_ENTRYPOINT","PIPE_LOGGING","VERBOSE_LOGGING","MAX_RESTARTS","watcherIpc_1","setFolders","watcherOptions","OutOfProcessWin32FolderWatcher","watchedFolder","ignored","eventCallback","logCallback","glob","startWatcher","decoder","rawEvents","eventParts","changeType","absolutePath","ignore","changeTypeMap","folder","csharpWatcherService_1","excludes","onFileEvents","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","incoming","outgoing","Graph","_hashFn","_nodes","fromNode","lookupOrInsertNode","toNode","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IDownloadService","instantiation_1","IEnvironmentService","BACKUPS","LogsDataCleaner","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","__decorate","__param","environment_1","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","IExtensionManagementService","IExtensionGalleryService","SortBy","SortOrder","StatisticType","InstallOperation","INSTALL_ERROR_NOT_SUPPORTED","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","DISABLED_EXTENSIONS_STORAGE_PATH","ENABLED_EXTENSIONS_STORAGE_PATH","IGlobalExtensionEnablementService","IExtensionTipsService","DefaultIconPath","ExtensionsLabel","ExtensionsChannelId","PreferencesLabel","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","checkForChangeType","getOfType","hasType","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","throwIfCancelled","throwIfTooLarge","totalBytesRead","limits","memory","files_1","bytesRead","allowedRemainingBytes","bufferSize","posInFile","posInBuffer","lastChunkLength","doReadFileIntoStream","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","fileChangesDelayer","watcher_2","fileChangesBuffer","pathToWatch","eventType","onFileChange","onVerbose","fileChanges","normalizedFileChanges","watcher_1","ServiceCollection","_entries","instanceOrDescriptor","_enableTracing","CyclicDependencyError","graph","InstantiationService","services","serviceCollection_1","strict","_services","_parent","_trace","Trace","traceInvocation","_done","isOptional","_getOrCreateServiceInstance","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","getValue","TraceType","_start","_dep","_None","dur","_totals","causedCreation","lines","printChild","trace","nested","LanguageType","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","LogServiceAdapter","adapter","consoleLog","extractMessage","ConsoleLogInMainService","MultiplexLogService","logServices","critical","DelegatedLogService","NullLogService","getLogLevel","Off","ExtensionIdVersionRegex","ExtensionsDownloader","extensionGalleryService","extensionsDownloadDir","cleanUpPromise","extensionsDownloadPath","cleanUp","getName","download","del","folderStat","resolveMetadata","extensionManagementUtil_1","semver","rcompare","extensionManagement_1","log_1","FileService","BUFFER_SIZE","_onDidChangeFileSystemProviderRegistrations","_onWillActivateFileSystemProvider","onWillActivateFileSystemProvider","_onDidChangeFileSystemProviderCapabilities","onDidChangeFileSystemProviderCapabilities","_onDidRunOperation","onDidRunOperation","_onError","_onDidFilesChange","activeWatchers","writeQueues","providerDisposables","onDidChangeFile","onDidChangeCapabilities","onDidErrorOccur","joiners","capability","resourceForError","activateProvider","withProvider","doResolveFile","resolveTo","resolveSingleChildDescendants","trie","toFileStat","Boolean","findSuperstr","recurse","labels_1","File","Directory","SymbolicLink","ctime","resolvedEntries","childResource","childStat","toResolve","bufferOrReadableOrStream","throwIfFileSystemIsReadonly","withWriteProvider","validateWriteFile","stream_1","doWriteUnbuffered","doWriteBuffered","withReadProvider","doReadAsFileStream","preferUnbuffered","cancellableSource","statPromise","validateReadFile","fileStreamPromise","readFileUnbuffered","readFileStreamed","readFileBuffered","fileStream","readFileStream","transformFileReadStream","io_1","validateReadFileLimits","tooLargeErrorResult","sourceProvider","targetProvider","doMoveCopy","isSameResourceWithDifferentPathCase","doValidateMoveCopy","sourceFile","doCopyFolder","doPipeBuffered","doPipeBufferedToUnbuffered","doPipeUnbufferedToBuffered","doPipeUnbuffered","sourceFolder","targetFolder","sourceChild","targetChild","isPathCaseSensitive","directory","directoriesToCreate","useTrash","watchDisposed","watchDisposable","doWatch","toWatchKey","toMapKey","writeQueue","readableOrStream","ensureWriteQueue","doWriteStreamBufferedQueued","doWriteReadableBufferedQueued","doWriteBuffer","totalBytesWritten","doWriteUnbufferedQueued","doPipeBufferedQueued","sourceHandle","targetHandle","doPipeUnbufferedQueued","doPipeUnbufferedToBufferedQueued","DiskFileSystemProvider","mapHandleToPos","writeHandles","_onDidWatchErrorOccur","_onDidChangeFile","recursiveFoldersToWatch","recursiveWatchRequestDelayer","_capabilities","toFilePath","toType","birthtime","toFileSystemProviderError","filePath","normalizedPos","normalizePos","updatePos","bytesLength","lastKnownPos","doWrite","bytesWritten","doDelete","fromFilePath","validateTargetDeleted","watchRecursive","watchNonRecursive","folderToWatch","refreshRecursiveWatchers","doRefreshRecursiveWatchers","recursiveWatcher","watcherService_3","watcherImpl","_b","usePolling","watcherService_1","_c","watcherService_2","recursiveWatcherLogLevelListener","watcherService","watcherService_4","logLevelListener","LoggerChannel","consoleFn","LoggerChannelClient","FollowerLogService","master","logger","createRotatingLogger","filename","filesize","filecount","SpdLogService","logsFolder","_loggerCreationPromise","_createSpdLogLogger","_logger","processName","_spdlog","setAsyncMode","logfilePath","createRotatingLoggerAsync","createSpdLogLogger","_log","disposeLogger","drop","severity_1","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","onDidClose","onDidChangeVisibility","actions","product","nameLong","nameShort","urlProtocol","rawProductConfiguration","rootPath","pkg","process_1","dataFolderName","EnvironmentService","_args","_execPath","date_1","appRoot","execPath","cliPath","isBuilt","product_1","applicationName","getCLIPath","homedir","vscodePortable","parseUserDataDir","appSettingsHome","userRoamingDataHome","settingsResource","resources","userDataSyncHome","userDataSyncLogResource","enableSyncByDefault","machineSettingsResource","workspaceStorageHome","keybindingsResource","keyboardLayoutResource","argvResource","snippetsHome","isExtensionDevelopment","extensionDevelopmentPath","backupHome","backupWorkspacesPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","parsePathArg","extensionsPath","vscodeExtensions","extraExtensionPaths","extraBuiltinExtensionPaths","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","extensionEnabledProposedApi","debugExtensionHost","parseExtensionHostPort","logExtensionHostCommunication","mainIPCHandle","getIPCHandle","sharedIPCHandle","nodeCachedDataDir","serviceMachineIdResource","disableUpdates","disableCrashReporter","driverHandle","driverVerbose","disableTelemetry","decorators_1","xdgRuntimeDir","safeIpcPathLengths","2","1","getWin32IPCHandle","scope","getNixIPCHandle","isBuild","parseDebugPort","debugId","debugArg","debugBrkArg","defaultBuildPort","break","parseSearchPort","systemLanguages","quality","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionIdentifier","installed","updated","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","crypto_1","IProductService","Registry","Assert","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultOverridesConfigurationNode","title","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","allOf","defaultConfigurations","defaultConfiguration","defaults","propertySchema","description","$ref","overrideIdentifier","updateOverridePropertyPatternKey","propertyKeys","validateProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","curr","getConfigurationValue","settingPath","component","accessSetting","overrideIdentifierFromKey","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","value1","value2","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","fromOverride","toOverride","toOverrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","parseErrors","json","filterByScope","filterOverriddenProperties","getScope","UserSettings","userSettingsResource","_onDidChange","onDidChange","parser","parseContent","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","workspaceConfiguration","folderConfigurations","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","model","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","ConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","configurationModels_1","reloadConfigurationScheduler","reloadConfiguration","onDidDefaultConfigurationChange","loadConfiguration","toData","onDidChangeUserConfiguration","userConfigurationModel","compareAndUpdateLocalUserConfiguration","compareAndUpdateDefaultConfiguration","configurationChange","getTargetConfiguration","isSuccess","statusCode","hasNoContent","IRequestService","asText","asJson","registerConfiguration","order","http.proxy","markdownDescription","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","RequestChannel","headers","RequestChannelClient","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","hostname","auth","rejectUnauthorized","strictSSL","resolve_2","reject_2","getServiceMachineId","storageService","store","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","loadSync","loadAsync","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","init","getItem","setItem","WillSaveStateReason","IStorageService","StorageScope","InMemoryStorageService","_onDidChangeStorage","onDidChangeStorage","_onWillSaveState","onWillSaveState","globalCache","workspaceCache","fallbackValue","getCache","valueStr","logStorage","toWorkspace","reason","NONE","globalPath","workspacePath","safeParse","globalItems","globalItemsParsed","workspaceItems","workspaceItemsParsed","globalValues","table","workspaceValues","ErrorEvent","callstack","BaseErrorTelemetry","telemetryService","flushDelay","ERROR_FLUSH_TIMEOUT","_flushHandle","_disposables","_telemetryService","_flushDelay","unbind","Errors","addListener","_onErrorEvent","installErrorListeners","_flushBuffer","_enqueue","publicLogError2","ErrorTelemetry","errorTelemetry_1","oldOnError","onerror","_onUncaughtError","uncaught_error_name","uncaught_error_msg","ITelemetryService","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","machineIdKey","trueMachineIdKey","crashReporterIdStorageKey","Flags","FilterType","flagsToString","f","AssetType","Icon","Details","Changelog","Manifest","VSIX","License","Repository","PropertyType","Dependency","ExtensionPack","Engine","LocalizedLanguages","DefaultQueryState","pageNumber","pageSize","sortBy","sortOrder","criteria","assetTypes","Query","filterType","filters","searchText","criterium","SearchText","getStatistic","statistics","statisticName","getCoreTranslationAssets","assetType","asset","getVersionAsset","getRepositoryAsset","gitRegExp","fallbackUri","getDownloadAsset","fallbackAssetUri","getIconAsset","assetUri","getExtensions","getEngine","getLocalizedLanguages","toExtension","galleryExtension","querySource","assets","readme","changelog","license","repository","icon","coreTranslations","extensionName","extensionId","lastUpdated","displayName","shortDescription","installCount","rating","ratingCount","extensionPack","localizedLanguages","preview","ExtensionGalleryService","requestService","productService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","resolveMarketplaceHeaders","extensionValidator_1","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","ExcludeNonValidated","withPage","withFilter","Target","ExcludeWithFlags","Unpublished","ExtensionId","ExtensionName","queryGallery","galleryExtensions","rawExtension","versionAsset","getLastValidExtensionVersion","rawVersion","isEnabled","names","publicLog2","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","withSortBy","ids","withSortOrder","total","firstPage","getPage","pageIndex","ct","nextPageQuery","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","url","api","request_1","resultCount","resultMetadata","metadataType","metadataItems","startTime","duration","publicLog","operationParam","downloadAsset","getAsset","compatible","IncludeVersions","fallbackUrl","firstOptions","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionRecursively","slow","telemetry_1","productService_1","storage_1","X-Market-Client-Id","User-Agent","serviceMachineId_1","TelemetryService","_configurationService","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","_enabled","_sendErrorTelemetry","sendErrorTelemetry","piiPath","_updateUserOptIn","optIn","isHashedId","usingFallbackGuid","trueMachineId","correctedMachineId","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","instanceId","msftInternal","anonymizeFilePaths","_cleanupInfo","errorEventName","publicLogError","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","y","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","_logService","commonPropertiesRegex","strippedData","flattenKeys","flatKeys","configurationTelemetry","configurationSource","configurationKeys","validateTelemetryData","measurements","flat","cleanRemoteAuthority","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","telemetryUtils_1","trackEvent","resolveCommonProperties","msftInternalDomains","release","domainList","domain","msftDomain","verifyMicrosoftInternalDomain","seq","defineProperties","common.timesincesessionstart","common.sequence","SNAP","SNAP_REVISION","buildTelemetryMessage","mergedTelemetry","mergeTelemetry","dirName","dirs","statSync","telemetryJsonFolders","INodeProxyService","NodeProxyChannel","NodeProxyChannelClient","TelemetryChannel","setEnabled","getTelemetryInfo","TelemetryChannelClient","Channel","_sender","cpus","cores","memoryFree","freemem","memoryTotal","totalmem","userInfo","TELEMETRY_URL","logger_1","named","metadataPath","isInternalConfiguration","DefaultConfiguration","getNlsConfiguration","util","lp","_languagePackSupport","getTranslations","getLocaleFromConfig","localeConfigUri","_m1","_m2","m4","length_1","Connection","offline","_offline","doReconnect","doDispose","ManagementConnection","setOffline","beginAcceptReconnection","endAcceptReconnection","ExtensionHostConnection","environment","getUnderlyingSocket","sendInitMessage","skipWebSocketFrames","proc","VSCODE_EXTHOST_WILL_SEND_SOCKET","VSCODE_HANDLES_UNCAUGHT_ERRORS","VSCODE_LOG_STACK","VSCODE_LOG_LEVEL","LOG_LEVEL","VSCODE_NLS_CONFIG","ipc_net_2","rawMessage","authenticate","_message","sendMessage","sendControl","encodePath","Translations","aKeys","bKeys","Logger","messageHandler","_messageHandler","notification_1","MANIFEST_FILE","ExtensionManifestHandler","ourVersion","absoluteFolderPath","isUnderDevelopment","_ourVersion","_absoluteFolderPath","_isBuiltin","_isUnderDevelopment","_absoluteManifestPath","ExtensionManifestParser","manifestContents","__metadata","jsonErrorMessages_1","ExtensionManifestNLSReplacer","_nlsConfig","extensionDescription","reportErrors","localized","reportInvalidFormat","translationId","localizedMessages","translationPath","translationBundle","package","findMessageBundles","messageBundle","messageBundleContent","resolveOriginalMessageBundle","_replaceNLStrings","originalMessageBundle","originalBundleContent","devMode","toCheck","literal","originalMessages","messageScope","processEntry","messageKey","ExtensionManifestValidator","_extensionDescription","isValidExtensionDescription","extensionLocation","extensionFolderPath","baseIsValidExtensionDescription","valid","_isStringArray","activationEvents","normalizedAbsolutePath","ExtensionScannerInput","tanslations","extensionPoints_1","DefaultExtensionResolver","ExtensionScanner","replaceNLS","resolver","obsolete","obsoleteFileContents","refs","resolveExtensions","ref","createNLSConfig","_extensionDescriptions","scanExtension","extensionDescriptions","scanExtensions","builtinExtensions","extraBuiltinExtensions","resultMap","resultArr","aLastSegment","bLastSegment","Watcher","diskFileSystemProvider_1","watches","w","req","FileProviderChannel","watchers","filechange","session","unwatch","_watch","requestResourcePath","ExtensionEnvironmentChannel","telemetry","getEnvironmentData","getDiagnosticInfo","settingsPath","extensionHostLogsPath","scanMultiple","VSCODE_DEV","scanBuiltin","scanInstalled","allExtensions","uniqueExtensions","multipleExtensions","NodeProxyService","_serviceBrand","_$onMessage","$onMessage","_onDown","onDown","_onUp","onUp","node_browser_1","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteFileSystemProvider","remoteAgentService","_onDidChangeCapabilities","getConnection","setCaseSensitive","getEnvironment","remoteAgentEnvironment","registerListeners","eventsOrError","isCaseSensitive","dataOrErrorOrEnd","RemoteExtensionLogFileName","IRemoteAgentService","ExtractError","cause","toExtractError","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","sourcePathRegex","fileName","targetFileName","openZipStream","attr","externalFileAttributes","modeFromEntry","targetDirName","istream","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","openReadStream","zipPath","yazl","ZipFile","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","zip_1","ExtensionManagementError","parseManifest","ExtensionManagementService","galleryService","downloadService","instantiationService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","_devSystemExtensionsPath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","manifestCache","extensionsManifestCache_1","extensionsDownloader","createInstance","extensionDownloader_1","extensionLifecycle","extensionLifecycle_1","collectFiles","downloadLocation","downloadVsix","extensionManagementUtil_2","collectFilesFromDirectory","identifierWithVersion","installedExtensions","existing","removeExtension","gt","unsetUninstalledAndGetLocal","getMetadata","installFromZipPath","downloadedLocation","toNonCancellablePromise","installExtension","installDependenciesAndPackExtensions","onDidInstallExtensionSuccess","gallery","reportTelemetry","getTelemetryEvent","onDidInstallExtensionFailure","checkAndGetCompatibleVersion","cancellablePromise","successCallback","errorCallback","existingExtension","downloadInstallableExtension","installableExtension","neq","setUninstalled","isMalicious","compatibleExtension","getCompatibleExtension","findGalleryExtension","removeUninstalledExtension","downloadExtension","joinErrors","extractAndInstall","isUninstalled","unsetUninstalled","folderName","tempPath","extensionPath","extractAndRename","setMetadata","saveMetadataForLocalExtension","extractPath","renamePath","retryUntil","dependenciesAndPackExtensions","old","galleryIdentifier","galleryResult","extensionsToInstall","rollback","extensionToUninstall","checkForDependenciesAndUninstall","localExtension","manifestPath","findGalleryExtensionByName","findGalleryExtensionById","errorOrErrors","previousValue","currentValue","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","uninstallExtension","doUninstall","checked","extensionsPack","packOfPackedExtensions","packedExtension","scanUserExtensions","userExtensions","u","reportStatistic","errorcode","promises","scanSystemExtensions","systemExtensionsPromise","devSystemExtensionsPromise","getDevSystemExtensionsList","devSystemExtensionsList","devSystemExtensionsPath","systemExtensions","devSystemExtensions","excludeOutdated","getUninstalledExtensions","scanAllUserExtensions","uninstalled","limiter","extensionsFolders","extensionFolder","extensionNls_1","readManifest","readmeUrl","changelogUrl","removeUninstalledExtensions","removeOutdatedExtensions","postUninstall","toRemove","withUninstalledExtensions","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","builtInExtensions","extensionData","download_1","vszipExtract","vszip","vszipBuffer","tar","tarPath","pack","tarStream","finalize","archivePath","extractTar","includes","extractAssets","assetPath","extractor","fail","extractData","fileData","nextEntry","rawName","fstream","enableCustomMarketplace","SERVICE_URL","itemUrl","ITEM_URL","recommendationsUrl","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","agent","proxy_1","Proxy-Authorization","_request","endpoint","rawRequest","getRawRequest","getNodeRequest","password","followRedirects","zlib_1","createGunzip","abort","notInstalled","useId","getId","withVersion","EXTENSION_ID_REGEX","getIdAndVersion","Main","argv","setInstallSource","listExtensions","installExtensions","locateExtension","telemetry_2","installSource","showVersions","categories","failed","installedExtensionsManifests","updateLocalizationsCache","responseText","notFound","installedExtension","newer","getExtensionId","uninstalledExtensions","localizationService","eventPrefix","environmentService_1","spdlogService_1","fileService_1","diskFileSystemProvider","registerProvider","configurationService_1","initialize","state_1","stateService_1","instantiationService_1","invokeFunction","accessor","stateService","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","commonProperties_1","telemetryService_1","createChild","Vscode","_onDidClientConnect","ipc","maxExtraOfflineConnections","cliProcessMain_1","servicesPromise","initializeServices","startPath","parseUrl","workbenchWebConfiguration","workspaceUri","folderUri","workspaceProvider","payload","remoteUserDataUri","productConfiguration","nlsConfiguration","reconnectionToken","protocol_1","reconnection","handshake","desiredConnectionType","debugPort","getDebugPort","reconnect","connection_1","nodeProxy_1","disposeOldOfflineConnections","tunnel","remoteAgentService_1","logIpc_1","extensionHostDebugIpc_1","insights_1","id_1","localizations_2","channel_1","logsDataCleaner_1","extensionManagementIpc_1","requestIpc_1","ipc_2","remoteAgentFileSystemChannel_1","logger_2","marketplace_1","exit","CODE_SERVER_PARENT_PID","parentPid","server_1","field","cli","handleWebSocket"],"mappings":"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EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,E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","file":"entry.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj._performanceEntries = sharedObj._performanceEntries || [];\n\n\tconst _dataLen = 2;\n\tconst _timeStamp = typeof console.timeStamp === 'function' ? console.timeStamp.bind(console) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj._performanceEntries.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj._performanceEntries.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getEntry(name) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tif (entries[i] === name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: entries[i],\n\t\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj._performanceEntries.push(name, Date.now());\n\t\t_timeStamp(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetEntry: getEntry,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\nlet sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\t// invalid context...\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n//@ts-check\n\n/**\n * @param {NodeRequire} nodeRequire\n * @param {typeof import('path')} path\n * @param {typeof import('fs')} fs\n * @param {typeof import('../common/performance')} perf\n */\nfunction factory(nodeRequire, path, fs, perf) {\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<boolean>}\n\t */\n\tfunction exists(file) {\n\t\treturn new Promise(c => fs.exists(file, c));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction touch(file) {\n\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<object>}\n\t */\n\tfunction lstat(file) {\n\t\treturn new Promise((c, e) => fs.lstat(file, (err, stats) => err ? e(err) : c(stats)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string[]>}\n\t */\n\tfunction readdir(dir) {\n\t\treturn new Promise((c, e) => fs.readdir(dir, (err, files) => err ? e(err) : c(files)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string>}\n\t */\n\tfunction mkdirp(dir) {\n\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<void>}\n\t */\n\tfunction rmdir(dir) {\n\t\treturn new Promise((c, e) => fs.rmdir(dir, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction unlink(file) {\n\t\treturn new Promise((c, e) => fs.unlink(file, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} location\n\t * @returns {Promise<void>}\n\t */\n\tfunction rimraf(location) {\n\t\treturn lstat(location).then(stat => {\n\t\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\t\treturn readdir(location)\n\t\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(path.join(location, child)))))\n\t\t\t\t\t.then(() => rmdir(location));\n\t\t\t} else {\n\t\t\t\treturn unlink(location);\n\t\t\t}\n\t\t}, err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tfunction readFile(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.readFile(file, 'utf8', function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @param {string} content\n\t * @returns {Promise<void>}\n\t */\n\tfunction writeFile(file, content) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.writeFile(file, content, 'utf8', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {string} userDataPath\n\t * @returns {object}\n\t */\n\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\ttry {\n\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t// language changes.\n\t\t\treturn JSON.parse(fs.readFileSync(configFile, \"utf8\"));\n\t\t} catch (err) {\n\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t// language pack config.\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {object} config\n\t * @param {string} locale\n\t */\n\tfunction resolveLanguagePackLocale(config, locale) {\n\t\ttry {\n\t\t\twhile (locale) {\n\t\t\t\tif (config[locale]) {\n\t\t\t\t\treturn locale;\n\t\t\t\t} else {\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {string} commit\n\t * @param {string} userDataPath\n\t * @param {string} metaDataFile\n\t * @param {string} locale\n\t */\n\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\tif (locale === 'pseudo') {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t}\n\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t// the right file to use.\n\n\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t// English translation (we don't ship *.nls.en.json files)\n\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\tconst initialLocale = locale;\n\n\t\tperf.mark('nlsGeneration:start');\n\n\t\tconst defaultResult = function (locale) {\n\t\t\tperf.mark('nlsGeneration:end');\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t};\n\t\ttry {\n\t\t\tif (!commit) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\tif (!configs) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\tif (!locale) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst packConfig = configs[locale];\n\t\t\tlet mainPack;\n\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\tif (!fileExists) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\tconst result = {\n\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t};\n\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\tlet toDelete;\n\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\treturn defaultResult(locale);\n\t\t}\n\t}\n\n\treturn {\n\t\tgetNLSConfiguration\n\t};\n}\n\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(__m[88/*vs/base/node/languagePacks*/], __M([41/*path*/,21/*fs*/,165/*vs/base/common/performance*/]), function (path, fs, perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\tconst path = require('path');\n\tconst fs = require('fs');\n\tconst perf = require('../common/performance');\n\tmodule.exports = factory(require, path, fs, perf);\n} else {\n\tthrow new Error('Unknown context');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * @deprecated ES6: use `Array.findIndex`\n */\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T> {\n\tlet promiseResolve: (() => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.();\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t */\n\twrite(data: T): void;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer);\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tconstructor(private reducer: IReducer<T>) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: IReducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlet wrapperStream: WriteableStream<T> | undefined = undefined;\n\n\t\tstream.on('data', data => {\n\n\t\t\t// If we reach maxChunks, we start to return a stream\n\t\t\t// and make sure that any data we have already read\n\t\t\t// is in it as well\n\t\t\tif (!wrapperStream && chunks.length === maxChunks) {\n\t\t\t\twrapperStream = newWriteableStream(reducer);\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.write(data);\n\n\t\t\t\treturn resolve(wrapperStream);\n\t\t\t}\n\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.write(data);\n\t\t\t} else {\n\t\t\t\tchunks.push(data);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('error', error => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.error(error);\n\t\t\t} else {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('end', () => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.end();\n\t\t\t} else {\n\t\t\t\treturn resolve(reducer(chunks));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * @deprecated ES6: use `String.startsWith`\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated ES6: use `String.endsWith`\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\n/**\n * @deprecated ES6\n */\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n * todo@joh use toJSON-results\n */\nexport type Dto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: T[K] extends Function\n\t? never\n\t: UriDto<T[K]> };\n\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\n/**\n * @deprecated ES6\n */\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { regExpFlags } from 'vs/base/common/strings';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\nexport function revive(obj: any, depth = 0): any {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return URI.revive(obj);\n\t\t\tcase 2: return new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\t// NOTE@coder: Use fsPath for Windows support.\n\t\tlet query = `path=${encodeURIComponent(uri.fsPath)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\n\n/**\n * @deprecated ES6: use `[...SetOrMap.values()]`\n */\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\n/**\n * @deprecated ES6: use `[...map.keys()]`\n */\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\t//todo@jrieken the case-sensitive logic is copied form `resources.ts#hasToIgnoreCase`\n\t\t\t// which cannot be used because it depends on this\n\t\t\tconst caseSensitive = key.scheme === Schemas.file && isLinux;\n\t\t\tthis._pathIterator = new PathIterator(false, caseSensitive);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator());\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<K, V>): Iterator<V> {\n\t\tlet res: { done: false; value: V; };\n\t\tlet idx: number;\n\t\tlet data: V[];\n\t\tconst next = (): IteratorResult<V> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: V, index: K) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<K, V> | undefined, callback: (value: V, index: K) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V>{\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n/**\n * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n * URI queries are included, fragments are ignored.\n */\nexport function getComparisonKey(resource: URI, caseInsensitivePath = hasToIgnoreCase(resource)): string {\n\tlet path = resource.path || '/';\n\tif (caseInsensitivePath) {\n\t\tpath = path.toLowerCase();\n\t}\n\treturn resource.with({ authority: resource.authority.toLowerCase(), path: path, fragment: null }).toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * URI queries must match, fragments are ignored.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase) && base.query === parentCandidate.query;\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path || '/', parentCandidate.path || '/', ignoreCase, '/') && base.query === parentCandidate.query;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests whether the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\n/**\n * Tests whether two resources are the same.  URI queries must match, fragments are ignored unless requested.\n */\nexport function isEqual(first: URI | undefined, second: URI | undefined, caseInsensitivePath = hasToIgnoreCase(first), ignoreFragment = true): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn (p1 === p2 || caseInsensitivePath && equalsIgnoreCase(p1, p2)) && first.query === second.query && (ignoreFragment || first.fragment === second.fragment);\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tlet dirname;\n\tif (resource.scheme === Schemas.file) {\n\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t} else {\n\t\tdirname = paths.posix.dirname(resource.path);\n\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t}\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === 'file') {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, caseInsensitivePath = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (caseInsensitivePath) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI, expression: ParsedExpression }> = TernarySearchTree.forUris<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { posix, normalize, win32, sep } from 'vs/base/common/path';\nimport { startsWithIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { Schemas } from './network';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tconstructor(private readonly remoteAuthority: string) {\n\t}\n\n\t// NOTE@coder: Coming in from the browser it'll be vscode-remote so it needs\n\t// to be transformed into file.\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.vscodeRemote\n\t\t\t? toJSON(URI.file(uri.path))\n\t\t\t: uri;\n\t}\n\n\t// NOTE@coder: Going out to the browser it'll be file so it needs to be\n\t// transformed into vscode-remote.\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? toJSON(URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path: uri.path }))\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path:uri.path })\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn scheme === Schemas.file\n\t\t\t? Schemas.vscodeRemote\n\t\t\t: scheme;\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst cmdline = {\n\twindows: 'getmac.exe',\n\tunix: '/sbin/ifconfig -a || /sbin/ip link'\n};\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\texec(isWindows ? cmdline.windows : cmdline.unix, { timeout: 10000 }, (err, stdout, stdin) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(`Unable to retrieve mac address (${err.toString()})`);\n\t\t\t\t} else {\n\t\t\t\t\tconst regex = /(?:[a-f\\d]{2}[:\\-]){5}[a-f\\d]{2}/gi;\n\n\t\t\t\t\tlet match;\n\t\t\t\t\twhile ((match = regex.exec(stdout)) !== null) {\n\t\t\t\t\t\tconst macAddressCandidate = match[0];\n\t\t\t\t\t\tif (validateMacAddress(macAddressCandidate)) {\n\t\t\t\t\t\t\treturn resolve(macAddressCandidate);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn reject('Unable to retrieve mac address (unexpected format)');\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = getPathFromAmdModule(require, 'paths');\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accommodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/Microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.flush();\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext) {\n\t\tsuper(protocol, id);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new BufferedEmitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\tconsole.error(`PROTOCOL CORRUPTION, LAST SAW MSG ${this._incomingMsgId} AND HAVE NOW RECEIVED MSG ${msg.id}`);\n\t\t\t\t}\n\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\tthis._sendAckCheck();\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { revive } from 'vs/base/common/marshalling';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { isUpperAsciiLetter } from 'vs/base/common/strings';\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\n\nexport class NodeSocket implements ISocket {\n\tpublic readonly socket: Socket;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\tthis.socket.write(<Buffer>buffer.buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tmask: 0\n\t};\n\n\tconstructor(socket: NodeSocket) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.dispose();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this.socket.onClose(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\theader.writeUInt8(0b10000010, 0);\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\t// const firstByte = peekHeader.readUInt8(0);\n\t\t\t\t// const finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._onData.fire(body);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t} else {\n\t\t// Mac/Unix: use socket file\n\t\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\tconst _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone, assign } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/Microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = assign(deepClone(process.env), { 'VSCODE_PARENT_PID': String(process.pid) });\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = assign(forkOpts.env, this.options.env);\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ILogToSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onLogToEmitter = new Emitter<ILogToSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'log':\n\t\t\t\treturn Promise.resolve(this._onLogToEmitter.fire({ sessionId: arg[0], log: arg[1] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'log':\n\t\t\t\treturn this._onLogToEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tlogToSession(sessionId: string, log: IRemoteConsoleLog): void {\n\t\tthis.channel.call('log', [sessionId, log]);\n\t}\n\n\tget onLogToSession(): Event<ILogToSessionEvent> {\n\t\treturn this.channel.listen('log');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: IProcessEnvironment): Promise<void> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension, IExtensionTipsService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer), args[1]);\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) { }\n\n\tget onInstallExtension(): Event<InstallExtensionEvent> { return this.channel.listen('onInstallExtension'); }\n\tget onDidInstallExtension(): Event<DidInstallExtensionEvent> { return Event.map(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension'), i => ({ ...i, local: i.local ? transformIncomingExtension(i.local, null) : i.local })); }\n\tget onUninstallExtension(): Event<IExtensionIdentifier> { return this.channel.listen('onUninstallExtension'); }\n\tget onDidUninstallExtension(): Event<DidUninstallExtensionEvent> { return this.channel.listen('onDidUninstallExtension'); }\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation, type]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, force]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t\tcase 'getAllWorkspacesTips': return this.service.getAllWorkspacesTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { rimraf } from 'vs/base/node/pfs';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\tprivate environmentService: INativeEnvironmentService,\n\t\tprivate logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.metadata ? extension.metadata.publisherId : null,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.metadata ? extension.metadata.publisherDisplayName : null,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/nsfw/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: WatcherChannelClient | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tconst options = {};\n\t\tthis._register(this.service.watch(options)(e => !this.isDisposed && this.onDidFilesChange(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/unix/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: WatcherChannelClient | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.watch(this.watcherOptions)(e => !this.isDisposed && this.onDidFilesChange(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(getPathFromAmdModule(require, 'vs/platform/files/node/watcher/win32/CodeHelper.exe'), args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && this.folder.path.endsWith(posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onDidFilesChange(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\t_serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport const BACKUPS = 'Backups';\n\nexport interface IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: DO NOT ADD ANY OTHER PROPERTY INTO THE COLLECTION HERE\n\t// UNLESS THIS PROPERTY IS SUPPORTED BOTH IN WEB AND DESKTOP!!!!\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t_serviceBrand: undefined;\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tbackupHome: URI;\n\tuntitledWorkspacesHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncLogResource: URI;\n\tuserDataSyncHome: URI;\n\tsync: 'on' | 'off' | undefined;\n\tenableSyncByDefault: boolean;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\textensionEnabledProposedApi?: string[];\n\tlogExtensionHostCommunication?: boolean;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- misc\n\tdisableTelemetry: boolean;\n\tserviceMachineIdResource: URI;\n\n\t// NOTE@coder: vscodevim makes use of this.\n\tglobalStorageHome: string;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: DO NOT ADD ANY OTHER PROPERTY INTO THE COLLECTION HERE\n\t// UNLESS THIS PROPERTY IS SUPPORTED BOTH IN WEB AND DESKTOP!!!!\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IExeBasedExtensionTip } from 'vs/platform/product/common/productService';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\treadonly manifest: IExtensionManifest;\n\tmetadata: IGalleryMetadata;\n\treadmeUrl: URI | null;\n\tchangelogUrl: URI | null;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport interface IExtensionGalleryService {\n\t_serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport interface IExtensionManagementService {\n\t_serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI): Promise<ILocalExtension>;\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\nexport type IExecutableBasedExtensionTip = { extensionId: string } & Omit<Omit<IExeBasedExtensionTip, 'recommendations'>, 'important'>;\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\t_serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = require.toUrl('./media/defaultIcon.png');\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An even that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[]) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer, VSBufferWriteableStream, newWriteableBufferStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n}\n\nexport function createReadStream(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: ICreateReadStreamOptions, token?: CancellationToken): VSBufferReadableStream {\n\tconst stream = newWriteableBufferStream();\n\n\t// do not await reading but simply return the stream directly since it operates\n\t// via events. finally end the stream and send through the possible error\n\tlet error: Error | undefined = undefined;\n\n\tdoReadFileIntoStream(provider, resource, stream, options, token).then(undefined, err => error = err).finally(() => stream.end(error));\n\n\treturn stream;\n}\n\nasync function doReadFileIntoStream(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, stream: VSBufferWriteableStream, options: ICreateReadStreamOptions, token?: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\ttry {\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tstream.write(buffer);\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\tstream.write(buffer.slice(0, lastChunkLength));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token?: CancellationToken): boolean {\n\tif (token && token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow it to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(() => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(normalizedFileChanges);\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tthis._entries.forEach((value, key) => callback(key, value));\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.getValue();\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.getValue()[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const enum LanguageType {\n\tCore = 1,\n\tContributed\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\t_serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(type?: LanguageType): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\t_serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\t_serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class LogServiceAdapter extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly adapter: { consoleLog: (type: string, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends LogServiceAdapter implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper({ consoleLog: (type, args) => client.consoleLog(type, args) }, logLevel);\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = environmentService.logLevel.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { tmpdir } from 'os';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { joinPath } from 'vs/base/common/resources';\nimport { ExtensionIdentifierWithVersion, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as semver from 'semver-umd';\n\nconst ExtensionIdVersionRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)$/;\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI = URI.file(tmpdir());\n\tprivate readonly cache: number = 0;\n\tprivate readonly cleanUpPromise: Promise<void> = Promise.resolve();\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tif (environmentService.extensionsDownloadPath) {\n\t\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\t\tthis.cache = 20; // Cache 20 downloads\n\t\t\tthis.cleanUpPromise = this.cleanUp();\n\t\t}\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst location = joinPath(this.extensionsDownloadDir, this.getName(extension));\n\t\tawait this.download(extension, location, operation);\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\t// Delete immediately if caching is disabled\n\t\tif (!this.cache) {\n\t\t\tawait this.fileService.del(location);\n\t\t}\n\t}\n\n\tprivate async download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\tawait this.extensionGalleryService.download(extension, location, operation);\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downlads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionIdentifierWithVersion, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = this.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension.identifier);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promise.all(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key().toLowerCase() : generateUuid();\n\t}\n\n\tprivate parse(name: string): ExtensionIdentifierWithVersion | null {\n\t\tconst matches = ExtensionIdVersionRegex.exec(name);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionIdentifierWithVersion({ id: matches[1] }, matches[2]) : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isAbsolutePath, dirname, basename, joinPath, isEqual, isEqualOrParent } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, bufferToStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, ReadableStreamEvents, consumeReadableWithLimit, consumeStreamWithLimit } from 'vs/base/common/stream';\nimport { Queue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { createReadStream } from 'vs/platform/files/common/io';\n\nexport class FileService extends Disposable implements IFileService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promise.all(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>();\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri, true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource) || trie.get(stat.resource))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: getBaseLabel(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promise.all(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promise.all(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tbufferOrReadableOrStream = await consumeStreamWithLimit(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStream = consumeReadableWithLimit(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, bufferOrReadableOrStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, bufferOrReadableOrStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStream) : bufferOrReadableOrStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// file cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tconst stream = await this.doReadAsFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadAsFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadAsFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & { preferUnbuffered?: boolean }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelyhood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\tlet fileStreamPromise: Promise<VSBufferReadableStream>;\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStreamPromise = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileStreamed(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileBuffered(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\tconst [fileStat, fileStream] = await Promise.all([statPromise, fileStreamPromise]);\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn this.transformFileReadStream(resource, fileStream, options);\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = createReadStream(provider, resource, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn this.transformFileReadStream(resource, fileStream, options);\n\t}\n\n\tprivate transformFileReadStream(resource: URI, stream: ReadableStreamEvents<Uint8Array | VSBuffer>, options: IReadFileOptions): VSBufferReadableStream {\n\t\treturn transform(stream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate async readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileOptions): Promise<VSBufferReadableStream> {\n\t\tlet buffer = await provider.readFile(resource);\n\n\t\t// respect position option\n\t\tif (options && typeof options.position === 'number') {\n\t\t\tbuffer = buffer.slice(options.position);\n\t\t}\n\n\t\t// respect length option\n\t\tif (options && typeof options.length === 'number') {\n\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\treturn bufferToStream(VSBuffer.wrap(buffer));\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promise.all(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst isPathCaseSensitive = !!(sourceProvider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = isEqual(source, target, true /* ignore case */);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && isEqualOrParent(target, source, !isPathCaseSensitive)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst isPathCaseSensitive = !!(sourceProvider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tif (isEqualOrParent(source, target, !isPathCaseSensitive)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\twhile (!isEqual(directory, dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync del(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<void> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate activeWatchers = new Map<string, { disposable: IDisposable, count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet watchDisposable = toDisposable(() => watchDisposed = true);\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\twatchDisposable = disposable;\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => dispose(watchDisposable));\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\treturn [\n\t\t\tthis.toMapKey(provider, resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate writeQueues: Map<string, Queue<void>> = new Map();\n\n\tprivate ensureWriteQueue(provider: IFileSystemProvider, resource: URI): Queue<void> {\n\t\t// ensure to never write to the same resource without finishing\n\t\t// the one write. this ensures a write finishes consistently\n\t\t// (even with error) before another write is done.\n\t\tconst queueKey = this.toMapKey(provider, resource);\n\t\tlet writeQueue = this.writeQueues.get(queueKey);\n\t\tif (!writeQueue) {\n\t\t\twriteQueue = new Queue<void>();\n\t\t\tthis.writeQueues.set(queueKey, writeQueue);\n\n\t\t\tconst onFinish = Event.once(writeQueue.onFinished);\n\t\t\tonFinish(() => {\n\t\t\t\tthis.writeQueues.delete(queueKey);\n\t\t\t\tdispose(writeQueue);\n\t\t\t});\n\t\t}\n\n\t\treturn writeQueue;\n\t}\n\n\tprivate toMapKey(provider: IFileSystemProvider, resource: URI): string {\n\t\tconst isPathCaseSensitive = !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\treturn isPathCaseSensitive ? resource.toString() : resource.toString().toLowerCase();\n\t}\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, readableOrStream: VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, stream: VSBufferReadableStream): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet posInFile = 0;\n\n\t\t\tstream.on('data', async chunk => {\n\n\t\t\t\t// pause stream to perform async write operation\n\t\t\t\tstream.pause();\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t// handler again before finishing.\n\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t});\n\n\t\t\tstream.on('error', error => reject(error));\n\t\t\tstream.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(() => this.doWriteUnbufferedQueued(provider, resource, bufferOrReadableOrStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStream);\n\t\t}\n\n\t\treturn provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promise.all([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mkdir, open, close, read, write, fdatasync, Dirent, Stats } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { statLink, unlink, move, copy, readFile, truncate, rimraf, RimRafMode, exists, readdirWithFileTypes } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, transform } from 'vs/base/common/stream';\nimport { createReadStream } from 'vs/platform/files/common/io';\nimport { insert } from 'vs/base/common/arrays';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(private logService: ILogService, private options?: IDiskFileSystemProviderOptions) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdirWithFileTypes(this.toFilePath(resource));\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | Dirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to non-existing files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst fileStream = createReadStream(this, resource, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn transform(fileStream, { data: data => data.buffer }, data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate writeHandles: Set<number> = new Set();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (opts.create) {\n\t\t\t\tif (isWindows && await exists(filePath)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (opts.create) {\n\t\t\t\tthis.writeHandles.add(handle);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promisify(mkdir)(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@ben ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(async () => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\t//#endregion\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LoggerChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t\tcase 'consoleLog': this.consoleLog(arg[0], arg[1]); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate consoleLog(severity: string, args: string[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (severity) {\n\t\t\tcase 'error':\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase 'warn':\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n}\n\nexport class LoggerChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLoggerChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n\tconsoleLog(severity: string, args: string[]): void {\n\t\tthis.channel.call('consoleLog', [severity, args]);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private master: LoggerChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(master.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.master.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n\nasync function createSpdLogLogger(processName: string, logsFolder: string): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\treturn _spdlog.createRotatingLoggerAsync(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tprivate buffer: ILog[] = [];\n\tprivate _loggerCreationPromise: Promise<void> | undefined = undefined;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(private readonly name: string, private readonly logsFolder: string, level: LogLevel) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tif (!this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise = createSpdLogLogger(this.name, this.logsFolder)\n\t\t\t\t.then(logger => {\n\t\t\t\t\tif (logger) {\n\t\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buffer = [];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn this._loggerCreationPromise;\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t\tthis._loggerCreationPromise = undefined;\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\treadonly sticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\treadonly silent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\treadonly neverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces (= `NeverShowAgainScope.GLOBAL`).\n\t */\n\treadonly scope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\treadonly severity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\treadonly message: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\treadonly source?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\treadonly progress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\treadonly primary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\treadonly secondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\treadonly infinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\treadonly total?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\treadonly worked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible.\n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\treadonly keepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\treadonly showAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\treadonly hideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param severity the severity of the notification. Either `Info`, `Warning` or `Error`.\n\t * @param message the message to show as status.\n\t * @param choices options to be choosen from.\n\t * @param options provides some optional configuration options.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/platform/product/common/productService';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { env } from 'vs/base/common/process';\n\nlet product: IProductConfiguration;\n\n// Web\nif (isWeb) {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.45.0-dev',\n\t\t\tnameLong: 'Visual Studio Code Web Dev',\n\t\t\tnameShort: 'VSCode Web Dev',\n\t\t\turlProtocol: 'code-oss'\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tObject.assign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\n// Node: AMD loader\nelse if (typeof require !== 'undefined' && typeof require.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\n\n\tproduct = require.__$__nodeRequire(path.join(rootPath, 'product.json'));\n\tconst pkg = require.__$__nodeRequire(path.join(rootPath, 'package.json')) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\n// Unknown\nelse {\n\tthrow new Error('Unable to resolve product configuration');\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, IDebugParams, IExtensionHostDebugParams, BACKUPS } from 'vs/platform/environment/common/environment';\nimport { ParsedArgs } from 'vs/platform/environment/node/argv';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport product from 'vs/platform/product/common/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux, Platform, platform } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\targs: ParsedArgs;\n\n\tappRoot: string;\n\texecPath: string;\n\n\tappSettingsHome: URI;\n\tuserDataPath: string;\n\tuserHome: URI;\n\tmachineSettingsResource: URI;\n\tbackupWorkspacesPath: string;\n\tnodeCachedDataDir?: string;\n\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\tinstallSourcePath: string;\n\n\textensionsPath?: string;\n\textensionsDownloadPath?: string;\n\tbuiltinExtensionsPath: string;\n\textraExtensionPaths: string[];\n\textraBuiltinExtensionPaths: string[];\n\n\tworkspaceStorageHome: string;\n\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n\n\tdisableUpdates: boolean;\n}\n\nexport class EnvironmentService implements INativeEnvironmentService {\n\n\t_serviceBrand: undefined;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): URI { return URI.file(os.homedir()); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'sync'); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(path.join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget enableSyncByDefault(): boolean { return false; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return resources.joinPath(URI.file(path.join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): string { return path.join(this.appSettingsHome.fsPath, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): string { return path.join(this.appSettingsHome.fsPath, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(path.join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): URI { return URI.file(path.join(this.userDataPath, BACKUPS)); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome.fsPath, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\tget extensionsDownloadPath(): string | undefined {\n\t\treturn parsePathArg(this._args['extensions-download-dir'], process);\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize get extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\t@memoize get extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(p => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(p)) {\n\t\t\t\t\treturn URI.parse(p);\n\t\t\t\t}\n\t\t\t\treturn URI.file(path.normalize(p));\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget extensionEnabledProposedApi(): string[] | undefined {\n\t\tif (Array.isArray(this.args['enable-proposed-api'])) {\n\t\t\treturn this.args['enable-proposed-api'];\n\t\t}\n\n\t\tif ('enable-proposed-api' in this.args) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\t@memoize\n\tget logExtensionHostCommunication(): boolean { return !!this.args.logExtensionHostCommunication; }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget logLevel(): string | undefined { return this._args.log; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return resources.joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tget disableTelemetry(): boolean { return !!this._args['disable-telemetry']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nexport const xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\n\tlet result: string;\n\tif (xdgRuntimeDir && !vscodePortable) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\tresult = path.join(xdgRuntimeDir, `vscode-${scope}-${product.version}-${type}.sock`);\n\t} else {\n\t\tresult = path.join(userDataPath, `${product.version}-${type}.sock`);\n\t}\n\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number') {\n\t\tif (result.length >= limit) {\n\t\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\t\tconsole.warn(`WARNING: IPC handle \"${result}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${product.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n\nexport function parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService, LanguageType } from 'vs/platform/localizations/common/localizations';\nimport product from 'vs/platform/product/common/product';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nconst systemLanguages: string[] = ['de', 'en', 'en-US', 'es', 'fr', 'it', 'ja', 'ko', 'ru', 'zh-CN', 'zh-TW'];\nif (product.quality !== 'stable') {\n\tsystemLanguages.push('hu');\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(type: LanguageType): Promise<string[]> {\n\t\tif (type === LanguageType.Core) {\n\t\t\treturn Promise.resolve([...systemLanguages]);\n\t\t}\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tconst languages = type === LanguageType.Contributed ? Object.keys(languagePacks) : [...systemLanguages, ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\t_serviceBrand: undefined;\n\n}\n\nexport interface IBuiltInExtension {\n\treadonly name: string;\n\treadonly version: string;\n\treadonly repo: string;\n\treadonly metadata: any;\n}\n\nexport type ConfigurationSyncStore = { url: string, authenticationProviders: IStringDictionary<{ scopes: string[] }> };\n\nexport interface IProductConfiguration {\n\treadonly codeServerVersion?: string;\n\n\treadonly version: string;\n\treadonly date?: string;\n\treadonly quality?: string;\n\treadonly commit?: string;\n\n\treadonly nameShort: string;\n\treadonly nameLong: string;\n\n\treadonly win32AppUserModelId?: string;\n\treadonly win32MutexName?: string;\n\treadonly applicationName: string;\n\n\treadonly urlProtocol: string;\n\treadonly dataFolderName: string;\n\n\treadonly builtInExtensions?: IBuiltInExtension[];\n\n\treadonly downloadUrl?: string;\n\treadonly updateUrl?: string;\n\treadonly target?: string;\n\n\treadonly settingsSearchBuildId?: number;\n\treadonly settingsSearchUrl?: string;\n\n\treadonly experimentsUrl?: string;\n\n\treadonly extensionsGallery?: {\n\t\treadonly serviceUrl: string;\n\t\treadonly itemUrl: string;\n\t\treadonly controlUrl: string;\n\t\treadonly recommendationsUrl: string;\n\t};\n\n\treadonly extensionTips?: { [id: string]: string; };\n\treadonly extensionImportantTips?: { [id: string]: { name: string; pattern: string; isExtensionPack?: boolean }; };\n\treadonly configBasedExtensionTips?: { [id: string]: IConfigBasedExtensionTip; };\n\treadonly exeBasedExtensionTips?: { [id: string]: IExeBasedExtensionTip; };\n\treadonly remoteExtensionTips?: { [remoteName: string]: IRemoteExtensionTip; };\n\treadonly extensionKeywords?: { [extension: string]: readonly string[]; };\n\treadonly keymapExtensionTips?: readonly string[];\n\n\treadonly crashReporter?: {\n\t\treadonly companyName: string;\n\t\treadonly productName: string;\n\t};\n\n\treadonly enableTelemetry?: boolean;\n\treadonly aiConfig?: {\n\t\treadonly asimovKey: string;\n\t};\n\n\treadonly sendASmile?: {\n\t\treadonly reportIssueUrl: string,\n\t\treadonly requestFeatureUrl: string\n\t};\n\n\treadonly documentationUrl?: string;\n\treadonly releaseNotesUrl?: string;\n\treadonly keyboardShortcutsUrlMac?: string;\n\treadonly keyboardShortcutsUrlLinux?: string;\n\treadonly keyboardShortcutsUrlWin?: string;\n\treadonly introductoryVideosUrl?: string;\n\treadonly tipsAndTricksUrl?: string;\n\treadonly newsletterSignupUrl?: string;\n\treadonly twitterUrl?: string;\n\treadonly requestFeatureUrl?: string;\n\treadonly reportIssueUrl?: string;\n\treadonly licenseUrl?: string;\n\treadonly privacyStatementUrl?: string;\n\treadonly telemetryOptOutUrl?: string;\n\n\treadonly npsSurveyUrl?: string;\n\treadonly surveys?: readonly ISurveyData[];\n\n\treadonly checksums?: { [path: string]: string; };\n\treadonly checksumFailMoreInfoUrl?: string;\n\n\treadonly appCenter?: {\n\t\treadonly 'win32-ia32': string;\n\t\treadonly 'win32-x64': string;\n\t\treadonly 'linux-x64': string;\n\t\treadonly 'darwin': string;\n\t};\n\n\treadonly portable?: string;\n\n\treadonly extensionKind?: { readonly [extensionId: string]: ExtensionKind[]; };\n\treadonly extensionAllowedProposedApi?: readonly string[];\n\n\treadonly msftInternalDomains?: string[];\n\treadonly linkProtectionTrustedDomains?: readonly string[];\n\n\treadonly 'configurationSync.store'?: ConfigurationSyncStore;\n}\n\nexport interface IConfigBasedExtensionTip {\n\tconfigPath: string;\n\tconfigName: string;\n\trecommendations: IStringDictionary<{ name: string, remotes?: string[], important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IExeBasedExtensionTip {\n\tfriendlyName: string;\n\twindowsPath?: string;\n\trecommendations: readonly string[];\n\timportant?: boolean;\n\texeFriendlyName?: string;\n}\n\nexport interface IRemoteExtensionTip {\n\tfriendlyName: string;\n\textensionId: string;\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { values } from 'vs/base/common/map';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n\tdisallowSyncIgnore?: boolean;\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tmachineSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tmachineOverridableSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of values(this.overrideIdentifiers)) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\tdefault: this.defaultOverridesConfigurationNode.properties![overrideIdentifierProperty]?.default\n\t\t\t};\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, values, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { dirname } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\tif (scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema && typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW;\n\t}\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), this.scopes);\n\t\tthis._register(this.fileService.watch(dirname(this.userSettingsResource)));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parseContent(content.value.toString() || '{}');\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treprocess(): ConfigurationModel {\n\t\tthis.parser.parse();\n\t\treturn this.parser.configurationModel;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, values(keys)]));\n\treturn { keys: values(keysSet), overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = values(keysSet);\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationChangeEvent, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { RunOnceScheduler } from 'vs/base/common/async';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\t_serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\t_serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope } from 'vs/platform/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { isUUID, generateUuid } from 'vs/base/common/uuid';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\t_serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tremoveItem(key: string): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { writeFileSync, readFile } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\t_serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\tNONE = 0,\n\tSHUTDOWN = 1\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IWorkspaceStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be converted to a string.\n\t * Storing either undefined or null will remove the entry under the key.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the onWillSaveState to ask\n\t * everyone for latest state.\n\t */\n\tflush(): void;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport interface IWorkspaceStorageChangeEvent {\n\treadonly key: string;\n\treadonly scope: StorageScope;\n}\n\nexport class InMemoryStorageService extends Disposable implements IStorageService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<IWorkspaceStorageChangeEvent>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprotected readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate readonly globalCache = new Map<string, string>();\n\tprivate readonly workspaceCache = new Map<string, string>();\n\n\tprivate getCache(scope: StorageScope): Map<string, string> {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalCache : this.workspaceCache;\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.remove(key, scope);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.getCache(scope).get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// Update in cache\n\t\tthis.getCache(scope).set(key, valueStr);\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tremove(key: string, scope: StorageScope): Promise<void> {\n\t\tconst wasDeleted = this.getCache(scope).delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn Promise.resolve(); // Return early if value already deleted\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tlogStorage(): void {\n\t\tlogStorage(this.globalCache, this.workspaceCache, 'inMemory', 'inMemory');\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n\n\tflush(): void {\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLogError2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from '../common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tisOptedIn: boolean;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\nexport const trueMachineIdKey = 'telemetry.trueMachineId';\nexport const crashReporterIdStorageKey = 'crashReporter.guid';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier, DefaultIconPath } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { values } from 'vs/base/common/map';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.map(value => ({ filterType, value }))\n\t\t];\n\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy }));\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query(assign({}, this.state, { sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query(assign({}, this.state, { assetTypes }));\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w\\.]+))(:(//)?)([\\w\\.@\\:/\\-~]+)(\\.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\t_serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn Promise.resolve(extension);\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None)\n\t\t\t.then(({ galleryExtensions }) => {\n\t\t\t\tconst [rawExtension] = galleryExtensions;\n\t\t\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (version) {\n\t\t\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\t\t\tif (versionAsset) {\n\t\t\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\t\t\treturn extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n\t\t\t\t\t.then(rawVersion => {\n\t\t\t\t\t\tif (rawVersion) {\n\t\t\t\t\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\ttype GalleryServiceQueryClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\ttext: { classification: 'CustomerContent', purpose: 'FeatureInsight' };\n\t\t};\n\t\ttype GalleryServiceQueryEvent = {\n\t\t\ttype: string;\n\t\t\ttext: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\treturn this.queryGallery(query, token).then(({ galleryExtensions, total }) => {\n\t\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\t\tconst pageSize = query.pageSize;\n\t\t\tconst getPage = (pageIndex: number, ct: CancellationToken) => {\n\t\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\t\treturn Promise.reject(canceled());\n\t\t\t\t}\n\n\t\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\t\treturn this.queryGallery(nextPageQuery, ct)\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source)));\n\t\t\t};\n\n\t\t\treturn { firstPage: extensions, total, pageSize, getPage } as IPager<IGalleryExtension>;\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst data = JSON.stringify(query.raw);\n\t\t\tconst headers = assign({}, commonHeaders, {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t\t'Content-Length': data.length\n\t\t\t});\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token).then(context => {\n\n\t\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t}\n\n\t\t\t\treturn asJson<IRawGalleryQueryResult>(context).then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst r = result.results[0];\n\t\t\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\t\t\treturn { galleryExtensions, total };\n\t\t\t\t\t}\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None).then(undefined, () => undefined);\n\t\t});\n\t}\n\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', assign(data, { duration }));\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\treturn this.getAsset(downloadAsset)\n\t\t\t.then(context => this.fileService.writeFile(location, context.stream))\n\t\t\t.then(() => log(new Date().getTime() - startTime));\n\t}\n\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\treturn this.getAsset(extension.assets.readme, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\treturn this.getAsset(extension.assets.manifest, {}, token)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\treturn this.getAsset(asset[1])\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\treturn this.getAsset(extension.assets.changelog, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions }) => {\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tif (compatible) {\n\t\t\t\t\treturn Promise.all(galleryExtensions[0].versions.map(v => this.getEngine(v).then(engine => isEngineValid(engine, this.productService.version) ? v : null)))\n\t\t\t\t\t\t.then(versions => versions\n\t\t\t\t\t\t\t.filter(v => !!v)\n\t\t\t\t\t\t\t.map(v => ({ version: v!.version, date: v!.lastUpdated })));\n\t\t\t\t} else {\n\t\t\t\t\treturn galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated }));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tprivate getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst baseOptions = { type: 'GET' };\n\t\t\tconst headers = assign({}, commonHeaders, options.headers || {});\n\t\t\toptions = assign({}, options, baseOptions, { headers });\n\n\t\t\tconst url = asset.uri;\n\t\t\tconst fallbackUrl = asset.fallbackUri;\n\t\t\tconst firstOptions = assign({}, options, { url });\n\n\t\t\treturn this.requestService.request(firstOptions, token)\n\t\t\t\t.then(context => {\n\t\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\t\treturn Promise.resolve(context);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn asText(context)\n\t\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t\t})\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\t\t\turl: string;\n\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t};\n\t\t\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\t\t\tconst fallbackOptions = assign({}, options, { url: fallbackUrl });\n\t\t\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion> | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn Promise.resolve(version);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn Promise.resolve(engine);\n\t\t}\n\n\t\tconst manifest = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\treturn this.getAsset(manifest, { headers })\n\t\t\t.then(context => asJson<IExtensionManifest>(context))\n\t\t\t.then(manifest => manifest ? manifest.engines.vscode : Promise.reject<string>('Error while reading manifest'));\n\t}\n\n\tprivate getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.getEngine(version)\n\t\t\t.then(engine => {\n\t\t\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\tversion.properties = version.properties || [];\n\t\t\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None).then(context => {\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn Promise.reject(new Error('Could not get extensions report.'));\n\t\t\t}\n\n\t\t\treturn asJson<IRawExtensionsReport>(context).then(result => {\n\t\t\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const id of result.malicious) {\n\t\t\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\t\t\text.malicious = true;\n\t\t\t\t\t\tmap.set(id, ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(values(map));\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\theaders['X-Market-User-Id'] = uuid;\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n\ttrueMachineId?: string;\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\t_serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\tprivate _sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\t\tthis._sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\n\t\t\t\tif (config.trueMachineId) {\n\t\t\t\t\ttype MachineIdDisambiguationClassification = {\n\t\t\t\t\t\tcorrectedMachineId: { endPoint: 'MacAddressHash', classification: 'EndUserPseudonymizedInformation', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\tthis.publicLog2<{ correctedMachineId: string }, MachineIdDisambiguationClassification>('machineIdDisambiguation', { correctedMachineId: config.trueMachineId });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this._sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this.publicLog(errorEventName, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\t_serviceBrand: undefined;\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promise.all(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData: { [key: string]: any } = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\t// Whitelisted remote authorities\n\t['ssh-remote', 'dev-container', 'attached-container', 'wsl'].forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t\t@ILogService private _logService?: ILogService\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tif (this._logService) {\n\t\t\tthis._logService.trace(`telemetry/${eventName}`, data);\n\t\t}\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport async function resolveCommonProperties(\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\ttry {\n\t\tconst contents = await readFile(installSourcePath, 'utf8');\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tif (!process || !process.env || !process.env['USERDNSDOMAIN']) {\n\t\treturn false;\n\t}\n\n\tconst domain = process.env['USERDNSDOMAIN']!.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}","import { ReadWriteConnection } from '@coder/node-browser';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const INodeProxyService = createDecorator<INodeProxyService>('nodeProxyService');\n\nexport interface INodeProxyService extends ReadWriteConnection {\n\t_serviceBrand: any;\n\tsend(message: string): void;\n\tonMessage: Event<string>;\n\tonUp: Event<void>;\n\tonClose: Event<void>;\n\tonDown: Event<void>;\n}\n\nexport class NodeProxyChannel implements IServerChannel {\n\tconstructor(private service: INodeProxyService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onMessage': return this.service.onMessage;\n\t\t}\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'send': return this.service.send(args[0]);\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class NodeProxyChannelClient {\n\t_serviceBrand: any;\n\n\tpublic readonly onMessage: Event<string>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.onMessage = this.channel.listen<string>('onMessage');\n\t}\n\n\tpublic send(data: string): void {\n\t\tthis.channel.call('send', [data]);\n\t}\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'publicLogError': return this.service.publicLogError(args[0], args[1]);\n\t\t\tcase 'publicLogError2': return this.service.publicLogError2(args[0], args[1]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLogError(errorEventName: string, data?: ITelemetryData): Promise<void> {\n\t\treturn this.channel.call('publicLogError', [errorEventName, data]);\n\t}\n\n\tpublic publicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void> {\n\t\treturn this.channel.call('publicLogError2', [eventName, data]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic get isOptedIn(): boolean {\n\t\treturn true;\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(getPathFromAmdModule(require, ''), 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import * as cp from 'child_process';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tpublic constructor(protected protocol: Protocol, public readonly token: string) {}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(socket, buffer);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(socket: ISocket, buffer: VSBuffer): void;\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protected protocol: Protocol, token: string) {\n\t\tsuper(protocol, token);\n\t\tprotocol.onClose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tthis.protocol.getSocket().end();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis.protocol.beginAcceptReconnection(socket, buffer);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\n\tpublic constructor(\n\t\tlocale:string, protocol: Protocol, buffer: VSBuffer, token: string,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t) {\n\t\tsuper(protocol, token);\n\t\tthis.protocol.dispose();\n\t\tthis.spawn(locale, buffer).then((p) => this.process = p);\n\t\tthis.protocol.getUnderlyingSocket().pause();\n\t}\n\n\tprotected doDispose(): void {\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t\tthis.protocol.getSocket().end();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\t// This is just to set the new socket.\n\t\tthis.protocol.beginAcceptReconnection(socket, null);\n\t\tthis.protocol.dispose();\n\t\tthis.sendInitMessage(buffer);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer): void {\n\t\tconst socket = this.protocol.getUnderlyingSocket();\n\t\tsocket.pause();\n\t\tthis.process!.send({ // Process must be set at this point.\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (buffer.buffer as Buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.getSocket() instanceof NodeSocket,\n\t\t}, socket);\n\t}\n\n\tprivate async spawn(locale: string, buffer: VSBuffer): Promise<cp.ChildProcess> {\n\t\tconst config = await getNlsConfiguration(locale, this.environment.userDataPath);\n\t\tconst proc = cp.fork(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t[ '--type=extensionHost' ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: process.env.LOG_LEVEL,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', () => this.dispose());\n\t\tproc.on('exit', () => this.dispose());\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.log.info('Extension host stdout', d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.log.error('Extension host stderr', d));\n\t\t}\n\t\tproc.on('message', (event) => {\n\t\t\tif (event && event.type === '__$console') {\n\t\t\t\tconst severity = (<any>this.log)[event.severity] ? event.severity : 'info';\n\t\t\t\t(<any>this.log)[severity]('Extension host', event.arguments);\n\t\t\t}\n\t\t\tif (event && event.type === 'VSCODE_EXTHOST_DISCONNECTED') {\n\t\t\t\tthis.setOffline();\n\t\t\t}\n\t\t});\n\n\t\tconst listen = (message: IExtHostReadyMessage) => {\n\t\t\tif (message.type === 'VSCODE_EXTHOST_IPC_READY') {\n\t\t\t\tproc.removeListener('message', listen);\n\t\t\t\tthis.sendInitMessage(buffer);\n\t\t\t}\n\t\t};\n\n\t\treturn proc.on('message', listen);\n\t}\n}\n","import * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport interface SocketOptions {\n\treadonly reconnectionToken: string;\n\treadonly reconnection: boolean;\n\treadonly skipWebSocketFrames: boolean;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(new NodeSocket(socket)),\n\t\t);\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst message = JSON.parse(rawMessage.toString());\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth': return this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\thandler.dispose();\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault: throw new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler.dispose();\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_message: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host, it just sends\n\t * back a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n}\n","import { URITransformer } from 'vs/base/common/uriIpc';\n\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\treturn new URITransformer(remoteAuthority);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split(\"/\").map((p) => encodeURIComponent(p)).join(\"/\");\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn pfs.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = json.parse(manifestContents.toString(), errors);\n\t\t\tif (errors.length === 0 && json.getNodeType(manifest) === 'object') {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = pfs.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.fileExists(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn pfs.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tpfs.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.fileExists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tlet normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\n\t\t\t\tif (normalizedAbsolutePath.indexOf(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly tanslations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.tanslations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.tanslations, b.tanslations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await pfs.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.fileExists(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { Server } from '@coder/node-browser';\nimport * as path from 'path';\nimport { VSBuffer, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { OS } from 'vs/base/common/platform';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { createReadStream } from 'vs/platform/files/common/io';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INodeProxyService } from 'vs/server/common/nodeProxy';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tlet fileStream: VSBufferReadableStream | undefined;\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tif (!fileStream) {\n\t\t\t\t\tfileStream = createReadStream(this.provider, this.transform(resource), {\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tbufferSize: 64 * 1024, // From DiskFileSystemProvider\n\t\t\t\t\t});\n\t\t\t\t\tfileStream.on('data', (data) => emitter.fire(data));\n\t\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t\t}\n\t\t\t},\n\t\t\tonLastListenerRemove: () => fileStream && fileStream.destroy(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(locale: string): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tappSettingsHome: this.environment.appSettingsHome,\n\t\t\tsettingsPath: this.environment.machineSettingsResource,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: URI.file(this.environment.globalStorageHome),\n\t\t\tuserHome: this.environment.userHome,\n\t\t\textensions: await this.scanExtensions(locale),\n\t\t\tos: OS,\n\t\t};\n\t}\n\n\tprivate async scanExtensions(locale: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(locale, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlocale,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, extension);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n}\n\nexport class NodeProxyService implements INodeProxyService {\n\tpublic _serviceBrand = undefined;\n\n\tpublic readonly server: Server;\n\n\tprivate readonly _onMessage = new Emitter<string>();\n\tpublic readonly onMessage = this._onMessage.event;\n\tprivate readonly _$onMessage = new Emitter<string>();\n\tpublic readonly $onMessage = this._$onMessage.event;\n\tpublic readonly _onDown = new Emitter<void>();\n\tpublic readonly onDown = this._onDown.event;\n\tpublic readonly _onUp = new Emitter<void>();\n\tpublic readonly onUp = this._onUp.event;\n\n\t// Unused because the server connection will never permanently close.\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\n\tpublic constructor() {\n\t\t// TODO: down/up\n\t\tthis.server = new Server({\n\t\t\tonMessage: this.$onMessage,\n\t\t\tonClose: this.onClose,\n\t\t\tonDown: this.onDown,\n\t\t\tonUp: this.onUp,\n\t\t\tsend: (message: string): void => {\n\t\t\t\tthis._onMessage.fire(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic send(message: string): void {\n\t\tthis._$onMessage.fire(message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\tprivate readonly channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities!: FileSystemProviderCapabilities;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper();\n\n\t\tconst connection = remoteAgentService.getConnection()!;\n\t\tthis.channel = connection.getChannel<IChannel>(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\tthis.setCaseSensitive(true);\n\t\tremoteAgentService.getEnvironment().then(remoteAgentEnvironment => this.setCaseSensitive(!!(remoteAgentEnvironment && remoteAgentEnvironment.os === OperatingSystem.Linux)));\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(error);\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\tif (token) {\n\t\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t\t// Ensure to end the stream properly with an error\n\t\t\t\t// to indicate the cancellation.\n\t\t\t\tstream.end(canceled());\n\n\t\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t\t// reading the file.\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistenConnectionEvent as PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\t_serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\tgetEnvironment(bail?: boolean): Promise<IRemoteAgentEnvironment | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(zipfile);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(stream);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { flatten, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { extract, ExtractError, zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, groupByExtension, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localizeManifest } from '../common/extensionNls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { Limiter, createCancelablePromise, CancelablePromise, Queue } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'semver-umd';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst ERROR_UNKNOWN = 'unknown';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nfunction parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\treturn new Promise((c, e) => {\n\t\ttry {\n\t\t\tconst manifest = JSON.parse(raw);\n\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\tdelete manifest.__metadata;\n\t\t\tc({ manifest, metadata });\n\t\t} catch (err) {\n\t\t\te(new Error(nls.localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t}\n\t});\n}\n\nfunction readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\tconst promises = [\n\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t.then(raw => parseManifest(raw)),\n\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t.then(raw => JSON.parse(raw))\n\t];\n\n\treturn Promise.all(promises).then(([{ manifest, metadata }, translations]) => {\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t});\n}\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata: IGalleryMetadata | null;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\t_serviceBrand: undefined;\n\n\tprivate systemExtensionsPath: string;\n\tprivate extensionsPath: string;\n\tprivate uninstalledPath: string;\n\tprivate uninstalledFileLimiter: Queue<any>;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions: Map<string, CancelablePromise<ILocalExtension>> = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\tprivate readonly extensionLifecycle: ExtensionsLifecycle;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath!;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\t\tthis.extensionLifecycle = this._register(new ExtensionsLifecycle(environmentService, this.logService));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\treturn this.collectFiles(extension)\n\t\t\t.then(files => zip(path.join(tmpdir(), generateUuid()), files))\n\t\t\t.then<URI>(path => URI.file(path));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\treturn this.install(zipLocation, type).then(local => local.identifier);\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn collectFilesFromDirectory(extension.location.fsPath)\n\t\t\t.then(files => files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f })));\n\n\t}\n\n\tinstall(vsix: URI, type: ExtensionType = ExtensionType.User): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(token => {\n\t\t\treturn this.downloadVsix(vsix).then(downloadLocation => {\n\t\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t.then(manifest => {\n\t\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\t\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\t\t\t\treturn Promise.reject(new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version)));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t\t\t\t\t.then(installedExtensions => {\n\t\t\t\t\t\t\t\tconst existing = installedExtensions.filter(i => areSameExtensions(identifier, i.identifier))[0];\n\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\t\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\t\t\t\t\t\treturn this.uninstall(existing, true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t\t\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\t\t\t\t\t\treturn this.unsetUninstalledAndGetLocal(identifierWithVersion)\n\t\t\t\t\t\t\t\t\t\t.then(existing => {\n\t\t\t\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\t\t\t\t\t\t\t\treturn this.getMetadata(getGalleryExtensionId(manifest.publisher, manifest.name))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tmetadata => this.installFromZipPath(identifierWithVersion, zipPath, metadata, type, operation, token),\n\t\t\t\t\t\t\t\t\t\t() => this.installFromZipPath(identifierWithVersion, zipPath, null, type, operation, token))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tlocal => { this.logService.info('Successfully installed the extension:', identifier.id); return local; },\n\t\t\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn Promise.resolve(vsix);\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\t\tconst downloadedLocation = path.join(tmpdir(), generateUuid());\n\t\treturn this.downloadService.download(vsix, URI.file(downloadedLocation)).then(() => URI.file(downloadedLocation));\n\t}\n\n\tprivate installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IGalleryMetadata | null, type: ExtensionType, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.toNonCancellablePromise(this.installExtension({ zipPath, identifierWithVersion, metadata }, type, token)\n\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, null)\n\t\t\t\t.then(\n\t\t\t\t\t() => local,\n\t\t\t\t\terror => {\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}))\n\t\t\t.then(\n\t\t\t\tlocal => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, local, operation }); return local; },\n\t\t\t\terror => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, operation, error }); return Promise.reject(error); }\n\t\t\t));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\tconst startTime = new Date().getTime();\n\n\t\tconst onDidInstallExtensionSuccess = (extension: IGalleryExtension, operation: InstallOperation, local: ILocalExtension) => {\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t};\n\n\t\tconst onDidInstallExtensionFailure = (extension: IGalleryExtension, operation: InstallOperation, error: Error) => {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tonDidInstallExtensionFailure(extension, InstallOperation.Install, error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\n\t\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tlet cancellationToken: CancellationToken, successCallback: (local: ILocalExtension) => void, errorCallback: (e?: any) => any | null;\n\t\t\tcancellablePromise = createCancelablePromise(token => { cancellationToken = token; return new Promise((c, e) => { successCallback = c; errorCallback = e; }); });\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\ttry {\n\t\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\t\tconst existingExtension = installed.filter(i => areSameExtensions(i.identifier, extension.identifier))[0];\n\t\t\t\tif (existingExtension) {\n\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t}\n\n\t\t\t\tthis.downloadInstallableExtension(extension, operation)\n\t\t\t\t\t.then(installableExtension => this.installExtension(installableExtension, ExtensionType.User, cancellationToken)\n\t\t\t\t\t\t.then(local => this.extensionsDownloader.delete(URI.file(installableExtension.zipPath)).finally(() => { }).then(() => local)))\n\t\t\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, existingExtension)\n\t\t\t\t\t\t.then(() => local, error => this.uninstall(local, true).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t\t\t.then(\n\t\t\t\t\t\tasync local => {\n\t\t\t\t\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\t\t\t\t\tawait this.setUninstalled(existingExtension);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionSuccess(extension, operation, local);\n\t\t\t\t\t\t\tsuccessCallback(local);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t});\n\n\t\t\t} catch (error) {\n\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS));\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\n\t\tif (!compatibleExtension) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE));\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\treturn this.findGalleryExtension(extension)\n\t\t\t.then(galleryExtension => {\n\t\t\t\tif (galleryExtension) {\n\t\t\t\t\treturn this.setUninstalled(extension)\n\t\t\t\t\t\t.then(() => this.removeUninstalledExtension(extension)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t() => this.installFromGallery(galleryExtension).then(),\n\t\t\t\t\t\t\t\te => Promise.reject(new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e))))));\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\")));\n\t\t\t});\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.getExtensionsReport()\n\t\t\t.then(report => getMaliciousExtensionsSet(report).has(extension.identifier.id));\n\t}\n\n\tprivate downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<InstallableExtension> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\treturn this.extensionsDownloader.downloadExtension(extension, operation)\n\t\t\t.then(\n\t\t\t\tzip => {\n\t\t\t\t\tconst zipPath = zip.fsPath;\n\t\t\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tmanifest => (<InstallableExtension>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata }),\n\t\t\t\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING))\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING)));\n\t}\n\n\tprivate installExtension(installableExtension: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion)\n\t\t\t.then(\n\t\t\t\tlocal => {\n\t\t\t\t\tif (local) {\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.extractAndInstall(installableExtension, type, token);\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t});\n\t}\n\n\tprivate unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\treturn this.isUninstalled(identifierWithVersion)\n\t\t\t.then<ILocalExtension | null>(isUninstalled => {\n\t\t\t\tif (isUninstalled) {\n\t\t\t\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\t\t\t\treturn this.unsetUninstalled(identifierWithVersion)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(installed => installed.filter(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion))[0]);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tconst location = type === ExtensionType.User ? this.extensionsPath : this.systemExtensionsPath;\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(location, `.${folderName}`);\n\t\tconst extensionPath = path.join(location, folderName);\n\t\treturn pfs.rimraf(extensionPath)\n\t\t\t.then(() => this.extractAndRename(identifier, zipPath, tempPath, extensionPath, token), e => Promise.reject(new ExtensionManagementError(nls.localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifier.id), INSTALL_ERROR_DELETING)))\n\t\t\t.then(() => this.scanExtension(folderName, location, type))\n\t\t\t.then(local => {\n\t\t\t\tif (!local) {\n\t\t\t\t\treturn Promise.reject(nls.localize('cannot read', \"Cannot read the extension from {0}\", location));\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Installation completed.', identifier.id);\n\t\t\t\tif (metadata) {\n\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\treturn this.saveMetadataForLocalExtension(local);\n\t\t\t\t}\n\t\t\t\treturn local;\n\t\t\t}, error => pfs.rimraf(extensionPath).then(() => Promise.reject(error), () => Promise.reject(error)));\n\t}\n\n\tprivate extractAndRename(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, renamePath: string, token: CancellationToken): Promise<void> {\n\t\treturn this.extract(identifier, zipPath, extractPath, token)\n\t\t\t.then(() => this.rename(identifier, extractPath, renamePath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */)\n\t\t\t\t.then(\n\t\t\t\t\t() => this.logService.info('Renamed to', renamePath),\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', extractPath);\n\t\t\t\t\t\treturn pfs.rimraf(extractPath).finally(() => { }).then(() => Promise.reject(e));\n\t\t\t\t\t}));\n\t}\n\n\tprivate extract(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${extractPath}`);\n\t\treturn pfs.rimraf(extractPath)\n\t\t\t.then(\n\t\t\t\t() => extract(zipPath, extractPath, { sourcePath: 'extension', overwrite: true }, token)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t() => this.logService.info(`Extracted extension to ${extractPath}:`, identifier.id),\n\t\t\t\t\t\te => pfs.rimraf(extractPath).finally(() => { })\n\t\t\t\t\t\t\t.then(() => Promise.reject(new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING)))),\n\t\t\t\te => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING)));\n\t}\n\n\tprivate rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\treturn pfs.rename(extractPath, renamePath)\n\t\t\t.then(undefined, error => {\n\t\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new ExtensionManagementError(error.message || nls.localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING));\n\t\t\t});\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | null): Promise<void> {\n\t\tif (this.galleryService.isEnabled()) {\n\t\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\t\tif (installed.manifest.extensionPack) {\n\t\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\treturn this.getInstalled()\n\t\t\t\t\t.then(installed => {\n\t\t\t\t\t\t// filter out installed extensions\n\t\t\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\t\t\tif (names.length) {\n\t\t\t\t\t\t\treturn this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None)\n\t\t\t\t\t\t\t\t.then(galleryResult => {\n\t\t\t\t\t\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\t\t\t\t\t\treturn Promise.all(extensionsToInstall.map(e => this.installFromGallery(e)))\n\t\t\t\t\t\t\t\t\t\t.then(undefined, errors => this.rollback(extensionsToInstall).then(() => Promise.reject(errors), () => Promise.reject(errors)));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed =>\n\t\t\t\tPromise.all(installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))) // Check with version because we want to rollback the exact version\n\t\t\t\t\t.map(local => this.uninstall(local, true))))\n\t\t\t.then(() => undefined, () => undefined);\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.toNonCancellablePromise(this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => {\n\t\t\t\tconst extensionToUninstall = installed.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\t\tif (extensionToUninstall) {\n\t\t\t\t\treturn this.checkForDependenciesAndUninstall(extensionToUninstall, installed).then(undefined, error => Promise.reject(this.joinErrors(error)));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name)));\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal.metadata = metadata;\n\t\treturn this.saveMetadataForLocalExtension(local)\n\t\t\t.then(localExtension => {\n\t\t\t\tthis.manifestCache.invalidate();\n\t\t\t\treturn localExtension;\n\t\t\t});\n\t}\n\n\tprivate saveMetadataForLocalExtension(local: ILocalExtension): Promise<ILocalExtension> {\n\t\tif (!local.metadata) {\n\t\t\treturn Promise.resolve(local);\n\t\t}\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\treturn pfs.readFile(manifestPath, 'utf8')\n\t\t\t.then(raw => parseManifest(raw))\n\t\t\t.then(({ manifest }) => assign(manifest, { __metadata: local.metadata }))\n\t\t\t.then(manifest => pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t')))\n\t\t\t.then(() => local);\n\t}\n\n\tprivate getMetadata(extensionName: string): Promise<IGalleryMetadata | null> {\n\t\treturn this.findGalleryExtensionByName(extensionName)\n\t\t\t.then(galleryExtension => galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : null);\n\t}\n\n\tprivate findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\treturn this.findGalleryExtensionById(local.identifier.uuid)\n\t\t\t\t.then(galleryExtension => galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id));\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tif (packedExtensions.length) {\n\t\t\t\t\treturn this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t\t}\n\t\t\t\treturn this.uninstallExtensions(extension, [], installed);\n\t\t\t})\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extension !== dependent && otherExtensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, remainingDependents)));\n\t\t\t}\n\t\t}\n\t\treturn Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]).then(() => undefined);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate doUninstall(extension: ILocalExtension): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => this.uninstallExtension(extension))\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(pfs.exists(extension.location.fsPath))\n\t\t\t.then(exists => exists ? null : Promise.reject(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => {\n\t\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\t});\n\t}\n\n\tprivate uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(token => this.scanUserExtensions(false)\n\t\t\t\t.then(userExtensions => this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier))))\n\t\t\t\t.then(() => { this.uninstallingExtensions.delete(local.identifier.id); }));\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\treturn Promise.all<ILocalExtension[]>(promises).then(flatten, errors => Promise.reject(this.joinErrors(errors)));\n\t}\n\n\tprivate scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = Promise.all([\n\t\t\tthis.scanExtensions(this.systemExtensionsPath, ExtensionType.System),\n\t\t\t...this.environmentService.extraBuiltinExtensionPaths\n\t\t\t\t.map((path) => this.scanExtensions(path, ExtensionType.System))\n\t\t]).then((results) => {\n\t\t\tconst result = results.reduce((flat, current) => flat.concat(current), []);\n\t\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\t\treturn result;\n\t\t});\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.getDevSystemExtensionsList()\n\t\t\t.then(devSystemExtensionsList => {\n\t\t\t\tif (devSystemExtensionsList.length) {\n\t\t\t\t\treturn this.scanExtensions(this.devSystemExtensionsPath, ExtensionType.System)\n\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\t\t\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t});\n\t\treturn Promise.all([systemExtensionsPromise, devSystemExtensionsPromise])\n\t\t\t.then(([systemExtensions, devSystemExtensions]) => [...systemExtensions, ...devSystemExtensions]);\n\t}\n\n\tprivate scanAllUserExtensions(folderName: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\treturn Promise.all([\n\t\t\tthis.scanExtensions(folderName, type),\n\t\t\t...this.environmentService.extraExtensionPaths.map((p) => this.scanExtensions(p, ExtensionType.User))\n\t\t]).then((results) => results.reduce((flat, current) => flat.concat(current), []));\n\t}\n\n\tprivate scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\treturn Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User)])\n\t\t\t.then(([uninstalled, extensions]) => {\n\t\t\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\t\t\tif (excludeOutdated) {\n\t\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t\t\t}\n\t\t\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\t\t\treturn extensions;\n\t\t\t});\n\t}\n\n\tprivate scanExtensions(root: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\treturn pfs.readdir(root)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn <string[]>[];\n\t\t\t})\n\t\t\t.then(extensionsFolders => Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, root, type)))))\n\t\t\t.then(extensions => extensions.filter(e => e && e.identifier));\n\t}\n\n\tprivate scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\treturn pfs.readdir(extensionPath)\n\t\t\t.then(children => readManifest(extensionPath)\n\t\t\t\t.then(({ manifest, metadata }) => {\n\t\t\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : null;\n\t\t\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : null;\n\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, metadata, location: URI.file(extensionPath), readmeUrl, changelogUrl };\n\t\t\t\t\tif (metadata) {\n\t\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\t}\n\t\t\t\t\treturn local;\n\t\t\t\t}))\n\t\t\t.then(undefined, () => null);\n\t}\n\n\tprivate setMetadata(local: ILocalExtension, metadata: IGalleryMetadata): void {\n\t\tlocal.metadata = metadata;\n\t\tlocal.identifier.uuid = metadata.id;\n\t}\n\n\tasync removeDeprecatedExtensions(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promise.all(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.extensionLifecycle.postUninstall(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promise.all(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate removeOutdatedExtensions(): Promise<void> {\n\t\treturn this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User) // All user extensions\n\t\t\t.then(extensions => {\n\t\t\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t\t\t// Outdated extensions\n\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\t\t\treturn Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t\t\t}).then(() => undefined);\n\t}\n\n\tprivate removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn this.removeExtension(extension, 'uninstalled')\n\t\t\t.then(() => this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]))\n\t\t\t.then(() => undefined);\n\t}\n\n\tprivate removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\treturn pfs.rimraf(extension.location.fsPath).then(() => this.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath));\n\t}\n\n\tprivate isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\treturn this.filterUninstalled(identifier).then(uninstalled => uninstalled.length === 1);\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.withUninstalledExtensions(uninstalled => assign(uninstalled, ids.reduce((result, id) => { result[id.key()] = true; return result; }, {} as { [id: string]: boolean })));\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tprivate getUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tprivate async withUninstalledExtensions<T>(fn: (uninstalled: { [id: string]: boolean; }) => T): Promise<T> {\n\t\treturn await this.uninstalledFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.uninstalledPath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [id: string]: boolean }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(uninstalled => { result = fn(uninstalled); return uninstalled; })\n\t\t\t\t.then(uninstalled => {\n\t\t\t\t\tif (Object.keys(uninstalled).length === 0) {\n\t\t\t\t\t\treturn pfs.rimraf(this.uninstalledPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst raw = JSON.stringify(uninstalled);\n\t\t\t\t\t\treturn pfs.writeFile(this.uninstalledPath, raw);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => result);\n\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate updateReportCache(): Promise<IReportedExtension[]> {\n\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\n\t\treturn this.galleryService.getExtensionsReport()\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\t\treturn result;\n\t\t\t}, err => {\n\t\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate getDevSystemExtensionsList(): Promise<string[]> {\n\t\treturn Promise.resolve(product.builtInExtensions ? product.builtInExtensions.map(e => e.name) : []);\n\t}\n\n\tprivate toNonCancellablePromise<T>(promise: Promise<T>): Promise<T> {\n\t\treturn new Promise((c, e) => promise.then(result => c(result), error => e(error)));\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLogError(eventName, assign(extensionData, { success: !error, duration, errorcode }));\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\treturn mkdirp(targetFileName).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\tawait mkdirp(targetDirName, undefined);\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\t_serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request(assign({}, options, {\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}), token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStream<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ParsedArgs } from 'vs/platform/environment/node/argv';\nimport { EnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension } from 'vs/platform/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-dotnettools.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\n\nexport class Main {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tasync run(argv: ParsedArgs): Promise<void> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions'], argv['category']);\n\t\t} else if (argv['install-extension']) {\n\t\t\tawait this.installExtensions(argv['install-extension'], !!argv['force']);\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tawait this.uninstallExtension(argv['uninstall-extension']);\n\t\t} else if (argv['locate-extension']) {\n\t\t\tawait this.locateExtension(argv['locate-extension']);\n\t\t} else if (argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(this.environmentService.appRoot, this.environmentService.extensionsPath ? this.environmentService.extensionsPath : undefined));\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<void> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean, category?: string): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t// TODO: we should save this array in a common place so that the command and extensionQuery can use it that way changing it is easier\n\t\tconst categories = ['\"programming languages\"', 'snippets', 'linters', 'themes', 'debuggers', 'formatters', 'keymaps', '\"scm providers\"', 'other', '\"extension packs\"', '\"language packs\"'];\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\tconsole.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\tconsole.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tconsole.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tprivate async installExtensions(extensions: string[], force: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\tconsole.log(localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tfor (const extension of extensions) {\n\t\t\ttry {\n\t\t\t\tconst manifest = await this.installExtension(extension, force);\n\t\t\t\tif (manifest) {\n\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\tfailed.push(extension);\n\t\t\t}\n\t\t}\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t\treturn failed.length ? Promise.reject(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', '))) : Promise.resolve();\n\t}\n\n\tprivate async installExtension(extension: string, force: boolean): Promise<IExtensionManifest | null> {\n\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\textension = path.isAbsolute(extension) ? extension : path.join(process.cwd(), extension);\n\n\t\t\tconst manifest = await getManifest(extension);\n\t\t\tconst valid = await this.validate(manifest, force);\n\n\t\t\tif (valid) {\n\t\t\t\treturn this.extensionManagementService.install(URI.file(extension)).then(id => {\n\t\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(extension)));\n\t\t\t\t\treturn manifest;\n\t\t\t\t}, error => {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(extension)));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [id, version] = getIdAndVersion(extension);\n\t\treturn this.extensionManagementService.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => this.extensionGalleryService.getCompatibleExtension({ id }, version)\n\t\t\t\t.then<IGalleryExtension>(null, err => {\n\t\t\t\t\tif (err.responseText) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = JSON.parse(err.responseText);\n\t\t\t\t\t\t\treturn Promise.reject(response.message);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// noop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t})\n\t\t\t\t.then(async extension => {\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn Promise.reject(new Error(`${notFound(version ? `${id}@${version}` : id)}\\n${useId}`));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(extension, CancellationToken.None);\n\t\t\t\t\tconst [installedExtension] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\t\tif (installedExtension) {\n\t\t\t\t\t\tif (extension.version === installedExtension.manifest.version) {\n\t\t\t\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version && !force) {\n\t\t\t\t\t\t\tconsole.log(localize('forceUpdate', \"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.\", id, installedExtension.manifest.version, extension.version));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, extension.version));\n\t\t\t\t\t}\n\t\t\t\t\tawait this.installFromGallery(id, extension);\n\t\t\t\t\treturn manifest;\n\t\t\t\t}));\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.find(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version));\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async installFromGallery(id: string, extension: IGalleryExtension): Promise<void> {\n\t\tconsole.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, extension.version));\n\n\t\ttry {\n\t\t\tawait this.extensionManagementService.installFromGallery(extension);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, extension.version));\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async uninstallExtension(extensions: string[]): Promise<void> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst [extensionToUninstall] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\treturn Promise.reject(new Error(`${notInstalled(id)}\\n${useId}`));\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall, true);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async locateExtension(extensions: string[]): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\tconsole.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function main(argv: ParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\tconst disposables = new DisposableStore();\n\n\tconst environmentService = new EnvironmentService(argv, process.execPath);\n\tconst logService: ILogService = new SpdLogService('cli', environmentService.logsPath, getLogLevel(environmentService));\n\tprocess.once('exit', () => logService.dispose());\n\tlogService.info('main', argv);\n\n\tawait Promise.all<void | undefined>([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath]\n\t\t.map((path): undefined | Promise<void> => path ? mkdirp(path) : undefined));\n\n\t// Files\n\tconst fileService = new FileService(logService);\n\tdisposables.add(fileService);\n\tservices.set(IFileService, fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\tdisposables.add(diskFileSystemProvider);\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\tdisposables.add(configurationService);\n\tawait configurationService.initialize();\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, configurationService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = environmentService;\n\n\t\tconst services = new ServiceCollection();\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (isBuilt && !extensionDevelopmentLocationURI && !environmentService.disableTelemetry && product.enableTelemetry) {\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey, logService));\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tsendErrorTelemetry: false,\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, product.version, stateService.getItem('telemetry.machineId'), product.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: extensionsPath ? [appRoot, extensionsPath] : [appRoot]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\tconst main = instantiationService2.createInstance(Main);\n\n\t\ttry {\n\t\t\tawait main.run(argv);\n\t\t\t// Flush the remaining data in AI adapter.\n\t\t\tawait combinedAppender(...appenders).flush();\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t});\n}\n","import * as net from 'net';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, IPCServer, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createChannelReceiver } from 'vs/base/parts/ipc/node/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from \"vs/code/node/cliProcessMain\";\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ParsedArgs } from 'vs/platform/environment/node/argv';\nimport { EnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { getLogLevel, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel } from 'vs/platform/log/common/logIpc';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryServiceConfig, TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, LogAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { INodeProxyService, NodeProxyChannel } from 'vs/server/common/nodeProxy';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/server/ipc';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, NodeProxyService } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from \"vs/workbench/services/remote/common/remoteAgentFileSystemChannel\";\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: ParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as INativeEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\tconst parseUrl = (url: string): URI => {\n\t\t\t// This might be a fully-specified URL or just a path.\n\t\t\ttry {\n\t\t\t\treturn URI.parse(url, true);\n\t\t\t} catch (error) {\n\t\t\t\treturn URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\t\tauthority: options.remoteAuthority,\n\t\t\t\t\tpath: url,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t\tworkspaceProvider: {\n\t\t\t\t\tpayload: [[\"userDataPath\", environment.userDataPath]],\n\t\t\t\t},\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit: product.commit || 'development',\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.sendMessage({ type: 'error', reason: error.message });\n\t\t\tprotocol.dispose();\n\t\t\tprotocol.getSocket().dispose();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst ok = async () => {\n\t\t\t\t\treturn message.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t\t? { debugPort: await this.getDebugPort() }\n\t\t\t\t\t\t: { type: 'ok' };\n\t\t\t\t};\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tif (protocol.options.reconnection && connections.has(token)) {\n\t\t\t\t\tprotocol.sendMessage(await ok());\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tprotocol.dispose();\n\t\t\t\t\treturn connections.get(token)!.reconnect(protocol.getSocket(), buffer);\n\t\t\t\t} else if (protocol.options.reconnection || connections.has(token)) {\n\t\t\t\t\tthrow new Error(protocol.options.reconnection\n\t\t\t\t\t\t? 'Unrecognized reconnection token'\n\t\t\t\t\t\t: 'Duplicate reconnection token'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendMessage(await ok());\n\n\t\t\t\tlet connection: Connection;\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\tconnection = new ManagementConnection(protocol, token);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol, onDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t\t// TODO: Need a way to match clients with a connection. For now\n\t\t\t\t\t// dispose everything which only works because no extensions currently\n\t\t\t\t\t// utilize long-running proxies.\n\t\t\t\t\t(this.services.get(INodeProxyService) as NodeProxyService)._onUp.fire();\n\t\t\t\t\tconnection.onClose(() => (this.services.get(INodeProxyService) as NodeProxyService)._onDown.fire());\n\t\t\t\t} else {\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tmessage.args ? message.args.language : 'en',\n\t\t\t\t\t\tprotocol, buffer, token,\n\t\t\t\t\t\tthis.services.get(ILogService) as ILogService,\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as INativeEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => connections.delete(token));\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel: return protocol.tunnel();\n\t\t\tdefault: throw new Error('Unrecognized connection type');\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\toffline[i].dispose();\n\t\t}\n\t}\n\n\tprivate async initializeServices(args: ParsedArgs): Promise<void> {\n\t\tconst environmentService = new EnvironmentService(args, process.execPath);\n\t\tconst logService = new SpdLogService(RemoteExtensionLogFileName, environmentService.logsPath, getLogLevel(environmentService));\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LoggerChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\t\tthis.services.set(IConfigurationService, new SyncDescriptor(ConfigurationService, [environmentService.machineSettingsResource, fileService]));\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, { _serviceBrand: undefined, ...product });\n\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\n\t\tif (!environmentService.args['disable-telemetry']) {\n\t\t\tthis.services.set(ITelemetryService, new SyncDescriptor(TelemetryService, [{\n\t\t\t\tappender: combinedAppender(\n\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any, logService),\n\t\t\t\t\tnew LogAppender(logService),\n\t\t\t\t),\n\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\tproduct.commit, product.version, await getMachineId(),\n\t\t\t\t\t[], environmentService.installSourcePath, 'code-server',\n\t\t\t\t),\n\t\t\t\tpiiPaths,\n\t\t\t} as ITelemetryServiceConfig]));\n\t\t} else {\n\t\t\tthis.services.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\t\t\tthis.services.set(ILocalizationsService, instantiationService.createInstance(LocalizationsService));\n\t\t\tthis.services.set(INodeProxyService, instantiationService.createInstance(NodeProxyService));\n\n\t\t\tinstantiationService.invokeFunction(() => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\t\t\t\tconst telemetryService = this.services.get(ITelemetryService) as ITelemetryService;\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\tthis.services.get(IExtensionManagementService) as IExtensionManagementService,\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(this.services.get(IRequestService) as IRequestService));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('nodeProxy', new NodeProxyChannel(this.services.get(INodeProxyService) as INodeProxyService));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>createChannelReceiver(this.services.get(ILocalizationsService) as ILocalizationsService));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tprivate async getDebugPort(): Promise<number | undefined> {\n\t\treturn undefined;\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { CodeServerMessage, VscodeMessage } from 'vs/server/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\n\nsetUnexpectedErrorHandler((error) => logger.warn(error instanceof Error ? error.message : error));\nenableCustomMarketplace();\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"]}