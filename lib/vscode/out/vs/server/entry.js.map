{"version":3,"sources":["vs/server/fake","vs/server/vs/base/common/performance.js","vs/server/vs/base/node/languagePacks.js","vs/server/file:/repo/lib/vscode/src/vs/base/common/assert.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/collections.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/decorators.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/errors.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/arrays.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/functional.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/iterator.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/json.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/lifecycle.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/linkedList.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/event.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/cancellation.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/platform.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/process.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/path.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/stream.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/strings.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/buffer.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/date.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/types.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/objects.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uri.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/amd.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/console.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/marshalling.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/normalization.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/labels.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uriIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uuid.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/decoder.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/encoding.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/macAddress.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/id.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/paths.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/pfs.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/extpath.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/watcher.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/config.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/errorMessage.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/severity.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/processes.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/download/common/download.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/server/file:/repo/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/files.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/io.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/localizations/common/localizations.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/common/log.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/fileService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/common/logIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/node/spdlogService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/product/common/product.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/environment/node/environmentService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/localizations/node/localizations.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/product/common/productService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/node/configurationService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/common/request.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/common/requestIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/node/proxy.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/state/node/state.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/state/node/stateService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/storage/common/storage.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/server/common/nodeProxy.ts","vs/server/file:/repo/lib/vscode/src/vs/server/common/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/insights.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/logger.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/nls.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/protocol.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/util.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/connection.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/channel.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/zip.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/marketplace.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/node/requestService.ts","vs/server/file:/repo/lib/vscode/src/vs/code/node/cliProcessMain.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/server.ts","vs/server/file:/repo/lib/vscode/src/vs/server/entry.ts"],"names":["__m","__M","deps","result","i","len","length","_factory","sharedObj","_performanceEntries","_dataLen","_timeStamp","console","timeStamp","bind","mark","name","push","Date","now","getEntries","entries","timestamp","getEntry","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","factory","nodeRequire","path","fs","perf","exists","file","Promise","c","rimraf","location","e","lstat","err","stats","then","stat","isDirectory","isSymbolicLink","dir","readdir","files","children","all","map","child","join","rmdir","undefined","unlink","code","readFile","resolve","reject","data","writeFile","content","getNLSConfiguration","commit","userDataPath","metaDataFile","locale","availableLanguages","pseudo","process","env","initialLocale","defaultResult","configs","configFile","JSON","parse","readFileSync","getLanguagePackConfigurations","config","index","lastIndexOf","substring","error","resolveLanguagePackLocale","packConfig","mainPack","hash","translations","fileExists","packId","cacheRoot","coreLocation","translationsConfigFile","corruptedFile","*","_languagePackId","_translationsConfigFile","_cacheRoot","_resolvedLanguagePackCoreLocation","_corruptedFile","corrupted","toDelete","d","utimes","touch","catch","mkdir","recursive","mkdirp","values","metadata","packData","contents","bundles","Object","keys","writes","bundle","modules","create","module","defaultMessages","messages","targetStrings","elem","translatedMessage","key","replace","stringify","exports","ok","value","message","Error","hasOwnProperty","prototype","call","size","count","first","forEach","callback","groupBy","groupFn","element","fromMap","original","mapValues","v","SetMap","[object Object]","this","Map","get","Set","set","add","delete","fn","createDecorator","mapFn","descriptor","fnKey","memoizeId","createMemoizer","memoizeKeyPrefix","self","warn","memoizeKey","args","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","ErrorHandler","listeners","unexpectedErrorHandler","stack","listener","_removeListener","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","split","String","NotImplementedError","super","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","pop","j","firstIndex","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","o","min","isCancellationRequested","errors_1","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","distinctES6","has","fromSet","uniqueFilter","lastIndex","notFoundValue","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","fill","num","indexer","merger","t","reduce","r","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","asArray","once","_this","didCall","arguments","Iterator","FIN","done","_empty","next","empty","single","fromArray","fromNativeIterator","it","elements","iterator","collect","atMost","POSITIVE_INFINITY","iterators","chain","ChainableIterator","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","max","MappedIterator","MappedNavigator","navigator","previous","parent","last","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","digits","hexValue","ch","charCodeAt","scanNext","isWhitespace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","isAtPropertyKey","setPreviousNode","colonOffset","sep","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","dispose","disposables","isDisposable","thing","combinedDisposable","toDisposable","DisposableStore","_toDispose","_isDisposed","_store","freeze","MutableDisposable","_value","ReferenceCollection","references","reference","counter","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","iterator_1","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","iter","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","promiseTask","Delayer","defaultDelay","timeout","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","timer","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","global","define","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_userAgent","isElectronRenderer","versions","electron","platform","rawNlsConfig","nlsConfig","resolved","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","_globals","globals","setImmediate","postMessage","importScripts","pending","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","format","newWriteableStream","WriteableStreamImpl","isReadableStream","pause","resume","destroy","every","state","flowing","ended","destroyed","flowData","flowErrors","flowEnd","write","fullDataBuffer","consumeReadable","readable","chunks","chunk","read","consumeReadableWithLimit","maxChunks","lastReadChunk","consumeStream","stream","consumeStreamWithLimit","wrapperStream","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","substrEquals","aStart","aEnd","bStart","bEnd","isHighSurrogate","charCode","isLowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","test","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","Uint8Array","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","removeAccents","regex","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt8","destination","writeUInt8","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","toLocalISOString","date","getFullYear","strings_1","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","toSlashes","osPath","path_1","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","_typeof","number","string","function","constructor","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","assertType","condition","assertIsDefined","assertAllDefined","isFunction","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","types_1","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","getOrDefault","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","_makeFsPath","change","_URI","percentDecode","components","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","uri","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","registerAndGetAmdImageURL","absolutePath","require","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","line","column","label","isOneStringArg","consoleArgs","forEachable","getOrSet","mapToString","setToString","mapToSerializable","serializable","serializableToMap","StringIterator","_pos","PathIterator","_splitOnBackslash","_from","_to","justSeps","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","reset","val","hasNext","oldElement","_nodeIterator","_forEach","ResourceMap","toKey","clb","resourceMap","Touch","LinkedMap","_map","_head","_tail","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","some","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","replacer","flags","revive","depth","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","pathname","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","hasToIgnoreCase","network_1","parentCandidate","originalFSPath","isEqualAuthority","a1","a2","uriPath","hasTrailingPathSeparator","fsp","fromPath","toPath","getComparisonKey","basenameOrAuthority","second","p1","p2","joinPath","pathFragment","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forPaths","glob_1","rootExpression","findSubstr","toLocalResource","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","tildify","userHome","getBaseLabel","normalizedUserHomeCached","normalizedUserHome","normalized","untildify","ellipsis","unc","home","Type","shorten","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","uriTransformer","_uriTransformer","transformOutgoing","transformOutgoingScheme","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformIncomingURIs","transformAndReviveIncomingURIs","ValueUUID","V4UUID","_randomHex","_oneOf","_timeHighBits","_chars","v4","_UUIDPattern","isUUID","generateUuid","asHex","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","UTF8","UTF8_with_bom","UTF16be","UTF16le","isUTFEncoding","utfEncoding","UTF16be_BOM","UTF16le_BOM","UTF8_BOM","ZERO_BYTE_DETECTION_BUFFER_MAX_LEN","NO_ENCODING_GUESS_MIN_BYTES","AUTO_ENCODING_GUESS_MIN_BYTES","AUTO_ENCODING_GUESS_MAX_BYTES","toNodeEncoding","enc","detectEncodingByBOMFromBuffer","bytesRead","b0","b1","b2","toDecodeStream","minBytesRequiredForDetection","guessEncoding","writer","stream_1","Writable","bufferedChunks","bytesBuffered","decodeStream","decodeStreamPromise","_startDecodeStream","detectEncodingFromBuffer","detected","overwriteEncoding","iconv","pipe","encodingExists","encodeStream","IGNORE_ENCODINGS","guessEncodingByBuffer","guessed","resolve_1","reject_1","detect","encodingName","normalizedEncodingName","JSCHARDET_TO_ICONV_ENCODINGS","toIconvLiteEncoding","ibm866","big5","autoGuessEncoding","seemsBinary","couldBeUTF16LE","couldBeUTF16BE","containsZeroByte","isEndian","isZeroByte","readInt8","guessedEncoding","toCanonicalName","__$__nodeRequire","cmdline","windows","unix","invalidMacAddresses","validateMacAddress","tempCandidate","getMac","child_process_1","stdout","stdin","macAddressCandidate","machineId","virtualMachineHint","mac","_virtualMachineOUIs","forStrings","vmOui","interfaceCount","interfaces","os_1","networkInterfaces","_isVirtualMachineMacAdress","getMachineId","crypto","macAddress","macAddress_1","createHash","update","digest","getMacMachineId","uuid","pathsPath","amd_1","getAppDataPath","getDefaultUserDataPath","RimRafMode","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","chmod","util_1","promisify","handleDirectoryChildren","readdirSync","normalization_1","oldPath","newPath","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","statLink","linkStat","linkStatError","isLink","renameIgnoreError","symlink","truncate","writeFilePathQueues","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","encoding_1","charset","addBOM","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","reader","finished","finish","isOpen","createWriteStream","autoClose","doWriteFileStreamAndFlush","writeFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","createReadStream","doCopyFile","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","realcaseSync","pfs_1","ix","realpath","access","constants","R_OK","realpathSync","accessSync","doWatchNonRecursive","onChange","originalFileName","mapPathToStatDisposable","watcherDisposables","disposable","watcher","fs_1","watch","removeAllListeners","folderChildren","raw","changedFileName","changedFilePath","statDisposable","timeoutHandle","CHANGE_BUFFER_DELAY","watchFile","watchFolder","ConfigWatcher","_path","defaultConfig","_onDidUpdateConfiguration","_register","registerWatcher","initAsync","hasParseErrors","parseErrors","onDidUpdateConfiguration","loadAsync","loaded","updateCache","initCallback","getConfig","json","parentFolder","handleSymbolicLink","realPath","isFolder","watcher_1","onConfigFileChange","reload","changeBufferDelay","currentConfig","ensureLoaded","loadSync","State","DataType","RequestType","ResponseType","BufferReader","bytes","BufferWriter","buffer_1","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","send","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","listen","timeoutTimer","requests","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidChangeConnections","onDidChangeConnections","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","router","getDelayedChannel","routeCall","getChannel","routeEvent","relay","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","emptyBuffer","getEmptyBuffer","ChunkStream","_chunks","_totalLength","buff","byteCount","_read","advance","resultOffset","chunkIndex","chunkPart","ProtocolMessageType","ProtocolConstants","ProtocolMessage","ack","writtenTime","ProtocolReader","socket","_onMessage","_state","readHead","readLen","messageType","_socket","_incomingData","onData","acceptChunk","lastReadTime","ProtocolWriter","lastWriteTime","_writeNow","_writeSoon","head","wasEmpty","_bufferAdd","_bufferTake","Protocol","_onClose","onClose","_socketWriter","_socketReader","Client","ipc_1","getSocket","sendDisconnect","BufferedEmitter","_hasListeners","_isDeliveringMessages","_bufferedMessages","_deliverMessages","QueueElement","resultLen","PersistentProtocol","initialChunk","_onControlMessage","onControlMessage","_onSocketClose","onSocketClose","_onSocketTimeout","onSocketTimeout","_isReconnecting","_outgoingUnackMsg","_outgoingMsgId","_outgoingAckId","_outgoingAckTimeout","_incomingMsgId","_incomingAckId","_incomingMsgLastTime","_incomingAckTimeout","_outgoingKeepAliveTimeout","_incomingKeepAliveTimeout","_socketDisposables","_receiveMessage","_sendKeepAliveCheck","_recvKeepAliveCheck","unacknowledgedCount","timeSinceLastOutgoingMsg","timeSinceLastIncomingMsg","initialDataChunk","flushBuffer","toSend","_recvAckCheck","peek","_sendAckCheck","readEntireBuffer","_sendAck","oldestUnacknowledgedMsg","timeSinceOldestUnacknowledgedMsg","propertyIsEvent","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","Proxy","_target","propKey","methodArgs","NodeSocket","_listener","off","Constants","ReadState","WebSocketNodeSocket","_onData","mask","ipc_net_1","_acceptChunk","onEnd","headerLen","secondByte","hasMask","unmask","cnt","bytesLeft","m3","m2","m1","generateRandomPipeName","randomSuffix","Server","server","toClientConnectionEvent","onConnection","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","nls","exceptionToErrorMessage","exception","verbose","localize","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","types","detail","getParseErrorMessage","errorCode","nls_1","Severity","_warning","_warn","_info","_displayStrings","Warning","Info","fromValue","Ignore","default","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","ee","cp","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","withExtension","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","ExtensionHostDebugBroadcastChannel","_onCloseEmitter","_onReloadEmitter","_onTerminateEmitter","_onLogToEmitter","_onAttachEmitter","sessionId","subId","ChannelName","ExtensionHostDebugChannelClient","onReload","onAttachSession","onLogToSession","onTerminateSession","transformIncomingURI","transformIncomingExtension","extension","uriIpc_1","manifest","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","local","zip","unzip","install","getManifest","installFromGallery","uninstall","reinstallFromGallery","getInstalled","extensions","updateMetadata","getExtensionsReport","ExtensionManagementChannelClient","zipLocation","vsix","force","GlobalExtensionEnablementServiceChannel","onDidChangeEnablement","getDisabledExtensions","enableExtension","disableExtension","GlobalExtensionEnablementServiceClient","nlsRegex","localizeManifest","ExtensionsLifecycle","environmentService","logService","processesLimiter","script","parseScript","info","identifier","version","runLifecycleHook","getExtensionStoragePath","scriptKey","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","errorMessage_1","uninstallHook","opts","silent","extensionUninstallProcess","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","VERSION_REGEXP","isValidVersionStr","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","isIExtensionIdentifier","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","areSameExtensions","ExtensionIdentifierWithVersion","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","properties","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","report","malicious","parseBuiltInExtensions","rawJson","productQuality","parsed","_b","forQualities","ExtensionsManifestCache","extensionsManagementService","extensionsManifestCache","onDidUnInstallExtension","invalidate","pfs","WatcherChannel","onLogMessage","setRoots","setVerboseLogging","stop","WatcherChannelClient","enable","roots","FileWatcher","onFileChanges","verboseLogging","isDisposed","restartCounter","startWatching","ipc_cp_1","AMD_ENTRYPOINT","PIPE_LOGGING","VERBOSE_LOGGING","MAX_RESTARTS","watcherIpc_1","setFolders","watcherOptions","OutOfProcessWin32FolderWatcher","watchedFolder","ignored","eventCallback","logCallback","glob","startWatcher","decoder","rawEvents","eventParts","changeType","ignore","changeTypeMap","folder","csharpWatcherService_1","excludes","onFileEvents","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","Graph","_hashFn","_nodes","collections_1","outgoing","fromNode","lookupOrInsertNode","toNode","incoming","_key","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IDownloadService","instantiation_1","IEnvironmentService","BACKUPS","LogsDataCleaner","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","__decorate","__param","environment_1","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","IExtensionManagementService","IExtensionGalleryService","SortBy","SortOrder","StatisticType","InstallOperation","INSTALL_ERROR_NOT_SUPPORTED","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","DISABLED_EXTENSIONS_STORAGE_PATH","ENABLED_EXTENSIONS_STORAGE_PATH","IGlobalExtensionEnablementService","ExtensionsLabel","ExtensionsChannelId","PreferencesLabel","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","_changes","checkForChangeType","getOfType","hasType","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","throwIfCancelled","throwIfTooLarge","totalBytesRead","limits","memory","files_1","allowedRemainingBytes","bufferSize","posInFile","posInBuffer","lastChunkLength","doReadFileIntoStream","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","fileChangesDelayer","watcher_2","fileChangesBuffer","pathToWatch","eventType","onFileChange","onVerbose","fileChanges","normalizedFileChanges","ServiceCollection","_entries","instanceOrDescriptor","_enableTracing","_canUseProxy","CyclicDependencyError","graph","InstantiationService","services","serviceCollection_1","strict","_services","_parent","_trace","Trace","traceInvocation","_done","accessor","isOptional","_getOrCreateServiceInstance","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","getValue","TraceType","_start","_dep","_None","dur","_totals","causedCreation","lines","printChild","trace","nested","LanguageType","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","ConsoleLogInMainService","consoleLog","extractMessage","MultiplexLogService","logServices","critical","DelegatedLogService","NullLogService","getLogLevel","Off","FileService","BUFFER_SIZE","_onDidChangeFileSystemProviderRegistrations","_onWillActivateFileSystemProvider","onWillActivateFileSystemProvider","_onDidChangeFileSystemProviderCapabilities","onDidChangeFileSystemProviderCapabilities","_onAfterOperation","onAfterOperation","_onError","_onFileChanges","activeWatchers","writeQueues","providerDisposables","onDidChangeFile","onDidChangeCapabilities","onDidErrorOccur","joiners","capability","resourceForError","activateProvider","withProvider","doResolveFile","resolveTo","resolveSingleChildDescendants","resolveMetadata","trie","toFileStat","arrays_1","Boolean","findSuperstr","recurse","labels_1","File","Directory","SymbolicLink","ctime","resolvedEntries","childResource","childStat","toResolve","bufferOrReadableOrStream","throwIfFileSystemIsReadonly","withWriteProvider","validateWriteFile","doWriteUnbuffered","doWriteBuffered","withReadProvider","doReadAsFileStream","preferUnbuffered","cancellableSource","statPromise","validateReadFile","fileStreamPromise","readFileUnbuffered","readFileStreamed","readFileBuffered","fileStream","readFileStream","transformFileReadStream","io_1","validateReadFileLimits","tooLargeErrorResult","sourceProvider","targetProvider","doMoveCopy","isSameResourceWithDifferentPathCase","doValidateMoveCopy","del","sourceFile","doCopyFolder","doPipeBuffered","doPipeBufferedToUnbuffered","doPipeUnbufferedToBuffered","doPipeUnbuffered","sourceFolder","targetFolder","sourceChild","targetChild","isPathCaseSensitive","directory","directoriesToCreate","useTrash","watchDisposed","watchDisposable","doWatch","toWatchKey","toMapKey","writeQueue","readableOrStream","ensureWriteQueue","doWriteStreamBufferedQueued","doWriteReadableBufferedQueued","doWriteBuffer","totalBytesWritten","doWriteUnbufferedQueued","doPipeBufferedQueued","sourceHandle","targetHandle","doPipeUnbufferedQueued","doPipeUnbufferedToBufferedQueued","log_1","DiskFileSystemProvider","mapHandleToPos","writeHandles","_onDidWatchErrorOccur","_onDidChangeFile","recursiveFoldersToWatch","recursiveWatchRequestDelayer","_capabilities","toFilePath","toType","birthtime","toFileSystemProviderError","filePath","normalizedPos","normalizePos","updatePos","bytesLength","lastKnownPos","doWrite","bytesWritten","doDelete","fromFilePath","validateTargetDeleted","watchRecursive","watchNonRecursive","folderToWatch","refreshRecursiveWatchers","doRefreshRecursiveWatchers","recursiveWatcher","watcherService_3","watcherImpl","usePolling","watcherService_1","_c","watcherService_2","recursiveWatcherLogLevelListener","watcherService","watcherService_4","logLevelListener","LoggerChannel","consoleFn","LoggerChannelClient","FollowerLogService","master","logger","createRotatingLogger","filename","filesize","filecount","SpdLogService","logsFolder","_loggerCreationPromise","_createSpdLogLogger","_logger","processName","_spdlog","setAsyncMode","logfilePath","createRotatingLoggerAsync","createSpdLogLogger","_log","disposeLogger","drop","severity_1","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","_onDidClose","onDidClose","actions","product","codeServerVersion","nameLong","nameShort","urlProtocol","rawProductConfiguration","rootPath","pkg","process_1","dataFolderName","getIPCHandle","product_1","getWin32IPCHandle","vscodePortable","xdgRuntimeDir","scope","getNixIPCHandle","EnvironmentService","_args","_execPath","date_1","appRoot","execPath","cliPath","isBuilt","applicationName","homedir","parseUserDataDir","appSettingsHome","userRoamingDataHome","settingsResource","resources","userDataSyncHome","settingsSyncPreviewResource","keybindingsSyncPreviewResource","userDataSyncLogResource","machineSettingsHome","machineSettingsResource","workspaceStorageHome","keybindingsResource","keyboardLayoutResource","argvResource","isExtensionDevelopment","extensionDevelopmentPath","backupHome","backupWorkspacesPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","parsePathArg","extensionsPath","vscodeExtensions","extraExtensionPaths","extraBuiltinExtensionPaths","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","debugExtensionHost","parseExtensionHostPort","logExtensionHostCommunication","wait","mainIPCHandle","sharedIPCHandle","nodeCachedDataDir","galleryMachineIdResource","disableUpdates","disableCrashReporter","driverHandle","driverVerbose","isBuild","parseDebugPort","debugId","debugArg","debugBrkArg","defaultBuildPort","break","decorators_1","parseSearchPort","systemLanguages","quality","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionManagementUtil_1","extensionIdentifier","installed","updated","extensionManagement_1","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","crypto_1","IProductService","Registry","Assert","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","defaultOverridesConfigurationNode","title","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","allOf","defaultConfigurations","defaultConfiguration","defaults","propertySchema","description","$ref","overrideIdentifier","updateOverridePropertyPatternKey","propertyKeys","validateProperty","included","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","curr","getConfigurationValue","settingPath","component","accessSetting","overrideIdentifierFromKey","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","value1","value2","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","fromOverride","toOverride","toOverrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","filterByScope","filterOverriddenProperties","getScope","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","workspaceConfiguration","folderConfigurations","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","model","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","ConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","configurationModels_1","onDidDefaultConfigurationChange","userConfigModelWatcher","config_1","userConfigModelParser","parseContent","onDidChangeUserConfiguration","toData","initialize","userConfigurationModel","compareAndUpdateLocalUserConfiguration","compareAndUpdateDefaultConfiguration","configurationChange","getTargetConfiguration","isSuccess","statusCode","hasNoContent","IRequestService","asText","asJson","registerConfiguration","order","http.proxy","markdownDescription","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","RequestChannel","headers","RequestChannelClient","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","hostname","auth","rejectUnauthorized","strictSSL","resolve_2","reject_2","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","init","getItem","setItem","WillSaveStateReason","IStorageService","StorageScope","InMemoryStorageService","_onDidChangeStorage","onDidChangeStorage","_onWillSaveState","onWillSaveState","globalCache","workspaceCache","fallbackValue","getCache","valueStr","logStorage","toWorkspace","reason","NONE","globalPath","workspacePath","safeParse","globalItems","globalItemsParsed","workspaceItems","workspaceItemsParsed","globalValues","table","workspaceValues","ErrorEvent","callstack","BaseErrorTelemetry","telemetryService","flushDelay","ERROR_FLUSH_TIMEOUT","_flushHandle","_disposables","_telemetryService","_flushDelay","unbind","Errors","addListener","_onErrorEvent","installErrorListeners","_flushBuffer","_enqueue","publicLog2","ErrorTelemetry","errorTelemetry_1","oldOnError","onerror","_onUncaughtError","uncaught_error_name","uncaught_error_msg","ITelemetryService","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","Flags","FilterType","flagsToString","f","AssetType","Icon","Details","Changelog","Manifest","VSIX","License","Repository","PropertyType","Dependency","ExtensionPack","Engine","LocalizedLanguages","DefaultQueryState","pageNumber","pageSize","sortBy","sortOrder","criteria","assetTypes","Query","filterType","filters","searchText","criterium","SearchText","getStatistic","statistics","statisticName","getCoreTranslationAssets","assetType","asset","getVersionAsset","getRepositoryAsset","gitRegExp","fallbackUri","getDownloadAsset","fallbackAssetUri","getIconAsset","assetUri","getExtensions","getEngine","getLocalizedLanguages","toExtension","galleryExtension","querySource","assets","readme","changelog","license","repository","download","icon","coreTranslations","extensionName","extensionId","lastUpdated","displayName","shortDescription","installCount","rating","ratingCount","extensionPack","localizedLanguages","preview","ExtensionGalleryService","requestService","productService","storageService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","resolveMarketplaceHeaders","extensionValidator_1","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","ExcludeNonValidated","withPage","withFilter","Target","ExcludeWithFlags","Unpublished","ExtensionId","ExtensionName","queryGallery","galleryExtensions","rawExtension","versionAsset","getLastValidExtensionVersion","rawVersion","isEnabled","names","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","withSortBy","ids","withSortOrder","total","firstPage","getPage","pageIndex","ct","nextPageQuery","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","url","api","request_1","resultCount","resultMetadata","metadataType","metadataItems","startTime","duration","publicLog","operationParam","downloadAsset","getAsset","compatible","IncludeVersions","fallbackUrl","firstOptions","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionRecursively","slow","X-Market-Client-Id","User-Agent","store","telemetry_1","productService_1","storage_1","TelemetryService","_configurationService","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","_enabled","piiPath","_updateUserOptIn","optIn","isHashedId","usingFallbackGuid","trueMachineId","correctedMachineId","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","instanceId","msftInternal","anonymizeFilePaths","_cleanupInfo","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","y","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","_logService","commonPropertiesRegex","strippedData","flattenKeys","flatKeys","configurationTelemetry","configurationSource","configurationKeys","validateTelemetryData","measurements","flat","cleanRemoteAuthority","remoteAuthority","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","telemetryUtils_1","trackEvent","resolveCommonProperties","msftInternalDomains","release","domainList","domain","msftDomain","verifyMicrosoftInternalDomain","seq","defineProperties","common.timesincesessionstart","common.sequence","SNAP","SNAP_REVISION","buildTelemetryMessage","mergedTelemetry","mergeTelemetry","dirName","dirs","statSync","telemetryJsonFolders","INodeProxyService","NodeProxyChannel","NodeProxyChannelClient","TelemetryChannel","setEnabled","getTelemetryInfo","TelemetryChannelClient","Channel","_sender","cpus","cores","memoryFree","freemem","memoryTotal","totalmem","userInfo","TELEMETRY_URL","logger_1","named","metadataPath","isInternalConfiguration","DefaultConfiguration","getNlsConfiguration","util","lp","_languagePackSupport","getTranslations","getLocaleFromConfig","localeConfigUri","_m1","_m2","m4","length_1","skipWebSocketFrames","ipc_net_2","rawMessage","authenticate","_message","sendMessage","sendControl","uriTransformerPath","rawURITransformer","rawURITransformerFactory","Connection","offline","_offline","doReconnect","doDispose","ManagementConnection","setOffline","beginAcceptReconnection","endAcceptReconnection","ExtensionHostConnection","environment","getUnderlyingSocket","sendInitMessage","proc","VSCODE_EXTHOST_WILL_SEND_SOCKET","VSCODE_HANDLES_UNCAUGHT_ERRORS","VSCODE_LOG_STACK","VSCODE_LOG_LEVEL","VSCODE_NLS_CONFIG","Translations","aKeys","bKeys","Logger","messageHandler","_messageHandler","notification_1","MANIFEST_FILE","ExtensionManifestHandler","ourVersion","absoluteFolderPath","isUnderDevelopment","_ourVersion","_absoluteFolderPath","_isBuiltin","_isUnderDevelopment","_absoluteManifestPath","ExtensionManifestParser","manifestContents","__metadata","jsonErrorMessages_1","ExtensionManifestNLSReplacer","_nlsConfig","extensionDescription","reportErrors","localized","reportInvalidFormat","translationId","localizedMessages","translationPath","translationBundle","package","findMessageBundles","messageBundle","messageBundleContent","resolveOriginalMessageBundle","_replaceNLStrings","originalMessageBundle","originalBundleContent","devMode","toCheck","literal","originalMessages","messageScope","processEntry","messageKey","ExtensionManifestValidator","_extensionDescription","isValidExtensionDescription","extensionLocation","extensionFolderPath","baseIsValidExtensionDescription","semver","valid","_isStringArray","activationEvents","normalizedAbsolutePath","ExtensionScannerInput","tanslations","extensionPoints_1","DefaultExtensionResolver","ExtensionScanner","replaceNLS","resolver","obsolete","obsoleteFileContents","refs","resolveExtensions","ref","createNLSConfig","_extensionDescriptions","scanExtension","extensionDescriptions","rcompare","scanExtensions","builtinExtensions","extraBuiltinExtensions","resultMap","resultArr","aLastSegment","bLastSegment","Watcher","diskFileSystemProvider_1","watches","w","req","FileProviderChannel","watchers","filechange","session","unwatch","_watch","requestResourcePath","ExtensionEnvironmentChannel","telemetry","getEnvironmentData","getDiagnosticInfo","disableTelemetry","settingsPath","extensionHostLogsPath","scanMultiple","VSCODE_DEV","scanBuiltin","scanInstalled","allExtensions","uniqueExtensions","multipleExtensions","NodeProxyService","_serviceBrand","_$onMessage","$onMessage","_onDown","onDown","_onUp","onUp","node_browser_1","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteFileSystemProvider","remoteAgentService","_onDidChange","_onDidChangeCapabilities","getConnection","setCaseSensitive","getEnvironment","remoteAgentEnvironment","registerListeners","eventsOrError","isCaseSensitive","dataOrErrorOrEnd","RemoteExtensionLogFileName","IRemoteAgentService","ExtractError","cause","toExtractError","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","sourcePathRegex","fileName","targetFileName","openZipStream","attr","externalFileAttributes","modeFromEntry","targetDirName","istream","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","openReadStream","zipPath","yazl","ZipFile","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","zip_1","ExtensionManagementError","parseManifest","ExtensionManagementService","galleryService","downloadService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","_devSystemExtensionsPath","_devSystemExtensionsFilePath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","manifestCache","extensionsManifestCache_1","extensionLifecycle","extensionLifecycle_1","collectFiles","downloadLocation","downloadVsix","extensionManagementUtil_2","collectFilesFromDirectory","identifierWithVersion","installedExtensions","existing","removeExtension","gt","unsetUninstalledAndGetLocal","getMetadata","installFromZipPath","downloadedLocation","toNonCancellablePromise","installExtension","installDependenciesAndPackExtensions","onDidInstallExtensionSuccess","gallery","reportTelemetry","getTelemetryEvent","onDidInstallExtensionFailure","checkAndGetCompatibleVersion","cancellablePromise","successCallback","errorCallback","existingExtension","downloadInstallableExtension","installableExtension","neq","setUninstalled","isMalicious","compatibleExtension","getCompatibleExtension","findGalleryExtension","removeUninstalledExtension","joinErrors","extractAndInstall","isUninstalled","unsetUninstalled","folderName","tempPath","extensionPath","extractAndRename","setMetadata","saveMetadataForLocalExtension","extractPath","renamePath","retryUntil","dependenciesAndPackExtensions","old","galleryIdentifier","galleryResult","extensionsToInstall","rollback","extensionToUninstall","checkForDependenciesAndUninstall","localExtension","manifestPath","findGalleryExtensionByName","findGalleryExtensionById","errorOrErrors","previousValue","currentValue","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","uninstallExtension","doUninstall","checked","extensionsPack","packOfPackedExtensions","packedExtension","scanUserExtensions","userExtensions","u","reportStatistic","errorcode","promises","scanSystemExtensions","systemExtensionsPromise","devSystemExtensionsPromise","getDevSystemExtensionsList","devSystemExtensionsList","devSystemExtensionsPath","systemExtensions","devSystemExtensions","excludeOutdated","getUninstalledExtensions","scanAllUserExtensions","uninstalled","limiter","extensionsFolders","extensionFolder","extensionNls_1","readManifest","readmeUrl","changelogUrl","removeUninstalledExtensions","removeOutdatedExtensions","postUninstall","toRemove","withUninstalledExtensions","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","devSystemExtensionsFilePath","extensionData","download_1","vszipExtract","vszip","vszipBuffer","tar","tarPath","pack","tarStream","finalize","archivePath","extractTar","includes","extractAssets","assetPath","extractor","fail","extractData","fileData","nextEntry","rawName","fstream","enableCustomMarketplace","SERVICE_URL","itemUrl","ITEM_URL","recommendationsUrl","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","agent","proxy_1","Proxy-Authorization","_request","endpoint","rawRequest","getRawRequest","getNodeRequest","password","followRedirects","zlib_1","createGunzip","abort","notInstalled","useId","getId","withVersion","EXTENSION_ID_REGEX","getIdAndVersion","Main","instantiationService","extensionGalleryService","argv","setInstallSource","listExtensions","installExtensions","locateExtension","telemetry_2","installSource","showVersions","categories","failed","installedExtensionsManifests","updateLocalizationsCache","responseText","notFound","installedExtension","newer","getExtensionId","uninstalledExtensions","localizationService","createInstance","eventPrefix","environmentService_1","spdlogService_1","configurationService_1","state_1","stateService_1","fileService_1","diskFileSystemProvider","registerProvider","instantiationService_1","invokeFunction","envService","stateService","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","commonProperties_1","telemetryService_1","createChild","run","Vscode","_onDidClientConnect","ipc","maxExtraOfflineConnections","cliProcessMain_1","servicesPromise","initializeServices","startPath","workbenchWebConfiguration","workspaceUri","folderUri","remoteUserDataUri","productConfiguration","nlsConfiguration","reconnectionToken","protocol_1","reconnection","handshake","desiredConnectionType","debugPort","getDebugPort","reconnect","connection_1","nodeProxy_1","disposeOldOfflineConnections","tunnel","remoteAgentService_1","logIpc_1","extensionHostDebugIpc_1","insights_1","id_1","localizations_2","channel_1","logsDataCleaner_1","extensionManagementIpc_1","requestIpc_1","ipc_2","remoteAgentFileSystemChannel_1","logger_2","marketplace_1","exit","CODE_SERVER_PARENT_PID","parentPid","server_1","field","cli","handleWebSocket"],"mappings":"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IAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA;AACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IAEAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,YAAA,IAAA;AACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,KAAA,QAEAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,cAAA,OAAA,gBACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,YAAA,IAAA,cAtID,CAAWA,IAAAA,EAAc,KAsJzBjP,EAAAuT,YAAA,SAA4BpE,EAAc9E,GACzC,MAAMmJ,EAAsB,GACtBC,EAAuB,IAAIxU,OACjC,IAAIyU,OAAqCvY,EACzC,MAAMwY,EAA6B,CAClCzT,MAAO,GACPiR,OAAQ,EACRvZ,OAAQ,EACRgc,KAAM,SACN9E,YAAQ3T,GAET,IAAI0Y,GAAkB,EACtB,SAASC,EAAgB5T,EAAeiR,EAAgBvZ,EAAgBgc,GACvED,EAAiBzT,MAAQA,EACzByT,EAAiBxC,OAASA,EAC1BwC,EAAiB/b,OAASA,EAC1B+b,EAAiBC,KAAOA,EACxBD,EAAiBI,iBAAc5Y,EAC/BuY,EAAeC,EAEhB,IAECtC,EAAMlC,EAAM,CACX0C,cAAe,CAACV,EAAgBvZ,KAC/B,GAAIyS,GAAY8G,EACf,MAAMsC,EAEPC,OAAevY,EACf0Y,EAAkBxJ,EAAW8G,EAC7BqC,EAASjb,KAAK,KAEfuZ,iBAAkB,CAACxZ,EAAc6Y,EAAgBvZ,KAChD,GAAIyS,EAAW8G,EACd,MAAMsC,EAIP,GAFAK,EAAgBxb,EAAM6Y,EAAQvZ,EAAQ,YACtC4b,EAASA,EAAS5b,OAAS,GAAKU,EAC5B+R,GAAY8G,EAASvZ,EACxB,MAAM6b,GAGR1B,YAAa,CAACZ,EAAgBvZ,KAC7B,GAAIyS,GAAY8G,EACf,MAAMsC,EAEPC,OAAevY,EACfqY,EAAS1L,OAEVkK,aAAc,CAACb,EAAgBvZ,KAC9B,GAAIyS,GAAY8G,EACf,MAAMsC,EAEPC,OAAevY,EACfqY,EAASjb,KAAK,IAEf0Z,WAAY,CAACd,EAAgBvZ,KAC5B,GAAIyS,GAAY8G,EACf,MAAMsC,EAEPC,OAAevY,EACfqY,EAAS1L,OAEVoK,eAAgB,CAAChS,EAAYiR,EAAgBvZ,KAC5C,GAAIyS,EAAW8G,EACd,MAAMsC,EAIP,GAFAK,EAAgB5T,EAAOiR,EAAQvZ,EAAQub,EAAYjT,IAE/CmK,GAAY8G,EAASvZ,EACxB,MAAM6b;AAGRtB,YAAa,CAAC6B,EAAa7C,EAAgBvZ,KAC1C,GAAIyS,GAAY8G,EACf,MAAMsC,EAEP,GAAY,MAARO,GAAeN,GAAsC,aAAtBA,EAAaE,KAC/CF,EAAaK,YAAc5C,EAC3B0C,GAAkB,EAClBH,OAAevY,OACT,GAAY,MAAR6Y,EAAa,CACvB,MAAMjF,EAAOyE,EAASA,EAAS5b,OAAS,GACpB,iBAATmX,EACVyE,EAASA,EAAS5b,OAAS,GAAKmX,EAAO,GAEvC8E,GAAkB,EAClBL,EAASA,EAAS5b,OAAS,GAAK,IAEjC8b,OAAevY,MAIjB,MAAOjB,GACR,GAAIA,IAAMuZ,EACT,MAAMvZ,EAIR,MAAO,CACNT,KAAM+Z,EACNE,aAAAA,EACAG,gBAAAA,EACAI,QAAUC,IACT,IAAIC,EAAI,EACR,IAAK,IAAIzc,EAAI,EAAGyc,EAAID,EAAQtc,QAAUF,EAAI8b,EAAS5b,OAAQF,IAC1D,GAAIwc,EAAQC,KAAOX,EAAS9b,IAAqB,MAAfwc,EAAQC,GACzCA,SACM,GAAmB,OAAfD,EAAQC,GAClB,OAAO,EAGT,OAAOA,IAAMD,EAAQtc,UAUxBoI,EAAAtD,MAAA,SAAsByS,EAAciF,EAAuB,GAAI7C,EAAwBvC,EAAawC,SACnG,IAAI6C,EAAiC,KACjCC,EAAqB,GACzB,MAAMC,EAAyB,GAE/B,SAASC,EAAQtU,GACZ8J,MAAMC,QAAQqK,GACTA,EAAe/b,KAAK2H,GACE,OAApBmU,IACVC,EAAcD,GAAmBnU,GAkCnC,OADAmR,EAAMlC,EA7BuB,CAC5B0C,cAAe,KACd,MAAM4C,EAAS,GACfD,EAAQC,GACRF,EAAgBhc,KAAK+b,GACrBA,EAAgBG,EAChBJ,EAAkB,MAEnBvC,iBAAmBxZ,IAClB+b,EAAkB/b,GAEnByZ,YAAa,KACZuC,EAAgBC,EAAgBzM,OAEjCkK,aAAc,KACb,MAAMlM,EAAe,GACrB0O,EAAQ1O,GACRyO,EAAgBhc,KAAK+b,GACrBA,EAAgBxO,EAChBuO,EAAkB,MAEnBpC,WAAY,KACXqC,EAAgBC,EAAgBzM,OAEjCoK,eAAgBsC,EAChBnC,QAAS,CAACpV,EAAuBkU,EAAgBvZ,KAChDwc,EAAO7b,KAAK,CAAE0E,MAAAA,EAAOkU,OAAAA,EAAQvZ,OAAAA,MAGV2Z,GACd+C,EAAc,IAOtBtU,EAAA0U,UAAA,SAA0BvF,EAAciF,EAAuB,GAAI7C,EAAwBvC,EAAawC,SACvG,IAAI8C,EAA0B,CAAEV,KAAM,QAASzC,QAAS,EAAGvZ,QAAS,EAAGiD,SAAU,GAAIiU,YAAQ3T,GAE7F,SAASwZ,EAAuBC,GACJ,aAAvBN,EAAcV,OACjBU,EAAc1c,OAASgd,EAAYN,EAAcnD,OACjDmD,EAAgBA,EAAcxF;AAIhC,SAAS0F,EAAQK,GAEhB,OADAP,EAAczZ,SAAUtC,KAAKsc,GACtBA,EAyCRxD,EAAMlC,EAtCuB,CAC5B0C,cAAgBV,IACfmD,EAAgBE,EAAQ,CAAEZ,KAAM,SAAUzC,OAAAA,EAAQvZ,QAAS,EAAGkX,OAAQwF,EAAezZ,SAAU,MAEhGiX,iBAAkB,CAACxZ,EAAc6Y,EAAgBvZ,MAChD0c,EAAgBE,EAAQ,CAAEZ,KAAM,WAAYzC,OAAAA,EAAQvZ,QAAS,EAAGkX,OAAQwF,EAAezZ,SAAU,MACnFA,SAAUtC,KAAK,CAAEqb,KAAM,SAAU1T,MAAO5H,EAAM6Y,OAAAA,EAAQvZ,OAAAA,EAAQkX,OAAQwF,KAErFvC,YAAa,CAACZ,EAAgBvZ,KAC7B0c,EAAc1c,OAASuZ,EAASvZ,EAAS0c,EAAcnD,OACvDmD,EAAgBA,EAAcxF,OAC9B6F,EAAuBxD,EAASvZ,IAEjCoa,aAAc,CAACb,EAAgBvZ,KAC9B0c,EAAgBE,EAAQ,CAAEZ,KAAM,QAASzC,OAAAA,EAAQvZ,QAAS,EAAGkX,OAAQwF,EAAezZ,SAAU,MAE/FoX,WAAY,CAACd,EAAgBvZ,KAC5B0c,EAAc1c,OAASuZ,EAASvZ,EAAS0c,EAAcnD,OACvDmD,EAAgBA,EAAcxF,OAC9B6F,EAAuBxD,EAASvZ,IAEjCsa,eAAgB,CAAChS,EAAYiR,EAAgBvZ,KAC5C4c,EAAQ,CAAEZ,KAAMT,EAAYjT,GAAQiR,OAAAA,EAAQvZ,OAAAA,EAAQkX,OAAQwF,EAAepU,MAAAA,IAC3EyU,EAAuBxD,EAASvZ,IAEjCua,YAAa,CAAC6B,EAAa7C,EAAgBvZ,KACf,aAAvB0c,EAAcV,OACL,MAARI,EACHM,EAAcP,YAAc5C,EACV,MAAR6C,GACVW,EAAuBxD,KAI1BkB,QAAS,CAACpV,EAAuBkU,EAAgBvZ,KAChDwc,EAAO7b,KAAK,CAAE0E,MAAAA,EAAOkU,OAAAA,EAAQvZ,OAAAA,MAGV2Z,GAErB,MAAM9Z,EAAS6c,EAAczZ,SAAU,GAIvC,OAHIpD,UACIA,EAAOqX,OAERrX,GAMRuI,EAAA8U,mBAAA,SAAmCC,EAAYtb,GAC9C,IAAKsb,EACJ,OAED,IAAI7D,EAAO6D,EACX,IAAK,IAAIC,KAAWvb,EACnB,GAAuB,iBAAZub,EAAsB,CAChC,GAAkB,WAAd9D,EAAK0C,OAAsB5J,MAAMC,QAAQiH,EAAKrW,UACjD,OAED,IAAIoa,GAAQ,EACZ,IAAK,MAAMC,KAAgBhE,EAAKrW,SAC/B,GAAImP,MAAMC,QAAQiL,EAAara,WAAaqa,EAAara,SAAS,GAAGqF,QAAU8U,EAAS,CACvF9D,EAAOgE,EAAara,SAAS;AAC7Boa,GAAQ,EACR,MAGF,IAAKA,EACJ,WAEK,CACN,MAAMnY,EAAgBkY,EACtB,GAAkB,UAAd9D,EAAK0C,MAAoB9W,EAAQ,IAAMkN,MAAMC,QAAQiH,EAAKrW,WAAaiC,GAASoU,EAAKrW,SAASjD,OACjG,OAEDsZ,EAAOA,EAAKrW,SAASiC,GAGvB,OAAOoU,GAMRlR,EAAAmV,YAAA,SAAgBA,EAAYjE,GAC3B,IAAKA,EAAKpC,SAAWoC,EAAKpC,OAAOjU,SAChC,MAAO,GAER,MAAMpB,EAAO0b,EAAYjE,EAAKpC,QAC9B,GAAyB,aAArBoC,EAAKpC,OAAO8E,KAAqB,CACpC,MAAM/T,EAAMqR,EAAKpC,OAAOjU,SAAS,GAAGqF,MACpCzG,EAAKlB,KAAKsH,QACJ,GAAyB,UAArBqR,EAAKpC,OAAO8E,KAAkB,CACxC,MAAM9W,EAAQoU,EAAKpC,OAAOjU,SAASoI,QAAQiO,IAC5B,IAAXpU,GACHrD,EAAKlB,KAAKuE,GAGZ,OAAOrD,GAMRuG,EAAAoV,aAAA,SAAgBA,EAAalE,GAC5B,OAAQA,EAAK0C,MACZ,IAAK,QACJ,OAAO1C,EAAKrW,SAAUE,IAAIqa,GAC3B,IAAK,SACJ,MAAMrL,EAAM9K,OAAOK,OAAO,MAC1B,IAAK,IAAI+V,KAAQnE,EAAKrW,SAAW,CAChC,MAAMga,EAAYQ,EAAKxa,SAAU,GAC7Bga,IACH9K,EAAIsL,EAAKxa,SAAU,GAAGqF,OAASkV,EAAaP,IAG9C,OAAO9K,EACR,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,UACJ,OAAOmH,EAAKhR,MACb,QACC,SAKHF,EAAAiR,SAAAA,EAOAjR,EAAAsV,iBAAA,SAAgBA,EAAiBpE,EAAYC,EAAgBC,GAAoB,GAChF,GAAIH,EAASC,EAAMC,EAAQC,GAAoB,CAC9C,MAAMvW,EAAWqW,EAAKrW,SACtB,GAAImP,MAAMC,QAAQpP,GACjB,IAAK,IAAInD,EAAI,EAAGA,EAAImD,EAASjD,QAAUiD,EAASnD,GAAGyZ,QAAUA,EAAQzZ,IAAK,CACzE,MAAM6d,EAAOD,EAAiBza,EAASnD,GAAIyZ,EAAQC,GACnD,GAAImE,EACH,OAAOA,EAKV,OAAOrE,IASTlR,EAAAqR,MAAAA,EAsPArR,EAAAwV,cAAA,SAA8BrG,EAAcsG,GAE3C,IAECC,EAEArG,EAJGoC,EAAWvC,EAAcC,GAC5BwG,EAAkB,GAElBxE,EAAS,EAGV,GAGC,OAFA9B,EAAMoC,EAASf,cACfgF,EAAOjE,EAASd,QAEf,KAAA,GACA,KAAA;AACA,KAAA,GACKQ,IAAW9B,GACdsG,EAAMpd,KAAK4W,EAAKnS,UAAUmU,EAAQ9B,SAEjBlU,IAAdsa,GACHE,EAAMpd,KAAKkZ,EAASZ,gBAAgB/Q,QAAQ,WAAY2V,IAEzDtE,EAASM,EAASf,qBAGR,KAAJgF,GAET,OAAOC,EAAM1a,KAAK,KAGnB+E,EAAAmT,YAAAA,4GC9yCA,MAAMyC,GAAoB,EAEpBC,EAA4B,4BAElC,SAASC,EAAmC5J,GAC3C,GAAK0J,GAID1J,GAAKA,IAAM6J,EAAWC,KACzB,IACE9J,EAAU2J,IAA6B,EACvC,MAAAI,KAMJ,SAASC,EAAuChK,GAC/C,IAAK0J,EACJ,OAAO1J,EAGR,MAAM9H,EAAQ,IAAIhE,MAAM,iCAAiCgE,MAMzD,OALAV,WAAW,KACJwI,EAAU2J,IACf3d,QAAQie,IAAI/R,IAEX,KACI8H,EAgBR,SAAgBkK,EAA+BC,GAC9C,OAAIrM,MAAMC,QAAQoM,IACjBA,EAAY1V,QAAQtC,IACfA,IACHyX,EAAYzX,GACZA,EAAE+X,aAGG,IACGC,GACVP,EAAYO,GACZA,EAAYD,UACLC,QAEP,EAvBFrW,EAAAsW,aAAA,SAA+CC,GAC9C,MAAoD,mBAAnBA,EAAOH,SACS,IAA1BG,EAAOH,QAAQxe,QAOvCoI,EAAAoW,QAAAA,EAkBApW,EAAAwW,mBAAA,YAAsCH,GAErC,OADAA,EAAY1V,QAAQmV,GACbI,EAAgB,CAAEE,QAAS,IAAMA,EAAQC,MAGjDrW,EAAAyW,aAAA,SAA6B5U,GAC5B,MAAMQ,EAAO6T,EAAgB,CAC5BE,QAAS,KACRN,EAAYzT,GACZR,OAGF,OAAOQ,GAGR,MAAaqU,EAAbrV,cACSC,KAAAqV,WAAa,IAAIlV,IACjBH,KAAAsV,aAAc,EAOfvV,UACFC,KAAKsV,cAITd,EAAYxU,MACZA,KAAKsV,aAAc,EACnBtV,KAAKwB,SAMCzB;AACNC,KAAKqV,WAAWhW,QAAQ4U,GAAQA,EAAKa,WACrC9U,KAAKqV,WAAW7T,QAGVzB,IAA2BkK,GACjC,IAAKA,EACJ,OAAOA,EAER,GAAKA,IAAiCjK,KACrC,MAAM,IAAIlB,MAAM,2CAUjB,OAPA0V,EAAYvK,GACRjK,KAAKsV,YACR1e,QAAQoK,KAAK,IAAIlC,MAAM,uHAAuHgE,OAE9I9C,KAAKqV,WAAWhV,IAAI4J,GAGdA,GA1CTvL,EAAA0W,gBAAAA,EA8CA,MAAsBX,EAMrB1U,cAFiBC,KAAAuV,OAAS,IAAIH,EAG7BR,EAAgB5U,MAGVD,UACNyU,EAAYxU,MAEZA,KAAKuV,OAAOT,UAGH/U,UAAiCkK,GAC1C,GAAKA,IAA4BjK,KAChC,MAAM,IAAIlB,MAAM,2CAEjB,OAAOkB,KAAKuV,OAAOlV,IAAI4J,IApBzBvL,EAAA+V,WAAAA,EAEiBA,EAAAC,KAAO/W,OAAO6X,OAAoB,CAAEzV,cA4BrDrB,EAAA+W,kBAAA,MAIC1V,cAFQC,KAAAsV,aAAc,EAGrBV,EAAgB5U,MAGjBpB,YACC,OAAOoB,KAAKsV,iBAAczb,EAAYmG,KAAK0V,OAG5C9W,UAAUA,GACLoB,KAAKsV,aAAe1W,IAAUoB,KAAK0V,SAInC1V,KAAK0V,QACR1V,KAAK0V,OAAOZ,UAETlW,GACH4V,EAAY5V,GAEboB,KAAK0V,OAAS9W,GAGfmB,QACCC,KAAKpB,WAAQ/E,EAGdkG,UACCC,KAAKsV,aAAc,EACnBd,EAAYxU,MACRA,KAAK0V,QACR1V,KAAK0V,OAAOZ,UAEb9U,KAAK0V,YAAS7b,IAQhB6E,EAAAiX,oBAAA,MAAA5V;AAEkBC,KAAA4V,WAAoE,IAAI3V,IAEzFF,QAAQxB,GACP,IAAIsX,EAAY7V,KAAK4V,WAAW1V,IAAI3B,GAE/BsX,IACJA,EAAY,CAAEC,QAAS,EAAG3C,OAAQnT,KAAK+V,uBAAuBxX,IAC9DyB,KAAK4V,WAAWxV,IAAI7B,EAAKsX,IAG1B,MAAM1C,OAAEA,GAAW0C,EACbf,EAAUkB,EAAAxK,KAAK,KACS,KAAvBqK,EAAWC,UAChB9V,KAAKiW,wBAAwB1X,EAAKsX,EAAW1C,QAC7CnT,KAAK4V,WAAWtV,OAAO/B,MAMzB,OAFAsX,EAAUC,UAEH,CAAE3C,OAAAA,EAAQ2B,QAAAA,KAOnBpW,EAAAwX,kBAAA,MACCnW,YAAmBoT,GAAAnT,KAAAmT,OAAAA,EACnBpT,wHC5OD,MAAMoW,EAQLpW,YAAYN,GACXO,KAAKP,QAAUA,EACfO,KAAKgM,KAAOmK,EAAKC,UACjBpW,KAAKqW,KAAOF,EAAKC,WATFD,EAAAC,UAAY,IAAID,OAAUtc,GAa3C6E,EAAA4X,WAAA,MAAAvW,cAESC,KAAAuW,OAAkBJ,EAAKC,UACvBpW,KAAAwW,MAAiBL,EAAKC,UACtBpW,KAAAyW,MAAgB,EAExBvX,WACC,OAAOc,KAAKyW,MAGb1W,UACC,OAAOC,KAAKuW,SAAWJ,EAAKC,UAG7BrW,QACCC,KAAKuW,OAASJ,EAAKC,UACnBpW,KAAKwW,MAAQL,EAAKC,UAClBpW,KAAKyW,MAAQ,EAGd1W,QAAQN,GACP,OAAOO,KAAK0W,QAAQjX,GAAS,GAG9BM,KAAKN,GACJ,OAAOO,KAAK0W,QAAQjX,GAAS,GAGtBM,QAAQN,EAAYkX,GAC3B,MAAMC,EAAU,IAAIT,EAAK1W,GACzB,GAAIO,KAAKuW,SAAWJ,EAAKC,UACxBpW,KAAKuW,OAASK,EACd5W,KAAKwW,MAAQI,OAEP,GAAID,EAAU,CAEpB,MAAME,EAAU7W,KAAKwW,MACrBxW,KAAKwW,MAAQI;AACbA,EAAQP,KAAOQ,EACfA,EAAQ7K,KAAO4K,MAET,CAEN,MAAME,EAAW9W,KAAKuW,OACtBvW,KAAKuW,OAASK,EACdA,EAAQ5K,KAAO8K,EACfA,EAAST,KAAOO,EAEjB5W,KAAKyW,OAAS,EAEd,IAAIM,GAAY,EAChB,MAAO,KACDA,IACJA,GAAY,EACZ/W,KAAKgX,QAAQJ,KAKhB7W,QACC,GAAIC,KAAKuW,SAAWJ,EAAKC,UAElB,CACN,MAAMa,EAAMjX,KAAKuW,OAAO9W,QAExB,OADAO,KAAKgX,QAAQhX,KAAKuW,QACXU,GAITlX,MACC,GAAIC,KAAKwW,QAAUL,EAAKC,UAEjB,CACN,MAAMa,EAAMjX,KAAKwW,MAAM/W,QAEvB,OADAO,KAAKgX,QAAQhX,KAAKwW,OACXS,GAIDlX,QAAQ6P,GACf,GAAIA,EAAKyG,OAASF,EAAKC,WAAaxG,EAAK5D,OAASmK,EAAKC,UAAW,CAEjE,MAAMc,EAAStH,EAAKyG,KACpBa,EAAOlL,KAAO4D,EAAK5D,KACnB4D,EAAK5D,KAAKqK,KAAOa,OAEPtH,EAAKyG,OAASF,EAAKC,WAAaxG,EAAK5D,OAASmK,EAAKC,WAE7DpW,KAAKuW,OAASJ,EAAKC,UACnBpW,KAAKwW,MAAQL,EAAKC,WAERxG,EAAK5D,OAASmK,EAAKC,WAE7BpW,KAAKwW,MAAQxW,KAAKwW,MAAOH,KACzBrW,KAAKwW,MAAMxK,KAAOmK,EAAKC,WAEbxG,EAAKyG,OAASF,EAAKC,YAE7BpW,KAAKuW,OAASvW,KAAKuW,OAAQvK,KAC3BhM,KAAKuW,OAAOF,KAAOF,EAAKC,WAIzBpW,KAAKyW,OAAS,EAGf1W,WACC,IAAIN,EACAmQ,EAAO5P,KAAKuW,OAChB,MAAO,CACNvK,KAAI,IACC4D,IAASuG,EAAKC,UACVe,EAAAtL,KAGHpM,EAGJA,EAAQb,MAAQgR,EAAKnQ,QAFrBA,EAAU,CAAEqM,MAAM,EAAOlN,MAAOgR,EAAKnQ,SAItCmQ,EAAOA,EAAK5D,KACLvM,IAKVM,UACC,MAAM5J,EAAc,GACpB,IAAK,IAAIyZ,EAAO5P,KAAKuW,OAAQ3G,IAASuG,EAAKC,UAAWxG,EAAOA,EAAK5D,KACjE7V,EAAOc,KAAK2Y,EAAKnQ,SAElB,OAAOtJ,2ECtIT,IAAiBihB;kDAAjB,SAAiBA,GAMhB,SAAgB5L,EAAQ6L,GACvB,MAAO,CAACtU,EAAUuU,EAAW,KAAMvC,KAElC,IACI5e,EADAohB,GAAU,EAkBd,OAhBAphB,EAASkhB,EAAMze,IACd,IAAI2e,EAQJ,OANWphB,EACVA,EAAO2e,UAEPyC,GAAU,EAGJxU,EAAS9D,KAAKqY,EAAU1e,IAC7B,KAAMmc,GAELwC,GACHphB,EAAO2e,UAGD3e,GAQT,SAAgBsD,EAAU4d,EAAiB5d,GAC1C,OAAO+d,EAAS,CAACzU,EAAUuU,EAAW,KAAMvC,IAAiBsC,EAAMjhB,GAAK2M,EAAS9D,KAAKqY,EAAU7d,EAAIrD,IAAK,KAAM2e,IAOhH,SAAgB1V,EAAWgY,EAAiBI,GAC3C,OAAOD,EAAS,CAACzU,EAAUuU,EAAW,KAAMvC,IAAiBsC,EAAMjhB,IAAOqhB,EAAKrhB,GAAI2M,EAAS9D,KAAKqY,EAAUlhB,IAAO,KAAM2e,IASzH,SAAgB1M,EAAUgP,EAAiBhP,GAC1C,OAAOmP,EAAS,CAACzU,EAAUuU,EAAW,KAAMvC,IAAiBsC,EAAMze,GAAKyP,EAAOzP,IAAMmK,EAAS9D,KAAKqY,EAAU1e,GAAI,KAAMmc,IAsBxH,SAAgB7K,EAAamN,EAAiBK,EAA6CC,GAC1F,IAAIC,EAAwBD,EAE5B,OAAOle,EAAU4d,EAAOze,GACvBgf,EAASF,EAAME,EAAQhf,IAUzB,SAAgB4e,EAAYH,GAC3B,IAAItU,EACJ,MAAM8U,EAAU,IAAIC,EAAW,CAC9B/X,qBACCgD,EAAWsU,EAAMQ,EAAQE,KAAMF,IAEhC9X,uBACCgD,EAAS+R,aAIX,OAAO+C,EAAQR,MAchB,SAAgBxV,EAAewV,EAAiBK,EAA6C5V,EAAgB,IAAKkW,GAAU,EAAOC,GAElI,IAAIC,EACAN,OAAwB/d,EACxBse,OAActe,EACdue,EAAoB,EAExB,MAAMP,EAAU,IAAIC,EAAW,CAC9BG,qBAAAA,EACAlY,qBACCmY,EAAeb,EAAMgB,IACpBD,IACAR,EAASF,EAAME,EAAQS,GAEnBL,IAAYG,IACfN,EAAQE,KAAKH,GACbA,OAAS/d,GAGVsI,aAAagW,GACbA,EAAS/V,WAAW,KACnB,MAAMkW,EAAUV,EAChBA,OAAS/d,EACTse,OAASte,IACJme,GAAWI,EAAoB,IACnCP,EAAQE,KAAKO,GAGdF,EAAoB,GAClBtW,MAGL/B,uBACCmY,EAAapD,aAIf,OAAO+C,EAAQR,MAiBhB,SAAgBkB,EAASlB,GACxB,IACImB,EADAC,GAAY,EAGhB,OAAOpQ,EAAOgP,EAAOzY,IACpB,MAAM8Z,EAAaD,GAAa7Z,IAAU4Z,EAG1C,OAFAC,GAAY,EACZD,EAAQ5Z,EACD8Z,IAhLItB,EAAA1C,KAAmB,IAAMiE,EAAAlE,WAAWC,KAKjC0C,EAAA5L,KAAIA,EA6BJ4L,EAAA3d,IAAGA;AAQH2d,EAAA/X,QAAOA,EAUP+X,EAAA/O,OAAMA,EAON+O,EAAAwB,OAAhB,SAA0BvB,GACzB,OAAOA,GAOQD,EAAAyB,IAAhB,YAA0BC,GACzB,MAAO,CAAC/V,EAAUuU,EAAW,KAAMvC,IAAiB4D,EAAAzD,sBAAsB4D,EAAOrf,IAAI4d,GAASA,EAAMze,GAAKmK,EAAS9D,KAAKqY,EAAU1e,GAAI,KAAMmc,MAO5HqC,EAAAlN,OAAMA,EAcNkN,EAAAI,SAAQA,EAyBRJ,EAAAvV,SAAQA,EA6CRuV,EAAA2B,UAAhB,SAA6B1B,GAC5B,MAAMxR,GAAQ,IAAI3O,MAAO8hB,UACzB,OAAOvf,EAAI+R,EAAK6L,GAAQ4B,IAAK,IAAI/hB,MAAO8hB,UAAYnT,IAOrCuR,EAAAmB,MAAKA,EAkCLnB,EAAA8B,OAAhB,SAA0B7B,EAAiB8B,GAAW,EAAOC,EAAe,IAC3E,IAAIF,EAAqBE,EAAQphB,QAE7B+K,EAA+BsU,EAAMze,IACpCsgB,EACHA,EAAOjiB,KAAK2B,GAEZif,EAAQE,KAAKnf,KAIf,MAAMygB,EAAQ,KACTH,GACHA,EAAO7Z,QAAQzG,GAAKif,EAAQE,KAAKnf,IAElCsgB,EAAS,MAGJrB,EAAU,IAAIC,EAAW,CAC9B/X,qBACMgD,IACJA,EAAWsU,EAAMze,GAAKif,EAAQE,KAAKnf,MAIrCmH,wBACKmZ,IACCC,EACH/W,WAAWiX,GAEXA,MAKHtZ,uBACKgD,GACHA,EAAS+R,UAEV/R,EAAW,QAIb,OAAO8U,EAAQR,OAgBhB,MAAMiC,EAELvZ,YAAqBsX,GAAArX,KAAAqX,MAAAA,EAErBtX,IAAOQ,GACN,OAAO,IAAI+Y,EAAe7f,EAAIuG,KAAKqX,MAAO9W,IAG3CR,QAAQQ,GACP,OAAO,IAAI+Y,EAAeja,EAAQW,KAAKqX,MAAO9W,IAG/CR,OAAOQ,GACN,OAAO,IAAI+Y,EAAejR,EAAOrI,KAAKqX,MAAO9W,IAG9CR,OAAU2X,EAA6CC,GACtD,OAAO,IAAI2B,EAAepP,EAAOlK,KAAKqX,MAAOK,EAAOC,IAGrD5X,QACC,OAAO,IAAIuZ,EAAef,EAAMvY,KAAKqX,QAKtCtX,SAAY2X,EAA6C5V,EAAgB,IAAKkW,GAAU,EAAOC,GAC9F,OAAO,IAAIqB,EAAezX,EAAS7B,KAAKqX,MAAOK,EAAO5V,EAAOkW,EAASC,IAGvElY,GAAGgD,EAAyBuU,EAAevC,GAC1C,OAAO/U,KAAKqX,MAAMtU,EAAUuU,EAAUvC,GAGvChV,KAAKgD,EAAyBuU,EAAevC,GAC5C,OAAOvJ,EAAKxL,KAAKqX,MAAV7L,CAAiBzI,EAAUuU,EAAUvC,IAI9BqC,EAAAxK,MAAhB,SAAyByK,GACxB,OAAO,IAAIiC,EAAejC;AAQXD,EAAAmC,qBAAhB,SAAwC1B,EAA2B2B,EAAmB/f,EAA6BggB,CAAAA,GAAMA,IACxH,MAAMlZ,EAAK,IAAIW,IAAgB/K,EAAO4hB,KAAKte,KAAOyH,IAG5C/K,EAAS,IAAI2hB,EAAW,CAAE4B,mBAFL,IAAM7B,EAAQ8B,GAAGH,EAAWjZ,GAEHqZ,qBADvB,IAAM/B,EAAQgC,eAAeL,EAAWjZ,KAGrE,OAAOpK,EAAOkhB,OAQCD,EAAA0C,oBAAhB,SAAuCjC,EAA0B2B,EAAmB/f,EAA6BggB,CAAAA,GAAMA,IACtH,MAAMlZ,EAAK,IAAIW,IAAgB/K,EAAO4hB,KAAKte,KAAOyH,IAG5C/K,EAAS,IAAI2hB,EAAW,CAAE4B,mBAFL,IAAM7B,EAAQkC,iBAAiBP,EAAWjZ,GAEjBqZ,qBADvB,IAAM/B,EAAQmC,oBAAoBR,EAAWjZ,KAG1E,OAAOpK,EAAOkhB,OAGCD,EAAA6C,YAAhB,SAAqCC,GACpC,MAAMrC,EAAU,IAAIC,EACpB,IAAIY,GAAa,EAajB,OAXAwB,EACElhB,UAAKa,EAAW,IAAM,MACtBb,KAAK,KACA0f,EAGJb,EAAQE,UAAKle,GAFbuI,WAAW,IAAMyV,EAAQE,UAAKle,GAAY,KAM7C6e,GAAa,EACNb,EAAQR,OAGAD,EAAA+C,UAAhB,SAA6B9C,GAC5B,OAAO,IAAI7e,QAAQC,GAAK+S,EAAK6L,EAAL7L,CAAY/S,KAhWtC,CAAiB2e,EAAA1Y,EAAA0Y,QAAA1Y,EAAA0Y,MAAK,KA8WtB,IAAIgD,GAA+B,EACnC1b,EAAA2b,8BAAA,SAA8ChU,GAC7C,MAAMiU,EAAWF,EAEjB,OADAA,EAA8B/T,EACvB,CACNtG,UACCqa,EAA8BE,KAKjC,MAAMC,EAKLxa,YACUya,EACAxjB,EAAe6N,KAAKiG,SAAS2P,SAAS,IAAIziB,MAAM,EAAG,IADnDgI,KAAAwa,gBAAAA,EACAxa,KAAAhJ,KAAAA,EAJFgJ,KAAA0a,eAAyB,EAOjC3a,UACKC,KAAK2a,SACR3a,KAAK2a,QAAQnZ,QAIfzB,MAAM6a,GAEL,IAAIC,EAAYT,EAKhB,GAJoC,iBAAzBpa,KAAKwa,kBACfK,EAAY7a,KAAKwa,iBAGdK,GAAa,GAAKD,EAAgBC,EACrC,OAGI7a,KAAK2a,UACT3a,KAAK2a,QAAU,IAAI1a;CAEpB,MAAM6C,GAAQ,IAAIhE,OAAQgE,MAAOqB,MAAM,MAAMnM,MAAM,GAAG2B,KAAK,MACrDwF,EAASa,KAAK2a,QAAQza,IAAI4C,IAAU,EAI1C,GAHA9C,KAAK2a,QAAQva,IAAI0C,EAAO3D,EAAQ,GAChCa,KAAK0a,gBAAkB,EAEnB1a,KAAK0a,gBAAkB,EAAG,CAM7B,IAAII,EAHJ9a,KAAK0a,eAA6B,GAAZG,EAItB,IAAIE,EAAmB,EACvB/a,KAAK2a,QAAQtb,QAAQ,CAACF,EAAO2D,OACvBgY,GAAYC,EAAW5b,KAC3B2b,EAAWhY,EACXiY,EAAW5b,KAIbvI,QAAQoK,KAAK,IAAIhB,KAAKhJ,kDAAkD4jB,gDAA4DG,OACpInkB,QAAQoK,KAAK8Z,GAGd,MAAO,KACN,MAAM3b,EAASa,KAAK2a,QAASza,IAAI4C,IAAU,EAC3C9C,KAAK2a,QAASva,IAAI0C,EAAO3D,EAAQ,KA0BpC,MAAa2Y,EAWZ/X,YAAYkQ,GALJjQ,KAAAgb,WAAqB,EAM5Bhb,KAAKib,SAAWhL,EAChBjQ,KAAKkb,YAAcd,EAA8B,EAC9C,IAAIG,EAAeva,KAAKib,UAAYjb,KAAKib,SAAShD,2BAClDpe,EAOJwd,YAwDC,OAvDKrX,KAAKmb,SACTnb,KAAKmb,OAAS,CAACpY,EAAyBuU,EAAgBvC,KAClD/U,KAAKob,aACTpb,KAAKob,WAAa,IAAIC,EAAA/E,YAGvB,MAAMgF,EAAgBtb,KAAKob,WAAWG,UAElCD,GAAiBtb,KAAKib,UAAYjb,KAAKib,SAASvB,oBACnD1Z,KAAKib,SAASvB,mBAAmB1Z,MAGlC,MAAMwb,EAASxb,KAAKob,WAAWnkB,KAAMqgB,EAAsB,CAACvU,EAAUuU,GAAtBvU,GAWhD,IAAI0Y,EAKAtlB,EAwBJ,OAtCImlB,GAAiBtb,KAAKib,UAAYjb,KAAKib,SAASS,uBACnD1b,KAAKib,SAASS,sBAAsB1b;AAGjCA,KAAKib,UAAYjb,KAAKib,SAASU,kBAClC3b,KAAKib,SAASU,iBAAiB3b,KAAM+C,EAAUuU,GAK5CtX,KAAKkb,cACRO,EAAgBzb,KAAKkb,YAAYU,MAAM5b,KAAKob,WAAWlc,OAIxD/I,EAAS,CACR2e,QAAS,KAKR,GAJI2G,GACHA,IAEDtlB,EAAO2e,QAAUgD,EAAQ+D,OACpB7b,KAAKgb,YACTQ,IACIxb,KAAKib,UAAYjb,KAAKib,SAASrB,sBAAsB,CAClC5Z,KAAKob,aAAepb,KAAKob,WAAWG,WAEzDvb,KAAKib,SAASrB,qBAAqB5Z,SAMpC+U,aAAuB4D,EAAAvD,gBAC1BL,EAAY1U,IAAIlK,GACNuS,MAAMC,QAAQoM,IACxBA,EAAY9d,KAAKd,GAGXA,IAGF6J,KAAKmb,OAObpb,KAAKsX,GACJ,GAAIrX,KAAKob,WAAY,CAKfpb,KAAK8b,iBACT9b,KAAK8b,eAAiB,IAAIT,EAAA/E,YAG3B,IAAK,IAAIyF,EAAO/b,KAAKob,WAAW7O,WAAY3T,EAAImjB,EAAK/P,QAASpT,EAAEkT,KAAMlT,EAAImjB,EAAK/P,OAC9EhM,KAAK8b,eAAe7kB,KAAK,CAAC2B,EAAEgG,MAAOyY,IAGpC,KAAOrX,KAAK8b,eAAe5c,KAAO,GAAG,CACpC,MAAO6D,EAAUsU,GAASrX,KAAK8b,eAAeE,QAC9C,IACyB,mBAAbjZ,EACVA,EAAS9D,UAAKpF,EAAWwd,GAEzBtU,EAAS,GAAG9D,KAAK8D,EAAS,GAAIsU,GAE9B,MAAOze,GACRuP,EAAA9E,kBAAkBzK,MAMtBmH,UACKC,KAAKob,YACRpb,KAAKob,WAAW5Z,QAEbxB,KAAK8b,gBACR9b,KAAK8b,eAAeta,QAEjBxB,KAAKkb,aACRlb,KAAKkb,YAAYpG,UAElB9U,KAAKgb,WAAY,GA5HnBtc,EAAAoZ,QAAAA,EAEyBA,EAAA+D,MAAQ;CA8HjCnd,EAAAud,iBAAA,cAAyCnE,EAMxC/X,YAAYkQ,GACX3L,MAAM2L,GALCjQ,KAAAkc,UAAY,EACZlc,KAAAmc,YAAc,IAAId,EAAA/E,WAKzBtW,KAAKoc,SAAWnM,GAAWA,EAAQyH,MAGpC3X,QACCC,KAAKkc,YAGNnc,SACC,GAAuB,IAAnBC,KAAKkc,WAAwC,KAAnBlc,KAAKkc,UAClC,GAAIlc,KAAKoc,SAAU,CAGlB,MAAMtD,EAAS9Y,KAAKmc,YAAYE,UAChCrc,KAAKmc,YAAY3a,QACjB8C,MAAMyT,KAAK/X,KAAKoc,SAAStD,SAKzB,MAAQ9Y,KAAKkc,WAAuC,IAA1Blc,KAAKmc,YAAYjd,MAC1CoF,MAAMyT,KAAK/X,KAAKmc,YAAYH,SAMhCjc,KAAKsX,GACArX,KAAKob,aACe,IAAnBpb,KAAKkc,UACRlc,KAAKmc,YAAYllB,KAAKogB,GAEtB/S,MAAMyT,KAAKV,MAUf3Y,EAAA4d,aAAA,cAAwDxE,EAIvD/X,gBAAgB5F,EAA4B4N,EAA0BwU,GACrE,GAAKvc,KAAKob,WAAV,CAIKpb,KAAKwc,sBACTxc,KAAKwc,oBAAsB,IAAInB,EAAA/E,YAGhC,IAAK,IAAIyF,EAAO/b,KAAKob,WAAW7O,WAAY3T,EAAImjB,EAAK/P,QAASpT,EAAEkT,KAAMlT,EAAImjB,EAAK/P,OAC9EhM,KAAKwc,oBAAoBvlB,KAAK,CAAC2B,EAAEgG,MAAOzE,IAGzC,KAAO6F,KAAKwc,oBAAoBtd,KAAO,IAAM6I,EAAMG,yBAAyB,CAE3E,MAAOnF,EAAU5I,GAAQ6F,KAAKwc,oBAAoBR,QAC5CS,EAA4B,GAE5BpF,EAAQ1Z,OAAA+e,OAAA/e,OAAA+e,OAAA,GACVviB,GAAI,CACPwiB,UAAYlY,IACX,GAAI9G,OAAOif,SAASH,GACnB,MAAM,IAAI3d,MAAM;CAEbyd,IACH9X,EAAI8X,EAAY9X,EAAuB,mBAAb1B,EAA0BA,EAAWA,EAAS,KAEzE0Z,EAAUxlB,KAAKwN,MAIjB,IACyB,mBAAb1B,EACVA,EAAS9D,UAAKpF,EAAWwd,GAEzBtU,EAAS,GAAG9D,KAAK8D,EAAS,GAAIsU,GAE9B,MAAOze,GACRuP,EAAA9E,kBAAkBzK,GAClB,SAKD+E,OAAO6X,OAAOiH,SACRjkB,QAAQgB,IAAIijB,GAAWvf,MAAMtE,GAAKuP,EAAA9E,kBAAkBzK,QAK7D8F,EAAAme,iBAAA,MAMC9c,cAHQC,KAAA8c,cAAe,EACf9c,KAAA8Y,OAA+D,GAGtE9Y,KAAK6X,QAAU,IAAIC,EAAW,CAC7B4B,mBAAoB,IAAM1Z,KAAK0Z,qBAC/BE,qBAAsB,IAAM5Z,KAAK4Z,yBAInCvC,YACC,OAAOrX,KAAK6X,QAAQR,MAGrBtX,IAAIsX,GACH,MAAMze,EAAI,CAAEye,MAAOA,EAAOtU,SAAU,MACpC/C,KAAK8Y,OAAO7hB,KAAK2B,GAEboH,KAAK8c,cACR9c,KAAK+c,KAAKnkB,GAYX,OAAO+f,EAAAxD,aAAaa,EAAAxK,KATJ,KACXxL,KAAK8c,cACR9c,KAAKgd,OAAOpkB,GAGb,MAAMqkB,EAAMjd,KAAK8Y,OAAOnX,QAAQ/I,GAChCoH,KAAK8Y,OAAOhhB,OAAOmlB,EAAK,MAMlBld,qBACPC,KAAK8c,cAAe,EACpB9c,KAAK8Y,OAAOzZ,QAAQzG,GAAKoH,KAAK+c,KAAKnkB,IAG5BmH,uBACPC,KAAK8c,cAAe,EACpB9c,KAAK8Y,OAAOzZ,QAAQzG,GAAKoH,KAAKgd,OAAOpkB,IAG9BmH,KAAKnH,GACZA,EAAEmK,SAAWnK,EAAEye,MAAMlN,GAAKnK,KAAK6X,QAAQE,KAAK5N,IAGrCpK,OAAOnH,GACVA,EAAEmK,UACLnK,EAAEmK,SAAS+R,UAEZlc,EAAEmK,SAAW,KAGdhD,UACCC,KAAK6X,QAAQ/C,YAwBfpW,EAAAwe,cAAA;AAAAnd,cAESC,KAAAmd,QAAwB,GAEhCpd,UAAasX,GACZ,MAAO,CAACtU,EAAUuU,EAAWvC,IACrBsC,EAAMjhB,IACZ,MAAM8iB,EAASlZ,KAAKmd,QAAQnd,KAAKmd,QAAQ7mB,OAAS,GAE9C4iB,EACHA,EAAOjiB,KAAK,IAAM8L,EAAS9D,KAAKqY,EAAUlhB,IAE1C2M,EAAS9D,KAAKqY,EAAUlhB,SAEvByD,EAAWkb,GAIhBhV,aAAuBQ,GACtB,MAAM2Y,EAAyB,GAC/BlZ,KAAKmd,QAAQlmB,KAAKiiB,GAClB,MAAM/O,EAAI5J,IAGV,OAFAP,KAAKmd,QAAQ3W,MACb0S,EAAO7Z,QAAQga,GAASA,KACjBlP,IAUTzL,EAAA0e,MAAA,MAAArd,cAESC,KAAAqd,WAAY,EACZrd,KAAAsd,WAAuBlG,EAAM1C,KAC7B1U,KAAAud,mBAAkC5E,EAAAlE,WAAWC,KAEpC1U,KAAA6X,QAAU,IAAIC,EAAW,CACzC4D,sBAAuB,KACtB1b,KAAKqd,WAAY,EACjBrd,KAAKud,mBAAqBvd,KAAKsd,WAAWtd,KAAK6X,QAAQE,KAAM/X,KAAK6X,UAEnE+B,qBAAsB,KACrB5Z,KAAKqd,WAAY,EACjBrd,KAAKud,mBAAmBzI,aAIjB9U,KAAAqX,MAAkBrX,KAAK6X,QAAQR,MAExCmG,UAAUnG,GACTrX,KAAKsd,WAAajG,EAEdrX,KAAKqd,YACRrd,KAAKud,mBAAmBzI,UACxB9U,KAAKud,mBAAqBlG,EAAMrX,KAAK6X,QAAQE,KAAM/X,KAAK6X,UAI1D9X,UACCC,KAAKud,mBAAmBzI,UACxB9U,KAAK6X,QAAQ/C,sHCv0Bf,MAAM2I,EAAgB9f,OAAO6X,QAAO,SAAUlW,EAAUoe,GACvD,MAAMvF,EAAS/V,WAAW9C,EAASxI,KAAK4mB,GAAU,GAClD,MAAO;AAAE3d,UAAYoC,aAAagW,QAGnC,IAAiBwF,GAAjB,SAAiBA,GAEAA,EAAAC,oBAAhB,SAAoC3I,GACnC,OAAIA,IAAU0I,EAAkBjJ,MAAQO,IAAU0I,EAAkBE,YAGhE5I,aAAiB6I,MAGhB7I,GAA0B,iBAAVA,KAGkD,kBAAxDA,EAA4B/M,yBACyB,mBAAxD+M,EAA4B8I,2BAI5BJ,EAAAjJ,KAA0B/W,OAAO6X,OAAO,CACpDtN,yBAAyB,EACzB6V,wBAAyBC,EAAA5G,MAAM1C,OAGnBiJ,EAAAE,UAA+BlgB,OAAO6X,OAAO,CACzDtN,yBAAyB,EACzB6V,wBAAyBN,IAxB3B,CAAiBE,EAAAjf,EAAAif,oBAAAjf,EAAAif,kBAAiB,KA4BlC,MAAMG,EAAN/d,cAESC,KAAAie,cAAwB,EACxBje,KAAAke,SAAgC,KAEjCne,SACDC,KAAKie,eACTje,KAAKie,cAAe,EAChBje,KAAKke,WACRle,KAAKke,SAASnG,UAAKle,GACnBmG,KAAK8U,YAKR5M,8BACC,OAAOlI,KAAKie,aAGbF,8BACC,OAAI/d,KAAKie,aACDR,GAEHzd,KAAKke,WACTle,KAAKke,SAAW,IAAIF,EAAAlG,SAEd9X,KAAKke,SAAS7G,OAGftX,UACFC,KAAKke,WACRle,KAAKke,SAASpJ,UACd9U,KAAKke,SAAW,OAKnBxf,EAAAyf,wBAAA,MAKCpe,YAAYyN,GAHJxN,KAAAoe,YAA6BvkB,EAC7BmG,KAAAqe,qBAAgCxkB;AAGvCmG,KAAKqe,gBAAkB7Q,GAAUA,EAAOuQ,wBAAwB/d,KAAKse,OAAQte,MAG9E+H,YAMC,OALK/H,KAAKoe,SAGTpe,KAAKoe,OAAS,IAAIN,GAEZ9d,KAAKoe,OAGbre,SACMC,KAAKoe,OAMCpe,KAAKoe,kBAAkBN,GAEjC9d,KAAKoe,OAAOE,SAJZte,KAAKoe,OAAST,EAAkBE,UAQlC9d,QAAQue,GAAkB,GACrBA,GACHte,KAAKse,SAEFte,KAAKqe,iBACRre,KAAKqe,gBAAgBvJ,UAEjB9U,KAAKoe,OAICpe,KAAKoe,kBAAkBN,GAEjC9d,KAAKoe,OAAOtJ,UAJZ9U,KAAKoe,OAAST,EAAkBjJ,8ECpHnC,SAAgB6J,EAAc9V,GAC7B,OAAOA,GAA2C,mBAAdA,EAAKzP,KAO1C,SAAgBwlB,EAA2Blf,GAC1C,MAAMmf,EAAS,IAAIC,EAAAP,wBAEbQ,EAAWrf,EAASmf,EAAO1W,OAC3BmS,EAAU,IAAI1hB,QAAW,CAACyB,EAASC,KACxCukB,EAAO1W,MAAMgW,wBAAwB,KACpC7jB,EAAO4Y,EAAOlP,cAEfpL,QAAQyB,QAAQ0kB,GAAU3lB,KAAK4F,IAC9B6f,EAAO3J,UACP7a,EAAQ2E,IACN9F,IACF2lB,EAAO3J,UACP5a,EAAOpB,OAIT,OAA6B,IAAI,MAChCiH,SACC0e,EAAOH,SAERve,KAAqC9F,EAA2EC,GAC/G,OAAOggB,EAAQlhB,KAAKiB,EAASC,GAE9B6F,MAAuB7F,GACtB,OAAO8F,KAAKhH,UAAKa,EAAWK,GAE7B6F,QAAQ6e,GACP,OAAO1E,EAAQ2E,QAAQD,sDApC1BlgB,EAAA6f,WAAAA,EAQA7f,EAAA8f,wBAAAA,EAmCA9f,EAAAogB,iBAAA,SAAoC5E,EAAqBnS,EAA0BgX;AAClF,OAAOvmB,QAAQwmB,KAAK,CAAC9E,EAAS,IAAI1hB,QAAWyB,GAAW8N,EAAMgW,wBAAwB,IAAM9jB,EAAQ8kB,QAGrGrgB,EAAAugB,UAAA,SAA6B3f,GAC5B,OAAO,IAAI9G,QAAW,CAACyB,EAASC,KAC/B,MAAM+Z,EAAO3U,IACTif,EAActK,GACjBA,EAAKjb,KAAKiB,EAASC,GAEnBD,EAAQga,MAmCX,MAAaiL,EAMZnf,cACCC,KAAKmf,cAAgB,KACrBnf,KAAKof,cAAgB,KACrBpf,KAAKqf,qBAAuB,KAG7Btf,MAASuf,GACR,GAAItf,KAAKmf,cAAe,CAGvB,GAFAnf,KAAKqf,qBAAuBC,GAEvBtf,KAAKof,cAAe,CACxB,MAAMG,EAAa,KAClBvf,KAAKof,cAAgB,KAErB,MAAMjpB,EAAS6J,KAAKwf,MAAMxf,KAAKqf,sBAG/B,OAFArf,KAAKqf,qBAAuB,KAErBlpB,GAGR6J,KAAKof,cAAgB,IAAI5mB,QAAQC,IAChCuH,KAAKmf,cAAenmB,KAAKumB,EAAYA,GAAYvmB,KAAKP,KAIxD,OAAO,IAAID,QAAQ,CAACC,EAAGG,KACtBoH,KAAKof,cAAepmB,KAAKP,EAAGG,KAM9B,OAFAoH,KAAKmf,cAAgBG,IAEd,IAAI9mB,QAAQ,CAACC,EAAGG,KACtBoH,KAAKmf,cAAenmB,KAAM7C,IACzB6J,KAAKmf,cAAgB,KACrB1mB,EAAEtC,IACC2C,IACHkH,KAAKmf,cAAgB,KACrBvmB,EAAEE,QA5CN4F,EAAAwgB,UAAAA,EAkDAxgB,EAAA+gB,UAAA,MAAA1f,cAESC,KAAAiN,QAAwBzU,QAAQyB,QAAQ,MAEhD8F,MAAS2f,GACR,OAAO1f,KAAKiN,QAAUjN,KAAKiN,QAAQjU,KAAK,IAAM0mB,OA2BhD,MAAaC,EAQZ5f,YAAmB6f,GAAA5f,KAAA4f,aAAAA,EAClB5f,KAAK6f,QAAU,KACf7f,KAAK8f,kBAAoB,KACzB9f,KAAK+f,UAAY,KACjB/f,KAAKggB,SAAW;AAChBhgB,KAAKigB,KAAO,KAGblgB,QAAQkgB,EAA6Bne,EAAgB9B,KAAK4f,cA2BzD,OA1BA5f,KAAKigB,KAAOA,EACZjgB,KAAKkgB,gBAEAlgB,KAAK8f,oBACT9f,KAAK8f,kBAAoB,IAAItnB,QAAQ,CAACC,EAAGG,KACxCoH,KAAK+f,UAAYtnB,EACjBuH,KAAKggB,SAAWpnB,IACdI,KAAK,KAGP,GAFAgH,KAAK8f,kBAAoB,KACzB9f,KAAK+f,UAAY,KACb/f,KAAKigB,KAAM,CACd,MAAMA,EAAOjgB,KAAKigB,KAElB,OADAjgB,KAAKigB,KAAO,KACLA,QAMVjgB,KAAK6f,QAAUzd,WAAW,KACzBpC,KAAK6f,QAAU,KACX7f,KAAK+f,WACR/f,KAAK+f,UAAU,OAEdje,GAEI9B,KAAK8f,kBAGb/f,cACC,OAAwB,OAAjBC,KAAK6f,QAGb9f,SACCC,KAAKkgB,gBAEDlgB,KAAK8f,oBACJ9f,KAAKggB,UACRhgB,KAAKggB,SAASlN,EAAOlP,YAEtB5D,KAAK8f,kBAAoB,MAInB/f,gBACc,OAAjBC,KAAK6f,UACR1d,aAAanC,KAAK6f,SAClB7f,KAAK6f,QAAU,MAIjB9f,UACCC,KAAKkgB,iBArEPxhB,EAAAihB,QAAAA,EAkFAjhB,EAAAyhB,iBAAA,MAKCpgB,YAAY6f,GACX5f,KAAKogB,QAAU,IAAIT,EAAQC,GAC3B5f,KAAKqgB,UAAY,IAAInB,EAGtBnf,QAAQuf,EAAmCxd,GAC1C,OAAO9B,KAAKogB,QAAQE,QAAQ,IAAMtgB,KAAKqgB,UAAUb,MAAMF,GAAiBxd,GAGzE/B,cACC,OAAOC,KAAKogB,QAAQG,cAGrBxgB,SACCC,KAAKogB,QAAQ9B,SAGdve,UACCC,KAAKogB,QAAQtL,YAoCf,SAAgB+K,EAAQW,EAAgBzY;AACvC,OAAKA,EAIE,IAAIvP,QAAQ,CAACyB,EAASC,KAC5B,MAAMie,EAAS/V,WAAWnI,EAASumB,GACnCzY,EAAMgW,wBAAwB,KAC7B5b,aAAagW,GACbje,EAAO4Y,EAAOlP,gBAPR4a,EAAwBzW,GAAS8X,EAAQW,EAAQzY,IA/B1DrJ,EAAA+hB,QAAA,MAMC1gB,cACCC,KAAK0gB,SAAU,EACf1gB,KAAK2gB,SAAW,IAAInoB,QAAiB,CAACC,EAAGG,KACxCoH,KAAK4gB,iBAAmBnoB,IAI1BsH,SACC,OAAOC,KAAK0gB,QAGb3gB,OACCC,KAAK0gB,SAAU,EACf1gB,KAAK4gB,kBAAiB,GAGvB7gB,OACC,OAAOC,KAAK2gB,WAMdjiB,EAAAmhB,QAAAA,EAcAnhB,EAAAmiB,kBAAA,SAAkCC,EAAqBjB,EAAU,GAChE,MAAMkB,EAAQ3e,WAAW0e,EAASjB,GAClC,OAAOlH,EAAAxD,aAAa,IAAMhT,aAAa4e,KAGxCriB,EAAAsiB,aAAA,SAAgC9G,GAC/B,OAAOA,EAAQlhB,UAAKa,EAAWof,QAAKpf,IAQrC6E,EAAAuiB,SAAA,SAA4BC,GAC3B,MAAMC,EAAe,GACrB,IAAI3lB,EAAQ,EACZ,MAAMnF,EAAM6qB,EAAiB5qB,OAmB7B,OAAOkC,QAAQyB,QAAQ,MAAMjB,MAb7B,SAASooB,EAAYjrB,GAChBA,MAAAA,GACHgrB,EAAQlqB,KAAKd,GAGd,MAAMkQ,EARC7K,EAAQnF,EAAM6qB,EAAiB1lB,OAAa,KASnD,OAAI6K,EACIA,EAAErN,KAAKooB,GAGR5oB,QAAQyB,QAAQknB,OAMzBziB,EAAAU,MAAA,SAAyB8hB,EAAuCG,EAAgCpX,CAAAA,KAAOA,GAAG8U,EAAyB,MAClI,IAAIvjB,EAAQ,EACZ,MAAMnF,EAAM6qB,EAAiB5qB,OAEvBgrB,EAAgC,KACrC,GAAI9lB,GAASnF,EACZ,OAAOmC,QAAQyB,QAAQ8kB,GAGxB,MAAM9mB,EAAUipB,EAAiB1lB,KAGjC,OAFgBhD,QAAQyB,QAAQhC,KAEjBe,KAAK7C,GACfkrB,EAAWlrB,GACPqC,QAAQyB,QAAQ9D,GAGjBmrB,MAIT,OAAOA,KAaR,MAAaC,EAQZxhB,YAAYyhB,GANJxhB,KAAAyW,MAAQ,EAOfzW,KAAKwhB,uBAAyBA,EAC9BxhB,KAAKyhB,oBAAsB;AAC3BzhB,KAAK0hB,gBAAkB,EACvB1hB,KAAK2hB,YAAc,IAAI3D,EAAAlG,QAGxB8J,iBACC,OAAO5hB,KAAK2hB,YAAYtK,MAGzBnY,WACC,OAAOc,KAAKyW,MAIb1W,MAAM9H,GAGL,OAFA+H,KAAKyW,QAEE,IAAIje,QAAW,CAACC,EAAGG,KACzBoH,KAAKyhB,oBAAoBxqB,KAAK,CAAEgB,QAAAA,EAASQ,EAAAA,EAAGG,EAAAA,IAC5CoH,KAAK6hB,YAIC9hB,UACP,KAAOC,KAAKyhB,oBAAoBnrB,QAAU0J,KAAK0hB,gBAAkB1hB,KAAKwhB,wBAAwB,CAC7F,MAAMM,EAAe9hB,KAAKyhB,oBAAoBzF,QAC9Chc,KAAK0hB,kBAEL,MAAMxH,EAAU4H,EAAa7pB,UAC7BiiB,EAAQlhB,KAAK8oB,EAAarpB,EAAGqpB,EAAalpB,GAC1CshB,EAAQlhB,KAAK,IAAMgH,KAAK+hB,WAAY,IAAM/hB,KAAK+hB,aAIzChiB,WACPC,KAAKyW,QACLzW,KAAK0hB,kBAED1hB,KAAKyhB,oBAAoBnrB,OAAS,EACrC0J,KAAK6hB,UAEL7hB,KAAK2hB,YAAY5J,OAInBhY,UACCC,KAAK2hB,YAAY7M,WAxDnBpW,EAAA6iB,QAAAA,EA+DA,MAAaS,UAAiBT,EAE7BxhB,cACCuE,MAAM,IAHR5F,EAAAsjB,MAAAA,EAWAtjB,EAAAujB,cAAA,MAAAliB,cAEkBC,KAAAkiB,OAAS,IAAIjiB,IAE9BF,SAASoiB,GACR,MAAM5jB,EAAM4jB,EAAS1H,WACrB,IAAKza,KAAKkiB,OAAOhZ,IAAI3K,GAAM,CAC1B,MAAMihB,EAAQ,IAAIwC,EAClBxC,EAAMoC,WAAW,KAChBpC,EAAM1K,UACN9U,KAAKkiB,OAAO5hB,OAAO/B,KAGpByB,KAAKkiB,OAAO9hB,IAAI7B,EAAKihB,GAGtB,OAAOxf,KAAKkiB,OAAOhiB,IAAI3B,GAGxBwB,UACCC,KAAKkiB,OAAO7iB,QAAQmgB,GAASA,EAAM1K,WACnC9U,KAAKkiB,OAAO1gB;CAId9C,EAAA0jB,aAAA,MAKCriB,YAAYsiB,EAAqBxC,GAChC7f,KAAKoe,QAAU,EAEO,mBAAXiE,GAA4C,iBAAZxC,GAC1C7f,KAAKsiB,YAAYD,EAAQxC,GAI3B9f,UACCC,KAAKse,SAGNve,UACsB,IAAjBC,KAAKoe,SACRjc,aAAanC,KAAKoe,QAClBpe,KAAKoe,QAAU,GAIjBre,aAAasiB,EAAoBxC,GAChC7f,KAAKse,SACLte,KAAKoe,OAAShc,WAAW,KACxBpC,KAAKoe,QAAU,EACfiE,KACExC,GAGJ9f,YAAYsiB,EAAoBxC,IACV,IAAjB7f,KAAKoe,SAITpe,KAAKoe,OAAShc,WAAW,KACxBpC,KAAKoe,QAAU,EACfiE,KACExC,MAILnhB,EAAA6jB,cAAA,MAICxiB,cACCC,KAAKoe,QAAU,EAGhBre,UACCC,KAAKse,SAGNve,UACsB,IAAjBC,KAAKoe,SACRoE,cAAcxiB,KAAKoe,QACnBpe,KAAKoe,QAAU,GAIjBre,aAAasiB,EAAoBI,GAChCziB,KAAKse,SACLte,KAAKoe,OAASsE,YAAY,KACzBL,KACEI,KAIL,MAAaE,EAQZ5iB,YAAYsiB,EAAkCxC,GAC7C7f,KAAK4iB,cAAgB,EACrB5iB,KAAKqiB,OAASA,EACdriB,KAAK6f,QAAUA,EACf7f,KAAK6iB,eAAiB7iB,KAAK8iB,UAAUhsB,KAAKkJ,MAM3CD,UACCC,KAAKse,SACLte,KAAKqiB,OAAS,KAMftiB,SACKC,KAAK+iB,gBACR5gB,aAAanC,KAAK4iB,cAClB5iB,KAAK4iB,cAAgB,GAOvB7iB,SAAS+B,EAAQ9B,KAAK6f,SACrB7f,KAAKse,SACLte,KAAK4iB,aAAexgB,WAAWpC,KAAK6iB,eAAgB/gB,GAMrD/B,cACC,OAA8B,IAAvBC,KAAK4iB,aAGL7iB,YACPC,KAAK4iB,cAAgB;AACjB5iB,KAAKqiB,QACRriB,KAAKgjB,QAIGjjB,QACLC,KAAKqiB,QACRriB,KAAKqiB,UAzDR3jB,EAAAikB,iBAAAA,EA8DAjkB,EAAAukB,cAAA,cAAsCN,EAGrC5iB,YAAYsiB,EAA8BxC,GACzCvb,MAAM+d,EAAQxC,GAHP7f,KAAAkjB,MAAa,GAMrBnjB,KAAKojB,GACJnjB,KAAKkjB,MAAMjsB,KAAKksB,GAEXnjB,KAAK+iB,eACT/iB,KAAKojB,WAIGrjB,QACT,MAAMmjB,EAAQljB,KAAKkjB,MACnBljB,KAAKkjB,MAAQ,GAETljB,KAAKqiB,QACRriB,KAAKqiB,OAAOa,GAIdnjB,UACCC,KAAKkjB,MAAQ,GAEb5e,MAAMwQ,YAkBR,WACC,GAAmC,mBAAxBuO,qBAAoE,mBAAvBC,mBAAmC,CAC1F,MAAMC,EAA0B5lB,OAAO6X,OAAO,CAC7CgO,YAAY,EACZC,cAAa,IAAY,KAE1B/kB,EAAAglB,YAAerB,IACd,MAAMlK,EAAS/V,WAAW,IAAMigB,EAAOkB,IACvC,IAAIvf,GAAW,EACf,MAAO,CACNjE,UACKiE,IAGJA,GAAW,EACX7B,aAAagW,YAKhBzZ,EAAAglB,YAAc,CAACrB,EAAQxC,KACtB,MAAM1H,EAAiBkL,oBAAoBhB,EAA2B,iBAAZxC,EAAuB,CAAEA,QAAAA,QAAYhmB,GAC/F,IAAImK,GAAW,EACf,MAAO,CACNjE,UACKiE,IAGJA,GAAW,EACXsf,mBAAmBnL,OA7BxB,GAwCAzZ,EAAAilB,UAAA,MASC5jB,YAAY6jB,GAJJ5jB,KAAA6jB,SAAmB,EAK1B7jB,KAAK8jB,UAAY,KAChB,IACC9jB,KAAK0V,OAASkO,IACb,MAAO9qB,GACRkH,KAAK+jB,OAASjrB,UAEdkH,KAAK6jB,SAAU,IAGjB7jB,KAAKgkB,QAAUtlB,EAAAglB,YAAY,IAAM1jB,KAAK8jB,aAGvC/jB,UACCC,KAAKgkB,QAAQlP,UAGd/U,WAKC,GAJKC,KAAK6jB,UACT7jB,KAAKgkB,QAAQlP;AACb9U,KAAK8jB,aAEF9jB,KAAK+jB,OACR,MAAM/jB,KAAK+jB,OAEZ,OAAO/jB,KAAK0V,SAMdhX,EAAAulB,MAAOC,eAAwBjE,EAAyBne,EAAeqiB,GACtE,IAAIC,EAEJ,IAAK,IAAIhuB,EAAI,EAAGA,EAAI+tB,EAAS/tB,IAC5B,IACC,aAAa6pB,IACZ,MAAOtkB,GACRyoB,EAAYzoB,QAENkkB,EAAQ/d,GAIhB,MAAMsiB,MdhrBP5tB,EAFA,iBAAA6tB,OAEAA,OACA,iBAAAtjB,KAEAA,KAEA,GAGA,mBAAAujB,OAEAA,OAAA,6BAAA,IAAA,WAAA,OAAA/tB,EAAAC,MACA,iBAAAyH,QAAA,iBAAAA,OAAAS,UAEAT,OAAAS,QAAAnI,EAAAC,sGejGA,IAAI+tB,GAAa,EACbC,GAAe,EACfC,GAAW,EACXC,GAAY,EACZC,GAAS,EACTC,GAAS,EACTC,OAA8BhrB,EAC9BirB,EATqB,KAUrBroB,OAA8C5C,EAC9CkrB,OAAiClrB,EAiCrC,MAAMmrB,EAAyC,oBAAZnqB,cAAuD,IAArBA,QAAQoqB,eAAiE,IAA9BpqB,QAAQoqB,SAASC,UAA6C,aAAjBrqB,QAAQyX,KAGrK,GAAyB,iBAAdhF,WAA2B0X,GAoB/B,GAAuB,iBAAZnqB,QAAsB,CACvC0pB,EAAmC,UAArB1pB,QAAQsqB,SACtBX,EAAqC,WAArB3pB,QAAQsqB,SACxBV,EAAiC,UAArB5pB,QAAQsqB,SACpBN,EAvEwB,KAwExBC,EAxEwB,KAyExB,MAAMM,EAAevqB,QAAQC,IAAuB,kBACpD,GAAIsqB,EACH,IACC,MAAMC,EAAuBlqB,KAAKC,MAAMgqB,GAClCE,EAAWD,EAAU1qB,mBAAmB,KAC9CkqB,EAAUQ,EAAU3qB,OAEpBoqB,EAAYQ,GAhFU,KAiFtB7oB,EAA0B4oB,EAAU5oB;CACnC,MAAO7D,IAGV8rB,GAAY,OAtC6C,CACzDK,EAAazX,UAAUiY,UACvBhB,EAAaQ,EAAWpjB,QAAQ,YAAc,EAC9C6iB,EAAeO,EAAWpjB,QAAQ,cAAgB,EAClDijB,EAASG,EAAWpjB,QAAQ,cAAgB,KAAO2L,UAAUkY,gBAAkBlY,UAAUkY,eAAiB,EAC1Gf,EAAWM,EAAWpjB,QAAQ,UAAY,EAC1CgjB,GAAS,EAETG,EADAD,EAAUvX,UAAUmY,SAGpB,MAAMC,EAAyB,oBAAbC,UAA4BA,SAASC,eAAe,mCAChER,EAAeM,GAAMA,EAAGG,aAAa,iBAC3C,GAAIT,EACH,IACC,MAAMC,EAAuBlqB,KAAKC,MAAMgqB,GACxCP,EAAUQ,EAAU3qB,OACpB+B,EAA0B4oB,EAAU5oB,wBACpCqoB,EAAYO,EAAU1qB,mBAAmB,MAhEnB,KAiErB,MAAOgB,MAuBX,SAAkBmqB,GACjBA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UAJD,CAAkBpnB,EAAAonB,WAAApnB,EAAAonB,SAAQ,KAM1BpnB,EAAAqnB,iBAAA,SAAiCZ,GAChC,OAAQA,GACP,KAAA,EAAmB,MAAO,MAC1B,KAAA,EAAmB,MAAO,MAC1B,KAAA,EAAqB,MAAO,QAC5B,KAAA,EAAuB,MAAO,YAIhC,IAAIa,EAAS,EACTxB,EACHwB,EAAS,EACCzB,EACVyB,EAAS,EACCvB,IACVuB,EAAS,GAGGtnB,EAAAunB,UAAY1B,EACZ7lB,EAAAwnB,YAAc1B,EACd9lB,EAAAynB,QAAU1B,EACV/lB,EAAA0nB,SAAW1B,EACXhmB,EAAA2nB,MAAQ1B,EACRjmB,EAAA4nB,MAAQ1B,EACRlmB,EAAAymB,SAAWa,EACXtnB,EAAA6mB,UAAYR,EAEzBrmB,EAAA6nB,WAAA,WACC,OAAO7B,IAAcH,GAAoC,IAArB1pB,QAAQ2rB,UAQhC9nB,EAAA+mB,SAAWX,EAExB,SAAiB2B,GAEAA,EAAA7nB,MAAhB,WACC,OAAOF,EAAA+mB,UAGQgB,EAAAC,iBAAhB;AACC,OAAwB,IAApBhoB,EAAA+mB,SAASnvB,OACQ,OAAboI,EAAA+mB,SACG/mB,EAAA+mB,SAASnvB,QAAU,IACN,MAAhBoI,EAAA+mB,SAAS,IAA8B,MAAhB/mB,EAAA+mB,SAAS,IAA8B,MAAhB/mB,EAAA+mB,SAAS,KAMhDgB,EAAAE,UAAhB,WACC,MAAoB,OAAbjoB,EAAA+mB,UAjBT,CAAiB/mB,EAAA+nB,WAAA/nB,EAAA+nB,SAAQ,KA0BZ/nB,EAAAhE,OAASmqB,EAKTnmB,EAAArC,uBAAyBI,EAEtC,MAAMmqB,EAA4B,iBAAT7lB,KAAoBA,KAAyB,iBAAXsjB,OAAsBA,OAAS,GAC7E3lB,EAAAmoB,QAAeD,EAMfloB,EAAAooB,aAA8B,WAC1C,GAAIpoB,EAAAmoB,QAAQC,aACX,OAAOpoB,EAAAmoB,QAAQC,aAAahwB,KAAK4H,EAAAmoB,SAElC,GAAmC,mBAAxBnoB,EAAAmoB,QAAQE,cAA+BroB,EAAAmoB,QAAQG,cAAe,CAKxE,IAAIC,EAA2B,GAC/BvoB,EAAAmoB,QAAQ9M,iBAAiB,UAAYnhB,IACpC,GAAIA,EAAEuB,MAAQvB,EAAEuB,KAAK+sB,qBACpB,IAAK,IAAI9wB,EAAI,EAAGC,EAAM4wB,EAAQ3wB,OAAQF,EAAIC,EAAKD,IAAK,CACnD,MAAM+wB,EAAYF,EAAQ7wB,GAC1B,GAAI+wB,EAAU1N,KAAO7gB,EAAEuB,KAAK+sB,qBAG3B,OAFAD,EAAQnvB,OAAO1B,EAAG,QAClB+wB,EAAU7nB,cAMd,IAAI8nB,EAAS,EACb,OAAQ9nB,IACP,MAAM+nB,IAASD,EACfH,EAAQhwB,KAAK,CACZwiB,GAAI4N,EACJ/nB,SAAUA,IAEXZ,EAAAmoB,QAAQE,YAAY,CAAEG,qBAAsBG,GAAQ,MAGtD,GAAuB,oBAAZxsB,SAAuD,mBAArBA,QAAQse,SACpD,OAAOte,QAAQse,SAASriB,KAAK+D,SAE9B,MAAM8lB,EAAWnoB,QAAQyB,UACzB,OAAQqF,GAAuCqhB,EAAS3nB,KAAKsG,GApCnB,GAuC3C,SAAkBgoB,GACjBA,EAAAA,EAAA,QAAA,GAAA;AACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,MAAA,GAAA,QAHD,CAAkB5oB,EAAA4oB,kBAAA5oB,EAAA4oB,gBAAe,KAKpB5oB,EAAA6oB,GAAM/C,EAAc,EAA8BD,EAAY,EAA0B,4GC7MrG,MAAMiD,EAA4C,oBAAZ3sB,QAA2B,CAChE4sB,IAAG,IAAoB,IACvB3sB,IAAK6C,OAAOK,OAAO,MACnBmnB,eAAyB,OAAOuC,EAAAzB,UAAY,QAAUyB,EAAAxB,YAAc,SAAW,SAC/E/M,SAAS7Z,GAAmDooB,EAAAZ,aAAaxnB,IACtEzE,QAES6D,EAAA+oB,IAAMD,EAAYC,IAClB/oB,EAAA5D,IAAM0sB,EAAY1sB,IAClB4D,EAAAymB,SAAWqC,EAAYrC,SACvBzmB,EAAAya,SAAWqO,EAAYrO,mHCOpC,MAAMwO,EAAmB,GACnBC,EAAmB,GACnBC,EAAmB,GACnBC,EAAmB,IACnBC,EAAW,GACXC,EAAqB,GACrBC,EAAsB,GAI5B,MAAMC,UAA4BppB,MAEjCiB,YAAY/I,EAAcmxB,EAAkBC,GAE3C,IAAIC,EACoB,iBAAbF,GAAsD,IAA7BA,EAASxmB,QAAQ,SACpD0mB,EAAa,cACbF,EAAWA,EAAS3pB,QAAQ,QAAS,KAErC6pB,EAAa,UAGd,MAAM/V,GAA8B,IAAvBtb,EAAK2K,QAAQ,KAAc,WAAa,WACrD,IAAI2mB,EAAM,QAAQtxB,MAASsb,KAAQ+V,aAAsBF,IAGzD7jB,MADAgkB,GAAO,0BAA0BF,KAGjCpoB,KAAKjG,KAAO,wBAId,SAASwuB,EAAe3pB,EAAe5H,GACtC,GAAqB,iBAAV4H,EACV,MAAM,IAAIspB,EAAoBlxB,EAAM,SAAU4H,GAIhD,SAAS4pB,EAAgBzuB,GACxB,OAAOA,IAASiuB,GAAsBjuB,IAASkuB;AAGhD,SAASQ,EAAqB1uB,GAC7B,OAAOA,IAASiuB,EAGjB,SAASU,EAAoB3uB,GAC5B,OAAOA,GAAQ4tB,GAAoB5tB,GAAQ8tB,GAC1C9tB,GAAQ6tB,GAAoB7tB,GAAQ+tB,EAItC,SAASa,EAAgBxwB,EAAcywB,EAAyBC,EAAmBL,GAClF,IAIIzuB,EAJAkd,EAAM,GACN6R,EAAoB,EACpBC,GAAa,EACbC,EAAO,EAEX,IAAK,IAAI5yB,EAAI,EAAGA,GAAK+B,EAAK7B,SAAUF,EAAG,CACtC,GAAIA,EAAI+B,EAAK7B,OACZyD,EAAO5B,EAAKmW,WAAWlY,OAEnB,CAAA,GAAIoyB,EAAgBzuB,GACxB,MAGAA,EAAOiuB,EAGR,GAAIQ,EAAgBzuB,GAAO,CAC1B,GAAIgvB,IAAc3yB,EAAI,GAAc,IAAT4yB,QAEpB,GAAID,IAAc3yB,EAAI,GAAc,IAAT4yB,EAAY,CAC7C,GAAI/R,EAAI3gB,OAAS,GAA2B,IAAtBwyB,GACrB7R,EAAI3I,WAAW2I,EAAI3gB,OAAS,KAAOyxB,GACnC9Q,EAAI3I,WAAW2I,EAAI3gB,OAAS,KAAOyxB,EAAU,CAC7C,GAAI9Q,EAAI3gB,OAAS,EAAG,CACnB,MAAM2yB,EAAiBhS,EAAIxb,YAAYotB,IACf,IAApBI,GACHhS,EAAM,GACN6R,EAAoB,GAGpBA,GADA7R,EAAMA,EAAIjf,MAAM,EAAGixB,IACK3yB,OAAS,EAAI2gB,EAAIxb,YAAYotB,GAEtDE,EAAY3yB,EACZ4yB,EAAO,EACP,SACM,GAAmB,IAAf/R,EAAI3gB,QAA+B,IAAf2gB,EAAI3gB,OAAc,CAChD2gB,EAAM,GACN6R,EAAoB,EACpBC,EAAY3yB,EACZ4yB,EAAO,EACP,UAGEJ,IACC3R,EAAI3gB,OAAS,EAChB2gB,GAAO,GAAG4R,MAGV5R,EAAM,KAEP6R,EAAoB,QAGjB7R,EAAI3gB,OAAS,EAChB2gB,GAAO4R,EAAY1wB,EAAKH,MAAM+wB,EAAY,EAAG3yB,GAG7C6gB,EAAM9e,EAAKH,MAAM+wB,EAAY,EAAG3yB,GAEjC0yB,EAAoB1yB,EAAI2yB,EAAY,EAErCA,EAAY3yB,EACZ4yB,EAAO,OACGjvB,IAASguB,IAAsB,IAAViB,IAC7BA,EAEFA,GAAQ,EAGV,OAAO/R,EAGR,SAASiS,EAAQxW,EAAayW,GAC7B,MAAM/vB,EAAM+vB,EAAW/vB,KAAO+vB,EAAW1V,KACnC2V,EAAOD,EAAWC,OACrBD,EAAWnyB,MAAQ,KAAOmyB,EAAWE,KAAO,IAC/C,OAAKjwB,EAGDA,IAAQ+vB,EAAW1V,KACfra,EAAMgwB,EAEPhwB,EAAMsZ,EAAM0W,EALXA,EAkCI1qB,EAAA4qB,MAAe,CAE3BvpB,WAAWwpB,GACV,IAAIC,EAAiB,GACjBC,EAAe,GACfC,GAAmB,EAEvB,IAAK,IAAItzB,EAAImzB,EAAajzB,OAAS,EAAGF,IAAM,EAAGA,IAAK,CACnD,IAAI+B,EAyBJ,GAxBI/B,GAAK,EACR+B,EAAOoxB,EAAanzB,GACTozB,OAYE3vB,KAJb1B,EAAQ0C,EAAQC,IAAY,IAAM0uB,IAAmB3uB,EAAQ4sB,QAK5DtvB,EAAKH,MAAM,EAAG,GAAG2xB,gBACjBH,EAAeG,cAAgB,OAC/BxxB,EAAOqxB,EAAiB,MAdzBrxB,EAAO0C,EAAQ4sB,MAkBhBc,EAAepwB,EAAM,QAGD,IAAhBA,EAAK7B,OACR,SAGD,MAAMD,EAAM8B,EAAK7B;CACjB,IAAIszB,EAAU,EACVC,EAAS,GACTC,GAAa,EACjB,MAAM/vB,EAAO5B,EAAKmW,WAAW,GAG7B,GAAIjY,EAAM,EACT,GAAImyB,EAAgBzuB,GAOnB,GAFA+vB,GAAa,EAETtB,EAAgBrwB,EAAKmW,WAAW,IAAK,CAExC,IAAI7H,EAAI,EACJgH,EAAOhH,EAEX,KAAOA,EAAIpQ,IACNmyB,EAAgBrwB,EAAKmW,WAAW7H,MADnBA,GAKlB,GAAIA,EAAIpQ,GAAOoQ,IAAMgH,EAAM,CAC1B,MAAMsc,EAAY5xB,EAAKH,MAAMyV,EAAMhH,GAInC,IAFAgH,EAAOhH,EAEAA,EAAIpQ,GACLmyB,EAAgBrwB,EAAKmW,WAAW7H,MADpBA,GAKlB,GAAIA,EAAIpQ,GAAOoQ,IAAMgH,EAAM,CAI1B,IAFAA,EAAOhH,EAEAA,EAAIpQ,IACNmyB,EAAgBrwB,EAAKmW,WAAW7H,MADnBA,GAKdA,IAAMpQ,GAGTwzB,EAAS,OAASE,EAAY,KAAO5xB,EAAKH,MAAMyV,GAChDmc,EAAUnjB,GACAA,IAAMgH,IAGhBoc,EAAS,OAASE,EAAY,KAAO5xB,EAAKH,MAAMyV,EAAMhH,GACtDmjB,EAAUnjB,UAKbmjB,EAAU,OAEDlB,EAAoB3uB,IA9PhB,KAiQV5B,EAAKmW,WAAW,KACnBub,EAAS1xB,EAAKH,MAAM,EAAG,GACvB4xB,EAAU,EACNvzB,EAAM,GACLmyB,EAAgBrwB,EAAKmW,WAAW,MAGnCwb,GAAa,EACbF,EAAU,SAKJpB,EAAgBzuB,KAE1B6vB,EAAU,EACVE,GAAa,GAGd,KAAID,EAAOvzB,OAAS,GACnBkzB,EAAelzB,OAAS,GACxBuzB,EAAOF,gBAAkBH,EAAeG,iBAKX,IAA1BH,EAAelzB,QAAgBuzB,EAAOvzB,OAAS,IAClDkzB,EAAiBK,GAEbH,IACJD,EAAetxB,EAAKH,MAAM4xB,GAAW,KAAOH,EAC5CC,EAAmBI,GAGhBN,EAAelzB,OAAS,GAAKozB,GAChC,MAYF,OAAQF,GAAkBE,EAAmB,KAAO,KAHpDD,EAAed,EAAgBc,GAAeC,EAAkB,KAC/DlB,KAGA,KAGFzoB,UAAU5H,GACTowB,EAAepwB,EAAM,QACrB,MAAM9B,EAAM8B,EAAK7B,OACjB,GAAY,IAARD,EACH,MAAO,IAER,IACIwzB,EADAD,EAAU,EAEVE,GAAa,EACjB,MAAM/vB,EAAO5B,EAAKmW,WAAW,GAG7B,GAAIjY,EAAM,EACT,GAAImyB,EAAgBzuB,GAOnB,GAFA+vB,GAAa,EAETtB,EAAgBrwB,EAAKmW,WAAW,IAAK,CAExC,IAAI7H,EAAI,EACJgH,EAAOhH,EAEX,KAAOA,EAAIpQ,IACNmyB,EAAgBrwB,EAAKmW,WAAW7H,MADnBA,GAKlB,GAAIA,EAAIpQ,GAAOoQ,IAAMgH,EAAM,CAC1B,MAAMsc,EAAY5xB,EAAKH,MAAMyV,EAAMhH,GAInC,IAFAgH,EAAOhH,EAEAA,EAAIpQ,GACLmyB,EAAgBrwB,EAAKmW,WAAW7H,MADpBA,GAKlB,GAAIA,EAAIpQ,GAAOoQ,IAAMgH,EAAM,CAI1B,IAFAA,EAAOhH,EAEAA,EAAIpQ,IACNmyB,EAAgBrwB,EAAKmW,WAAW7H,MADnBA,GAKlB,GAAIA,IAAMpQ,EAKT,MAAO,OAAS0zB,EAAY,KAAO5xB,EAAKH,MAAMyV,GAAQ;CAC5ChH,IAAMgH,IAGhBoc,EAAS,OAASE,EAAY,KAAO5xB,EAAKH,MAAMyV,EAAMhH,GACtDmjB,EAAUnjB,UAKbmjB,EAAU,OAEDlB,EAAoB3uB,IAtXf,KAyXX5B,EAAKmW,WAAW,KACnBub,EAAS1xB,EAAKH,MAAM,EAAG,GACvB4xB,EAAU,EACNvzB,EAAM,GACLmyB,EAAgBrwB,EAAKmW,WAAW,MAGnCwb,GAAa,EACbF,EAAU,SAKR,GAAIpB,EAAgBzuB,GAG1B,MAAO,KAGR,IAAI4M,EAaJ,OANoB,KALnBA,EADGijB,EAAUvzB,EACNsyB,EAAgBxwB,EAAKH,MAAM4xB,IAAWE,EAAY,KACxDtB,GAEM,IAEClyB,QAAiBwzB,IACzBnjB,EAAO,KAEJA,EAAKrQ,OAAS,GAAKkyB,EAAgBrwB,EAAKmW,WAAWjY,EAAM,MAC5DsQ,GAAQ,WAEM9M,IAAXgwB,EACCC,EACCnjB,EAAKrQ,OAAS,EACV,KAAOqQ,EAGP,KAEEA,EAAKrQ,OAAS,EACjBqQ,EAEA,GAEEmjB,EACNnjB,EAAKrQ,OAAS,EACVuzB,EAAS,KAAOljB,EAGhBkjB,EAAS,KAEPljB,EAAKrQ,OAAS,EACjBuzB,EAASljB,EAETkjB,GAIT9pB,WAAW5H,GACVowB,EAAepwB,EAAM,QACrB,MAAM9B,EAAM8B,EAAK7B,OACjB,GAAY,IAARD,EACH,OAAO,EAGR,MAAM0D,EAAO5B,EAAKmW,WAAW,GAC7B,QAAIka,EAAgBzuB,OAET2uB,EAAoB3uB,IAG1B1D,EAAM,GAjcM,KAicD8B,EAAKmW,WAAW,IAC1Bka,EAAgBrwB,EAAKmW,WAAW,MAQvCvO,QAAQiqB,GACP,GAAqB,IAAjBA,EAAM1zB,OACT,MAAO,IAGR,IAAI2zB,EACAF,EACJ,IAAK,IAAI3zB,EAAI,EAAGA,EAAI4zB,EAAM1zB,SAAUF,EAAG,CACtC,MAAMwT,EAAMogB,EAAM5zB,GAClBmyB,EAAe3e,EAAK,QAChBA,EAAItT,OAAS,SACDuD,IAAXowB,EACHA,EAASF,EAAYngB,EAGrBqgB,GAAU,KAAOrgB,GAKpB,QAAe/P,IAAXowB,EACH,MAAO,IAgBR,IAAIC,GAAe,EACfC,EAAa,EACjB,GAAyB,iBAAdJ,GAA0BvB,EAAgBuB,EAAUzb,WAAW,IAAK,GAC5E6b,EACF,MAAMC,EAAWL,EAAUzzB,OACvB8zB,EAAW,GACV5B,EAAgBuB,EAAUzb,WAAW,QACtC6b,EACEC,EAAW,IACV5B,EAAgBuB,EAAUzb,WAAW,MACtC6b,EAIFD,GAAe,IAMpB,GAAIA,EAAc,CAEjB,KAAOC,EAAaF,EAAO3zB,QACrBkyB,EAAgByB,EAAO3b,WAAW6b,MADHA,GAOjCA,GAAc,IACjBF,EAAS,KAAOA,EAAOjyB,MAAMmyB,IAI/B,OAAOzrB,EAAA4qB,MAAMe,UAAUJ,IAQxBlqB,SAAStI,EAAcC,GAItB,GAHA6wB,EAAe9wB,EAAM,QACrB8wB,EAAe7wB,EAAI,MAEfD,IAASC,EACZ,MAAO;CAGR,MAAM4yB,EAAW5rB,EAAA4qB,MAAMrvB,QAAQxC,GACzB8yB,EAAS7rB,EAAA4qB,MAAMrvB,QAAQvC,GAE7B,GAAI4yB,IAAaC,EAChB,MAAO,GAMR,IAHA9yB,EAAO6yB,EAASX,kBAChBjyB,EAAK6yB,EAAOZ,eAGX,MAAO,GAIR,IAAIa,EAAY,EAChB,KAAOA,EAAY/yB,EAAKnB,QACnBmB,EAAK6W,WAAWkc,KAAevC,IADFuC,GAMlC,IAAIC,EAAUhzB,EAAKnB,OACnB,KAAOm0B,EAAU,EAAID,GAChB/yB,EAAK6W,WAAWmc,EAAU,KAAOxC,IADJwC,GAKlC,MAAMC,EAAWD,EAAUD,EAG3B,IAAIG,EAAU,EACd,KAAOA,EAAUjzB,EAAGpB,QACfoB,EAAG4W,WAAWqc,KAAa1C,IADF0C,GAM9B,IAAIC,EAAQlzB,EAAGpB,OACf,KAAOs0B,EAAQ,EAAID,GACdjzB,EAAG4W,WAAWsc,EAAQ,KAAO3C,IADJ2C,GAK9B,MAAMC,EAASD,EAAQD,EAGjBr0B,EAAUo0B,EAAUG,EAAQH,EAAUG,EAC5C,IAAIC,GAAiB,EACjB10B,EAAI,EACR,KAAOA,GAAKE,IAAUF,EAAG,CACxB,GAAIA,IAAME,EAAQ,CACjB,GAAIu0B,EAAQv0B,EAAQ,CACnB,GAAIoB,EAAG4W,WAAWqc,EAAUv0B,KAAO6xB,EAGlC,OAAOsC,EAAOvyB,MAAM2yB,EAAUv0B,EAAI,GAC5B,GAAU,IAANA,EAGV,OAAOm0B,EAAOvyB,MAAM2yB,EAAUv0B,GAG5Bs0B,EAAUp0B,IACTmB,EAAK6W,WAAWkc,EAAYp0B,KAAO6xB,EAGtC6C,EAAgB10B,EACA,IAANA,IAGV00B,EAAgB,IAGlB,MAED,MAAMC,EAAWtzB,EAAK6W,WAAWkc,EAAYp0B,GAE7C,GAAI20B,IADWrzB,EAAG4W,WAAWqc,EAAUv0B,GAEtC,MAEQ20B,IAAa9C,IACrB6C,EAAgB10B,GAMlB,GAAIA,IAAME,IAA6B,IAAnBw0B,EACnB,OAAOP,EAGR,IAAIS,EAAM,GAMV,KALuB,IAAnBF,IACHA,EAAgB,GAIZ10B,EAAIo0B,EAAYM,EAAgB,EAAG10B,GAAKq0B,IAAWr0B,EACnDA,IAAMq0B,GAAWhzB,EAAK6W,WAAWlY,KAAO6xB,IACxB,IAAf+C,EAAI10B,OACP00B,GAAO,KAGPA,GAAO,QAOV,OAAIA,EAAI10B,OAAS,EACT00B,EAAMT,EAAOvyB,MAAM2yB,EAAUG,EAAeF,IAGnDD,GAAWG,EACPP,EAAOjc,WAAWqc,KAAa1C,KAChC0C,EAEIJ,EAAOvyB,MAAM2yB,EAASC,KAI/B7qB,iBAAiB5H,GAEhB,GAAoB,iBAATA,EACV,OAAOA,EAGR,GAAoB,IAAhBA,EAAK7B,OACR,MAAO,GAGR,MAAM20B,EAAevsB,EAAA4qB,MAAMrvB,QAAQ9B,GAEnC,GAAI8yB,EAAa30B,QAAU,EAC1B,GAAI20B,EAAa3c,WAAW,KAAO2Z,GAGlC,GAAIgD,EAAa3c,WAAW,KAAO2Z,EAAqB,CACvD,MAAMluB,EAAOkxB,EAAa3c,WAAW;CACrC,GA7qBsB,KA6qBlBvU,GAA+BA,IAASguB,EAE3C,MAAO,eAAiBkD,EAAajzB,MAAM,SAGvC,GAAI0wB,EAAoBuC,EAAa3c,WAAW,KAnrBvC,KAsrBX2c,EAAa3c,WAAW,IAC3B2c,EAAa3c,WAAW,KAAO2Z,EAE/B,MAAO,UAAYgD,EAKtB,OAAO9yB,GAGR4H,QAAQ5H,GACPowB,EAAepwB,EAAM,QACrB,MAAM9B,EAAM8B,EAAK7B,OACjB,GAAY,IAARD,EACH,MAAO,IAER,IAAIuzB,GAAW,EACX5c,GAAO,EACPke,GAAe,EACfrb,EAAS,EACb,MAAM9V,EAAO5B,EAAKmW,WAAW,GAG7B,GAAIjY,EAAM,EACT,GAAImyB,EAAgBzuB,IAKnB,GAFA6vB,EAAU/Z,EAAS,EAEf2Y,EAAgBrwB,EAAKmW,WAAW,IAAK,CAExC,IAAI7H,EAAI,EACJgH,EAAOhH,EAEX,KAAOA,EAAIpQ,IACNmyB,EAAgBrwB,EAAKmW,WAAW7H,MADnBA,GAKlB,GAAIA,EAAIpQ,GAAOoQ,IAAMgH,EAAM,CAI1B,IAFAA,EAAOhH,EAEAA,EAAIpQ,GACLmyB,EAAgBrwB,EAAKmW,WAAW7H,MADpBA,GAKlB,GAAIA,EAAIpQ,GAAOoQ,IAAMgH,EAAM,CAI1B,IAFAA,EAAOhH,EAEAA,EAAIpQ,IACNmyB,EAAgBrwB,EAAKmW,WAAW7H,MADnBA,GAKlB,GAAIA,IAAMpQ,EAET,OAAO8B,EAEJsO,IAAMgH,IAKTmc,EAAU/Z,EAASpJ,EAAI,WAKjBiiB,EAAoB3uB,IA9vBf,KAiwBX5B,EAAKmW,WAAW,KACnBsb,EAAU/Z,EAAS,EACfxZ,EAAM,GACLmyB,EAAgBrwB,EAAKmW,WAAW,MACnCsb,EAAU/Z,EAAS,SAKjB,GAAI2Y,EAAgBzuB,GAG1B,OAAO5B,EAGR,IAAK,IAAI/B,EAAIC,EAAM,EAAGD,GAAKyZ,IAAUzZ,EACpC,GAAIoyB,EAAgBrwB,EAAKmW,WAAWlY,KACnC,IAAK80B,EAAc,CAClBle,EAAM5W,EACN,YAID80B,GAAe,EAIjB,IAAa,IAATle,EAAY,CACf,IAAiB,IAAb4c,EACH,MAAO,IAGP5c,EAAM4c,EAGR,OAAOzxB,EAAKH,MAAM,EAAGgV,IAGtBjN,SAAS5H,EAAckxB,QACVxvB,IAARwvB,GACHd,EAAec,EAAK,OAErBd,EAAepwB,EAAM,QACrB,IAGI/B,EAHAyP,EAAQ,EACRmH,GAAO,EACPke,GAAe,EAMnB,GAAI/yB,EAAK7B,QAAU,EAAG,CAEjBoyB,EADUvwB,EAAKmW,WAAW,KArzBd,KAuzBXnW,EAAKmW,WAAW,KACnBzI,EAAQ,GAKX,QAAYhM,IAARwvB,GAAqBA,EAAI/yB,OAAS,GAAK+yB,EAAI/yB,QAAU6B,EAAK7B,OAAQ,CACrE,GAAI+yB,EAAI/yB,SAAW6B,EAAK7B,QAAU+yB,IAAQlxB,EACzC,MAAO,GAER,IAAIgzB,EAAS9B,EAAI/yB,OAAS,EACtB80B,GAAoB,EACxB,IAAKh1B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAKyP,IAASzP,EAAG,CAC1C,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAIoyB,EAAgBzuB,IAGnB,IAAKmxB,EAAc;AAClBrlB,EAAQzP,EAAI,EACZ,YAGyB,IAAtBg1B,IAGHF,GAAe,EACfE,EAAmBh1B,EAAI,GAEpB+0B,GAAU,IAETpxB,IAASsvB,EAAI/a,WAAW6c,IACT,KAAZA,IAGLne,EAAM5W,IAKP+0B,GAAU,EACVne,EAAMoe,IAYV,OANIvlB,IAAUmH,EACbA,EAAMoe,GAEW,IAATpe,IACRA,EAAM7U,EAAK7B,QAEL6B,EAAKH,MAAM6N,EAAOmH,GAEzB,IAAK5W,EAAI+B,EAAK7B,OAAS,EAAGF,GAAKyP,IAASzP,EACvC,GAAIoyB,EAAgBrwB,EAAKmW,WAAWlY,KAGnC,IAAK80B,EAAc,CAClBrlB,EAAQzP,EAAI,EACZ,YAEkB,IAAT4W,IAGVke,GAAe,EACfle,EAAM5W,EAAI,GAIZ,OAAa,IAAT4W,EACI,GAED7U,EAAKH,MAAM6N,EAAOmH,IAI3BjN,QAAQ5H,GACPowB,EAAepwB,EAAM,QACrB,IAAI0N,EAAQ,EACRwlB,GAAY,EACZC,EAAY,EACZte,GAAO,EACPke,GAAe,EAGfK,EAAc,EAMdpzB,EAAK7B,QAAU,GAn5BF,KAo5BhB6B,EAAKmW,WAAW,IAChBoa,EAAoBvwB,EAAKmW,WAAW,MACpCzI,EAAQylB,EAAY,GAGrB,IAAK,IAAIl1B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAKyP,IAASzP,EAAG,CAC9C,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAIoyB,EAAgBzuB,IAGnB,IAAKmxB,EAAc,CAClBI,EAAYl1B,EAAI,EAChB,YAIW,IAAT4W,IAGHke,GAAe,EACfle,EAAM5W,EAAI,GAEP2D,IAASguB,GAEM,IAAdsD,EACHA,EAAWj1B,EAEa,IAAhBm1B,IACRA,EAAc,IAES,IAAdF,IAGVE,GAAe,GAIjB,OAAkB,IAAdF,IACM,IAATre,GAEgB,IAAhBue,GAEiB,IAAhBA,GACAF,IAAare,EAAM,GACnBqe,IAAaC,EAAY,EACnB,GAEDnzB,EAAKH,MAAMqzB,EAAUre,IAG7BjN,OAAOopB,GACN,GAAmB,OAAfA,GAA6C,iBAAfA,EACjC,MAAM,IAAIjB,EAAoB,aAAc,SAAUiB,GAGvD,OAAOD,EAAQ,KAAMC,IAItBppB,MAAM5H,GACLowB,EAAepwB,EAAM,QAErB,MAAMqzB,EAAM,CAAE/X,KAAM,GAAIra,IAAK,GAAIgwB,KAAM,GAAIC,IAAK,GAAIryB,KAAM,IAC1D,GAAoB,IAAhBmB,EAAK7B,OACR,OAAOk1B,EAGR,MAAMn1B,EAAM8B,EAAK7B,OACjB,IAAIszB,EAAU,EACV7vB,EAAO5B,EAAKmW,WAAW,GAG3B,GAAIjY,EAAM,GACT,GAAImyB,EAAgBzuB,IAInB,GADA6vB,EAAU,EACNpB,EAAgBrwB,EAAKmW,WAAW,IAAK,CAExC,IAAI7H,EAAI,EACJgH,EAAOhH,EAEX,KAAOA,EAAIpQ,IACNmyB,EAAgBrwB,EAAKmW,WAAW7H,MADnBA,GAKlB,GAAIA,EAAIpQ,GAAOoQ,IAAMgH,EAAM,CAI1B,IAFAA,EAAOhH,EAEAA,EAAIpQ,GACLmyB,EAAgBrwB,EAAKmW,WAAW7H,MADpBA,GAKlB,GAAIA,EAAIpQ,GAAOoQ,IAAMgH,EAAM;AAI1B,IAFAA,EAAOhH,EAEAA,EAAIpQ,IACNmyB,EAAgBrwB,EAAKmW,WAAW7H,MADnBA,GAKdA,IAAMpQ,EAGTuzB,EAAUnjB,EACAA,IAAMgH,IAGhBmc,EAAUnjB,EAAI,WAKZ,GAAIiiB,EAAoB3uB,IAzgCf,KA4gCX5B,EAAKmW,WAAW,GAAmB,CAEtC,GADAsb,EAAU,IACNvzB,EAAM,GAcT,OADAm1B,EAAI/X,KAAO+X,EAAIpyB,IAAMjB,EACdqzB,EAbP,GAAIhD,EAAgBrwB,EAAKmW,WAAW,IAAK,CACxC,GAAY,IAARjY,EAIH,OADAm1B,EAAI/X,KAAO+X,EAAIpyB,IAAMjB,EACdqzB,EAER5B,EAAU,SAUR,GAAIpB,EAAgBzuB,GAI1B,OADAyxB,EAAI/X,KAAO+X,EAAIpyB,IAAMjB,EACdqzB,EAGJ5B,EAAU,IACb4B,EAAI/X,KAAOtb,EAAKH,MAAM,EAAG4xB,IAG1B,IAAIyB,GAAY,EACZC,EAAY1B,EACZ5c,GAAO,EACPke,GAAe,EACf90B,EAAI+B,EAAK7B,OAAS,EAIlBi1B,EAAc,EAGlB,KAAOn1B,GAAKwzB,IAAWxzB,EAEtB,GAAIoyB,EADJzuB,EAAO5B,EAAKmW,WAAWlY,KAItB,IAAK80B,EAAc,CAClBI,EAAYl1B,EAAI,EAChB,YAIW,IAAT4W,IAGHke,GAAe,EACfle,EAAM5W,EAAI,GAEP2D,IAASguB,GAEM,IAAdsD,EACHA,EAAWj1B,EAEa,IAAhBm1B,IACRA,EAAc,IAES,IAAdF,IAGVE,GAAe,GA+BjB,OA3BkB,IAAdF,IACM,IAATre,GAEgB,IAAhBue,GAEiB,IAAhBA,GACAF,IAAare,EAAM,GACnBqe,IAAaC,EAAY,GACb,IAATte,IACHwe,EAAIpC,KAAOoC,EAAIx0B,KAAOmB,EAAKH,MAAMszB,EAAWte,KAG7Cwe,EAAIx0B,KAAOmB,EAAKH,MAAMszB,EAAWD,GACjCG,EAAIpC,KAAOjxB,EAAKH,MAAMszB,EAAWte,GACjCwe,EAAInC,IAAMlxB,EAAKH,MAAMqzB,EAAUre,IAO/Bwe,EAAIpyB,IADDkyB,EAAY,GAAKA,IAAc1B,EACxBzxB,EAAKH,MAAM,EAAGszB,EAAY,GAG1BE,EAAI/X,KAGR+X,GAGR9Y,IAAK,KACL+Y,UAAW,IACXnC,MAAO,KACPoC,MAAO,MAGKhtB,EAAAgtB,MAAe,CAE3B3rB,WAAWwpB,GACV,IAAI0B,EAAe,GACfvB,GAAmB,EAEvB,IAAK,IAAItzB,EAAImzB,EAAajzB,OAAS,EAAGF,IAAM,IAAMszB,EAAkBtzB,IAAK,CACxE,IAAI+B,EAQJowB,EANCpwB,EADG/B,GAAK,EACDmzB,EAAanzB,GAGbyE,EAAQ4sB,MAGK,QAGD,IAAhBtvB,EAAK7B,SAIT20B,EAAe9yB,EAAO,IAAM8yB,EAC5BvB,EAAmBvxB,EAAKmW,WAAW,KAAO0Z,GAU3C,OAHAiD,EAAetC,EAAgBsC,GAAevB,EAAkB,IAC/DjB,GAEGiB,EACCuB,EAAa30B,OAAS,EAClB,IAAM20B,EAGN,IAEEA,EAAa30B,OAAS,EACzB20B,EAEA,KAITlrB,UAAU5H,GAGT,GAFAowB,EAAepwB,EAAM,QAED,IAAhBA,EAAK7B,OACR,MAAO,IAGR,MAAMwzB,EAAa3xB,EAAKmW,WAAW,KAAO0Z,EACpC2D,EACLxzB,EAAKmW,WAAWnW,EAAK7B,OAAS,KAAO0xB;CAYtC,OAPoB,KAFpB7vB,EAAOwwB,EAAgBxwB,GAAO2xB,EAAY,IAAKrB,IAEtCnyB,QAAiBwzB,IACzB3xB,EAAO,KAEJA,EAAK7B,OAAS,GAAKq1B,IACtBxzB,GAAQ,KAGL2xB,EACI,IAAM3xB,EAEPA,GAGR2xB,WAAW3xB,IACVowB,EAAepwB,EAAM,QACdA,EAAK7B,OAAS,GAAK6B,EAAKmW,WAAW,KAAO0Z,GAGlDjoB,QAAQiqB,GACP,GAAqB,IAAjBA,EAAM1zB,OACT,MAAO,IAER,IAAI2zB,EACJ,IAAK,IAAI7zB,EAAI,EAAGA,EAAI4zB,EAAM1zB,SAAUF,EAAG,CACtC,MAAMwT,EAAM+B,UAAUvV,GACtBmyB,EAAe3e,EAAK,QAChBA,EAAItT,OAAS,SACDuD,IAAXowB,EACHA,EAASrgB,EAGTqgB,GAAU,IAAMrgB,GAInB,YAAe/P,IAAXowB,EACI,IAEDvrB,EAAAgtB,MAAMrB,UAAUJ,IAGxBlqB,SAAStI,EAAcC,GAItB,GAHA6wB,EAAe9wB,EAAM,QACrB8wB,EAAe7wB,EAAI,MAEfD,IAASC,EACZ,MAAO,GAMR,IAHAD,EAAOiH,EAAAgtB,MAAMzxB,QAAQxC,OACrBC,EAAKgH,EAAAgtB,MAAMzxB,QAAQvC,IAGlB,MAAO,GAIR,IAAI8yB,EAAY,EAChB,KAAOA,EAAY/yB,EAAKnB,QACnBmB,EAAK6W,WAAWkc,KAAexC,IADFwC,GAKlC,MAAMC,EAAUhzB,EAAKnB,OACfo0B,EAAWD,EAAUD,EAG3B,IAAIG,EAAU,EACd,KAAOA,EAAUjzB,EAAGpB,QACfoB,EAAG4W,WAAWqc,KAAa3C,IADF2C,GAK9B,MACME,EADQnzB,EAAGpB,OACMq0B,EAGjBr0B,EAAUo0B,EAAUG,EAAQH,EAAUG,EAC5C,IAAIC,GAAiB,EACjB10B,EAAI,EACR,KAAOA,GAAKE,IAAUF,EAAG,CACxB,GAAIA,IAAME,EAAQ,CACjB,GAAIu0B,EAAQv0B,EAAQ,CACnB,GAAIoB,EAAG4W,WAAWqc,EAAUv0B,KAAO4xB,EAGlC,OAAOtwB,EAAGM,MAAM2yB,EAAUv0B,EAAI,GACxB,GAAU,IAANA,EAGV,OAAOsB,EAAGM,MAAM2yB,EAAUv0B,QAEjBs0B,EAAUp0B,IAChBmB,EAAK6W,WAAWkc,EAAYp0B,KAAO4xB,EAGtC8C,EAAgB10B,EACA,IAANA,IAGV00B,EAAgB,IAGlB,MAED,MAAMC,EAAWtzB,EAAK6W,WAAWkc,EAAYp0B,GAE7C,GAAI20B,IADWrzB,EAAG4W,WAAWqc,EAAUv0B,GAEtC,MAEQ20B,IAAa/C,IACrB8C,EAAgB10B,GAIlB,IAAI40B,EAAM,GAGV,IAAK50B,EAAIo0B,EAAYM,EAAgB,EAAG10B,GAAKq0B,IAAWr0B,EACnDA,IAAMq0B,GAAWhzB,EAAK6W,WAAWlY,KAAO4xB,IACxB,IAAfgD,EAAI10B,OACP00B,GAAO,KAGPA,GAAO,OAOV,OAAIA,EAAI10B,OAAS,EACT00B,EAAMtzB,EAAGM,MAAM2yB,EAAUG,IAGhCH,GAAWG,EACPpzB,EAAG4W,WAAWqc,KAAa3C,KAC5B2C,EAEIjzB,EAAGM,MAAM2yB;AAIlBiB,iBAAiBzzB,GAETA,EAGR4H,QAAQ5H,GAEP,GADAowB,EAAepwB,EAAM,QACD,IAAhBA,EAAK7B,OACR,MAAO,IAER,MAAMu1B,EAAU1zB,EAAKmW,WAAW,KAAO0Z,EACvC,IAAIhb,GAAO,EACPke,GAAe,EACnB,IAAK,IAAI90B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAK,IAAKA,EACvC,GAAI+B,EAAKmW,WAAWlY,KAAO4xB,GAC1B,IAAKkD,EAAc,CAClBle,EAAM5W,EACN,YAID80B,GAAe,EAIjB,OAAa,IAATle,EACI6e,EAAU,IAAM,IAEpBA,GAAmB,IAAR7e,EACP,KAED7U,EAAKH,MAAM,EAAGgV,IAGtBjN,SAAS5H,EAAckxB,QACVxvB,IAARwvB,GACHd,EAAec,EAAK,OAErBd,EAAepwB,EAAM,QAErB,IAGI/B,EAHAyP,EAAQ,EACRmH,GAAO,EACPke,GAAe,EAGnB,QAAYrxB,IAARwvB,GAAqBA,EAAI/yB,OAAS,GAAK+yB,EAAI/yB,QAAU6B,EAAK7B,OAAQ,CACrE,GAAI+yB,EAAI/yB,SAAW6B,EAAK7B,QAAU+yB,IAAQlxB,EACzC,MAAO,GAER,IAAIgzB,EAAS9B,EAAI/yB,OAAS,EACtB80B,GAAoB,EACxB,IAAKh1B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAK,IAAKA,EAAG,CACtC,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAI2D,IAASiuB,GAGZ,IAAKkD,EAAc,CAClBrlB,EAAQzP,EAAI,EACZ,YAGyB,IAAtBg1B,IAGHF,GAAe,EACfE,EAAmBh1B,EAAI,GAEpB+0B,GAAU,IAETpxB,IAASsvB,EAAI/a,WAAW6c,IACT,KAAZA,IAGLne,EAAM5W,IAKP+0B,GAAU,EACVne,EAAMoe,IAYV,OANIvlB,IAAUmH,EACbA,EAAMoe,GAEW,IAATpe,IACRA,EAAM7U,EAAK7B,QAEL6B,EAAKH,MAAM6N,EAAOmH,GAEzB,IAAK5W,EAAI+B,EAAK7B,OAAS,EAAGF,GAAK,IAAKA,EACnC,GAAI+B,EAAKmW,WAAWlY,KAAO4xB,GAG1B,IAAKkD,EAAc,CAClBrlB,EAAQzP,EAAI,EACZ,YAEkB,IAAT4W,IAGVke,GAAe,EACfle,EAAM5W,EAAI,GAIZ,OAAa,IAAT4W,EACI,GAED7U,EAAKH,MAAM6N,EAAOmH,IAI3BjN,QAAQ5H,GACPowB,EAAepwB,EAAM,QACrB,IAAIkzB,GAAY,EACZC,EAAY,EACZte,GAAO,EACPke,GAAe,EAGfK,EAAc,EAClB,IAAK,IAAIn1B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAK,IAAKA,EAAG,CAC1C,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAI2D,IAASiuB,GASA,IAAThb,IAGHke,GAAe,EACfle,EAAM5W,EAAI,GAEP2D,IAASguB,GAEM,IAAdsD,EACHA,EAAWj1B,EAEa,IAAhBm1B,IACRA,EAAc,IAES,IAAdF,IAGVE,GAAe,QAvBf,IAAKL,EAAc,CAClBI,EAAYl1B,EAAI,EAChB;AAyBH,OAAkB,IAAdi1B,IACM,IAATre,GAEgB,IAAhBue,GAEiB,IAAhBA,GACAF,IAAare,EAAM,GACnBqe,IAAaC,EAAY,EACnB,GAEDnzB,EAAKH,MAAMqzB,EAAUre,IAG7BjN,OAAOopB,GACN,GAAmB,OAAfA,GAA6C,iBAAfA,EACjC,MAAM,IAAIjB,EAAoB,aAAc,SAAUiB,GAGvD,OAAOD,EAAQ,IAAKC,IAGrBppB,MAAM5H,GACLowB,EAAepwB,EAAM,QAErB,MAAMqzB,EAAM,CAAE/X,KAAM,GAAIra,IAAK,GAAIgwB,KAAM,GAAIC,IAAK,GAAIryB,KAAM,IAC1D,GAAoB,IAAhBmB,EAAK7B,OACR,OAAOk1B,EAER,MAAM1B,EAAa3xB,EAAKmW,WAAW,KAAO0Z,EAC1C,IAAIniB,EACAikB,GACH0B,EAAI/X,KAAO,IACX5N,EAAQ,GAERA,EAAQ,EAET,IAAIwlB,GAAY,EACZC,EAAY,EACZte,GAAO,EACPke,GAAe,EACf90B,EAAI+B,EAAK7B,OAAS,EAIlBi1B,EAAc,EAGlB,KAAOn1B,GAAKyP,IAASzP,EAAG,CACvB,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAI2D,IAASiuB,GASA,IAAThb,IAGHke,GAAe,EACfle,EAAM5W,EAAI,GAEP2D,IAASguB,GAEM,IAAdsD,EACHA,EAAWj1B,EAEa,IAAhBm1B,IACRA,EAAc,IAES,IAAdF,IAGVE,GAAe,QAvBf,IAAKL,EAAc,CAClBI,EAAYl1B,EAAI,EAChB,OA2DH,OAlCkB,IAAdi1B,IACM,IAATre,GAEgB,IAAhBue,GAEiB,IAAhBA,GACAF,IAAare,EAAM,GACnBqe,IAAaC,EAAY,GACb,IAATte,IAEFwe,EAAIpC,KAAOoC,EAAIx0B,KADE,IAAds0B,GAAmBxB,EACA3xB,EAAKH,MAAM,EAAGgV,GAGd7U,EAAKH,MAAMszB,EAAWte,KAI5B,IAAdse,GAAmBxB,GACtB0B,EAAIx0B,KAAOmB,EAAKH,MAAM,EAAGqzB,GACzBG,EAAIpC,KAAOjxB,EAAKH,MAAM,EAAGgV,KAEzBwe,EAAIx0B,KAAOmB,EAAKH,MAAMszB,EAAWD,GACjCG,EAAIpC,KAAOjxB,EAAKH,MAAMszB,EAAWte,IAElCwe,EAAInC,IAAMlxB,EAAKH,MAAMqzB,EAAUre,IAG5Bse,EAAY,EACfE,EAAIpyB,IAAMjB,EAAKH,MAAM,EAAGszB,EAAY,GAE5BxB,IACR0B,EAAIpyB,IAAM,KAGJoyB,GAGR9Y,IAAK,IACL+Y,UAAW,IACXnC,MAAO,KACPoC,MAAO,MAGRhtB,EAAAgtB,MAAMpC,MAAQ5qB,EAAA4qB,MAAMA,MAAQ5qB,EAAA4qB,MAC5B5qB,EAAAgtB,MAAMA,MAAQhtB,EAAA4qB,MAAMoC,MAAQhtB,EAAAgtB,MAEfhtB,EAAA2rB,UAAkC,UAArBxvB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAMe,UAAY3rB,EAAAgtB,MAAMrB,UACpE3rB,EAAAorB,WAAmC,UAArBjvB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAMQ,WAAaprB,EAAAgtB,MAAM5B;AACtEprB,EAAA/E,KAA6B,UAArBkB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAM3vB,KAAO+E,EAAAgtB,MAAM/xB,KAC1D+E,EAAAzE,QAAgC,UAArBY,EAAQsqB,SAAuBzmB,EAAA4qB,MAAMrvB,QAAUyE,EAAAgtB,MAAMzxB,QAChEyE,EAAAotB,SAAiC,UAArBjxB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAMwC,SAAWptB,EAAAgtB,MAAMI,SAClEptB,EAAAqtB,QAAgC,UAArBlxB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAMyC,QAAUrtB,EAAAgtB,MAAMK,QAChErtB,EAAAstB,SAAiC,UAArBnxB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAM0C,SAAWttB,EAAAgtB,MAAMM,SAClEttB,EAAAutB,QAAgC,UAArBpxB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAM2C,QAAUvtB,EAAAgtB,MAAMO,QAChEvtB,EAAAwtB,OAA+B,UAArBrxB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAM4C,OAASxtB,EAAAgtB,MAAMQ,OAC9DxtB,EAAAtD,MAA8B,UAArBP,EAAQsqB,SAAuBzmB,EAAA4qB,MAAMluB,MAAQsD,EAAAgtB,MAAMtwB,MAC5DsD,EAAAktB,iBAAyC,UAArB/wB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAMsC,iBAAmBltB,EAAAgtB,MAAME,iBAClFltB,EAAAgU,IAA4B,UAArB7X,EAAQsqB,SAAuBzmB,EAAA4qB,MAAM5W,IAAMhU,EAAAgtB,MAAMhZ,IACxDhU,EAAA+sB,UAAkC,UAArB5wB,EAAQsqB,SAAuBzmB,EAAA4qB,MAAMmC,UAAY/sB,EAAAgtB,MAAMD,+DC5hDjF,SAAgBU,EAAsBpqB,GACrC,OAAO,IAAIqqB,EAAuBrqB,oDAxBnCrD,EAAA2tB,iBAAA,SAAoC5jB,GACnC,MAAM0e,EAA+B1e,EAErC,OAAO0e,GAAa,CAACA,EAAUxN,GAAIwN,EAAUmF,MAAOnF,EAAUoF,OAAQpF,EAAUqF,SAASC,MAAMlsB,GAAoB,mBAAPA,IAoB7G7B,EAAAytB,mBAAAA,EAIA,MAAMC,EAmBLrsB,YAAoBgC,GAAA/B,KAAA+B,QAAAA,EAjBH/B,KAAA0sB,MAAQ;AACxBC,SAAS,EACTC,OAAO,EACPC,WAAW,GAGK7sB,KAAAkZ,OAAS,CACzB/e,KAAM,GACNwB,MAAO,IAGSqE,KAAA4C,UAAY,CAC5BzI,KAAM,GACNwB,MAAO,GACPqR,IAAK,IAKNjN,QACKC,KAAK0sB,MAAMG,YAIf7sB,KAAK0sB,MAAMC,SAAU,GAGtB5sB,SACKC,KAAK0sB,MAAMG,WAIV7sB,KAAK0sB,MAAMC,UACf3sB,KAAK0sB,MAAMC,SAAU,EAGrB3sB,KAAK8sB,WACL9sB,KAAK+sB,aACL/sB,KAAKgtB,WAIPjtB,MAAM5F,GACD6F,KAAK0sB,MAAMG,YAKX7sB,KAAK0sB,MAAMC,QACd3sB,KAAK4C,UAAUzI,KAAKkF,QAAQ0D,GAAYA,EAAS5I,IAKjD6F,KAAKkZ,OAAO/e,KAAKlD,KAAKkD,IAIxB4F,MAAMpE,GACDqE,KAAK0sB,MAAMG,YAKX7sB,KAAK0sB,MAAMC,QACd3sB,KAAK4C,UAAUjH,MAAM0D,QAAQ0D,GAAYA,EAASpH,IAKlDqE,KAAKkZ,OAAOvd,MAAM1E,KAAK0E,IAIzBoE,IAAI5J,GACC6J,KAAK0sB,MAAMG,YAKX12B,aAAkB2I,MACrBkB,KAAKrE,MAAMxF,GACDA,GACV6J,KAAKitB,MAAM92B,GAIR6J,KAAK0sB,MAAMC,SACd3sB,KAAK4C,UAAUoK,IAAI3N,QAAQ0D,GAAYA,KAEvC/C,KAAKwsB,WAKLxsB,KAAK0sB,MAAME,OAAQ,GAOrB7sB,GAAGsX,EAAiC/X,GACnC,IAAIU,KAAK0sB,MAAMG,UAIf,OAAQxV,GACP,IAAK,OACJrX,KAAK4C,UAAUzI,KAAKlD,KAAKqI,GAIzBU,KAAKusB,SAEL,MAED,IAAK,MACJvsB,KAAK4C,UAAUoK,IAAI/V,KAAKqI,GAMpBU,KAAK0sB,MAAMC,SAAW3sB,KAAKgtB,WAC9BhtB,KAAKwsB,UAGN,MAED,IAAK,QACJxsB,KAAK4C,UAAUjH,MAAM1E,KAAKqI,GAItBU,KAAK0sB,MAAMC,SACd3sB,KAAK+sB,cAODhtB,WACP,GAAIC,KAAKkZ,OAAO/e,KAAK7D,OAAS,EAAG;AAChC,MAAM42B,EAAiBltB,KAAK+B,QAAQ/B,KAAKkZ,OAAO/e,MAEhD6F,KAAK4C,UAAUzI,KAAKkF,QAAQ0D,GAAYA,EAASmqB,IAEjDltB,KAAKkZ,OAAO/e,KAAK7D,OAAS,GAIpByJ,aACP,GAAIC,KAAK4C,UAAUjH,MAAMrF,OAAS,EAAG,CACpC,IAAK,MAAMqF,KAASqE,KAAKkZ,OAAOvd,MAC/BqE,KAAK4C,UAAUjH,MAAM0D,QAAQ0D,GAAYA,EAASpH,IAGnDqE,KAAKkZ,OAAOvd,MAAMrF,OAAS,GAIrByJ,UACP,QAAIC,KAAK0sB,MAAME,QACd5sB,KAAK4C,UAAUoK,IAAI3N,QAAQ0D,GAAYA,KAEhC/C,KAAK4C,UAAUoK,IAAI1W,OAAS,GAMrCyJ,UACMC,KAAK0sB,MAAMG,YACf7sB,KAAK0sB,MAAMG,WAAY,EACvB7sB,KAAK0sB,MAAME,OAAQ,EAEnB5sB,KAAKkZ,OAAO/e,KAAK7D,OAAS,EAC1B0J,KAAKkZ,OAAOvd,MAAMrF,OAAS,EAE3B0J,KAAK4C,UAAUzI,KAAK7D,OAAS,EAC7B0J,KAAK4C,UAAUjH,MAAMrF,OAAS,EAC9B0J,KAAK4C,UAAUoK,IAAI1W,OAAS,IAQ/BoI,EAAAyuB,gBAAA,SAAmCC,EAAuBrrB,GACzD,MAAMsrB,EAAc,GAEpB,IAAIC,EACJ,KAAqC,QAA7BA,EAAQF,EAASG,SACxBF,EAAOp2B,KAAKq2B,GAGb,OAAOvrB,EAAQsrB,IAQhB3uB,EAAA8uB,yBAAA,SAA4CJ,EAAuBrrB,EAAsB0rB,GACxF,MAAMJ,EAAc,GAEpB,IAAIC,OAA8BzzB,EAClC,KAAqC,QAA7ByzB,EAAQF,EAASG,SAAoBF,EAAO/2B,OAASm3B,GAC5DJ,EAAOp2B,KAAKq2B,GAKb,OAAc,OAAVA,GAAkBD,EAAO/2B,OAAS,EAC9ByL,EAAQsrB,GAOT,CACNE,KAAM,KAGL,GAAIF,EAAO/2B,OAAS,EACnB,OAAO+2B,EAAOrR,QAIf,QAAqB,IAAVsR,EAAuB,CACjC,MAAMI,EAAgBJ,EAMtB,OAFAA,OAAQzzB,EAED6zB,EAIR,OAAON,EAASG,UAQnB7uB,EAAAivB,cAAA,SAAiCC,EAA2B7rB,GAC3D,OAAO,IAAIvJ,QAAQ,CAACyB,EAASC,KAC5B,MAAMmzB,EAAc,GAEpBO,EAAOjU,GAAG,OAAQxf,GAAQkzB,EAAOp2B,KAAKkD;AACtCyzB,EAAOjU,GAAG,QAAShe,GAASzB,EAAOyB,IACnCiyB,EAAOjU,GAAG,MAAO,IAAM1f,EAAQ8H,EAAQsrB,QASzC3uB,EAAAmvB,uBAAA,SAA0CD,EAA2B7rB,EAAsB0rB,GAC1F,OAAO,IAAIj1B,QAAQ,CAACyB,EAASC,KAC5B,MAAMmzB,EAAc,GAEpB,IAAIS,OAAgDj0B,EAEpD+zB,EAAOjU,GAAG,OAAQxf,IAKjB,IAAK2zB,GAAiBT,EAAO/2B,SAAWm3B,EAAW,CAElD,IADAK,EAAgB3B,EAAmBpqB,GAC5BsrB,EAAO/2B,QACbw3B,EAAcb,MAAMI,EAAOrR,SAK5B,OAFA8R,EAAcb,MAAM9yB,GAEbF,EAAQ6zB,GAGZA,EACHA,EAAcb,MAAM9yB,GAEpBkzB,EAAOp2B,KAAKkD,KAIdyzB,EAAOjU,GAAG,QAAShe,IAClB,IAAImyB,EAGH,OAAO5zB,EAAOyB,GAFdmyB,EAAcnyB,MAAMA,KAMtBiyB,EAAOjU,GAAG,MAAO,KAChB,IAAImU,EAOH,OAAO7zB,EAAQ8H,EAAQsrB,IANvB,KAAOA,EAAO/2B,QACbw3B,EAAcb,MAAMI,EAAOrR,SAG5B8R,EAAc9gB,WAWlBtO,EAAAqvB,SAAA,SAA4B9jB,EAAMlI,GACjC,MAAM6rB,EAASzB,EAAsBpqB,GAIrC,OAFA6rB,EAAO5gB,IAAI/C,GAEJ2jB,GAMRlvB,EAAAsvB,WAAA,SAA8B/jB,GAC7B,IAAI8X,GAAW,EAEf,MAAO,CACNwL,KAAM,IACDxL,EACI,MAGRA,GAAW,EAEJ9X,KAQVvL,EAAAuvB,UAAA,SAAiDL,EAAwCM,EAAkDnsB,GAC1I,MAAMpK,EAASw0B,EAAgCpqB,GAM/C,OAJA6rB,EAAOjU,GAAG,OAAQxf,GAAQxC,EAAOs1B,MAAMiB,EAAY/zB,KAAKA,KACxDyzB,EAAOjU,GAAG,MAAO,IAAMhiB,EAAOqV,OAC9B4gB,EAAOjU,GAAG,QAAShe,GAAShE,EAAOgE,MAAMuyB,EAAYvyB,MAAQuyB,EAAYvyB,MAAMA,GAASA,IAEjFhE,yGC7dR+G,EAAAyvB,oBAAA,SAAoCC,GACnC,OAAKA,GAAsB,iBAARA,GAGU,IAAtBA,EAAIC,OAAO/3B,QAMnBoI,EAAA4vB,IAAA,SAAoBjoB,EAAWkoB,EAAWC,EAAe,KACxD,MAAMJ,EAAM,GAAK/nB,EACX8D,EAAI,CAACikB,GAEX,IAAK,IAAIh4B,EAAIg4B,EAAI93B,OAAQF,EAAIm4B,EAAGn4B,IAC/B+T,EAAElT,KAAKu3B,GAGR,OAAOrkB,EAAEskB,UAAU90B,KAAK,KAGzB,MAAM+0B,EAAgB,WAsCtB,SAAgBC,EAAuB/vB;AACtC,OAAOA,EAAMJ,QAAQ,kCAAmC,QAkBzD,SAAgBowB,EAAMC,EAAkBC,GACvC,IAAKD,IAAaC,EACjB,OAAOD,EAGR,MAAME,EAAYD,EAAOx4B,OACzB,GAAkB,IAAdy4B,GAAuC,IAApBF,EAASv4B,OAC/B,OAAOu4B,EAGR,IAAIhf,EAAS,EAEb,KAAOgf,EAASltB,QAAQmtB,EAAQjf,KAAYA,GAC3CA,GAAkBkf,EAEnB,OAAOF,EAASnzB,UAAUmU,GAQ3B,SAAgBmf,EAAMH,EAAkBC,GACvC,IAAKD,IAAaC,EACjB,OAAOD,EAGR,MAAME,EAAYD,EAAOx4B,OACxB24B,EAAcJ,EAASv4B,OAExB,GAAkB,IAAdy4B,GAAmC,IAAhBE,EACtB,OAAOJ,EAGR,IAAIhf,EAASof,EACZhS,GAAO,EAER,MAEc,KADbA,EAAM4R,EAASpzB,YAAYqzB,EAAQjf,EAAS,KAC1BoN,EAAM8R,IAAclf,GAF1B,CAKZ,GAAY,IAARoN,EACH,MAAO,GAERpN,EAASoN,EAGV,OAAO4R,EAASnzB,UAAU,EAAGmU,GAwJ9B,SAAgB7K,EAAQE,EAAWgC,GAClC,OAAIhC,EAAIgC,GACC,EACEhC,EAAIgC,EACP,EAEA,EA+CT,SAAgBgoB,EAAmBn1B,GAClC,OAAOA,GAAI,IAAkBA,GAAI,IAGlC,SAAgBo1B,EAAmBp1B,GAClC,OAAOA,GAAI,IAAkBA,GAAI,GAGlC,SAASq1B,EAAcr1B,GACtB,OAAOm1B,EAAmBn1B,IAASo1B,EAAmBp1B,GAOvD,SAASs1B,EAAmBnqB,EAAWgC,EAAWooB,EAASpqB,EAAE5O,QAC5D,IAAK,IAAIF,EAAI,EAAGA,EAAIk5B,EAAQl5B,IAAK,CAChC,MAAMm5B,EAAQrqB,EAAEoJ,WAAWlY,GACrBo5B,EAAQtoB,EAAEoH,WAAWlY,GAE3B,GAAIm5B,IAAUC,EAKd,GAAIJ,EAAcG,IAAUH,EAAcI,GAAQ,CACjD,MAAMC,EAAO5qB,KAAK6qB,IAAIH,EAAQC,GAC9B,GAAa,IAATC,GAAuB,KAATA,EACjB,OAAO,OAMR,GAAIrrB,OAAOqK,aAAa8gB,GAAO5F,gBAAkBvlB,OAAOqK,aAAa+gB,GAAO7F,cAC3E,OAAO,EAKV,OAAO,EAiDR,SAASgG,EAAazqB,EAAW0qB,EAAgBC,EAAc3oB,EAAW4oB,EAAgBC,GACzF,KAAOH,EAASC,GAAQC,EAASC,GAAM,CACtC,GAAI7qB,EAAE0qB,KAAY1oB,EAAE4oB,GACnB,OAAO,EAERF,GAAU,EACVE,GAAU,EAEX,OAAO,EA4CR,SAAgBE,EAAgBC,GAC/B,OAAQ,OAAUA,GAAYA,GAAY,MAG3C,SAAgBC,EAAeD,GAC9B,OAAQ,OAAUA,GAAYA,GAAY,MAM3C,SAAgBE,EAAiB/B,EAAa/3B,EAAawZ,GAC1D,MAAMogB,EAAW7B,EAAI9f,WAAWuB,GAChC,GAAImgB,EAAgBC,IAAapgB,EAAS,EAAIxZ,EAAK;AAClD,MAAM+5B,EAAehC,EAAI9f,WAAWuB,EAAS,GAC7C,GAAIqgB,EAAeE,GAClB,OAAsCA,EAAe,OAA5CH,EAAW,OAAW,IAAgC,MAGjE,OAAOA,EAMR,SAASI,EAAiBjC,EAAave,GACtC,MAAMogB,EAAW7B,EAAI9f,WAAWuB,EAAS,GACzC,GAAIqgB,EAAeD,IAAapgB,EAAS,EAAG,CAC3C,MAAMygB,EAAelC,EAAI9f,WAAWuB,EAAS,GAC7C,GAAImgB,EAAgBM,GACnB,OAA0CL,EAAW,OAA5CK,EAAe,OAAW,IAA4B,MAGjE,OAAOL,EA8CR,SAASM,EAAyBnC,EAAave,GAC9C,MAAM2gB,EAAoBC,EAAkBC,cACtCr6B,EAAM+3B,EAAI93B,OACVq6B,EAAgB9gB,EAChB+gB,EAAmBT,EAAiB/B,EAAK/3B,EAAKwZ,GAC9CghB,EAA2BL,EAAkBM,qBAAqBF,GACxE/gB,GAAW+gB,GAAgB,MAAkD,EAAI,EAGjF,IAAIG,EAAoBF,EACxB,KAAOhhB,EAASxZ,GAAK,CACpB,MAAM26B,EAAgBb,EAAiB/B,EAAK/3B,EAAKwZ,GAC3CohB,EAAwBT,EAAkBM,qBAAqBE,GACrE,GAAIE,EAA8BH,EAAmBE,GACpD,MAEDphB,GAAWmhB,GAAa,MAAkD,EAAI,EAC9ED,EAAoBE,EAErB,MAAM3d,EAAYzD,EAKlB,IAFAA,EAAS8gB,EACTI,EAAoBF,EACbhhB,EAAS,GAAG,CAClB,MAAMshB,EAAgBd,EAAiBjC,EAAKve,GACtCuhB,EAAwBZ,EAAkBM,qBAAqBK,GACrE,GAAID,EAA8BE,EAAuBL,GACxD,MAEDlhB,GAAWshB,GAAa,MAAkD,EAAI,EAC9EJ,EAAoBK,EAGrB,MAAO,CAACvhB,EAAQyD,GA9iBjB5U,EAAAwtB,OAAA,SAAuBttB,KAAkBsC,GACxC,OAAoB,IAAhBA,EAAK5K,OACDsI,EAEDA,EAAMJ,QAAQkwB,GAAe,SAAU2C,EAAOC,GACpD,MAAMrU,EAAMsU,SAASD,EAAO,IAC5B,OAAOE,MAAMvU,IAAQA,EAAM,GAAKA,GAAO/b,EAAK5K,OAC3C+6B,EACAnwB,EAAK+b,OAQRve,EAAA+yB,OAAA,SAAuBC,GACtB,OAAOA,EAAKlzB,QAAQ,UAAU,SAAU6yB,GACvC,OAAQA,GACP,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,QACjB,QAAS,OAAOA,OAQnB3yB,EAAAiwB,uBAAAA,EASAjwB,EAAA2vB,KAAA,SAAqBQ,EAAkBC,EAAiB,KAEvD,OAAOE,EADSJ,EAAMC,EAAUC,GACVA,IAQvBpwB,EAAAkwB,MAAAA,EAuBAlwB,EAAAswB,MAAAA,EA6BAtwB,EAAAizB,4BAAA,SAA4C/e;AAC3C,OAAOA,EAAQpU,QAAQ,wCAAyC,QAAQA,QAAQ,QAAS,OAG1FE,EAAAkzB,eAAA,SAA+Bhf,GAC9B,OAAOA,EAAQpU,QAAQ,MAAO,KAM/BE,EAAAmzB,WAAA,SAA2BhD,EAAkBC,GAC5C,GAAID,EAASv4B,OAASw4B,EAAOx4B,OAC5B,OAAO,EAGR,GAAIu4B,IAAaC,EAChB,OAAO,EAGR,IAAK,IAAI14B,EAAI,EAAGA,EAAI04B,EAAOx4B,OAAQF,IAClC,GAAIy4B,EAASz4B,KAAO04B,EAAO14B,GAC1B,OAAO,EAIT,OAAO,GAMRsI,EAAAozB,SAAA,SAAyBjD,EAAkBC,GAC1C,MAAMW,EAAOZ,EAASv4B,OAASw4B,EAAOx4B,OACtC,OAAIm5B,EAAO,EACHZ,EAASltB,QAAQmtB,EAAQW,KAAUA,EACvB,IAATA,GACHZ,IAAaC,GActBpwB,EAAAqzB,aAAA,SAA6BC,EAAsBC,EAAkBhiB,EAAyB,IAC7F,IAAK+hB,EACJ,MAAM,IAAIlzB,MAAM,yCAEZmzB,IACJD,EAAerD,EAAuBqD,IAEnC/hB,EAAQiiB,YACN,KAAKC,KAAKH,EAAaI,OAAO,MAClCJ,EAAe,MAAQA,GAEnB,KAAKG,KAAKH,EAAaI,OAAOJ,EAAa17B,OAAS,MACxD07B,GAA8B,QAGhC,IAAIK,EAAY,GAchB,OAbIpiB,EAAQoU,SACXgO,GAAa,KAETpiB,EAAQqiB,YACZD,GAAa,KAEVpiB,EAAQsiB,YACXF,GAAa,KAEVpiB,EAAQuiB,UACXH,GAAa,KAGP,IAAII,OAAOT,EAAcK,IAGjC3zB,EAAAg0B,yBAAA,SAAyCC,GAGxC,MAAsB,MAAlBA,EAAOlU,QAAoC,OAAlBkU,EAAOlU,QAAqC,MAAlBkU,EAAOlU,QAAoC,WAAlBkU,EAAOlU,WAMzEkU,EAAOC,KAAK,KACc,IAArBD,EAAOtpB,YAG3B3K,EAAAm0B,4BAAA,SAA4CC,GAC3C,QAASA,EAAYzB,MAAM,0BAG5B3yB,EAAAq0B,YAAA,SAA4BJ;AAC3B,OAAQA,EAAOtO,OAAS,IAAM,KAC1BsO,EAAOK,WAAa,IAAM,KAC1BL,EAAOJ,UAAY,IAAM,KACxBI,EAAeH,QAAU,IAAM,KAOrC9zB,EAAAu0B,wBAAA,SAAwC7E,GACvC,IAAK,IAAIh4B,EAAI,EAAGC,EAAM+3B,EAAI93B,OAAQF,EAAIC,EAAKD,IAAK,CAC/C,MAAM88B,EAAS9E,EAAI9f,WAAWlY,GAC9B,GAAU,KAAN88B,GAAmC,IAANA,EAChC,OAAO98B,EAGT,OAAQ,GAOTsI,EAAAy0B,qBAAA,SAAqC/E,EAAavoB,EAAgB,EAAGmH,EAAcohB,EAAI93B,QACtF,IAAK,IAAIF,EAAIyP,EAAOzP,EAAI4W,EAAK5W,IAAK,CACjC,MAAM88B,EAAS9E,EAAI9f,WAAWlY,GAC9B,GAAU,KAAN88B,GAAmC,IAANA,EAChC,OAAO9E,EAAI1yB,UAAUmK,EAAOzP,GAG9B,OAAOg4B,EAAI1yB,UAAUmK,EAAOmH,IAO7BtO,EAAA00B,uBAAA,SAAuChF,EAAaiF,EAAqBjF,EAAI93B,OAAS,GACrF,IAAK,IAAIF,EAAIi9B,EAAYj9B,GAAK,EAAGA,IAAK,CACrC,MAAM88B,EAAS9E,EAAI9f,WAAWlY,GAC9B,GAAU,KAAN88B,GAAmC,IAANA,EAChC,OAAO98B,EAGT,OAAQ,GAGTsI,EAAAsG,QAAAA,EAUAtG,EAAA40B,kBAAA,SAAkCpuB,EAAWgC,GAC5C,MAAM7Q,EAAMwO,KAAKoD,IAAI/C,EAAE5O,OAAQ4Q,EAAE5Q,QACjC,IAAK,IAAIF,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAC7B,IAAIm5B,EAAQrqB,EAAEoJ,WAAWlY,GACrBo5B,EAAQtoB,EAAEoH,WAAWlY,GAEzB,GAAIm5B,IAAUC,EAEb,SAGGL,EAAmBI,KACtBA,GAAS,IAGNJ,EAAmBK,KACtBA,GAAS,IAGV,MAAMC,EAAOF,EAAQC,EAErB,GAAa,IAATC,EAIG,OAAIP,EAAmBK,IAAUL,EAAmBM,GAEnDC,EAGAzqB,EAAQE,EAAEykB,cAAeziB,EAAEyiB,eAIpC,OAAIzkB,EAAE5O,OAAS4Q,EAAE5Q,QACR,EACE4O,EAAE5O,OAAS4Q,EAAE5Q,OAChB,EAEA,GAIToI,EAAAwwB,mBAAAA,EAIAxwB,EAAAywB,mBAAAA,EAQAzwB,EAAA60B,iBAAA,SAAiCruB,EAAWgC,GAC3C,OAAOhC,EAAE5O,SAAW4Q,EAAE5Q,QAAU+4B,EAAmBnqB,EAAGgC,IA+BvDxI,EAAA80B,qBAAA,SAAqCpF,EAAajH,GACjD,MAAMsM,EAAkBtM,EAAU7wB;CAClC,QAAI6wB,EAAU7wB,OAAS83B,EAAI93B,SAIpB+4B,EAAmBjB,EAAKjH,EAAWsM,IAM3C/0B,EAAA8K,mBAAA,SAAmCtE,EAAWgC,GAE7C,IAAI9Q,EACHC,EAAMwO,KAAKoD,IAAI/C,EAAE5O,OAAQ4Q,EAAE5Q,QAE5B,IAAKF,EAAI,EAAGA,EAAIC,EAAKD,IACpB,GAAI8O,EAAEoJ,WAAWlY,KAAO8Q,EAAEoH,WAAWlY,GACpC,OAAOA,EAIT,OAAOC,GAMRqI,EAAAg1B,mBAAA,SAAmCxuB,EAAWgC,GAE7C,IAAI9Q,EACHC,EAAMwO,KAAKoD,IAAI/C,EAAE5O,OAAQ4Q,EAAE5Q,QAE5B,MAAMq9B,EAAazuB,EAAE5O,OAAS,EACxBs9B,EAAa1sB,EAAE5Q,OAAS,EAE9B,IAAKF,EAAI,EAAGA,EAAIC,EAAKD,IACpB,GAAI8O,EAAEoJ,WAAWqlB,EAAav9B,KAAO8Q,EAAEoH,WAAWslB,EAAax9B,GAC9D,OAAOA,EAIT,OAAOC,GAkBRqI,EAAAm1B,QAAA,SAAwB3uB,EAAWgC,GAClC,MAAM2oB,EAAO3qB,EAAE5O,OACf,IAAIy5B,EAAO7oB,EAAE5Q,OACTs5B,EAASC,EAAOE,EAEpB,GAAe,IAAXH,EACH,OAAO1qB,IAAMgC,EAAI2oB,EAAO,EAMzB,IALWD,EAAS,IACnBG,GAAQH,EACRA,EAAS,GAGHA,EAASC,GAAQE,EAAO,GAAG,CACjC,GAAIJ,EAAazqB,EAAG0qB,EAAQC,EAAM3oB,EAAG,EAAG6oB,GACvC,OAAOA,EAERA,GAAQ,EACRH,GAAU,EAEX,OAAO,GAkBRlxB,EAAAsxB,gBAAAA,EAIAtxB,EAAAwxB,eAAAA,EAOAxxB,EAAAyxB,iBAAAA,EAyBAzxB,EAAAo1B,eAAA,SAA+B1F,EAAave,GAC3C,MAAM2gB,EAAoBC,EAAkBC,cACtCC,EAAgB9gB,EAChBxZ,EAAM+3B,EAAI93B,OAEVs6B,EAAmBT,EAAiB/B,EAAK/3B,EAAKwZ,GACpDA,GAAW+gB,GAAgB,MAAkD,EAAI,EAEjF,IAAIG,EAAoBP,EAAkBM,qBAAqBF,GAC/D,KAAO/gB,EAASxZ,GAAK,CACpB,MAAM26B,EAAgBb,EAAiB/B,EAAK/3B,EAAKwZ,GAC3CohB,EAAwBT,EAAkBM,qBAAqBE,GACrE,GAAIE,EAA8BH,EAAmBE,GACpD,MAEDphB,GAAWmhB,GAAa,MAAkD,EAAI,EAC9ED,EAAoBE,EAGrB,OAAQphB,EAAS8gB,GAGlBjyB,EAAAq1B,eAAA,SAA+B3F,EAAave,GAC3C,MAAM2gB,EAAoBC,EAAkBC,cACtCC,EAAgB9gB,EAEhB+gB,EAAmBP,EAAiBjC,EAAKve,GAC/CA,GAAW+gB,GAAgB,MAAkD,EAAI,EAEjF,IAAIG,EAAoBP,EAAkBM,qBAAqBF,GAC/D,KAAO/gB,EAAS,GAAG,CAClB,MAAMshB,EAAgBd,EAAiBjC,EAAKve,GACtCuhB,EAAwBZ,EAAkBM,qBAAqBK,GACrE,GAAID,EAA8BE,EAAuBL,GACxD,MAEDlhB,GAAWshB,GAAa,MAAkD,EAAI;AAC9EJ,EAAoBK,EAGrB,OAAQT,EAAgB9gB,GAwCzBnR,EAAAs1B,wBAAA,SAAwC5F,EAAave,GACpD,OAAIA,EAAS,GAAKqgB,EAAe9B,EAAI9f,WAAWuB,IACxC0gB,EAAyBnC,EAAKve,EAAS,GAExC0gB,EAAyBnC,EAAKve,IAOtCnR,EAAAu1B,WAAA,SAA2B7F,GAC1B,MAAM8F,EAAS9F,EAAI93B,OAKnB,IAAI69B,EAAa,EACbC,EAAY,EAChB,KAAOA,EAAYF,GAAQ,CAC1B,MAAMG,EAAYlE,EAAiB/B,EAAK8F,EAAQE,GAChDA,GAAcC,GAAS,MAAkD,EAAI,EAG5EF,GADGE,EAAY,IACD,EACJA,EAAY,KACR,EACJA,EAAY,MACR,EAEA,EAKhB,MAAMxtB,EAAM,IAAIytB,WAAWH,GAC3BC,EAAY,EACZ,IAAIG,EAAY,EAChB,KAAOH,EAAYF,GAAQ,CAC1B,MAAMG,EAAYlE,EAAiB/B,EAAK8F,EAAQE,GAChDA,GAAcC,GAAS,MAAkD,EAAI,EAEzEA,EAAY,IACfxtB,EAAI0tB,KAAeF,EACTA,EAAY,MACtBxtB,EAAI0tB,KAAe,KAA2B,KAAZF,KAAoD,EACtFxtB,EAAI0tB,KAAe,KAA2B,GAAZF,KAAoD,GAC5EA,EAAY,OACtBxtB,EAAI0tB,KAAe,KAA2B,MAAZF,KAAoD,GACtFxtB,EAAI0tB,KAAe,KAA2B,KAAZF,KAAoD,EACtFxtB,EAAI0tB,KAAe,KAA2B,GAAZF,KAAoD,IAEtFxtB,EAAI0tB,KAAe,KAA2B,QAAZF,KAAoD,GACtFxtB,EAAI0tB,KAAe,KAA2B,OAAZF,KAAoD,GACtFxtB,EAAI0tB,KAAe,KAA2B,KAAZF,KAAoD,EACtFxtB,EAAI0tB,KAAe,KAA2B,GAAZF,KAAoD,GAIxF,OAAOxtB,GAORnI,EAAA81B,WAAA,SAA2Btb,GAG1B,MAAM7iB,EAAM6iB,EAAOub,WACbt+B,EAAmB,GACzB,IAAI0Z,EAAS,EACb,KAAOA,EAASxZ,GAAK,CACpB,MAAMq+B,EAAKxb,EAAOrJ,GAClB,IAAIwkB,EA2BJ,IAxBCA,EAFGK,GAAM,KAAc7kB,EAAS,EAAIxZ,GAGb,EAAnB6iB,EAAOrJ,OAA2B,KAAQ,GACrB,GAAnBqJ,EAAOrJ,OAA2B,KAAQ,GACvB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,GACtB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,EAErC6kB,GAAM,KAAc7kB,EAAS,EAAIxZ,GAGpB,GAAnB6iB,EAAOrJ,OAA2B,KAAQ,GACrB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,GACtB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,EAErC6kB,GAAM,KAAc7kB,EAAS,EAAIxZ,GAGpB,GAAnB6iB,EAAOrJ,OAA2B,IAAO,GACpB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,EAInCqJ,EAAOrJ,OAGF,GAAKwkB,GAAa,OAAYA,GAAa,OAAUA,GAAa,MAEnFl+B,EAAOc,KAAKmN,OAAOqK,aAAa4lB,SAC1B,GAAIA,GAAa,OAAYA,GAAa,QAAU;AAE1D,MAAMM,EAASN,EAAY,MACrBO,EAAK,QAAoB,QAATD,KAAqC,IACrDE,EAAK,QAAoB,KAATF,KAAqC,GAC3Dx+B,EAAOc,KAAKmN,OAAOqK,aAAammB,IAChCz+B,EAAOc,KAAKmN,OAAOqK,aAAaomB,SAGhC1+B,EAAOc,KAAKmN,OAAOqK,aAAa,QAIlC,OAAOtY,EAAOwD,KAAK,KAMpB,MAAMm7B,EAAe,2eAKrBp2B,EAAAq2B,YAAA,SAA4B3G,GAC3B,OAAO0G,EAAa3C,KAAK/D,IAM1B,MAAM4G,EAAiB,0MAEvBt2B,EAAAu2B,cAAA,SAA8B7G,GAC7B,OAAO4G,EAAe7C,KAAK/D,IAG5B,MAAM8G,EAAiB;CAiBvB,SAAgBC,EAAqBlF,GAwCpC,OADAA,GAAYA,IAEE,OAAUA,GAAY,OAC/BA,GAAY,OAAUA,GAAY,OAClCA,GAAY,OAAUA,GAAY,MAxDxCvxB,EAAA02B,aAAA,SAA6BhH,GAC5B,OAAO8G,EAAe/C,KAAK/D,IAG5B1vB,EAAA22B,2BAAA,SAA2CjH,GAC1C,IAAK,IAAIh4B,EAAI,EAAGC,EAAM+3B,EAAI93B,OAAQF,EAAIC,EAAKD,IAC1C,GAAI++B,EAAqB/G,EAAI9f,WAAWlY,IACvC,OAAO,EAGT,OAAO,GAGRsI,EAAAy2B,qBAAAA,EAmDAz2B,EAAA42B,iBAAA,SAAiC1qB,GAChC,OACEA,GAAK,QAAWA,GAAK,QAAaA,GAAK,MAAQA,GAAK,OAAWA,GAAK,QAAUA,GAAK,QAChFA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QACpFA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAQ1FlM,EAAA62B,KAAA,SAAqB1nB,EAAcxH,GAClC,GAAIwH,EAAKvX,OAAS+P,EACjB,OAAOwH,EAGR,MAAM2nB,EAAK,MACX,IAAIp/B,EAAI,EACR,KAAOo/B,EAAGrD,KAAKtkB,MACVA,EAAKvX,OAASk/B,EAAGnsB,UAAYhD,IAIjCjQ,EAAIo/B,EAAGnsB,UACPmsB,EAAGnsB,WAAa,EAGjB,OAAOwE,EAAKnS,UAAUtF,GAAGoI,QAAQ,MAAO,KAKzC,MAAMi3B,EAAK,kBACLC,EAAc,cACdC,EAAY,aA+BlB,SAAgBC,EAAkBxH,GACjC,SAAUA,GAAOA,EAAI93B,OAAS,GAAsB,QAAjB83B,EAAI9f,WAAW,IAyGnD,SAAgB4iB,EAA8B2E,EAA+BC;AAI5E,OAAc,IAAVD,EAEe,IAAVC,GAAqD,IAAVA,GAOtC,IAAVD,GACW,IAAVC,KAIS,IAAVD,GAAsD,IAAVA,GAAiD,IAAVA,IAGzE,IAAVC,GAAsD,IAAVA,GAAiD,IAAVA,IAQzE,IAAVD,GACW,IAAVC,GAAgD,IAAVA,GAAgD,KAAVA,GAAiD,KAAVA,MAI1G,KAAVD,GAAiD,IAAVA,GAC5B,IAAVC,GAAgD,KAAVA,MAI7B,KAAVD,GAAkD,KAAVA,GAC7B,KAAVC,KAOS,IAAVA,GAAqD,KAAVA,IAQjC,IAAVA,IAGU,IAAVD,KAMU,KAAVA,GAAkD,KAAVC,KAO9B,IAAVD,GAAiE,IAAVC,WA9M5Dp3B,EAAAq3B,sBAAA,SAAsC3H,GAOrC,OANIA,IAGHA,GADAA,GADAA,EAAMA,EAAI5vB,QAAQi3B,EAAI,KACZj3B,QAAQk3B,EAAa,KACrBl3B,QAAQm3B,EAAW,KAGvBvH,GAGK1vB,EAAAs3B,cAAyC,WACrD,GAAmD,mBAAvC5xB,OAAOpF,UAAkBqrB,UAEpC,OAAO,SAAU+D,GAAe,OAAOA,GACjC,CAGN,MAAM6H,EAAQ,mBACd,OAAO,SAAU7H,GAChB,OAAQA,EAAY/D,UAAU,OAAO7rB,QAAQy3B,EAAO,MATD,GAiBzCv3B,EAAAw3B,mBAAqB9xB,OAAOqK,aAAY,OAErD/P,EAAAk3B,kBAAAA,EAIAl3B,EAAAy3B,aAAA,SAA6B/H,GAC5B,OAAOwH,EAAkBxH,GAAOA,EAAIgI,OAAO,GAAKhI,GAGjD1vB,EAAA23B,SAAA,SAAyBjI,GACxB,OAAOkI,KAAKC,mBAAmBnI,KAGhC1vB,EAAA83B,OAAA,SAAuBC,EAAWt3B,GACjC,IAAIhJ,EAAS,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAI+I,EAAO/I,IAC1BD,GAAUsgC,EAEX,OAAOtgC,GAORuI,EAAAg4B,cAAA,SAA8B/+B,EAAgBg/B,GAC7C,IAAKh/B,IAAWg/B,EACf,OAAO,EAGR,GAAIh/B,EAAOrB,OAASqgC,EAAMrgC,OACzB,OAAO,EAGR,MAAMsgC,EAAWD,EAAMrgC,OACjBugC,EAAcl/B,EAAOgyB,cAE3B,IAAInuB,EAAQ,EACRC,GAAe,EACnB,KAAOD,EAAQo7B,GAAU,CACxB,MAAMj1B,EAAUk1B,EAAYl1B,QAAQg1B,EAAMn7B,GAAQC,EAAc,GAChE,GAAIkG,EAAU,EACb,OAAO,EAGRlG,EAAckG,EAEdnG,IAGD,OAAO;AAGRkD,EAAAo4B,2BAAA,SAA2Cn/B,EAAgBo/B,GAAqB,GAC/E,QAAKp/B,IAIDo/B,IACHp/B,EAASA,EAAO6G,QAAQ,OAAQ,KAG1B7G,EAAOgyB,gBAAkBhyB,IAGjC+G,EAAAs4B,qBAAA,SAAqC5I,GACpC,OAAOA,EAAIgE,OAAO,GAAG6E,cAAgB7I,EAAIp2B,MAAM,IAGhD0G,EAAAw4B,UAAA,SAA0B9I,EAAa/nB,EAAI,GAC1C,GAAU,IAANA,EACH,MAAO,GAGR,IAAI4W,GAAO,EACX,GACCA,EAAMmR,EAAIzsB,QAAQ,KAAMsb,EAAM,GAC9B5W,UACQA,EAAI,GAAK4W,GAAO,GAEzB,OAAOA,GAAO,EACbmR,EAAIgI,OAAO,EAAGnZ,GACdmR,GAMF1vB,EAAAy4B,iBAAA,SAAiC9wB,GAKhC,OAFAA,GAAQ,IAFY,GAKZjC,OAAOqK,aAAa,GAAapI,GAGlCjC,OAAOqK,aAAa,GAAapI,EARpB,KAarB3H,EAAAoyB,qBAAA,SAAqCuD,GAEpC,OAD0B5D,EAAkBC,cACnBI,qBAAqBuD,IAG/C31B,EAAAwyB,8BAAAA,EAgFA,SAAkBkG,GACjBA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,GAAA,GAAA,KACAA,EAAAA,EAAA,GAAA,GAAA,KACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,EAAA,GAAA,IACAA,EAAAA,EAAA,EAAA,GAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,sBAAA,IAAA,wBAfD,CAAkB14B,EAAA04B,oBAAA14B,EAAA04B,kBAAiB,KAkBnC,MAAM3G,EAYL1wB;AACCC,KAAKq3B,MAyCCl8B,KAAKC,MAAM;CAnDX2E,qBAIN,OAHK0wB,EAAkB6G,YACtB7G,EAAkB6G,UAAY,IAAI7G,GAE5BA,EAAkB6G,UASnBv3B,qBAAqBs0B,GAE3B,GAAIA,EAAY,GACf,OAAa,KAATA,EACH,EAEY,KAATA,EACH,EAED,EAGD,GAAIA,EAAY,IACf,OAAA,EAGD,MAAMl6B,EAAO6F,KAAKq3B,MACZE,EAAYp9B,EAAK7D,OAAS,EAChC,IAAIkhC,EAAY,EAChB,KAAOA,GAAaD,GACnB,GAAIlD,EAAYl6B,EAAK,EAAIq9B,GAExBA,GAAY,MACN,CAAA,KAAInD,EAAYl6B,EAAK,EAAIq9B,EAAY,IAK3C,OAAOr9B,EAAK,EAAIq9B,EAAY,GAH5BA,EAAY,EAAIA,EAAY,EAO9B,OAAA,GA9Cc/G,EAAA6G,UAAsC,qHC7iCtD,MAAMG,EAA+B,oBAAXC,OACpBC,EAAyC,oBAAhBC,YACzBC,EAAyC,oBAAhBC,YAE/B,IAAIC,EACAC,EAEJ,MAAaC,EAsDZl4B,YAAoBmZ,GACnBlZ,KAAKkZ,OAASA,EACdlZ,KAAKy0B,WAAaz0B,KAAKkZ,OAAOub,WAtD/B10B,aAAa00B,GACZ,OACQ,IAAIwD,EADRR,EACiBC,OAAOQ,YAAYzD,GAEnB,IAAIH,WAAWG,IAIrC10B,YAAYqoB,GAMX,OALIqP,IAAeC,OAAOS,SAAS/P,KAGlCA,EAASsP,OAAOjgC,KAAK2wB,EAAOlP,OAAQkP,EAAOgQ,WAAYhQ,EAAOqM,aAExD,IAAIwD,EAAS7P,GAGrBroB,kBAAkB0e,GACjB,OAAIgZ,EACI,IAAIQ,EAASP,OAAOjgC,KAAKgnB,IACtBkZ,GACLI,IACJA,EAAc,IAAIH,aAEZ,IAAIK,EAASF,EAAYM,OAAO5Z,KAEhC,IAAIwZ,EAASK,EAAQrE,WAAWxV,IAIzC1e,cAAcod,EAAqBob,GAClC,QAA2B,IAAhBA,EAA6B,CACvCA,EAAc,EACd,IAAK,IAAIniC,EAAI,EAAGC,EAAM8mB,EAAQ7mB,OAAQF,EAAIC,EAAKD,IAC9CmiC,GAAepb,EAAQ/mB,GAAGq+B,WAI5B,MAAMjJ,EAAMyM,EAASO,MAAMD,GAC3B,IAAI1oB,EAAS;CACb,IAAK,IAAIzZ,EAAI,EAAGC,EAAM8mB,EAAQ7mB,OAAQF,EAAIC,EAAKD,IAAK,CACnD,MAAMqJ,EAAU0d,EAAQ/mB,GACxBo1B,EAAIprB,IAAIX,EAASoQ,GACjBA,GAAUpQ,EAAQg1B,WAGnB,OAAOjJ,EAWRzrB,WACC,OAAI03B,EACIz3B,KAAKkZ,OAAOuB,WACTod,GACLG,IACJA,EAAc,IAAIF,aAEZE,EAAYS,OAAOz4B,KAAKkZ,SAExBof,EAAQ9D,WAAWx0B,KAAKkZ,QAIjCnZ,MAAM8F,EAAgBmH,GAIrB,OAAO,IAAIirB,EAASj4B,KAAKkZ,OAAOwf,SAAS7yB,EAAwBmH,IAGlEjN,IAAIyE,EAAiBqL,GACpB7P,KAAKkZ,OAAO9Y,IAAIoE,EAAM0U,OAAQrJ,GAG/B9P,aAAa8P,GACZ,OAAO8oB,EAAa34B,KAAKkZ,OAAQrJ,GAGlC9P,cAAcnB,EAAeiR,GAC5B+oB,EAAc54B,KAAKkZ,OAAQta,EAAOiR,GAGnC9P,UAAU8P,GACT,OA2BF,SAAmB4O,EAAoB5O,GACtC,OAAO4O,EAAO5O,GA5BNgpB,CAAU74B,KAAKkZ,OAAQrJ,GAG/B9P,WAAWnB,EAAeiR,IA4B3B,SAAoBipB,EAAyBl6B,EAAeiR,GAC3DipB,EAAYjpB,GAAUjR,EA5BrBm6B,CAAW/4B,KAAKkZ,OAAQta,EAAOiR,IAIjC,SAAgB8oB,EAAala,EAAoB5O,GAChD,OACC4O,EAAO5O,GAAU,GAAK,GACC,MAArB4O,EAAO5O,EAAS,GACK,IAArB4O,EAAO5O,EAAS,GAChB4O,EAAO5O,EAAS,GAIpB,SAAgB+oB,EAAcE,EAAyBl6B,EAAeiR,GACrEipB,EAAYjpB,EAAS,GAAKjR,EAC1BA,KAAkB,EAClBk6B,EAAYjpB,EAAS,GAAKjR,EAC1BA,KAAkB,EAClBk6B,EAAYjpB,EAAS,GAAKjR,EAC1BA,KAAkB,EAClBk6B,EAAYjpB,GAAUjR,EApHvBF,EAAAu5B,SAAAA,EAoGAv5B,EAAAi6B,aAAAA,EASAj6B,EAAAk6B,cAAAA,EAwBAl6B,EAAAs6B,iBAAA,SAAiC5L,GAChC,OAAO6L,EAAQ9L,gBAA0BC,EAAUC,GAAU4K,EAASvuB,OAAO2jB,KAG9E3uB,EAAAw6B,iBAAA,SAAiChgB,GAChC,OAAO+f,EAAQjL,WAAqB9U,IAGrCxa,EAAAy6B,eAAA,SAA+BvL,GAC9B,OAAOqL,EAAQtL,cAAwBC,EAAQP,GAAU4K,EAASvuB,OAAO2jB,KAG1E3uB,EAAA06B,eAAA,SAA+BlgB,GAC9B,OAAO+f,EAAQlL,SAAmB7U,EAAQmU,GAAU4K,EAASvuB,OAAO2jB,KAGrE3uB,EAAA26B,6BAAA,SAA6CzL,GAC5C,OAAOqL,EAAQhL,UAAyCL,EAAQ;AAAEzzB,KAAMA,GAAwB,iBAATA,EAAoB89B,EAASqB,WAAWn/B,GAAQ89B,EAASsB,KAAKp/B,IAASkzB,GAAU4K,EAASvuB,OAAO2jB,KAGzL3uB,EAAA86B,yBAAA,WACC,OAAOP,EAAQ9M,mBAA6BkB,GAAU4K,EAASvuB,OAAO2jB,gHCpKvE3uB,EAAA+6B,iBAAA,SAAiCC,GAChC,OAAOA,EAAKC,cACX,IAAMC,EAAAtL,IAAIoL,EAAKG,WAAa,EAAG,GAC/B,IAAMD,EAAAtL,IAAIoL,EAAKI,UAAW,GAC1B,IAAMF,EAAAtL,IAAIoL,EAAKK,WAAY,GAC3B,IAAMH,EAAAtL,IAAIoL,EAAKM,aAAc,GAC7B,IAAMJ,EAAAtL,IAAIoL,EAAKO,aAAc,GAC7B,KAAOP,EAAKQ,kBAAoB,KAAMC,QAAQ,GAAGniC,MAAM,EAAG,GAC1D,uECLF,SAAgBwwB,EAAgBzuB,GAC/B,OAAW,KAAJA,GAA+B,KAAJA,mDADnC2E,EAAA8pB,gBAAAA,EASA9pB,EAAA07B,UAAA,SAA0BC,GACzB,OAAOA,EAAO77B,QAAQ,SAAU87B,EAAA5O,MAAMhZ,MAQvChU,EAAA67B,QAAA,SAAwBpiC,EAAcua,EAAc4nB,EAAA5O,MAAMhZ,KAEzD,IAAKva,EACJ,MAAO,GAGR,MAAM9B,EAAM8B,EAAK7B,OACXkkC,EAAcriC,EAAKmW,WAAW,GACpC,GAAIka,EAAgBgS,GAAc,CACjC,GAAIhS,EAAgBrwB,EAAKmW,WAAW,MAG9Bka,EAAgBrwB,EAAKmW,WAAW,IAAK,CACzC,IAAIP,EAAM,EACV,MAAMlI,EAAQkI,EACd,KAAOA,EAAM1X,IACRmyB,EAAgBrwB,EAAKmW,WAAWP,IADnBA;AAKlB,GAAIlI,IAAUkI,IAAQya,EAAgBrwB,EAAKmW,WAAWP,EAAM,IAE3D,IADAA,GAAO,EACAA,EAAM1X,EAAK0X,IACjB,GAAIya,EAAgBrwB,EAAKmW,WAAWP,IACnC,OAAO5V,EAAKH,MAAM,EAAG+V,EAAM,GACzBvP,QAAQ,SAAUkU,GASzB,OAAOA,EAED,GAAI+nB,EAAqBD,IAGT,KAAlBriC,EAAKmW,WAAW,GACnB,OAAIka,EAAgBrwB,EAAKmW,WAAW,IAG5BnW,EAAKH,MAAM,EAAG,GAAK0a,EAInBva,EAAKH,MAAM,EAAG,GAQxB,IAAI+V,EAAM5V,EAAKwJ,QAAQ,OACvB,IAAa,IAAToM,EAEH,IADAA,GAAO,EACAA,EAAM1X,EAAK0X,IACjB,GAAIya,EAAgBrwB,EAAKmW,WAAWP,IACnC,OAAO5V,EAAKH,MAAM,EAAG+V,EAAM,GAK9B,MAAO,IAURrP,EAAAg8B,MAAA,SAAsBviC,GACrB,IAAKuvB,EAAAzB,UAEJ,OAAO,EAGR,IAAK9tB,GAAQA,EAAK7B,OAAS,EAE1B,OAAO,EAGR,IAAIyD,EAAO5B,EAAKmW,WAAW,GAC3B,GAAQ,KAAJvU,EACH,OAAO,EAGR,GAAQ,MADRA,EAAO5B,EAAKmW,WAAW,IAEtB,OAAO,EAER,IAAIP,EAAM,EACV,MAAMlI,EAAQkI,EACd,KAAOA,EAAM5V,EAAK7B,QAET,MADRyD,EAAO5B,EAAKmW,WAAWP,IADEA,KAM1B,OAAIlI,IAAUkI,IAGdhU,EAAO5B,EAAKmW,WAAWP,EAAM,IACzByjB,MAAMz3B,IAAa,KAAJA,IAOpB,MAAM4gC,EAA6B,mBAC7BC,EAA0B,SAC1BC,EAA0B,iDAuFhC,SAAgBJ,EAAqBK,GACpC,OAAOA,GAAK,IAAkBA,GAAK,IAAkBA,GAAK,IAAkBA,GAAK,IAvFlFp8B,EAAAq8B,gBAAA,SAAgC/jC,EAAiCgkC,EAAuBtT,EAAAzB,WACvF,MAAMgV,EAAmBD,EAAcL,EAA6BC,EAEpE,SAAK5jC,GAAwB,IAAhBA,EAAKV,QAAgB,QAAQ67B,KAAKn7B,MAI/CikC,EAAiB5xB,UAAY,GACzB4xB,EAAiB9I,KAAKn7B,OAItBgkC,IAAeH,EAAwB1I,KAAKn7B,MAInC,MAATA,GAAyB,OAATA,MAIhBgkC,GAAyC,MAA1BhkC,EAAKA,EAAKV,OAAS,QAIlC0kC,GAAehkC,EAAKV,SAAWU,EAAKq3B,OAAO/3B,WAI3CU,EAAKV,OAAS,WAOnBoI,EAAAw8B,QAAA,SAAwBC,EAAeC,EAAepI,GACrD,MAAMqI,EAAkBF,IAAUC;CAClC,OAAKpI,GAAcqI,EACXA,KAGHF,IAAUC,IAIRxB,EAAArG,iBAAiB4H,EAAOC,IAGhC18B,EAAA48B,gBAAA,SAAgCnjC,EAAcgvB,EAAmB6L,EAAsBnK,EAAYyR,EAAA5nB,KAClG,GAAIva,IAASgvB,EACZ,OAAO,EAGR,IAAKhvB,IAASgvB,EACb,OAAO,EAGR,GAAIA,EAAU7wB,OAAS6B,EAAK7B,OAC3B,OAAO,EAGR,GAAI08B,EAAY,CAEf,IADmB4G,EAAApG,qBAAqBr7B,EAAMgvB,GAE7C,OAAO,EAGR,GAAIA,EAAU7wB,SAAW6B,EAAK7B,OAC7B,OAAO,EAGR,IAAIilC,EAAYpU,EAAU7wB,OAK1B,OAJI6wB,EAAUiL,OAAOjL,EAAU7wB,OAAS,KAAOuyB,GAC9C0S,IAGMpjC,EAAKi6B,OAAOmJ,KAAe1S,EAOnC,OAJI1B,EAAUiL,OAAOjL,EAAU7wB,OAAS,KAAOuyB,IAC9C1B,GAAa0B,GAGqB,IAA5B1wB,EAAKwJ,QAAQwlB,IAGrBzoB,EAAA+7B,qBAAAA,EAIA/7B,EAAA88B,iBAAA,SAAiCrU,EAAmBM,GAiCnD,OA9BIC,EAAAzB,WAAa2T,EAAA9H,SAAS3K,EAAW,OACpCA,GAAamT,EAAA5nB,KAIT4nB,EAAAxQ,WAAW3C,KACfA,EAAYmT,EAAA3gC,KAAK8tB,EAAKN,IAIvBA,EAAYmT,EAAAjQ,UAAUlD,GAGlBO,EAAAzB,WACHkB,EAAYyS,EAAA5K,MAAM7H,EAAWmT,EAAA5nB,KAGzBknB,EAAA9H,SAAS3K,EAAW,OACvBA,GAAamT,EAAA5nB,OAIdyU,EAAYyS,EAAA5K,MAAM7H,EAAWmT,EAAA5nB,QAI5ByU,EAAYmT,EAAA5nB,KAIPyU,GAGRzoB,EAAA+8B,oBAAA,SAAoCtjC,GACnC,MAAMujC,EAAiBpB,EAAAjQ,UAAUlyB,GAEjC,OAAIuvB,EAAAzB,YACC9tB,EAAK7B,OAAS,KAIXmkC,EAAqBiB,EAAeptB,WAAW,KACtB,KAA5BotB,EAAeptB,WAAW,KACT,IAAhBnW,EAAK7B,QAA4C,KAA5BolC,EAAeptB,WAAW,KAG9CotB,IAAmBpB,EAAA5O,MAAMhZ,2GCtRjC,MAAMipB,EAAU,CACfC,OAAQ,SACRC,OAAQ,SACRhiC,UAAW,YACXsZ,OAAQ,SACR2oB,SAAU;CAMX,SAAgBnzB,EAAQnE,GACvB,OAAIkE,MAAMC,QACFD,MAAMC,QAAQnE,MAGlBA,UAAiBA,EAAY,SAAMm3B,EAAQC,QAAUp3B,EAAMu3B,cAAgBrzB,OAUhF,SAAgBszB,EAAS5N,GACxB,cAAW,IAAUuN,EAAQE,QAAUzN,aAAehqB,OAmBvD,SAAgB63B,EAASxzB,GAIxB,eAAcA,IAAQkzB,EAAQxoB,QAClB,OAAR1K,GACCC,MAAMC,QAAQF,IACbA,aAAegqB,QACfhqB,aAAevR,MAyBtB,SAAgBglC,EAAYzzB,GAC3B,cAAc,IAAUkzB,EAAQ9hC,UAMjC,SAAgBsiC,EAAkB1zB,GACjC,OAAOyzB,EAAYzzB,IAAgB,OAARA,EA5E5B/J,EAAAiK,QAAAA,EAeAjK,EAAAs9B,SAAAA,EAWAt9B,EAAA09B,cAAA,SAA8Bx9B,GAC7B,OAAO+J,EAAQ/J,IAAkBA,EAAO6tB,MAAMpuB,GAAQ29B,EAAS39B,KAQhEK,EAAAu9B,SAAAA,EAeAv9B,EAAA29B,SAAA,SAAyB5zB,GACxB,cAAY,IAAUkzB,EAAQC,QAAUnzB,aAAejG,UAAYgvB,MAAM/oB,IAU1E/J,EAAA49B,UAAA,SAA0B7zB,GACzB,OAAe,IAARA,IAAwB,IAARA,GAMxB/J,EAAAw9B,YAAAA,EAOAx9B,EAAAy9B,kBAAAA,EAKAz9B,EAAA69B,WAAA,SAA2BC,EAAgBlqB,GAC1C,IAAKkqB,EACJ,MAAM,IAAI19B,MAAMwT,EAAO,8BAA8BA,KAAU,oBAOjE5T,EAAA+9B,gBAAA,SAAmC7yB,GAClC,GAAIuyB,EAAkBvyB,GACrB,MAAM,IAAI9K,MAAM,mDAGjB,OAAO8K,GASRlL,EAAAg+B,iBAAA,YAAoCx7B,GACnC,MAAM/K,EAAS,GAEf,IAAK,IAAIC,EAAI,EAAGA,EAAI8K,EAAK5K,OAAQF,IAAK,CACrC,MAAMwT,EAAM1I,EAAK9K,GAEjB,GAAI+lC,EAAkBvyB,GACrB,MAAM,IAAI9K,MAAM,uCAAuC1I;CAGxDD,EAAOc,KAAK2S,GAGb,OAAOzT,GAGR,MAAM4I,EAAiBpB,OAAOqB,UAAUD,eAsBxC,SAAgB49B,EAAWl0B,GAC1B,cAAcA,IAAQkzB,EAAQG,SAmB/B,SAAgBc,EAAmBhzB,EAAUizB,GAE5C,GAAIb,EAASa,IACZ,UAAWjzB,IAAQizB,EAClB,MAAM,IAAI/9B,MAAM,8CAA8C+9B,UAEzD,GAAIF,EAAWE,GAAa,CAClC,IACC,GAAIjzB,aAAeizB,EAClB,OAEA,MAAAloB,IAGF,IAAKwnB,EAAkBvyB,IAAQA,EAAImyB,cAAgBc,EAClD,OAED,GAA0B,IAAtBA,EAAWvmC,SAAoD,IAApCumC,EAAW59B,UAAKpF,EAAW+P,GACzD,OAED,MAAM,IAAI9K,MAAM,8IAIlB,SAAgBg+B,EAAoBr0B,GACnC,IAAIwO,EAAgB,GAChB8lB,EAAQp/B,OAAOq/B,eAAev0B,GAClC,KAAO9K,OAAOqB,YAAc+9B,GAC3B9lB,EAAMA,EAAIvN,OAAO/L,OAAO8D,oBAAoBs7B,IAC5CA,EAAQp/B,OAAOq/B,eAAeD,GAE/B,OAAO9lB,EApERvY,EAAAu+B,cAAA,SAA8Bx0B,GAC7B,IAAKwzB,EAASxzB,GACb,OAAO,EAGR,IAAK,IAAIlK,KAAOkK,EACf,GAAI1J,EAAeE,KAAKwJ,EAAKlK,GAC5B,OAAO,EAIT,OAAO,GAMRG,EAAAi+B,WAAAA,EAOAj+B,EAAAw+B,aAAA,YAAgCC,GAC/B,OAAOA,EAAQ7mC,OAAS,GAAK6mC,EAAQ1Q,MAAMkQ,IAK5Cj+B,EAAA0+B,oBAAA,SAAoCl8B,EAAam8B,GAChD,MAAMhnC,EAAMwO,KAAKoD,IAAI/G,EAAK5K,OAAQ+mC,EAAY/mC,QAC9C,IAAK,IAAIF,EAAI,EAAGA,EAAIC,EAAKD,IACxBwmC,EAAmB17B,EAAK9K,GAAIinC,EAAYjnC,KAI1CsI,EAAAk+B,mBAAAA,EAwBAl+B,EAAAo+B,oBAAAA,EAUAp+B,EAAA4+B,kBAAA,SAAkC70B;AACjC,MAAM80B,EAAoB,GAC1B,IAAK,MAAMxpB,KAAQ+oB,EAAoBr0B,GACJ,mBAAtBA,EAAYsL,IACvBwpB,EAAQtmC,KAAK8c,GAGf,OAAOwpB,GAGR7+B,EAAA8+B,kBAAA,SAAoDC,EAAuBC,GAC1E,MAAMC,EAAqBC,IACnB,WACN,MAAM18B,EAAOwH,MAAM1J,UAAUhH,MAAMiH,KAAK0M,UAAW,GACnD,OAAO+xB,EAAOE,EAAQ18B,KAIxB,IAAI/K,EAAS,GACb,IAAK,MAAM0nC,KAAcJ,EAClBtnC,EAAQ0nC,GAAcF,EAAkBE,GAE/C,OAAO1nC,GAMRuI,EAAAo/B,oBAAA,SAAuClzB,GACtC,OAAa,OAANA,OAAa/Q,EAAY+Q,GAMjClM,EAAAq/B,oBAAA,SAAuCnzB,GACtC,YAAoB,IAANA,EAAoB,KAAOA,8GChP1ClM,EAAAs/B,UAAA,SAAgBA,EAAav1B,GAC5B,IAAKA,GAAsB,iBAARA,EAClB,OAAOA,EAER,GAAIA,aAAegqB,OAElB,OAAOhqB,EAER,MAAMtS,EAAcuS,MAAMC,QAAQF,GAAO,GAAK,GAQ9C,OAPA9K,OAAOC,KAAU6K,GAAKpJ,QAASd,IACpBkK,EAAKlK,IAAmC,iBAAdkK,EAAKlK,GACxCpI,EAAOoI,GAAOy/B,EAAgBv1B,EAAKlK,IAEnCpI,EAAOoI,GAAakK,EAAKlK,KAGpBpI,GAGRuI,EAAAu/B,WAAA,SAA8Bx1B,GAC7B,IAAKA,GAAsB,iBAARA,EAClB,OAAOA,EAER,MAAM3F,EAAe,CAAC2F,GACtB,KAAO3F,EAAMxM,OAAS,GAAG,CACxB,MAAMmS,EAAM3F,EAAMkZ,QAClBre,OAAO6X,OAAO/M,GACd,IAAK,MAAMlK,KAAOkK,EACjB,GAAIy1B,EAAgBj/B,KAAKwJ,EAAKlK,GAAM,CACnC,MAAMwV,EAAOtL,EAAIlK,GACG,iBAATwV,GAAsBpW,OAAOif,SAAS7I,IAChDjR,EAAM7L,KAAK8c,IAKf,OAAOtL,GAGR,MAAMy1B,EAAkBvgC,OAAOqB,UAAUD,eA8EzC,SAAgB+H,EAAOC,EAAUC,GAChC,GAAID,IAAQC,EACX,OAAO,EAER,GAAID,MAAAA,GAAAA,MAAqCC,EACxC,OAAO;CAER,UAAWD,UAAeC,EACzB,OAAO,EAER,GAAmB,iBAARD,EACV,OAAO,EAER,GAAK2B,MAAMC,QAAQ5B,KAAW2B,MAAMC,QAAQ3B,GAC3C,OAAO,EAGR,IAAI5Q,EACAmI,EAEJ,GAAImK,MAAMC,QAAQ5B,GAAM,CACvB,GAAIA,EAAIzQ,SAAW0Q,EAAM1Q,OACxB,OAAO,EAER,IAAKF,EAAI,EAAGA,EAAI2Q,EAAIzQ,OAAQF,IAC3B,IAAK0Q,EAAOC,EAAI3Q,GAAI4Q,EAAM5Q,IACzB,OAAO,MAGH,CACN,MAAM+nC,EAAoB,GAE1B,IAAK5/B,KAAOwI,EACXo3B,EAAQlnC,KAAKsH,GAEd4/B,EAAQv2B,OACR,MAAMw2B,EAAsB,GAC5B,IAAK7/B,KAAOyI,EACXo3B,EAAUnnC,KAAKsH,GAGhB,GADA6/B,EAAUx2B,QACLd,EAAOq3B,EAASC,GACpB,OAAO,EAER,IAAKhoC,EAAI,EAAGA,EAAI+nC,EAAQ7nC,OAAQF,IAC/B,IAAK0Q,EAAOC,EAAIo3B,EAAQ/nC,IAAK4Q,EAAMm3B,EAAQ/nC,KAC1C,OAAO,EAIV,OAAO,EA9HRsI,EAAA2/B,eAAA,SAA+B51B,EAAU61B,GACxC,OAGD,SAASC,EAAgB91B,EAAU61B,EAA6Bt1B,GAC/D,GAAIw1B,EAAArC,kBAAkB1zB,GACrB,OAAOA,EAGR,MAAMg2B,EAAUH,EAAQ71B,GACxB,QAAuB,IAAZg2B,EACV,OAAOA,EAGR,GAAID,EAAA71B,QAAQF,GAAM,CACjB,MAAMi2B,EAAY,GAClB,IAAK,MAAM9lC,KAAK6P,EACfi2B,EAAGznC,KAAKsnC,EAAgB3lC,EAAG0lC,EAASt1B,IAErC,OAAO01B,EAGR,GAAIF,EAAAvC,SAASxzB,GAAM,CAClB,GAAIO,EAAKE,IAAIT,GACZ,MAAM,IAAI3J,MAAM,yCAEjBkK,EAAK3I,IAAIoI,GACT,MAAMk2B,EAAK,GACX,IAAK,IAAIC,KAAMn2B,EACVy1B,EAAgBj/B,KAAKwJ,EAAKm2B,KAC5BD,EAAWC,GAAML,EAAgB91B,EAAIm2B,GAAKN,EAASt1B,IAItD,OADAA,EAAK1I,OAAOmI,GACLk2B,EAGR,OAAOl2B,EApCA81B,CAAgB91B,EAAK61B,EAAS,IAAIn+B,MA2C1CzB,EAAAmgC,MAAA,SAAgBA,EAAM/F,EAAkBra,EAAaqgB,GAAqB,GACzE,OAAKN,EAAAvC,SAASnD,IAIV0F,EAAAvC,SAASxd,IACZ9gB,OAAOC,KAAK6gB,GAAQpf,QAAQd,IACvBA,KAAOu6B,EACNgG,IACCN,EAAAvC,SAASnD,EAAYv6B,KAASigC,EAAAvC,SAASxd,EAAOlgB,IACjDsgC,EAAM/F,EAAYv6B,GAAMkgB,EAAOlgB,GAAMugC,GAErChG,EAAYv6B,GAAOkgB,EAAOlgB,IAI5Bu6B,EAAYv6B,GAAOkgB,EAAOlgB,KAItBu6B,GAlBCra,GAyBT/f,EAAAge,OAAA,SAAuBoc,KAAqBiG;AAE3C,OADAA,EAAQ1/B,QAAQof,GAAU9gB,OAAOC,KAAK6gB,GAAQpf,QAAQd,GAAOu6B,EAAYv6B,GAAOkgB,EAAOlgB,KAChFu6B,GAGRp6B,EAAAoI,OAAAA,EA0DApI,EAAAsgC,cAAA,SAA8Bv2B,GAC7B,MAAMO,EAAc,GACpB,OAAO7N,KAAKsD,UAAUgK,EAAK,CAAClK,EAAKK,KAChC,GAAI4/B,EAAAvC,SAASr9B,IAAU8J,MAAMC,QAAQ/J,GAAQ,CAC5C,IAA6B,IAAzBoK,EAAKrH,QAAQ/C,GAChB,MAAO,aAEPoK,EAAK/R,KAAK2H,GAGZ,OAAOA,KAITF,EAAAugC,aAAA,SAAmCx2B,EAAQlI,EAA+Bwe,GACzE,MAAM5oB,EAASoK,EAAGkI,GAClB,YAAyB,IAAXtS,EAAyB4oB,EAAe5oB,GAcvDuI,EAAAmK,SAAA,SAAyBugB,EAAWzxB,GACnC,MAAMxB,EAASwH,OAAOK,OAAO,MAE7B,OAAKorB,GAASzxB,GAIKgG,OAAOC,KAAKjG,GACpB0H,QAAQwT,IAClB,MAAMqsB,EAAY9V,EAAKvW,GACjBssB,EAAcxnC,EAAOkb,GAEtB/L,EAAOo4B,EAAWC,KACtBhpC,EAAO0c,GAAKssB,KAIPhpC,GAbCA,4GChNT,MAAMipC,EAAiB,iBACjBC,EAAoB,MACpBC,EAAoB,QAiE1B,MAAMvzB,EAAS,GACTwzB,EAAS,IACTC,EAAU,+DAgBhB,MAAaC,EA2DZ1/B,YAAsB2/B,EAAsCC,EAAoBxnC,EAAew+B,EAAgBiJ,EAAmBC,GAAmB,GAExH,iBAAjBH,GACV1/B,KAAK8/B,OAASJ,EAAaI,QAAU/zB,EACrC/L,KAAK2/B,UAAYD,EAAaC,WAAa5zB,EAC3C/L,KAAK7H,KAAOunC,EAAavnC,MAAQ4T,EACjC/L,KAAK22B,MAAQ+I,EAAa/I,OAAS5qB,EACnC/L,KAAK4/B,SAAWF,EAAaE,UAAY7zB,IAKzC/L,KAAK8/B,OArHR,SAAoBA,EAAgBD,GACnC,OAAKC,GAAWD,EAGTC,EAFC,OAmHQC,CAAWL,EAAcG,GACvC7/B,KAAK2/B,UAAYA,GAAa5zB,EAC9B/L,KAAK7H,KA/GR,SAA8B2nC,EAAgB3nC,GAM7C,OAAQ2nC,GACP,IAAK,QACL,IAAK,OACL,IAAK,OACC3nC,EAEMA,EAAK,KAAOonC,IACtBpnC,EAAOonC,EAASpnC,GAFhBA,EAAOonC;AAMV,OAAOpnC,EA8FO6nC,CAAqBhgC,KAAK8/B,OAAQ3nC,GAAQ4T,GACtD/L,KAAK22B,MAAQA,GAAS5qB,EACtB/L,KAAK4/B,SAAWA,GAAY7zB,EA5J/B,SAAsByf,EAAUqU,GAG/B,IAAKrU,EAAIsU,QAAUD,EAClB,MAAM,IAAI/gC,MAAM,2DAA2D0sB,EAAImU,sBAAsBnU,EAAIrzB,kBAAkBqzB,EAAImL,sBAAsBnL,EAAIoU,cAK1J,GAAIpU,EAAIsU,SAAWV,EAAejN,KAAK3G,EAAIsU,QAC1C,MAAM,IAAIhhC,MAAM,mDAQjB,GAAI0sB,EAAIrzB,KACP,GAAIqzB,EAAImU,WACP,IAAKN,EAAkBlN,KAAK3G,EAAIrzB,MAC/B,MAAM,IAAI2G,MAAM,iJAGjB,GAAIwgC,EAAkBnN,KAAK3G,EAAIrzB,MAC9B,MAAM,IAAI2G,MAAM,6HAqIjBmhC,CAAajgC,KAAM6/B,IA3ErB9/B,aAAakV,GACZ,OAAIA,aAAiBwqB,KAGhBxqB,IAGoC,iBAArBA,EAAO0qB,WACU,iBAApB1qB,EAAO2qB,UACS,iBAAhB3qB,EAAO9c,MACU,iBAAjB8c,EAAO0hB,OACW,iBAAlB1hB,EAAO6qB,QACW,mBAAlB7qB,EAAOirB,QACS,mBAAhBjrB,EAAOkrB,MACa,mBAApBlrB,EAAOwF,UA2FzBylB,aAIC,OAAOE,EAAYpgC;AAKpBD,KAAKsgC,GAEJ,IAAKA,EACJ,OAAOrgC,KAGR,IAAI8/B,OAAEA,EAAMH,UAAEA,EAASxnC,KAAEA,EAAIw+B,MAAEA,EAAKiJ,SAAEA,GAAaS,EA2BnD,YA1BexmC,IAAXimC,EACHA,EAAS9/B,KAAK8/B,OACO,OAAXA,IACVA,EAAS/zB,QAEQlS,IAAd8lC,EACHA,EAAY3/B,KAAK2/B,UACO,OAAdA,IACVA,EAAY5zB,QAEAlS,IAAT1B,EACHA,EAAO6H,KAAK7H,KACO,OAATA,IACVA,EAAO4T,QAEMlS,IAAV88B,EACHA,EAAQ32B,KAAK22B,MACO,OAAVA,IACVA,EAAQ5qB,QAEQlS,IAAb+lC,EACHA,EAAW5/B,KAAK4/B,SACO,OAAbA,IACVA,EAAW7zB,GAGR+zB,IAAW9/B,KAAK8/B,QAChBH,IAAc3/B,KAAK2/B,WACnBxnC,IAAS6H,KAAK7H,MACdw+B,IAAU32B,KAAK22B,OACfiJ,IAAa5/B,KAAK4/B,SAEd5/B,KAGD,IAAIsgC,EAAKR,EAAQH,EAAWxnC,EAAMw+B,EAAOiJ,GAWjD7/B,aAAanB,EAAeihC,GAAmB,GAC9C,MAAMxO,EAAQmO,EAAQ5M,KAAKh0B,GAC3B,OAAKyyB,EAGE,IAAIiP,EACVjP,EAAM,IAAMtlB,EACZw0B,EAAclP,EAAM,IAAMtlB,GAC1Bw0B,EAAclP,EAAM,IAAMtlB,GAC1Bw0B,EAAclP,EAAM,IAAMtlB,GAC1Bw0B,EAAclP,EAAM,IAAMtlB,GAC1B8zB,GARO,IAAIS,EAAKv0B,EAAQA,EAAQA,EAAQA,EAAQA,GAiClDhM,YAAY5H,GAEX,IAAIwnC,EAAY5zB,EAWhB,GANI2b,EAAAzB,YACH9tB,EAAOA,EAAKqG,QAAQ,MAAO+gC,IAKxBpnC,EAAK,KAAOonC,GAAUpnC,EAAK,KAAOonC,EAAQ,CAC7C,MAAMtiB,EAAM9kB,EAAKwJ,QAAQ49B,EAAQ,IACpB,IAATtiB,GACH0iB,EAAYxnC,EAAKuD,UAAU,GAC3BvD,EAAOonC,IAEPI,EAAYxnC,EAAKuD,UAAU,EAAGuhB,GAC9B9kB,EAAOA,EAAKuD,UAAUuhB,IAAQsiB,GAIhC,OAAO,IAAIe,EAAK,OAAQX,EAAWxnC,EAAM4T,EAAQA,GAGlDhM,YAAYygC,GACX,OAAO,IAAIF,EACVE,EAAWV,OACXU,EAAWb,UACXa,EAAWroC,KACXqoC,EAAW7J,MACX6J,EAAWZ,UAiBb7/B,SAAS0gC,GAAwB,GAChC,OAAOC,EAAa1gC,KAAMygC,GAG3B1gC,SACC,OAAOC,KAORD,cAAc5F,GACb,GAAKA,EAEE,CAAA,GAAIA,aAAgBslC,EAC1B,OAAOtlC,EACD,CACN,MAAMhE,EAAS,IAAImqC,EAAKnmC,GAGxB,OAFAhE,EAAOwqC,WAAwBxmC,EAAMymC,SACrCzqC,EAAO0qC,QAAqB1mC,EAAM2mC,OAASC,EAA4B5mC,EAAM+lC,OAAS,KAC/E/pC,GAPP,OAAOgE,GA7QVuE,EAAA+gC,IAAAA;CAwSA,MAAMsB,EAAiBrZ,EAAAzB,UAAY,OAAIpsB,EAGvC,MAAMymC,UAAab,EAAnB1/B,kCAECC,KAAA2gC,WAA4B,KAC5B3gC,KAAA6gC,QAAyB,KAEzBX,aAIC,OAHKlgC,KAAK6gC,UACT7gC,KAAK6gC,QAAUT,EAAYpgC,OAErBA,KAAK6gC,QAGb9gC,SAAS0gC,GAAwB,GAChC,OAAKA,EAOGC,EAAa1gC,MAAM,IANrBA,KAAK2gC,aACT3gC,KAAK2gC,WAAaD,EAAa1gC,MAAM,IAE/BA,KAAK2gC,YAOd5gC,SACC,MAAMkX,EAAgB,CACrB+pB,KAAM,GA0BP,OAvBIhhC,KAAK6gC,UACR5pB,EAAIipB,OAASlgC,KAAK6gC,QAClB5pB,EAAI6pB,KAAOC,GAER/gC,KAAK2gC,aACR1pB,EAAI2pB,SAAW5gC,KAAK2gC,YAGjB3gC,KAAK7H,OACR8e,EAAI9e,KAAO6H,KAAK7H,MAEb6H,KAAK8/B,SACR7oB,EAAI6oB,OAAS9/B,KAAK8/B,QAEf9/B,KAAK2/B,YACR1oB,EAAI0oB,UAAY3/B,KAAK2/B,WAElB3/B,KAAK22B,QACR1f,EAAI0f,MAAQ32B,KAAK22B,OAEd32B,KAAK4/B,WACR3oB,EAAI2oB,SAAW5/B,KAAK4/B,UAEd3oB,GAKT,MAAMgqB,EAAwC,CAC7CC,GAAkB,MAClBC,GAAkB,MAClBC,GAAyB,MACzBC,GAAiB,MACjBC,GAA8B,MAC9BC,GAA+B,MAC/BC,GAAmB,MAEnBC,GAA4B,MAC5BC,GAAuB,MACvBC,GAAsB,MACtBC,GAAwB,MACxBC,GAAsB,MACtBC,GAAuB,MACvBC,GAAqB,MACrBC,GAAiB,MACjBC,GAAkB,MAClBC,GAAsB,MACtBC,GAAmB,MAEnBC,GAAkB,OAGnB,SAASC,EAAuBC,EAAsBC,GACrD,IAAItrB,OAA0Bpd,EAC1B2oC,GAAmB,EAEvB,IAAK,IAAIz0B,EAAM,EAAGA,EAAMu0B,EAAahsC,OAAQyX,IAAO,CACnD,MAAMhU,EAAOuoC,EAAah0B,WAAWP,GAGrC,GACEhU,GAAI,IAAkBA,GAAI,KACvBA,GAAI,IAAkBA,GAAI,IAC1BA,GAAI,IAAuBA,GAAI,IAC5B,KAAJA,GACI,KAAJA,GACI,KAAJA,GACI,MAAJA,GACCwoC,GAAkB,KAAJxoC,GAGO,IAArByoC,IACHvrB,GAAOsf,mBAAmB+L,EAAa5mC,UAAU8mC,EAAiBz0B,IAClEy0B,GAAmB;KAGR3oC,IAARod,IACHA,GAAOqrB,EAAalQ,OAAOrkB,QAGtB,MAEMlU,IAARod,IACHA,EAAMqrB,EAAalM,OAAO,EAAGroB,IAI9B,MAAM00B,EAAUxB,EAAYlnC,QACZF,IAAZ4oC,IAGsB,IAArBD,IACHvrB,GAAOsf,mBAAmB+L,EAAa5mC,UAAU8mC,EAAiBz0B,IAClEy0B,GAAmB,GAIpBvrB,GAAOwrB,IAEwB,IAArBD,IAEVA,EAAkBz0B,IASrB,OAJyB,IAArBy0B,IACHvrB,GAAOsf,mBAAmB+L,EAAa5mC,UAAU8mC,UAGnC3oC,IAARod,EAAoBA,EAAMqrB,EAGlC,SAASI,EAA0BvqC,GAClC,IAAI8e,OAA0Bpd,EAC9B,IAAK,IAAIkU,EAAM,EAAGA,EAAM5V,EAAK7B,OAAQyX,IAAO,CAC3C,MAAMhU,EAAO5B,EAAKmW,WAAWP,GACrB,KAAJhU,GAA8B,KAAJA,QACjBF,IAARod,IACHA,EAAM9e,EAAKi+B,OAAO,EAAGroB,IAEtBkJ,GAAOgqB,EAAYlnC,SAEPF,IAARod,IACHA,GAAO9e,EAAK4V,IAIf,YAAelU,IAARod,EAAoBA,EAAM9e,EAMlC,SAASioC,EAAYuC,GAEpB,IAAI/jC,EAkBJ,OAfCA,EAFG+jC,EAAIhD,WAAagD,EAAIxqC,KAAK7B,OAAS,GAAoB,SAAfqsC,EAAI7C,OAEvC,KAAK6C,EAAIhD,YAAYgD,EAAIxqC,OAEX,KAAtBwqC,EAAIxqC,KAAKmW,WAAW,KAChBq0B,EAAIxqC,KAAKmW,WAAW,IAAE,IAAkBq0B,EAAIxqC,KAAKmW,WAAW,IAAE,IAAkBq0B,EAAIxqC,KAAKmW,WAAW,IAAE,IAAkBq0B,EAAIxqC,KAAKmW,WAAW,IAAE,MACzH,KAAtBq0B,EAAIxqC,KAAKmW,WAAW,GAGfq0B,EAAIxqC,KAAK,GAAGwxB,cAAgBgZ,EAAIxqC,KAAKi+B,OAAO,GAG5CuM,EAAIxqC,KAETuvB,EAAAzB,YACHrnB,EAAQA,EAAMJ,QAAQ,MAAO,OAEvBI,EAMR,SAAS8hC,EAAaiC,EAAUlC,GAE/B,MAAMmC,EAAWnC,EAEdiC,EADAL,EAGH,IAAIprB,EAAM,IACN6oB,OAAEA,EAAMH,UAAEA,EAASxnC,KAAEA,EAAIw+B,MAAEA,EAAKiJ,SAAEA,GAAa+C,EASnD,GARI7C,IACH7oB,GAAO6oB,EACP7oB,GAAO,MAEJ0oB,GAAwB,SAAXG,KAChB7oB,GAAOsoB,EACPtoB,GAAOsoB,GAEJI,EAAW,CACd,IAAI1iB,EAAM0iB,EAAUh+B,QAAQ,KAC5B,IAAa,IAATsb,EAAY,CAEf,MAAM4lB,EAAWlD,EAAUvJ,OAAO,EAAGnZ,GACrC0iB,EAAYA,EAAUvJ,OAAOnZ,EAAM;CAEtB,KADbA,EAAM4lB,EAASlhC,QAAQ,MAEtBsV,GAAO2rB,EAAQC,GAAU,IAGzB5rB,GAAO2rB,EAAQC,EAASzM,OAAO,EAAGnZ,IAAM,GACxChG,GAAO,IACPA,GAAO2rB,EAAQC,EAASzM,OAAOnZ,EAAM,IAAI,IAE1ChG,GAAO,KAIK,KADbgG,GADA0iB,EAAYA,EAAUhW,eACNhoB,QAAQ,MAEvBsV,GAAO2rB,EAAQjD,GAAW,IAG1B1oB,GAAO2rB,EAAQjD,EAAUvJ,OAAO,EAAGnZ,IAAM,GACzChG,GAAO0oB,EAAUvJ,OAAOnZ,IAG1B,GAAI9kB,EAAM,CAET,GAAIA,EAAK7B,QAAU,GAAuB,KAAlB6B,EAAKmW,WAAW,IAA2C,KAAlBnW,EAAKmW,WAAW,GAAuB,CACvG,MAAMvU,EAAO5B,EAAKmW,WAAW,GACzBvU,GAAI,IAAkBA,GAAI,KAC7B5B,EAAO,IAAIiM,OAAOqK,aAAa1U,EAAO,OAAO5B,EAAKi+B,OAAO,WAEpD,GAAIj+B,EAAK7B,QAAU,GAAuB,KAAlB6B,EAAKmW,WAAW,GAAuB,CACrE,MAAMvU,EAAO5B,EAAKmW,WAAW,GACzBvU,GAAI,IAAkBA,GAAI,KAC7B5B,EAAO,GAAGiM,OAAOqK,aAAa1U,EAAO,OAAO5B,EAAKi+B,OAAO,MAI1Dnf,GAAO2rB,EAAQzqC,GAAM,GAUtB,OARIw+B,IACH1f,GAAO,IACPA,GAAO2rB,EAAQjM,GAAO,IAEnBiJ,IACH3oB,GAAO,IACPA,GAAQwpB,EAAyDb,EAA1CyC,EAAuBzC,GAAU,IAElD3oB,EAiBR,MAAM6rB,EAAiB,8BAEvB,SAASvC,EAAcnS,GACtB,OAAKA,EAAIiD,MAAMyR,GAGR1U,EAAI5vB,QAAQskC,EAAiBzR,IAlBrC,SAAS0R,EAA2B3U,GACnC,IACC,OAAO4U,mBAAmB5U,GACzB,MAAAzZ,GACD,OAAIyZ,EAAI93B,OAAS,EACT83B,EAAIgI,OAAO,EAAG,GAAK2M,EAA2B3U,EAAIgI,OAAO,IAEzDhI,IAWqC2U,CAA2B1R,IAFjEjD,4DClpBT,SAAgB6U,EAAoBC,EAA2BC,GAC9D,OAAOC,EAAA3D,IAAIrkC,MAAM8nC,EAAUG,MAAMF,qDALlCzkC,EAAA4kC,qBAAA,SAAqCJ,EAA2BC,GAC/D,OAAOF,EAAoBC,EAAWC,GAAcjD,QAGrDxhC,EAAAukC,oBAAAA,EASAvkC,EAAA6kC,0BAAA,SAA0CC;AACzC,OAAOC,EAAQJ,MAAMG,6DCQtB,SAAgBpoC,EAAMsoC,GACrB,MAAMxiC,EAAc,GACpB,IAAI4B,EAGJ,IACC,MAAM6gC,EAAyBxoC,KAAKC,MAAMsoC,EAAM/3B,WAG1Ci4B,EAAgBD,EAAgBA,EAAgBrtC,OAAS,GAC3DstC,GAAiBA,EAAcC,WAClCF,EAAgBn9B,MAChB1D,EAAQ8gC,EAAcC,UAGvB3iC,EAAKjK,QAAQ0sC,GACZ,MAAOhoC,GACRuF,EAAKjK,KAAK,yCAA0CysC,EAAM/3B,WAG3D,MAAO,CAAEzK,KAAAA,EAAM4B,MAAAA,GAuChB,SAASghC,EAAehhC,GACvB,IAAKA,EACJ,OAAOA,EAGR,MAAMihC,EAAejhC,EAAMnB,QAAQ,MACnC,OAAsB,IAAlBoiC,EACIjhC,EAGDA,EAAMpH,UAAU,EAAGqoC,GAyC3B,SAASC,EAAMA,GACd,MAAO,UAAUA,qDArHlBtlC,EAAAulC,mBAAA,SAAmCx7B,GAClC,MAAMi7B,EAAQj7B,EAEd,OAAOi7B,GAA+B,iBAAfA,EAAMpxB,MAA+C,iBAAnBoxB,EAAMQ,UAGhExlC,EAAAtD,MAAAA,EAyBAsD,EAAAylC,cAAA,SAAgBA,EAAcC,GAC7B,GAAoB,iBAATA,EACV,OAAOD,EAAc/oC,EAAMgpC,GAAOthC,OAYnC,GADcshC,EACH,CACV,MAAMC,EAAWP,EAFJM,GAQPzxB,EAAU,oEAAoEigB,KAAKyR,GAAY,IACrG,GAAI1xB,GAA8B,IAAnBA,EAAQrc,OACtB,MAAO,CACNqsC,IAAKS,EAAA3D,IAAIlnC,KAAKoa,EAAQ,IACtB2xB,KAAM9hC,OAAOmQ,EAAQ,IACrB4xB,OAAQ/hC,OAAOmQ,EAAQ,OAqB3BjU,EAAAmW,IAAA,SAAoB6uB,EAA0Bc,GAC7C,MAAMtjC,KAAEA,EAAI4B,MAAEA,GAAU1H,EAAMsoC,GAExBe,EAAoC,iBAAZvjC,EAAK,IAAmC,IAAhBA,EAAK5K,OAE3D,IAAI+tC,EAAWP,EAAehhC,GAC1BuhC,IACHA,EAAW,IAAIA,EAAShW,WAGzB,IAAIqW,EAAwB;CAsB5B,GAjBEA,EAFqB,iBAAZxjC,EAAK,GACXmjC,GAAYI,EACD,CAAC,MAAMD,QAAYtjC,EAAK,QAAQmjC,IAAYL,EAAM,QAASA,EAAM,IAAKA,EAAM,SAE5E,CAAC,MAAMQ,QAAYtjC,EAAK,KAAM8iC,EAAM,QAASA,EAAM,OAAQ9iC,EAAKlJ,MAAM,IAMvE,CAAC,MAAMwsC,MAAWR,EAAM,WAAY9iC,GAI/CmjC,IAAaI,GAChBC,EAAYztC,KAAKotC,GAI8B,mBAApCztC,QAAgB8sC,EAAMQ,UACjC,MAAM,IAAIplC,MAAM,0BAEhBlI,QAAgB8sC,EAAMQ,UAAU3iC,MAAM3K,QAAS8tC,kEC5HjD,SAAgBpnC,EAAUqnC,GACzB,MAAMxuC,EAAc,GAEpB,OADAwuC,EAAYtlC,QAAQT,GAASzI,EAAOc,KAAK2H,IAClCzI,EAGR,SAAgByH,EAAWnE,GAC1B,MAAMtD,EAAc,GAGpB,OAFAsD,EAAI4F,QAAQ,CAACqW,EAAQnX,IAAQpI,EAAOc,KAAKsH,IAElCpI,mDAVRuI,EAAApB,OAAAA,EAMAoB,EAAAd,KAAAA,EAOAc,EAAAkmC,SAAA,SAA+BnrC,EAAgB8E,EAAQK,GACtD,IAAIzI,EAASsD,EAAIyG,IAAI3B,GAMrB,YALe1E,IAAX1D,IACHA,EAASyI,EACTnF,EAAI2G,IAAI7B,EAAKpI,IAGPA,GAGRuI,EAAAmmC,YAAA,SAAkCprC,GACjC,MAAMpC,EAAoB,GAK1B,OAJAoC,EAAI4F,QAAQ,CAACT,EAAOL,KACnBlH,EAAQJ,KAAK,GAAGsH,QAAUK,OAGpB,OAAOnF,EAAIyF,UAAU7H,EAAQsC,KAAK,UAG1C+E,EAAAomC,YAAA,SAA+B1kC,GAC9B,MAAM/I,EAAe,GAKrB,OAJA+I,EAAIf,QAAQT,IACXvH,EAAQJ,KAAK2H,KAGP,OAAOwB,EAAIlB,UAAU7H,EAAQsC,KAAK,UAG1C+E,EAAAqmC,kBAAA,SAAkCtrC,GACjC,MAAMurC,EAAmC,GAMzC,OAJAvrC,EAAI4F,QAAQ,CAACT,EAAOL,KACnBymC,EAAa/tC,KAAK,CAACsH,EAAKK,MAGlBomC,GAGRtmC,EAAAumC,kBAAA,SAAkCD,GACjC,MAAM15B,EAAQ,IAAIrL;CAElB,IAAK,MAAO1B,EAAKK,KAAUomC,EAC1B15B,EAAMlL,IAAI7B,EAAKK,GAGhB,OAAO0M,GAYR,MAAa45B,EAAbnlC,cAESC,KAAA0V,OAAiB,GACjB1V,KAAAmlC,KAAe,EAEvBplC,MAAMxB,GAGL,OAFAyB,KAAK0V,OAASnX,EACdyB,KAAKmlC,KAAO,EACLnlC,KAGRD,OAEC,OADAC,KAAKmlC,MAAQ,EACNnlC,KAGRD,UACC,OAAOC,KAAKmlC,KAAOnlC,KAAK0V,OAAOpf,OAAS,EAGzCyJ,IAAImF,GAGH,OAFcA,EAAEoJ,WAAW,GACVtO,KAAK0V,OAAOpH,WAAWtO,KAAKmlC,MAI9CplC,QACC,OAAOC,KAAK0V,OAAO1V,KAAKmlC,OA3B1BzmC,EAAAwmC,eAAAA,EA+BA,MAAaE,EAMZrlC,YAAoBslC,GAA6B,GAA7BrlC,KAAAqlC,kBAAAA,EAEpBtlC,MAAMxB,GAIL,OAHAyB,KAAK0V,OAASnX,EAAIC,QAAQ,UAAW,IACrCwB,KAAKslC,MAAQ,EACbtlC,KAAKulC,IAAM,EACJvlC,KAAKgM,OAGbjM,UACC,OAAOC,KAAKulC,IAAMvlC,KAAK0V,OAAOpf,OAG/ByJ,OAECC,KAAKslC,MAAQtlC,KAAKulC,IAClB,IAAIC,GAAW,EACf,KAAOxlC,KAAKulC,IAAMvlC,KAAK0V,OAAOpf,OAAQ0J,KAAKulC,MAAO,CACjD,MAAMl3B,EAAKrO,KAAK0V,OAAOpH,WAAWtO,KAAKulC,KACvC,GAAM,KAAFl3B,GAAyBrO,KAAKqlC,mBAAuB,KAAFh3B,EAA2B,CACjF,IAAIm3B,EAGH,MAFAxlC,KAAKslC,aAKNE,GAAW,EAGb,OAAOxlC,KAGRD,IAAImF,GAEH,IAAIugC,EAAO,EACX,MAAMC,EAAOxgC,EAAE5O,OACf,IAAIqvC,EAAU3lC,KAAKslC,MAEnB,KAAOG,EAAOC,GAAQC,EAAU3lC,KAAKulC,KAAK,CACzC,MAAMK,EAAM1gC,EAAEoJ,WAAWm3B,GAAQzlC,KAAK0V,OAAOpH,WAAWq3B,GACxD,GAAY,IAARC,EACH,OAAOA,EAERH,GAAQ,EACRE,GAAW,EAGZ,OAAID,IAAS1lC,KAAKulC,IAAMvlC,KAAKslC,MACrB,EACGG,EAAOC,GACT,EAED,EAIT3lC,QACC,OAAOC,KAAK0V,OAAOha,UAAUsE,KAAKslC,MAAOtlC,KAAKulC,MA/DhD7mC,EAAA0mC,aAAAA,EAmEA,MAAMS,EAQL9lC;AACC,QAAQC,KAAK8lC,MAAS9lC,KAAK4E,KAAQ5E,KAAK+lC,OAAU/lC,KAAKpB,QAIzD,MAAaonC,EAaZjmC,YAAYmS,GACXlS,KAAKimC,MAAQ/zB,EAZdnS,kBACC,OAAO,IAAIimC,EAAqB,IAAIZ,GAGrCrlC,oBACC,OAAO,IAAIimC,EAAqB,IAAId,GAUrCnlC,QACCC,KAAKkmC,WAAQrsC,EAGdkG,IAAIxB,EAAakB,GAChB,MAAMsc,EAAO/b,KAAKimC,MAAME,MAAM5nC,GAC9B,IAAIqR,EAQJ,IANK5P,KAAKkmC,QACTlmC,KAAKkmC,MAAQ,IAAIL,EACjB7lC,KAAKkmC,MAAMxyB,QAAUqI,EAAKnd,SAG3BgR,EAAO5P,KAAKkmC,QACC,CACZ,MAAME,EAAMrqB,EAAK6pB,IAAIh2B,EAAK8D,SAC1B,GAAI0yB,EAAM,EAEJx2B,EAAKk2B,OACTl2B,EAAKk2B,KAAO,IAAID,EAChBj2B,EAAKk2B,KAAKpyB,QAAUqI,EAAKnd,SAE1BgR,EAAOA,EAAKk2B,UAEN,GAAIM,EAAM,EAEXx2B,EAAKm2B,QACTn2B,EAAKm2B,MAAQ,IAAIF,EACjBj2B,EAAKm2B,MAAMryB,QAAUqI,EAAKnd,SAE3BgR,EAAOA,EAAKm2B,UAEN,CAAA,IAAIhqB,EAAKsqB,UASf,MAPAtqB,EAAK/P,OACA4D,EAAKhL,MACTgL,EAAKhL,IAAM,IAAIihC,EACfj2B,EAAKhL,IAAI8O,QAAUqI,EAAKnd,SAEzBgR,EAAOA,EAAKhL,KAKd,MAAM0hC,EAAa12B,EAAKhR,MAGxB,OAFAgR,EAAKhR,MAAQa,EACbmQ,EAAKrR,IAAMA,EACJ+nC,EAGRvmC,IAAIxB,GACH,MAAMwd,EAAO/b,KAAKimC,MAAME,MAAM5nC,GAC9B,IAAIqR,EAAO5P,KAAKkmC,MAChB,KAAOt2B,GAAM,CACZ,MAAMw2B,EAAMrqB,EAAK6pB,IAAIh2B,EAAK8D,SAC1B,GAAI0yB,EAAM,EAETx2B,EAAOA,EAAKk2B,UACN,GAAIM,EAAM,EAEhBx2B,EAAOA,EAAKm2B,UACN,CAAA,IAAIhqB,EAAKsqB,UAKf,MAHAtqB,EAAK/P,OACL4D,EAAOA,EAAKhL,KAKd,OAAOgL,EAAOA,EAAKhR,WAAQ/E,EAG5BkG,OAAOxB,GAEN,MAAMwd,EAAO/b,KAAKimC,MAAME,MAAM5nC,GACxBuE,EAAkD,GACxD,IAAI8M,EAAO5P,KAAKkmC,MAGhB,KAAOt2B,GAAM,CACZ,MAAMw2B,EAAMrqB,EAAK6pB,IAAIh2B,EAAK8D,SAC1B,GAAI0yB,EAAM,EAETtjC,EAAM7L,KAAK,CAAC,EAAG2Y,IACfA,EAAOA,EAAKk2B,UACN,GAAIM,EAAM,EAEhBtjC,EAAM7L,KAAK,EAAE,EAAG2Y,IAChBA,EAAOA,EAAKm2B,UACN,CAAA,IAAIhqB,EAAKsqB,UAKT;AAKN,IAHAz2B,EAAKhR,WAAQ/E,EAGNiJ,EAAMxM,OAAS,GAAKsZ,EAAK2L,WAAW,CAC1C,IAAKniB,EAAKoU,GAAU1K,EAAM0D,MAC1B,OAAQpN,GACP,KAAK,EAAGoU,EAAOs4B,UAAOjsC,EAAW,MACjC,KAAK,EAAG2T,EAAO5I,SAAM/K,EAAW,MAChC,KAAM,EAAG2T,EAAOu4B,WAAQlsC,EAEzB+V,EAAOpC,EAER,MAjBAuO,EAAK/P,OACLlJ,EAAM7L,KAAK,CAAC,EAAG2Y,IACfA,EAAOA,EAAKhL,MAoBf7E,WAAWxB,GACV,MAAMwd,EAAO/b,KAAKimC,MAAME,MAAM5nC,GAC9B,IAAIqR,EAAO5P,KAAKkmC,MACZ/e,OAA2BttB,EAC/B,KAAO+V,GAAM,CACZ,MAAMw2B,EAAMrqB,EAAK6pB,IAAIh2B,EAAK8D,SAC1B,GAAI0yB,EAAM,EAETx2B,EAAOA,EAAKk2B,UACN,GAAIM,EAAM,EAEhBx2B,EAAOA,EAAKm2B,UACN,CAAA,IAAIhqB,EAAKsqB,UAMf,MAJAtqB,EAAK/P,OACLmb,EAAYvX,EAAKhR,OAASuoB,EAC1BvX,EAAOA,EAAKhL,KAKd,OAAOgL,GAAQA,EAAKhR,OAASuoB,EAG9BpnB,aAAaxB,GACZ,MAAMwd,EAAO/b,KAAKimC,MAAME,MAAM5nC,GAC9B,IAAIqR,EAAO5P,KAAKkmC,MAChB,KAAOt2B,GAAM,CACZ,MAAMw2B,EAAMrqB,EAAK6pB,IAAIh2B,EAAK8D,SAC1B,GAAI0yB,EAAM,EAETx2B,EAAOA,EAAKk2B,UACN,GAAIM,EAAM,EAEhBx2B,EAAOA,EAAKm2B,UACN,CAAA,IAAIhqB,EAAKsqB,UAMf,OAAKz2B,EAAKhL,IAGF5E,KAAKumC,cAAc32B,EAAKhL,UAF/B,EALDmX,EAAK/P,OACL4D,EAAOA,EAAKhL,MAaP7E,cAAc6P,GACrB,IAAIqH,EACAgG,EACA9iB,EAmBJ,MAAO,CAAE6R,KAlBI,KACP7R,IAEJA,EAAO,GACP8iB,EAAM,EACNjd,KAAKwmC,SAAS52B,EAAMhR,GAASzE,EAAKlD,KAAK2H,KAEpCqe,GAAO9iB,EAAK7D,OACR6gB,EAAAtL,KAGHoL,EAGJA,EAAIrY,MAAQzE,EAAK8iB,KAFjBhG,EAAM,CAAEnL,MAAM,EAAOlN,MAAOzE,EAAK8iB,MAI3BhG,KAKTlX,QAAQT,GACPU,KAAKwmC,SAASxmC,KAAKkmC,MAAO5mC,GAGnBS,SAAS6P,EAA4CtQ,GACxDsQ,IAEH5P,KAAKwmC,SAAS52B,EAAKk2B,KAAMxmC,GAGrBsQ,EAAKhR,OAERU,EAASsQ,EAAKhR,MAAOgR,EAAKrR,KAG3ByB,KAAKwmC,SAAS52B,EAAKhL,IAAKtF,GAGxBU,KAAKwmC,SAAS52B,EAAKm2B,MAAOzmC,KAhO7BZ,EAAAsnC,kBAAAA,EAqOA,MAAaS,EAKZ1mC,cACCC,KAAKvG,IAAM,IAAIwG,IACfD,KAAKgzB,YAAa;AAGnBjzB,IAAIoiB,EAAevjB,GAClBoB,KAAKvG,IAAI2G,IAAIJ,KAAK0mC,MAAMvkB,GAAWvjB,GAGpCmB,IAAIoiB,GACH,OAAOniB,KAAKvG,IAAIyG,IAAIF,KAAK0mC,MAAMvkB,IAGhCpiB,IAAIoiB,GACH,OAAOniB,KAAKvG,IAAIyP,IAAIlJ,KAAK0mC,MAAMvkB,IAGhCjjB,WACC,OAAOc,KAAKvG,IAAIyF,KAGjBa,QACCC,KAAKvG,IAAI+H,QAGVzB,OAAOoiB,GACN,OAAOniB,KAAKvG,IAAI6G,OAAON,KAAK0mC,MAAMvkB,IAGnCpiB,QAAQ4mC,GACP3mC,KAAKvG,IAAI4F,QAAQ,CAACT,EAAOpD,IAAUmrC,EAAI/nC,EAAOwkC,EAAA3D,IAAIrkC,MAAMI,KAGzDuE,SACC,OAAOzC,EAAO0C,KAAKvG,KAGZsG,MAAMoiB,GACb,IAAI5jB,EAAM4jB,EAAS1H,WAKnB,OAJIza,KAAKgzB,aACRz0B,EAAMA,EAAIorB,eAGJprB,EAGRwB,OACC,OAAOnC,EAAKoC,KAAKvG,KAAKA,IAAIoZ,GAAKuwB,EAAA3D,IAAIrkC,MAAMyX,IAG1C9S,QACC,MAAM6mC,EAAc,IAAIH,EAIxB,OAFAzmC,KAAKvG,IAAI4F,QAAQ,CAACT,EAAOL,IAAQqoC,EAAYntC,IAAI2G,IAAI7B,EAAKK,IAEnDgoC,GA5DTloC,EAAA+nC,YAAAA,EAuEA,SAAkBI,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,MAAA,GAAA,QAHD,CAAkBnoC,EAAAmoC,QAAAnoC,EAAAmoC,MAAK,KAMvB,MAAaC,EAOZ/mC,cACCC,KAAK+mC,KAAO,IAAI9mC,IAChBD,KAAKgnC,WAAQntC,EACbmG,KAAKinC,WAAQptC,EACbmG,KAAKyW,MAAQ,EAGd1W,QACCC,KAAK+mC,KAAKvlC,QACVxB,KAAKgnC,WAAQntC,EACbmG,KAAKinC,WAAQptC,EACbmG,KAAKyW,MAAQ,EAGd1W,UACC,OAAQC,KAAKgnC,QAAUhnC,KAAKinC,MAG7B/nC,WACC,OAAOc,KAAKyW,MAGbrX,kBACC,OAAiB,QAAjBuV,EAAO3U,KAAKgnC,aAAK,IAAAryB,OAAA,EAAAA,EAAE/V,MAGpB6O,iBACC,OAAiB,QAAjBkH,EAAO3U,KAAKinC,aAAK,IAAAtyB,OAAA,EAAAA,EAAE/V,MAGpBmB,IAAIxB;AACH,OAAOyB,KAAK+mC,KAAK79B,IAAI3K,GAGtBwB,IAAIxB,EAAQtB,EAAA,GACX,MAAMgX,EAAOjU,KAAK+mC,KAAK7mC,IAAI3B,GAC3B,GAAK0V,EAML,OAHS,IAALhX,GACH+C,KAAK/C,MAAMgX,EAAMhX,GAEXgX,EAAKrV,MAGbmB,IAAIxB,EAAQK,EAAU3B,EAAA,GACrB,IAAIgX,EAAOjU,KAAK+mC,KAAK7mC,IAAI3B,GACzB,GAAI0V,EACHA,EAAKrV,MAAQA,EACJ,IAAL3B,GACH+C,KAAK/C,MAAMgX,EAAMhX,OAEZ,CAEN,OADAgX,EAAO,CAAE1V,IAAAA,EAAKK,MAAAA,EAAOoN,UAAMnS,EAAW0T,cAAU1T,GACxCoD,GACP,KAAA,EACC+C,KAAKknC,YAAYjzB,GACjB,MACD,KAAA,EACCjU,KAAKmnC,aAAalzB,GAClB,MACD,KAAA,EAGA,QACCjU,KAAKknC,YAAYjzB,GAGnBjU,KAAK+mC,KAAK3mC,IAAI7B,EAAK0V,GACnBjU,KAAKyW,SAIP1W,OAAOxB,GACN,QAASyB,KAAKwb,OAAOjd,GAGtBwB,OAAOxB,GACN,MAAM0V,EAAOjU,KAAK+mC,KAAK7mC,IAAI3B,GAC3B,GAAK0V,EAML,OAHAjU,KAAK+mC,KAAKzmC,OAAO/B,GACjByB,KAAKonC,WAAWnzB,GAChBjU,KAAKyW,QACExC,EAAKrV,MAGbmB,QACC,IAAKC,KAAKgnC,QAAUhnC,KAAKinC,MACxB,OAED,IAAKjnC,KAAKgnC,QAAUhnC,KAAKinC,MACxB,MAAM,IAAInoC,MAAM,gBAEjB,MAAMmV,EAAOjU,KAAKgnC,MAIlB,OAHAhnC,KAAK+mC,KAAKzmC,OAAO2T,EAAK1V,KACtByB,KAAKonC,WAAWnzB,GAChBjU,KAAKyW,QACExC,EAAKrV,MAGbmB,QAAQsnC,EAA8DC,GACrE,IAAIr6B,EAAUjN,KAAKgnC,MACnB,KAAO/5B,GACFq6B,EACHD,EAAWvwC,KAAKwwC,EAAhBD,CAAyBp6B,EAAQrO,MAAOqO,EAAQ1O,IAAKyB,MAErDqnC,EAAWp6B,EAAQrO,MAAOqO,EAAQ1O,IAAKyB,MAExCiN,EAAUA,EAAQjB,KAIpBjM,SACC,MAAM5J,EAAc,GACpB,IAAI8W,EAAUjN,KAAKgnC,MACnB,KAAO/5B,GACN9W,EAAOc,KAAKgW,EAAQrO,OACpBqO,EAAUA,EAAQjB,KAEnB,OAAO7V,EAGR4J,OACC,MAAM5J,EAAc,GACpB,IAAI8W,EAAUjN,KAAKgnC,MACnB,KAAO/5B,GACN9W,EAAOc,KAAKgW,EAAQ1O,KACpB0O,EAAUA,EAAQjB,KAEnB,OAAO7V,EA2CE4J,QAAQwnC,GACjB,GAAIA,GAAWvnC,KAAKd,KACnB;CAED,GAAgB,IAAZqoC,EAEH,YADAvnC,KAAKwB,QAGN,IAAIyL,EAAUjN,KAAKgnC,MACfQ,EAAcxnC,KAAKd,KACvB,KAAO+N,GAAWu6B,EAAcD,GAC/BvnC,KAAK+mC,KAAKzmC,OAAO2M,EAAQ1O,KACzB0O,EAAUA,EAAQjB,KAClBw7B,IAEDxnC,KAAKgnC,MAAQ/5B,EACbjN,KAAKyW,MAAQ+wB,EACTv6B,IACHA,EAAQM,cAAW1T,GAIbkG,aAAakU,GAEpB,GAAKjU,KAAKgnC,OAAUhnC,KAAKinC,MAElB,CAAA,IAAKjnC,KAAKgnC,MAChB,MAAM,IAAIloC,MAAM,gBAEhBmV,EAAKjI,KAAOhM,KAAKgnC,MACjBhnC,KAAKgnC,MAAMz5B,SAAW0G,OALtBjU,KAAKinC,MAAQhzB,EAOdjU,KAAKgnC,MAAQ/yB,EAGNlU,YAAYkU,GAEnB,GAAKjU,KAAKgnC,OAAUhnC,KAAKinC,MAElB,CAAA,IAAKjnC,KAAKinC,MAChB,MAAM,IAAInoC,MAAM,gBAEhBmV,EAAK1G,SAAWvN,KAAKinC,MACrBjnC,KAAKinC,MAAMj7B,KAAOiI,OALlBjU,KAAKgnC,MAAQ/yB,EAOdjU,KAAKinC,MAAQhzB,EAGNlU,WAAWkU,GAClB,GAAIA,IAASjU,KAAKgnC,OAAS/yB,IAASjU,KAAKinC,MACxCjnC,KAAKgnC,WAAQntC,EACbmG,KAAKinC,WAAQptC,OAET,GAAIoa,IAASjU,KAAKgnC,MAAO,CAG7B,IAAK/yB,EAAKjI,KACT,MAAM,IAAIlN,MAAM,gBAEjBmV,EAAKjI,KAAKuB,cAAW1T,EACrBmG,KAAKgnC,MAAQ/yB,EAAKjI,UAEd,GAAIiI,IAASjU,KAAKinC,MAAO,CAG7B,IAAKhzB,EAAK1G,SACT,MAAM,IAAIzO,MAAM,gBAEjBmV,EAAK1G,SAASvB,UAAOnS,EACrBmG,KAAKinC,MAAQhzB,EAAK1G,aAEd,CACJ,MAAMvB,EAAOiI,EAAKjI,KACZuB,EAAW0G,EAAK1G,SACtB,IAAKvB,IAASuB,EACb,MAAM,IAAIzO,MAAM,gBAEjBkN,EAAKuB,SAAWA,EAChBA,EAASvB,KAAOA,EAEjBiI,EAAKjI,UAAOnS,EACZoa,EAAK1G,cAAW1T,EAGTkG,MAAMkU,EAAkBhX,GAC/B,IAAK+C,KAAKgnC,QAAUhnC,KAAKinC,MACxB,MAAM,IAAInoC,MAAM,gBAEjB,GAAU,IAAL7B,GAA8B,IAALA,EAI9B,GAAS,IAALA,EAAuB;AAC1B,GAAIgX,IAASjU,KAAKgnC,MACjB,OAGD,MAAMh7B,EAAOiI,EAAKjI,KACZuB,EAAW0G,EAAK1G,SAGlB0G,IAASjU,KAAKinC,OAGjB15B,EAAUvB,UAAOnS,EACjBmG,KAAKinC,MAAQ15B,IAIbvB,EAAMuB,SAAWA,EACjBA,EAAUvB,KAAOA,GAIlBiI,EAAK1G,cAAW1T,EAChBoa,EAAKjI,KAAOhM,KAAKgnC,MACjBhnC,KAAKgnC,MAAMz5B,SAAW0G,EACtBjU,KAAKgnC,MAAQ/yB,OACP,GAAS,IAALhX,EAAuB,CACjC,GAAIgX,IAASjU,KAAKinC,MACjB,OAGD,MAAMj7B,EAAOiI,EAAKjI,KACZuB,EAAW0G,EAAK1G,SAGlB0G,IAASjU,KAAKgnC,OAGjBh7B,EAAMuB,cAAW1T,EACjBmG,KAAKgnC,MAAQh7B,IAGbA,EAAMuB,SAAWA,EACjBA,EAAUvB,KAAOA,GAElBiI,EAAKjI,UAAOnS,EACZoa,EAAK1G,SAAWvN,KAAKinC,MACrBjnC,KAAKinC,MAAMj7B,KAAOiI,EAClBjU,KAAKinC,MAAQhzB,GAIflU,SACC,MAAM5F,EAAiB,GAMvB,OAJA6F,KAAKX,QAAQ,CAACT,EAAOL,KACpBpE,EAAKlD,KAAK,CAACsH,EAAKK,MAGVzE,EAGR4F,SAAS5F,GACR6F,KAAKwB,QAEL,IAAK,MAAOjD,EAAKK,KAAUzE,EAC1B6F,KAAKI,IAAI7B,EAAKK,IAnVjBF,EAAAooC,UAAAA,EAwVApoC,EAAA+oC,SAAA,cAAoCX,EAKnC/mC,YAAY2nC,EAAeC,EAAgB,GAC1CrjC,QACAtE,KAAK4nC,OAASF,EACd1nC,KAAK6nC,OAAShjC,KAAKoD,IAAIpD,KAAKsI,IAAI,EAAGw6B,GAAQ,GAG5CD,YACC,OAAO1nC,KAAK4nC,OAGbF,UAAUA,GACT1nC,KAAK4nC,OAASF,EACd1nC,KAAK8nC,YAGNH,YACC,OAAO3nC,KAAK6nC,OAGbF,UAAUA,GACT3nC,KAAK6nC,OAAShjC,KAAKoD,IAAIpD,KAAKsI,IAAI,EAAGw6B,GAAQ,GAC3C3nC,KAAK8nC,YAGN/nC,IAAIxB,GACH,OAAO+F,MAAMpE,IAAI3B,EAAG,GAGrBwB,KAAKxB,GACJ,OAAO+F,MAAMpE,IAAI3B,EAAG,GAGrBwB,IAAIxB,EAAQK,GACX0F,MAAMlE,IAAI7B,EAAKK,EAAK,GACpBoB,KAAK8nC,YAGE/nC,YACHC,KAAKd,KAAOc,KAAK4nC,QACpB5nC,KAAK+nC,QAAQljC,KAAKmjC,MAAMhoC,KAAK4nC,OAAS5nC,KAAK6nC;gICj2B9CnpC,EAAAupC,mBAAA,WACC,OAAOtqC,OAAOK,OAAO,OAOtB,MAAMkqC,EAAW,KACXC,EAAa,IACbC,EAAa,UACbC,EAAgB,WAChBC,EAAsB,MAE5B,SAASC,EAAcC,GACtB,OAAQA,GACP,KAAK,EACJ,MAAO,GACR,KAAK,EACJ,MAAO,GAAGH,MACX,QAIC,MAAO,MAAMD,KAAcC,KAAiBD,KAAcA,IAAaC,SAI1E,SAAgBI,EAAe71B,EAAiB81B,GAC/C,IAAK91B,EACJ,MAAO,GAGR,MAAMV,EAAqB,GAE3B,IAAIy2B,GAAW,EACXC,GAAa,EAEbC,EAAS,GACb,IAAK,MAAMra,KAAQ5b,EAAS,CAC3B,OAAQ4b,GACP,KAAKka,EACJ,IAAKC,IAAaC,EAAY,CAC7B12B,EAASjb,KAAK4xC,GACdA,EAAS,GAET,SAED,MACD,IAAK,IACJF,GAAW,EACX,MACD,IAAK,IACJA,GAAW,EACX,MACD,IAAK,IACJC,GAAa,EACb,MACD,IAAK,IACJA,GAAa,EAIfC,GAAUra,EAQX,OAJIqa,GACH32B,EAASjb,KAAK4xC,GAGR32B,EA3CRxT,EAAA+pC,eAAAA,EAuLA,MAAMK,EAAK,uBACLC,EAAK,wBACLC,EAAK,2DACLC,EAAO,6EACPC,EAAK,2BACLC,EAAK,+BA4BLC,EAAQ,IAAIC,EAAA5B,SAAsC,KAElD6B,EAAQ,WACb,OAAO,GAGFC,EAAO,WACZ,OAAO,MAGR,SAASC,EAAaC,EAAiCx5B,GACtD,IAAKw5B,EACJ,OAAOF,EAIR,IAAI32B;CAWJ,MAAM82B,EAAa,GAHnB92B,GANCA,EADmB,iBAAT62B,EACAA,EAAK72B,QAEL62B,GAIOpb,YAGiBpe,EAAQ05B,oBAC3C,IAMItY,EANAuY,EAAgBR,EAAMlpC,IAAIwpC,GAC9B,GAAIE,EACH,OAAOC,EAAoBD,EAAeH,GAK3C,GAAIX,EAAG3W,KAAKvf,GAAU,CACrB,MAAMwW,EAAOxW,EAAQwjB,OAAO,GAC5BwT,EAAgB,SAAUzxC,EAAM6zB,GAC/B,MAAuB,iBAAT7zB,GAAqBmgC,EAAQxG,SAAS35B,EAAMixB,GAAQxW,EAAU,WAG7Eg3B,GADUvY,EAAQ0X,EAAGnW,KAAK+W,EAAkB/2B,EAAS3C,KAuCvD,SAAiBmZ,EAAc0gB,GAC9B,MAAMC,EAAY,IAAI3gB,IAChB4gB,EAAgB,KAAK5gB,IACrBwgB,EAAqC,SAAUzxC,EAAM6zB,GAC1D,MAAoB,iBAAT7zB,EACH,KAEJ6zB,EACIA,IAAa5C,EAAO0gB,EAAkB,KAEvC3xC,IAASixB,GAAQkP,EAAQxG,SAAS35B,EAAM4xC,IAAczR,EAAQxG,SAAS35B,EAAM6xC,GAAiBF,EAAkB,MAElHG,EAAY,CAAC7gB,GAInB,OAHAwgB,EAAcK,UAAYA,EAC1BL,EAAcM,SAAW,CAACJ,GAC1BF,EAAcO,aAAeF,EACtBL,EAtDUQ,CAAQ/Y,EAAM,GAAIze,IACvB3C,EAAQ05B,kBAAoBV,EAAOD,GAAI7W,KAAKvf,GAyDzD,SAAiBA,EAAiB3C,GACjC,MAAMo6B,EAAiBC,EAAyB13B,EAAQ5a,MAAM,GAAI,GAAGmM,MAAM,KACzE1K,IAAImZ,GAAW42B,EAAa52B,EAAS3C,IACrC5H,OAAOuK,GAAWA,IAAY22B,GAAO32B,GACjCvM,EAAIgkC,EAAe/zC,OACzB,IAAK+P,EACJ,OAAOkjC,EAER,GAAU,IAANljC,EACH,OAA4BgkC,EAAe,GAE5C,MAAMT,EAAqC,SAAUzxC,EAAc6zB,GAClE,IAAK,IAAI51B,EAAI,EAAGiQ,EAAIgkC,EAAe/zC,OAAQF,EAAIiQ,EAAGjQ,IACjD,GAA0Bi0C,EAAej0C,GAAI+B,EAAM6zB,GAClD,OAAOpZ,EAGT,OAAO,MAEF23B,EAAgBC,EAAOprC,MAAMirC,EAAgBz3B,KAAmCA,EAASu3B,cAC3FI,IACHX,EAAcO,aAAqCI,EAAeJ,cAEnE,MAAMM,EAAWJ,EAAengC,OAAO,CAAC1Q,EAAKyT,IAAYA,EAAQw9B,SAAWjxC,EAAIkQ,OAAOuD,EAAQw9B,UAAYjxC,EAAe,IACtHixC,EAASn0C,SACZszC,EAAca,SAAWA,GAE1B,OAAOb,EAnFUc,CAAQ93B,EAAS3C,IACvBohB,EAAQ6X,EAAGtW,KAAK+W,EAAkB/2B,EAAS3C,KACrC06B,EAAYtZ,EAAM,GAAG+E,OAAO,GAAIxjB,GAAS,IAC/Cye,EAAQ8X,EAAGvW,KAAK+W,EAAkB/2B,EAAS3C,KACrC06B,EAAYtZ,EAAM,GAAIze,GAAS,GA+FjD,SAAkBA,GACjB,IACC,MAAMg4B,EAAS,IAAInY,OAAO,IA1T5B,SAASoY,EAAYj4B;AACpB,IAAKA,EACJ,MAAO,GAGR,IAAIk4B,EAAQ,GAGZ,MAAM54B,EAAWu2B,EAAe71B,EAASu1B,GAGzC,GAAIj2B,EAASua,MAAMgK,GAAKA,IAAMyR,GAC7B4C,EAAQ,SAIJ,CACJ,IAAIC,GAA6B,EACjC74B,EAAS7S,QAAQ,CAACqU,EAASlY,KAG1B,GAAIkY,IAAYw0B,EAQf,YALK6C,IACJD,GAASvC,EAAc,GACvBwC,GAA6B,IAO/B,IAAIpC,GAAW,EACXqC,EAAW,GAEXpC,GAAa,EACbqC,EAAa,GAEjB,IAAK,MAAMzc,KAAQ9a,EAElB,GAAa,MAAT8a,GAAgBma,EACnBqC,GAAYxc,OAKb,IAAIoa,GAAwB,MAATpa,GAAiByc,EA4BpC,OAAQzc,GACP,IAAK,IACJma,GAAW,EACX,SAED,IAAK,IACJC,GAAa,EACb,SAED,IAAK,IACJ,MAGMsC,EAAc,MAHJzC,EAAeuC,EAAU,KAGPvxC,IAAIhB,GAAKoyC,EAAYpyC,IAAIkB,KAAK,QAEhEmxC,GAASI,EAETvC,GAAW,EACXqC,EAAW,GAEX,MAED,IAAK,IACJF,GAAU,IAAMG,EAAa,IAE7BrC,GAAa,EACbqC,EAAa,GAEb,MAGD,IAAK,IACJH,GAASzC,EACT,SAED,IAAK,IACJyC,GAASvC,EAAc,GACvB,SAED,QACCuC,GAASxS,EAAQ3J,uBAAuBH,OApE1C,CACC,IAAIvX,EAuBJg0B,GAnBCh0B,EADY,MAATuX,EACGA,EAIY,MAATA,GAAyB,MAATA,GAAkByc,EAMnCzc,IAAS2Z,EACX,GAKA7P,EAAQ3J,uBAAuBH,GAX/B,IAmELhzB,EAAQ0W,EAAS5b,OAAS,IAAM4b,EAAS1W,EAAQ,KAAO0sC,GAAY1sC,EAAQ,EAAI0W,EAAS5b,UAC5Fw0C,GAAS1C,GAIV2C,GAA6B,IAI/B,OAAOD,EAqLwBD,CAAYj4B,OAC1C,OAAO,SAAUza,EAAc6zB,GAE9B,OADA4e,EAAOvhC,UAAY,EACI,iBAATlR,GAAqByyC,EAAOzY,KAAKh6B,GAAQya,EAAU,MAEjE,MAAOjX,GACR,OAAO4tC,GAlGS4B,CAASv4B,GAM1B,OAFAw2B,EAAMhpC,IAAIspC,EAAYE,GAEfC,EAAoBD,EAAeH,GAG3C,SAASI,EAAoBD,EAAoCwB,GAChE,MAAoB,iBAATA,EACHxB,EAGD,SAAUzxC,EAAM6zB,GACtB,OAAKqf,EAAQ/P,gBAAgBnjC,EAAMizC,EAAKhiB,MAGjCwgB,EAAc5f,EAAM8B,SAASsf,EAAKhiB,KAAMjxB,GAAO6zB,GAF9C,MAMV,SAAS2d,EAAkB/2B,EAAiB3C,GAC3C,OAAOA,EAAQ05B,mBAAqBrR,EAAQxG,SAASlf,EAAS,OAASA,EAAQwjB,OAAO,EAAGxjB,EAAQtc,OAAS,GAAKsc,EAuDhH,SAAS+3B,EAAYxyC,EAAcya,EAAiB04B;AACnD,MAAMC,EAAavhB,EAAMtX,MAAQsX,EAAM0B,MAAMhZ,IAAMva,EAAKqG,QAAQ8pC,EAAqBte,EAAMtX,KAAOva,EAC5FqzC,EAAgBxhB,EAAMtX,IAAM64B,EAC5B3B,EAAqC0B,EAAgB,SAAUnzC,EAAM6zB,GAC1E,MAAuB,iBAAT7zB,GAAsBA,IAASozC,IAAcjT,EAAQxG,SAAS35B,EAAMqzC,GAA4B,KAAV54B,GACjG,SAAUza,EAAM6zB,GACnB,MAAuB,iBAAT7zB,GAAqBA,IAASozC,EAAa34B,EAAU,MAGpE,OADAg3B,EAAca,SAAW,EAAEa,EAAgB,KAAO,MAAQnzC,GACnDyxC,EA2CR,SAAgBxuC,EAAMquC,EAA+Cx5B,EAAwB,IAC5F,IAAKw5B,EACJ,OAAOH,EAIR,GAAoB,iBAATG,GAAqBgC,EAAkBhC,GAAO,CACxD,MAAMG,EAAgBJ,EAAaC,EAAMx5B,GACzC,GAAI25B,IAAkBL,EACrB,OAAOD,EAER,MAAMoC,EAAmF,SAAUvzC,EAAc6zB,GAChH,QAAS4d,EAAczxC,EAAM6zB,IAQ9B,OANI4d,EAAcO,eACjBuB,EAAcvB,aAAeP,EAAcO,cAExCP,EAAca,WACjBiB,EAAcjB,SAAWb,EAAca,UAEjCiB,EAIR,OAuDD,SAA0BC,EAAyB17B,GAClD,MAAMo6B,EAAiBC,EAAyB3sC,OAAO8D,oBAAoBkqC,GACzElyC,IAAImZ,IA0EP,SAAgCA,EAAiBhU,EAAgCqR,GAChF,IAAc,IAAVrR,EACH,OAAO2qC,EAGR,MAAMK,EAAgBJ,EAAa52B,EAAS3C,GAC5C,GAAI25B,IAAkBL,EACrB,OAAOA,EAIR,GAAqB,kBAAV3qC,EACV,OAAOgrC,EAIR,GAAIhrC,EAAO,CACV,MAAMgtC,EAAuBhtC,EAAOgtC,KACpC,GAAoB,iBAATA,EAAmB,CAC7B,MAAMz1C,EAAkC,CAACgC,EAAc6zB,EAAkBh1B,EAAc60C,KACtF,IAAKA,IAAejC,EAAczxC,EAAM6zB,GACvC,OAAO,KAGR,MACM8f,EAAUD,EADMD,EAAKptC,QAAQ,cAAexH,IAElD,OAAO+0C,EAAAxtB,WAAWutB,GACjBA,EAAQ9yC,KAAKuN,GAAKA,EAAIqM,EAAU,MAChCk5B,EAAUl5B,EAAU,MAGtB,OADAzc,EAAO61C,kBAAmB,EACnB71C,GAKT,OAAOyzC,GA9GUqC,CAAuBr5B,EAAS+4B,EAAW/4B,GAAU3C,IACpE5H,OAAOuK,GAAWA,IAAY22B,IAE1BljC,EAAIgkC,EAAe/zC,OACzB,IAAK+P,EACJ,OAAOkjC,EAGR,IAAKc,EAAe6B,KAAKtC,KAA6CA,EAAeoC,kBAAmB,CACvG,GAAU,IAAN3lC,EACH,OAA4BgkC,EAAe,GAG5C,MAAM8B,EAAwC,SAAUh0C,EAAc6zB,GACrE,IAAK,IAAI51B,EAAI,EAAGiQ,EAAIgkC,EAAe/zC,OAAQF,EAAIiQ,EAAGjQ,IAAK;AAEtD,MAAMD,EAA+Bk0C,EAAej0C,GAAI+B,EAAM6zB,GAC9D,GAAI71B,EACH,OAAOA,EAIT,OAAO,MAGFo0C,EAAgBC,EAAOprC,MAAMirC,EAAgBz3B,KAAmCA,EAASu3B,cAC3FI,IACH4B,EAAiBhC,aAAqCI,EAAeJ,cAGtE,MAAMM,EAAWJ,EAAengC,OAAO,CAAC1Q,EAAKyT,IAAYA,EAAQw9B,SAAWjxC,EAAIkQ,OAAOuD,EAAQw9B,UAAYjxC,EAAe,IAK1H,OAJIixC,EAASn0C,SACZ61C,EAAiB1B,SAAWA,GAGtB0B,EAGR,MAAMA,EAAwC,SAAUh0C,EAAc6zB,EAAkB6f,GACvF,IAAI70C,OAA2B6C,EAE/B,IAAK,IAAIzD,EAAI,EAAGiQ,EAAIgkC,EAAe/zC,OAAQF,EAAIiQ,EAAGjQ,IAAK,CAEtD,MAAMwzC,EAA0CS,EAAej0C,GAC3DwzC,EAAcoC,kBAAoBH,IAChC7f,IACJA,EAAWhC,EAAMgC,SAAS7zB,IAEtBnB,IACJA,EAAOg1B,EAASoK,OAAO,EAAGpK,EAAS11B,OAAS0zB,EAAMiC,QAAQ9zB,GAAM7B,UAGlE,MAAMH,EAASyzC,EAAczxC,EAAM6zB,EAAUh1B,EAAM60C,GACnD,GAAI11C,EACH,OAAOA,EAIT,OAAO,MAGFo0C,EAAgBC,EAAOprC,MAAMirC,EAAgBz3B,KAAmCA,EAASu3B,cAC3FI,IACH4B,EAAiBhC,aAAqCI,EAAeJ,cAGtE,MAAMM,EAAWJ,EAAengC,OAAO,CAAC1Q,EAAKyT,IAAYA,EAAQw9B,SAAWjxC,EAAIkQ,OAAOuD,EAAQw9B,UAAYjxC,EAAe,IACtHixC,EAASn0C,SACZ61C,EAAiB1B,SAAWA,GAG7B,OAAO0B,EAhIAC,CAA8B3C,EAAMx5B,GAiC5C,SAASo8B,EAAUC,GAClB,MAAM7yC,EAA4B,GAClC,IAAK,MAAM8E,KAAO+tC,EACjB7yC,EAAI8E,IAAO,EAEZ,OAAO9E,EAGR,SAAgBgyC,EAAkBhjC,GACjC,MAAM8jC,EAAK9jC,EAEX,OAAO8jC,GAAyB,iBAAZA,EAAGnjB,MAA2C,iBAAfmjB,EAAG35B,QA8HvD,SAAS03B,EAAyBD,EAAsEl0C,GACvG,MAAMq2C,EAAmBnC,EAAehiC,OAAOuhC,KAAyCA,EAAeK,WACvG,GAAIuC,EAAiBl2C,OAAS,EAC7B,OAAO+zC,EAGR,MAAMJ,EAAYuC,EAAiBtiC,OAAiB,CAAC1Q,EAAKyT,KACzD,MAAMg9B,EAAkCh9B,EAASg9B,UACjD,OAAOA,EAAYzwC,EAAIkQ,OAAOugC,GAAazwC,GAC/B,IACb,IAAI0wC,EACJ,GAAI/zC,EAAQ,CACX+zC,EAAW,GACX,IAAK,IAAI9zC,EAAI,EAAGiQ,EAAI4jC,EAAU3zC,OAAQF,EAAIiQ,EAAGjQ,IAC5C8zC,EAASjzC,KAAKd,QAGf+zC,EAAWsC,EAAiBtiC,OAAO,CAAC1Q,EAAKyT,KACxC,MAAMi9B,EAAiCj9B,EAASi9B,SAChD,OAAOA,EAAW1wC,EAAIkQ,OAAOwgC,GAAY1wC,GAC7B;CAEd,MAAMizC,EAAiC,SAAUt0C,EAAM6zB,GACtD,GAAoB,iBAAT7zB,EACV,OAAO,KAER,IAAK6zB,EAAU,CACd,IAAI51B,EACJ,IAAKA,EAAI+B,EAAK7B,OAAQF,EAAI,EAAGA,IAAK,CACjC,MAAMiY,EAAKlW,EAAKmW,WAAWlY,EAAI,GAC/B,GAAM,KAAFiY,GAA2B,KAAFA,EAC5B,MAGF2d,EAAW7zB,EAAKi+B,OAAOhgC,GAExB,MAAMoF,EAAQyuC,EAAUtoC,QAAQqqB,GAChC,OAAkB,IAAXxwB,EAAe0uC,EAAS1uC,GAAS,MAEzCixC,EAAUxC,UAAYA,EACtBwC,EAAUvC,SAAWA,EACrBuC,EAAUtC,aAAeF,EAEzB,MAAMyC,EAAqBrC,EAAehiC,OAAOuhC,IAAwCA,EAAeK,WAExG,OADAyC,EAAmBz1C,KAAKw1C,GACjBC,EAjQRhuC,EAAA2yB,MAAA,SAAsBoY,EAA+CtxC,EAAc0zC,GAClF,SAAKpC,GAAwB,iBAATtxC,IAIbiD,EAAmBquC,EAAnBruC,CAAyBjD,OAAM0B,EAAWgyC,IAalDntC,EAAAtD,MAAAA,EA2BAsD,EAAAiuC,oBAAA,SAAoCC,GACnC,IAAKA,EACJ,OAGD,IAAIC,EACJ,OAAQ71C,IACF61C,IACJA,GAAYD,KAAgBp0C,QAAQyB,QAAQ,KAC1CjB,KAAKszC,GAAQA,EAAOD,EAAUC,GAAQ,KAElCO,EAAS7zC,KAAKS,KAASA,EAAIzC,MAIpC0H,EAAAouC,aAAA,SAA6BF,GAC5B,IAAKA,EACJ,OAGD,IAAIC,EACJ,OAAQ71C,IACP,IAAK61C,EAAU,CACd,MAAMP,EAAOM,IACbC,EAAWP,EAAOD,EAAUC,GAAQ,GAErC,QAASO,EAAS71C,KAYpB0H,EAAA+sC,kBAAAA,EAMA/sC,EAAAquC,iBAAA,SAAiCC,GAChC,OAA6BA,EAAqB7C,cAAgB,IAGnEzrC,EAAAuuC,aAAA,SAA6BD,GAC5B,OAA6BA,EAAqBvC,UAAY,kECtf/D,SAASyC,EAAS3uC,EAAaK,GAE9B,OAAIA,aAAiB6zB,OACb,CACNuO,KAAM,EACNviB,OAAQ7f,EAAM6f,OACd0uB,MAAOvT,EAAA7G,YAAYn0B,IAGdA,EAGR,SAAgBwuC,EAAO3kC,EAAU4kC,EAAQ,GACxC,IAAK5kC,GAAO4kC,EAAQ,IACnB,OAAO5kC,EAGR,GAAmB,iBAARA,EAAkB,CAE5B,OAA2BA,EAAKu4B,MAC/B,KAAK,EAAG,OAAOoC,EAAA3D,IAAI2N,OAAO3kC;CAC1B,KAAK,EAAG,OAAO,IAAIgqB,OAAOhqB,EAAIgW,OAAQhW,EAAI0kC,OAI3C,IAAK,IAAI5uC,KAAOkK,EACX9K,OAAOoB,eAAeE,KAAKwJ,EAAKlK,KACnCkK,EAAIlK,GAAO6uC,EAAO3kC,EAAIlK,GAAM8uC,EAAQ,IAKvC,OAAO5kC,mDA9CR/J,EAAAD,UAAA,SAA0BgK,GACzB,OAAOtN,KAAKsD,UAAUgK,EAAKykC,IAG5BxuC,EAAAtD,MAAA,SAAsByS,GACrB,IAAI1T,EAAOgB,KAAKC,MAAMyS,GAEtB,OADA1T,EAAOizC,EAAOjzC,IAoBfuE,EAAA0uC,OAAAA,+DC1BA,IAAiBE,mDAAjB,SAAiBA,GAMHA,EAAAC,SAAW,WAKXD,EAAAE,OAAS,SAKTF,EAAAG,SAAW,UAKXH,EAAAI,YAAc,cAKdJ,EAAAK,mBAAqB,qBAErBL,EAAAM,KAAO,OAEPN,EAAAO,MAAQ,QAERP,EAAA/0C,KAAO,OAEP+0C,EAAAQ,OAAS,SAETR,EAAAS,SAAW,WAEXT,EAAAnzC,KAAO,OAEPmzC,EAAAU,QAAU,UAEVV,EAAAW,aAAe,gBAEfX,EAAAY,qBAAuB,yBAEvBZ,EAAAa,SAAW,kBA9CzB,CAAiBb,EAAA5uC,EAAA4uC,UAAA5uC,EAAA4uC,QAAO,KAkGX5uC,EAAA0vC,kBAAoB,IAjDjC,MAAAruC,cACkBC,KAAAquC,OAAuD1wC,OAAOK,OAAO,MACrEgC,KAAAsuC,OAAuD3wC,OAAOK,OAAO,MACrEgC,KAAAuuC,kBAAkE5wC,OAAOK,OAAO,MACzFgC,KAAAwuC,oBAAwC,OACxCxuC,KAAAyuC,UAAwC;AAEhD1uC,sBAAsB2uC,GACrB1uC,KAAKwuC,oBAAsBE,EAG5B3uC,YAAY4uC,GACX3uC,KAAKyuC,UAAYE,EAGlB5uC,IAAI4/B,EAAmBiP,EAAcC,GACpC7uC,KAAKquC,OAAO1O,GAAaiP,EACzB5uC,KAAKsuC,OAAO3O,GAAakP,EAG1B9uC,mBAAmB4/B,EAAmBmP,GACrC9uC,KAAKuuC,kBAAkB5O,GAAamP,EAGrC/uC,QAAQ4iC,GACP,GAAI3iC,KAAKyuC,UACR,OAAOzuC,KAAKyuC,UAAU9L,GAEvB,MAAMhD,EAAYgD,EAAIhD,UACtB,IAAIiP,EAAO5uC,KAAKquC,OAAO1O,GACnBiP,IAA+B,IAAvBA,EAAKjtC,QAAQ,OACxBitC,EAAO,IAAIA,MAGZ,MAAME,EAAkB9uC,KAAKuuC,kBAAkB5O,GAC/C,IAAIhJ,EAAQ,QAAQJ,mBAAmBoM,EAAIxqC,QAK3C,MAJ+B,iBAApB22C,IACVnY,GAAS,QAAQJ,mBAAmBuY,MAG9B1L,EAAA3D,IAAIhoC,KAAK,CACfqoC,OAAQ3a,EAASkB,MAAQrmB,KAAKwuC,oBAAsBlB,EAAQY,qBAC5DvO,UAAWoP,OAAOp2C,SAASi2C,KAC3Bz2C,KAAM,GAAG42C,OAAOp2C,SAASq2C,SAASxwC,QAAQ,OAAQ,6BAClDm4B,MAAAA,iHCxFUj4B,EAAAuwC,aAAgD,kBAAnB,GAAa,UAEvD,MAAMC,EAAW,IAAI7F,EAAA5B,SAAyB,KAC9C/oC,EAAAywC,aAAA,SAA6B/gB,GAC5B,OAAO/D,EAAU+D,EAAK,MAAO8gB,IAG9B,MAAME,EAAW,IAAI/F,EAAA5B,SAAyB,KAC9C/oC,EAAA2wC,aAAA,SAA6BjhB,GAC5B,OAAO/D,EAAU+D,EAAK,MAAOghB,IAG9B,MAAME,EAA4B,mBAClC,SAASjlB,EAAU+D,EAAamhB,EAAcC;AAC7C,IAAK9wC,EAAAuwC,eAAiB7gB,EACrB,OAAOA,EAGR,MAAMqhB,EAASD,EAAgBtvC,IAAIkuB,GACnC,GAAIqhB,EACH,OAAOA,EAGR,IAAIx4B,EAUJ,OARCA,EADGq4B,EAA0Bnd,KAAK/D,GACtBA,EAAK/D,UAAUklB,GAErBnhB,EAIPohB,EAAgBpvC,IAAIguB,EAAKnX,GAElBA,6FC3BR,SAAgBy4B,EAAgBvtB,GAG/B,OAAOA,GAAYA,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,OAAQmvB,EAAAvB,QAYxD,SAAgBmV,EAAgBlS,EAAWwmB,EAAsB5c,EAAa0c,EAAgBtmB,IAC7F,GAAIA,EAAK0W,SAAW8P,EAAgB9P,OAAQ,CAC3C,GAAI1W,EAAK0W,SAAW6P,EAAArC,QAAQ/0C,KAC3B,OAAO8yC,EAAQ/P,gBAAgBuU,EAAezmB,GAAOymB,EAAeD,GAAkB5c,GAEvF,GAAI8c,EAAiB1mB,EAAKuW,UAAWiQ,EAAgBjQ,WACpD,OAAO0L,EAAQ/P,gBAAgBlS,EAAKjxB,KAAMy3C,EAAgBz3C,KAAM66B,EAAY,KAG9E,OAAO,EAMR,SAAgB8c,EAAiBC,EAAYC,GAC5C,OAAOD,IAAOC,GAAMpW,EAAArG,iBAAiBwc,EAAIC,GAoB1C,SAAgBhkB,EAAS7J,GACxB,OAAO6H,EAAM0B,MAAMM,SAAS7J,EAAShqB,MA0EtC,SAAgB03C,EAAelN,GAC9B,IAAI/jC,EACJ,MAAMqxC,EAAUtN,EAAIxqC,KAkBpB,OAfCyG,EAFG+jC,EAAIhD,WAAasQ,EAAQ35C,OAAS,GAAKqsC,EAAI7C,SAAW6P,EAAArC,QAAQ/0C,KAEzD,KAAKoqC,EAAIhD,YAAYsQ,IAE7BvoB,EAAAzB,WACwB,KAArBgqB,EAAQ3hC,WAAW,IACnB+8B,EAAQ5Q,qBAAqBwV,EAAQ3hC,WAAW,KAC3B,KAArB2hC,EAAQ3hC,WAAW,GAEd2hC,EAAQ7Z,OAAO,GAGf6Z,EAELvoB,EAAAzB,YACHrnB,EAAQA,EAAMJ,QAAQ,MAAO,OAEvBI,EAaR,SAAgBsxC,EAAyB/tB,EAAezP,EAAcsX,EAAMtX,KAC3E,GAAIyP,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,KAAM,CACrC,MAAM43C,EAAMN,EAAe1tB,GAC3B,OAAOguB,EAAI75C,OAAS+0C,EAAQ9Q,QAAQ4V,GAAK75C,QAAU65C,EAAIA,EAAI75C,OAAS,KAAOoc,EACrE,CACN,MAAMjO,EAAI0d,EAAShqB;CACnB,OAAQsM,EAAEnO,OAAS,GAA+B,KAA1BmO,EAAE6J,WAAW7J,EAAEnO,OAAS,KAA4B,sBAAsB67B,KAAKhQ,EAAS+d,SAwClH,SAAgBiD,EAAa1rC,EAAWC,EAASs7B,EAAa0c,EAAgBj4C,IAC7E,GAAIA,EAAKqoC,SAAWpoC,EAAGooC,SAAWgQ,EAAiBr4C,EAAKkoC,UAAWjoC,EAAGioC,WACrE,OAED,GAAIloC,EAAKqoC,SAAW6P,EAAArC,QAAQ/0C,KAAM,CACjC,MAAM4qC,EAAenZ,EAAM8B,SAASr0B,EAAKU,KAAMT,EAAGS,MAClD,OAAOuvB,EAAAzB,UAAYolB,EAAQjR,UAAU+I,GAAgBA,EAEtD,IAAIiN,EAAW34C,EAAKU,MAAQ,IAAKk4C,EAAS34C,EAAGS,MAAQ,IACrD,GAAI66B,EAAY,CAEf,IAAI58B,EAAI,EACR,IAAK,MAAMC,EAAMwO,KAAKoD,IAAImoC,EAAS95C,OAAQ+5C,EAAO/5C,QAASF,EAAIC,IAC1D+5C,EAAS9hC,WAAWlY,KAAOi6C,EAAO/hC,WAAWlY,IAC5Cg6C,EAAShe,OAAOh8B,GAAGuzB,gBAAkB0mB,EAAOje,OAAOh8B,GAAGuzB,eAFQvzB,KAOpEg6C,EAAWC,EAAOja,OAAO,EAAGhgC,GAAKg6C,EAASha,OAAOhgC,GAElD,OAAO4zB,EAAM0B,MAAMI,SAASskB,EAAUC,oDAtOvC3xC,EAAA4xC,iBAAA,SAAiCnuB,GAChC,OAAOutB,EAAgBvtB,GAAYA,EAAS1H,WAAWkP,cAAgBxH,EAAS1H,YAGjF/b,EAAAgxC,gBAAAA,EAMAhxC,EAAA6xC,oBAAA,SAAoCpuB,GACnC,OAAO6J,EAAS7J,IAAaA,EAASwd,WAQvCjhC,EAAA48B,gBAAAA,EAeA58B,EAAAoxC,iBAAAA,EAIApxC,EAAAw8B,QAAA,SAAwB97B,EAAwBoxC,EAAyBxd,EAAa0c,EAAgBtwC,IACrG,GAAIA,IAAUoxC,EACb,OAAO,EAGR,IAAKpxC,IAAUoxC,EACd,OAAO,EAGR,GAAIpxC,EAAM0gC,SAAW0Q,EAAO1Q,SAAWgQ,EAAiB1wC,EAAMugC,UAAW6Q,EAAO7Q,WAC/E,OAAO,EAGR,MAAM8Q,EAAKrxC,EAAMjH,MAAQ,IAAKu4C,EAAKF,EAAOr4C,MAAQ,IAClD,OAAOs4C,IAAOC,GAAM1d,GAAc4G,EAAArG,iBAAiBkd,GAAM,IAAKC,GAAM,MAGrEhyC,EAAAstB,SAAAA,EAIAttB,EAAAutB,QAAA,SAAwB9J;AACvB,OAAO6H,EAAM0B,MAAMO,QAAQ9J,EAAShqB,OASrCuG,EAAAqtB,QAAA,SAAwB5J,GACvB,GAA6B,IAAzBA,EAAShqB,KAAK7B,OACjB,OAAO6rB,EAER,GAAIA,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,KAC/B,OAAO6qC,EAAA3D,IAAIlnC,KAAKyxB,EAAM+B,QAAQ8jB,EAAe1tB,KAE9C,IAAI4J,EAAU/B,EAAM0B,MAAMK,QAAQ5J,EAAShqB,MAK3C,OAJIgqB,EAASwd,WAAa5T,EAAQz1B,QAA+B,KAArBy1B,EAAQzd,WAAW,KAC9D1X,QAAQ+E,MAAM,YAAYwmB,EAAS1H,0CACnCsR,EAAU,KAEJ5J,EAASge,KAAK,CACpBhoC,KAAM4zB,KAWRrtB,EAAAiyC,SAAA,SAAyBxuB,KAAkByuB,GAC1C,IAAIC,EAMJ,OAJCA,EADG1uB,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,KAClB6qC,EAAA3D,IAAIlnC,KAAKyxB,EAAMrwB,KAAKk2C,EAAe1tB,MAAcyuB,IAAez4C,KAEhE6xB,EAAM0B,MAAM/xB,KAAKwoB,EAAShqB,MAAQ,OAAQy4C,GAEjDzuB,EAASge,KAAK,CACpBhoC,KAAM04C,KAURnyC,EAAAoyC,cAAA,SAA8B3uB,GAC7B,IAAKA,EAAShqB,KAAK7B,OAClB,OAAO6rB,EAER,IAAI4uB,EAMJ,OAJCA,EADG5uB,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,KACd6qC,EAAA3D,IAAIlnC,KAAKyxB,EAAMK,UAAUwlB,EAAe1tB,KAAYhqB,KAEpD6xB,EAAM0B,MAAMrB,UAAUlI,EAAShqB,MAE1CgqB,EAASge,KAAK,CACpBhoC,KAAM44C,KAQRryC,EAAAmxC,eAAAA,EA0BAnxC,EAAAsyC,eAAA,SAA+B7uB,GAC9B,QAASA,EAAShqB,MAA6B,MAArBgqB,EAAShqB,KAAK,IAMzCuG,EAAAwxC,yBAAAA,EAcAxxC,EAAAuyC,4BAAA,SAA4C9uB,EAAezP,EAAcsX,EAAMtX,KAE9E,OAAIw9B,EAAyB/tB,EAAUzP,GAC/ByP,EAASge,KAAK,CAAEhoC,KAAMgqB,EAAShqB,KAAKi+B,OAAO,EAAGjU,EAAShqB,KAAK7B,OAAS,KAEtE6rB,GAORzjB,EAAAwyC,yBAAA,SAAyC/uB,EAAezP,EAAcsX,EAAMtX,KAC3E,IAAIy+B,GAAqB,EACzB,GAAIhvB,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,KAAM,CACrC,MAAM43C,EAAMN,EAAe1tB;CAC3BgvB,OAAsBt3C,IAARs2C,GAAuBA,EAAI75C,SAAW+0C,EAAQ9Q,QAAQ4V,GAAK75C,QAAY65C,EAAIA,EAAI75C,OAAS,KAAOoc,MACvG,CACNA,EAAM,IACN,MAAMjO,EAAI0d,EAAShqB,KACnBg5C,EAAyB,IAAb1sC,EAAEnO,QAA0C,KAA1BmO,EAAE6J,WAAW7J,EAAEnO,OAAS,GAEvD,OAAK66C,GAAcjB,EAAyB/tB,EAAUzP,GAG/CyP,EAFCA,EAASge,KAAK,CAAEhoC,KAAMgqB,EAAShqB,KAAO,OAS/CuG,EAAAykC,aAAAA,EA4BAzkC,EAAA0yC,YAAA,SAA4BhoB,EAAWjxB,GACtC,GAAIixB,EAAK0W,SAAW6P,EAAArC,QAAQ/0C,KAAM,CACjC,MAAM84C,EAASjO,EAAA3D,IAAIlnC,KAAKyxB,EAAM/vB,QAAQ41C,EAAezmB,GAAOjxB,IAC5D,OAAOixB,EAAK+W,KAAK,CAChBR,UAAW0R,EAAO1R,UAClBxnC,KAAMk5C,EAAOl5C,OASf,OAN2B,IAAvBA,EAAKwJ,QAAQ,OAChBxJ,EAAOkzC,EAAQjR,UAAUjiC,GACrB,mBAAmBg6B,KAAKh6B,KAC3BA,EAAO,IAAMA,IAGRixB,EAAK+W,KAAK,CAChBhoC,KAAM6xB,EAAM0B,MAAMzxB,QAAQmvB,EAAKjxB,KAAMA,MAIvCuG,EAAA4yC,gBAAA,SAAmChmC,EAAYimC,GAC9C,MAAMD,EAAuB,GAC7B,IAAK,IAAIl7C,EAAI,EAAGA,EAAIkV,EAAMhV,OAAQF,IAAK,CACtC,MAAMo7C,EAAoBD,EAAiBjmC,EAAMlV,IAC7CkV,EAAM4gC,KAAK,CAACuF,EAAWj2C,IACtBA,IAAUpF,GAIPklC,EAAgBkW,EAAmBD,EAAiBE,MAK5DH,EAAgBr6C,KAAKqU,EAAMlV,IAG5B,OAAOk7C,GAMR,SAAiBI,GAEHA,EAAAC,gBAAkB,QAClBD,EAAAE,sBAAwB,cACxBF,EAAAG,eAAiB,OACjBH,EAAAI,eAAiB,OAEdJ,EAAAK,cAAhB,SAA8BC,GAC7B,MAAMz0C,EAAW,IAAI0C,IAIR+xC,EAAQ75C,KAAKuD,UAAUs2C,EAAQ75C,KAAKwJ,QAAQ,KAAO,EAAGqwC,EAAQ75C,KAAKsD,YAAY,MACvF0I,MAAM,KAAK9E,QAAQqC,IACvB,MAAOnD,EAAKK,GAAS8C,EAASyC,MAAM,KAChC5F,GAAOK,GACVrB,EAAS6C,IAAI7B,EAAKK,KAMpB,MAAMqzC,EAAOD,EAAQ75C,KAAKuD,UAAU,EAAGs2C,EAAQ75C,KAAKwJ,QAAQ,MAK5D,OAJIswC,GACH10C,EAAS6C,IAAIsxC,EAAAI,eAAgBG,GAGvB10C;CA3BT,CAAiBmB,EAAAgzC,UAAAhzC,EAAAgzC,QAAO,KA+BxBhzC,EAAAwzC,oBAAA,MAKCnyC,YACCoyC,EACAC,GAJgBpyC,KAAAqyC,kBAAoFhJ,EAAArD,kBAAkBsM,WAMtHtyC,KAAKmyC,iBAAmBI,EAAAn3C,MAAM+2C,GAC9B,IAAK,MAAMxG,KAAcyG,EACxBpyC,KAAKqyC,kBAAkBjyC,IAAIurC,EAAWl4B,KAAKgH,WAAY,CAAEhH,KAAMk4B,EAAWl4B,KAAMk4B,WAAY4G,EAAAn3C,MAAMuwC,EAAWA,cAI/G5rC,QAAQoiB,GACP,MAAMqwB,EAAiBxyC,KAAKqyC,kBAAkBI,WAAWtwB,EAAS1H,YAClE,GAAI+3B,EAAgB,CACnB,MAAMr6C,EAAOgrC,EAAaqP,EAAe/+B,KAAM0O,GAC/C,GAAIhqB,GAAUq6C,EAAe7G,WAAWxzC,GACvC,OAAO,EAGT,QAAS6H,KAAKmyC,iBAAiBhwB,EAAShqB,QAI1CuG,EAAAg0C,gBAAA,SAAgCvwB,EAAewd,GAC9C,GAAIA,EAAW,CACd,IAAIxnC,EAAOgqB,EAAShqB,KAKpB,OAJIA,GAAQA,EAAK,KAAO6xB,EAAM0B,MAAMhZ,MACnCva,EAAO6xB,EAAM0B,MAAMhZ,IAAMva,GAGnBgqB,EAASge,KAAK,CAAEL,OAAQ6P,EAAArC,QAAQW,aAActO,UAAAA,EAAWxnC,KAAAA,IAGjE,OAAOgqB,EAASge,KAAK,CAAEL,OAAQ6P,EAAArC,QAAQ/0C,wFC7QxC,SAASo6C,EAAex6C,GACvB,SAAUuvB,EAAAzB,YAAa9tB,GAAoB,MAAZA,EAAK,IAGrC,SAAgBy6C,EAAqBz6C,GACpC,OAAIw6C,EAAex6C,GACXA,EAAKi6B,OAAO,GAAG6E,cAAgB9+B,EAAKH,MAAM,GAG3CG,mDA5ERuG,EAAAm0C,aAAA,SAA6B1wB,EAAwB2wB,EAAsCC,GAM1F,GALwB,iBAAb5wB,IACVA,EAAWihB,EAAA3D,IAAIlnC,KAAK4pB,IAIjB4wB,EAAc,CACjB,MAAMC,EAAeD,EAAaE,mBAAmB9wB,GACrD,GAAI6wB,EAAc;AACjB,MAAME,EAAmBH,EAAaI,eAAeC,QAAQ98C,OAAS,EAEtE,IAAI+8C,EAOJ,GALCA,EADGC,EAAApY,QAAQ8X,EAAarQ,IAAKxgB,GACjB,GAEAmxB,EAAAnQ,aAAa6P,EAAarQ,IAAKxgB,GAGxC+wB,EAAkB,CACrB,MAAMK,EAAWP,EAAah8C,KAAOg8C,EAAah8C,KAAOs8C,EAAAtnB,SAASgnB,EAAarQ,KAC/E0Q,EAAYA,EAAaE,EAAW,MAAQF,EAAaE,EAG1D,OAAOF,GAKT,GAAIlxB,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,MAAQ4pB,EAAS2d,SAAW6P,EAAArC,QAAQS,SACnE,OAAO5rB,EAASge,KAAK,CAAExJ,MAAO,KAAMiJ,SAAU,OAAQnlB,UAAS,GAIhE,GAAIk4B,EAAexwB,EAAS+d,QAC3B,OAAO5F,EAAAjQ,UAAUuoB,EAAqBzwB,EAAS+d,SAIhD,IAAIjpB,EAAMqjB,EAAAjQ,UAAUlI,EAAS+d,QAK7B,OAJKxY,EAAAzB,WAAa6sB,IACjB77B,EAAMu8B,EAAQv8B,EAAK67B,EAAiBW,WAG9Bx8B,GAKRvY,EAAAg1C,aAAA,SAA6BvxB,GAC5B,IAAKA,EACJ,OAGuB,iBAAbA,IACVA,EAAWihB,EAAA3D,IAAIlnC,KAAK4pB,IAGrB,MAAMiH,EAAOkqB,EAAAtnB,SAAS7J,KAAcA,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,KAAO4pB,EAAS+d,OAAS/d,EAAShqB,MAGlG,OAAIw6C,EAAevpB,GACXwpB,EAAqBxpB,GAGtBA,GAOR1qB,EAAAk0C,qBAAAA,EAQA,IAAIe,EAAqEh2C,OAAOK,OAAO,MACvF,SAAgBw1C,EAAQr7C,EAAcs7C,GACrC,GAAI/rB,EAAAzB,YAAc9tB,IAASs7C,EAC1B,OAAOt7C,EAIR,IAAIy7C,EAAqBD,EAAyBh0C,WAAa8zC,EAAWE,EAAyBE,gBAAah6C,EAWhH,OAVK+5C,IACJA,EAAqB,GAAGha,EAAA5K,MAAMykB,EAAUnZ,EAAA5O,MAAMhZ,OAAO4nB,EAAA5O,MAAMhZ,MAC3DihC,EAA2B,CAAEh0C,SAAU8zC,EAAUI,WAAYD,KAI1DlsB,EAAAvB,QAAUyT,EAAA/H,WAAW15B,EAAMy7C,GAAsBha,EAAApG,qBAAqBr7B,EAAMy7C,MAC/Ez7C,EAAO,KAAKA,EAAKi+B,OAAOwd,EAAmBt9C,WAGrC6B,EAjBRuG,EAAA80C,QAAAA,EAoBA90C,EAAAo1C,UAAA,SAA0B37C,EAAcs7C,GACvC,OAAOt7C,EAAKqG,QAAQ,cAAe,GAAGi1C,QAgCvC,MAAMM,EAAW,IACXC,EAAM,OACNC,EAAO,IA0Gb,IAAKC,EAzGLx1C,EAAAy1C,QAAA,SAAwBnqB;AACvB,MAAMoqB,EAA2B,IAAI1rC,MAAMshB,EAAM1zB,QAGjD,IAAI+6B,GAAQ,EACZ,IAAK,IAAIgjB,EAAY,EAAGA,EAAYrqB,EAAM1zB,OAAQ+9C,IAAa,CAC9D,IAAIl8C,EAAO6xB,EAAMqqB,GAEjB,GAAa,KAATl8C,EAAa,CAChBi8C,EAAeC,GAAa,IAAI/Z,EAAA5nB,MAChC,SAGD,IAAKva,EAAM,CACVi8C,EAAeC,GAAal8C,EAC5B,SAGDk5B,GAAQ,EAGR,IAAIijB,EAAS,GACa,IAAtBn8C,EAAKwJ,QAAQqyC,IAChBM,EAASn8C,EAAKi+B,OAAO,EAAGj+B,EAAKwJ,QAAQqyC,GAAOA,EAAI19C,QAChD6B,EAAOA,EAAKi+B,OAAOj+B,EAAKwJ,QAAQqyC,GAAOA,EAAI19C,SACX,IAAtB6B,EAAKwJ,QAAQ24B,EAAA5nB,MACvB4hC,EAASn8C,EAAKi+B,OAAO,EAAGj+B,EAAKwJ,QAAQ24B,EAAA5nB,KAAO4nB,EAAA5nB,IAAIpc,QAChD6B,EAAOA,EAAKi+B,OAAOj+B,EAAKwJ,QAAQ24B,EAAA5nB,KAAO4nB,EAAA5nB,IAAIpc,SACV,IAAvB6B,EAAKwJ,QAAQsyC,KACvBK,EAASn8C,EAAKi+B,OAAO,EAAGj+B,EAAKwJ,QAAQsyC,GAAQA,EAAK39C,QAClD6B,EAAOA,EAAKi+B,OAAOj+B,EAAKwJ,QAAQsyC,GAAQA,EAAK39C,SAI9C,MAAM4b,EAAqB/Z,EAAKgM,MAAMm2B,EAAA5nB,KACtC,IAAK,IAAI6hC,EAAgB,EAAGljB,GAASkjB,GAAiBriC,EAAS5b,OAAQi+C,IACtE,IAAK,IAAI1uC,EAAQqM,EAAS5b,OAASi+C,EAAeljB,GAASxrB,GAAS,EAAGA,IAAS,CAC/EwrB,GAAQ,EACR,IAAImjB,EAAUtiC,EAASla,MAAM6N,EAAOA,EAAQ0uC,GAAe56C,KAAK2gC,EAAA5nB,KAGhE,IAAK,IAAI+hC,EAAiB,GAAIpjB,GAASojB,EAAiBzqB,EAAM1zB,OAAQm+C,IAGrE,GAAIA,IAAmBJ,GAAarqB,EAAMyqB,IAAmBzqB,EAAMyqB,GAAgB9yC,QAAQ6yC,IAAY,EAAG,CACzG,MAAME,EAA4B7uC,EAAQ0uC,IAAkBriC,EAAS5b,OAI/Dq+C,EAA0B9uC,EAAQ,GAAKmkB,EAAMyqB,GAAgB9yC,QAAQ24B,EAAA5nB,MAAQ,EAAK4nB,EAAA5nB,IAAM8hC,EAAUA,EAClGI,EAA6Bhb,EAAA9H,SAAS9H,EAAMyqB,GAAiBE,GAEnEtjB,GAASqjB,GAAmBE,EAK9B,IAAKvjB,EAAO,CACX,IAAIl7B,EAAS,IAGTyjC,EAAA9H,SAAS5f,EAAS,GAAI,MAAmB,KAAXoiC,KACnB,IAAVzuC,IAEHA,EAAQ,EACR0uC,IACAC,EAAUtiC,EAAS,GAAKooB,EAAA5nB,IAAM8hC,GAG3B3uC,EAAQ,IACX1P,EAAS+b,EAAS,GAAKooB,EAAA5nB,KAGxBvc,EAASm+C,EAASn+C,GAIf0P,EAAQ,IACX1P,EAASA,EAAS49C,EAAWzZ,EAAA5nB,KAG9Bvc,GAAkBq+C,EAGd3uC,EAAQ0uC,EAAgBriC,EAAS5b,SACpCH,EAASA,EAASmkC,EAAA5nB,IAAMqhC,GAGzBK,EAAeC,GAAal+C,GAK3Bk7B,IACH+iB,EAAeC,GAAal8C,GAI9B,OAAOi8C,GAOR,SAAKF,GACJA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,YAHD,CAAKA,IAAAA,EAAI;AAiBTx1C,EAAAm2C,SAAA,SAAyBA,EAAkBv3C,EAAoEK,OAAOK,OAAO,OAC5H,MAAMkU,EAAuB,GAE7B,IAAI4iC,GAAa,EACbjM,EAAS,GACb,IAAK,MAAMra,KAAQqmB,EAElB,GAAa,MAATrmB,GAAiBsmB,GAAuB,MAATtmB,EAC9Bqa,GACH32B,EAASjb,KAAK,CAAE2H,MAAOiqC,EAAQv2B,KAAM4hC,EAAKa,OAG3ClM,EAAS,GACTiM,GAAa,OAIT,GAAa,MAATtmB,GAAgBsmB,EAAY,CACpC,MAAMxvB,EAAWhoB,EAAOurC,GAGxB,GAAwB,iBAAbvjB,EACNA,EAAShvB,QACZ4b,EAASjb,KAAK,CAAE2H,MAAO0mB,EAAUhT,KAAM4hC,EAAKc,gBAKzC,GAAI1vB,EAAU,CAClB,MAAM2vB,EAAc/iC,EAASA,EAAS5b,OAAS,GAC1C2+C,GAAeA,EAAY3iC,OAAS4hC,EAAKgB,WAC7ChjC,EAASjb,KAAK,CAAE2H,MAAO0mB,EAASkf,MAAOlyB,KAAM4hC,EAAKgB,YAIpDrM,EAAS,GACTiM,GAAa,OAKbjM,GAAUra,EASZ,OAJIqa,IAAWiM,GACd5iC,EAASjb,KAAK,CAAE2H,MAAOiqC,EAAQv2B,KAAM4hC,EAAKa,OAGpC7iC,EAAS7J,OAAO,CAACqL,EAASlY,KAGhC,GAAIkY,EAAQpB,OAAS4hC,EAAKgB,UAAW,CAIpC,MAAO,CAHMhjC,EAAS1W,EAAQ,GAChB0W,EAAS1W,EAAQ,IAEVixB,MAAM/Y,GAAWA,IAAYA,EAAQpB,OAAS4hC,EAAKc,UAAYthC,EAAQpB,OAAS4hC,EAAKa,OAASrhC,EAAQ9U,MAAMtI,OAAS,GAI3I,OAAO,IACLmD,IAAIia,GAAWA,EAAQ9U,OAAOjF,KAAK,KASvC+E,EAAAy2C,kBAAA,SAAkC3Q,EAAe4Q,GAChD,OAAI1tB,EAAAxB,aAAekvB,EACX5Q,EAAMhmC,QAAQ,eAAgB,IAAIA,QAAQ,KAAMkpB,EAAAxB,YAAc,IAAM,MAGrEse,EAAMhmC,QAAQ,QAAS+H,GAAW,MAANA,EAAY,KAAO,MASvD7H,EAAA22C,oBAAA,SAAoC7Q,EAAe4Q,GAClD,OAAI1tB,EAAAxB,aAAekvB,EACX5Q,EAAMhmC,QAAQ,eAAgB,IAGlCkpB,EAAAzB,UACIue,EAAMhmC,QAAQ,QAAS+H,GAAW,MAANA,EAAY,KAAO,KAGhDi+B,EAAMhmC,QAAQ,MAAO,MAG7BE,EAAA42C,gBAAA,SAAgC9Q,GAC/B,OAAOA,EAAMhmC,QAAQ,KAAM,OAM5BE,EAAA62C,UAAA,SAA0BC;AACzB,MAAM/wC,GAA+B,IAA3B+wC,EAAS7zC,QAAQ,KAAc24B,EAAA5O,MAAQ4O,EAAAhR,MAC3CtyB,EAAOyN,EAAEunB,SAASwpB,GAClBC,EAAahxC,EAAEsnB,QAAQypB,GAC7B,OAAIx+C,EAAKV,OACD,CAAEU,KAAAA,EAAMy+C,WAAAA,GAGT,CAAEz+C,KAAMy+C,EAAYA,WAAY,8DCjXxC,SAASC,EAAO/S,GACf,OAA2BA,EAAI+S,0DAoFhC,SAASC,EAAuBltC,EAAUylB,EAA8Bkf,EAAiBC,GAExF,IAAK5kC,GAAO4kC,EAAQ,IACnB,OAAO,KAGR,GAAmB,iBAAR5kC,EAAkB,CAE5B,GAAqC,IAAdA,EAAKu4B,KAC3B,OAAOoM,EAAShK,EAAA3D,IAAI2N,OAAOlf,EAAY0nB,kBAAkBntC,IAAQylB,EAAY0nB,kBAAkBntC,GAIhG,IAAK,IAAIlK,KAAOkK,EACf,GAAI9K,OAAOoB,eAAeE,KAAKwJ,EAAKlK,GAAM,CACzC,MAAM4L,EAAIwrC,EAAuBltC,EAAIlK,GAAM2vB,EAAakf,EAAQC,EAAQ,GAC9D,OAANljC,IACH1B,EAAIlK,GAAO4L,IAMf,OAAO,KAxGRzL,EAAAm3C,eAAA,MAIC91C,YAAY+1C,GACX91C,KAAK+1C,gBAAkBD,EAGjB/1C,kBAAkB4iC,GACxB,MAAMxsC,EAAS6J,KAAK+1C,gBAAgBH,kBAAkBjT,GACtD,OAAQxsC,IAAWwsC,EAAMA,EAAM+S,EAAOtS,EAAA3D,IAAIhoC,KAAKtB,IAGzC4J,kBAAkB4iC,GACxB,MAAMxsC,EAAS6J,KAAK+1C,gBAAgBC,kBAAkBrT,GACtD,OAAQxsC,IAAWwsC,EAAMA,EAAM+S,EAAOtS,EAAA3D,IAAIhoC,KAAKtB,IAGzC4J,qBAAqB4iC,GAC3B,MAAMxsC,EAAS6J,KAAK+1C,gBAAgBC,kBAAkBrT,GACtD,OAAQxsC,IAAWwsC,EAAMA,EAAMS,EAAA3D,IAAIhoC,KAAKtB,GAGlC4J,wBAAwB+/B,GAC9B,OAAO9/B,KAAK+1C,gBAAgBE,wBAAwBnW,KAIzCphC,EAAAw3C,sBAAyC,IAAI;AACzDn2C,kBAAkB4iC,GACjB,OAAOA,EAGR5iC,kBAAkB4iC,GACjB,OAAOA,EAGR5iC,qBAAqB4iC,GACpB,OAAOA,EAGR5iC,wBAAwB+/B,GACvB,OAAOA,IA6BTphC,EAAAy3C,sBAAA,SAAyC1tC,EAAQylB,GAChD,MAAM/3B,EA1BP,SAASigD,EAAuB3tC,EAAUylB,EAA8Bmf,GAEvE,IAAK5kC,GAAO4kC,EAAQ,IACnB,OAAO,KAGR,GAAmB,iBAAR5kC,EAAkB,CAC5B,GAAIA,aAAe26B,EAAA3D,IAClB,OAAOvR,EAAY8nB,kBAAkBvtC,GAItC,IAAK,IAAIlK,KAAOkK,EACf,GAAI9K,OAAOoB,eAAeE,KAAKwJ,EAAKlK,GAAM,CACzC,MAAM4L,EAAIisC,EAAuB3tC,EAAIlK,GAAM2vB,EAAamf,EAAQ,GACtD,OAANljC,IACH1B,EAAIlK,GAAO4L,IAMf,OAAO,KAIQisC,CAAuB3tC,EAAKylB,EAAa,GACxD,OAAe,OAAX/3B,EAEIsS,EAEDtS,GA8BRuI,EAAA23C,sBAAA,SAAyC5tC,EAAQylB,GAChD,MAAM/3B,EAASw/C,EAAuBltC,EAAKylB,GAAa,EAAO,GAC/D,OAAe,OAAX/3B,EAEIsS,EAEDtS,GAGRuI,EAAA43C,+BAAA,SAAkD7tC,EAAQylB,GACzD,MAAM/3B,EAASw/C,EAAuBltC,EAAKylB,GAAa,EAAM,GAC9D,OAAe,OAAX/3B,EAEIsS,EAEDtS,yGCzIR,MAAMogD,EAELx2C,YAAmB2V,GAAA1V,KAAA0V,OAAAA,EAIZ3V,QACN,OAAOC,KAAK0V,QAId,MAAM8gC,UAAeD,EAcpBx2C;AACCuE,MAAM,CACLkyC,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACP,IACAD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACP,IACA,IACAD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACP,IACAD,EAAOE,OAAOF,EAAOG,eACrBH,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACP,IACAD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,aACPD,EAAOC,cACN98C,KAAK,KA9CAoG,cAAcyE,GACrB,OAAOA,EAAMK,KAAKC,MAAMN,EAAMlO,OAASuO,KAAKiG,WAGrC/K,oBACP,OAAOy2C,EAAOE,OAAOF,EAAOI,SA6C9B,SAAgBC,IACf,OAAO,IAAIL,EAvDaA,EAAAI,OAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAErFJ,EAAAG,cAAgB,CAAC,IAAK,IAAK,IAAK,KAoDzDj4C,EAAAm4C,GAAAA,EAIA,MAAMC,EAAe,kEAErB,SAAgBC,EAAOn4C,GACtB,OAAOk4C,EAAa3kB,KAAKvzB,GAD1BF,EAAAq4C,OAAAA,EAQAr4C,EAAAtD,MAAA,SAAsBwD,GACrB,IAAKm4C,EAAOn4C,GACX,MAAM,IAAIE,MAAM,gBAGjB,OAAO,IAAIy3C,EAAU33C,IAGtBF,EAAAs4C,aAAA,WACC,OAAOH,IAAKI;yGC1Fbv4C,EAAAw4C,YAAA,MAICn3C,YAAYo3C,EAAmB,QAC9Bn3C,KAAKo3C,cAAgB,IAAIC,EAAGC,cAAcH,GAC1Cn3C,KAAKu3C,UAAY,KAGlBx3C,MAAMmZ,GACL,MAAM/iB,EAAmB,GACnByI,EAAQoB,KAAKu3C,UAChBv3C,KAAKu3C,UAAYv3C,KAAKo3C,cAAcnqB,MAAM/T,GAC1ClZ,KAAKo3C,cAAcnqB,MAAM/T,GAE5B,GAAIta,EAAMtI,OAAS,EAClB,OAAOH,EAER,IACIkY,EADAxI,EAAQ,EAERoX,EAAMpX,EACV,KAAOoX,EAAMre,EAAMtI,QAElB,GAAM,MADN+X,EAAKzP,EAAM0P,WAAW2O,KACkB,KAAF5O,EAA0B,CAG/D,GAFAlY,EAAOc,KAAK2H,EAAMlD,UAAUmK,EAAOoX,MACnCA,EACUre,EAAMtI,OAAQ,CACvB,MAAMkhD,EAAWnpC,EACjBA,EAAKzP,EAAM0P,WAAW2O,IACT,KAARu6B,GAA0C,KAAFnpC,GAAsC,KAARmpC,GAAoC,KAAFnpC,IAC5G4O,IAGFpX,EAAQoX,OAERA,IAIF,OADAjd,KAAKu3C,UAAY1xC,EAAQjH,EAAMtI,OAASsI,EAAMw3B,OAAOvwB,GAAS,KACvD1P,EAGR4J,MACC,OAAOC,KAAKu3C,8HClDD74C,EAAA+4C,KAAO,OACP/4C,EAAAg5C,cAAgB,UAChBh5C,EAAAi5C,QAAU,UACVj5C,EAAAk5C,QAAU,UAIvBl5C,EAAAm5C,cAAA,SAA8BV,GAC7B,MAAO,CAACz4C,EAAA+4C,KAAM/4C,EAAAg5C,cAAeh5C,EAAAi5C,QAASj5C,EAAAk5C,SAAS1L,KAAK4L,GAAeA,IAAgBX,IAGvEz4C,EAAAq5C,YAAc,CAAC,IAAM,KACrBr5C,EAAAs5C,YAAc,CAAC,IAAM,KACrBt5C,EAAAu5C,SAAW,CAAC,IAAM,IAAM,KAErC,MAAMC,EAAqC,IACrCC,EAA8B,IAC9BC,EAAgC,KAChCC,EAAgC,MAqItC,SAASC,EAAeC;AACvB,OAAIA,IAAQ75C,EAAAg5C,eAAyB,OAARa,EACrB75C,EAAA+4C,KAGDc,EAGR,SAAgBC,EAA8Bt/B,EAAkCu/B,GAC/E,IAAKv/B,GAAUu/B,EAAY/5C,EAAAq5C,YAAYzhD,OACtC,OAAO,KAGR,MAAMoiD,EAAKx/B,EAAO2f,UAAU,GACtB8f,EAAKz/B,EAAO2f,UAAU,GAG5B,GAAI6f,IAAOh6C,EAAAq5C,YAAY,IAAMY,IAAOj6C,EAAAq5C,YAAY,GAC/C,OAAOr5C,EAAAi5C,QAIR,GAAIe,IAAOh6C,EAAAs5C,YAAY,IAAMW,IAAOj6C,EAAAs5C,YAAY,GAC/C,OAAOt5C,EAAAk5C,QAGR,GAAIa,EAAY/5C,EAAAu5C,SAAS3hD,OACxB,OAAO,KAGR,MAAMsiD,EAAK1/B,EAAO2f,UAAU,GAG5B,OAAI6f,IAAOh6C,EAAAu5C,SAAS,IAAMU,IAAOj6C,EAAAu5C,SAAS,IAAMW,IAAOl6C,EAAAu5C,SAAS,GACxDv5C,EAAAg5C,cAGD,KA5JRh5C,EAAAm6C,eAAA,SAA+BzrB,EAAoBnd,GAKlD,OAJKA,EAAQ6oC,+BACZ7oC,EAAQ6oC,6BAA+B7oC,EAAQ8oC,cAAgBX,EAAgCD,GAGzF,IAAI3/C,QAA6B,CAACyB,EAASC,KACjD,MAAM8+C,EAAS,IAAI,cAAcC,EAAAC,SAAdn5C,kCAIVC,KAAAm5C,eAA2B,GAC3Bn5C,KAAAo5C,cAAgB,EAExBr5C,OAAOutB,EAAe6pB,EAAkB73C,GACvC,IAAKo4B,OAAOS,SAAS7K,GACpB,OAAOhuB,EAAS,IAAIR,MAAM,4CAIvBkB,KAAKq5C,aACRr5C,KAAKq5C,aAAapsB,MAAMK,EAAOhuB,IAMhCU,KAAKm5C,eAAeliD,KAAKq2B,GACzBttB,KAAKo5C,eAAiB9rB,EAAMmH;AAGxBz0B,KAAKs5C,oBACRt5C,KAAKs5C,oBAAoBtgD,KAAK,IAAMsG,EAAS,MAAO3D,GAAS2D,EAAS3D,IAId,iBAAzCsU,EAAQ6oC,8BAA6C94C,KAAKo5C,eAAiBnpC,EAAQ6oC,6BAClG94C,KAAKu5C,mBAAmBj6C,GAKxBA,EAAS,OAIXS,mBAAmBT,GAGlBU,KAAKs5C,oBAAsB9gD,QAAQyB,QAAQu/C,EAAyB,CACnEtgC,OAAQwe,OAAOhuB,OAAO1J,KAAKm5C,gBAC3BV,UAAWz4C,KAAKo5C,eACdnpC,EAAQ8oC,gBAAgB//C,KAAKygD,IAG/BA,EAAStC,SAAWlnC,EAAQypC,kBAAkBD,EAAStC,UAGvDn3C,KAAKq5C,aAsDV,SAAsBlC,GACrB,OAAOwC,EAAMN,aAAaf,EAAenB,IAvDjBkC,CAAaI,EAAStC,UAC1Cn3C,KAAKq5C,aAAapsB,MAAMyK,OAAOhuB,OAAO1J,KAAKm5C,gBAAiB75C,GAC5DU,KAAKm5C,eAAe7iD,OAAS,EAI7B2D,EAAQ,CAAEw/C,SAAAA,EAAU7rB,OAAQ5tB,KAAKq5C,gBAC/B19C,IACFqE,KAAKkD,KAAK,QAASvH,GAEnB2D,EAAS3D,KAIXoE,OAAOT,GAGFU,KAAKq5C,aACRr5C,KAAKq5C,aAAarsC,IAAI1N,GAOtBU,KAAKu5C,mBAAmB,KACnBv5C,KAAKq5C,cACRr5C,KAAKq5C,aAAarsC,IAAI1N,OAQ3B8tB,EAASzT,GAAG,QAASzf,GAGrBkzB,EAASwsB,KAAKZ,MAIhBt6C,EAAA+5B,OAAA,SAAuBvf,EAAgBi+B,GACtC,OAAOwC,EAAMlhB,OAAOvf,EAAQo/B,EAAenB,KAG5Cz4C,EAAA25B,OAAA,SAAuBh+B,EAA0B88C,EAAkBlnC,GAClE,OAAO0pC,EAAMthB,OAAOh+B,EAA2Di+C,EAAenB,GAAWlnC,IAG1GvR,EAAAm7C,eAAA,SAA+B1C,GAC9B,OAAOwC,EAAME,eAAevB,EAAenB,KAO5Cz4C,EAAAo7C,aAAA,SAA6B3C,EAAkBlnC;AAC9C,OAAO0pC,EAAMG,aAAaxB,EAAenB,GAAWlnC,IAWrDvR,EAAA85C,8BAAAA,EAqCA,MAAMuB,EAAmB,CAAC,QAAS,SAAU,UAK7C71B,eAAe81B,EAAsB9gC,GACpC,MAEM+gC,SAFY,IAAAzhD,QAAA,CAAA0hD,EAAAC,KAAA1W,EAAA,CAAa,aAAWyW,EAAAC,MAEhBC,OAAOlhC,EAAOlhB,MAAM,EAAGqgD,IACjD,IAAK4B,IAAYA,EAAQ9C,SACxB,OAAO,KAGR,MAAMoB,EAAM0B,EAAQ9C,SAASxtB,cAC7B,OAAI,GAAKowB,EAAiBp4C,QAAQ42C,GAC1B,KAWT,SAA6B8B,GAC5B,MAAMC,EAAyBD,EAAa77C,QAAQ,gBAAiB,IAAImrB,cAGzE,OAFe4wB,EAA6BD,IAE3BA,EAZVE,CAAoBP,EAAQ9C,UAGpC,MAAMoD,EAA2D,CAChEE,OAAU,QACVC,KAAQ,SA2DT,SAAgBlB,GAAyBtgC,OAAEA,EAAMu/B,UAAEA,GAA0BkC,GAG5E,IAAIxD,EAAWqB,EAA8Bt/B,EAAQu/B,GAIjDmC,GAAc,EAClB,GAAIzD,IAAaz4C,EAAAi5C,SAAWR,IAAaz4C,EAAAk5C,SAAW1+B,EAAQ,CAC3D,IAAI2hC,GAAiB,EACjBC,GAAiB,EACjBC,GAAmB,EAQvB,IAAK,IAAI3kD,EAAI,EAAGA,EAAIqiD,GAAariD,EAAI8hD,EAAoC9hD,IAAK,CAC7E,MAAM4kD,EAAY5kD,EAAI,GAAM,EACtB6kD,EAAqC,IAAvB/hC,EAAOgiC,SAAS9kD,GAiBpC,GAfI6kD,IACHF,GAAmB,GAIhBF,IAAmBG,IAAaC,IAAeD,GAAYC,KAC9DJ,GAAiB,GAIdC,IAAmBE,GAAYC,IAAeD,IAAaC,KAC9DH,GAAiB,GAIdG,IAAeJ,IAAmBC,EACrC,MAKEC,IACCF,EACH1D,EAAWz4C,EAAAk5C,QACDkD,EACV3D,EAAWz4C,EAAAi5C,QAEXiD,GAAc,GAMjB,OAAID,IAAsBC,IAAgBzD,GAAYj+B,EAC9C8gC,EAAsB9gC,EAAOlhB,MAAM,EAAGygD,IAAYz/C,KAAKmiD,IACtD,CACNP,aAAa,EACbzD,SAAUgE,KAKN,CAAEP,YAAAA,EAAazD,SAAAA,GA7GvBz4C,EAAA08C,gBAAA,SAAgC7C,GAC/B,OAAQA,GACP,IAAK,WACJ,MAAO,YACR,IAAK,UACJ,MAAO,WACR,IAAK,UACJ,MAAO,WACR,IAAK,YACJ,MAAO,aACR,IAAK,QACJ,MAAO,SACR,IAAK;AACJ,MAAO,SACR,IAAK,QACJ,MAAO,SACR,IAAK,QACJ,MAAO,SACR,IAAK,WACJ,MAAO,cACR,IAAK,UACJ,MAAO,OACR,QACC,MAAMhyC,EAAIgyC,EAAIlnB,MAAM,gBACpB,OAAI9qB,EACI,WAAaA,EAAE,GAGhBgyC,IAgBV75C,EAAA86C,yBAAAA,KrCmBA,mBAAAl1B,OAEAA,OAAAtuB,EAAA,IAAAC,EAAA,CAAA,GAAA,GAAA,OAAA,SAAAkC,EAAAC,EAAAC,GAAA,OAAAJ,EAAAwrC,QAAA4X,iBAAAljD,EAAAC,EAAAC,UACA,CAAA,GAAA,iBAAA4F,QAAA,iBAAAA,OAAAS,QAMA,MAAA,IAAAI,MAAA,mBANA,CACA,MAAA3G,EAAAsrC,QAAA,QACArrC,EAAAqrC,QAAA,MACAprC,EAAAorC,QAAA,yBACAxlC,OAAAS,QAAAzG,EAAAwrC,QAAAtrC,EAAAC,EAAAC,gHsCjTA,MAAMijD,EAAU,CACfC,QAAS,aACTC,KAAM,sCAGDC,EAAsB,IAAIt7C,IAAI,CACnC,oBACA,oBACA,sBAGD,SAASu7C,EAAmBv0B,GAC3B,MAAMw0B,EAAgBx0B,EAAU3oB,QAAQ,MAAO,KAAKmrB,cACpD,OAAQ8xB,EAAoBvyC,IAAIyyC,GAGjCj9C,EAAAk9C,OAAA,WACC,OAAO,IAAIpjD,QAAQ0rB,MAAOjqB,EAASC,KAClC,MAAM2lB,EAAUzd,WAAW,IAAMlI,EAAO,sDAAuD,KAE/F;AACCD,QAUK,IAAIzB,QAAQ,CAACyB,EAASC,KAC5B,IACC2hD,EAAAjpB,KAAKlL,EAAAzB,UAAYq1B,EAAQC,QAAUD,EAAQE,KAAM,CAAE37B,QAAS,KAAS,CAAC/mB,EAAKgjD,EAAQC,KAClF,GAAIjjD,EACH,OAAOoB,EAAO,mCAAmCpB,EAAI2hB,eAC/C,CACN,MAAMwb,EAAQ,qCAEd,IAAI5E,EACJ,KAAwC,QAAhCA,EAAQ4E,EAAMrD,KAAKkpB,KAAmB,CAC7C,MAAME,EAAsB3qB,EAAM,GAClC,GAAIqqB,EAAmBM,GACtB,OAAO/hD,EAAQ+hD,GAIjB,OAAO9hD,EAAO,yDAGf,MAAOpB,GACRoB,EAAOpB,OA7BN,MAAO6C,GACRzB,EAAOyB,WAEPwG,aAAa0d,qFC6ChB,IAAIo8B,mDAzDSv9C,EAAAw9C,mBAA0C,IAAI,MAKlDn8C,2BAA2Bo8C,GAsBlC,OArBKn8C,KAAKo8C,sBACTp8C,KAAKo8C,oBAAsB/S,EAAArD,kBAAkBqW,aAG7Cr8C,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY;AAGzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,GACzCJ,KAAKo8C,oBAAoBh8C,IAAI,YAAY,MAEjCJ,KAAKo8C,oBAAoB3J,WAAW0J,GAG9Cp8C,QACC,QAAoBlG,IAAhBmG,KAAK0V,OAAsB,CAC9B,IAAI4mC,EAAQ,EACRC,EAAiB,EAErB,MAAMC,EAAaC,EAAAC,oBACnB,IAAK,IAAI1lD,KAAQwlD,EAChB,GAAI7+C,OAAOqB,UAAUD,eAAeE,KAAKu9C,EAAYxlD,GACpD,IAAK,MAAMmlD,IAAEA,EAAG1O,SAAEA,KAAc+O,EAAWxlD,GACrCy2C,IACJ8O,GAAkB,EACdv8C,KAAK28C,2BAA2BR,EAAIllB,iBACvCqlB,GAAS,IAMdt8C,KAAK0V,OAAS6mC,EAAiB,EAC5BD,EAAQC,EACR,EAGJ,OAAOv8C,KAAK0V,SAKdhX,EAAAk+C,aAAO14B,iBASN,OARK+3B,IACJA,EAAY,WAGX,aAOH/3B,iBACC,IACC,MAAM24B,QAAS,IAAArkD,QAAA,CAAA0hD,EAAAC,KAAA1W,EAAA,CAAa,UAAQyW,EAAAC,KAC9B2C,QAAmBC,EAAAnB,SACzB,OAAOiB,EAAOG,WAAW,UAAUC,OAAOH,EAAY,QAAQI,OAAO,OACpE,MAAOpkD,GAER,YADAga,EAAOzP,kBAAkBvK,IAfPqkD,IAEJC,EAAKpG,gBAHP,IAONiF;WC5ER,MAAMoB,EAAYC,EAAAha,qBAAqBG,EAAS,SAC1CzZ,EAAQyZ,EAAQ4X,iBAAyBgC,GAClC3+C,EAAA6+C,eAAiBvzB,EAAMuzB,eACvB7+C,EAAA8+C,uBAAyBxzB,EAAMwzB,qICG5C,IAAYC,EAeLv5B,eAAexrB,EAAOP,EAAculD,EAAOD,EAAWE,QAC5D,GAAIC,EAAAniB,oBAAoBtjC,GACvB,MAAM,IAAI2G,MAAM,mDAIjB,OAAI4+C,IAASD,EAAWE,OAChBE,EAAa1lD,GAwCtB+rB,eAA0B/rB,GACzB,IACC,MAAM2lD,EAAaxjB,EAAA3gC,KAAKokD,EAAGC,SAAUC,EAAAjH,gBACrC,UACOkH,EAAO/lD,EAAM2lD,GAClB,MAAOniD,GACR,OAAOkiD,EAAa1lD,GAIrB0lD,EAAaC,GACZ,MAAOniD,GACR,GAAmB,WAAfA,EAAM5B,KACT,MAAM4B,GAjDDwiD,CAAWhmD,GAGnB+rB,eAAe25B,EAAa1lD,GAC3B,IACC,MAAMc,QAAaJ,EAAMV,GAGzB,IAAIc,EAAKC,eAAkBD,EAAKE,iBAW3B,CAGJ,MAAMukD,EAAOzkD,EAAKykD,KAKlB,OAJa,IAAPA,SACCU,EAAMjmD,EAAa,IAAPulD,GAGZ5jD,EAAO3B,GAnBmC,CAGjD,MAAMoB,QAAiBF,EAAQlB,SACzBK,QAAQgB,IAAID,EAASE,IAAIC,GAASmkD,EAAavjB,EAAA3gC,KAAKxB,EAAMuB,YAG1D2kD,EAAAC,UAAUlmD,EAAGwB,MAAbykD,CAAoBlmD,IAc1B,MAAOwD,GACR,GAAmB,WAAfA,EAAM5B,KACT,MAAM4B,GA4DFuoB,eAAe7qB,EAAQlB,GAC7B,OAAOomD,QAA8BF,EAAAC,UAAUlmD,EAAGiB,QAAbglD,CAAsBlmD,IAiB5D,SAAgBqmD,EAAYrmD,GAC3B,OAAOomD,EAAwBnmD,EAAGomD,YAAYrmD,IAG/C,SAASomD,EAAwBhlD,GAGhC,OAAI4rB,EAASe,YACL3sB,EAASE,IAAIC,GAAS+kD,EAAAtP,aAAaz1C,IAGpCH;AAOR,SAAgB6kD,EAAMjmD,EAAculD,GACnC,OAAOW,EAAAC,UAAUlmD,EAAGgmD,MAAbC,CAAoBlmD,EAAMulD,GAGlC,SAAgBzkD,EAAKd,GACpB,OAAOkmD,EAAAC,UAAUlmD,EAAGa,KAAbolD,CAAmBlmD,GA8B3B,SAAgBU,EAAMV,GACrB,OAAOkmD,EAAAC,UAAUlmD,EAAGS,MAAbwlD,CAAoBlmD,GAG5B,SAAgB+lD,EAAOQ,EAAiBC,GACvC,OAAON,EAAAC,UAAUlmD,EAAG8lD,OAAbG,CAAqBK,EAASC,GAStC,SAAgB7kD,EAAO3B,GACtB,OAAOkmD,EAAAC,UAAUlmD,EAAG0B,OAAbukD,CAAqBlmD,oDA3M7B,SAAYslD,GAKXA,EAAAA,EAAA,OAAA,GAAA,SAOAA,EAAAA,EAAA,KAAA,GAAA,OAZD,CAAYA,EAAA/+C,EAAA++C,aAAA/+C,EAAA++C,WAAU,KAetB/+C,EAAAhG,OAAAA,EAiEAgG,EAAAkgD,WAAA,SAAgBA,EAAWzmD,GAC1B,GAAIylD,EAAAniB,oBAAoBtjC,GACvB,MAAM,IAAI2G,MAAM,mDAGjB,IACC,MAAM7F,EAAOb,EAAGymD,UAAU1mD,GAG1B,IAAIc,EAAKC,eAAkBD,EAAKE,iBAW3B,CAGJ,MAAMukD,EAAOzkD,EAAKykD,KAKlB,OAJa,IAAPA,GACLtlD,EAAG0mD,UAAU3mD,EAAa,IAAPulD,GAGbtlD,EAAG2mD,WAAW5mD,GAhBJqmD,EAAYrmD,GACpBsB,IAAIC,GAASklD,EAAWtkB,EAAA3gC,KAAKxB,EAAMuB,KAG5CtB,EAAG4mD,UAAU7mD,GAcb,MAAOwD,GACR,GAAmB,WAAfA,EAAM5B,KACT,MAAM4B,IAKT+C,EAAArF,QAAAA,EAIAqF,EAAAugD,qBAAO/6B,eAAoC/rB,GAC1C,MAAMoB,QAAiB8kD,EAAAC,UAAUlmD,EAAGiB,QAAbglD,CAAsBlmD,EAAM,CAAE+mD,eAAe,IAIpE,GAAI/5B,EAASe,YACZ,IAAK,MAAMxsB,KAASH,EACnBG,EAAM1C,KAAOynD,EAAAtP,aAAaz1C,EAAM1C,MAIlC,OAAOuC,GAGRmF,EAAA8/C,YAAAA,EAcA9/C,EAAApG,OAAA,SAAuBH,GACtB,OAAOkmD,EAAAC,UAAUlmD,EAAGE,OAAb+lD,CAAqBlmD,IAG7BuG,EAAA0/C,MAAAA,EAIA1/C,EAAAzF,KAAAA;AASAyF,EAAAygD,SAAOj7B,eAAwB/rB,GAG9B,IAAIinD,EACAC,EACJ,IACCD,QAAiBvmD,EAAMV,GACtB,MAAOwD,GACR0jD,EAAgB1jD,EAIjB,MAAM2jD,KAAYF,IAAYA,EAASjmD,kBACvC,GAAIkmD,GAAiBC,EAAQ,CAG5B,MAAO,CAAErmD,WAFcA,EAAKd,GAEHgB,eAAgBmmD,GAG1C,MAAO,CAAErmD,KAAMmmD,EAAWjmD,gBAAgB,IAG3CuF,EAAA7F,MAAAA,EAIA6F,EAAAw/C,OAAAA,EAIAx/C,EAAA6gD,kBAAA,SAAkCb,EAAiBC,GAClD,OAAO,IAAInmD,QAAQyB,IAClB7B,EAAG8lD,OAAOQ,EAASC,EAAS,IAAM1kD,QAIpCyE,EAAA5E,OAAAA,EAIA4E,EAAA8gD,QAAA,SAAwB7nD,EAAgBQ,EAAcma,GACrD,OAAO+rC,EAAAC,UAAUlmD,EAAGonD,QAAbnB,CAAsB1mD,EAAQQ,EAAMma,IAG5C5T,EAAA+gD,SAAA,SAAyBtnD,EAAc9B,GACtC,OAAOgoD,EAAAC,UAAUlmD,EAAGqnD,SAAbpB,CAAuBlmD,EAAM9B,IAKrCqI,EAAA1E,SAAA,SAAyB7B,EAAcg/C,GACtC,OAAOkH,EAAAC,UAAUlmD,EAAG4B,SAAbqkD,CAAuBlmD,EAAMg/C,IAMrC,MAAMuI,EAAgD,IAAIz/C,IAO1DvB,EAAAtE,UAAA,SAA0BjC,EAAcgC,EAA4D8V,GAGnG,OAYD,SAA8B0vC,GAC7B,MAAMC,EAAyBF,EAAoBx/C,IAAIy/C,GACvD,GAAIC,EACH,OAAOA,EAGR,MAAMC,EAAiB,IAAI9T,EAAA/pB,MAS3B,OARA09B,EAAoBt/C,IAAIu/C,EAAUE,GAEjB7hC,EAAA5G,MAAM5L,KAAKq0C,EAAej+B,WAC3Ck+B,CAAS,KACRJ,EAAoBp/C,OAAOq/C,GAC3BE,EAAe/qC,YAGT+qC,EA3BAE,CAGR,SAAoB5nD,GACnB,IAAIwnD,EAAWxnD,GACXgtB,EAASc,WAAad,EAASe,eAClCy5B,EAAWA,EAASh2B,eAGrB,OAAOg2B,EAXUK,CAAW7nD,IAEUqnB,MAAM,KA6C7C,SAA2BrnB,EAAcgC,EAA4D8V,GACpG,MAAMgwC,EAAiBC,EAAmBjwC,GAE1C,OAAO,IAAIzX,QAAQ,CAACyB,EAASC,KACR,iBAATC,GAAqBu9B,OAAOS,SAASh+B,IAASA,aAAgBm6B,WAmG3E,SAA6Bn8B,EAAcgC,EAAoC8V,EAAmC3Q,GAC7G2Q,EAAQknC,WACXh9C,EAAOgmD,EAAA9nB,OAAOl+B,aAAgBm6B,WAAaoD,OAAOjgC,KAAK0C,GAAQA,EAAM8V,EAAQknC,SAASiJ,QAAS,CAAEC,OAAQpwC,EAAQknC,SAASkJ;IAG3H,IAAKC,EACJ,OAAOloD,EAAGgC,UAAUjC,EAAMgC,EAAM,CAAEujD,KAAMztC,EAAQytC,KAAM6C,KAAMtwC,EAAQswC,MAAQjhD,GAI7ElH,EAAGooD,KAAKroD,EAAM8X,EAAQswC,KAAMtwC,EAAQytC,KAAM,CAAC+C,EAAWC,KACrD,GAAID,EACH,OAAOnhD,EAASmhD,GAIjBroD,EAAGgC,UAAUsmD,EAAIvmD,EAAMwmD,IACtB,GAAIA,EACH,OAAOvoD,EAAGwoD,MAAMF,EAAI,IAAMphD,EAASqhD,IAIpCvoD,EAAGyoD,UAAUH,EAAKI,IAIbA,IACHlqD,QAAQoK,KAAK,8EAA+E8/C,GAC5FR,GAAW,GAGLloD,EAAGwoD,MAAMF,EAAIK,GAAczhD,EAASyhD,UAjI5CC,CAAoB7oD,EAAMgC,EAAM8lD,EAAgBtkD,GAASA,EAAQzB,EAAOyB,GAAS1B,KAOpF,SAAmC9B,EAAc8oD,EAA+BhxC,EAAmC3Q,GAGlH,IAAI4hD,GAAW,EACf,MAAMC,EAAUxlD,IACVulD,IACJA,GAAW,EAIPvlD,EACCylD,GACHpI,EAAOxtC,KAAK,QAAS,IAAMlM,EAAS3D,IACpCq9C,EAAOxsB,WAEPltB,EAAS3D,GAMV2D,MAOG05C,EAAS5gD,EAAGipD,kBAAkBlpD,EAAM,CAAEulD,KAAMztC,EAAQytC,KAAMvQ,MAAOl9B,EAAQswC,KAAMe,WAAW,IAKhG,IAAIZ,EACAU,EACJpI,EAAOxtC,KAAK,OAAQ9K,IACnBggD,EAAKhgD,EACL0gD,GAAS,EAILnxC,EAAQknC,WACX8J,EAASA,EAAOrH,KAAKuG,EAAArG,aAAa7pC,EAAQknC,SAASiJ,QAAS,CAAEC,OAAQpwC,EAAQknC,SAASkJ,WAMxFY,EAAOrH,KAAKZ,KAKbiI,EAAOz1C,KAAK,QAAS7P,GAASwlD,EAAOxlD,IACrCq9C,EAAOxtC,KAAK,QAAS7P,GAASwlD,EAAOxlD,IAMrCq9C,EAAOxtC,KAAK,SAAU,KAGjB80C,GAAYc,EACfhpD,EAAGyoD,UAAUH,EAAKI,IAIbA,IACHlqD,QAAQoK,KAAK,8EAA+E8/C,GAC5FR,GAAW,GAGZtH,EAAOxsB,YAGRwsB,EAAOxsB,YAOTwsB,EAAOxtC,KAAK,QAAS,IAAM21C,KAxFzBI,CAA0BppD,EAAMgC,EAAM8lD,EAAgBtkD,GAASA,EAAQzB,EAAOyB,GAAS1B,QApDvCunD,CAAkBrpD,EAAMgC,EAAM8V,KA4CjF,IAAIqwC,GAAW,EA4Kf,SAASJ,EAAmBjwC,GAC3B,OAAKA,EAIE,CACNytC,KAA8B,iBAAjBztC,EAAQytC,KAAoBztC,EAAQytC,KAAO;AACxD6C,KAA8B,iBAAjBtwC,EAAQswC,KAAoBtwC,EAAQswC,KAAO,IACxDpJ,SAAUlnC,EAAQknC,UANX,CAAEuG,KAAM,IAAO6C,KAAM,KAuBvBr8B,eAAeu9B,EAAUtpD,GAC/B,IAGC,aAFuBc,EAAKd,IAEZe,cACf,MAAOyC,GACR,OAAO,GA+EFuoB,eAAew9B,EAAKjjC,EAAgB9mB,EAAgBgqD,GAC1D,MAAMC,EAAgBD,GAAoChkD,OAAOK,OAAO,MAElE6jD,QAAiB5oD,EAAKwlB,GAC5B,IAAKojC,EAAS3oD,cACb,OAoBFgrB,eAA0BzF,EAAgB9mB,EAAgB+lD,GACzD,OAAO,IAAIllD,QAAQ,CAACyB,EAASC,KAC5B,MAAM+mD,EAAS7oD,EAAG0pD,iBAAiBrjC,GAC7Bu6B,EAAS5gD,EAAGipD,kBAAkB1pD,EAAQ,CAAE+lD,KAAAA,IAE9C,IAAIwD,GAAW,EACf,MAAMC,EAAUxlD,IACf,IAAKulD,EAAU,CAId,GAHAA,GAAW,EAGPvlD,EACH,OAAOzB,EAAOyB,GAIfvD,EAAGgmD,MAAMzmD,EAAQ+lD,EAAM/hD,GAASA,EAAQzB,EAAOyB,GAAS1B,OAK1DgnD,EAAOz1C,KAAK,QAAS7P,GAASwlD,EAAOxlD,IACrCq9C,EAAOxtC,KAAK,QAAS7P,GAASwlD,EAAOxlD,IAGrCq9C,EAAOxtC,KAAK,QAAS,IAAM21C,KAG3BF,EAAOrH,KAAKZ,KAhDL+I,CAAWtjC,EAAQ9mB,EAAwB,IAAhBkqD,EAASnE,MAG5C,GAAIkE,EAAcnjC,GACjB,OAAOjmB,QAAQyB,UAGhB2nD,EAAcnjC,IAAU,QAGlBphB,EAAO1F,EAAwB,IAAhBkqD,EAASnE,MAG9B,MAAMpkD,QAAcD,EAAQolB,GAC5B,IAAK,IAAIroB,EAAI,EAAGA,EAAIkD,EAAMhD,OAAQF,IAAK,CACtC,MAAMmC,EAAOe,EAAMlD,SACbsrD,EAAKpnB,EAAA3gC,KAAK8kB,EAAQlmB,GAAO+hC,EAAA3gC,KAAKhC,EAAQY,GAAOqpD,IAoC9C19B,eAAe7mB,EAAOlF,EAAculD,GAC1C,OAAOW,EAAAC,UAAUlmD,EAAG+E,MAAbkhD,CAAoBlmD,EAAM,CAAEulD,KAAAA,EAAMtgD,WAAW,IAvMrDsB,EAAAsjD,cAAA,SAA8B7pD,EAAcgC,EAAuB8V,GAClE,MAAMgwC,EAAiBC,EAAmBjwC,GAM1C,GAJIgwC,EAAe9I,WAClBh9C,EAAOgmD,EAAA9nB,OAAOl+B,EAAM8lD,EAAe9I,SAASiJ,QAAS,CAAEC,OAAQJ,EAAe9I,SAASkJ,WAGnFC,EACJ,OAAOloD,EAAG4pD,cAAc7pD,EAAMgC,EAAM,CAAEujD,KAAMuC,EAAevC,KAAM6C,KAAMN,EAAeM,OAIvF,MAAMG,EAAKtoD,EAAG6pD,SAAS9pD,EAAM8nD,EAAeM,KAAMN,EAAevC,MAEjE,IAGCtlD,EAAG4pD,cAActB,EAAIvmD,GAGrB;AACC/B,EAAG8pD,cAAcxB,GAChB,MAAOI,GACRlqD,QAAQoK,KAAK,kFAAmF8/C,GAChGR,GAAW,WAGZloD,EAAG+pD,UAAUzB,KAgBfhiD,EAAA0jD,cAAOl+B,eAA6Bm+B,GACnC,MAAM9oD,QAAiBF,EAAQgpD,GACzBC,EAAwB,GAE9B,IAAK,MAAM5oD,KAASH,QACTkoD,EAAUnnB,EAAA3gC,KAAK0oD,EAAS3oD,KACjC4oD,EAAYrrD,KAAKyC,GAInB,OAAO4oD,GAGR5jD,EAAA+iD,UAAAA,EAUA/iD,EAAAzC,WAAOioB,eAA0B/rB,GAChC,IAGC,aAFuBc,EAAKd,IAEZoqD,SACf,MAAO5mD,GACR,OAAO,IAIT+C,EAAA8jD,YAAA,SAA4BrqD,GAG3B,OAAO,IAAIK,QAAcyB,IACxB,IAAIwoD,GAAU,EACd,MAAMhgC,EAAWC,YAAY,KACvB+/B,IACJA,GAAU,EACVrqD,EAAGE,OAAOH,EAAMG,IACfmqD,GAAU,EAELnqD,IACJkqB,cAAcC,GACdxoB,OAAQJ,QAIT,QAIL6E,EAAA6J,KAAO2b,eAAoBzF,EAAgB9mB,GAC1C,GAAI8mB,IAAW9mB,EACd,OAAOa,QAAQyB,UAGhBiqB,eAAew+B,EAAYvqD,GAC1B,MAAMc,QAAaJ,EAAMV,GACzB,GAAIc,EAAKC,eAAiBD,EAAKE,iBAC9B,OAAOX,QAAQyB,UAGhB,MAAMymD,QAAWrC,EAAAC,UAAUlmD,EAAGooD,KAAbnC,CAAmBlmD,EAAM,KAC1C,UACOkmD,EAAAC,UAAUlmD,EAAGuqD,QAAbtE,CAAsBqC,EAAIznD,EAAK2pD,MAAO,IAAI1rD,MAC/C,MAAOyE,IAIT,OAAO0iD,EAAAC,UAAUlmD,EAAGwoD,MAAbvC,CAAoBqC,GAG5B,UACOxC,EAAOz/B,EAAQ9mB,SACf+qD,EAAY/qD,GACjB,MAAOgE,GAUR,KAAI8iB,EAAOkL,gBAAkBhyB,EAAOgyB,eAAgC,UAAfhuB,EAAM5B,MAAoB6/B,EAAA9H,SAASrT,EAAQ,MAK/F,MAAM9iB,QAJA+lD,EAAKjjC,EAAQ9mB,SACbe,EAAO+lB,EAAQg/B,EAAWoF,YAC1BH,EAAY/qD,KAOrB+G,EAAAgjD,KAAAA,EAyDAhjD,EAAArB,OAAAA;CAYaqB,EAAAokD,cAAiC,SAAjBjoD,QAAQkoD,KAPT,UACE,YAOjBrkD,EAAAskD,cAAiC,SAAjBnoD,QAAQkoD,KAJT,UACE,wFC5iB9B,SAASjS,EAAc34C,GACtB,OAAOyhC,EAAA5K,MAAMsL,EAAAjQ,UAAUlyB,GAAOmiC,EAAA5nB,sDArE/BhU,EAAAukD,aAAA,SAAgBA,EAAa9qD,GAC5B,MAAMiB,EAAMkhC,EAAAvO,QAAQ5zB,GACpB,GAAIA,IAASiB,EACZ,OAAOjB,EAGR,MAAMnB,GAAQsjC,EAAAtO,SAAS7zB,IAAmDA,GAAMwxB,cAChF,IACC,MACMhW,EADUuvC,EAAA1E,YAAYplD,GACNiP,OAAOzP,GAAKA,EAAE+wB,gBAAkB3yB,GACtD,GAAqB,IAAjB2c,EAAMrd,OAAc,CAEvB,MAAMg+C,EAAS2O,EAAa7pD,GAC5B,GAAIk7C,EACH,OAAOha,EAAA3gC,KAAK26C,EAAQ3gC,EAAM,SAErB,GAAIA,EAAMrd,OAAS,EAAG,CAE5B,MAAM6sD,EAAKxvC,EAAMhS,QAAQ3K,GACzB,GAAImsD,GAAM,EAAG,CACZ,MAAM7O,EAAS2O,EAAa7pD,GAC5B,GAAIk7C,EACH,OAAOha,EAAA3gC,KAAK26C,EAAQ3gC,EAAMwvC,MAI5B,MAAOxnD,IAIT,OAAO,MAGR+C,EAAA0kD,SAAOl/B,eAAwB/rB,GAC9B,IACC,aAAakmD,EAAAC,UAAUlmD,EAAGgrD,SAAb/E,CAAuBlmD,GACnC,MAAOwD,GAOR,MAAMo1C,EAAiBD,EAAc34C,GAIrC,aAFMkmD,EAAAC,UAAUlmD,EAAGirD,OAAbhF,CAAqBtN,EAAgB34C,EAAGkrD,UAAUC,MAEjDxS,IAITryC,EAAA8kD,aAAA,SAA6BrrD,GAC5B,IACC,OAAOC,EAAGorD,aAAarrD,GACtB,MAAOwD,GAOR,MAAMo1C,EAAiBD,EAAc34C,GAGrC,OAFAC,EAAGqrD,WAAW1S,EAAgB34C,EAAGkrD,UAAUC,MAEpCxS,oFC9DT,SAAS2S,EAAoBnrD,EAA8CorD,EAAyE5yC;AACnJ,MAAM6yC,EAAmBtpB,EAAAtO,SAASzzB,EAAKJ,MACjC0rD,EAA0B,IAAI5jD,IAEpC,IAAI+D,GAAW,EACX8/C,EAAoC,CAACnrC,EAAAxD,aAAa,KACrD0uC,EAAwBxkD,QAAQ0kD,GAAcprC,EAAA7D,QAAQivC,IACtDF,EAAwBriD,WAGzB,IAGC,MAAMwiD,EAAUC,EAAAC,MAAM3rD,EAAKJ,MAC3B2rD,EAAmB7sD,KAAK0hB,EAAAxD,aAAa,KACpC6uC,EAAQG,qBACRH,EAAQpD,WAIT,MAAMwD,EAA8B,IAAIjkD,IACpC5H,EAAKW,aACRgqD,EAAA7pD,QAAQd,EAAKJ,MAAMa,KAAKO,GAAYA,EAAS8F,QAAQ3F,GAAS0qD,EAAe/jD,IAAI3G,KAGlFsqD,EAAQrqC,GAAG,QAAS,CAAC5f,EAAc6e,KAC7B5U,GACJ+M,EAAQ,mBAAmBxY,EAAKJ,sCAAsC4B,MAAS6e,QAIjForC,EAAQrqC,GAAG,SAAU,CAACrH,EAAM+xC,KAC3B,GAAIrgD,EACH,OAID,IAAIsgD,EAA0B,GAU9B,GATID,IACHC,EAAkBD,EAAI5pC,WAClBiN,EAAAxB,cAGHo+B,EAAkB7F,EAAAtP,aAAamV,MAI5BA,GAA6B,WAAThyC,GAA8B,WAATA,EAC7C,OAID,MAAMiyC,EAAkBhsD,EAAKW,YAAcohC,EAAA3gC,KAAKpB,EAAKJ,KAAMmsD,GAAmB/rD,EAAKJ,KAGnF,GAAKI,EAAKW,YA4CT,GAAa,WAAToZ,EAAmB,CAGtB,MAAMkyC,EAAiBX,EAAwB3jD,IAAIqkD,GAC/CC,GACH7rC,EAAA7D,QAAQ0vC,GAIT,MAAMC,EAAgBriD,WAAW8hB,UAChC2/B,EAAwBvjD,OAAOikD,GAE/B,MAAMtoD,QAAmBinD,EAAA5qD,OAAOisD,GAEhC,GAAIvgD,EACH,OAMD,IAAIsO,EACArW,EACCmoD,EAAel7C,IAAIo7C,GACtBhyC,EAAO,WAEPA,EAAO,QACP8xC,EAAe/jD,IAAIikD,KAGpBF,EAAe9jD,OAAOgkD,GACtBhyC,EAAO,WAGRqxC,EAASrxC,EAAMiyC,IACb7lD,EAAAgmD,qBAEHb,EAAwBzjD,IAAImkD,EAAiB5rC,EAAAxD,aAAa,IAAMhT,aAAasiD,SAIzE,CAIJ,IAAInyC,EACA8xC,EAAel7C,IAAIo7C,GACtBhyC,EAAO,WAEPA,EAAO,QACP8xC,EAAe/jD,IAAIikD,IAGpBX,EAASrxC,EAAMiyC,QAhGhB,GAAa,WAATjyC,GAAqBgyC,IAAoBV,EAAkB,CAU9D,MAAMa,EAAgBriD,WAAW8hB,UAChC,MAAMjoB,QAAmBinD,EAAA5qD,OAAOisD;CAE5BvgD,IAKA/H,GACH0nD,EAAS,UAAWY,GAEpBT,EAAqB,CAACJ,EAAoBnrD,EAAMorD,EAAU5yC,KAK1D4yC,EAAS,UAAWY,KAEnB7lD,EAAAgmD,qBAIH/rC,EAAA7D,QAAQgvC,GACRA,EAAqB,CAACnrC,EAAAxD,aAAa,IAAMhT,aAAasiD,UAEtDd,EAAS,UAAWY,KAiEtB,MAAO5oD,GACRunD,EAAA5qD,OAAOC,EAAKJ,MAAMa,KAAKV,IAClBA,IAAW0L,GACd+M,EAAQ,mBAAmBxY,EAAKJ,sCAAsCwD,EAAM8e,iBAK/E,OAAO9B,EAAAxD,aAAa,KACnBnR,GAAW,EAEX8/C,EAAqBnrC,EAAA7D,QAAQgvC,sDAjL/BplD,EAAAimD,UAAA,SAA0BxsD,EAAcwrD,EAAyE5yC,GAChH,OAAO2yC,EAAoB,CAAEvrD,KAAAA,EAAMe,aAAa,GAASyqD,EAAU5yC,IAGpErS,EAAAkmD,YAAA,SAA4BzsD,EAAcwrD,EAAyE5yC,GAClH,OAAO2yC,EAAoB,CAAEvrD,KAAAA,EAAMe,aAAa,GAAQyqD,EAAU5yC,IAGtDrS,EAAAgmD,oBAAsB,oJCuBnC,MAAaG,UAAyBlsC,EAAAlE,WAQrC1U,YAAoB+kD,EAAuB70C,EAA6B,CAAE80C,cAAepnD,OAAOK,OAAO,MAAO+S,QAASpV,GAAS/E,QAAQ+E,MAAMA,KAC7I2I,QADmBtE,KAAA8kD,MAAAA,EAAuB9kD,KAAAiQ,QAAAA,EAE1CjQ,KAAKglD,0BAA4BhlD,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAEpD9X,KAAKklD,kBACLllD,KAAKmlD,YAGNhtD,WACC,OAAO6H,KAAK8kD,MAGbM;AACC,QAASplD,KAAKqlD,aAAerlD,KAAKqlD,YAAY/uD,OAAS,EAGxDgvD,+BACC,OAAOtlD,KAAKglD,0BAA0B3tC,MAG/BtX,YACPC,KAAKulD,UAAUhqD,IACTyE,KAAKwlD,QACTxlD,KAAKylD,YAAYlqD,GAEdyE,KAAKiQ,QAAQy1C,cAChB1lD,KAAKiQ,QAAQy1C,aAAa1lD,KAAK2lD,eAK1B5lD,YAAYnB,GACnBoB,KAAKwY,MAAQ5Z,EACboB,KAAKwlD,QAAS,EAGPzlD,WACP,IACC,OAAOC,KAAK5E,MAAMhD,EAAGiD,aAAa2E,KAAK8kD,OAAOrqC,YAC7C,MAAO9e,GACR,OAAOqE,KAAKiQ,QAAQ80C,eAIdhlD,UAAUT,GACjBlH,EAAG4B,SAASgG,KAAK8kD,MAAO,CAACnpD,EAAO0oD,IAEvB/kD,EADJ3D,EACaqE,KAAKiQ,QAAQ80C,cAGd/kD,KAAK5E,MAAMipD,EAAI5pC,cAIzB1a,MAAMskD,GACb,IAAIptC,EACJ,IAIC,OAHAjX,KAAKqlD,YAAc,IACnBpuC,EAAMjX,KAAKiQ,QAAQ7U,MAAQ4E,KAAKiQ,QAAQ7U,MAAMipD,EAAKrkD,KAAKqlD,aAAeO,EAAKxqD,MAAMipD,EAAKrkD,KAAKqlD,eAE9ErlD,KAAKiQ,QAAQ80C,cAC1B,MAAOppD,GACR,OAAOqE,KAAKiQ,QAAQ80C,eAIdhlD,kBAGP,MAAM8lD,EAAevrB,EAAAvO,QAAQ/rB,KAAK8kD,OAClC9kD,KAAKkkD,MAAM2B,GAAc,GAGzB7lD,KAAK8lD,qBAAqB9sD,UAAKa,EAAW,QAGnCkG,2BACP,MAAM9G,KAAEA,EAAIE,eAAEA,SAAyB+pD,EAAA/D,SAASn/C,KAAK8kD,OACrD,GAAI3rD,IAAmBF,EAAKC,cAAe,CAC1C,MAAM6sD,QAAiBnI,EAAAwF,SAASpjD,KAAK8kD,OAErC9kD,KAAKkkD,MAAM6B,GAAU,IAIfhmD,MAAM5H,EAAc6tD;AACvBhmD,KAAKgE,WAILgiD,EACHhmD,KAAKilD,UAAUgB,EAAArB,YAAYzsD,EAAM,CAACma,EAAMna,IAASA,IAAS6H,KAAK8kD,MAAQ9kD,KAAKkmD,0BAAuBrsD,EAAW8B,GAASqE,KAAKiQ,QAAQc,QAAQpV,KAE5IqE,KAAKilD,UAAUgB,EAAAtB,UAAUxsD,EAAM,IAAM6H,KAAKkmD,qBAAsBvqD,GAASqE,KAAKiQ,QAAQc,QAAQpV,MAIxFoE,qBACHC,KAAKykD,gBACRpgC,OAAOliB,aAAanC,KAAKykD,eACzBzkD,KAAKykD,cAAgB,MAItBzkD,KAAKykD,cAAgBpgC,OAAOjiB,WAAW,IAAMpC,KAAKmmD,SAAUnmD,KAAKiQ,QAAQm2C,mBAAqB,GAG/FrmD,OAAOT,GACNU,KAAKulD,UAAUc,IAOd,GANKlpB,EAAQr2B,OAAOu/C,EAAermD,KAAKwY,SACvCxY,KAAKylD,YAAYY,GAEjBrmD,KAAKglD,0BAA0BjtC,KAAK,CAAExc,OAAQ8qD,KAG3C/mD,EACH,OAAOA,EAAS+mD,KAKnBtmD,YAGC,OAFAC,KAAKsmD,eAEEtmD,KAAKwY,MAGLzY,eACFC,KAAKwlD,QACTxlD,KAAKylD,YAAYzlD,KAAKumD,YAIxBxmD,UACCC,KAAKgE,UAAW,EAChBM,MAAMwQ,WA/IRpW,EAAAmmD,cAAAA,mFCVA,IAqCK2B,EAqFAC,mDA1HL,SAAkBC,GACjBA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,aAAA,KAAA;CAJD,CAAkBhoD,EAAAgoD,cAAAhoD,EAAAgoD,YAAW,KAa7B,SAAkBC,GACjBA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,UAAA,KAAA,YALD,CAAkBjoD,EAAAioD,eAAAjoD,EAAAioD,aAAY,KAwB9B,SAAKH,GACJA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,KAAA,GAAA,OAFD,CAAKA,IAAAA,EAAK,KA2DV,MAAMI,EAIL7mD,YAAoBmZ,GAAAlZ,KAAAkZ,OAAAA,EAFZlZ,KAAA+N,IAAM,EAIdhO,KAAK8mD,GACJ,MAAM1wD,EAAS6J,KAAKkZ,OAAOlhB,MAAMgI,KAAK+N,IAAK/N,KAAK+N,IAAM84C,GAEtD,OADA7mD,KAAK+N,KAAO5X,EAAOs+B,WACZt+B,GAIT,MAAM2wD,EAAN/mD,cAESC,KAAAmd,QAAsB,GAE9BjE,aACC,OAAO6tC,EAAA9uB,SAASvuB,OAAO1J,KAAKmd,SAG7Bpd,MAAMmZ,GACLlZ,KAAKmd,QAAQlmB,KAAKiiB,IAapB,SAAS8tC,EAAiB9nD,GACzB,MAAM/I,EAAS4wD,EAAA9uB,SAASO,MAAM,GAE9B,OADAriC,EAAOyiC,cAAc15B,EAAM,GACpB/I,EAGR,SAAS8wD,EAAehG,GACvB,OAAOA,EAAO1zB,KAAK,GAAGoL,aAAa,GAGpC,SAASuuB,EAAoBtoD,GAC5B,MAAMzI,EAAS4wD,EAAA9uB,SAASO,MAAM,GAE9B,OADAriC,EAAO4iC,WAAWn6B,EAAO,GAClBzI,GAtBR,SAAKswD,GACJA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SAND,CAAKA,IAAAA,EAAQ,KAyBb,MAAMU,EAAgB,CACrB/wC,UAAW8wC,EAAoBT,EAASrwC,WACxChS,OAAQ8iD,EAAoBT,EAASriD;AACrCszB,OAAQwvB,EAAoBT,EAAS/uB,QACrCO,SAAUivB,EAAoBT,EAASxuB,UACvCvvB,MAAOw+C,EAAoBT,EAAS/9C,OACpC/K,OAAQupD,EAAoBT,EAAS9oD,SAIhC85B,EAA+B,oBAAXC,OAE1B,SAAS0vB,EAAUpO,EAAiB7+C,GACnC,QAAoB,IAATA,EACV6+C,EAAO/rB,MAAMk6B,EAAc/wC,gBACrB,GAAoB,iBAATjc,EAAmB,CACpC,MAAM+e,EAAS6tC,EAAA9uB,SAASqB,WAAWn/B,GACnC6+C,EAAO/rB,MAAMk6B,EAAc/iD,QAC3B40C,EAAO/rB,MAAM+5B,EAAiB9tC,EAAOub,aACrCukB,EAAO/rB,MAAM/T,QACP,GAAIue,GAAaC,OAAOS,SAASh+B,GAAO,CAC9C,MAAM+e,EAAS6tC,EAAA9uB,SAASsB,KAAKp/B,GAC7B6+C,EAAO/rB,MAAMk6B,EAAczvB,QAC3BshB,EAAO/rB,MAAM+5B,EAAiB9tC,EAAOub,aACrCukB,EAAO/rB,MAAM/T,QACP,GAAI/e,aAAgB4sD,EAAA9uB,SAC1B+gB,EAAO/rB,MAAMk6B,EAAclvB,UAC3B+gB,EAAO/rB,MAAM+5B,EAAiB7sD,EAAKs6B,aACnCukB,EAAO/rB,MAAM9yB,QACP,GAAIuO,MAAMC,QAAQxO,GAAO,CAC/B6+C,EAAO/rB,MAAMk6B,EAAcz+C,OAC3BswC,EAAO/rB,MAAM+5B,EAAiB7sD,EAAK7D,SAEnC,IAAK,MAAMovB,KAAMvrB,EAChBitD,EAAUpO,EAAQtzB,OAEb,CACN,MAAMxM,EAAS6tC,EAAA9uB,SAASqB,WAAWn+B,KAAKsD,UAAUtE,IAClD6+C,EAAO/rB,MAAMk6B,EAAcxpD,QAC3Bq7C,EAAO/rB,MAAM+5B,EAAiB9tC,EAAOub,aACrCukB,EAAO/rB,MAAM/T,IAIf,SAASmuC,EAAYpG,GAGpB,OAFaA,EAAO1zB,KAAK,GAAGsL,UAAU,IAGrC,KAAK4tB,EAASrwC,UAAW,OACzB,KAAKqwC,EAASriD,OAAQ,OAAO68C,EAAO1zB,KAAK05B,EAAehG,IAASxmC,WACjE,KAAKgsC,EAAS/uB,OAAQ,OAAOupB,EAAO1zB,KAAK05B,EAAehG,IAAS/nC,OACjE,KAAKutC,EAASxuB,SAAU,OAAOgpB,EAAO1zB,KAAK05B,EAAehG,IAC1D,KAAKwF,EAAS/9C,MAAO,CACpB,MAAMpS,EAAS2wD,EAAehG,GACxB9qD,EAAgB,GAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAIE,EAAQF,IAC3BD,EAAOc,KAAKowD,EAAYpG,IAGzB,OAAO9qD,EAER,KAAKswD,EAAS9oD,OAAQ,OAAOxC,KAAKC,MAAM6lD,EAAO1zB,KAAK05B,EAAehG,IAASxmC,aAS9E,MAAa6sC;AAUZvnD,YAAoBwnD,EAA2CC,EAAuBC,EAAuB,KAAzFznD,KAAAunD,SAAAA,EAA2CvnD,KAAAwnD,IAAAA,EAAuBxnD,KAAAynD,aAAAA,EAR9EznD,KAAA0nD,SAAW,IAAIznD,IACfD,KAAA2nD,eAAiB,IAAI1nD,IAKrBD,KAAA4nD,gBAAkB,IAAI3nD,IAG7BD,KAAK6nD,iBAAmB7nD,KAAKunD,SAASO,UAAUx/B,GAAOtoB,KAAK+nD,aAAaz/B,IACzEtoB,KAAKgoD,aAAa,CAAE11C,KAAI,MAGzBvS,gBAAgBkoD,EAAqBC,GACpCloD,KAAK0nD,SAAStnD,IAAI6nD,EAAaC,GAG/B9lD,WAAW,IAAMpC,KAAKmoD,qBAAqBF,GAAc,GAGlDloD,aAAaqoD,GACpB,OAAQA,EAAS91C,MAChB,KAAA,IACC,OAAOtS,KAAKqoD,KAAK,CAACD,EAAS91C,OAE5B,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACC,OAAOtS,KAAKqoD,KAAK,CAACD,EAAS91C,KAAM81C,EAAS3uC,IAAK2uC,EAASjuD,OAInD4F,KAAKuoD,EAAaC,GACzB,MAAMvP,EAAS,IAAI8N,EACnBM,EAAUpO,EAAQsP,GAClBlB,EAAUpO,EAAQuP,GAClBvoD,KAAKwoD,WAAWxP,EAAO9/B,QAGhBnZ,WAAWlB,GAClB,IACCmB,KAAKunD,SAASc,KAAKxpD,GAClB,MAAO/F,KAKFiH,aAAalB,GACpB,MAAMoiD,EAAS,IAAI2F,EAAa/nD,GAC1BypD,EAASjB,EAAYpG,GACrBsH,EAAOlB,EAAYpG,GACnB3uC,EAAOg2C,EAAO,GAEpB,OAAQh2C,GACP,KAAA,IACC,OAAOtS,KAAKyoD,UAAU,CAAEn2C,KAAAA,EAAMmH,GAAI6uC,EAAO,GAAIL,YAAaK,EAAO,GAAItxD,KAAMsxD,EAAO,GAAI1+C,IAAK2+C,IAC5F,KAAA,IACC,OAAOvoD,KAAK0oD,cAAc,CAAEp2C,KAAAA,EAAMmH,GAAI6uC,EAAO,GAAIL,YAAaK,EAAO,GAAItxD,KAAMsxD,EAAO,GAAI1+C,IAAK2+C,IAChG,KAAA,IAEA,KAAA,IACC,OAAOvoD,KAAK2oD,qBAAqB,CAAEr2C,KAAAA,EAAMmH,GAAI6uC,EAAO,MAI/CvoD,UAAU6oD,GACjB,MAAMV,EAAUloD,KAAK0nD,SAASxnD,IAAI0oD,EAAQX,aAE1C,IAAKC,EAEJ,YADAloD,KAAK6oD,sBAAsBD;CAI5B,MAAME,EAA0B,IAAIpqC,EAAAP,wBACpC,IAAIjE,EAEJ,IACCA,EAAUguC,EAAQjpD,KAAKe,KAAKwnD,IAAKoB,EAAQ5xD,KAAM4xD,EAAQh/C,IAAKk/C,EAAwB/gD,OACnF,MAAOjP,GACRohB,EAAU1hB,QAAQ0B,OAAOpB,GAG1B,MAAM2gB,EAAKmvC,EAAQnvC,GAEnBS,EAAQlhB,KAAKmB,IACZ6F,KAAKgoD,aAA2B,CAAEvuC,GAAAA,EAAItf,KAAAA,EAAMmY,KAAI,MAChDtS,KAAK2nD,eAAernD,OAAOsoD,EAAQnvC,KACjC3gB,IACEA,aAAegG,MAClBkB,KAAKgoD,aAA2B,CAC/BvuC,GAAAA,EAAItf,KAAM,CACT0E,QAAS/F,EAAI+F,QACb7H,KAAM8B,EAAI9B,KACV8L,MAAOhK,EAAIgK,MAAShK,EAAIgK,MAAMqB,MAAQrL,EAAIgK,MAAMqB,MAAM,MAAQrL,EAAIgK,WAASjJ,GACzEyY,KAAI,MAGRtS,KAAKgoD,aAA2B,CAAEvuC,GAAAA,EAAItf,KAAMrB,EAAKwZ,KAAI,MAGtDtS,KAAK2nD,eAAernD,OAAOsoD,EAAQnvC,MAGpC,MAAMsqC,EAAaprC,EAAAxD,aAAa,IAAM2zC,EAAwBxqC,UAC9Dte,KAAK2nD,eAAevnD,IAAIwoD,EAAQnvC,GAAIsqC,GAG7BhkD,cAAc6oD,GACrB,MAAMV,EAAUloD,KAAK0nD,SAASxnD,IAAI0oD,EAAQX,aAE1C,IAAKC,EAEJ,YADAloD,KAAK6oD,sBAAsBD,GAI5B,MAAMnvC,EAAKmvC,EAAQnvC,GAEbsqC,EADQmE,EAAQa,OAAO/oD,KAAKwnD,IAAKoB,EAAQ5xD,KAAM4xD,EAAQh/C,IAC1CyN,CAAMld,GAAQ6F,KAAKgoD,aAA2B,CAAEvuC,GAAAA,EAAItf,KAAAA,EAAMmY,KAAI,OAEjFtS,KAAK2nD,eAAevnD,IAAIwoD,EAAQnvC,GAAIsqC,GAG7BhkD,qBAAqB6oD,GAC5B,MAAM7E,EAAa/jD,KAAK2nD,eAAeznD,IAAI0oD,EAAQnvC,IAE/CsqC,IACHA,EAAWjvC,UACX9U,KAAK2nD,eAAernD,OAAOsoD,EAAQnvC,KAI7B1Z,sBAAsB6oD,GAC7B,IAAIhB,EAAkB5nD,KAAK4nD,gBAAgB1nD,IAAI0oD,EAAQX,aAElDL,IACJA,EAAkB,GAClB5nD,KAAK4nD,gBAAgBxnD,IAAIwoD,EAAQX,YAAaL,IAG/C,MAAM7mC,EAAQ3e,WAAW;AACxBxL,QAAQ+E,MAAM,oBAAoBitD,EAAQX,eAE1B,MAAZW,EAAQt2C,MACXtS,KAAKgoD,aAA2B,CAC/BvuC,GAAImvC,EAAQnvC,GACZtf,KAAM,CAAEnD,KAAM,kBAAmB6H,QAAS,iBAAiB+pD,EAAQX,gCAAgCjoD,KAAKynD,iBAAkB3kD,WAAOjJ,GACjIyY,KAAI,OAGJtS,KAAKynD,cAERG,EAAgB3wD,KAAK,CAAE2xD,QAAAA,EAASI,aAAcjoC,IAGvChhB,qBAAqBkoD,GAC5B,MAAMgB,EAAWjpD,KAAK4nD,gBAAgB1nD,IAAI+nD,GAE1C,GAAIgB,EAAU,CACb,IAAK,MAAML,KAAWK,EAGrB,OAFA9mD,aAAaymD,EAAQI,cAEbJ,EAAQA,QAAQt2C,MACvB,KAAA,IAA0BtS,KAAKyoD,UAAUG,EAAQA,SAAU,MAC3D,KAAA,IAA8B5oD,KAAK0oD,cAAcE,EAAQA,SAI3D5oD,KAAK4nD,gBAAgBtnD,OAAO2nD,IAIvBloD,UACFC,KAAK6nD,mBACR7nD,KAAK6nD,iBAAiB/yC,UACtB9U,KAAK6nD,iBAAmB,MAEzB7nD,KAAK2nD,eAAetoD,QAAQtC,GAAKA,EAAE+X,WACnC9U,KAAK2nD,eAAenmD,SApLtB9C,EAAA4oD,cAAAA,EAwLA,MAAa4B,EAWZnpD,YAAoBwnD,GAAAvnD,KAAAunD,SAAAA,EATZvnD,KAAA0sB,MAAe85B,EAAM2C,cACrBnpD,KAAA2nD,eAAiB,IAAIxnD,IACrBH,KAAAopD,SAAW,IAAInpD,IACfD,KAAAqpD,cAAwB,EAGfrpD,KAAAspD,iBAAmB,IAAItrC,EAAAlG,QAC/B9X,KAAAupD,gBAAkBvpD,KAAKspD,iBAAiBjyC,MAGhDrX,KAAK6nD,iBAAmB7nD,KAAKunD,SAASO,UAAUx/B,GAAOtoB,KAAKwpD,SAASlhC,IAGtEvoB,WAA+BkoD;AAC9B,MAAMwB,EAAOzpD,KAEb,MAAO,CACNf,KAAI,CAAC+uC,EAAiBpkC,EAAW8/C,IACzBD,EAAKE,eAAe1B,EAAaja,EAASpkC,EAAK8/C,GAEvDX,OAAM,CAAC1xC,EAAezN,IACd6/C,EAAKG,aAAa3B,EAAa5wC,EAAOzN,IAKxC7J,eAAekoD,EAAqBjxD,EAAc4S,EAAW8/C,EAAoBhrC,EAAAf,kBAAkBjJ,MAC1G,MAAM+E,EAAKzZ,KAAKqpD,gBAEVT,EAAuB,CAAEnvC,GAAAA,EAAInH,KADzB,IAC+B21C,YAAAA,EAAajxD,KAAAA,EAAM4S,IAAAA,GAE5D,GAAI8/C,EAAkBxhD,wBACrB,OAAO1P,QAAQ0B,OAAO4Y,EAAOlP,YAG9B,IAAImgD,EAqDJ,OAnDe,IAAIvrD,QAAQ,CAACC,EAAGG,KAC9B,GAAI8wD,EAAkBxhD,wBACrB,OAAOtP,EAAEka,EAAOlP,YAGjB,IAAIimD,EAAuD9d,EAAAvtB,wBAAwBvF,GAAKjZ,KAAK8pD,mBAC7FD,EAAqB7wD,KAAK,KACzB6wD,EAAuB,KAwBvB7pD,KAAKopD,SAAShpD,IAAIqZ,EAtBQ2uC,IACzB,OAAQA,EAAS91C,MAChB,KAAA,IACCtS,KAAKopD,SAAS9oD,OAAOmZ,GACrBhhB,EAAE2vD,EAASjuD,MACX,MAED,KAAA,IACC6F,KAAKopD,SAAS9oD,OAAOmZ,GACrB,MAAM9d,EAAQ,IAAImD,MAAMspD,EAASjuD,KAAK0E,SAChClD,EAAOmH,MAAQslD,EAASjuD,KAAK2I,MACnCnH,EAAM3E,KAAOoxD,EAASjuD,KAAKnD,KAC3B4B,EAAE+C,GACF,MAED,KAAA,IACCqE,KAAKopD,SAAS9oD,OAAOmZ,GACrB7gB,EAAEwvD,EAASjuD,SAMd6F,KAAK+pD,YAAYnB,KAGlB,MAAMtqC,EAAS,KACVurC,GACHA,EAAqBvrC,SACrBurC,EAAuB,MAEvB7pD,KAAK+pD,YAAY,CAAEtwC,GAAAA,EAAInH,KAAI,MAG5B1Z,EAAEka,EAAOlP,aAGJomD,EAA4BN,EAAkB3rC,wBAAwBO,GAC5EylC,EAAaprC,EAAAzD,mBAAmByD,EAAAxD,aAAamJ,GAAS0rC,GACtDhqD,KAAK2nD,eAAetnD,IAAI0jD,KAGXllC,QAAQ,IAAM7e,KAAK2nD,eAAernD,OAAOyjD,IAGhDhkD,aAAakoD,EAAqBjxD,EAAc4S,GACvD,MAAM6P,EAAKzZ,KAAKqpD,gBAEVT,EAAuB,CAAEnvC,GAAAA,EAAInH,KADzB;AAC+B21C,YAAAA,EAAajxD,KAAAA,EAAM4S,IAAAA,GAE5D,IAAIigD,EAAuD,KAE3D,MAAMhyC,EAAU,IAAImG,EAAAlG,QAAa,CAChC4B,mBAAoB,MACnBmwC,EAAuB9d,EAAAvtB,wBAAwBvF,GAAKjZ,KAAK8pD,oBACpC9wD,KAAK,KACzB6wD,EAAuB,KACvB7pD,KAAK2nD,eAAetnD,IAAIwX,GACxB7X,KAAK+pD,YAAYnB,MAGnBhvC,qBAAsB,KACjBiwC,GACHA,EAAqBvrC,SACrBurC,EAAuB,OAEvB7pD,KAAK2nD,eAAernD,OAAOuX,GAC3B7X,KAAK+pD,YAAY,CAAEtwC,GAAAA,EAAInH,KAAI,UAQ9B,OAFAtS,KAAKopD,SAAShpD,IAAIqZ,EADSxC,GAAsBY,EAAQE,KAAMd,EAA8B9c,OAGtF0d,EAAQR,MAGRtX,YAAY6oD,GACnB,OAAQA,EAAQt2C,MACf,KAAA,IACA,KAAA,IACC,OAAOtS,KAAKqoD,KAAK,CAACO,EAAQt2C,KAAMs2C,EAAQnvC,GAAImvC,EAAQX,YAAaW,EAAQ5xD,MAAO4xD,EAAQh/C,KAEzF,KAAA,IACA,KAAA,IACC,OAAO5J,KAAKqoD,KAAK,CAACO,EAAQt2C,KAAMs2C,EAAQnvC,MAInC1Z,KAAKuoD,EAAaC,GACzB,MAAMvP,EAAS,IAAI8N,EACnBM,EAAUpO,EAAQsP,GAClBlB,EAAUpO,EAAQuP,GAClBvoD,KAAKwoD,WAAWxP,EAAO9/B,QAGhBnZ,WAAWlB,GAClB,IACCmB,KAAKunD,SAASc,KAAKxpD,GAClB,MAAO/F,KAKFiH,SAASlB,GAChB,MAAMoiD,EAAS,IAAI2F,EAAa/nD,GAC1BypD,EAASjB,EAAYpG,GACrBsH,EAAOlB,EAAYpG,GAGzB,OAF2BqH,EAAO,IAGjC,KAAA,IACC,OAAOtoD,KAAKiqD,WAAW,CAAE33C,KAAMg2C,EAAO,KAEvC,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACC,OAAOtoD,KAAKiqD,WAAW,CAAE33C,KAAMg2C,EAAO,GAAI7uC,GAAI6uC,EAAO,GAAInuD,KAAMouD,KAI1DxoD,WAAWqoD,GAClB,GAAiB,MAAbA,EAAS91C,KAGZ,OAFAtS,KAAK0sB,MAAQ85B,EAAM0D,UACnBlqD,KAAKspD,iBAAiBvxC,OAIvB,MAAM+I,EAAU9gB,KAAKopD,SAASlpD,IAAIkoD,EAAS3uC,IAEvCqH,GACHA,EAAQsnC,GAIFroD;AACP,OAAIC,KAAK0sB,QAAU85B,EAAM0D,KACjB1xD,QAAQyB,UAER+jB,EAAA5G,MAAM+C,UAAUna,KAAKupD,iBAI9BxpD,UACKC,KAAK6nD,mBACR7nD,KAAK6nD,iBAAiB/yC,UACtB9U,KAAK6nD,iBAAmB,MAEzB7nD,KAAK2nD,eAAetoD,QAAQoF,GAAKA,EAAEqQ,WACnC9U,KAAK2nD,eAAenmD,SAvMtB9C,EAAAwqD,cAAAA,EA6NAxqD,EAAAyrD,UAAA,MAcCpqD,YAAYqqD,GAZJpqD,KAAA0nD,SAAW,IAAIznD,IACfD,KAAAqqD,aAAe,IAAIlqD,IAEVH,KAAAsqD,wBAA0B,IAAItsC,EAAAlG,QACtC9X,KAAAuqD,uBAAsDvqD,KAAKsqD,wBAAwBjzC,MAS3F+yC,EAAmB,EAAG7C,SAAAA,EAAUiD,sBAAAA,MACRxsC,EAAA5G,MAAM5L,KAAK+7C,EAASO,UAE3C2C,CAAeniC,IACd,MACMk/B,EAAMH,EADG,IAAIT,EAAat+B,IAG1BoiC,EAAgB,IAAIpD,EAAcC,EAAUC,GAC5CmD,EAAgB,IAAIzB,EAAc3B,GAExCvnD,KAAK0nD,SAASroD,QAAQ,CAAC6oD,EAASlxD,IAAS0zD,EAAcE,gBAAgB5zD,EAAMkxD,IAE7E,MAAM2C,EAAmC,CAAEH,cAAAA,EAAeC,cAAAA,EAAenD,IAAAA,GACzExnD,KAAKqqD,aAAahqD,IAAIwqD,GACtB7qD,KAAKsqD,wBAAwBvyC,KAAK8yC,GAElCL,EAAsB,KACrBE,EAAc51C,UACd61C,EAAc71C,UACd9U,KAAKqqD,aAAa/pD,OAAOuqD,SA1B7BC,kBACC,MAAM30D,EAAiC,GAEvC,OADA6J,KAAKqqD,aAAahrD,QAAQmoD,GAAOrxD,EAAOc,KAAKuwD,IACtCrxD,EA6BR4J,WAA+BkoD,EAAqB8C,GACnD,MAAMtB,EAAOzpD,KAEb,MAAO,CACNf,KAAI,CAAC+uC,EAAiBpkC,EAAW8/C,IAIzBsB,EAHgBD,EAAOE,UAAUxB,EAAMzb,EAASpkC,GACrD5Q,KAAK6xD,GAAeA,EAAoCF,cAAcO,WAAWjD,KAGjFhpD,KAAK+uC,EAASpkC,EAAK8/C;AAEtBX,OAAM,CAAC1xC,EAAezN,IAIdohD,EAHgBD,EAAOI,WAAW1B,EAAMpyC,EAAOzN,GACpD5Q,KAAK6xD,GAAeA,EAAoCF,cAAcO,WAAWjD,KAGjFc,OAAO1xC,EAAOzN,IAKnB7J,gBAAgBkoD,EAAqBC,GACpCloD,KAAK0nD,SAAStnD,IAAI6nD,EAAaC,GAE/BloD,KAAKqqD,aAAahrD,QAAQwrD,IACzBA,EAAWH,cAAcE,gBAAgB3C,EAAaC,KAIxDnoD,UACCC,KAAK0nD,SAASlmD,QACdxB,KAAKqqD,aAAa7oD,QAClBxB,KAAKsqD,wBAAwBx1C,YAuC/B,SAAgBk2C,EAAsC9wC,GACrD,MAAO,CACNjb,KAAI,CAAC+uC,EAAiBpkC,EAAW8/C,IACzBxvC,EAAQlhB,KAAKP,GAAKA,EAAEwG,KAAQ+uC,EAASpkC,EAAK8/C,IAGlD3pD,OAAUsX,EAAezN,GACxB,MAAMwhD,EAAQ,IAAIptC,EAAAZ,MAElB,OADAlD,EAAQlhB,KAAKP,GAAK2yD,EAAM5tC,MAAQ/kB,EAAEswD,OAAO1xC,EAAOzN,IACzCwhD,EAAM/zC,QArChB3Y,EAAA2sD,UAAA,MAKCtrD,YAAYwnD,EAAmCC,GAC9C,MAAMxO,EAAS,IAAI8N,EACnBM,EAAUpO,EAAQwO,GAClBD,EAASc,KAAKrP,EAAO9/B,QAErBlZ,KAAK2qD,cAAgB,IAAIzB,EAAc3B,GACvCvnD,KAAK0qD,cAAgB,IAAIpD,EAAcC,EAAUC,GAGlDznD,WAA+BkoD,GAC9B,OAAOjoD,KAAK2qD,cAAcO,WAAWjD,GAGtCloD,gBAAgBkoD,EAAqBC,GACpCloD,KAAK0qD,cAAcE,gBAAgB3C,EAAaC,GAGjDnoD,UACCC,KAAK2qD,cAAc71C,UACnB9U,KAAK0qD,cAAc51C,YAIrBpW,EAAAssD,kBAAAA,EAcAtsD,EAAA4sD,mBAAA,SAAuDpD,GACtD,IAAIqD,GAAU,EAEd,MAAO,CACNtsD,KAAI,CAAI+uC,EAAiBpkC,EAAW8/C,IAC/B6B,EACIrD,EAAQjpD,KAAK+uC,EAASpkC,EAAK8/C,GAG5B3d,EAAAlsB,QAAQ,GACb7mB,KAAK,IAAMuyD,GAAU,GACrBvyD,KAAK,IAAMkvD,EAAQjpD,KAAQ+uC,EAASpkC,EAAK8/C,IAE5C3pD,OAAUsX,EAAezN,GACxB,GAAI2hD,EACH,OAAOrD,EAAQa,OAAU1xC,EAAOzN,GAGjC,MAAMwhD,EAAQ,IAAIptC,EAAAZ;CAMlB,OAJA2uB,EAAAlsB,QAAQ,GACN7mB,KAAK,IAAMuyD,GAAU,GACrBvyD,KAAK,IAAMoyD,EAAM5tC,MAAQ0qC,EAAQa,OAAU1xC,EAAOzN,IAE7CwhD,EAAM/zC,SAKhB3Y,EAAA8sD,aAAA,MAECzrD,YAAoBQ,GAAAP,KAAAO,GAAAA,EAEpBR,UAAU0rD,GACT,OAAOzrD,KAAK0rD,MAAMD,GAGnB1rD,WAAW0rD,GACV,OAAOzrD,KAAK0rD,MAAMD,GAGX1rD,YAAY0rD,GACnB,IAAK,MAAMZ,KAAcY,EAAIX,YAC5B,SAAUtyD,QAAQyB,QAAQ+F,KAAKO,GAAGsqD,EAAWrD,MAC5C,OAAOhvD,QAAQyB,QAAQ4wD,GAKzB,aADM7sC,EAAA5G,MAAM+C,UAAUsxC,EAAIlB,8BACbvqD,KAAK0rD,MAAMD,sIC1yB1B,IAAIE,EAA+B,KACnC,SAASC,IAIR,OAHKD,IACJA,EAAc5E,EAAA9uB,SAASO,MAAM,IAEvBmzB,EAGR,MAAaE,EASZ9rD,cACCC,KAAK8rD,QAAU,GACf9rD,KAAK+rD,aAAe,EANrBt3B,iBACC,OAAOz0B,KAAK+rD,aAQNhsD,YAAYisD,GAClBhsD,KAAK8rD,QAAQ70D,KAAK+0D,GAClBhsD,KAAK+rD,cAAgBC,EAAKv3B,WAGpB10B,KAAKksD,GACX,OAAOjsD,KAAKksD,MAAMD,GAAW,GAGvBlsD,KAAKksD,GACX,OAAOjsD,KAAKksD,MAAMD,GAAW,GAGtBlsD,MAAMksD,EAAmBE,GAEhC,GAAkB,IAAdF,EACH,OAAOL,IAGR,GAAIK,EAAYjsD,KAAK+rD,aACpB,MAAM,IAAIjtD,MAAM,8BAGjB,GAAIkB,KAAK8rD,QAAQ,GAAGr3B,aAAew3B,EAAW,CAE7C,MAAM91D,EAAS6J,KAAK8rD,QAAQ,GAK5B,OAJIK,IACHnsD,KAAK8rD,QAAQ9vC,QACbhc,KAAK+rD,cAAgBE,GAEf91D;AAGR,GAAI6J,KAAK8rD,QAAQ,GAAGr3B,WAAaw3B,EAAW,CAE3C,MAAM91D,EAAS6J,KAAK8rD,QAAQ,GAAG9zD,MAAM,EAAGi0D,GAKxC,OAJIE,IACHnsD,KAAK8rD,QAAQ,GAAK9rD,KAAK8rD,QAAQ,GAAG9zD,MAAMi0D,GACxCjsD,KAAK+rD,cAAgBE,GAEf91D,EAGR,IAAIA,EAAS4wD,EAAA9uB,SAASO,MAAMyzB,GACxBG,EAAe,EACfC,EAAa,EACjB,KAAOJ,EAAY,GAAG,CACrB,MAAM3+B,EAAQttB,KAAK8rD,QAAQO,GAC3B,GAAI/+B,EAAMmH,WAAaw3B,EAAW,CAEjC,MAAMK,EAAYh/B,EAAMt1B,MAAM,EAAGi0D,GACjC91D,EAAOiK,IAAIksD,EAAWF,GACtBA,GAAgBH,EAEZE,IACHnsD,KAAK8rD,QAAQO,GAAc/+B,EAAMt1B,MAAMi0D,GACvCjsD,KAAK+rD,cAAgBE,GAGtBA,GAAaA,OAGb91D,EAAOiK,IAAIktB,EAAO8+B,GAClBA,GAAgB9+B,EAAMmH,WAElB03B,GACHnsD,KAAK8rD,QAAQ9vC,QACbhc,KAAK+rD,cAAgBz+B,EAAMmH,YAE3B43B,IAGDJ,GAAa3+B,EAAMmH,WAGrB,OAAOt+B,GAIT,IAAWo2D,EA7FX7tD,EAAAmtD,YAAAA,EA6FA,SAAWU,GACVA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aAND,CAAWA,IAAAA,EAAmB,KAS9B,SAAkBC,GACjBA,EAAAA,EAAA,aAAA,IAAA,eAIAA,EAAAA,EAAA,gBAAA,KAAA,kBAIAA,EAAAA,EAAA,uBAAA,KAAA,yBAIAA,EAAAA,EAAA,cAAA,KAAA,gBAIAA,EAAAA,EAAA,qBAAA,KAAA,uBAIAA,EAAAA,EAAA,sBAAA,OAAA,wBAIAA,EAAAA,EAAA,2BAAA,KAAA;CAzBD,CAAkB9tD,EAAA8tD,oBAAA9tD,EAAA8tD,kBAAiB,KA4BnC,MAAMC,EAIL1sD,YACiBuS,EACAmH,EACAizC,EACAvyD,GAHA6F,KAAAsS,KAAAA,EACAtS,KAAAyZ,GAAAA,EACAzZ,KAAA0sD,IAAAA,EACA1sD,KAAA7F,KAAAA,EAEhB6F,KAAK2sD,YAAc,EAGpBztD,WACC,OAAOc,KAAK7F,KAAKs6B,YAInB,MAAMm4B,UAAuBj0C,EAAAlE,WAkB5B1U,YAAY8sD,GACXvoD,QAZgBtE,KAAA8sD,WAAa9sD,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACjC9X,KAAA8nD,UAAoC9nD,KAAK8sD,WAAWz1C,MAEnDrX,KAAA+sD,OAAS,CACzBC,UAAU,EACVC,QAAO,GACPC,YAAW,EACXzzC,GAAI,EACJizC,IAAK,GAKL1sD,KAAKmtD,QAAUN,EACf7sD,KAAKsV,aAAc,EACnBtV,KAAKotD,cAAgB,IAAIvB,EACzB7rD,KAAKilD,UAAUjlD,KAAKmtD,QAAQE,OAAOlzD,GAAQ6F,KAAKstD,YAAYnzD,KAC5D6F,KAAKutD,aAAer2D,KAAKC,MAGnB4I,YAAY5F,GAClB,GAAKA,GAA4B,IAApBA,EAAKs6B,WAQlB,IAJAz0B,KAAKutD,aAAer2D,KAAKC,MAEzB6I,KAAKotD,cAAcE,YAAYnzD,GAExB6F,KAAKotD,cAAc34B,YAAcz0B,KAAK+sD,OAAOE,SAAS,CAE5D,MAAMjB,EAAOhsD,KAAKotD,cAAc7/B,KAAKvtB,KAAK+sD,OAAOE,SAEjD,GAAIjtD,KAAK+sD,OAAOC,SAIfhtD,KAAK+sD,OAAOC,UAAW,EACvBhtD,KAAK+sD,OAAOE,QAAUjB,EAAKrzB,aAAa,GACxC34B,KAAK+sD,OAAOG,YAAclB,EAAKnzB,UAAU,GACzC74B,KAAK+sD,OAAOtzC,GAAKuyC,EAAKrzB,aAAa,GACnC34B,KAAK+sD,OAAOL,IAAMV,EAAKrzB,aAAa,OAC9B,CAEN,MAAMu0B,EAAcltD,KAAK+sD,OAAOG,YAC1BzzC,EAAKzZ,KAAK+sD,OAAOtzC,GACjBizC,EAAM1sD,KAAK+sD,OAAOL;CAWxB,GARA1sD,KAAK+sD,OAAOC,UAAW,EACvBhtD,KAAK+sD,OAAOE,QAAO,GACnBjtD,KAAK+sD,OAAOG,YAAW,EACvBltD,KAAK+sD,OAAOtzC,GAAK,EACjBzZ,KAAK+sD,OAAOL,IAAM,EAElB1sD,KAAK8sD,WAAW/0C,KAAK,IAAI00C,EAAgBS,EAAazzC,EAAIizC,EAAKV,IAE3DhsD,KAAKsV,YAER,QAMGvV,mBACN,OAAOC,KAAKotD,cAAc7/B,KAAKvtB,KAAKotD,cAAc34B,YAG5C10B,UACNC,KAAKsV,aAAc,EACnBhR,MAAMwQ,WAIR,MAAM04C,EAQLztD,YAAY8sD,GACX7sD,KAAKsV,aAAc,EACnBtV,KAAKmtD,QAAUN,EACf7sD,KAAKq3B,MAAQ,GACbr3B,KAAK+rD,aAAe,EACpB/rD,KAAKytD,cAAgB,EAGf1tD,UACNC,KAAKqZ,QACLrZ,KAAKsV,aAAc,EAGbvV,QAENC,KAAK0tD,YAGC3tD,MAAMuoB,GACZ,GAAItoB,KAAKsV,YAGR,OAEDgT,EAAIqkC,YAAcz1D,KAAKC,MACvB6I,KAAKytD,cAAgBv2D,KAAKC,MAC1B,MAAMmxD,EAASvB,EAAA9uB,SAASO,MAAK,IAC7B8vB,EAAOvvB,WAAWzQ,EAAIhW,KAAM,GAC5Bg2C,EAAO1vB,cAActQ,EAAI7O,GAAI,GAC7B6uC,EAAO1vB,cAActQ,EAAIokC,IAAK,GAC9BpE,EAAO1vB,cAActQ,EAAInuB,KAAKs6B,WAAY,GAC1Cz0B,KAAK2tD,WAAWrF,EAAQhgC,EAAInuB,MAGrB4F,WAAW6tD,EAAgBrF,GAClC,MAAMsF,EAAiC,IAAtB7tD,KAAK+rD,aAGtB,OAFA/rD,KAAKq3B,MAAMpgC,KAAK22D,EAAMrF,GACtBvoD,KAAK+rD,cAAgB6B,EAAKn5B,WAAa8zB,EAAK9zB,WACrCo5B,EAGA9tD,cACP,MAAMyrB,EAAMu7B,EAAA9uB,SAASvuB,OAAO1J,KAAKq3B,MAAOr3B,KAAK+rD,cAG7C,OAFA/rD,KAAKq3B,MAAM/gC,OAAS,EACpB0J,KAAK+rD,aAAe,EACbvgC,EAGAzrB,WAAWuoD,EAAkBnuD;AAChC6F,KAAK8tD,WAAWxF,EAAQnuD,IAC3BgrB,EAAS2B,aAAa,KACrB9mB,KAAK0tD,cAKA3tD,YACmB,IAAtBC,KAAK+rD,cAGT/rD,KAAKmtD,QAAQlgC,MAAMjtB,KAAK+tD,gBAqB1B,MAAaC,UAAiBr1C,EAAAlE,WAY7B1U,YAAY8sD,GACXvoD,QAPgBtE,KAAA8sD,WAAa,IAAI9uC,EAAAlG,QACzB9X,KAAA8nD,UAA6B9nD,KAAK8sD,WAAWz1C,MAErCrX,KAAAiuD,SAAW,IAAIjwC,EAAAlG,QACvB9X,KAAAkuD,QAAuBluD,KAAKiuD,SAAS52C,MAI7CrX,KAAKmtD,QAAUN,EACf7sD,KAAKmuD,cAAgBnuD,KAAKilD,UAAU,IAAIuI,EAAextD,KAAKmtD,UAC5DntD,KAAKouD,cAAgBpuD,KAAKilD,UAAU,IAAI2H,EAAe5sD,KAAKmtD,UAE5DntD,KAAKilD,UAAUjlD,KAAKouD,cAActG,UAAWx/B,IAChC,IAARA,EAAIhW,MACPtS,KAAK8sD,WAAW/0C,KAAKuQ,EAAInuB,SAI3B6F,KAAKilD,UAAUjlD,KAAKmtD,QAAQe,QAAQ,IAAMluD,KAAKiuD,SAASl2C,SAGzDhY,YACC,OAAOC,KAAKmtD,QAGbptD,kBAIAA,KAAKmZ,GACJlZ,KAAKmuD,cAAclhC,MAAM,IAAIw/B,EAAe,EAA8B,EAAG,EAAGvzC,KApClFxa,EAAAsvD,SAAAA,EAwCA,MAAaK,UAAkCC,EAAAjD,UAQ9CtrD,YAAoBwnD,EAAyC9tC,GAC5DnV,MAAMijD,EAAU9tC,GADGzZ,KAAAunD,SAAAA,EANpBxnD,kBAAqC8sD,EAAiBpzC,GACrD,OAAO,IAAI40C,EAAO,IAAIL,EAASnB,GAASpzC,GAGzCy0C,cAA6B,OAAOluD,KAAKunD,SAAS2G,QAMlDnuD,UACCuE,MAAMwQ,UACN,MAAM+3C,EAAS7sD,KAAKunD,SAASgH,YAC7BvuD,KAAKunD,SAASiH,iBACdxuD,KAAKunD,SAASzyC,UACd+3C,EAAO7/C,OAjBTtO,EAAA2vD,OAAAA,EAwBA,MAAaI;AAQZ1uD,cAJQC,KAAA0uD,eAAgB,EAChB1uD,KAAA2uD,uBAAwB,EACxB3uD,KAAA4uD,kBAAyB,GAGhC5uD,KAAKke,SAAW,IAAIF,EAAAlG,QAAW,CAC9B4B,mBAAoB,KACnB1Z,KAAK0uD,eAAgB,EAIrB7zD,EAAQse,SAAS,IAAMnZ,KAAK6uD,qBAE7Bj1C,qBAAsB,KACrB5Z,KAAK0uD,eAAgB,KAIvB1uD,KAAKqX,MAAQrX,KAAKke,SAAS7G,MAGpBtX,mBACP,IAAIC,KAAK2uD,sBAAT,CAIA,IADA3uD,KAAK2uD,uBAAwB,EACtB3uD,KAAK0uD,eAAiB1uD,KAAK4uD,kBAAkBt4D,OAAS,GAC5D0J,KAAKke,SAASnG,KAAK/X,KAAK4uD,kBAAkB5yC,SAE3Chc,KAAK2uD,uBAAwB,GAGvB5uD,KAAKsX,GACPrX,KAAK0uD,cACJ1uD,KAAK4uD,kBAAkBt4D,OAAS,EACnC0J,KAAK4uD,kBAAkB33D,KAAKogB,GAE5BrX,KAAKke,SAASnG,KAAKV,GAGpBrX,KAAK4uD,kBAAkB33D,KAAKogB,GAIvBtX,cACNC,KAAK4uD,kBAAoB,IAjD3BlwD,EAAA+vD,gBAAAA,EAqDA,MAAMK,EAIL/uD,YAAY5F,GACX6F,KAAK7F,KAAOA,EACZ6F,KAAKgM,KAAO,MAId,MAAMgW,EAKLjiB,cACCC,KAAKuW,OAAS,KACdvW,KAAKwW,MAAQ,KAGPzW,OACN,OAAKC,KAAKuW,OAGHvW,KAAKuW,OAAOpc,KAFX,KAKF4F,UACN,IAAI5J,EAAc,GAAI44D,EAAY,EAC9B1iD,EAAKrM,KAAKuW,OACd,KAAOlK,GACNlW,EAAO44D,KAAe1iD,EAAGlS,KACzBkS,EAAKA,EAAGL,KAET,OAAO7V,EAGD4J,MACN,GAAKC,KAAKuW,OAGV,OAAIvW,KAAKuW,SAAWvW,KAAKwW,OACxBxW,KAAKuW,OAAS;KACdvW,KAAKwW,MAAQ,YAGdxW,KAAKuW,OAASvW,KAAKuW,OAAOvK,MAGpBjM,KAAKkU,GACX,MAAMxU,EAAU,IAAIqvD,EAAa76C,GACjC,IAAKjU,KAAKuW,OAGT,OAFAvW,KAAKuW,OAAS9W,OACdO,KAAKwW,MAAQ/W,GAGdO,KAAKwW,MAAOxK,KAAOvM,EACnBO,KAAKwW,MAAQ/W,GAQff,EAAAswD,mBAAA,MAyCCjvD,YAAY8sD,EAAiBoC,EAAgC,MAnB5CjvD,KAAAkvD,kBAAoB,IAAIT,EAChCzuD,KAAAmvD,iBAAoCnvD,KAAKkvD,kBAAkB73C,MAEnDrX,KAAA8sD,WAAa,IAAI2B,EACzBzuD,KAAA8nD,UAA6B9nD,KAAK8sD,WAAWz1C,MAErCrX,KAAAiuD,SAAW,IAAIQ,EACvBzuD,KAAAkuD,QAAuBluD,KAAKiuD,SAAS52C,MAE7BrX,KAAAovD,eAAiB,IAAIX,EAC7BzuD,KAAAqvD,cAA6BrvD,KAAKovD,eAAe/3C,MAEzCrX,KAAAsvD,iBAAmB,IAAIb,EAC/BzuD,KAAAuvD,gBAA+BvvD,KAAKsvD,iBAAiBj4C,MAO7DrX,KAAKwvD,iBAAkB,EACvBxvD,KAAKyvD,kBAAoB,IAAIztC,EAC7BhiB,KAAK0vD,eAAiB,EACtB1vD,KAAK2vD,eAAiB,EACtB3vD,KAAK4vD,oBAAsB,KAE3B5vD,KAAK6vD,eAAiB,EACtB7vD,KAAK8vD,eAAiB,EACtB9vD,KAAK+vD,qBAAuB,EAC5B/vD,KAAKgwD,oBAAsB,KAE3BhwD,KAAKiwD,0BAA4B,KACjCjwD,KAAKkwD,0BAA4B,KAEjClwD,KAAKmwD,mBAAqB,GAC1BnwD,KAAKmtD,QAAUN,EACf7sD,KAAKmuD,cAAgB,IAAIX,EAAextD,KAAKmtD,SAC7CntD,KAAKmwD,mBAAmBl5D,KAAK+I,KAAKmuD;AAClCnuD,KAAKouD,cAAgB,IAAIxB,EAAe5sD,KAAKmtD,SAC7CntD,KAAKmwD,mBAAmBl5D,KAAK+I,KAAKouD,eAClCpuD,KAAKmwD,mBAAmBl5D,KAAK+I,KAAKouD,cAActG,UAAUx/B,GAAOtoB,KAAKowD,gBAAgB9nC,KACtFtoB,KAAKmwD,mBAAmBl5D,KAAK+I,KAAKmtD,QAAQe,QAAQ,IAAMluD,KAAKovD,eAAer3C,SACxEk3C,GACHjvD,KAAKouD,cAAcd,YAAY2B,GAGhCjvD,KAAKqwD,sBACLrwD,KAAKswD,sBAhCNC,0BACC,OAAOvwD,KAAK0vD,eAAiB1vD,KAAK2vD,eAkCnC5vD,UACKC,KAAK4vD,sBACRztD,aAAanC,KAAK4vD,qBAClB5vD,KAAK4vD,oBAAsB,MAExB5vD,KAAKgwD,sBACR7tD,aAAanC,KAAKgwD,qBAClBhwD,KAAKgwD,oBAAsB,MAExBhwD,KAAKiwD,4BACR9tD,aAAanC,KAAKiwD,2BAClBjwD,KAAKiwD,0BAA4B,MAE9BjwD,KAAKkwD,4BACR/tD,aAAanC,KAAKkwD,2BAClBlwD,KAAKkwD,0BAA4B,MAElClwD,KAAKmwD,mBAAqBx3C,EAAA7D,QAAQ9U,KAAKmwD,oBAGxCpwD,iBACC,MAAMuoB,EAAM,IAAImkC,EAAe,EAAiC,EAAG,EAAGb,KACtE5rD,KAAKmuD,cAAclhC,MAAM3E,GACzBtoB,KAAKmuD,cAAc90C;AAGZtZ,sBACP,GAAIC,KAAKiwD,0BAER,OAGD,MAAMO,EAA2Bt5D,KAAKC,MAAQ6I,KAAKmuD,cAAcV,cACjE,GAAI+C,GAAwB,IAAqC,CAIhE,MAAMloC,EAAM,IAAImkC,EAAe,EAAgC,EAAG,EAAGb,KAGrE,OAFA5rD,KAAKmuD,cAAclhC,MAAM3E,QACzBtoB,KAAKqwD,sBAINrwD,KAAKiwD,0BAA4B7tD,WAAW,KAC3CpC,KAAKiwD,0BAA4B,KACjCjwD,KAAKqwD,uBACH,IAAkCG,EAA2B,GAGzDzwD,sBACP,GAAIC,KAAKkwD,0BAER,OAGD,MAAMO,EAA2Bv5D,KAAKC,MAAQ6I,KAAKouD,cAAcb,aAC7DkD,GAAwB,IAE3BzwD,KAAKsvD,iBAAiBv3C,UAAKle,GAI5BmG,KAAKkwD,0BAA4B9tD,WAAW,KAC3CpC,KAAKkwD,0BAA4B,KACjClwD,KAAKswD,uBACH,IAAyCG,EAA2B,GAGjE1wD,YACN,OAAOC,KAAKmtD,QAGNptD,wBAAwB8sD,EAAiB6D,GAC/C1wD,KAAKwvD,iBAAkB,EAEvBxvD,KAAKmwD,mBAAqBx3C,EAAA7D,QAAQ9U,KAAKmwD,oBACvCnwD,KAAKkvD,kBAAkByB,cACvB3wD,KAAKovD,eAAeuB,cACpB3wD,KAAKsvD,iBAAiBqB,cACtB3wD,KAAKmtD,QAAQr4C,UAEb9U,KAAKmtD,QAAUN,EACf7sD,KAAKmuD,cAAgB,IAAIX,EAAextD,KAAKmtD,SAC7CntD,KAAKmwD,mBAAmBl5D,KAAK+I,KAAKmuD;AAClCnuD,KAAKouD,cAAgB,IAAIxB,EAAe5sD,KAAKmtD,SAC7CntD,KAAKmwD,mBAAmBl5D,KAAK+I,KAAKouD,eAClCpuD,KAAKmwD,mBAAmBl5D,KAAK+I,KAAKouD,cAActG,UAAUx/B,GAAOtoB,KAAKowD,gBAAgB9nC,KACtFtoB,KAAKmwD,mBAAmBl5D,KAAK+I,KAAKmtD,QAAQe,QAAQ,IAAMluD,KAAKovD,eAAer3C,SAC5E/X,KAAKouD,cAAcd,YAAYoD,GAGzB3wD,wBACNC,KAAKwvD,iBAAkB,EAGvB,MAAMoB,EAAS5wD,KAAKyvD,kBAAkBpzC,UACtC,IAAK,IAAIjmB,EAAI,EAAGC,EAAMu6D,EAAOt6D,OAAQF,EAAIC,EAAKD,IAC7C4J,KAAKmuD,cAAclhC,MAAM2jC,EAAOx6D,IAEjC4J,KAAK6wD,gBAEL7wD,KAAKqwD,sBACLrwD,KAAKswD,sBAGCvwD,mBACNC,KAAKiuD,SAASl2C,OAGPhY,gBAAgBuoB,GACvB,GAAIA,EAAIokC,IAAM1sD,KAAK2vD,eAElB,IADA3vD,KAAK2vD,eAAiBrnC,EAAIokC,MACvB,CACF,MAAMttD,EAAQY,KAAKyvD,kBAAkBqB,OACrC,KAAI1xD,GAASA,EAAMqa,IAAM6O,EAAIokC,KAI5B,MAFA1sD,KAAKyvD,kBAAkBjpD,MAOd,IAAR8hB,EAAIhW,KACHgW,EAAI7O,GAAKzZ,KAAK6vD,iBACbvnC,EAAI7O,KAAOzZ,KAAK6vD,eAAiB,GACpCj5D,QAAQ+E,MAAM,qCAAqCqE,KAAK6vD,4CAA4CvnC,EAAI7O,MAEzGzZ,KAAK6vD,eAAiBvnC,EAAI7O,GAC1BzZ,KAAK+vD,qBAAuB74D,KAAKC,MACjC6I,KAAK+wD;AACL/wD,KAAK8sD,WAAW/0C,KAAKuQ,EAAInuB,OAER,IAARmuB,EAAIhW,KACdtS,KAAKkvD,kBAAkBn3C,KAAKuQ,EAAInuB,MACd,IAARmuB,EAAIhW,MACdtS,KAAKiuD,SAASl2C,OAIhBhY,mBACC,OAAOC,KAAKouD,cAAc4C,mBAG3BjxD,QACCC,KAAKmuD,cAAc90C,QAGpBtZ,KAAKmZ,GACJ,MAAMmO,IAASrnB,KAAK0vD,eACpB1vD,KAAK8vD,eAAiB9vD,KAAK6vD,eAC3B,MAAMvnC,EAAM,IAAImkC,EAAe,EAA8BplC,EAAMrnB,KAAK8vD,eAAgB52C,GACxFlZ,KAAKyvD,kBAAkBx4D,KAAKqxB,GACvBtoB,KAAKwvD,kBACTxvD,KAAKmuD,cAAclhC,MAAM3E,GACzBtoB,KAAK6wD,iBAQP9wD,YAAYmZ,GACX,MAAMoP,EAAM,IAAImkC,EAAe,EAA8B,EAAG,EAAGvzC,GACnElZ,KAAKmuD,cAAclhC,MAAM3E,GAGlBvoB,gBACP,GAAIC,KAAK6vD,gBAAkB7vD,KAAK8vD,eAE/B,OAGD,GAAI9vD,KAAKgwD,oBAER,OAGD,MAAMS,EAA2Bv5D,KAAKC,MAAQ6I,KAAK+vD,qBAC/CU,GAAwB,IAI3BzwD,KAAKixD,WAINjxD,KAAKgwD,oBAAsB5tD,WAAW,KACrCpC,KAAKgwD,oBAAsB,KAC3BhwD,KAAK+wD,iBACH,IAAoCN,EAA2B,GAG3D1wD,gBACP,GAAIC,KAAK0vD,gBAAkB1vD,KAAK2vD,eAE/B,OAGD,GAAI3vD,KAAK4vD,oBAER,OAGD,MAAMsB,EAA0BlxD,KAAKyvD,kBAAkBqB,OACjDK,EAAmCj6D,KAAKC,MAAQ+5D,EAAwBvE,YAC1EwE,GAAgC,IAEnCnxD,KAAKsvD,iBAAiBv3C,UAAKle,GAI5BmG,KAAK4vD,oBAAsBxtD,WAAW;AACrCpC,KAAK4vD,oBAAsB,KAC3B5vD,KAAK6wD,iBACH,IAA2CM,EAAmC,GAG1EpxD,WACP,GAAIC,KAAK6vD,gBAAkB7vD,KAAK8vD,eAE/B,OAGD9vD,KAAK8vD,eAAiB9vD,KAAK6vD,eAC3B,MAAMvnC,EAAM,IAAImkC,EAAe,EAA0B,EAAGzsD,KAAK8vD,eAAgBlE,KACjF5rD,KAAKmuD,cAAclhC,MAAM3E,6EC3rB3B,SAAS8oC,EAAgBp6D,GAExB,MAAmB,MAAZA,EAAK,IAA0B,MAAZA,EAAK,IAAc4iC,EAAAzK,mBAAmBn4B,EAAKsX,WAAW,qDA7FjF5P,EAAA2yD,sBAAA,SAAsCC,EAAkBrhD,GACvD,MAAM6Q,EAAUwwC,EACVC,EAAqBthD,GAAWA,EAAQshD,mBAIxCC,EAAsB,IAAIvxD,IAChC,IAAK,MAAM1B,KAAOuiB,EACbswC,EAAgB7yD,IACnBizD,EAAoBpxD,IAAI7B,EAAKyf,EAAA5G,MAAM8B,OAAO4H,EAAQviB,IAAwB,IAI5E,OAAO,IAAI,MAEVwB,OAAUkZ,EAAY5B,GACrB,MAAMo6C,EAAYD,EAAoBtxD,IAAImX,GAC1C,GAAIo6C,EACH,OAAOA,EAGR,MAAM,IAAI3yD,MAAM,oBAAoBuY,KAGrCtX,KAAKkZ,EAAY+0B,EAAiB9sC,GACjC,MAAMvJ,EAASmpB,EAAQktB,GACvB,GAAsB,mBAAXr2C,EAAuB,CAGjC,IAAK45D,GAAsB7oD,MAAMC,QAAQzH,GACxC,IAAK,IAAI9K,EAAI,EAAGA,EAAI8K,EAAK5K,OAAQF,IAChC8K,EAAK9K,GAAKs7D,EAAAtkB,OAAOlsC,EAAK9K,IAIxB,OAAOuB,EAAO4J,MAAMuf,EAAS5f,GAG9B,MAAM,IAAIpC,MAAM,qBAAqBkvC,QAcxCtvC,EAAAizD,oBAAA,SAAuCzJ,EAAmBj4C,GACzD,MAAMshD,EAAqBthD,GAAWA,EAAQshD,mBAE9C,OAAO,IAAIK,MAAM,GAAI,CACpB7xD,IAAI8xD,EAAYC;AACf,GAAuB,iBAAZA,EAGV,OAAIV,EAAgBU,GACZ5J,EAAQa,OAAO+I,GAIhB5tC,kBAAmBhjB,GAGzB,IAAI6wD,EAEHA,EADG9hD,IAAYuuB,EAAArC,kBAAkBlsB,EAAQyN,SAC5B,CAACzN,EAAQyN,WAAYxc,GAErBA,EAGd,MAAM/K,QAAe+xD,EAAQjpD,KAAK6yD,EAASC,GAG3C,OAAKR,EAIEp7D,EAHCu7D,EAAAtkB,OAAOj3C,IAOjB,MAAM,IAAI2I,MAAM,uBAAuBsF,OAAO0tD,2JC7GjD,MAAaE,EAGZjyD,YAAY8sD,GACX7sD,KAAK6sD,OAASA,EAGR9sD,UACNC,KAAK6sD,OAAOrgC,UAGNzsB,OAAOkyD,GACb,MAAMlvD,EAAYipD,GAAiBiG,EAAUlL,EAAA9uB,SAASsB,KAAKyyB,IAE3D,OADAhsD,KAAK6sD,OAAOlzC,GAAG,OAAQ5W,GAChB,CACN+R,QAAS,IAAM9U,KAAK6sD,OAAOqF,IAAI,OAAQnvD,IAIlChD,QAAQgD,GAEd,OADA/C,KAAK6sD,OAAOlzC,GAAG,QAAS5W,GACjB,CACN+R,QAAS,IAAM9U,KAAK6sD,OAAOqF,IAAI,QAASnvD,IAInChD,MAAMgD,GAEZ,OADA/C,KAAK6sD,OAAOlzC,GAAG,MAAO5W,GACf,CACN+R,QAAS,IAAM9U,KAAK6sD,OAAOqF,IAAI,MAAOnvD,IAIjChD,MAAMmZ,GAERlZ,KAAK6sD,OAAOhgC,WAShB7sB,KAAK6sD,OAAO5/B,MAAc/T,EAAOA,QAG3BnZ,MACNC,KAAK6sD,OAAO7/C,OAId,IAAWmlD,EAIAC,EAxDX1zD,EAAAszD,WAAAA,EAoDA,SAAWG,GACVA,EAAAA,EAAA,kBAAA,GAAA,oBADD,CAAWA,IAAAA,EAAS,KAIpB,SAAWC,GACVA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,IAAA,GAAA;CAJD,CAAWA,IAAAA,EAAS,KAUpB,MAAaC,UAA4B15C,EAAAlE,WAYxC1U,YAAY8sD,GACXvoD,QATgBtE,KAAAsyD,QAAUtyD,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAE7B9X,KAAA+sD,OAAS,CACzBrgC,MAAK,EACLugC,QAAO,EACPsF,KAAM,GAKNvyD,KAAK6sD,OAASA,EACd7sD,KAAKotD,cAAgB,IAAIoF,EAAA3G,YACzB7rD,KAAKilD,UAAUjlD,KAAK6sD,OAAOQ,OAAOlzD,GAAQ6F,KAAKyyD,aAAat4D,KAGtD4F,UACNC,KAAK6sD,OAAO/3C,UAGN/U,OAAOgD,GACb,OAAO/C,KAAKsyD,QAAQj7C,MAAMtU,GAGpBhD,QAAQgD,GACd,OAAO/C,KAAK6sD,OAAOqB,QAAQnrD,GAGrBhD,MAAMgD,GACZ,OAAO/C,KAAK6sD,OAAO6F,MAAM3vD,GAGnBhD,MAAMmZ,GACZ,IAAIy5C,EAAS,EACTz5C,EAAOub,WAAa,IACvBk+B,GAAa,EACHz5C,EAAOub,WAAa,MAC9Bk+B,GAAa,EAEbA,GAAa,EAEd,MAAMrK,EAASvB,EAAA9uB,SAASO,MAAMm6B,GAG9B,GADArK,EAAOvvB,WAAW,IAAY,GAC1B7f,EAAOub,WAAa,IACvB6zB,EAAOvvB,WAAW7f,EAAOub,WAAY,QAC/B,GAAIvb,EAAOub,WAAa,MAAS,CACvC6zB,EAAOvvB,WAAW,IAAK,GACvB,IAAIlpB,EAAS,EACby4C,EAAOvvB,WAAY7f,EAAOub,aAAe,EAAK,MAAc5kB,GAC5Dy4C,EAAOvvB,WAAY7f,EAAOub,aAAe,EAAK,MAAc5kB,OACtD,CACNy4C,EAAOvvB,WAAW,IAAK,GACvB,IAAIlpB,EAAS,EACby4C,EAAOvvB,WAAW,IAAKlpB,GACvBy4C,EAAOvvB,WAAW,IAAKlpB,GACvBy4C,EAAOvvB,WAAW,IAAKlpB,GACvBy4C,EAAOvvB,WAAW,IAAKlpB,GACvBy4C,EAAOvvB,WAAY7f,EAAOub,aAAe,GAAM,MAAc5kB,GAC7Dy4C,EAAOvvB,WAAY7f,EAAOub,aAAe,GAAM,MAAc5kB,GAC7Dy4C,EAAOvvB,WAAY7f,EAAOub,aAAe,EAAK,MAAc5kB,GAC5Dy4C,EAAOvvB,WAAY7f,EAAOub,aAAe,EAAK,MAAc5kB,GAG7D7P,KAAK6sD,OAAO5/B,MAAM85B,EAAA9uB,SAASvuB,OAAO,CAAC4+C,EAAQpvC;AAGrCnZ,MACNC,KAAK6sD,OAAO7/C,MAGLjN,aAAa5F,GACpB,GAAwB,IAApBA,EAAKs6B,WAMT,IAFAz0B,KAAKotD,cAAcE,YAAYnzD,GAExB6F,KAAKotD,cAAc34B,YAAcz0B,KAAK+sD,OAAOE,SAEnD,GAAqB,IAAjBjtD,KAAK+sD,OAAOrgC,MAAgC,CAE/C,MAGMkmC,EAHa5yD,KAAKotD,cAAc0D,KAAK9wD,KAAK+sD,OAAOE,SAGzBp0B,UAAU,GAClCg6B,GAAwB,IAAbD,KAA6B,EACxCv8D,EAAoB,IAAbu8D,EAEb5yD,KAAK+sD,OAAOrgC,MAAK,EACjB1sB,KAAK+sD,OAAOE,QAAU,GAA+B4F,EAAU,EAAI,IAAc,MAARx8D,EAAc,EAAI,IAAc,MAARA,EAAc,EAAI,GACnH2J,KAAK+sD,OAAOwF,KAAO,OAEb,GAAqB,IAAjBvyD,KAAK+sD,OAAOrgC,MAAgC,CAEtD,MAAM47B,EAAStoD,KAAKotD,cAAc7/B,KAAKvtB,KAAK+sD,OAAOE,SAC7C2F,EAAatK,EAAOzvB,UAAU,GAC9Bg6B,GAAwB,IAAbD,KAA6B,EAC9C,IAAIv8D,EAAoB,IAAbu8D,EAEP/iD,EAAS,EACD,MAARxZ,EACHA,EAC8B,IAA7BiyD,EAAOzvB,YAAYhpB,GACjBy4C,EAAOzvB,YAAYhpB,GAEJ,MAARxZ,IACVA,EAC8B,EAA7BiyD,EAAOzvB,YAAYhpB,GACY,EAA7By4C,EAAOzvB,YAAYhpB,GACU,EAA7By4C,EAAOzvB,YAAYhpB,GACU,EAA7By4C,EAAOzvB,YAAYhpB,GACnBy4C,EAAOzvB,YAAYhpB,GAAU,GAAK,GACL,MAA7By4C,EAAOzvB,YAAYhpB,GACU,IAA7By4C,EAAOzvB,YAAYhpB,GACnBy4C,EAAOzvB,YAAYhpB,IAIvB,IAAI0iD,EAAO,EACPM,IACHN,EACCjK,EAAOzvB,YAAYhpB,GAAU,GAAK,GACH,MAA7By4C,EAAOzvB,YAAYhpB,GACU,IAA7By4C,EAAOzvB,YAAYhpB,GACnBy4C,EAAOzvB,YAAYhpB,IAIvB7P,KAAK+sD,OAAOrgC,MAAK,EACjB1sB,KAAK+sD,OAAOE,QAAU52D,EACtB2J,KAAK+sD,OAAOwF,KAAOA,OAEb,GAAqB,IAAjBvyD,KAAK+sD,OAAOrgC,MAA8B,CAGpD,MAAM67B,EAAOvoD,KAAKotD,cAAc7/B,KAAKvtB,KAAK+sD,OAAOE,SACjD6F,EAAOvK,EAAMvoD,KAAK+sD,OAAOwF,MAEzBvyD,KAAK+sD,OAAOrgC,MAAK,EACjB1sB,KAAK+sD,OAAOE,QAAO;AACnBjtD,KAAK+sD,OAAOwF,KAAO,EAEnBvyD,KAAKsyD,QAAQv6C,KAAKwwC,KAMtB,SAASuK,EAAO55C,EAAkBq5C,GACjC,GAAa,IAATA,EACH,OAED,IAAIQ,EAAM75C,EAAOub,aAAe,EAChC,IAAK,IAAIr+B,EAAI,EAAGA,EAAI28D,EAAK38D,IAAK,CAC7B,MAAMyJ,EAAIqZ,EAAOyf,aAAiB,EAAJviC,GAC9B8iB,EAAO0f,cAAc/4B,EAAI0yD,EAAU,EAAJn8D,GAEhC,IAAIyZ,EAAe,EAANkjD,EACTC,EAAY95C,EAAOub,WAAa5kB,EACpC,MAAMojD,EAAMV,IAAS,GAAM,IACrBW,EAAMX,IAAS,GAAM,IACrBY,EAAMZ,IAAS,EAAK,IACtBS,GAAa,GAChB95C,EAAO6f,WAAW7f,EAAO2f,UAAUhpB,GAAUojD,EAAIpjD,GAE9CmjD,GAAa,GAChB95C,EAAO6f,WAAW7f,EAAO2f,UAAUhpB,EAAS,GAAKqjD,EAAIrjD,EAAS,GAE3DmjD,GAAa,GAChB95C,EAAO6f,WAAW7f,EAAO2f,UAAUhpB,EAAS,GAAKsjD,EAAItjD,EAAS,GA7KhEnR,EAAA2zD,oBAAAA,EAiLA3zD,EAAA00D,uBAAA,WACC,MAAMC,EAAepV,EAAAjH,eACrB,MAAyB,UAArBn8C,QAAQsqB,SACJ,2BAA2BkuC,SAG3B/4B,EAAA3gC,KAAK8iD,EAAAuB,SAAU,cAAcqV,WAItC,MAAaC,UAAehF,EAAAnE,UAa3BpqD,YAAYwzD,GACXjvD,MAAMgvD,EAAOE,wBAAwBD,IACrCvzD,KAAKuzD,OAASA,EAbPxzD,+BAA+BwzD,GACtC,MAAME,EAAez1C,EAAA5G,MAAMmC,qBAA6Bg6C,EAAQ,cAEhE,OAAOv1C,EAAA5G,MAAM3d,IAAIg6D,EAAc5G,IAAU,CACxCtF,SAAU,IAAIiL,EAAAxE,SAAS,IAAIgE,EAAWnF,IACtCrC,sBAAuBxsC,EAAA5G,MAAM5L,KAAKwS,EAAA5G,MAAMmC,qBAA2BszC,EAAQ,aAW7E9sD,UACCuE,MAAMwQ,UACF9U,KAAKuzD,SACRvzD,KAAKuzD,OAAO3S,QACZ5gD,KAAKuzD,OAAS,OAtBjB70D,EAAA40D,OAAAA,EA6BA50D,EAAAg1D,MAAA,SAAsB32C,GACrB,OAAO,IAAIvkB,QAAgB,CAACC,EAAGG;AAC9B,MAAM26D,EAASI,EAAAC,eAEfL,EAAO55C,GAAG,QAAS/gB,GACnB26D,EAAOxK,OAAOhsC,EAAM,KACnBw2C,EAAO15C,eAAe,QAASjhB,GAC/BH,EAAE,IAAI66D,EAAOC,SAQhB70D,EAAAm1D,QAAA,SAAwB92C,EAAW+2C,GAClC,OAAO,IAAIt7D,QAAgB,CAACC,EAAGG,KAC9B,MAAMi0D,EAAS8G,EAAAI,iBAAiBh3C,EAAM,KACrC8vC,EAAOhzC,eAAe,QAASjhB,GAC/BH,EAAE+5D,EAAAnE,OAAO2F,WAAW,IAAIhC,EAAWnF,GAASiH,MAG7CjH,EAAOrhD,KAAK,QAAS5S,SlD/TvB0rB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,8BAAA7D,wEmDSA,SAAS+5D,EAAwBC,EAAgBC,GAChD,OAAIA,IAAYD,EAAUrxD,OAASqxD,EAAUzwD,YACrCuwD,EAAII,SAAS,EAAqB,KAAYC,EAAyBH,GAAYI,EAAcJ,EAAUrxD,QAAUyxD,EAAcJ,EAAUzwD,aAG9I4wD,EAAyBH,GAGjC,SAASI,EAAczxD,GACtB,OAAI4F,MAAMC,QAAQ7F,GACVA,EAAMnJ,KAAK,MAGZmJ,EAGR,SAASwxD,EAAyBH,GAGjC,MAA8B,iBAAnBA,EAAUp6D,MAAgD,iBAApBo6D,EAAUK,OAAmD,iBAAtBL,EAAUM,QAC1FR,EAAII,SAAS,EAAwB,KAAiCF,EAAUt1D,SAGjFs1D,EAAUt1D,SAAWo1D,EAAII,SAAS,EAAwB,uDASlE31D,EAAAg2D,eAAA,SAAgBA,EAAe/4D,EAAa,KAAMy4D,GAAmB,GACpE,IAAKz4D,EACJ,OAAOs4D,EAAII,SAAS,EAAwB,MAG7C,GAAI3rD,MAAMC,QAAQhN,GAAQ,CACzB,MAAMmX,EAAgB03B,EAAOpiC,SAASzM,GAChC2sB,EAAMosC,EAAe5hD,EAAO,GAAIshD,GAEtC,OAAIthD,EAAOxc,OAAS,EACZ29D,EAAII,SAAS,EAAoB,KAA6B/rC,EAAKxV,EAAOxc,QAG3EgyB,EAGR,GAAIqsC,EAAM34B,SAASrgC,GAClB,OAAOA,EAGR,GAAIA,EAAMi5D,OAAQ;AACjB,MAAMA,EAASj5D,EAAMi5D,OAErB,GAAIA,EAAOj5D,MACV,OAAOu4D,EAAwBU,EAAOj5D,MAAOy4D,GAG9C,GAAIQ,EAAOT,UACV,OAAOD,EAAwBU,EAAOT,UAAWC,GAInD,OAAIz4D,EAAMmH,MACFoxD,EAAwBv4D,EAAOy4D,GAGnCz4D,EAAMkD,QACFlD,EAAMkD,QAGPo1D,EAAII,SAAS,EAAwB,UnDjF7C/vC,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,mCAAA7D,gHoDWAuE,EAAAm2D,qBAAA,SAAqCC,GACpC,OAAQA,GACP,KAAA,EAAmC,OAAOC,EAAAV,SAAS,EAAuB,MAC1E,KAAA,EAAyC,OAAOU,EAAAV,SAAS,EAA6B,MACtF,KAAA,EAA0C,OAAOU,EAAAV,SAAS,EAA8B,MACxF,KAAA,EAAmC,OAAOU,EAAAV,SAAS,EAAuB,MAC1E,KAAA,EAAmC,OAAOU,EAAAV,SAAS,EAAuB,MAC1E,KAAA,EAAmC,OAAOU,EAAAV,SAAS,EAAuB,MAC1E,KAAA,EAAwC,OAAOU,EAAAV,SAAS,EAA4B,MACpF,KAAA,EAA0C,OAAOU,EAAAV,SAAS,EAA8B,MACxF,KAAA,EAAuC,OAAOU,EAAAV,SAAS,EAA2B,MAClF,QACC,MAAO,QpDvBV/vC,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,0BAAA7D,oEqDQA,IAAK66D,mDAAL,SAAKA,GACJA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA;CAJD,CAAKA,IAAAA,EAAQ,KAOb,SAAUA,GAET,MAAMjxC,EAAS,QACTkxC,EAAW,UACXC,EAAQ,OACRC,EAAQ,OAERC,EAAgDz3D,OAAOK,OAAO,MACpEo3D,EAAgBJ,EAASl2D,OAASm1D,EAAII,SAAS,EAAa,MAC5De,EAAgBJ,EAASK,SAAWpB,EAAII,SAAS,EAAe,MAChEe,EAAgBJ,EAASM,MAAQrB,EAAII,SAAS,EAAY,MAM1CW,EAAAO,UAAhB,SAA0B32D,GACzB,OAAKA,EAID05B,EAAQ/E,iBAAiBxP,EAAQnlB,GAC7Bo2D,EAASl2D,MAGbw5B,EAAQ/E,iBAAiB0hC,EAAUr2D,IAAU05B,EAAQ/E,iBAAiB2hC,EAAOt2D,GACzEo2D,EAASK,QAGb/8B,EAAQ/E,iBAAiB4hC,EAAOv2D,GAC5Bo2D,EAASM,KAEVN,EAASQ,OAdRR,EAASQ,QAlBnB,CAAUR,IAAAA,EAAQ,KAoClBt2D,EAAA+2D,QAAeT,KrDnDf1wC,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,yBAAA7D,+GsD6BA,SAASu7D,EAAeC,GACvB,OAAQA,GACP,KAAK,EACJ,OAAA,EACD,KAAK,EACJ,OAAA,EACD,KAAK,IACJ,OAAA,EACD,QACC,OAAA,GAkDH,SAAgBC,IACf,OAAO/6D,QAAQC,IAAa,SAAK,2DADlC4D,EAAAk3D,gBAAAA,EAIA,MAAsBC,EAkCrB91D,YAAmB0pC,EAA2B2B,EAAiB0qB,EAAgBC,GAC9E,QAAal8D,IAATuxC,QAA+BvxC,IAATi8D,QAA+Bj8D,IAATk8D,EAC/C/1D,KAAKg2D,IAAcvsB,EACnBzpC,KAAKkB,KAAOkqC,EACZprC,KAAKi2D,MAAQH,EACb91D,KAAKiQ,QAAU8lD,MACT,CACN,MAAMG,EAAyBzsB,EAC/BzpC,KAAKg2D,IAAME,EAAWloB,QACtBhuC,KAAKi2D,MAAQC,EAAWC,eACxBn2D,KAAKkB,KAAOg1D,EAAWh1D,KAAKlJ,MAAM,GAClCgI,KAAKiQ,QAAUimD,EAAWjmD,SAAW;AAOtC,GAJAjQ,KAAKo2D,aAAe,KACpBp2D,KAAKq2D,oBAAsB,KAC3Br2D,KAAKs2D,oBAAqB,EAEtBt2D,KAAKiQ,QAAQnV,IAAK,CACrB,MAAMy7D,EAAoC54D,OAAOK,OAAO,MACxDL,OAAOC,KAAK/C,QAAQC,KAAKuE,QAASd,IACjCg4D,EAAOh4D,GAAO1D,QAAQC,IAAIyD,KAE3BZ,OAAOC,KAAKoC,KAAKiQ,QAAQnV,KAAKuE,QAASd,IACtCg4D,EAAOh4D,GAAOyB,KAAKiQ,QAAQnV,IAAKyD,KAEjCyB,KAAKiQ,QAAQnV,IAAMy7D,GAIdx2D,sBACN,IAAI5J,EAAS6J,KAAKg2D,IAAIrsC,cACtB,MAAMnuB,EAAQrF,EAAOsF,YAAYtD,EAAKua,KAItC,OAHe,IAAXlX,IACHrF,EAASA,EAAOuF,UAAUF,EAAQ,IAE/Bq6D,EAAgBW,iBAAiBrgE,GAC7BA,EAED,QAGD4J,MAAM02D,GACZ,OAAI3wC,EAASG,YAAejmB,KAAKiQ,SAAWjQ,KAAKiQ,QAAQwX,KAAO4jB,EAAQ3Q,MAAM16B,KAAKiQ,QAAQwX,OAAUznB,KAAKiQ,SAAWo7B,EAAQ3Q,MAAM7/B,QAAQ4sB,QACnIjvB,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAAkB,QAEzDr0D,KAAK02D,UAAU19D,KAAM09D,IAC3B,IAAIC,EACAC,EACJ,MAAMzgE,EAAS,IAAIqC,QAAa,CAACC,EAAGG,KACnC+9D,EAAKl+D,EACLm+D,EAAKh+D,IAGN,GAAI89D,EAAS,CACZ,IAAIV,EAAch2D,KAAKg2D,IACnBh2D,KAAKkB,OACR80D,EAAMA,EAAM,IAAMh2D,KAAKkB,KAAKvH,KAAK,MAElCqG,KAAKo2D,aAAeS,EAAGjkC,KAAKojC,EAAKh2D,KAAKiQ,QAAS,CAACtU,EAAOmgD,EAAQgb,KAC9D92D,KAAKo2D,aAAe,KACHz6D,GAAAA,EAIFo7D,OACdH,EAAG,CAAEG,OAAQ/2D,KAAKs2D,mBAAoBxa,OAAQA,EAAOrhC,WAAYq8C,OAAQA,EAAOr8C,aAEhFza,KAAKg3D,WAAWL,EAAIF,EAAI96D,EAAOmgD,EAAegb,SAG1C,CACN,IAAIV,EAAuC,KAC3C,MAAMa,EAAgB98D,IACrB6F,KAAKo2D,aAAe,KACpBp2D,KAAKq2D,oBAAsB;AAC3Br2D,KAAKk3D,YAAY/8D,EAAMw8D,EAAIF,EAAIG,GAC/B,MAAMzgE,EAAsB,CAC3BghE,WAAYn3D,KAAKs2D,oBAEdc,EAAM/6B,SAASliC,KAClBhE,EAAOkhE,QAAkBl9D,GAE1Bw8D,EAAGxgE,IAEJ,GAAI6J,KAAKi2D,OAASnwC,EAASG,UAAW,CACrC,MAAMhW,EAAeqnD,EAAQt5B,UAAUh+B,KAAKiQ,SAC5CA,EAAQsnD,0BAA2B,EACnCtnD,EAAQunD,UAAW,EACnB,IAAIC,GAAyB,EACzBC,GAAqB,EACzB,MAAMC,EAAwB,GAC9B,IAAIC,EAAS53D,KAAK63D,aAAa73D,KAAKg2D,KACpC2B,EAAY1gE,KAAK2gE,EAAOh5D,OACxB64D,EAAgBG,EAAOA,OACnB53D,KAAKkB,MACRlB,KAAKkB,KAAK7B,QAAShB,IAClBu5D,EAAS53D,KAAK63D,aAAax5D,GAC3Bs5D,EAAY1gE,KAAK2gE,EAAOh5D,OACxB84D,EAAYA,GAAaE,EAAOA,SAGlC,MAAM12D,EAAiB,CACtB,KACA,MAEGu2D,EACCC,EACHx2D,EAAKjK,KAAK,IAAM0gE,EAAYh+D,KAAK,KAAO,KAC9Bg+D,EAAYrhE,OAAS,EAC/B4K,EAAKjK,KAAK,IAAM0gE,EAAY,GAAK,KAAYA,EAAY3/D,MAAM,GAAG2B,KAAK,MAEvEuH,EAAKjK,KAAK,IAAM0gE,EAAY,GAAK,KAGlCz2D,EAAKjK,KAAK0gE,EAAYh+D,KAAK,MAE5By8D,EAAeS,EAAGiB,MAAMlC,IAAmB10D,EAAM+O,QAE7CjQ,KAAKg2D,MACRI,EAAeS,EAAGiB,MAAM93D,KAAKg2D,IAAKh2D,KAAKkB,KAAMlB,KAAKiQ,UAGhDmmD,IACHp2D,KAAKo2D,aAAeA,EACpBp2D,KAAKq2D,oBAAsB79D,QAAQyB,QAAQm8D,GACvCp2D,KAAK+3D,aACR/3D,KAAK+3D,WAAWX,EAAM/6B,SAAS+5B,EAAa4B,KAAO5B,EAAa4B,KAAO,GACvEh4D,KAAK+3D,gBAAal+D,GAEnBu8D,EAAaz8C,GAAG,QAAUhe,IACzBqE,KAAKo2D,aAAe,KACpBQ,EAAG,CAAEO,WAAYn3D,KAAKs2D,mBAAoB36D,MAAOA,MAE9Cy6D,EAAa4B,MAChBh4D,KAAKo2D,aAAaz8C,GAAG,QAASs9C,GAC9Bj3D,KAAKi4D,YAAY7B,EAAcO,EAAKF,EAAIG,GAAK,KAIhD,OAAOzgE,IAOC4J,YAAY5F,EAAWw8D,EAAgCF,EAAqCG,IAK9F72D,aAAanB,GACpB,OAAIi3D,EAAgBljC,OAAOR,KAAKvzB,GACxB,CACNA,MAAO,IAAMA,EAAQ;AACrBg5D,QAAQ,GAGF,CACNh5D,MAAOA,EACPg5D,OAAQh5D,EAAMtI,OAAS,GAAkB,MAAbsI,EAAM,IAA0C,MAA5BA,EAAMA,EAAMtI,OAAS,IAKxE0hE,UACC,OAAIh4D,KAAKq2D,oBACDr2D,KAAKq2D,oBAAoBr9D,KAAKo9D,GAAgBA,EAAa4B,IAAKl/D,IAAQ,GAExE,IAAIN,QAAiByB,IAC3B+F,KAAK+3D,WAAa99D,IAKd8F,YACN,OAAKC,KAAKq2D,oBAGHr2D,KAAKq2D,oBAAoBr9D,KAAMo9D,IACrCp2D,KAAKs2D,oBAAqB,EAzQ7B,SAA0Bz7D,EAA0B4sB,GACnD,GAAI3B,EAASG,UACZ,IACC,MAAMhW,EAAe,CACpBioD,MAAO,CAAC,OAAQ,OAAQ,WAErBzwC,IACHxX,EAAQwX,IAAMA,GAEf,MAAM0wC,EAActB,EAAGuB,SAAS,WAAY,CAAC,KAAM,KAAM,OAAQv9D,EAAQm9D,IAAIv9C,YAAaxK,GAC1F,OAAO,IAAIzX,QAAQ,CAACyB,EAASC,KAC5Bi+D,EAAY3sD,KAAK,QAAU1S,IAC1BmB,EAAQ,CAAEo+D,SAAS,EAAO18D,MAAO7C,MAElCq/D,EAAY3sD,KAAK,OAAQ,CAACzR,EAAM6e,KAE9B3e,EADY,IAATF,EACK,CAAEs+D,SAAS,GAEX,CAAEA,SAAS,EAAOt+D,KAAe,OAATA,EAAgBA,EAAM,QAIxD,MAAOjB,GACR,OAAON,QAAQyB,QAAQ,CAAEo+D,SAAS,EAAO18D,MAAO7C,EAAKiB,KAAMjB,EAAI68D,OAASD,EAAe58D,EAAI68D,QAAS,SAE/F,GAAI7vC,EAASK,SAAWL,EAASI,YACvC,IACC,MAAM8vC,EAAM1Y,EAAAha,qBAAqBG,EAAS,oCAC1C,OAAO,IAAIjrC,QAAQ,CAACyB,EAASC,KAC5B28D,EAAGuB,SAASpC,EAAK,CAACn7D,EAAQm9D,IAAIv9C,YAAa,CAAE08B,SAAU,OAAQ8e,OAAO,GAA8B,CAACn9D,EAAKgjD,EAAQgb,KAEhH78D,EADGnB,EACK,CAAEu/D,SAAS,EAAO18D,MAAO7C,GAEzB,CAAEu/D,SAAS,QAIrB,MAAOv/D,GACR,OAAON,QAAQyB,QAAQ,CAAEo+D,SAAS,EAAO18D,MAAO7C,SAGjD+B,EAAQy9D,KAAK;CAEd,OAAO9/D,QAAQyB,QAAQ,CAAEo+D,SAAS,IA+NzBE,CAAiBnC,EAAcp2D,KAAKiQ,QAAQwX,KAAKzuB,KAAKovD,IACxDA,EAASiQ,UACZr4D,KAAKo2D,aAAe,MAEdhO,KAELtvD,IACI,CAAEu/D,SAAS,KAXX7/D,QAAQyB,QAA2B,CAAEo+D,SAAS,IAe/Ct4D,UACP,OAAO,IAAIvH,QAAiB,CAACC,EAAGG,KAC/B,IAAKoH,KAAKi2D,QAAUnwC,EAASG,UAC5B,OAAOxtB,GAAE,GAEV,MAAM+/D,EAAW3B,EAAGiB,MAAMlC,IAAmB,CAAC,KAAM,OACpD4C,EAAS7+C,GAAG,QAAUhe,GACdlD,GAAE,IAEV+/D,EAAS7+C,GAAG,OAASxf,GACb1B,GAAE,OA7ObiG,EAAAm3D,gBAAAA,EAWgBA,EAAAW,iBAA+C,CAC7DiC,KAAO,EACPC,OAAS,EACTC,QAAU,EACVC,QAAU,EACVC,OAAS,EACTC,MAAQ,EACRC,MAAQ,EACRC,SAAW,EACXC,QAAU,EACVC,MAAQ,EACRC,OAAS,EACTC,SAAW,EACXC,KAAO,EACPC,OAAS,EACTC,KAAO,EACPC,MAAQ,EACRC,KAAO,EACPC,QAAU,GA4Ja7D,EAAAljC,OAAS,iBA0DlCj0B,EAAAi7D,YAAA,cAAiC9D,EAOhC91D,YAAmB0pC,EAA2B2B,EAAiB0qB,EAA8BC,GAC5FzxD,MAAWmlC,EAAM2B,EAAW0qB,EAAMC,GAElC/1D,KAAK45D,kBAAoB,KACzB55D,KAAK65D,kBAAoB,KAGhB95D,WAAW42D,EAAgCF,EAAgC96D,EAAcmgD,EAAgBgb,GAClH,CAAChb,EAAQgb,GAAQz3D,QAAQ,CAAC6Z,EAAgB1d,KACzC,MAAMs+D,EAAc,IAAIC,EAAA7iB,YACV4iB,EAAY7sC,MAAM/T,GAC1B7Z,QAASilC,IACdmyB,EAAG,CAAEnyB,KAAMA,EAAM7lB,OAAkB,IAAVjjB,EAAa,EAAgB,MAEvD,MAAM8oC,EAAOw1B,EAAY9sD,MACrBs3B,GACHmyB,EAAG,CAAEnyB,KAAMA,EAAM7lB,OAAkB,IAAVjjB,EAAa,EAAgB,MAGxDm7D,EAAG,CAAEQ,WAAYn3D,KAAKs2D,mBAAoB36D,MAAOA,IAGxCoE,YAAYq2D,EAA+BO,EAAgCF,EAAgCG,EAAmBoD,GACvI,MAAMJ,EAAoB,IAAIG,EAAA7iB,YACxB2iB,EAAoB,IAAIE,EAAA7iB,YAC9Bkf,EAAata,OAAQniC,GAAG,OAASxf,IAClBy/D,EAAkB3sC,MAAM9yB,GAChCkF,QAAQilC,GAAQmyB,EAAG,CAAEnyB,KAAMA,EAAM7lB,OAAM;GAE9C23C,EAAaU,OAAQn9C,GAAG,OAASxf,IAClB0/D,EAAkB5sC,MAAM9yB,GAChCkF,QAAQilC,GAAQmyB,EAAG,CAAEnyB,KAAMA,EAAM7lB,OAAM,OAG9Cze,KAAK45D,kBAAoBA,EACzB55D,KAAK65D,kBAAoBA,EAGhB95D,YAAY5F,EAAWw8D,EAAgCF,EAAgCG,GAChG,MAAMqD,EAAaj6D,KAAK45D,kBAAoB55D,KAAK45D,kBAAkB5sD,MAAQ,KACvEitD,GACHxD,EAAG,CAAEnyB,KAAM21B,EAAYx7C,OAAM,IAE9B,MAAMy7C,EAAal6D,KAAK65D,kBAAoB75D,KAAK65D,kBAAkB7sD,MAAQ,KACvEktD,GACHzD,EAAG,CAAEnyB,KAAM41B,EAAYz7C,OAAM,MAchC/f,EAAAy7D,mBAAA,SAAmC/D,GAClC,IAAIgE,EAAqB,GACrBC,GAAW,EAEf,MAAMhS,EAAO,SAAU//B,GACtB,GAAI+xC,EAEH,YADAD,EAASnjE,KAAKqxB,GAIA8tC,EAAa/N,KAAK//B,EAAM3sB,IAQtC,GAPIA,GACH/E,QAAQ+E,MAAMA,GAGf0+D,GAAW,EAGPD,EAAS9jE,OAAS,EAAG,CACxB,MAAMgkE,EAAeF,EAASpiE,MAAM,GACpCoiE,EAAW,GACXE,EAAaj7D,QAAQqkC,GAAS2kB,EAAK3kB,SAItB5d,EAASG,YACvBo0C,GAAW,IAIb,MAAO,CAAEhS,KAAAA,IAGV,SAAiB/+B,GACMA,EAAAixC,eAAfr2C,eAA8B8pB,EAAiBvmB,EAAcuC,GAEnE,GAAI7xB,EAAK2xB,WAAWkkB,GACnB,OAAOA,EAMR,QAJYn0C,IAAR4tB,IACHA,EAAM5sB,QAAQ4sB,OAGH,MADAtvB,EAAK4zB,QAAQiiB,GAIxB,OAAO71C,EAAKwB,KAAK8tB,EAAKumB,GAMvB,QAJcn0C,IAAVmwB,GAAuBotC,EAAMp7B,SAASnhC,QAAQC,IAAI0/D,QACrDxwC,EAAQnvB,QAAQC,IAAI0/D,KAAKr2D,MAAMhM,EAAKszB,iBAGvB5xB,IAAVmwB,GAAwC,IAAjBA,EAAM1zB,OAChC,OAAO6B,EAAKwB,KAAK8tB,EAAKumB,GAGvB9pB,eAAejoB,EAAW9D,GACzB,cAAUkmD,EAAAC,UAAUlmD,EAAGE,OAAb+lD,CAAqBlmD,YACdkmD,EAAAC,UAAUlmD,EAAGa,KAAbolD,CAAmBlmD,IAAkB,YAOvD,IAAK,IAAIsiE,KAAazwC,EAAO,CAE5B,IAAIwrB,EAMJ,GAJCA,EADGr9C,EAAK2xB,WAAW2wC,GACRtiE,EAAKwB,KAAK8gE,EAAWzsB,GAErB71C,EAAKwB,KAAK8tB,EAAKgzC,EAAWzsB;MAE5B/xC,EAAWu5C,GACpB,OAAOA,EAER,IAAIklB,EAAgBllB,EAAW,OAC/B,SAAUv5C,EAAWy+D,GACpB,OAAOA,EAGR,GADAA,EAAgBllB,EAAW,aACjBv5C,EAAWy+D,GACpB,OAAOA,EAGT,OAAOviE,EAAKwB,KAAK8tB,EAAKumB,IApDxB,CAAiBtvC,EAAA4qB,QAAA5qB,EAAA4qB,MAAK,iKC5ZtB,MAAagqC,UAAwChF,EAAAhH,cACpDvnD,YAAYynD,GACXljD,MAAM,CACL+jD,KAAMl+C,IACL,IACKtP,QAAQwtD,MACXxtD,QAAQwtD,KAAcl+C,EAAE+O,OAAQuB,SAAS,WAEzC,MAAO7hB,MAEVkvD,UAAW9pC,EAAA5G,MAAMmC,qBAAqB1e,QAAS,UAAWytB,GAAOy+B,EAAA9uB,SAASsB,KAAK7B,OAAOjgC,KAAK6wB,EAAK,aAC9Fk/B,GAEH3sD,QAAQ2Q,KAAK,aAAc,IAAMxL,KAAK8U,YAbxCpW,EAAA40D,OAAAA,EAgEA50D,EAAA2vD,OAAA,MAWCtuD,YAAoB46D,EAA4B1qD,GAA5BjQ,KAAA26D,WAAAA,EAA4B36D,KAAAiQ,QAAAA,EARxCjQ,KAAA2nD,eAAiB,IAAIxnD,IAGrBH,KAAA0nD,SAAW,IAAIznD,IAEND,KAAA46D,kBAAoB,IAAI58C,EAAAlG,QAChC9X,KAAA66D,iBAAmB76D,KAAK46D,kBAAkBvjD,MAGlD,MAAMwI,EAAU5P,GAAWA,EAAQ4P,QAAU5P,EAAQ4P,QAAU,IAC/D7f,KAAK86D,eAAiB,IAAI/uB,EAAApsB,QAAcE,GACxC7f,KAAKtG,MAAQ,KACbsG,KAAK+6D,QAAU,KAGhBh7D,WAA+BkoD,GAC9B,MAAMwB,EAAOzpD,KAEb,MAAO,CACNf,KAAI,CAAI+uC,EAAiBpkC,EAAW8/C,IAC5BD,EAAKE,eAAkB1B,EAAaja,EAASpkC,EAAK8/C,GAE1DX,OAAM,CAAC1xC,EAAezN,IACd6/C,EAAKG,aAAa3B,EAAa5wC,EAAOzN;AAKtC7J,eAAkBkoD,EAAqBjxD,EAAc4S,EAAW8/C,EAAoBhrC,EAAAf,kBAAkBjJ,MAC/G,IAAK1U,KAAK86D,eACT,OAAOtiE,QAAQ0B,OAAO,IAAI4E,MAAM,aAGjC,GAAI4qD,EAAkBxhD,wBACrB,OAAO1P,QAAQ0B,OAAO4Y,EAAOlP,YAG9B5D,KAAK86D,eAAex8C,SAEpB,MAAM4pC,EAAUloD,KAAKg7D,iBAAiB/S,GAChC9xD,EAAS41C,EAAAvtB,wBAAwBzW,GAASmgD,EAAQjpD,KAAQjI,EAAM4S,EAAK7B,IACrEiiD,EAA4BN,EAAkB3rC,wBAAwB,IAAM5nB,EAAOmoB,UAEnFylC,EAAaprC,EAAAxD,aAAa,IAAMhf,EAAOmoB,UAY7C,OAXAte,KAAK2nD,eAAetnD,IAAI0jD,GAExB5tD,EAAO0oB,QAAQ,KACdmrC,EAA0Bl1C,UAC1B9U,KAAK2nD,eAAernD,OAAOyjD,GAEM,IAA7B/jD,KAAK2nD,eAAezoD,MAAcc,KAAK86D,gBAC1C96D,KAAK86D,eAAex6C,QAAQ,IAAMtgB,KAAKi7D,mBAIlC9kE,EAGE4J,aAAgBkoD,EAAqBjxD,EAAc4S,GAC5D,IAAK5J,KAAK86D,eACT,OAAO98C,EAAA5G,MAAM1C,KAKd,IAAI3R,EAFJ/C,KAAK86D,eAAex8C,SAGpB,MAAMzG,EAAU,IAAImG,EAAAlG,QAAa,CAChC4B,mBAAoB,KACnB,MACMrC,EADUrX,KAAKg7D,iBAAiB/S,GACNc,OAAO/xD,EAAM4S,GAE7C7G,EAAWsU,EAAMQ,EAAQE,KAAMF,GAC/B7X,KAAK2nD,eAAetnD,IAAI0C,IAEzB6W,qBAAsB,KACrB5Z,KAAK2nD,eAAernD,OAAOyC,GAC3BA,EAAS+R,UAEwB,IAA7B9U,KAAK2nD,eAAezoD,MAAcc,KAAK86D,gBAC1C96D,KAAK86D,eAAex6C,QAAQ,IAAMtgB,KAAKi7D,oBAK1C,OAAOpjD,EAAQR,MAGhB6jD,aACC,IAAKl7D,KAAK+6D,QAAS;AAClB,MAAM75D,EAAOlB,KAAKiQ,SAAWjQ,KAAKiQ,QAAQ/O,KAAOlB,KAAKiQ,QAAQ/O,KAAO,GAC/Di6D,EAAwBx9D,OAAOK,OAAO,MAE5Cm9D,EAASrgE,IAAMsgE,EAAA1+C,OAAO0+C,EAAAp9B,UAAUnjC,QAAQC,KAAM,CAAEugE,kBAAqBj3D,OAAOvJ,QAAQm9D,OAEhFh4D,KAAKiQ,SAAWjQ,KAAKiQ,QAAQnV,MAChCqgE,EAASrgE,IAAMsgE,EAAA1+C,OAAOy+C,EAASrgE,IAAKkF,KAAKiQ,QAAQnV,MAG9CkF,KAAKiQ,SAAWjQ,KAAKiQ,QAAQqrD,gBAChCH,EAASI,SAAW,IAGjBv7D,KAAKiQ,SAAyC,iBAAvBjQ,KAAKiQ,QAAQurD,QACvCL,EAASI,SAAW,CAAC,WAAY,aAAev7D,KAAKiQ,QAAQurD,QAG1Dx7D,KAAKiQ,SAA4C,iBAA1BjQ,KAAKiQ,QAAQwrD,WACvCN,EAASI,SAAW,CAAC,WAAY,iBAAmBv7D,KAAKiQ,QAAQwrD,WAGlEz7D,KAAKtG,MAAQmiD,EAAA6f,KAAK17D,KAAK26D,WAAYz5D,EAAMi6D,GAEzC,MAAMQ,EAAmB,IAAI39C,EAAAlG,QACRkG,EAAA5G,MAAMmC,qBAAqBvZ,KAAKtG,MAAO,UAAW4uB,GAAOA,EAE9Ey/B,CAAaz/B,IAGRszC,EAAA33B,mBAAmB3b,GACtBszC,EAAA/mD,IAAIyT,EAAK,gBAAgBtoB,KAAKiQ,QAAQ4rD,cAKvCF,EAAiB5jD,KAAKgvC,EAAA9uB,SAASsB,KAAK7B,OAAOjgC,KAAK6wB,EAAK,cAGtD,MAAMwzC,EAAS97D,KAAKiQ,QAAQoqD,SAAW0B,EAAA5B,mBAAmBn6D,KAAKtG,OAASsG,KAAKtG,MAGvE6tD,EAAW,CAAEc,KAFLl+C,GAAgBnK,KAAKtG,OAASsG,KAAKtG,MAAMsiE,WAAaF,EAAOzT,KAAcl+C,EAAE+O,OAAQuB,SAAS,WAEnFqtC,UADP6T,EAAiBtkD,OAGnCrX,KAAK+6D,QAAU,IAAIzM,EAAApF,cAAU3B,GAE7B,MAAM0U,EAAS,IAAMj8D,KAAKi7D;CAC1BpgE,QAAQ2Q,KAAK,OAAQywD,GAErBj8D,KAAKtG,MAAMigB,GAAG,QAAS7gB,GAAOlC,QAAQoK,KAAK,QAAUhB,KAAKiQ,QAAQ4rD,WAAa,kBAAoB/iE,IAEnGkH,KAAKtG,MAAMigB,GAAG,OAAQ,CAAC5f,EAAW6e,KACjC/d,QAAQgf,eAAe,OAAoBoiD,GAE3Cj8D,KAAK2nD,eAAetoD,QAAQ8K,GAAKwO,EAAA7D,QAAQ3K,IACzCnK,KAAK2nD,eAAenmD,QAEP,IAATzH,GAAyB,YAAX6e,GACjBhiB,QAAQoK,KAAK,QAAUhB,KAAKiQ,QAAQ4rD,WAAa,4BAA8B9hE,EAAO,eAAiB6e,GAGpG5Y,KAAK86D,gBACR96D,KAAK86D,eAAex8C,SAErBte,KAAKi7D,gBACLj7D,KAAK46D,kBAAkB7iD,KAAK,CAAEhe,KAAAA,EAAM6e,OAAAA,MAItC,OAAO5Y,KAAK+6D,QAGLh7D,iBAAiB/I,GACxB,IAAIkxD,EAAUloD,KAAK0nD,SAASxnD,IAAIlJ,GAOhC,OALKkxD,IACJA,EAAUloD,KAAKk7D,OAAOhQ,WAAWl0D,GACjCgJ,KAAK0nD,SAAStnD,IAAIpJ,EAAMkxD,IAGlBA,EAGAnoD,gBACHC,KAAK+6D,UACJ/6D,KAAKtG,QACRsG,KAAKtG,MAAM4+D,OACXt4D,KAAKtG,MAAQ,MAEdsG,KAAK+6D,QAAU,KACf/6D,KAAK0nD,SAASlmD,SAIhBzB,UACCC,KAAK46D,kBAAkB9lD,UACnB9U,KAAK86D,iBACR96D,KAAK86D,eAAex8C,SACpBte,KAAK86D,oBAAiBjhE,GAEvBmG,KAAKi7D,gBACLj7D,KAAK2nD,eAAenmD,avDtRtB8iB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,mBAAA7D;AAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,8BAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,yDAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,6DAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,kEAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,+DAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,mDAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,uCAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,iCAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,8BAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D;AAAA,OAAA85D,EAAAj2D,OAAA,gDAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,qCAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,gDAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,6BAAA7D,MAAAmqB,OAAAtuB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAAg+D,EAAA95D,GAAA,OAAA85D,EAAAj2D,OAAA,wDAAA7D,kHwDYA,MAAa+hE,EAAbn8D,cAIkBC,KAAAm8D,gBAAkB,IAAIn+C,EAAAlG,QACtB9X,KAAAo8D,iBAAmB,IAAIp+C,EAAAlG,QACvB9X,KAAAq8D,oBAAsB,IAAIr+C,EAAAlG,QAC1B9X,KAAAs8D,gBAAkB,IAAIt+C,EAAAlG,QACtB9X,KAAAu8D,iBAAmB,IAAIv+C,EAAAlG,QAExC/X,KAAKynD,EAAexZ,EAAiBpkC,GACpC,OAAQokC,GACP,IAAK,QACJ,OAAOx1C,QAAQyB,QAAQ+F,KAAKm8D,gBAAgBpkD,KAAK,CAAEykD,UAAW5yD,EAAI,MACnE,IAAK,SACJ,OAAOpR,QAAQyB,QAAQ+F,KAAKo8D,iBAAiBrkD,KAAK,CAAEykD,UAAW5yD,EAAI,MACpE,IAAK;AACJ,OAAOpR,QAAQyB,QAAQ+F,KAAKq8D,oBAAoBtkD,KAAK,CAAEykD,UAAW5yD,EAAI,MACvE,IAAK,MACJ,OAAOpR,QAAQyB,QAAQ+F,KAAKs8D,gBAAgBvkD,KAAK,CAAEykD,UAAW5yD,EAAI,GAAIiL,IAAKjL,EAAI,MAChF,IAAK,SACJ,OAAOpR,QAAQyB,QAAQ+F,KAAKu8D,iBAAiBxkD,KAAK,CAAEykD,UAAW5yD,EAAI,GAAIilC,KAAMjlC,EAAI,GAAI6yD,MAAO7yD,EAAI,MAElG,MAAM,IAAI9K,MAAM,2BAGjBiB,OAAOynD,EAAenwC,EAAezN,GACpC,OAAQyN,GACP,IAAK,QACJ,OAAOrX,KAAKm8D,gBAAgB9kD,MAC7B,IAAK,SACJ,OAAOrX,KAAKo8D,iBAAiB/kD,MAC9B,IAAK,YACJ,OAAOrX,KAAKq8D,oBAAoBhlD,MACjC,IAAK,MACJ,OAAOrX,KAAKs8D,gBAAgBjlD,MAC7B,IAAK,SACJ,OAAOrX,KAAKu8D,iBAAiBllD,MAE/B,MAAM,IAAIvY,MAAM,4BAvClBJ,EAAAw9D,mCAAAA,EAEiBA,EAAAQ,YAAc,4BAyC/B,MAAaC,UAAwChkD,EAAAlE,WAIpD1U,YAAoBmoD,GACnB5jD,QADmBtE,KAAAkoD,QAAAA,EAIpBnoD,OAAOy8D,GACNx8D,KAAKkoD,QAAQjpD,KAAK,SAAU,CAACu9D,IAG9BI,eACC,OAAO58D,KAAKkoD,QAAQa,OAAO,UAG5BhpD,MAAMy8D,GACLx8D,KAAKkoD,QAAQjpD,KAAK,QAAS,CAACu9D,IAG7BtO,cACC,OAAOluD,KAAKkoD,QAAQa,OAAO,SAG5BhpD,cAAcy8D,EAAmB3tB,EAAc4tB,GAC9Cz8D,KAAKkoD,QAAQjpD,KAAK,SAAU,CAACu9D,EAAW3tB,EAAM4tB,IAG/CI;AACC,OAAO78D,KAAKkoD,QAAQa,OAAO,UAG5BhpD,aAAay8D,EAAmB3nD,GAC/B7U,KAAKkoD,QAAQjpD,KAAK,MAAO,CAACu9D,EAAW3nD,IAGtCioD,qBACC,OAAO98D,KAAKkoD,QAAQa,OAAO,OAG5BhpD,iBAAiBy8D,EAAmBC,GACnCz8D,KAAKkoD,QAAQjpD,KAAK,YAAa,CAACu9D,EAAWC,IAG5CM,yBACC,OAAO/8D,KAAKkoD,QAAQa,OAAO,aAG5BhpD,mCAAmCmB,EAAgBpG,GAClD,OAAOkF,KAAKkoD,QAAQjpD,KAAK,qCAAsC,CAACiC,EAAMpG,KAjDxE4D,EAAAi+D,gCAAAA,0EC1CA,SAASK,EAAqBr6B,EAAoBzU,GACjD,OAAOkV,EAAA3D,IAAI2N,OAAOlf,EAAcA,EAAY0nB,kBAAkBjT,GAAOA,GAOtE,SAASs6B,EAA2BC,EAA4BhvC,GAC/DA,EAAcA,GAA4BivC,EAAAjnB,sBAC1C,MAAMknB,EAAWF,EAAUE,SACrBC,EAAcF,EAAA7mB,+BAA8B34C,OAAA+e,OAAA/e,OAAA+e,OAAA,GAAMwgD,GAAc,CAAEE,cAAUvjE,IAAeq0B,GACjG,OAAAvwB,OAAA+e,OAAA/e,OAAA+e,OAAA,GAAY2gD,GAAgB,CAAED,SAAAA,IAG/B,SAASE,EAA2BJ,EAA4BhvC,GAC/D,OAAOA,EAAcktC,EAAA/8B,eAAe6+B,EAAWt+D,GAASA,aAAiBwkC,EAAA3D,IAAMvR,EAAYqvC,qBAAqB3+D,QAAS/E,GAAaqjE,mDAGvIx+D,EAAA8+D,2BAAA,MAOCz9D,YAAoBuxD,EAA8CmM,GAA9Cz9D,KAAAsxD,QAAAA,EAA8CtxD,KAAAy9D,kBAAAA;AACjEz9D,KAAK09D,mBAAqB1/C,EAAA5G,MAAM8B,OAAOo4C,EAAQoM,oBAAoB,GACnE19D,KAAK29D,sBAAwB3/C,EAAA5G,MAAM8B,OAAOo4C,EAAQqM,uBAAuB,GACzE39D,KAAK49D,qBAAuB5/C,EAAA5G,MAAM8B,OAAOo4C,EAAQsM,sBAAsB,GACvE59D,KAAK69D,wBAA0B7/C,EAAA5G,MAAM8B,OAAOo4C,EAAQuM,yBAAyB,GAG9E99D,OAAO2d,EAAcrG,GACpB,MAAMy+B,EAAiB91C,KAAKy9D,kBAAkB//C,GAC9C,OAAQrG,GACP,IAAK,qBAAsB,OAAOrX,KAAK09D,mBACvC,IAAK,wBAAyB,OAAO1/C,EAAA5G,MAAM3d,IAAIuG,KAAK29D,sBAAuBvnE,GAAKuH,OAAA+e,OAAA/e,OAAA+e,OAAA,GAAMtmB,GAAC,CAAE0nE,MAAO1nE,EAAE0nE,MAAQR,EAA2BlnE,EAAE0nE,MAAOhoB,GAAkB1/C,EAAE0nE,SAClK,IAAK,uBAAwB,OAAO99D,KAAK49D,qBACzC,IAAK,0BAA2B,OAAO59D,KAAK69D,wBAG7C,MAAM,IAAI/+D,MAAM,kBAGjBiB,KAAK2d,EAAcswB,EAAiB9sC,GACnC,MAAM40C,EAAyC91C,KAAKy9D,kBAAkB//C,GACtE,OAAQswB,GACP,IAAK,MAAO,OAAOhuC,KAAKsxD,QAAQyM,IAAId,EAA2B/7D,EAAK,GAAI40C,IAAiB98C,KAAK2pC,IA5CjG,SAA8BA,EAAUzU,GACvC,OAAOA,EAAcA,EAAYqvC,qBAAqB56B,GAAOA,GA2C0C46B,CAAqB56B,EAAKmT,IAC/H,IAAK,QAAS,OAAO91C,KAAKsxD,QAAQ0M,MAAMhB,EAAqB97D,EAAK,GAAI40C,GAAiB50C,EAAK,IAC5F,IAAK,UAAW,OAAOlB,KAAKsxD,QAAQ2M,QAAQjB,EAAqB97D,EAAK,GAAI40C,IAC1E,IAAK;AAAe,OAAO91C,KAAKsxD,QAAQ4M,YAAYlB,EAAqB97D,EAAK,GAAI40C,IAClF,IAAK,qBAAsB,OAAO91C,KAAKsxD,QAAQ6M,mBAAmBj9D,EAAK,IACvE,IAAK,YAAa,OAAOlB,KAAKsxD,QAAQ8M,UAAUnB,EAA2B/7D,EAAK,GAAI40C,GAAiB50C,EAAK,IAC1G,IAAK,uBAAwB,OAAOlB,KAAKsxD,QAAQ+M,qBAAqBpB,EAA2B/7D,EAAK,GAAI40C,IAC1G,IAAK,eAAgB,OAAO91C,KAAKsxD,QAAQgN,aAAap9D,EAAK,IAAIlI,KAAKulE,GAAcA,EAAW9kE,IAAIb,GAAK0kE,EAA2B1kE,EAAGk9C,KACpI,IAAK,iBAAkB,OAAO91C,KAAKsxD,QAAQkN,eAAevB,EAA2B/7D,EAAK,GAAI40C,GAAiB50C,EAAK,IAAIlI,KAAKJ,GAAK0kE,EAA2B1kE,EAAGk9C,IAChK,IAAK,sBAAuB,OAAO91C,KAAKsxD,QAAQmN,sBAGjD,MAAM,IAAI3/D,MAAM,kBAIlBJ,EAAAggE,iCAAA,MAIC3+D,YACkBmoD,GAAAloD,KAAAkoD,QAAAA,EAGlBwV,yBAAyD,OAAO19D,KAAKkoD,QAAQa,OAAO,sBACpF4U,4BAA+D,OAAO3/C,EAAA5G,MAAM3d,IAAIuG,KAAKkoD,QAAQa,OAAiC,yBAA0B3yD,GAAKuH,OAAA+e,OAAA/e,OAAA+e,OAAA,GAAMtmB,GAAC,CAAE0nE,MAAO1nE,EAAE0nE,MAAQb,EAA2B7mE,EAAE0nE,MAAO,MAAQ1nE,EAAE0nE,SACrOF,2BAA0D,OAAO59D,KAAKkoD,QAAQa,OAAO,wBACrF8U,8BAAmE,OAAO79D,KAAKkoD,QAAQa,OAAO,2BAE9FhpD,IAAIm9D;AACH,OAAO1kE,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAK,MAAO,CAACi+D,IAAYlkE,KAAK7C,GAAUitC,EAAA3D,IAAI2N,OAAsBj3C,KAGvG4J,MAAM4+D,EAAkBrsD,GACvB,OAAO9Z,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAK,QAAS,CAAC0/D,EAAarsD,KAGjEvS,QAAQ6+D,GACP,OAAOpmE,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAsB,UAAW,CAAC2/D,KAAQ5lE,KAAK8kE,GAASb,EAA2Ba,EAAO,OAG/H/9D,YAAY6+D,GACX,OAAOpmE,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAyB,cAAe,CAAC2/D,KAG9E7+D,mBAAmBm9D,GAClB,OAAO1kE,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAsB,qBAAsB,CAACi+D,KAAalkE,KAAK8kE,GAASb,EAA2Ba,EAAO,OAG/I/9D,UAAUm9D,EAA4B2B,GAAQ,GAC7C,OAAOrmE,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAK,YAAa,CAACi+D,EAAY2B,KAGpE9+D,qBAAqBm9D,GACpB,OAAO1kE,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAK,uBAAwB,CAACi+D,KAGnEn9D,aAAauS,EAA6B,MACzC,OAAO9Z,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAwB,eAAgB,CAACqT,KAC3EtZ,KAAKulE,GAAcA,EAAW9kE,IAAIyjE,GAAaD,EAA2BC,EAAW,QAGxFn9D,eAAe+9D,EAAwBvgE,GACtC,OAAO/E,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAsB,iBAAkB,CAAC6+D,EAAOvgE,KAClFvE,KAAKkkE,GAAaD,EAA2BC,EAAW,OAG3Dn9D,sBACC,OAAOvH,QAAQyB,QAAQ+F,KAAKkoD,QAAQjpD,KAAK,0BAI3CP,EAAAogE,wCAAA,MAEC/+D,YAA6BuxD,GAAAtxD,KAAAsxD,QAAAA,EAE7BvxD,OAAOkZ,EAAY5B,GAClB,OAAQA;AACP,IAAK,wBAAyB,OAAOrX,KAAKsxD,QAAQyN,sBAEnD,MAAM,IAAIjgE,MAAM,oBAAoBuY,KAGrCtX,KAAK2d,EAAcswB,EAAiB9sC,GACnC,OAAQ8sC,GACP,IAAK,6BAA8B,OAAOx1C,QAAQyB,QAAQ+F,KAAKsxD,QAAQ0N,yBACvE,IAAK,kBAAmB,OAAOh/D,KAAKsxD,QAAQ2N,gBAAgB/9D,EAAK,IACjE,IAAK,mBAAoB,OAAOlB,KAAKsxD,QAAQ4N,iBAAiBh+D,EAAK,IAEpE,MAAM,IAAIpC,MAAM,kBAIlBJ,EAAAygE,uCAAA,MAMCp/D,YAA6BmoD,GAAAloD,KAAAkoD,QAAAA,EAF7B6W,4BAAgH,OAAO/+D,KAAKkoD,QAAQa,OAAO,yBAK3IhpD,6BACC,OAAOC,KAAKkoD,QAAQjpD,KAAK,8BAG1Bc,gBAAgBm9D,GACf,OAAOl9D,KAAKkoD,QAAQjpD,KAAK,kBAAmB,CAACi+D,IAG9Cn9D,iBAAiBm9D,GAChB,OAAOl9D,KAAKkoD,QAAQjpD,KAAK,mBAAoB,CAACi+D,IAG/Cn9D,wBACC,MAAM,IAAIjB,MAAM,+HCxKlB,MAAMsgE,EAAW,mBAMjB1gE,EAAA2gE,iBAAA,SAAiCjC,EAA8BphE;AAe9D,OAAOo/D,EAAA/8B,eAAe++B,EAdLx+D,IAChB,GAAqB,iBAAVA,EACV,OAGD,MAAMyyB,EAAQ+tC,EAASxsC,KAAKh0B,GAE5B,OAAKyyB,EAIEr1B,EAAaq1B,EAAM,KAAOzyB,OAJjC,iJCLF,MAAa0gE,UAA4B3mD,EAAAlE,WAIxC1U,YACSw/D,EACAC,GAERl7D,QAHQtE,KAAAu/D,mBAAAA,EACAv/D,KAAAw/D,WAAAA,EAJDx/D,KAAAy/D,iBAAkC,IAAI1zB,EAAAxqB,QAAQ,GAStDxhB,oBAAoBm9D,GACnB,MAAMwC,EAAS1/D,KAAK2/D,YAAYzC,EAAW,aAO3C,OANIwC,IACH1/D,KAAKw/D,WAAWI,KAAK1C,EAAU2C,WAAWpmD,GAAIyjD,EAAUE,SAAS0C,QAAS,uCACpE9/D,KAAKy/D,iBAAiBjgD,MAAM,IACjCxf,KAAK+/D,iBAAiBL,EAAOA,OAAQ,YAAaA,EAAOx+D,MAAM,EAAMg8D,GACnElkE,KAAK,IAAMgH,KAAKw/D,WAAWI,KAAK1C,EAAU2C,WAAWpmD,GAAIyjD,EAAUE,SAAS0C,QAAS,0CAA2ChnE,GAAOkH,KAAKw/D,WAAW7jE,MAAMuhE,EAAU2C,WAAWpmD,GAAIyjD,EAAUE,SAAS0C,QAAS,wCAAwChnE,QAEvPoqD,EAAAxqD,OAAOsH,KAAKggE,wBAAwB9C,IAAYlkE,UAAKa,EAAWjB,GAAKoH,KAAKw/D,WAAW7jE,MAAM,8CAA+C/C,IAG1ImH,YAAYm9D,EAA4B5qD,GAC/C,MAAM2tD,EAAY,UAAU3tD;CAC5B,GAAI4qD,EAAUvkE,SAASmnC,SAAW6P,EAAArC,QAAQ/0C,MAAQ2kE,EAAUE,UAAYF,EAAUE,SAAkB,SAAyD,iBAA7CF,EAAUE,SAAkB,QAAE6C,GAAyB,CACtK,MAAMP,EAAkBxC,EAAUE,SAAkB,QAAE6C,GAAY97D,MAAM,KACxE,OAAIu7D,EAAOppE,OAAS,GAAmB,SAAdopE,EAAO,KAAkBA,EAAO,IACxD1/D,KAAKw/D,WAAWx+D,KAAKk8D,EAAU2C,WAAWpmD,GAAIyjD,EAAUE,SAAS0C,QAAS,GAAGG,6BACtE,MAED,CAAEP,OAAQplC,EAAA3gC,KAAKujE,EAAUvkE,SAASunC,OAAQw/B,EAAO,IAAKx+D,KAAMw+D,EAAO1nE,MAAM,IAAM,IAEvF,OAAO,KAGA+H,iBAAiBmgE,EAAuBC,EAAuBj/D,EAAgB2e,EAAkBq9C,GACxG,OAAO,IAAI1kE,QAAc,CAACC,EAAGG,KAE5B,MAAMwnE,EAA4BpgE,KAAK6F,MAAMq6D,EAAeC,EAAej/D,EAAMg8D,GACjF,IAAIr6C,EAEJ,MAAMw9C,EAAU1kE,IACXknB,IACH1gB,aAAa0gB,GACbA,EAAiB,MAEdlnB,EACH/C,EAAE+C,GAEFlD,OAAEoB,IAKJumE,EAA0BzmD,GAAG,QAAU7gB,IACtCunE,EAAOC,EAAA5L,eAAe57D,IAAQ,aAI/BsnE,EAA0BzmD,GAAG,OAAQ,CAAC5f,EAAc6e,KACnDynD,EAAOtmE,EAAO,QAAQomE,8BAA0CpmE,SAASF,KAGtEgmB,IAEHgD,EAAiBzgB,WAAW,KAC3BygB,EAAiB,KACjBu9C,EAA0B9H,OAC1B1/D,EAAE,cACA,QAKEmH,MAAMwgE,EAAuBJ,EAAuBj/D,EAAgBg8D,GAC3E,MAAMsD,EAAO,CACZC,QAAQ,EACRlF,cAAU1hE,GAEL6mE,EAA4B7kB,EAAA6f,KAAK6E,EAAe,CAAC,yBAAyBJ,OAAoBj/D,GAAOs/D,GAI3GE,EAA0B5kB,OAAQ6kB,YAAY,QAC9CD,EAA0B5J,OAAQ6J,YAAY,QAE9C,MAAMC,EAAW5iD,EAAA5G,MAAMmC,qBAA6BmnD,EAA0B5kB,OAAS,QACjF+kB,EAAW7iD,EAAA5G,MAAMmC,qBAA6BmnD,EAA0B5J,OAAS;CAGvF8J,EAASzmE,GAAQ6F,KAAKw/D,WAAWI,KAAK1C,EAAU2C,WAAWpmD,GAAIyjD,EAAUE,SAAS0C,QAAS,QAAQK,IAAiBhmE,IACpH0mE,EAAS1mE,GAAQ6F,KAAKw/D,WAAW7jE,MAAMuhE,EAAU2C,WAAWpmD,GAAIyjD,EAAUE,SAAS0C,QAAS,QAAQK,IAAiBhmE,IAErH,MAAM2mE,EAAW9iD,EAAA5G,MAAMyB,IACtBmF,EAAA5G,MAAM3d,IAAImnE,EAAU54D,IAAK,CAAG7N,KAAM,KAAK6N,IAAKkkB,OAAQ,CAAC,OACrDlO,EAAA5G,MAAM3d,IAAIonE,EAAU74D,IAAK,CAAG7N,KAAM,KAAK6N,IAAKkkB,OAAQ,CAAC,kBAgBtD,OAb0BlO,EAAA5G,MAAMvV,SAAiBi/D,EAAU,CAAC32D,EAAGnC,IACvDmC,EACJ,CAAEhQ,KAAMgQ,EAAEhQ,KAAO6N,EAAE7N,KAAM+xB,OAAQ,IAAI/hB,EAAE+hB,UAAWlkB,EAAEkkB,SACpD,CAAE/xB,KAAM6N,EAAE7N,KAAM+xB,OAAQlkB,EAAEkkB,QAC3B,IAGH60C,CAAkB5mE,IACjBvD,QAAQ06B,MAAM4rC,EAAU2C,WAAWpmD,IACnC7iB,QAAQie,IAAI1a,EAAKA,QAASA,EAAK+xB,QAC/Bt1B,QAAQoqE,aAGFN,EAGA3gE,wBAAwBm9D,GAC/B,OAAO5iC,EAAA3gC,KAAKqG,KAAKu/D,mBAAmB0B,kBAAmB/D,EAAU2C,WAAWpmD,GAAGkQ,gBAnHjFjrB,EAAA4gE,oBAAAA,8GCYA,MAAM4B,EAAiB,mDAEvB,SAAgBC,EAAkBrB,GAEjC,MAAoB,OADpBA,EAAUA,EAAQzxC,SACS6yC,EAAe/uC,KAAK2tC,GAGhD,SAAgBsB,EAAatB,GAC5B,IAAKqB,EAAkBrB,GACtB,OAAO,KAKR,GAAgB,OAFhBA,EAAUA,EAAQzxC,QAGjB,MAAO,CACNgzC,UAAU,EACVC,kBAAkB,EAClBC,UAAW,EACXC,gBAAgB,EAChBC,UAAW,EACXC,gBAAgB,EAChBC,UAAW;AACXC,gBAAgB,EAChBC,WAAY,MAId,IAAIt7D,EAAIu5D,EAAQzuC,MAAM6vC,GACtB,OAAK36D,EAGE,CACN86D,SAAmB,MAAT96D,EAAE,GACZ+6D,iBAA2B,OAAT/6D,EAAE,GACpBg7D,UAAoB,MAATh7D,EAAE,GAAa,EAAIgrB,SAAShrB,EAAE,GAAI,IAC7Ci7D,eAA0B,MAATj7D,EAAE,GACnBk7D,UAAoB,MAATl7D,EAAE,GAAa,EAAIgrB,SAAShrB,EAAE,GAAI,IAC7Cm7D,eAA0B,MAATn7D,EAAE,GACnBo7D,UAAoB,MAATp7D,EAAE,GAAa,EAAIgrB,SAAShrB,EAAE,GAAI,IAC7Cq7D,eAA0B,MAATr7D,EAAE,GACnBs7D,WAAYt7D,EAAE,IAAM,MAXb,KAeT,SAAgBu7D,EAAiBhC,GAChC,IAAKA,EACJ,OAAO,KAGR,IAAIyB,EAAYzB,EAAQyB,UACvBC,EAAiB1B,EAAQ0B,eACzBC,EAAY3B,EAAQ2B,UACpBC,EAAiB5B,EAAQ4B,eACzBC,EAAY7B,EAAQ6B,UACpBC,EAAiB9B,EAAQ8B,eAW1B,OATI9B,EAAQuB,WACO,IAAdE,EACHK,GAAiB,GAEjBF,GAAiB,EACjBE,GAAiB,IAIZ,CACNL,UAAWA,EACXC,eAAgBA,EAChBC,UAAWA,EACXC,eAAgBA,EAChBC,UAAWA,EACXC,eAAgBA,EAChBG,UAAWjC,EAAQwB,kBAIrB,SAAgBU,EAAeC,EAAuCC,GACrE,IAAIpC,EAOAqC,EAOJ,GAZCrC,EADuB,iBAAbmC,EACAH,EAAiBV,EAAaa,IAE9BA,EAKVE,EAD8B,iBAApBD,EACOJ,EAAiBV,EAAac,IAE9BA,GAGbpC,IAAYqC,EAChB,OAAO,EAGR,IAAIZ,EAAYzB,EAAQyB,UACpBE,EAAY3B,EAAQ2B,UACpBE,EAAY7B,EAAQ6B,UAEpBS,EAAmBD,EAAeZ,UAClCc,EAAmBF,EAAeV,UAClCa,EAAmBH,EAAeR,UAElCH,EAAiBW,EAAeX,eAChCE,EAAiBS,EAAeT,eAChCE,EAAiBO,EAAeP,eAEpC,OAAIO,EAAeJ,UACdR,EAAYa,KAIZb,EAAYa,KAIZX,EAAYY,KAIZZ,EAAYY,IAITV,GAAaW,IAIH,IAAdf,GAAwC,IAArBa,GAA4BZ,GAAmBE,GAAmBE,IACxFQ,EAAmB,EACnBC,EAAmB,EACnBC,EAAmB,EACnBd,GAAiB,EACjBE,GAAiB,EACjBE,GAAiB;EAGdL,EAAYa,KAKZb,EAAYa,GAENZ,IAKNC,EAAYY,KAKZZ,EAAYY,GAENX,IAKNC,EAAYW,OAKZX,EAAYW,KAENV,MA8BX,SAAgBW,EAAeC,EAAwBC,EAA0BC,EAAoB,IAEpG,IAAIP,EAAiBL,EAAiBV,EAAaqB,IACnD,IAAKN,EAEJ,OADAO,EAAQzrE,KAAKg9D,EAAII,SAAS,EAAiB,KAA+FoO,KACnI,EAMR,GAAiC,IAA7BN,EAAeZ,WAElB,IAAKY,EAAeX,iBAAmBW,EAAeT,eAErD,OADAgB,EAAQzrE,KAAKg9D,EAAII,SAAS,EAAuB,KAA4MoO,KACtP,OAIR,IAAKN,EAAeX,eAEnB,OADAkB,EAAQzrE,KAAKg9D,EAAII,SAAS,EAAuB,KAAuMoO,KACjP,EAIT,QAAKT,EAAeQ,EAAgBL,KACnCO,EAAQzrE,KAAKg9D,EAAII,SAAS,EAAmB,KAAuEmO,EAAgBC,KAC7H,GAhOT/jE,EAAAyiE,kBAAAA,EAKAziE,EAAA0iE,aAAAA,EAsCA1iE,EAAAojE,iBAAAA,EAgCApjE,EAAAsjE,eAAAA,EA2GAtjE,EAAAikE,wBAAA,SAAwC7C,EAAiB8C,EAA6CF,GAErG,SAAIE,EAAcC,gBAA2C,IAAvBD,EAAcE,OAK7CP,EAAezC,EAAS8C,EAAcG,QAAQv1B,OAAQk1B,IAG9DhkE,EAAAskE,cAAA,SAA8BC,EAAgBnD,GAE7C,MAAkB,MAAXmD,GAAkBV,EAAezC,EAASmD,IAGlDvkE,EAAA6jE,eAAAA,6GC3Na7jE,EAAAwkE,sBAAwB,mBACxBxkE,EAAAykE,yBAA2B,OAC3BzkE,EAAA0kE,4BAA8B,UAwH3C1kE,EAAA2kE,uBAAA,SAAuCpuD,GACtC,OAAOA,GACc,iBAAVA,GACa,iBAAbA,EAAMwE,MACXxE,EAAMmoC,MAA8B,iBAAfnoC,EAAMmoC,OA+BlC,SAAkBkmB,GACjBA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,GAAA;CAFD,CAAkB5kE,EAAA4kE,gBAAA5kE,EAAA4kE,cAAa,KA4B/B5kE,EAAA6kE,oBAAA,MAICxjE,YAAYnB,GACXoB,KAAKpB,MAAQA,EACboB,KAAKwjE,OAAS5kE,EAAM+qB,cAGd5pB,cAAcmF,EAAoDgC,GACxE,GAAI,MAAOhC,EACV,OAAO,MAAQgC,EAEhB,GAAI,MAAOA,EACV,OAAO,EAER,GAAiB,iBAANhC,GAA+B,iBAANgC,EAAgB,CAGnD,IAAIu8D,EAAuB,iBAANv+D,EAAiBA,EAAIA,EAAEtG,MACxC8kE,EAAuB,iBAANx8D,EAAiBA,EAAIA,EAAEtI,MAC5C,OAAO05B,EAAQ/E,iBAAiBkwC,EAAQC,GAIzC,OAAQx+D,EAAEs+D,SAAWt8D,EAAEs8D,OAMjBzjE,aAAa0Z,GACnB,MAAkB,iBAAPA,EACHA,EAAGkQ,cAEJlQ,EAAG+pD,SAaZ9kE,EAAAilE,wBAAA,SAAwCvG,GACvC,SAAOA,EAASwG,cAAexG,EAASwG,YAAYC,gBAAgBzG,EAASwG,YAAYC,cAAcvtE,OAAS,kEC1OjH,SAAgBwtE,EAAkB5+D,EAAyBgC,GAC1D,OAAIhC,EAAEk4C,MAAQl2C,EAAEk2C,KACRl4C,EAAEk4C,OAASl2C,EAAEk2C,KAEjBl4C,EAAEuU,KAAOvS,EAAEuS,IAG0B,IAAlCmgB,EAAAtG,kBAAkBpuB,EAAEuU,GAAIvS,EAAEuS,qDAPlC/a,EAAAolE,kBAAAA,EAUA,MAAaC,EACZhkE,YACU8/D,EACAC,GADA9/D,KAAA6/D,WAAAA,EACA7/D,KAAA8/D,QAAAA,EAGV//D,MACC,MAAO,GAAGC,KAAK6/D,WAAWpmD,MAAMzZ,KAAK8/D,UAGtC//D,OAAOiI,GACN,OAAMA,aAAa+7D,IAGZD,EAAkB9jE,KAAK6/D,WAAY73D,EAAE63D,aAAe7/D,KAAK8/D,UAAY93D,EAAE83D;AAdhFphE,EAAAqlE,+BAAAA,EAkBArlE,EAAAslE,0BAAA,SAA0CvqD,GACzC,OAAOA,EAAGwqD,qBAGXvlE,EAAAwlE,sBAAA,SAAsCC,EAAmBntE,GACxD,MAAO,GAAGmtE,EAAUF,uBAAuBjtE,EAAKitE,uBAGjDvlE,EAAA0lE,iBAAA,SAAoC7F,EAAiB8F,GACpD,MAAMC,EAAqB,GACrBC,EAAarH,IAClB,IAAK,MAAM5rC,KAASgzC,EACnB,GAAIhzC,EAAM4a,KAAKtzC,GAAKkrE,EAAkBO,EAAuBzrE,GAAIyrE,EAAuBnH,KACvF,OAAO5rC,EAGT,OAAO,MAER,IAAK,MAAM4rC,KAAaqB,EAAY,CACnC,MAAMjtC,EAAQizC,EAAUrH,GACpB5rC,EACHA,EAAMr6B,KAAKimE,GAEXoH,EAAYrtE,KAAK,CAACimE,IAGpB,OAAOoH,GAGR5lE,EAAA8lE,+BAAA,SAA+CtH,GAC9C,MAAO,CACNzjD,GAAIyjD,EAAU2C,WAAWpmD,GACzBziB,KAAMkmE,EAAUE,SAASpmE,KACzBytE,UAAW,KACXC,YAAaxH,EAAU3/D,SAAW2/D,EAAU3/D,SAASmnE,YAAc,KACnEC,cAAezH,EAAUE,SAAS+G,UAClCS,qBAAsB1H,EAAU3/D,SAAW2/D,EAAU3/D,SAASqnE,qBAAuB,KACrFC,aAAc3H,EAAUE,SAAS0H,uBAAyB5H,EAAUE,SAAS0H,sBAAsBxuE,OAAS,IAmB9GoI,EAAAqmE,iCAAA,SAAiD7H,GAChD,OAAAv/D,OAAA+e,OAAA,CACCjD,GAAIyjD,EAAU2C,WAAWpmD,GACzBziB,KAAMkmE,EAAUlmE,KAChBytE,UAAWvH,EAAU2C,WAAWziB,KAChCsnB,YAAaxH,EAAUwH,YACvBC,cAAezH,EAAUiH,UACzBS,qBAAsB1H,EAAU0H;AAChCC,gBAAiB3H,EAAU8H,WAAWH,cAAgB3H,EAAU8H,WAAWH,aAAavuE,OAAS,IAC9F4mE,EAAU+H,gBAIFvmE,EAAAwmE,cAAgB,IAAIC,EAAA5B,oBAAoB,uBAErD7kE,EAAA0mE,0BAAA,SAA0CC,GACzC,MAAMlvE,EAAS,IAAIgK,IAEnB,IAAK,MAAM+8D,KAAamI,EACnBnI,EAAUoI,WACbnvE,EAAOkK,IAAI68D,EAAUzjD,GAAGA,IAI1B,OAAOtjB,GAeRuI,EAAA6mE,uBAAA,SAAuCC,EAAiBC,GACvD,MAAMC,EAA8BvqE,KAAKC,MAAMoqE,GAC/C,OAAKC,EAIEC,EAAOr9D,OAAOghB,IAAM,IAAA1U,EAAAgxD,EAAC,OAAiD,KAAxB,QAAzBA,EAAgB,QAAhBhxD,EAAA0U,EAAIu8C,oBAAY,IAAAjxD,OAAA,EAAAA,EAAEhT,eAAO,IAAAgkE,OAAA,EAAAA,EAAA1mE,KAAA0V,EAAG8wD,MAHhDC,4HC3HT,MAAaG,UAAgCltD,EAAAlE,WAI5C1U,YACkBw/D,EACjBuG,GAEAxhE,QAHiBtE,KAAAu/D,mBAAAA,EAHVv/D,KAAA+lE,wBAA0BzrC,EAAA3gC,KAAKqG,KAAKu/D,mBAAmB/kE,aAAc2qE,EAAAjC,sBAAuBiC,EAAAhC,0BAOnGnjE,KAAKilD,UAAU6gB,EAA4BnI,sBAAsB/kE,GAAKoH,KAAK29D,sBAAsB/kE,KACjGoH,KAAKilD,UAAU6gB,EAA4BjI,wBAAwBjlE,GAAKoH,KAAKgmE,wBAAwBptE,KAG9FmH,sBAAsBnH,GACxBA,EAAE+C,OACNqE,KAAKimE;AAIClmE,wBAAwBnH,GAC1BA,EAAE+C,OACNqE,KAAKimE,aAIPlmE,aACCmmE,EAAIxtE,OAAOsH,KAAK+lE,wBAAyBG,EAAIzoB,WAAWoF,MAAM7pD,KAAK,OAAW,SA1BhF0F,EAAAmnE,wBAAAA,yGCFAnnE,EAAAynE,eAAA,MAECpmE,YAAoBuxD,GAAAtxD,KAAAsxD,QAAAA,EAEpBvxD,OAAOkZ,EAAY5B,EAAezN,GACjC,OAAQyN,GACP,IAAK,QAAS,OAAOrX,KAAKsxD,QAAQpN,MAAMt6C,GACxC,IAAK,eAAgB,OAAO5J,KAAKsxD,QAAQ8U,aAG1C,MAAM,IAAItnE,MAAM,oBAAoBuY,KAGrCtX,KAAKkZ,EAAY+0B,EAAiBpkC,GACjC,OAAQokC,GACP,IAAK,WAAY,OAAOhuC,KAAKsxD,QAAQ+U,SAASz8D,GAC9C,IAAK,oBAAqB,OAAO5J,KAAKsxD,QAAQgV,kBAAkB18D,GAChE,IAAK,OAAQ,OAAO5J,KAAKsxD,QAAQiV,OAGlC,MAAM,IAAIznE,MAAM,mBAAmBkvC,OAIrCtvC,EAAA8nE,qBAAA,MAECzmE,YAAoBmoD,GAAAloD,KAAAkoD,QAAAA,EAEpBnoD,MAAMkQ,GACL,OAAOjQ,KAAKkoD,QAAQa,OAAO,QAAS94C,GAGrClQ,kBAAkB0mE,GACjB,OAAOzmE,KAAKkoD,QAAQjpD,KAAK,oBAAqBwnE,GAG/C1mE,SAAS2mE,GACR,OAAO1mE,KAAKkoD,QAAQjpD,KAAK,WAAYynE,GAGtCN,mBACC,OAAOpmE,KAAKkoD,QAAQa,OAAO,gBAG5BhpD;AACC,OAAOC,KAAKkoD,QAAQjpD,KAAK,0IC1C3B,MAAa0nE,UAAoBhuD,EAAAlE,WAQhC1U,YACSqzC,EACAwzB,EACAR,EACAS,GAERviE,QALQtE,KAAAozC,QAAAA,EACApzC,KAAA4mE,cAAAA,EACA5mE,KAAAomE,aAAAA,EACApmE,KAAA6mE,eAAAA,EAIR7mE,KAAK8mE,YAAa,EAClB9mE,KAAK+mE,eAAiB,EAEtB/mE,KAAKgnE,gBAGEjnE,gBACP,MAAMm7D,EAASl7D,KAAKilD,UAAU,IAAIgiB,EAAA5Y,OACjC/Q,EAAAha,qBAAqBG,EAAS,kBAC9B,CACCo4B,WAAY,sBACZ36D,KAAM,CAAC,yBACPpG,IAAK,CACJosE,eAAgB,iDAChBC,aAAc,OACdC,gBAAiB,WAKpBpnE,KAAKilD,UAAUiW,EAAOL,iBAAiB,KAGjC76D,KAAK8mE,aACL9mE,KAAK+mE,gBAAkBJ,EAAYU,cACtCrnE,KAAKrE,MAAM,qDACXqE,KAAK+mE,iBACL/mE,KAAKgnE,iBAELhnE,KAAKrE,MAAM,oGAMd,MAAMusD,EAAUoG,EAAAhD,mBAAmB4P,EAAOhQ,WAAW;CACrDlrD,KAAKsxD,QAAU,IAAIgW,EAAAd,qBAAqBte,GAExCloD,KAAKsxD,QAAQgV,kBAAkBtmE,KAAK6mE,gBAGpC7mE,KAAKilD,UAAUjlD,KAAKsxD,QAAQpN,MADZ,GACDlkD,CAA4BpH,IAAMoH,KAAK8mE,YAAc9mE,KAAK4mE,cAAchuE,KAEvFoH,KAAKilD,UAAUjlD,KAAKsxD,QAAQ8U,aAAa7/D,GAAKvG,KAAKomE,aAAa7/D,KAGhEvG,KAAKunE,WAAWvnE,KAAKozC,SAGtBrzC,kBAAkB8mE,GACjB7mE,KAAK6mE,eAAiBA,GACjB7mE,KAAK8mE,YAAc9mE,KAAKsxD,SAC5BtxD,KAAKsxD,QAAQgV,kBAAkBO,GAIjC9mE,MAAMlB,GACLmB,KAAKomE,aAAa,CAAE9zD,KAAM,QAASzT,QAAS,yBAAyBA,MAGtEkB,WAAWqzC,GACVpzC,KAAKozC,QAAUA,EAEXpzC,KAAKsxD,SACRtxD,KAAKsxD,QAAQ+U,SAASjzB,GAIxBrzC,UACCC,KAAK8mE,YAAa,EAElBxiE,MAAMwQ,WAvFRpW,EAAAioE,YAAAA,EAEyBA,EAAAU,aAAe,yGCLxC3oE,EAAAynE,eAAA,MAECpmE,YAAoBuxD,GAAAtxD,KAAAsxD,QAAAA,EAEpBvxD,OAAOkZ,EAAY5B,EAAezN,GACjC,OAAQyN,GACP,IAAK,QAAS,OAAOrX,KAAKsxD,QAAQpN,MAAMt6C,GACxC,IAAK,eAAgB,OAAO5J,KAAKsxD,QAAQ8U,aAG1C,MAAM,IAAItnE,MAAM,oBAAoBuY,KAGrCtX,KAAKkZ,EAAY+0B,EAAiBpkC,GACjC,OAAQokC,GACP,IAAK,WAAY,OAAOhuC,KAAKsxD,QAAQ+U,SAASz8D,GAC9C,IAAK;AAAqB,OAAO5J,KAAKsxD,QAAQgV,kBAAkB18D,GAChE,IAAK,OAAQ,OAAO5J,KAAKsxD,QAAQiV,OAGlC,MAAM,IAAIznE,MAAM,mBAAmBkvC,OAIrCtvC,EAAA8nE,qBAAA,MAECzmE,YAAoBmoD,GAAAloD,KAAAkoD,QAAAA,EAEpBnoD,MAAMkQ,GACL,OAAOjQ,KAAKkoD,QAAQa,OAAO,QAAS94C,GAGrClQ,kBAAkB0mE,GACjB,OAAOzmE,KAAKkoD,QAAQjpD,KAAK,oBAAqBwnE,GAG/CL,mBACC,OAAOpmE,KAAKkoD,QAAQa,OAAO,gBAG5BhpD,SAAS2mE,GACR,OAAO1mE,KAAKkoD,QAAQjpD,KAAK,WAAYynE,GAGtC3mE,OACC,OAAOC,KAAKkoD,QAAQjpD,KAAK,0IC1C3B,MAAa0nE,UAAoBhuD,EAAAlE,WAOhC1U,YACSqzC,EACAwzB,EACAR,EACAS,EACAW,EAAkC,IAE1CljE,QANQtE,KAAAozC,QAAAA,EACApzC,KAAA4mE,cAAAA,EACA5mE,KAAAomE,aAAAA,EACApmE,KAAA6mE,eAAAA,EACA7mE,KAAAwnE,eAAAA,EAIRxnE,KAAK8mE,YAAa,EAClB9mE,KAAK+mE,eAAiB,EAEtB/mE,KAAKgnE,gBAGEjnE,gBACP,MAAMm7D,EAASl7D,KAAKilD,UAAU,IAAIgiB,EAAA5Y,OACjC/Q,EAAAha,qBAAqBG,EAAS,kBAC9B,CACCo4B,WAAY,0BACZ36D,KAAM,CAAC,yBACPpG,IAAK;AACJosE,eAAgB,iDAChBC,aAAc,OACdC,gBAAiB,WAKpBpnE,KAAKilD,UAAUiW,EAAOL,iBAAiB,KAGjC76D,KAAK8mE,aACL9mE,KAAK+mE,gBAAkBJ,EAAYU,cACtCrnE,KAAKrE,MAAM,qDACXqE,KAAK+mE,iBACL/mE,KAAKgnE,iBAELhnE,KAAKrE,MAAM,oGAMd,MAAMusD,EAAUoG,EAAAhD,mBAAmB4P,EAAOhQ,WAAW,YACrDlrD,KAAKsxD,QAAU,IAAIgW,EAAAd,qBAAqBte,GAExCloD,KAAKsxD,QAAQgV,kBAAkBtmE,KAAK6mE,gBAEpC7mE,KAAKilD,UAAUjlD,KAAKsxD,QAAQpN,MAAMlkD,KAAKwnE,eAAxBxnE,CAAwCpH,IAAMoH,KAAK8mE,YAAc9mE,KAAK4mE,cAAchuE,KAEnGoH,KAAKilD,UAAUjlD,KAAKsxD,QAAQ8U,aAAa7/D,GAAKvG,KAAKomE,aAAa7/D,KAGhEvG,KAAKsxD,QAAQ+U,SAASrmE,KAAKozC,SAG5BrzC,MAAMlB,GACLmB,KAAKomE,aAAa,CAAE9zD,KAAM,QAASzT,QAAS,6BAA6BA,MAG1EkB,kBAAkB8mE,GACjB7mE,KAAK6mE,eAAiBA,EAElB7mE,KAAKsxD,SACRtxD,KAAKsxD,QAAQgV,kBAAkBO,GAIjC9mE,WAAWqzC,GACVpzC,KAAKozC,QAAUA,EAEXpzC,KAAKsxD,SACRtxD,KAAKsxD,QAAQ+U,SAASjzB;AAIxBrzC,UACCC,KAAK8mE,YAAa,EAElBxiE,MAAMwQ,WAvFRpW,EAAAioE,YAAAA,EACyBA,EAAAU,aAAe,6HCFxC,MAAaI,EAWZ1nE,YACS2nE,EACRC,EACQC,EACAC,EACAhB,GAJA7mE,KAAA0nE,cAAAA,EAEA1nE,KAAA4nE,cAAAA,EACA5nE,KAAA6nE,YAAAA,EACA7nE,KAAA6mE,eAAAA,EAER7mE,KAAK+mE,eAAiB,EAElBr+D,MAAMC,QAAQg/D,GACjB3nE,KAAK2nE,QAAUA,EAAQluE,IAAIrD,GAAK0xE,EAAK1sE,MAAMhF,IAE3C4J,KAAK2nE,QAAU,GAIZ3nE,KAAK6mE,gBACR7mE,KAAK6U,IAAI,mBAAmB6yD,KAG7B1nE,KAAK+nE,eAGEhoE,eACP,MAAMmB,EAAO,CAAClB,KAAK0nE,eACf1nE,KAAK6mE,gBACR3lE,EAAKjK,KAAK,YAGX+I,KAAKmY,OAAS0+C,EAAGiB,MAAMxa,EAAAha,qBAAqBG,EAAS,uDAAwDviC,GAE7G,MAAM04D,EAAoB,IAAIoO,EAAQ9wB,YAGtCl3C,KAAKmY,OAAO2jC,OAAQniC,GAAG,OAASxf,IAG/B,MAAM8tE,EAA+B,GACrCrO,EAAkB3sC,MAAM9yB,GAAMkF,QAASilC,IACtC,MAAM4jC,EAAa5jC,EAAKngC,MAAM,KAC9B,GAA0B,IAAtB+jE,EAAW5xE,OAAc,CAC5B,MAAM6xE,EAAa3lE,OAAO0lE,EAAW,IAC/B1kC,EAAe0kC,EAAW,GAGhC,GAAIC,GAAc,GAAKA,EAAa,EAAG,CAGtC,GAAInoE,KAAK2nE,SAAW3nE,KAAK2nE,QAAQz7B,KAAKk8B,GAAUA,EAAO5kC,IAKtD,YAJIxjC,KAAK6mE,gBACR7mE,KAAK6U,IAAI2uB,IAOXykC,EAAUhxE,KAAK,CACdqb,KAAMm1D,EAA+BY,cAAcF,GACnDhwE,KAAMqrC,SAMPxjC,KAAK6U,IAAIqzD,EAAW;AAMnBD,EAAU3xE,OAAS,GACtB0J,KAAK4nE,cAAcK,KAKrBjoE,KAAKmY,OAAOwB,GAAG,QAAUhe,GAAiBqE,KAAK+Q,QAAQpV,IACvDqE,KAAKmY,OAAO2+C,OAAQn9C,GAAG,OAASxf,GAAiB6F,KAAK+Q,QAAQ5W,IAG9D6F,KAAKmY,OAAOwB,GAAG,OAAQ,CAAC5f,EAAc6e,IAAmB5Y,KAAKi8D,OAAOliE,EAAM6e,IAGpE7Y,QAAQpE,GACfqE,KAAKrE,MAAM,kBAAoBA,EAAM8e,YAG9B1a,OAAOhG,EAAc6e,GACxB5Y,KAAKmY,SACRnY,KAAKrE,MAAM,kCAAkC5B,cAAiB6e,MAE1D5Y,KAAK+mE,gBAAkBU,EAA+BJ,cACzDrnE,KAAKrE,MAAM,yBACXqE,KAAK+mE,iBACL/mE,KAAK+nE,gBAEL/nE,KAAKrE,MAAM,yGAKNoE,MAAMlB,GACbmB,KAAK6nE,YAAY,CAAEv1D,KAAM,QAASzT,QAAS,uBAAuBA,MAG3DkB,IAAIlB,GACXmB,KAAK6nE,YAAY,CAAEv1D,KAAM,QAASzT,QAAS,uBAAuBA,MAG5DkB,UACFC,KAAKmY,SACRnY,KAAKmY,OAAOmgD,OACZt4D,KAAKmY,YAASte,IA5HjB6E,EAAA+oE,+BAAAA,EAEyBA,EAAAJ,aAAe,EAExBI,EAAAY,cAAkC,CAAA,EAAA,EAAA,yHCLlD3pE,EAAAioE,YAAA,MAKC5mE,YACCqzC,EACQwzB,EACAR,EACAS,GAFA7mE,KAAA4mE,cAAAA;AACA5mE,KAAAomE,aAAAA,EACApmE,KAAA6mE,eAAAA,EAND7mE,KAAAsxD,aAAsDz3D,EAQ7DmG,KAAKsoE,OAASl1B,EAAQ,GAEmB,IAArCpzC,KAAKsoE,OAAOnwE,KAAKwJ,QAAQ,SAAiBi4B,EAAA9H,SAAS9xB,KAAKsoE,OAAOnwE,KAAMmiC,EAAA5O,MAAMhZ,OAK9E1S,KAAKsoE,OAAOnwE,KAAOyhC,EAAA5K,MAAMhvB,KAAKsoE,OAAOnwE,KAAMmiC,EAAA5O,MAAMhZ,MAGlD1S,KAAKsxD,QAAUtxD,KAAKgnE,gBAGrBF,iBACC,OAAQ9mE,KAAKsxD,QAGNvxD,gBACP,OAAO,IAAIwoE,EAAAd,+BACVznE,KAAKsoE,OAAOnwE,KACZ6H,KAAKsoE,OAAOE,SACZ1vD,GAAU9Y,KAAKyoE,aAAa3vD,GAC5Bja,GAAWmB,KAAKomE,aAAavnE,GAC7BmB,KAAK6mE,gBAIP9mE,kBAAkB8mE,GACjB7mE,KAAK6mE,eAAiBA,EAClB7mE,KAAKsxD,UACRtxD,KAAKsxD,QAAQx8C,UACb9U,KAAKsxD,QAAUtxD,KAAKgnE,iBAIdjnE,aAAa+Y,GAChB9Y,KAAK8mE,YAKLhuD,EAAOxiB,OAAS,GACnB0J,KAAK4mE,cAAc9tD,GAIrB/Y,UACKC,KAAKsxD,UACRtxD,KAAKsxD,QAAQx8C,UACb9U,KAAKsxD,aAAUz3D,2GChElB,MAAa6uE,EAMZ3oE,YAAY4oE,EAAiCC,EAAyB,GAAIC,GAAwC,GACjH7oE,KAAK2oE,KAAOA,EACZ3oE,KAAK4oE,gBAAkBA,EACvB5oE,KAAK6oE,6BAA+BA,GATtCnqE,EAAAgqE,eAAAA,EAqEahqE,EAAAoqE,qBAAuC,CAAIH,KAAcC,IAC9D,IAAIF,EAAkBC,EAAMC;8GCvDpClqE,EAAAqqE,MAAA,MAIChpE,YAAoBipE,GAAAhpE,KAAAgpE,QAAAA,EAFZhpE,KAAAipE,OAAqCtrE,OAAOK,OAAO,MAM3D+B,QACC,MAAMyrB,EAAiB,GAMvB,OALA09C,EAAA7pE,QAAQW,KAAKipE,OAAQvlC,IAChBlF,EAAAvB,cAAcyG,EAAM9kC,MAAMuqE,WAC7B39C,EAAIv0B,KAAKysC,EAAM9kC,SAGV4sB,EAGRzrB,WAAWtI,EAASC,GACnB,MAAM0xE,EAAWppE,KAAKqpE,mBAAmB5xE,GACxC6xE,EAAStpE,KAAKqpE,mBAAmB3xE,GAElC0xE,EAASD,SAASnpE,KAAKgpE,QAAQtxE,IAAO4xE,EACtCA,EAAOC,SAASvpE,KAAKgpE,QAAQvxE,IAAS2xE,EAGvCrpE,WAAW5F,GACV,MAAMoE,EAAMyB,KAAKgpE,QAAQ7uE,UAClB6F,KAAKipE,OAAO1qE,GACnB2qE,EAAA7pE,QAAQW,KAAKipE,OAASvlC,WACdA,EAAM9kC,MAAMuqE,SAAS5qE,UACrBmlC,EAAM9kC,MAAM2qE,SAAShrE,KAI9BwB,mBAAmB5F,GAClB,MAAMoE,EAAMyB,KAAKgpE,QAAQ7uE,GACzB,IAAIyV,EAAO5P,KAAKipE,OAAO1qE,GAOvB,OALKqR,IACJA,EAhDH,SAAoBzV,GACnB,MAAO,CACNA,KAAMA,EACNovE,SAAU5rE,OAAOK,OAAO,MACxBmrE,SAAUxrE,OAAOK,OAAO,OA4ChB4Y,CAAQzc,GACf6F,KAAKipE,OAAO1qE,GAAOqR,GAGbA,EAGR7P,OAAO5F,GACN,OAAO6F,KAAKipE,OAAOjpE,KAAKgpE,QAAQ7uE,IAGjC4F,UACC,IAAK,MAAMypE,KAAQxpE,KAAKipE,OACvB,OAAO,EAER,OAAO,EAGRlpE,WACC,IAAI5F,EAAiB,GAIrB,OAHA+uE,EAAA7pE,QAAQW,KAAKipE,OAAQvlC;AACpBvpC,EAAKlD,KAAK,GAAGysC,EAAMnlC,mBAAmBZ,OAAOC,KAAK8lC,EAAM9kC,MAAM2qE,UAAU5vE,KAAK,sBAAsBgE,OAAOC,KAAK8lC,EAAM9kC,MAAMuqE,UAAUxvE,KAAK,WAEpIQ,EAAKR,KAAK,4DC3EnB,IAAiB8vE,EAqHjB,SAASC,EAAuBjwD,EAAc9hB,EAAkB6D,EAAemuE,GACzEhyE,EAAe8xE,EAAMG,aAAejyE,EACvCA,EAAe8xE,EAAMI,iBAAiB5yE,KAAK,CAAEwiB,GAAAA,EAAIje,MAAAA,EAAOmuE,SAAAA,KAExDhyE,EAAe8xE,EAAMI,iBAAmB,CAAC,CAAEpwD,GAAAA,EAAIje,MAAAA,EAAOmuE,SAAAA,IACtDhyE,EAAe8xE,EAAMG,WAAajyE,GAOrC,SAAgB6I,EAAmBspE,GAElC,GAAIL,EAAMM,WAAW7gE,IAAI4gE,GACxB,OAAOL,EAAMM,WAAW7pE,IAAI4pE,GAG7B,MAAMrwD,EAAU,SAAU9hB,EAAkB4G,EAAa/C,GACxD,GAAyB,IAArBmQ,UAAUrV,OACb,MAAM,IAAIwI,MAAM,oEAEjB4qE,EAAuBjwD,EAAI9hB,EAAQ6D,GAAO,IAM3C,OAHAie,EAAGgB,SAAW,IAAMqvD,EAEpBL,EAAMM,WAAW3pE,IAAI0pE,EAAWrwD,GACzBA,mDAjJR,SAAiBgwD,GAEHA,EAAAM,WAAa,IAAI9pE,IAEjBwpE,EAAAG,UAAY,aACZH,EAAAI,gBAAkB,mBAEfJ,EAAAO,uBAAhB,SAAuCrB,GACtC,OAAOA,EAAKc,EAAAI,kBAAoB,IARlC,CAAiBJ,EAAA/qE,EAAA+qE,QAAA/qE,EAAA+qE,MAAK,KAyDT/qE,EAAAurE,sBAAwBzpE,EAAuC,wBAwE5E9B,EAAA8B,gBAAAA,EAsBA9B,EAAAirE,SAAA,SAA4BO,GAE3B,OAAO,SAAUvyE,EAAkB4G,EAAa/C;AAC/C,GAAyB,IAArBmQ,UAAUrV,OACb,MAAM,IAAIwI,MAAM,gEAEjB4qE,EAAuBQ,EAAmBvyE,EAAQ6D,GAAO,gHC9J9CkD,EAAAyrE,iBAAmBC,EAAA5pE,gBAAkC,6HCsFrD9B,EAAA2rE,oBAAsBD,EAAA5pE,gBAAqC,sBAW3D9B,EAAA4rE,QAAU;CC/FvB,IAAaC,EAAb,cAAqC5xD,EAAAlE,WAEpC1U,YACuCw/D,GAEtCj7D,QAFsCtE,KAAAu/D,mBAAAA,EAItCv/D,KAAKwqE,qBAGEzqE,qBACP,IAAIoY,EAAqC/V,WAAW,KACnD+V,OAASte,EAET,MAAM4wE,EAAanwC,EAAAtO,SAAShsB,KAAKu/D,mBAAmBmL,UAC9CC,EAAWrwC,EAAAvO,QAAQ/rB,KAAKu/D,mBAAmBmL,UAEjDxnB,EAAA7pD,QAAQsxE,GAAU3xE,KAAKO,IACtB,MACMqxE,EADcrxE,EAAS8O,OAAOrR,GAAQ,gBAAgBm7B,KAAKn7B,IACjC4Q,OAAOS,OAAO,CAACtL,EAAG3G,IAAM2G,IAAM0tE,GACxD3tE,EAAW8tE,EAAY5yE,MAAM,EAAG6M,KAAKsI,IAAI,EAAGy9D,EAAYt0E,OAAS,IAEvE,OAAOkC,QAAQgB,IAAIsD,EAASrD,IAAIzC,GAAQksD,EAAAxqD,OAAO4hC,EAAA3gC,KAAKgxE,EAAU3zE,QAC5DgC,KAAK,KAAMmP,EAAA9E,oBACZ,KAEHrD,KAAKilD,UAAUtsC,EAAAxD,aAAa,KACvBgD,IACHhW,aAAagW,GACbA,OAASte,QA7BA0wE,EAAeM,EAAA,CAGzBC,EAAA,EAAAC,EAAAV,sBAHUE,GAAA7rE,EAAA6rE,gBAAAA,kHCEA7rE,EAAAssE,6BAA+B,4DAC/BtsE,EAAAusE,2BAA6B,IAAIx4C,OAAO/zB,EAAAssE,8BAyBrDtsE,EAAA2kE,uBAAA,SAAuCpuD,GACtC,OAAOA,GACc,iBAAVA,GACa,iBAAbA,EAAMwE,MACXxE,EAAMmoC,MAA8B,iBAAfnoC,EAAMmoC;AAuDrB1+C,EAAAwsE,4BAA8Bd,EAAA5pE,gBAA6C,8BAC3E9B,EAAAysE,yBAA2Bf,EAAA5pE,gBAA0C,2BAElF,SAAkB4qE,GACjBA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,eAAA,IAAA,iBARD,CAAkB1sE,EAAA0sE,SAAA1sE,EAAA0sE,OAAM,KAWxB,SAAkBC,GACjBA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aAHD,CAAkB3sE,EAAA2sE,YAAA3sE,EAAA2sE,UAAS,KAgB3B,SAAkBC,GACjBA,EAAA,UAAA,YADD,CAAkB5sE,EAAA4sE,gBAAA5sE,EAAA4sE,cAAa,KAS/B,SAAkBC,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SAHD,CAAkB7sE,EAAA6sE,mBAAA7sE,EAAA6sE,iBAAgB,KA+CrB7sE,EAAA8sE,4BAA8B,eAC9B9sE,EAAA+sE,wBAA0B,YAC1B/sE,EAAAgtE,2BAA6B,eAuB7BhtE,EAAAitE,iCAAmC;AACnCjtE,EAAAktE,gCAAkC,gCAClCltE,EAAAmtE,kCAAoCzB,EAAA5pE,gBAAmD,qCAcvF9B,EAAAotE,gBAAkB/W,EAAAV,SAAS,EAAc,MACzC31D,EAAAqtE,oBAAsB,aACtBrtE,EAAAstE,iBAAmBjX,EAAAV,SAAS,EAAe,4FCtBxD,IA0GY4X,mDApSCvtE,EAAAwtE,aAAe9B,EAAA5pE,gBAA8B,eA0L1D,SAAY2rE,GACXA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,aAAA,IAAA,eAJD,CAAYztE,EAAAytE,WAAAztE,EAAAytE,SAAQ,KA4BpB,SAAkBC,GACjBA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,eAAA,IAAA,iBAEAA,EAAAA,EAAA,eAAA,GAAA,iBAEAA,EAAAA,EAAA,kBAAA,MAAA,oBACAA,EAAAA,EAAA,SAAA,MAAA,WAEAA,EAAAA,EAAA,MAAA,MAAA,QAVD,CAAkB1tE,EAAA0tE,iCAAA1tE,EAAA0tE,+BAA8B,KA+ChD1tE,EAAA2tE,uBAAA,SAAuCC;AACtC,SAA+B,EAArBA,EAASC,eAOpB7tE,EAAA8tE,4BAAA,SAA4CF,GAC3C,SAA+B,EAArBA,EAASC,eAUpB7tE,EAAA+tE,gCAAA,SAAgDH,GAC/C,SAA+B,EAArBA,EAASC,eAOpB7tE,EAAAguE,4BAAA,SAA4CJ,GAC3C,SAA+B,GAArBA,EAASC,eAGpB,SAAYN,GACXA,EAAA,WAAA,cACAA,EAAA,aAAA,gBACAA,EAAA,kBAAA,qBACAA,EAAA,iBAAA,oBACAA,EAAA,uBAAA,0BACAA,EAAA,aAAA,gBACAA,EAAA,cAAA,gBACAA,EAAA,YAAA,cACAA,EAAA,QAAA,UATD,CAAYA,EAAAvtE,EAAAutE,8BAAAvtE,EAAAutE,4BAA2B,KAYvC,MAAaU,UAAgC7tE,MAE5CiB,YAAYlB,EAAiC9E,GAC5CuK,MAAMzF,GADsCmB,KAAAjG,KAAAA,GAK9C,SAAgB6yE,EAA8BjxE,EAAuB5B,GACpE,MAAM8yE,EAAgB,IAAIF,EAAwBhxE,EAAM8e,WAAY1gB,GAGpE,OAFA+yE,EAA8BD,EAAe9yE,GAEtC8yE,EAWR,SAAgBC,EAA8BnxE,EAAc5B,GAG3D,OAFA4B,EAAM3E,KAAO+C,EAAO,GAAGA,sBAA2B,kBAE3C4B,EAGR,SAAgBoxE,EAA8BpxE,GAG7C,IAAKA,EACJ,OAAOswE,EAA4Be,QAIpC,GAAIrxE,aAAiBgxE,EACpB,OAAOhxE,EAAM5B,KAKd,MAAMs3B,EAAQ,6BAA6BuB,KAAKj3B,EAAM3E,MACtD,IAAKq6B,EACJ,OAAO46C,EAA4Be,QAGpC,OAAQ37C,EAAM,IACb,KAAK46C,EAA4BgB,WAAY,OAAOhB,EAA4BgB;CAChF,KAAKhB,EAA4BiB,iBAAkB,OAAOjB,EAA4BiB,iBACtF,KAAKjB,EAA4BkB,kBAAmB,OAAOlB,EAA4BkB,kBACvF,KAAKlB,EAA4BmB,aAAc,OAAOnB,EAA4BmB,aAClF,KAAKnB,EAA4BoB,uBAAwB,OAAOpB,EAA4BoB,uBAC5F,KAAKpB,EAA4BqB,aAAc,OAAOrB,EAA4BqB,aAClF,KAAKrB,EAA4BsB,cAAe,OAAOtB,EAA4BsB,cACnF,KAAKtB,EAA4BuB,YAAa,OAAOvB,EAA4BuB,YAGlF,OAAOvB,EAA4Be,QA1DpCtuE,EAAAiuE,wBAAAA,EAOAjuE,EAAAkuE,8BAAAA,EAOAluE,EAAA+uE,8BAAA,SAA8C9xE,GAC7C,OAAKA,GACGixE,EAA8B7X,EAAAV,SAAS,EAAgB,MAAkB4X,EAA4Be,UAM9GtuE,EAAAouE,8BAAAA,EAMApuE,EAAAquE,8BAAAA,EAiCAruE,EAAAgvE,sBAAA,SAAsC/xE,GAGrC,GAAIA,aAAiBgyE,EACpB,OAAOhyE,EAAMiyE,oBAId,OAAQb,EAA8BpxE,IACrC,KAAKswE,EAA4BmB,aAChC,OAAA,EACD,KAAKnB,EAA4BiB,iBAChC,OAAA,EACD,KAAKjB,EAA4BsB,cAChC,OAAA,EACD,KAAKtB,EAA4BgB,WAChC,OAAA,EACD,KAAKhB,EAA4BoB,uBAChC,OAAA,EACD,KAAKpB,EAA4BqB,aAChC,OAAA,EACD,QACC,OAAA,KAoBH,SAAkBO,GACjBA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OAJD,CAAkBnvE,EAAAmvE,gBAAAnvE,EAAAmvE,cAAa;CAO/BnvE,EAAAovE,mBAAA,MAIC/tE,YAA4BoiB,EAA+B4rD,EAA0Cp2E,GAAzEqI,KAAAmiB,SAAAA,EAA+BniB,KAAA+tE,UAAAA,EAA0C/tE,KAAArI,OAAAA,EAIrGoI,YAAYguE,GACX,OAAO/tE,KAAK+tE,YAAcA,IAO5B,SAAkBC,GACjBA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UAHD,CAAkBtvE,EAAAsvE,iBAAAtvE,EAAAsvE,eAAc,KAsBhCtvE,EAAAuvE,iBAAA,MAICluE,YAAYmuE,GACXluE,KAAKmuE,SAAWD,EAGjBA,cACC,OAAOluE,KAAKmuE,SAQbpuE,SAASoiB,EAAe7P,GACvB,IAAK6P,EACJ,OAAO,EAGR,MAAMisD,GAAsB5vC,EAAArC,kBAAkB7pB,GAE9C,OAAOtS,KAAKmuE,SAASjiC,KAAK7L,KACrB+tC,GAAsB/tC,EAAO/tB,OAASA,KAK3B,IAAX+tB,EAAO/tB,KACHghC,EAAAhY,gBAAgBnZ,EAAUke,EAAOle,UAGlCmxB,EAAApY,QAAQ/Y,EAAUke,EAAOle,YAOlCpiB,WACC,OAAOC,KAAKquE,UAAS,GAMtBtuE,WACC,OAAOC,KAAKsuE,QAAO,GAMpBvuE,aACC,OAAOC,KAAKquE,UAAS,GAMtBtuE,aACC,OAAOC,KAAKsuE,QAAO,GAMpBvuE,aACC,OAAOC,KAAKquE,UAAS,GAMtBtuE,aACC,OAAOC,KAAKsuE,QAAO,GAGZvuE,UAAUuS,GACjB,OAAOtS,KAAKmuE,SAAS9lE,OAAOg4B,GAAUA,EAAO/tB,OAASA,GAG/CvS,QAAQuS,GACf,OAAOtS,KAAKmuE,SAASjiC,KAAK7L,GAClBA,EAAO/tB,OAASA,KAK1B5T,EAAA6vE,SAAA,SAAyBp2E,EAAcgvB,EAAmB6L,GACzD,SAAK76B,IAASgvB,GAAahvB,IAASgvB,OAIhCA,EAAU7wB,OAAS6B,EAAK7B,UAIxB6wB,EAAUiL,OAAOjL,EAAU7wB,OAAS,KAAOgkC,EAAA5nB,MAC9CyU,GAAamT,EAAA5nB,KAGVsgB,EACI4G,EAAApG,qBAAqBr7B,EAAMgvB,GAGA,IAA5BhvB,EAAKwJ,QAAQwlB;CA6KrB,MAAawmD,UAA2B7uE,MACvCiB,YAAYlB,EAAwB+uE,EAAiD39D,GACpF3L,MAAMzF,GAD6BmB,KAAA4tE,oBAAAA,EAAiD5tE,KAAAiQ,QAAAA,EAIrFlQ,4BAA4B0I,GAC3B,OAAOA,aAAe3J,QAAU0/B,EAAArC,kBAAmB1zB,EAA2BmlE,sBANhFlvE,EAAAivE,mBAAAA,EAUA,SAAkBa,GACjBA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,wBAAA,GAAA,0BACAA,EAAAA,EAAA,oBAAA,GAAA,sBACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,0BAAA,GAAA,4BACAA,EAAAA,EAAA,iBAAA,IAAA,mBAXD,CAAkB9vE,EAAA8vE,sBAAA9vE,EAAA8vE,oBAAmB,KAcxB9vE,EAAA+vE,sBAAwB,CACpCC,IAAK,MACLC,YAAa,aACbC,gBAAiB,gBACjBC,iBAAkB,kBAGNnwE,EAAAowE,qBAAuB,CACnCJ,IAAK,MACLK,QAAS;AACTC,yBAA0B,wBAGdtwE,EAAAuwE,0BAA4B,qBAC5BvwE,EAAAwwE,qBAAuB,gBAoBpC,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,YAAA,GAAA,cAHD,CAAYzwE,EAAAywE,WAAAzwE,EAAAywE,SAAQ,KASPzwE,EAAA0wE,cAAgB,GAI7B1wE,EAAA2wE,KAAA,SAAqBp2E,GACpB,GAAyB,iBAAdA,EAAKiG,MAA2C,iBAAfjG,EAAKq2E,MAIjD,OAAOr2E,EAAKq2E,MAAM70D,SAAS,IAAMxhB,EAAKiG,KAAKub,SAAS,KAIrD/b,EAAA6wE,uBAAA,SAAuCh3E,EAAWi3E,GACjD,OAAIA,EAAYC,kBAAkBrsC,EAAA3D,IAAIhoC,KAAK,CAAEqoC,OAAQvnC,EAAKunC,UAClDtnC,QAAQyB,UAET,IAAIzB,QAAQ,CAACC,EAAGG,KACtB,MAAMmrD,EAAayrB,EAAYE,2CAA2C92E,IACrEA,EAAEknC,SAAWvnC,EAAKunC,QAAUlnC,EAAE8O,QACjCq8C,EAAWjvC,UACXrc,oFC7uBJ,SAASk3E,EAAiB5nE,GACzB,GAAIA,GAASA,EAAMG,wBAClB,MAAMC,EAAAvE,WAGP,OAAO,EAGR,SAASgsE,EAAgBC,EAAwB5/D,GAGhD,GAAIA,MAAAA,OAAO,EAAPA,EAAS6/D,OAAQ,CACpB,GAAqC,iBAA1B7/D,EAAQ6/D,OAAOC,QAAuBF,EAAiB5/D,EAAQ6/D,OAAOC,OAChF,MAAMC,EAAApD,8BAA8B7X,EAAAV,SAAS,EAA4B,MAAqF2b,EAAA/D,4BAA4BoB;CAG3L,GAAmC,iBAAxBp9D,EAAQ6/D,OAAO5wE,MAAqB2wE,EAAiB5/D,EAAQ6/D,OAAO5wE,KAC9E,MAAM8wE,EAAApD,8BAA8B7X,EAAAV,SAAS,EAAqB,MAA8B2b,EAAA/D,4BAA4BqB,cAI9H,OAAO,mDA5FR5uE,EAAAojD,iBAAA,SAAiCwqB,EAA+DnqD,EAAelS,EAAmClI,GACjJ,MAAM6lB,EAASm5B,EAAAvtB,2BAIf,IAAI79B,OAA2B9B,EAI/B,OAGDqqB,eAAoCooD,EAA+DnqD,EAAeyL,EAAiC3d,EAAmClI,GAGrL4nE,EAAiB5nE,GAGjB,MAAMoQ,QAAem0D,EAAS9rB,KAAKr+B,EAAU,CAAEnkB,QAAQ,IAGvD2xE,EAAiB5nE,GAEjB,IACC,IAAI8nE,EAAiB,EACjBp3B,EAAY,EACZw3B,EAAyBhgE,GAAqC,iBAAnBA,EAAQ3Z,OAAuB2Z,EAAQ3Z,YAASuD,EAE3Fqf,EAAS6tC,EAAA9uB,SAASO,MAAM3zB,KAAKoD,IAAIgI,EAAQigE,WAA6C,iBAA1BD,EAAqCA,EAAwBhgE,EAAQigE,aAEjIC,EAAYlgE,GAAuC,iBAArBA,EAAQlH,SAAwBkH,EAAQlH,SAAW,EACjFqnE,EAAc,EAClB,GAGC33B,QAAkB6zB,EAAS/+C,KAAKpV,EAAQg4D,EAAWj3D,EAAOA,OAAQk3D,EAAal3D,EAAOub,WAAa27C,GAEnGD,GAAa13B,EAEbo3B,GAAkBp3B,EAEmB,iBAA1Bw3B,IACVA,GAAyBx3B,IAJ1B23B,GAAe33B,KAQKv/B,EAAOub,aAC1B7G,EAAOX,MAAM/T,GAEbA,EAAS6tC,EAAA9uB,SAASO,MAAM3zB,KAAKoD,IAAIgI,EAAQigE,WAA6C,iBAA1BD,EAAqCA,EAAwBhgE,EAAQigE,aAEjIE,EAAc,SAEP33B,EAAY,IAAuC,iBAA1Bw3B,GAAsCA,EAAwB,IAAMN,EAAiB5nE,IAAU6nE,EAAgBC,EAAgB5/D,IAGjK,GAAImgE,EAAc,EAAG,CACpB,IAAIC,EAAkBD,EACe,iBAA1BH,IACVI,EAAkBxrE,KAAKoD,IAAImoE,EAAaH,IAGzCriD,EAAOX,MAAM/T,EAAOlhB,MAAM,EAAGq4E,KAE7B,MAAO10E,GACR,MAAMq0E,EAAAvC,8BAA8B9xE,iBAE9B2wE,EAAS1rB,MAAMzoC;CA5DtBm4D,CAAqBhE,EAAUnqD,EAAUyL,EAAQ3d,EAASlI,GAAO/O,UAAKa,EAAWf,GAAO6C,EAAQ7C,GAAK+lB,QAAQ,IAAM+O,EAAO5gB,IAAIrR,IAEvHiyB,sHCVRlvB,EAAA6xE,cAAA,SAA8BrC,GAC7B,OAAOA,EAAQz0E,IAAI4mC,IAAU,CAC5B/tB,KAAM+tB,EAAO/tB,KACb6P,SAAUihB,EAAA3D,IAAIlnC,KAAK8nC,EAAOloC,UAI5BuG,EAAA8xE,qBAAA,SAAqCtC,GAGpC,MAAMuC,EAAa,IAAIC,EACvB,IAAK,MAAMr5D,KAAS62D,EACnBuC,EAAWE,aAAat5D,GAGzB,OAAOo5D,EAAWpmD,aAGnB,MAAMqmD,EAAN3wE,cACSC,KAAA6zC,WAAgC,GAChC7zC,KAAA4wE,gBAAgD,IAAI3wE,IAE5DF,aAAasX,GACZ,MAAMw5D,EAAgB7wE,KAAK4wE,gBAAgB1wE,IAAImX,EAAMlf,MAGrD,GAAI04E,EAAe,CAClB,MAAMC,EAAoBD,EAAcv+D,KAClCy+D,EAAgB15D,EAAM/E,KAGP,IAAjBw+D,GAA2D,IAAbC,GACjD/wE,KAAK4wE,gBAAgBtwE,OAAO+W,EAAMlf,MAClC6H,KAAK6zC,WAAW/7C,OAAOkI,KAAK6zC,WAAWlyC,QAAQkvE,GAAgB,IAItC,IAAjBC,GAA6D,IAAbC,EACxDF,EAAcv+D,KAAI,EAIO,IAAjBw+D,GAA2D,IAAbC,IAItDF,EAAcv+D,KAAOy+D,QAMtB/wE,KAAK6zC,WAAW58C,KAAKogB,GACrBrX,KAAK4wE,gBAAgBxwE,IAAIiX,EAAMlf,KAAMkf,GAIvCtX,YACC,MAAMixE,EAAuC,GACvCC,EAAyB,GAS/B,OAAOjxE,KAAK6zC,WAAWxrC,OAAOzP,GACnB,IAANA,EAAE0Z,OACL0+D,EAAkB/5E,KAAK2B,IAEhB,IAINgP,KAAK,CAACspE,EAAIC,IACLD,EAAG/4E,KAAK7B,OAAS66E,EAAGh5E,KAAK7B,QAC9B+R,OAAOzP,IACLq4E,EAAa/kC,KAAKnvC,GAAKizE,EAAAzB,SAAS31E,EAAET,KAAM4E,GAAI2qB,EAAAvB,YAKhD8qD,EAAah6E,KAAK2B,EAAET,OAEb,IACLuR,OAAOsnE;qIC5FZ,MAAarK,UAAoBhuD,EAAAlE,WAMhC1U,YACS5H,EACAyuE,EACAR,EACAS,GAERviE,QALQtE,KAAA7H,KAAAA,EACA6H,KAAA4mE,cAAAA,EACA5mE,KAAAomE,aAAAA,EACApmE,KAAA6mE,eAAAA,EAPD7mE,KAAAoxE,mBAA6CpxE,KAAKilD,UAAU,IAAIlZ,EAAA5rB,iBAA6C,EAAtBkxD,EAAA3sB,sBACvF1kD,KAAAsxE,kBAAuC,GAU9CtxE,KAAKgnE,gBAGNjnE,kBAAkB8mE,GACjB7mE,KAAK6mE,eAAiBA,EAGf9mE,sBACP,IACC,MAAM9G,KAAEA,EAAIE,eAAEA,SAAyB+pD,EAAA/D,SAASn/C,KAAK7H,MAErD,GAAI6H,KAAK8mE,WACR,OAGD,IAAIyK,EAAcvxE,KAAK7H,KACvB,GAAIgB,EACH,IACCo4E,QAAoB3zB,EAAAwF,SAASmuB,GAC5B,MAAO51E,GACRqE,KAAK+Q,QAAQpV,GAKX1C,EAAKC,cACR8G,KAAKilD,UAAUosB,EAAAzsB,YAAY2sB,EAAa,CAACC,EAAWr5E,KACnD6H,KAAKyxE,aAAa,CACjBn/D,KAAoB,YAAdk/D,EAAyB,EAAwC,UAAdA,EAAuB,EAAuB,EACvGr5E,KAAMmiC,EAAA3gC,KAAKqG,KAAK7H,KAAMmiC,EAAAtO,SAAS7zB,OAE9BwD,GAASqE,KAAK+Q,QAAQpV,KAKzBqE,KAAKilD,UAAUosB,EAAA1sB,UAAU4sB,EAAaC,IACrCxxE,KAAKyxE,aAAa,CACjBn/D,KAAoB,YAAdk/D,EAAyB,EAAyB,EACxDr5E,KAAM6H,KAAK7H,QAEVwD,GAASqE,KAAK+Q,QAAQpV,KAEzB,MAAOA,GACRqE,KAAK+Q,QAAQpV,IAIPoE,aAAasX,GAGpBrX,KAAKsxE,kBAAkBr6E,KAAKogB;AAGxBrX,KAAK6mE,gBACR7mE,KAAK0xE,UAAU,GAAa,IAAVr6D,EAAM/E,KAAgC,UAAsB,IAAV+E,EAAM/E,KAAkC,YAAc,eAAe+E,EAAMlf,QAIhJ6H,KAAKoxE,mBAAmB9wD,QAAQ,KAC/B,MAAMqxD,EAAc3xE,KAAKsxE,kBACzBtxE,KAAKsxE,kBAAoB,GAGzB,MAAMM,EAAwB3rB,EAAAuqB,qBAAqBmB,GAcnD,OAXI3xE,KAAK6mE,gBACR+K,EAAsBvyE,QAAQgY,IAC7BrX,KAAK0xE,UAAU,iBAA2B,IAAVr6D,EAAM/E,KAAgC,UAAsB,IAAV+E,EAAM/E,KAAkC,YAAc,eAAe+E,EAAMlf,UAK3Jy5E,EAAsBt7E,OAAS,GAClC0J,KAAK4mE,cAAcgL,GAGbp5E,QAAQyB,YAIT8F,QAAQpE,GACVqE,KAAK8mE,YACT9mE,KAAKomE,aAAa,CAAE9zD,KAAM,QAASzT,QAAS,4BAA4BlD,MAIlEoE,UAAUlB,GACZmB,KAAK8mE,YACT9mE,KAAKomE,aAAa,CAAE9zD,KAAM,QAASzT,QAAS,4BAA4BA,MAI1EkB,UACCC,KAAK8mE,YAAa,EAElBxiE,MAAMwQ,WA/GRpW,EAAAioE,YAAAA,wGCNAjoE,EAAAmzE,kBAAA,MAIC9xE,eAAe1I,GAFP2I,KAAA8xE,SAAW,IAAI7xE,IAGtB,IAAK,IAAKwZ,EAAI63C,KAAYj6D,EACzB2I,KAAKI,IAAIqZ,EAAI63C,GAIfvxD,IAAO0Z,EAA0Bs4D,GAChC,MAAM57E,EAAS6J,KAAK8xE,SAAS5xE,IAAIuZ,GAEjC,OADAzZ,KAAK8xE,SAAS1xE,IAAIqZ,EAAIs4D,GACf57E,EAGR4J,QAAQT,GACPU,KAAK8xE,SAASzyE,QAAQ,CAACT,EAAOL,IAAQe,EAASf,EAAKK;AAGrDmB,IAAI0Z,GACH,OAAOzZ,KAAK8xE,SAAS5oE,IAAIuQ,GAG1B1Z,IAAO0Z,GACN,OAAOzZ,KAAK8xE,SAAS5xE,IAAIuZ,yICpB3B,MAAMu4D,GAAiB,EAMjBC,EAAgC,mBAAVrgB,MAE5B,MAAMsgB,UAA8BpzE,MACnCiB,YAAYoyE,GACX7tE,MAAM,sCACNtE,KAAKnB,QAAUszE,EAAM13D,YAIvB,MAAa23D,EAQZryE,YAAYsyE,EAA8B,IAAIC,EAAAT,kBAAqBU,GAAkB,EAAO/kE,GAC3FxN,KAAKwyE,UAAYH,EACjBryE,KAAK6/B,QAAU0yC,EACfvyE,KAAKyyE,QAAUjlE,EAEfxN,KAAKwyE,UAAUpyE,IAAIgqE,EAAAH,sBAAuBjqE,MAG3CD,YAAYsyE,GACX,OAAO,IAAID,EAAqBC,EAAUryE,KAAK6/B,QAAS7/B,MAGzDD,eAAyCQ,KAAuDW,GAC/F,IAAIwxE,EAASC,EAAMC,gBAAgBryE,GAC/BsyE,GAAQ,EACZ,IACC,MAAMC,EAA6B,CAClC5yE,IAAK,CAAIuZ,EAA0Bs5D,KAElC,GAAIF,EACH,MAAM1qE,EAAArE,aAAa,6EAGpB,MAAM3N,EAAS6J,KAAKgzE,4BAA4Bv5D,EAAIi5D,GACpD,IAAKv8E,GAAU48E,IAAe3I,EAAAT,SAC7B,MAAM,IAAI7qE,MAAM,qCAAqC2a,MAEtD,OAAOtjB,IAGT,OAAOoK,EAAGgB,WAAM1H,EAAW,CAACi5E,KAAa5xE,YAEzC2xE,GAAQ,EACRH,EAAOnM,QAITxmE,eAAekzE,KAAgDC,GAC9D,IAAIR,EACAv8E,EASJ,OARI88E,aAA4BE,EAAAzK,gBAC/BgK,EAASC,EAAMS,cAAcH,EAAiBtK;AAC9CxyE,EAAS6J,KAAKqzE,gBAAgBJ,EAAiBtK,KAAMsK,EAAiBrK,gBAAgBl/D,OAAOwpE,GAAOR,KAEpGA,EAASC,EAAMS,cAAcH,GAC7B98E,EAAS6J,KAAKqzE,gBAAgBJ,EAAkBC,EAAMR,IAEvDA,EAAOnM,OACApwE,EAGA4J,gBAAmB4oE,EAAWznE,EAAc,GAAIwxE,GAGvD,IAAIY,EAAsBlJ,EAAAX,MAAMO,uBAAuBrB,GAAM/gE,KAAK,CAAC1C,EAAGgC,IAAMhC,EAAE1J,MAAQ0L,EAAE1L,OACpF+3E,EAAqB,GACzB,IAAK,MAAMC,KAAcF,EAAqB,CAC7C,IAAIhiB,EAAUtxD,KAAKgzE,4BAA4BQ,EAAW/5D,GAAIi5D,GAC9D,IAAKphB,GAAWtxD,KAAK6/B,UAAY2zC,EAAW7J,SAC3C,MAAM,IAAI7qE,MAAM,oBAAoB6pE,EAAK3xE,mCAAmCw8E,EAAW/5D,OAExF85D,EAAYt8E,KAAKq6D,GAGlB,IAAImiB,EAAqBH,EAAoBh9E,OAAS,EAAIg9E,EAAoB,GAAG93E,MAAQ0F,EAAK5K,OAG9F,GAAI4K,EAAK5K,SAAWm9E,EAAoB,CACvC78E,QAAQoK,KAAK,gDAAgD2nE,EAAK3xE,oBACjEy8E,EAAqB,oBAAoBvyE,EAAK5K,2BAE/C,IAAIiR,EAAQksE,EAAqBvyE,EAAK5K,OAErC4K,EADGqG,EAAQ,EACJrG,EAAKwI,OAAO,IAAIhB,MAAMnB,IAEtBrG,EAAKlJ,MAAM,EAAGy7E,GAKvB,OAAU,IAAI9K,KAAQ,IAAIznE,KAASqyE,IAG5BxzE,oBAAuB0Z,EAA0Bi6D,GACxD,GAAI1zE,KAAKwyE,UAAUtyE,IAAIuZ,aAAe05D,EAAAzK,eACrC1oE,KAAKwyE,UAAUpyE,IAAIqZ,EAAIi6D,OACjB,CAAA,IAAI1zE,KAAKyyE,QAGf,MAAM,IAAI3zE,MAAM,mDAFhBkB,KAAKyyE,QAAQkB,oBAAoBl6D,EAAIi6D,IAM/B3zE,gCAAmC0Z,GAC1C,IAAIm6D,EAAiB5zE,KAAKwyE,UAAUtyE,IAAIuZ;CACxC,OAAKm6D,GAAkB5zE,KAAKyyE,QACpBzyE,KAAKyyE,QAAQoB,gCAAgCp6D,GAE7Cm6D,EAID7zE,4BAA+B0Z,EAA0Bi5D,GAChE,IAAIz9D,EAAQjV,KAAK6zE,gCAAgCp6D,GACjD,OAAIxE,aAAiBk+D,EAAAzK,eACb1oE,KAAK8zE,+BAA+Br6D,EAAIxE,EAAOy9D,EAAOqB,OAAOt6D,GAAI,KAExEi5D,EAAOqB,OAAOt6D,GAAI,GACXxE,GAIDlV,+BAAkC0Z,EAA0Bu6D,EAAyBtB,GAE5F,MAAMP,EAAQ,IAAI8B,EAAAlL,MAAc5uE,GAAQA,EAAKsf,GAAGgB,YAEhD,IAAIy5D,EAAa,EACjB,MAAMpxE,EAAQ,CAAC,CAAE2W,GAAAA,EAAIu6D,KAAAA,EAAMtB,OAAAA,IAC3B,KAAO5vE,EAAMxM,QAAQ,CACpB,MAAM2d,EAAOnR,EAAM0D,MAInB,GAHA2rE,EAAM9I,mBAAmBp1D,GAGrBigE,IAAe,IAClB,MAAM,IAAIhC,EAAsBC,GAIjC,IAAK,IAAIqB,KAAcpJ,EAAAX,MAAMO,uBAAuB/1D,EAAK+/D,KAAKrL,MAAO,CAEpE,IAAIiL,EAAiB5zE,KAAK6zE,gCAAgCL,EAAW/5D,IAKrE,GAJKm6D,GAAmBJ,EAAW7J,UAClC/yE,QAAQoK,KAAK,oBAAoByY,gBAAiB+5D,EAAW/5D,+BAG1Dm6D,aAA0BT,EAAAzK,eAAgB,CAC7C,MAAM3rE,EAAI,CAAE0c,GAAI+5D,EAAW/5D,GAAIu6D,KAAMJ,EAAgBlB,OAAQz+D,EAAKy+D,OAAOqB,OAAOP,EAAW/5D,IAAI,IAC/F04D,EAAMgC,WAAWlgE,EAAMlX,GACvB+F,EAAM7L,KAAK8F,KAKd,OAAa,CACZ,MAAM2pE,EAAQyL,EAAMzL,QAIpB,GAAqB,IAAjBA,EAAMpwE,OAAc,CACvB,IAAK67E,EAAM52D,UACV,MAAM,IAAI22D,EAAsBC,GAEjC,MAGD,IAAK,MAAMh4E,KAAEA,KAAUusE,EAAO,CAE7B,MAAMgN,EAAW1zE,KAAKo0E,gCAAgCj6E,EAAKsf,GAAItf,EAAK65E,KAAKrL,KAAMxuE,EAAK65E,KAAKpL,gBAAiBzuE,EAAK65E,KAAKnL,6BAA8B1uE,EAAKu4E;CACvJ1yE,KAAK2zE,oBAAoBx5E,EAAKsf,GAAIi6D,GAClCvB,EAAMkC,WAAWl6E,IAInB,OAAU6F,KAAK6zE,gCAAgCp6D,GAGxC1Z,gCAAmC0Z,EAA0BkvD,EAAWznE,EAAc,GAAI2nE,EAAuC6J,GACxI,GAAI1yE,KAAKwyE,UAAUtyE,IAAIuZ,aAAe05D,EAAAzK,eACrC,OAAO1oE,KAAKs0E,uBAAuB3L,EAAMznE,EAAM2nE,EAA8B6J,GACvE,GAAI1yE,KAAKyyE,QACf,OAAOzyE,KAAKyyE,QAAQ2B,gCAAgC36D,EAAIkvD,EAAMznE,EAAM2nE,EAA8B6J,GAElG,MAAM,IAAI5zE,MAAM,oDAAoD6pE,EAAK3xE,QAInE+I,uBAA0B4oE,EAAWznE,EAAc,GAAIqzE,EAAwC7B,GACtG,GAAK6B,GAAkCtC,EAIhC,CAIN,MAAMuC,EAAO,IAAIzoC,EAAApoB,UAAe,IAAM3jB,KAAKqzE,gBAAmB1K,EAAMznE,EAAMwxE,IAC1E,OAAU,IAAI9gB,MAAMj0D,OAAOK,OAAO,MAAO,CACxC+B,IAAIpI,EAAa4G,GAChB,GAAIA,KAAO5G,EACV,OAAOA,EAAO4G,GAEf,IAAIkK,EAAM+rE,EAAKC,WACX1gE,EAAOtL,EAAIlK,GACf,MAAoB,mBAATwV,EACHA,GAERA,EAAOA,EAAKjd,KAAK2R,GACjB9Q,EAAO4G,GAAOwV,EACPA,IAER3T,IAAG,CAACyxD,EAAYptD,EAAgB7F,KAC/B41E,EAAKC,WAAWhwE,GAAK7F,GACd,KAvBT,OAAOoB,KAAKqzE,gBAAgB1K,EAAMznE,EAAMwxE,IAgC3C,IAAWgC,EA3NXh2E,EAAA0zE,qBAAAA,EA2NA,SAAWsC,GACVA,EAAAA,EAAA,SAAA,GAAA,WAAUA,EAAAA,EAAA,WAAA,GAAA,aAAYA,EAAAA,EAAA,OAAA,GAAA,SADvB,CAAWA,IAAAA,EAAS,KAIpB,MAAM/B,EAoBL5yE,YACUuS,EACAtb,GADAgJ,KAAAsS,KAAAA,EACAtS,KAAAhJ,KAAAA,EALOgJ,KAAA20E,OAAiBz9E,KAAKC,MACtB6I,KAAA40E,KAAoD,GAVrE70E,uBAAuB4oE;AACtB,OAAQqJ,EAA+B,IAAIW,EAAK,EAAuBhK,EAAK3xE,MAAS2xE,EAAKluD,WAAsB/e,UAAU,EAAG,IAAI8C,QAAQ,MAAO,KAAvHm0E,EAAMkC,MAGhC90E,qBAAqB4oE,GACpB,OAAQqJ,EAA+B,IAAIW,EAAK,EAAqBhK,EAAK3xE,MAAjD27E,EAAMkC,MAYhC90E,OAAO0Z,EAA4Bra,GAClC,IAAI1F,EAAQ,IAAIi5E,EAAK,EAAmBl5D,EAAGgB,YAE3C,OADAza,KAAK40E,KAAK39E,KAAK,CAACwiB,EAAIra,EAAO1F,IACpBA,EAGRqG,OACC,IAAI+0E,EAAM59E,KAAKC,MAAQ6I,KAAK20E,OAC5BhC,EAAMoC,SAAWD,EAEjB,IAAIE,GAAiB,EAoBrB,IAAIC,EAAQ,CACX,GAAY,IAATj1E,KAAKsS,KAA8B,SAAW,UAAUtS,KAAKhJ,OAChE,GApBD,SAASk+E,EAAW7uE,EAAW8uE,GAC9B,IAAIl+D,EAAgB,GAChBq9B,EAAS,IAAI5rC,MAAMrC,EAAI,GAAG1M,KAAK,MACnC,IAAK,MAAO8f,EAAIra,EAAO1F,KAAUy7E,EAAMP,KACtC,GAAIx1E,GAAS1F,EAAO,CACnBs7E,GAAiB,EACjB/9D,EAAIhgB,KAAK,GAAGq9C,eAAoB76B,KAChC,IAAI27D,EAASF,EAAW7uE,EAAI,EAAG3M,GAC3B07E,GACHn+D,EAAIhgB,KAAKm+E,QAGVn+D,EAAIhgB,KAAK,GAAGq9C,YAAiB76B,KAG/B,OAAOxC,EAAItd,KAAK,MAKbu7E,CAAW,EAAGl1E,QACjB,cAAc80E,EAAI36C,QAAQ,qBAAqBw4C,EAAMoC,QAAQ56C,QAAQ,UAGlE26C,EAAM,GAAKE,IACdp+E,QAAQie,IAAIogE,EAAMt7E,KAAK,QA5DDg5E,EAAAkC,MAAQ,IAAI,cAAclC,EACjD5yE,cAAgBuE,OAAO,EAAG,MAC1BvE,QACAA,SAAW,OAAOC,OAWJ2yE,EAAAoC,QAAkB,4GCtPlC,SAAkBM,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,YAAA,GAAA,cAFD,CAAkB32E,EAAA22E,eAAA32E,EAAA22E,aAAY,KAKjB32E,EAAA42E,sBAAwBlL,EAAA5pE,gBAAuC;AAQ5E9B,EAAA62E,oBAAA,SAAoCC,GACnC,GAAuC,iBAA5BA,EAAaC,WACvB,OAAO,EAER,IAAK/sE,MAAMC,QAAQ6sE,EAAax5E,eAAsD,IAArCw5E,EAAax5E,aAAa1F,OAC1E,OAAO,EAER,IAAK,MAAMo/E,KAAeF,EAAax5E,aAAc,CACpD,GAA8B,iBAAnB05E,EAAYj8D,GACtB,OAAO,EAER,GAAgC,iBAArBi8D,EAAYv9E,KACtB,OAAO,EAGT,QAAIq9E,EAAaG,cAAqD,iBAA9BH,EAAaG,iBAGjDH,EAAaI,uBAAuE,iBAAvCJ,EAAaI,kGCnC/D,SAASz+E,IACR,OAAO,IAAID,MAAO2+E,cAGnB,IAAYC,mDAPCp3E,EAAAq3E,YAAc3L,EAAA5pE,gBAAoC,cAClD9B,EAAAs3E,eAAiB5L,EAAA5pE,gBAAuC,iBAMrE,SAAYs1E,GACXA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,IAAA,GAAA,MAPD,CAAYA,EAAAp3E,EAAAo3E,WAAAp3E,EAAAo3E,SAAQ,KAUPp3E,EAAAu3E,kBAA8BH,EAASxgB,KA8BpD,MAAsB4gB,UAA2Bv9D,EAAAlE,WAAjD1U,kCAESC,KAAAm2E,MAAkBz3E,EAAAu3E,kBACTj2E,KAAAo2E,qBAA0Cp2E,KAAKilD,UAAU,IAAIjnC,EAAAlG;AACrE9X,KAAAq2E,oBAAuCr2E,KAAKo2E,qBAAqB/+D,MAE1EtX,SAASo2E,GACJn2E,KAAKm2E,QAAUA,IAClBn2E,KAAKm2E,MAAQA,EACbn2E,KAAKo2E,qBAAqBr+D,KAAK/X,KAAKm2E,QAItCp2E,WACC,OAAOC,KAAKm2E,OAddz3E,EAAAw3E,mBAAAA,EAmBAx3E,EAAA43E,sBAAA,cAA2CJ,EAK1Cn2E,YAAYw2E,EAAqB73E,EAAAu3E,mBAChC3xE,QACAtE,KAAKw2E,SAASD,GACdv2E,KAAKy2E,WAAa/uD,EAAAzB,UAGnBlmB,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcZ,EAASnD,QAC3B3yE,KAAKy2E,UACR7/E,QAAQie,IAAI,cAAiB1d,WAAiB0H,KAAYqC,GAE1DtK,QAAQie,IAAI,SAAS1d,OAAU0H,KAAYqC,IAK9CnB,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcZ,EAASa,QAC3B32E,KAAKy2E,UACR7/E,QAAQie,IAAI,cAAiB1d,WAAiB0H,KAAYqC,GAE1DtK,QAAQie,IAAI,SAAS1d,OAAU0H,KAAYqC,IAK9CnB,KAAKlB,KAAoBqC,GACpBlB,KAAK02E,YAAcZ,EAASxgB,OAC3Bt1D,KAAKy2E,UACR7/E,QAAQie,IAAI,cAAiB1d,WAAiB0H,KAAYqC,GAE1DtK,QAAQie,IAAI,SAAS1d,OAAU0H,KAAYqC,IAK9CnB,KAAKlB,KAA4BqC,GAC5BlB,KAAK02E,YAAcZ,EAASzgB,UAC3Br1D,KAAKy2E,UACR7/E,QAAQoK,KAAK,cAAiB7J,WAAiB0H,KAAYqC,GAE3DtK,QAAQoK,KAAK,SAAS7J,OAAU0H,KAAYqC,IAK/CnB,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcZ,EAASh3E,QAC3BkB,KAAKy2E,UACR7/E,QAAQ+E,MAAM,cAAiBxE,WAAiB0H,KAAYqC,GAE5DtK,QAAQ+E,MAAM,SAASxE,OAAU0H,KAAYqC;AAKhDnB,SAASlB,KAAoBqC,GACxBlB,KAAK02E,YAAcZ,EAASc,WAC3B52E,KAAKy2E,UACR7/E,QAAQ+E,MAAM,cAAiBxE,WAAiB0H,KAAYqC,GAE5DtK,QAAQ+E,MAAM,SAASxE,OAAU0H,KAAYqC,IAKhDnB,WAIAA,WAMDrB,EAAAm4E,kBAAA,cAAuCX,EAItCn2E,YAAYw2E,EAAqB73E,EAAAu3E,mBAChC3xE,QACAtE,KAAKw2E,SAASD,GAGfx2E,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcZ,EAASnD,OAC/B/7E,QAAQie,IAAI,UAAW,cAAehW,KAAYqC,GAIpDnB,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcZ,EAASa,OAC/B//E,QAAQie,IAAI,UAAW,gCAAiChW,KAAYqC,GAItEnB,KAAKlB,KAAoBqC,GACpBlB,KAAK02E,YAAcZ,EAASxgB,MAC/B1+D,QAAQie,IAAI,UAAW,cAAehW,KAAYqC,GAIpDnB,KAAKlB,KAA4BqC,GAC5BlB,KAAK02E,YAAcZ,EAASzgB,SAC/Bz+D,QAAQie,IAAI,UAAW,cAAehW,KAAYqC,GAIpDnB,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcZ,EAASh3E,OAC/BlI,QAAQie,IAAI,UAAW,cAAehW,KAAYqC,GAIpDnB,SAASlB,KAAoBqC,GACxBlB,KAAK02E,YAAcZ,EAASc,UAC/BhgF,QAAQie,IAAI,UAAW,iCAAkChW,KAAYqC,GAIvEnB,WAIAA,WAKDrB,EAAAo4E,wBAAA,cAA6CZ,EAI5Cn2E,YAA6Bm7D,EAA6Bqb,EAAqB73E,EAAAu3E,mBAC9E3xE,QAD4BtE,KAAAk7D,OAAAA,EAE5Bl7D,KAAKw2E,SAASD,GAGfx2E,MAAMlB,KAAoBqC;AACrBlB,KAAK02E,YAAcZ,EAASnD,OAC/B3yE,KAAKk7D,OAAO6b,WAAW,QAAS,CAAC/2E,KAAKg3E,eAAen4E,MAAaqC,IAIpEnB,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcZ,EAASa,OAC/B32E,KAAKk7D,OAAO6b,WAAW,QAAS,CAAC/2E,KAAKg3E,eAAen4E,MAAaqC,IAIpEnB,KAAKlB,KAAoBqC,GACpBlB,KAAK02E,YAAcZ,EAASxgB,MAC/Bt1D,KAAKk7D,OAAO6b,WAAW,OAAQ,CAAC/2E,KAAKg3E,eAAen4E,MAAaqC,IAInEnB,KAAKlB,KAA4BqC,GAC5BlB,KAAK02E,YAAcZ,EAASzgB,SAC/Br1D,KAAKk7D,OAAO6b,WAAW,OAAQ,CAAC/2E,KAAKg3E,eAAen4E,MAAaqC,IAInEnB,MAAMlB,KAA4BqC,GAC7BlB,KAAK02E,YAAcZ,EAASh3E,OAC/BkB,KAAKk7D,OAAO6b,WAAW,QAAS,CAAC/2E,KAAKg3E,eAAen4E,MAAaqC,IAIpEnB,SAASlB,KAA4BqC,GAChClB,KAAK02E,YAAcZ,EAASc,UAC/B52E,KAAKk7D,OAAO6b,WAAW,WAAY,CAAC/2E,KAAKg3E,eAAen4E,MAAaqC,IAI/DnB,eAAeuoB,GACtB,MAAmB,iBAARA,EACHA,EAGDg4C,EAAA5L,eAAepsC,EAAKtoB,KAAK02E,YAAcZ,EAASnD,OAGxD5yE,WAIAA,WAKDrB,EAAAu4E,oBAAA,cAAyCf,EAGxCn2E,YAA6Bm3E,GAC5B5yE,QAD4BtE,KAAAk3E,YAAAA,EAExBA,EAAY5gF,QACf0J,KAAKw2E,SAASU,EAAY,GAAGR,YAI/B32E,SAASo2E,GACR,IAAK,MAAM3W,KAAcx/D,KAAKk3E,YAC7B1X,EAAWgX,SAASL,GAErB7xE,MAAMkyE,SAASL,GAGhBp2E,MAAMlB,KAAoBqC,GACzB,IAAK,MAAMs+D,KAAcx/D,KAAKk3E,YAC7B1X,EAAW2V,MAAMt2E,KAAYqC,GAI/BnB,MAAMlB,KAAoBqC;AACzB,IAAK,MAAMs+D,KAAcx/D,KAAKk3E,YAC7B1X,EAAWhE,MAAM38D,KAAYqC,GAI/BnB,KAAKlB,KAAoBqC,GACxB,IAAK,MAAMs+D,KAAcx/D,KAAKk3E,YAC7B1X,EAAWI,KAAK/gE,KAAYqC,GAI9BnB,KAAKlB,KAAoBqC,GACxB,IAAK,MAAMs+D,KAAcx/D,KAAKk3E,YAC7B1X,EAAWx+D,KAAKnC,KAAYqC,GAI9BnB,MAAMlB,KAA4BqC,GACjC,IAAK,MAAMs+D,KAAcx/D,KAAKk3E,YAC7B1X,EAAW7jE,MAAMkD,KAAYqC,GAI/BnB,SAASlB,KAA4BqC,GACpC,IAAK,MAAMs+D,KAAcx/D,KAAKk3E,YAC7B1X,EAAW2X,SAASt4E,KAAYqC,GAIlCnB,QACC,IAAK,MAAMy/D,KAAcx/D,KAAKk3E,YAC7B1X,EAAWnmD,QAIbtZ,UACC,IAAK,MAAMy/D,KAAcx/D,KAAKk3E,YAC7B1X,EAAW1qD,YAKd,MAAasiE,UAA4Bz+D,EAAAlE,WAGxC1U,YAAoBy/D,GACnBl7D,QADmBtE,KAAAw/D,WAAAA,EAEnBx/D,KAAKilD,UAAUua,GAGhB6W,0BACC,OAAOr2E,KAAKw/D,WAAW6W,oBAGxBt2E,SAASo2E,GACRn2E,KAAKw/D,WAAWgX,SAASL,GAG1Bp2E,WACC,OAAOC,KAAKw/D,WAAWkX,WAGxB32E,MAAMlB,KAAoBqC,GACzBlB,KAAKw/D,WAAW2V,MAAMt2E,KAAYqC,GAGnCnB,MAAMlB,KAAoBqC,GACzBlB,KAAKw/D,WAAWhE,MAAM38D,KAAYqC,GAGnCnB,KAAKlB,KAAoBqC,GACxBlB,KAAKw/D,WAAWI,KAAK/gE,KAAYqC,GAGlCnB,KAAKlB,KAAoBqC,GACxBlB,KAAKw/D,WAAWx+D,KAAKnC,KAAYqC,GAGlCnB,MAAMlB,KAA4BqC,GACjClB,KAAKw/D,WAAW7jE,MAAMkD,KAAYqC,GAGnCnB,SAASlB,KAA4BqC,GACpClB,KAAKw/D,WAAW2X,SAASt4E,KAAYqC,GAGtCnB,QACCC,KAAKw/D,WAAWnmD,SA7ClB3a,EAAA04E,oBAAAA,EAiDA14E,EAAA24E,eAAA,MAAAt3E;AAEUC,KAAAq2E,qBAAuC,IAAIr4D,EAAAlG,SAAoBT,MACxEtX,SAASo2E,IACTp2E,WAAuB,OAAO+1E,EAASxgB,KACvCv1D,MAAMlB,KAAoBqC,IAC1BnB,MAAMlB,KAAoBqC,IAC1BnB,KAAKlB,KAAoBqC,IACzBnB,KAAKlB,KAAoBqC,IACzBnB,MAAMlB,KAA4BqC,IAClCnB,SAASlB,KAA4BqC,IACrCnB,WACAA,WAGDrB,EAAA44E,YAAA,SAA4B/X,GAC3B,GAAIA,EAAmBnL,QACtB,OAAO0hB,EAASnD,MAEjB,GAA2C,iBAAhCpT,EAAmBr+D,KAAK2T,IAAkB,CAEpD,OADiB0qD,EAAmBr+D,KAAK2T,IAAI8U,eAE5C,IAAK,QACJ,OAAOmsD,EAASnD,MACjB,IAAK,QACJ,OAAOmD,EAASa,MACjB,IAAK,OACJ,OAAOb,EAASxgB,KACjB,IAAK,OACJ,OAAOwgB,EAASzgB,QACjB,IAAK,QACJ,OAAOygB,EAASh3E,MACjB,IAAK,WACJ,OAAOg3E,EAASc,SACjB,IAAK,MACJ,OAAOd,EAASyB,KAGnB,OAAO74E,EAAAu3E,wMCvZR,IAAauB,EAAb,cAAiC7+D,EAAAlE,WAMhC1U,YAAiCy/D,GAChCl7D,QADgCtE,KAAAw/D,WAAAA,EAFhBx/D,KAAAy3E,YAAc,MAQvBz3E,KAAA03E,4CAA8C13E,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAChE9X,KAAA0vE,2CAA6C1vE,KAAK03E,4CAA4CrgE;AAE/FrX,KAAA23E,kCAAoC33E,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACtD9X,KAAA43E,iCAAmC53E,KAAK23E,kCAAkCtgE,MAE3ErX,KAAA63E,2CAA6C73E,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAC/D9X,KAAA83E,0CAA4C93E,KAAK63E,2CAA2CxgE,MAEpFrX,KAAAssE,SAAW,IAAIrsE,IAyGxBD,KAAA+3E,kBAAiD/3E,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACnE9X,KAAAg4E,iBAA8Ch4E,KAAK+3E,kBAAkB1gE,MAEtErX,KAAAi4E,SAA2Bj4E,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAC7C9X,KAAA+Q,QAAwB/Q,KAAKi4E,SAAS5gE,MA+oBvCrX,KAAAk4E,eAA4Cl4E,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAC9D9X,KAAA4mE,cAAyC5mE,KAAKk4E,eAAe7gE,MAE9DrX,KAAAm4E,eAAiB,IAAIl4E,IAgErBD,KAAAo4E,YAAwC,IAAIn4E,IA7zBpDF,iBAAiB+/B,EAAgBwsC,GAChC,GAAItsE,KAAKssE,SAASpjE,IAAI42B,GACrB,MAAM,IAAIhhC,MAAM,yCAAyCghC,6BAI1D9/B,KAAKssE,SAASlsE,IAAI0/B,EAAQwsC,GAC1BtsE,KAAK03E,4CAA4C3/D,KAAK,CAAErQ,OAAO,EAAMo4B,OAAAA,EAAQwsC,SAAAA,IAG7E,MAAM+L,EAAsB,IAAI1/D,EAAAvD;CAOhC,OANAijE,EAAoBh4E,IAAIisE,EAASgM,gBAAgBpK,GAAWluE,KAAKk4E,eAAengE,KAAK,IAAIi4D,EAAA/B,iBAAiBC,MAC1GmK,EAAoBh4E,IAAIisE,EAASiM,wBAAwB,IAAMv4E,KAAK63E,2CAA2C9/D,KAAK,CAAEu0D,SAAAA,EAAUxsC,OAAAA,MACxF,mBAA7BwsC,EAASkM,iBACnBH,EAAoBh4E,IAAIisE,EAASkM,gBAAgB78E,GAASqE,KAAKi4E,SAASlgE,KAAK,IAAIjZ,MAAMnD,MAGjFgd,EAAAxD,aAAa,KACnBnV,KAAK03E,4CAA4C3/D,KAAK,CAAErQ,OAAO,EAAOo4B,OAAAA,EAAQwsC,SAAAA,IAC9EtsE,KAAKssE,SAAShsE,OAAOw/B,GAErBnnB,EAAA7D,QAAQujE,KAIVt4E,uBAAuB+/B,GAItB,MAAM24C,EAA2B,GACjCz4E,KAAK23E,kCAAkC5/D,KAAK,CAC3C+nB,OAAAA,EACA//B,KAAKma,GACAA,GACHu+D,EAAQxhF,KAAKijB,MAKZla,KAAKssE,SAASpjE,IAAI42B,UAMhBtnC,QAAQgB,IAAIi/E,GAGnB14E,kBAAkBoiB,GACjB,OAAOniB,KAAKssE,SAASpjE,IAAIiZ,EAAS2d,QAGnC//B,cAAcoiB,EAAeu2D,GAC5B,MAAMpM,EAAWtsE,KAAKssE,SAASpsE,IAAIiiB,EAAS2d,QAE5C,SAAUwsC,GAAaA,EAASC,aAAemM,GAGtC34E,mBAAmBoiB,GAG5B,IAAKmxB,EAAAtC,eAAe7uB,GACnB,MAAM,IAAI6tD,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAAe,KAAuEr0D,KAAK24E,iBAAiBx2D,IAAU,SAIvJniB,KAAK44E,iBAAiBz2D,EAAS2d,QAGrC,MAAMwsC,EAAWtsE,KAAKssE,SAASpsE,IAAIiiB,EAAS2d,QAC5C,IAAKwsC,EAAU,CACd,MAAM3wE,EAAQ,IAAImD,MAIlB,MAHAnD,EAAM3E,KAAO;AACb2E,EAAMkD,QAAUk2D,EAAAV,SAAS,EAAmB,KAAoDlyC,EAAS1H,YAEnG9e,EAGP,OAAO2wE,EAGAvsE,uBAAuBoiB,GAC9B,MAAMmqD,QAAiBtsE,KAAK64E,aAAa12D,GAEzC,GAAI6tD,EAAAvD,gCAAgCH,IAAa0D,EAAA3D,uBAAuBC,IAAa0D,EAAAtD,4BAA4BJ,GAChH,OAAOA,EAGR,MAAM,IAAIxtE,MAAM,mCAAmCqjB,EAAS2d,mIAGrD//B,wBAAwBoiB,GAC/B,MAAMmqD,QAAiBtsE,KAAK64E,aAAa12D,GAEzC,GAAI6tD,EAAAvD,gCAAgCH,IAAa0D,EAAA3D,uBAAuBC,GACvE,OAAOA,EAGR,MAAM,IAAIxtE,MAAM,mCAAmCqjB,EAAS2d,oHAe7D//B,cAAcoiB,EAAelS,GAC5B,IACC,aAAajQ,KAAK84E,cAAc32D,EAAUlS,GACzC,MAAOtU,GAGR,GAAIq0E,EAAAjD,8BAA8BpxE,KAAWq0E,EAAA/D,4BAA4BmB,aACxE,MAAM,IAAI4C,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAAqB,KAA6Cr0D,KAAK24E,iBAAiBx2D,IAAU,GAIzI,MAAM6tD,EAAAvC,8BAA8B9xE,IAM9BoE,oBAAoBoiB,EAAelS;AAC1C,MAAMq8D,QAAiBtsE,KAAK64E,aAAa12D,GAEnC42D,EAAY9oE,MAAAA,OAAO,EAAPA,EAAS8oE,UACrBC,EAAgC/oE,MAAAA,OAAO,EAAPA,EAAS+oE,8BACzCC,EAAkBhpE,MAAAA,OAAO,EAAPA,EAASgpE,gBAE3BhgF,QAAaqzE,EAASrzE,KAAKkpB,GAEjC,IAAI+2D,EAEJ,OAAOl5E,KAAKm5E,WAAW7M,EAAUnqD,EAAUlpB,OAAMY,IAAao/E,EAAiB,CAAChgF,EAAM4zC,KAGhFqsC,KACJA,EAAO7vC,EAAArD,kBAAkBsM,YACpBlyC,IAAI+hB,EAAS1H,YAAY,GAC1B2+D,EAAAxwE,gBAAgBmwE,IACnBA,EAAU15E,QAAQsjC,GAAOu2C,EAAM94E,IAAIuiC,EAAIloB,YAAY,OAKjD4+D,QAAQH,EAAKI,aAAargF,EAAKkpB,SAAS1H,aAAey+D,EAAKh5E,IAAIjH,EAAKkpB,SAAS1H,iBAK9ExhB,EAAKC,cAAe8/E,IACH,IAAbnsC,IASF9sC,iBAAiBusE,EAA+BnqD,EAAelpB,EAAmD4zC,EAA8BosC,EAA0BM,GAGjL,MAAM13B,EAAsB,CAC3B1/B,SAAAA,EACAnrB,KAAMwiF,EAAA9lC,aAAavxB,GACnBogC,OAAwC,IAA/BtpD,EAAKqZ,KAAO09D,EAAA7D,SAASsN,MAC9BvgF,YAAkD,IAApCD,EAAKqZ,KAAO09D,EAAA7D,SAASuN,WACnCvgF,eAAwD,IAAvCF,EAAKqZ,KAAO09D,EAAA7D,SAASwN,cACtCrK,MAAOr2E,EAAKq2E,MACZsK,MAAO3gF,EAAK2gF,MACZ16E,KAAMjG,EAAKiG,KACXmwE,KAAMW,EAAAX,KAAK,CAAEC,MAAOr2E,EAAKq2E,MAAOpwE,KAAMjG,EAAKiG,QAI5C,GAAI2iD,EAAS3oD,aAAeqgF,EAAQ13B,EAAUhV,GAAW,CACxD,IACC,MAAMx1C,QAAgBi1E,EAASjzE,QAAQ8oB,GACjC03D,QAAwBrhF,QAAQgB,IAAInC,EAAQoC,IAAIyqB,OAAQltB,EAAMsb,MACnE,IACC,MAAMwnE,EAAgBxmC,EAAA3C,SAASxuB,EAAUnrB,GACnC+iF,EAAYd,QAAwB3M,EAASrzE,KAAK6gF,GAAiB,CAAExnE,KAAAA,GAE3E,aAAatS,KAAKm5E,WAAW7M,EAAUwN,EAAeC,EAAW1iF,EAAQf,OAAQ2iF,EAAiBM,GACjG,MAAO59E,GAGR,OAFAqE,KAAKw/D,WAAW2V,MAAMx5E,GAEf,SAKTkmD,EAAStoD,SAAW6/E,EAAAhxE,SAASyxE;CAC5B,MAAOl+E,GACRqE,KAAKw/D,WAAW2V,MAAMx5E,GAEtBkmD,EAAStoD,SAAW,GAGrB,OAAOsoD,EAGR,OAAOA,EAKR9hD,iBAAiBi6E,GAChB,OAAOxhF,QAAQgB,IAAIwgF,EAAUvgF,IAAIyqB,MAAMwf,IACtC,IACC,MAAO,CAAEzqC,WAAY+G,KAAK84E,cAAcp1C,EAAMvhB,SAAUuhB,EAAMzzB,SAAUooD,SAAS,GAChF,MAAO18D,GAGR,OAFAqE,KAAKw/D,WAAW2V,MAAMx5E,GAEf,CAAE1C,UAAMY,EAAWw+D,SAAS,OAKtCt4D,aAAaoiB,GACZ,MAAMmqD,QAAiBtsE,KAAK64E,aAAa12D,GAEzC,IAGC,cAFmBmqD,EAASrzE,KAAKkpB,GAGhC,MAAOxmB,GACR,OAAO,GAQToE,iBAAiBoiB,EAAe83D,EAAiFlzB,EAAA9uB,SAASqB,WAAW,IAAKrpB,GAGzI,KAAKA,MAAAA,OAAO,EAAPA,EAAS6uB,kBAAmB9+B,KAAK1H,OAAO6pB,GAC5C,MAAM,IAAI6tD,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAAc,KAAkFr0D,KAAK24E,iBAAiBx2D,IAAU,EAA2ClS,GAIlN,MAAM4xC,QAAiB7hD,KAAK5F,UAAU+nB,EAAU83D,GAKhD,OAFAj6E,KAAK+3E,kBAAkBhgE,KAAK,IAAIi4D,EAAAlC,mBAAmB3rD,EAAQ,EAAwB0/B,IAE5EA,EAGR9hD,gBAAgBoiB,EAAe83D,EAAgFhqE,GAC9G,MAAMq8D,EAAWtsE,KAAKk6E,kCAAkCl6E,KAAKm6E,kBAAkBh4D,GAAWA,GAE1F,UAGoBniB,KAAKo6E,kBAAkB9N,EAAUnqD,EAAUlS,UAIvDjQ,KAAK3C,OAAOivE,EAAUh5B,EAAAvnB,QAAQ5J;CAOjC6tD,EAAA3D,uBAAuBC,IAAe2N,aAAoClzB,EAAA9uB,WAE5EgiD,EADGhhC,EAAA5sB,iBAAiB4tD,SACahhC,EAAAprB,uBAAuBosD,EAA0B9/E,GAAQ4sD,EAAA9uB,SAASvuB,OAAOvP,GAAO,GAEtF8+C,EAAAzrB,yBAAyBysD,EAA0B9/E,GAAQ4sD,EAAA9uB,SAASvuB,OAAOvP,GAAO,KAK1G61E,EAAAvD,gCAAgCH,IAAc0D,EAAA3D,uBAAuBC,IAAa2N,aAAoClzB,EAAA9uB,eACpHj4B,KAAKq6E,kBAAkB/N,EAAUnqD,EAAU83D,SAK3Cj6E,KAAKs6E,gBAAgBhO,EAAUnqD,EAAU83D,aAAoClzB,EAAA9uB,SAAW8uB,EAAA7tB,iBAAiB+gD,GAA4BA,GAE3I,MAAOt+E,GACR,MAAM,IAAIq0E,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAAa,KAAoCr0D,KAAK24E,iBAAiBx2D,GAAW6tD,EAAAvC,8BAA8B9xE,GAAO8e,YAAau1D,EAAAtC,sBAAsB/xE,GAAQsU,GAGzM,OAAOjQ,KAAK/F,QAAQkoB,EAAU,CAAE82D,iBAAiB,IAG1Cl5E,wBAAwBusE,EAA+BnqD,EAAelS,GAC7E,IAAIhX,OAA0BY,EAC9B,IACCZ,QAAaqzE,EAASrzE,KAAKkpB,GAC1B,MAAOxmB,GACR,OAID,GAAyC,IAApC1C,EAAKqZ,KAAO09D,EAAA7D,SAASuN,WACzB,MAAM,IAAI1J,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAA6B,KAA2Dr0D,KAAK24E,iBAAiBx2D,IAAU,EAAyClS,GAexM,GACCA,GAAoC,iBAAlBA,EAAQq/D,OAA8C,iBAAjBr/D,EAAQo/D,MAAqBp/D,EAAQo/D,OAASW,EAAAZ,eAC/E,iBAAfn2E,EAAKq2E,OAA2C,iBAAdr2E,EAAKiG,MAC9C+Q,EAAQq/D,MAAQr2E,EAAKq2E,OAASr/D,EAAQo/D,OAASW,EAAAX,KAAK,CAAEC,MAAOr/D,EAAQq/D,MAA0DpwE,KAAMjG,EAAKiG;GAE1I,MAAM,IAAI8wE,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAAqB,MAAsB,EAA2CpkD,GAG7H,OAAOhX,EAGR8G,eAAeoiB,EAAelS,GAC7B,MAAMq8D,QAAiBtsE,KAAKu6E,iBAAiBp4D,GAEvCyL,QAAe5tB,KAAKw6E,mBAAmBlO,EAAUnqD,EAAUi5C,EAAA1+C,OAAO,CAMvE+9D,kBAAkB,GAChBxqE,GAAWtS,OAAOK,OAAO,QAE5B,OAAAL,OAAA+e,OAAA/e,OAAA+e,OAAA,GACIkR,GAAM,CACThvB,YAAamoD,EAAA5tB,eAAevL,EAAOhvB,SAIrCmB,qBAAqBoiB,EAAelS,GACnC,MAAMq8D,QAAiBtsE,KAAKu6E,iBAAiBp4D,GAE7C,OAAOniB,KAAKw6E,mBAAmBlO,EAAUnqD,EAAUlS,GAG5ClQ,yBAAyBusE,EAAkKnqD,EAAelS,GAMjN,MAAMyqE,EAAoB,IAAIh8D,EAAAP,wBAGxBw8D,EAAc36E,KAAK46E,iBAAiBz4D,EAAUlS,GAASjX,KAAKC,GAAQA,EAAM0C,IAG/E,MAFA++E,EAAkBp8D,SAEZ3iB,IAGP,IAUC,IAAIk/E,EAJA5qE,GAAmC,iBAAjBA,EAAQo/D,MAAqBp/D,EAAQo/D,OAASW,EAAAZ,qBAC7DuL,EAONE,GADK7K,EAAAvD,gCAAgCH,KAAa0D,EAAAtD,4BAA4BJ,IAAe0D,EAAA3D,uBAAuBC,KAAar8D,MAAAA,OAAO,EAAPA,EAASwqE,kBACtHz6E,KAAK86E,mBAAmBxO,EAAUnqD,EAAUlS,GAIxD+/D,EAAAtD,4BAA4BJ,GAChB9zE,QAAQyB,QAAQ+F,KAAK+6E,iBAAiBzO,EAAUnqD,EAAUu4D,EAAkB3yE,MAAOkI,IAKnFzX,QAAQyB,QAAQ+F,KAAKg7E,iBAAiB1O,EAAUnqD,EAAUu4D,EAAkB3yE,MAAOkI,IAGxG,MAAO4xC,EAAUo5B,SAAoBziF,QAAQgB,IAAI,CAACmhF,EAAaE,IAE/D,OAAAl9E,OAAA+e,OAAA/e,OAAA+e,OAAA,GACImlC,GAAQ,CACXjjD,MAAOq8E,IAEP,MAAOt/E;AACR,MAAM,IAAIq0E,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAAY,KAAmCr0D,KAAK24E,iBAAiBx2D,GAAW6tD,EAAAvC,8BAA8B9xE,GAAO8e,YAAau1D,EAAAtC,sBAAsB/xE,GAAQsU,IAIhMlQ,iBAAiBusE,EAA2DnqD,EAAepa,EAA0BkI,EAA4BtS,OAAOK,OAAO,OACtK,MAAMi9E,EAAa3O,EAAS4O,eAAe/4D,EAAUlS,EAASlI,GAE9D,OAAO/H,KAAKm7E,wBAAwBh5D,EAAU84D,EAAYhrE,GAGnDlQ,iBAAiBusE,EAA+DnqD,EAAepa,EAA0BkI,EAA4BtS,OAAOK,OAAO,OAC1K,MAAMi9E,EAAaG,EAAAt5B,iBAAiBwqB,EAAUnqD,EAAQxkB,OAAA+e,OAAA/e,OAAA+e,OAAA,GAClDzM,GAAO,CACVigE,WAAYlwE,KAAKy3E,cACf1vE,GAEH,OAAO/H,KAAKm7E,wBAAwBh5D,EAAU84D,EAAYhrE,GAGnDlQ,wBAAwBoiB,EAAeyL,EAAqD3d,GACnG,OAAOgpC,EAAAhrB,UAAUL,EAAQ,CACxBzzB,KAAMA,GAAQA,aAAgB4sD,EAAA9uB,SAAW99B,EAAO4sD,EAAA9uB,SAASsB,KAAKp/B,GAC9DwB,MAAOA,GAAS,IAAIq0E,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAAY,KAAmCr0D,KAAK24E,iBAAiBx2D,GAAW6tD,EAAAvC,8BAA8B9xE,GAAO8e,YAAau1D,EAAAtC,sBAAsB/xE,GAAQsU,IAC9M9V,GAAQ4sD,EAAA9uB,SAASvuB,OAAOvP,IAGpB4F,yBAAyBusE,EAA0DnqD,EAAelS,GACzG,IAAIiJ,QAAeozD,EAAStyE,SAASmoB,GAerC,OAZIlS,GAAuC,iBAArBA,EAAQlH,WAC7BmQ,EAASA,EAAOlhB,MAAMiY,EAAQlH,WAI3BkH,GAAqC,iBAAnBA,EAAQ3Z,SAC7B4iB,EAASA,EAAOlhB,MAAM,EAAGiY,EAAQ3Z,SAIlC0J,KAAKq7E,uBAAuBl5D,EAAUjJ,EAAOub,WAAYxkB,GAElD82C,EAAA3tB,eAAe2tB,EAAA9uB,SAASsB,KAAKrgB;AAG7BnZ,uBAAuBoiB,EAAelS,GAC7C,MAAMhX,QAAa+G,KAAK/F,QAAQkoB,EAAU,CAAE82D,iBAAiB,IAG7D,GAAIhgF,EAAKC,YACR,MAAM,IAAI82E,EAAArC,mBAAmB5Y,EAAAV,SAAS,EAA4B,KAA0Dr0D,KAAK24E,iBAAiBx2D,IAAU,EAAyClS,GAItM,GAAIA,GAAmC,iBAAjBA,EAAQo/D,MAAqBp/D,EAAQo/D,OAASW,EAAAZ,eAAiBn/D,EAAQo/D,OAASp2E,EAAKo2E,KAC1G,MAAM,IAAIW,EAAArC,mBAAmB5Y,EAAAV,SAAS,GAAwB,MAA0B,EAA+CpkD,GAMxI,OAFAjQ,KAAKq7E,uBAAuBl5D,EAAUlpB,EAAKiG,KAAM+Q,GAE1ChX,EAGA8G,uBAAuBoiB,EAAejjB,EAAc+Q,GAC3D,GAAIA,MAAAA,OAAO,EAAPA,EAAS6/D,OAAQ,CACpB,IAAIwL,OAAuDzhF,EAU3D,GARqC,iBAA1BoW,EAAQ6/D,OAAOC,QAAuB7wE,EAAO+Q,EAAQ6/D,OAAOC,SACtEuL,EAAmB,GAGe,iBAAxBrrE,EAAQ6/D,OAAO5wE,MAAqBA,EAAO+Q,EAAQ6/D,OAAO5wE,OACpEo8E,EAAmB,GAGe,iBAAxBA,EACV,MAAM,IAAItL,EAAArC,mBAAmB5Y,EAAAV,SAAS,GAAqB,KAAuDr0D,KAAK24E,iBAAiBx2D,IAAYm5D,IASvJv7E,WAAW0e,EAAa9mB,EAAamnC,GACpC,MAAMy8C,EAAiBv7E,KAAKk6E,kCAAkCl6E,KAAKm6E,kBAAkB17D,GAASA,GACxF+8D,EAAiBx7E,KAAKk6E,kCAAkCl6E,KAAKm6E,kBAAkBxiF,GAASA,GAGxF+lD,QAAa19C,KAAKy7E,WAAWF,EAAgB98D,EAAQ+8D,EAAgB7jF,EAAQ,SAAUmnC,GAGvF+iB,QAAiB7hD,KAAK/F,QAAQtC,EAAQ,CAAEshF,iBAAiB,IAG/D,OAFAj5E,KAAK+3E,kBAAkBhgE,KAAK,IAAIi4D,EAAAlC,mBAAmBrvD,EAAiB,SAATi/B,EAAiB,EAAqB,EAAqBmE,IAE/GA,EAGR9hD,WAAW0e,EAAa9mB,EAAamnC;AACpC,MAAMy8C,QAAuBv7E,KAAKu6E,iBAAiB97D,GAC7C+8D,EAAiBx7E,KAAKk6E,kCAAkCl6E,KAAKm6E,kBAAkBxiF,GAASA,GAGxF+lD,QAAa19C,KAAKy7E,WAAWF,EAAgB98D,EAAQ+8D,EAAgB7jF,EAAQ,SAAUmnC,GAGvF+iB,QAAiB7hD,KAAK/F,QAAQtC,EAAQ,CAAEshF,iBAAiB,IAG/D,OAFAj5E,KAAK+3E,kBAAkBhgE,KAAK,IAAIi4D,EAAAlC,mBAAmBrvD,EAAiB,SAATi/B,EAAiB,EAAqB,EAAqBmE,IAE/GA,EAGA9hD,iBAAiBw7E,EAAqC98D,EAAa+8D,EAAqC7jF,EAAa+lD,EAAuB5e,GACnJ,GAAIrgB,EAAOhE,aAAe9iB,EAAO8iB,WAChC,OAAOijC,EAIR,MAAMplD,OAAEA,EAAMojF,oCAAEA,SAA8C17E,KAAK27E,mBAAmBJ,EAAgB98D,EAAQ+8D,EAAgB7jF,EAAQ+lD,EAAM5e,GAW5I,GARIxmC,IAAWojF,GAAuC58C,SAC/C9+B,KAAK47E,IAAIjkF,EAAQ,CAAEyF,WAAW,UAI/B4C,KAAK3C,OAAOm+E,EAAgBloC,EAAAvnB,QAAQp0B,IAG7B,SAAT+lD,EAAiB,CAGpB,GAAI69B,IAAmBC,GAAkBxL,EAAAxD,4BAA4B+O,SAC9DA,EAAe75B,KAAKjjC,EAAQ9mB,EAAQ,CAAEmnC,UAAAA,QAKxC,CACJ,MAAM+8C,QAAmB77E,KAAK/F,QAAQwkB,GAClCo9D,EAAW3iF,kBACR8G,KAAK87E,aAAaP,EAAgBM,EAAYL,EAAgB7jF,SAE9DqI,KAAK+hD,WAAWw5B,EAAgB98D,EAAQ+8D,EAAgB7jF,GAIhE,OAAO+lD,EAOP,OAAI69B,IAAmBC,SAChBD,EAAer9B,OAAOz/B,EAAQ9mB,EAAQ,CAAEmnC,UAAAA,IAEvC4e,UAKD19C,KAAKy7E,WAAWF,EAAgB98D,EAAQ+8D,EAAgB7jF,EAAQ,OAAQmnC,SAExE9+B,KAAK47E,IAAIn9D,EAAQ,CAAErhB,WAAW,IAE7B,QAKF2C,iBAAiBw7E,EAAqC98D,EAAa+8D,EAAqC7jF;AAG/G,OAAIq4E,EAAAvD,gCAAgC8O,IAAmBvL,EAAAvD,gCAAgC+O,GAC/Ex7E,KAAK+7E,eAAeR,EAAgB98D,EAAQ+8D,EAAgB7jF,GAIhEq4E,EAAAvD,gCAAgC8O,IAAmBvL,EAAA3D,uBAAuBmP,GACtEx7E,KAAKg8E,2BAA2BT,EAAgB98D,EAAQ+8D,EAAgB7jF,GAI5Eq4E,EAAA3D,uBAAuBkP,IAAmBvL,EAAAvD,gCAAgC+O,GACtEx7E,KAAKi8E,2BAA2BV,EAAgB98D,EAAQ+8D,EAAgB7jF,GAI5Eq4E,EAAA3D,uBAAuBkP,IAAmBvL,EAAA3D,uBAAuBmP,GAC7Dx7E,KAAKk8E,iBAAiBX,EAAgB98D,EAAQ+8D,EAAgB7jF,QADtE,EAKOoI,mBAAmBw7E,EAAqCY,EAAyBX,EAAqCY,SAGvHZ,EAAer+E,MAAMi/E,GAGvB1zE,MAAMC,QAAQwzE,EAAa5iF,iBACxBf,QAAQgB,IAAI2iF,EAAa5iF,SAASE,IAAIyqB,MAAMm4D,IACjD,MAAMC,EAAchpC,EAAA3C,SAASyrC,EAAcC,EAAYrlF,MACvD,OAAIqlF,EAAYnjF,YACR8G,KAAK87E,aAAaP,QAAsBv7E,KAAK/F,QAAQoiF,EAAYl6D,UAAWq5D,EAAgBc,GAE5Ft8E,KAAK+hD,WAAWw5B,EAAgBc,EAAYl6D,SAAUq5D,EAAgBc,MAMzEv8E,yBAAyBw7E,EAAqC98D,EAAa+8D,EAAqC7jF,EAAa+lD,EAAuB5e,GAC3J,IAAI48C,GAAsC,EAG1C,GAAIH,IAAmBC,EAAgB,CACtC,MAAMe,KAAoD,KAA3BhB,EAAehP,cAK9C,GAJKgQ,IACJb,EAAsCpoC,EAAApY,QAAQzc,EAAQ9mB,GAAQ,IAG3D+jF,GAAgD,SAATh+B,EAC1C,MAAM,IAAI5+C,MAAMi2D,EAAAV,SAAS,GAA0B,KAAuHr0D,KAAK24E,iBAAiBl6D,GAASze,KAAK24E,iBAAiBhhF,KAGhO,IAAK+jF,GAAuCpoC,EAAAhY,gBAAgB3jC,EAAQ8mB,GAAS89D,GAC5E,MAAM,IAAIz9E,MAAMi2D,EAAAV,SAAS,GAA0B,KAAoEr0D,KAAK24E,iBAAiBl6D,GAASze,KAAK24E,iBAAiBhhF;AAK9K,MAAMW,QAAe0H,KAAK1H,OAAOX,GACjC,GAAIW,IAAWojF,EAAqC,CAGnD,IAAK58C,EACJ,MAAM,IAAIkxC,EAAArC,mBAAmB5Y,EAAAV,SAAS,GAA0B,KAAiFr0D,KAAK24E,iBAAiBl6D,GAASze,KAAK24E,iBAAiBhhF,IAAQ,GAK/M,GAAI4jF,IAAmBC,EAAgB,CACtC,MAAMe,KAAoD,KAA3BhB,EAAehP,cAC9C,GAAIj5B,EAAAhY,gBAAgB7c,EAAQ9mB,GAAS4kF,GACpC,MAAM,IAAIz9E,MAAMi2D,EAAAV,SAAS,GAA0B,KAAkGr0D,KAAK24E,iBAAiBl6D,GAASze,KAAK24E,iBAAiBhhF,MAK7M,MAAO,CAAEW,OAAAA,EAAQojF,oCAAAA,GAGlB37E,mBAAmBoiB,GAClB,MAAMmqD,EAAWtsE,KAAKk6E,kCAAkCl6E,KAAK64E,aAAa12D,GAAWA,SAG/EniB,KAAK3C,OAAOivE,EAAUnqD,GAG5B,MAAM0/B,QAAiB7hD,KAAK/F,QAAQkoB,EAAU,CAAE82D,iBAAiB,IAGjE,OAFAj5E,KAAK+3E,kBAAkBhgE,KAAK,IAAIi4D,EAAAlC,mBAAmB3rD,EAAQ,EAAwB0/B,IAE5EA,EAGA9hD,aAAausE,EAA+BkQ,GACnD,MAAMC,EAAgC,GAGtC,MAAQnpC,EAAApY,QAAQshD,EAAWlpC,EAAAvnB,QAAQywD,KAClC,IAEC,GAAyC,WADtBlQ,EAASrzE,KAAKujF,IACvBlqE,KAAO09D,EAAA7D,SAASuN,WACzB,MAAM,IAAI56E,MAAMi2D,EAAAV,SAAS,GAAoB,KAA4Er0D,KAAK24E,iBAAiB6D,KAGhJ,MACC,MAAO7gF,GAGR,GAAIq0E,EAAAjD,8BAA8BpxE,KAAWq0E,EAAA/D,4BAA4BmB,aACxE,MAAMzxE,EAIP8gF,EAAoBxlF,KAAKq8C,EAAAtnB,SAASwwD,IAGlCA,EAAYlpC,EAAAvnB,QAAQywD,GAKtB,IAAK,IAAIpmF,EAAIqmF,EAAoBnmF,OAAS,EAAGF,GAAK,EAAGA,IAAK,CACzDomF,EAAYlpC,EAAA3C,SAAS6rC,EAAWC,EAAoBrmF,IAEpD,UACOk2E,EAASnvE,MAAMq/E,GACpB,MAAO7gF;AACR,GAAIq0E,EAAAjD,8BAA8BpxE,KAAWq0E,EAAA/D,4BAA4BgB,WASxE,MAAMtxE,IAMVoE,UAAUoiB,EAAelS,GACxB,MAAMq8D,EAAWtsE,KAAKk6E,kCAAkCl6E,KAAK64E,aAAa12D,GAAWA,GAG/Eu6D,KAAazsE,MAAAA,OAAO,EAAPA,EAASysE,UAC5B,GAAIA,KAAmC,KAArBpQ,EAASC,cAC1B,MAAM,IAAIztE,MAAMi2D,EAAAV,SAAS,GAAgC,KAA+Er0D,KAAK24E,iBAAiBx2D,KAI/J,MAAM7pB,QAAe0H,KAAK1H,OAAO6pB,GACjC,IAAK7pB,EACJ,MAAM,IAAI03E,EAAArC,mBAAmB5Y,EAAAV,SAAS,GAAwB,KAA4Cr0D,KAAK24E,iBAAiBx2D,IAAU,GAI3I,MAAM/kB,KAAc6S,MAAAA,OAAO,EAAPA,EAAS7S,WAC7B,IAAKA,GAAa9E,EAAQ,CACzB,MAAMW,QAAa+G,KAAK/F,QAAQkoB,GAChC,GAAIlpB,EAAKC,aAAewP,MAAMC,QAAQ1P,EAAKM,WAAaN,EAAKM,SAASjD,OAAS,EAC9E,MAAM,IAAIwI,MAAMi2D,EAAAV,SAAS,GAA8B,KAA4Cr0D,KAAK24E,iBAAiBx2D,WAKrHmqD,EAAShsE,OAAO6hB,EAAU,CAAE/kB,UAAAA,EAAWs/E,SAAAA,IAG7C18E,KAAK+3E,kBAAkBhgE,KAAK,IAAIi4D,EAAAlC,mBAAmB3rD,EAAQ,IAY5DpiB,MAAMoiB,EAAelS,EAAyB,CAAE7S,WAAW,EAAOorE,SAAU,KAC3E,IAAImU,GAAgB,EAChBC,EAAkBjkE,EAAAxD,aAAa,IAAMwnE,GAAgB,GAYzD,OARA38E,KAAK68E,QAAQ16D,EAAUlS,GAASjX,KAAK+qD,IAChC44B,EACHhkE,EAAA7D,QAAQivC,GAER64B,EAAkB74B,GAEjBpoD,GAASqE,KAAKw/D,WAAW7jE,MAAMA,IAE3Bgd,EAAAxD,aAAa,IAAMwD,EAAA7D,QAAQ8nE,IAGnC78E,cAAcoiB,EAAelS,GAC5B,MAAMq8D,QAAiBtsE,KAAK64E,aAAa12D,GACnC5jB,EAAMyB,KAAK88E,WAAWxQ,EAAUnqD,EAAUlS,GAG1C+zC,EAAUhkD,KAAKm4E,eAAej4E,IAAI3B,IAAQ;AAAEY,MAAO,EAAG4kD,WAAYuoB,EAASpoB,MAAM/hC,EAAUlS,IAQjG,OAPKjQ,KAAKm4E,eAAejvE,IAAI3K,IAC5ByB,KAAKm4E,eAAe/3E,IAAI7B,EAAKylD,GAI9BA,EAAQ7kD,OAAS,EAEVwZ,EAAAxD,aAAa,KAGnB6uC,EAAQ7kD,QAGc,IAAlB6kD,EAAQ7kD,QACXwZ,EAAA7D,QAAQkvC,EAAQD,YAChB/jD,KAAKm4E,eAAe73E,OAAO/B,MAKtBwB,WAAWusE,EAA+BnqD,EAAelS,GAChE,MAAO,CACNjQ,KAAK+8E,SAASzQ,EAAUnqD,GACxB/d,OAAO6L,EAAQ7S,WACf6S,EAAQu4D,SAAS7uE,QAChBA,OAGHoG,UACCuE,MAAMwQ,UAEN9U,KAAKm4E,eAAe94E,QAAQ2kD,GAAWrrC,EAAA7D,QAAQkvC,EAAQD,aACvD/jD,KAAKm4E,eAAe32E,QASbzB,iBAAiBusE,EAA+BnqD,GAIvD,MAAMw9B,EAAW3/C,KAAK+8E,SAASzQ,EAAUnqD,GACzC,IAAI66D,EAAah9E,KAAKo4E,YAAYl4E,IAAIy/C,GACtC,IAAKq9B,EAAY,CAChBA,EAAa,IAAIjxC,EAAA/pB,MACjBhiB,KAAKo4E,YAAYh4E,IAAIu/C,EAAUq9B,GAEdh/D,EAAA5G,MAAM5L,KAAKwxE,EAAWp7D,WACvCk+B,CAAS,KACR9/C,KAAKo4E,YAAY93E,OAAOq/C,GACxBhnC,EAAA7D,QAAQkoE,KAIV,OAAOA,EAGAj9E,SAASusE,EAA+BnqD,GAG/C,SAFoD,KAArBmqD,EAASC,cAEXpqD,EAAS1H,WAAa0H,EAAS1H,WAAWkP,cAGhE5pB,sBAAsBusE,EAA+DnqD,EAAe86D,GAC3G,OAAOj9E,KAAKk9E,iBAAiB5Q,EAAUnqD,GAAU3C,MAAM0E,UAGtD,MAAM/L,QAAem0D,EAAS9rB,KAAKr+B,EAAU,CAAEnkB,QAAQ,IAGvD,IACKi7C,EAAA5sB,iBAAiB4wD,SACdj9E,KAAKm9E,4BAA4B7Q,EAAUn0D,EAAQ8kE,SAEnDj9E,KAAKo9E,8BAA8B9Q,EAAUn0D,EAAQ8kE,GAE3D,MAAOthF,GACR,MAAMq0E,EAAAvC,8BAA8B9xE,iBAI9B2wE,EAAS1rB,MAAMzoC;AAKhBpY,4BAA4BusE,EAA+Dn0D,EAAgByV,GAClH,OAAO,IAAIp1B,QAAQ,CAACyB,EAASC,KAC5B,IAAIi2E,EAAY,EAEhBviD,EAAOjU,GAAG,OAAQuK,MAAMoJ,IAGvBM,EAAOtB,QAEP,UACOtsB,KAAKq9E,cAAc/Q,EAAUn0D,EAAQmV,EAAOA,EAAMmH,WAAY07C,EAAW,GAC9E,MAAOx0E,GACR,OAAOzB,EAAOyB,GAGfw0E,GAAa7iD,EAAMmH,WAMnBryB,WAAW,IAAMwrB,EAAOrB,YAGzBqB,EAAOjU,GAAG,QAAShe,GAASzB,EAAOyB,IACnCiyB,EAAOjU,GAAG,MAAO,IAAM1f,OAIjB8F,oCAAoCusE,EAA+Dn0D,EAAgBiV,GAC1H,IAEIE,EAFA6iD,EAAY,EAGhB,KAAqC,QAA7B7iD,EAAQF,EAASG,eAClBvtB,KAAKq9E,cAAc/Q,EAAUn0D,EAAQmV,EAAOA,EAAMmH,WAAY07C,EAAW,GAE/EA,GAAa7iD,EAAMmH,WAIb10B,oBAAoBusE,EAA+Dn0D,EAAgBe,EAAkB5iB,EAAgB65E,EAAmBC,GAC/J,IAAIkN,EAAoB,EACxB,KAAOA,EAAoBhnF,GAAQ,CAElCgnF,SAD2BhR,EAASr/C,MAAM9U,EAAQg4D,EAAYmN,EAAmBpkE,EAAOA,OAAQk3D,EAAckN,EAAmBhnF,EAASgnF,IAKpIv9E,wBAAwBusE,EAA0DnqD,EAAe83D,GACxG,OAAOj6E,KAAKk9E,iBAAiB5Q,EAAUnqD,GAAU3C,MAAM,IAAMxf,KAAKu9E,wBAAwBjR,EAAUnqD,EAAU83D,IAGvGl6E,8BAA8BusE,EAA0DnqD,EAAe83D,GAC9G,IAAI/gE,EASJ,OAPCA,EADG+gE,aAAoClzB,EAAA9uB,SAC9BgiD,EACChhC,EAAA5sB,iBAAiB4tD,SACZlzB,EAAA5tB,eAAe8gD,GAErBlzB,EAAA/tB,iBAAiBihD,GAGpB3N,EAASlyE,UAAU+nB,EAAUjJ,EAAOA,OAAQ,CAAElb,QAAQ,EAAM8gC,WAAW,IAGvE/+B,qBAAqBw7E,EAAqE98D,EAAa+8D,EAAqE7jF,GACnL,OAAOqI,KAAKk9E,iBAAiB1B,EAAgB7jF,GAAQ6nB,MAAM,IAAMxf,KAAKw9E,qBAAqBjC,EAAgB98D,EAAQ+8D,EAAgB7jF,IAG5HoI,2BAA2Bw7E,EAAqE98D,EAAa+8D,EAAqE7jF,GACzL,IAAI8lF,OAAmC5jF,EACnC6jF,OAAmC7jF,EAEvC,IAGC4jF,QAAqBlC,EAAe/6B,KAAK/hC,EAAQ,CAAEzgB,QAAQ;AAC3D0/E,QAAqBlC,EAAeh7B,KAAK7oD,EAAQ,CAAEqG,QAAQ,IAE3D,MAAMkb,EAAS6tC,EAAA9uB,SAASO,MAAMx4B,KAAKy3E,aAEnC,IAAItH,EAAY,EACZC,EAAc,EACd33B,EAAY,EAChB,GAGCA,QAAkB8iC,EAAehuD,KAAKkwD,EAActN,EAAWj3D,EAAOA,OAAQk3D,EAAal3D,EAAOub,WAAa27C,SAIzGpwE,KAAKq9E,cAAc7B,EAAgBkC,EAAcxkE,EAAQu/B,EAAW03B,EAAWC,GAErFD,GAAa13B,GACb23B,GAAe33B,KAGKv/B,EAAOub,aAC1B27C,EAAc,SAEP33B,EAAY,GACpB,MAAO98C,GACR,MAAMq0E,EAAAvC,8BAA8B9xE,iBAE9BnD,QAAQgB,IAAI,CACO,iBAAjBikF,EAA4BlC,EAAe36B,MAAM68B,GAAgBjlF,QAAQyB,UACxD,iBAAjByjF,EAA4BlC,EAAe56B,MAAM88B,GAAgBllF,QAAQyB,aAK3E8F,uBAAuBw7E,EAAgE98D,EAAa+8D,EAAgE7jF,GAC3K,OAAOqI,KAAKk9E,iBAAiB1B,EAAgB7jF,GAAQ6nB,MAAM,IAAMxf,KAAK29E,uBAAuBpC,EAAgB98D,EAAQ+8D,EAAgB7jF,IAG9HoI,6BAA6Bw7E,EAAgE98D,EAAa+8D,EAAgE7jF,GACjL,OAAO6jF,EAAephF,UAAUzC,QAAc4jF,EAAevhF,SAASykB,GAAS,CAAEzgB,QAAQ,EAAM8gC,WAAW,IAGnG/+B,iCAAiCw7E,EAAgE98D,EAAa+8D,EAAqE7jF,GAC1L,OAAOqI,KAAKk9E,iBAAiB1B,EAAgB7jF,GAAQ6nB,MAAM,IAAMxf,KAAK49E,iCAAiCrC,EAAgB98D,EAAQ+8D,EAAgB7jF,IAGxIoI,uCAAuCw7E,EAAgE98D,EAAa+8D,EAAqE7jF,GAGhM,MAAM+lF,QAAqBlC,EAAeh7B,KAAK7oD,EAAQ,CAAEqG,QAAQ,IAGjE,IACC,MAAMkb,QAAeqiE,EAAevhF,SAASykB,SACvCze,KAAKq9E,cAAc7B,EAAgBkC,EAAc32B,EAAA9uB,SAASsB,KAAKrgB,GAASA,EAAOub,WAAY,EAAG,GACnG,MAAO94B,GACR,MAAMq0E,EAAAvC,8BAA8B9xE,iBAE9B6/E,EAAe56B,MAAM88B;AAIrB39E,iCAAiCw7E,EAAqE98D,EAAa+8D,EAAgE7jF,GAG1L,MAAMuhB,QAAe6tC,EAAA5tB,eAAen5B,KAAKg7E,iBAAiBO,EAAgB98D,EAAQC,EAAAf,kBAAkBjJ,aAG9F1U,KAAKq6E,kBAAkBmB,EAAgB7jF,EAAQuhB,GAG5CnZ,4BAA2DusE,EAAanqD,GACjF,GAAyB,KAArBmqD,EAASC,aACZ,MAAM,IAAIyD,EAAArC,mBAAmB5Y,EAAAV,SAAS,GAAgB,KAAwCr0D,KAAK24E,iBAAiBx2D,IAAU,GAG/H,OAAOmqD,EAGAvsE,iBAAiBoiB,GACxB,OAAIA,EAAS2d,SAAW6P,EAAArC,QAAQ/0C,KACxB4pB,EAAS+d,OAGV/d,EAAS1H,UAAS,KAxiCd+8D,EAAW3M,EAAA,CAMVC,EAAA,EAAA+S,EAAA9H,cANDyB,GAAA94E,EAAA84E,YAAAA,kNCgBb,MAAasG,UAA+BnlE,EAAAlE,WAQ3C1U,YAAoBy/D,EAAiCvvD,SACpD3L,QADmBtE,KAAAw/D,WAAAA,EAAiCx/D,KAAAiQ,QAAAA,EAFpCjQ,KAAAy3E,aAA0B,QAAZ9iE,EAAA3U,KAAKiQ,eAAO,IAAA0E,OAAA,EAAAA,EAAEu7D,aAAc,MAQ3DlwE,KAAAu4E,wBAAuCv6D,EAAA5G,MAAM1C,KAgIrC1U,KAAA+9E,eAAsC,IAAI99E,IAE1CD,KAAAg+E,aAA4B,IAAI79E,IAChCH,KAAAsgD,UAAoB,EA8SpBtgD,KAAAi+E,sBAAwBj+E,KAAKilD,UAAU,IAAIjnC,EAAAlG;AAC1C9X,KAAAw4E,gBAAkBx4E,KAAKi+E,sBAAsB5mE,MAE9CrX,KAAAk+E,iBAAmBl+E,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACrC9X,KAAAs4E,gBAAkBt4E,KAAKk+E,iBAAiB7mE,MAGzCrX,KAAAm+E,wBAAkE,GAClEn+E,KAAAo+E,6BAA+Bp+E,KAAKilD,UAAU,IAAIlZ,EAAA5rB,iBAAuB,IAtbjFosD,mBAaC,OAZKvsE,KAAKq+E,gBACTr+E,KAAKq+E,cACJ,GAKG32D,EAAAvB,UACHnmB,KAAKq+E,eAAa,OAIbr+E,KAAKq+E,cAObt+E,WAAWoiB,GACV,IACC,MAAMlpB,KAAEA,EAAIE,eAAEA,SAAyB+pD,EAAA/D,SAASn/C,KAAKs+E,WAAWn8D,IAEhE,MAAO,CACN7P,KAAMtS,KAAKu+E,OAAOtlF,EAAME,GACxBygF,MAAO3gF,EAAKulF,UAAUxlE,UACtBs2D,MAAOr2E,EAAKq2E,MAAMt2D,UAClB9Z,KAAMjG,EAAKiG,MAEX,MAAOvD,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,IAIvCoE,cAAcoiB,GACb,IACC,MAAM5oB,QAAiB2pD,EAAAjE,qBAAqBj/C,KAAKs+E,WAAWn8D,IAEtDhsB,EAA+B,GAgBrC,aAfMqC,QAAQgB,IAAID,EAASE,IAAIyqB,MAAMxqB,IACpC,IACC,IAAI4Y,EAEHA,EADG5Y,EAAMP,wBACK6G,KAAK/G,KAAKq6C,EAAA3C,SAASxuB,EAAUzoB,EAAM1C,QAAQsb,KAElDtS,KAAKu+E,OAAO7kF,GAGpBvD,EAAOc,KAAK,CAACyC,EAAM1C,KAAMsb,IACxB,MAAO3W,GACRqE,KAAKw/D,WAAW2V,MAAMx5E,OAIjBxF,EACN,MAAOwF,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,IAI/BoE,OAAO2jC,EAAuBvqC,EAAiBuqC,EAAMvqC;AAC5D,OAAIA,EACI62E,EAAA7D,SAASwN,cAAgBj2C,EAAMxqC,cAAgB82E,EAAA7D,SAASuN,UAAY1J,EAAA7D,SAASsN,MAG9E/1C,EAAM6e,SAAWytB,EAAA7D,SAASsN,KAAO/1C,EAAMxqC,cAAgB82E,EAAA7D,SAASuN,UAAY1J,EAAA7D,SAASa,QAO7FjtE,eAAeoiB,GACd,IACC,MAAMu8D,EAAW1+E,KAAKs+E,WAAWn8D,GAEjC,aAAa+gC,EAAAlpD,SAAS0kF,GACrB,MAAO/iF,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,IAIvCoE,eAAeoiB,EAAeq+C,EAA6Bz4D,GAC1D,MAAMkzE,EAAaG,EAAAt5B,iBAAiB9hD,KAAMmiB,EAAQxkB,OAAA+e,OAAA/e,OAAA+e,OAAA,GAC9C8jD,GAAI,CACP0P,WAAYlwE,KAAKy3E,cACf1vE,GAEH,OAAOkxC,EAAAhrB,UAAUgtD,EAAY,CAAE9gF,KAAMA,GAAQA,EAAK+e,QAAU/e,GAAQ4sD,EAAA9uB,SAASvuB,OAAOvP,EAAKV,IAAIU,GAAQ4sD,EAAA9uB,SAASsB,KAAKp/B,KAAQ+e,QAG5HnZ,gBAAgBoiB,EAAe9nB,EAAqBmmE,GACnD,IAAIroD,OAA6Bte,EACjC,IACC,MAAM6kF,EAAW1+E,KAAKs+E,WAAWn8D,GAGjC,IAAKq+C,EAAKxiE,SAAWwiE,EAAK1hC,UAAW,CAEpC,SADyBokB,EAAA5qD,OAAOomF,IAE/B,IAAKle,EAAK1hC,UACT,MAAMkxC,EAAApD,8BAA8B7X,EAAAV,SAAS,EAAc,MAAwB2b,EAAA/D,4BAA4BgB,iBAGhH,IAAKzM,EAAKxiE,OACT,MAAMgyE,EAAApD,8BAA8B7X,EAAAV,SAAS,EAAiB,MAAwB2b,EAAA/D,4BAA4BmB,cAMrHj1D,QAAenY,KAAKwgD,KAAKr+B,EAAU,CAAEnkB,QAAQ,UAGvCgC,KAAKitB,MAAM9U,EAAQ,EAAG9d,EAAS,EAAGA,EAAQo6B,YAC/C,MAAO94B,GACR,MAAMqE,KAAKy+E,0BAA0B9iF;AAEf,iBAAXwc,SACJnY,KAAK4gD,MAAMzoC,IAUpBpY,WAAWoiB,EAAeq+C,GACzB,IACC,MAAMke,EAAW1+E,KAAKs+E,WAAWn8D,GAEjC,IAAIgrB,OAA4BtzC,EAChC,GAAI2mE,EAAKxiE,OAAQ,CAChB,GAAI0pB,EAAAzB,iBAAmBi9B,EAAA5qD,OAAOomF,GAC7B,UAKOx7B,EAAAzD,SAASi/B,EAAU,GAGzBvxC,EAAQ,KACP,MAAOxxC,GACRqE,KAAKw/D,WAAW2V,MAAMx5E,GAOnBwxC,IACJA,EAAQ,UAMTA,EAAQ,IAGT,MAAMh1B,QAAekmC,EAAAC,UAAU2F,EAAAzD,KAAVnC,CAAgBqgC,EAAUvxC,GAc/C,OAPAntC,KAAK+9E,eAAe39E,IAAI+X,EAAQ,GAG5BqoD,EAAKxiE,QACRgC,KAAKg+E,aAAa39E,IAAI8X,GAGhBA,EACN,MAAOxc,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,IAIvCoE,YAAY2gD,GACX,IAOC,GAJA1gD,KAAK+9E,eAAez9E,OAAOogD,GAIvB1gD,KAAKg+E,aAAa19E,OAAOogD,IAAO1gD,KAAKsgD,SACxC,UACOjC,EAAAC,UAAU2F,EAAApD,UAAVxC,CAAqBqC,GAC1B,MAAO/kD,GAGRqE,KAAKsgD,UAAW,EAChBtgD,KAAKw/D,WAAW7jE,MAAMA,GAIxB,aAAa0iD,EAAAC,UAAU2F,EAAArD,MAAVvC,CAAiBqC,GAC7B,MAAO/kD,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,IAIvCoE,WAAW2gD,EAAY3yC,EAAa5T,EAAkB0V,EAAgBvZ,GACrE,MAAMqoF,EAAgB3+E,KAAK4+E,aAAal+B,EAAI3yC,GAE5C,IAAI0qC,EAA2B,KAC/B,IACC,MAAMtiD,QAAekoD,EAAAC,UAAU2F,EAAA12B,KAAV8wB,CAAgBqC,EAAIvmD,EAAM0V,EAAQvZ,EAAQqoF,GAQ/D,OALClmC,EADqB,iBAAXtiD,EACEA,EAEAA,EAAOsiD,UAInB,MAAO98C,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,WAErCqE,KAAK6+E,UAAUn+B,EAAIi+B,EAAelmC,IAI5B14C,aAAa2gD,EAAY3yC,GAShC,OAAIA,IAAQ/N,KAAK+9E,eAAe79E,IAAIwgD,GAC5B,KAGD3yC,EAGAhO,UAAU2gD,EAAY3yC,EAAoB+wE,GACjD,MAAMC,EAAe/+E,KAAK+9E,eAAe79E,IAAIwgD;CACjB,iBAAjBq+B,IAUS,iBAARhxE,IAiBqB,iBAAhB+wE,EACf9+E,KAAK+9E,eAAe39E,IAAIsgD,EAAIq+B,EAAeD,GAO3C9+E,KAAK+9E,eAAez9E,OAAOogD,KAK9B3gD,YAAY2gD,EAAY3yC,EAAa5T,EAAkB0V,EAAgBvZ,GAItE,OAAOy1C,EAAA9nB,MAAM,IAAMjkB,KAAKg/E,QAAQt+B,EAAI3yC,EAAK5T,EAAM0V,EAAQvZ,GAAS,IAAoB,GAG7EyJ,cAAc2gD,EAAY3yC,EAAa5T,EAAkB0V,EAAgBvZ,GAChF,MAAMqoF,EAAgB3+E,KAAK4+E,aAAal+B,EAAI3yC,GAE5C,IAAIkxE,EAA8B,KAClC,IACC,MAAM9oF,QAAekoD,EAAAC,UAAU2F,EAAAh3B,MAAVoxB,CAAiBqC,EAAIvmD,EAAM0V,EAAQvZ,EAAQqoF,GAQhE,OALCM,EADqB,iBAAX9oF,EACKA,EAEAA,EAAO8oF,aAItB,MAAOtjF,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,WAErCqE,KAAK6+E,UAAUn+B,EAAIi+B,EAAeM,IAQpCl/E,YAAYoiB,GACX,UACOk8B,EAAAC,UAAU2F,EAAA9mD,MAAVkhD,CAAiBr+C,KAAKs+E,WAAWn8D,IACtC,MAAOxmB,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,IAIvCoE,aAAaoiB,EAAeq+C,GAC3B,IACC,MAAMke,EAAW1+E,KAAKs+E,WAAWn8D,SAE3BniB,KAAKk/E,SAASR,EAAUle,GAC7B,MAAO7kE,GACR,MAAMqE,KAAKy+E,0BAA0B9iF,IAI7BoE,eAAe2+E,EAAkBle,GACtCA,EAAKpjE,gBACF8lD,EAAAxqD,OAAOgmF,EAAUx7B,EAAAzF,WAAWoF,YAE5BK,EAAAppD,OAAO4kF,GAIf3+E,aAAatI,EAAWC,EAAS8oE,GAChC,MAAM2e,EAAen/E,KAAKs+E,WAAW7mF,GAC/B6mF,EAAat+E,KAAKs+E,WAAW5mF,GAEnC,GAAIynF,IAAiBb,EAIrB,UAGOt+E,KAAKo/E,sBAAsB3nF,EAAMC,EAAI,OAAQ8oE,EAAK1hC,iBAGlDokB,EAAA36C,KAAK42E,EAAcb,GACxB,MAAO3iF;AAQR,KAJmB,WAAfA,EAAM5B,MAAoC,UAAf4B,EAAM5B,MAAmC,iBAAf4B,EAAM5B,OAC9D4B,EAAQ,IAAImD,MAAMi2D,EAAAV,SAAS,EAAa,KAA0C/5B,EAAAtO,SAASmzD,GAAe7kD,EAAAtO,SAASsO,EAAAvO,QAAQuyD,IAAc3iF,EAAM8e,cAG1Iza,KAAKy+E,0BAA0B9iF,IAIvCoE,WAAWtI,EAAWC,EAAS8oE,GAC9B,MAAM2e,EAAen/E,KAAKs+E,WAAW7mF,GAC/B6mF,EAAat+E,KAAKs+E,WAAW5mF,GAEnC,GAAIynF,IAAiBb,EAIrB,UAGOt+E,KAAKo/E,sBAAsB3nF,EAAMC,EAAI,OAAQ8oE,EAAK1hC,iBAGlDokB,EAAAxB,KAAKy9B,EAAcb,GACxB,MAAO3iF,GAQR,KAJmB,WAAfA,EAAM5B,MAAoC,UAAf4B,EAAM5B,MAAmC,iBAAf4B,EAAM5B,OAC9D4B,EAAQ,IAAImD,MAAMi2D,EAAAV,SAAS,EAAa,KAA0C/5B,EAAAtO,SAASmzD,GAAe7kD,EAAAtO,SAASsO,EAAAvO,QAAQuyD,IAAc3iF,EAAM8e,cAG1Iza,KAAKy+E,0BAA0B9iF,IAI/BoE,4BAA4BtI,EAAWC,EAASgmD,EAAuB5e,GAC9E,MAAMy9C,KAA0C,KAAjBv8E,KAAKusE,cAE9B4S,EAAen/E,KAAKs+E,WAAW7mF,GAC/B6mF,EAAat+E,KAAKs+E,WAAW5mF,GAEnC,IAAIgkF,GAAsC,EAK1C,GAJKa,IACJb,EAAsC99B,EAAA1iB,QAAQikD,EAAcb,GAAY,IAGrE5C,GAAgD,SAATh+B,EAC1C,MAAMsyB,EAAApD,8BAA8B7X,EAAAV,SAAS,EAAyB,MAAiE2b,EAAA/D,4BAA4BgB,YAIpK,IAAKyO,SAA6Cx4B,EAAA5qD,OAAOgmF,GAAa,CACrE,IAAKx/C,EACJ,MAAMkxC,EAAApD,8BAA8B7X,EAAAV,SAAS,EAAuB,MAAkC2b,EAAA/D,4BAA4BgB,kBAI7HjtE,KAAKM,OAAO5I,EAAI,CAAE0F,WAAW,EAAMs/E,UAAU,KAoBrD38E,MAAMoiB,EAAeq+C;AACpB,OAAIA,EAAKpjE,UACD4C,KAAKq/E,eAAel9D,EAAUq+C,EAAKgI,UAGpCxoE,KAAKs/E,kBAAkBn9D,GAGvBpiB,eAAeoiB,EAAeqmD,GAGrC,MAAM+W,EAAgB,CAAEpnF,KAAM6H,KAAKs+E,WAAWn8D,GAAWqmD,SAAAA,GAMzD,OALAxoE,KAAKm+E,wBAAwBlnF,KAAKsoF,GAGlCv/E,KAAKw/E,2BAEE7mE,EAAAxD,aAAa,KAGnBnV,KAAKm+E,wBAAwBrmF,OAAOkI,KAAKm+E,wBAAwBx8E,QAAQ49E,GAAgB,GAGzFv/E,KAAKw/E,6BAICz/E,2BAIPC,KAAKo+E,6BAA6B99D,QAAQ,KACzCtgB,KAAKy/E,6BAEEjnF,QAAQyB,YAIT8F,uCAGP,GAAIC,KAAK0/E,4BAA4BC,EAAAhZ,YACpC3mE,KAAK0/E,iBAAiBnY,WAAWvnE,KAAKm+E,8BAWtC,GAJAxlE,EAAA7D,QAAQ9U,KAAK0/E,kBACb1/E,KAAK0/E,sBAAmB7lF,EAGpBmG,KAAKm+E,wBAAwB7nF,OAAS,EAAG,CAC5C,IAAIspF,EAUApY,OAA8C3tE,GAGzB,QAAzB8rE,EAAgB,QAAhBhxD,EAAI3U,KAAKiQ,eAAO,IAAA0E,OAAA,EAAAA,EAAEqvC,eAAO,IAAA2hB,OAAA,EAAAA,EAAEka,aAC1BD,EAAcE,EAAAnZ,YACda,EAA6B,QAAfuY,EAAG//E,KAAKiQ,eAAO,IAAA8vE,OAAA,EAAAA,EAAE/7B,SAO7B47B,EAF0C,IAAxC5/E,KAAKm+E,wBAAwB7nF,OAC5BoxB,EAAAzB,UACW+5D,EAAArZ,YAEAmZ,EAAAnZ,YAMDgZ,EAAAhZ;AAKhB3mE,KAAK0/E,iBAAmB,IAAIE,EAC3B5/E,KAAKm+E,wBACL9mE,GAASrX,KAAKk+E,iBAAiBnmE,KAAKkuC,EAAAsqB,cAAcl5D,IAClDiR,IACkB,UAAbA,EAAIhW,MACPtS,KAAKi+E,sBAAsBlmE,KAAKuQ,EAAIzpB,SAGrCmB,KAAKw/D,WAAWl3C,EAAIhW,MAAMgW,EAAIzpB,UAE/BmB,KAAKw/D,WAAWkX,aAAemH,EAAA/H,SAASnD,MACxCnL,GAGIxnE,KAAKigF,mCACTjgF,KAAKigF,iCAAmCjgF,KAAKw/D,WAAW6W,oBAAoB,KACvEr2E,KAAK0/E,kBACR1/E,KAAK0/E,iBAAiBpZ,kBAAkBtmE,KAAKw/D,WAAWkX,aAAemH,EAAA/H,SAASnD,WAQ9E5yE,kBAAkBoiB,GACzB,MAAM+9D,EAAiB,IAAIC,EAAAxZ,YAC1B3mE,KAAKs+E,WAAWn8D,GAChB+rD,GAAWluE,KAAKk+E,iBAAiBnmE,KAAKkuC,EAAAsqB,cAAcrC,IACpD5lD,IACkB,UAAbA,EAAIhW,MACPtS,KAAKi+E,sBAAsBlmE,KAAKuQ,EAAIzpB,SAGrCmB,KAAKw/D,WAAWl3C,EAAIhW,MAAMgW,EAAIzpB,UAE/BmB,KAAKw/D,WAAWkX,aAAemH,EAAA/H,SAASnD,OAGnCyN,EAAmBpgF,KAAKw/D,WAAW6W,oBAAoB,KAC5D6J,EAAe5Z,kBAAkBtmE,KAAKw/D,WAAWkX,aAAemH,EAAA/H,SAASnD,SAG1E,OAAOh6D,EAAAzD,mBAAmBgrE,EAAgBE,GAOjCrgF,WAAWoiB,GACpB,OAAOmY,EAAAjQ,UAAUlI,EAAS+d,QAGnBngC,0BAA0BpE,GACjC,GAAIA,aAAiBq0E,EAAArD,wBACpB,OAAOhxE;CAGR,IAAI5B,EACJ,OAAQ4B,EAAM5B,MACb,IAAK,SACJA,EAAOi2E,EAAA/D,4BAA4BmB,aACnC,MACD,IAAK,SACJrzE,EAAOi2E,EAAA/D,4BAA4BiB,iBACnC,MACD,IAAK,SACJnzE,EAAOi2E,EAAA/D,4BAA4BgB,WACnC,MACD,IAAK,QACL,IAAK,SACJlzE,EAAOi2E,EAAA/D,4BAA4BsB,cACnC,MACD,QACCxzE,EAAOi2E,EAAA/D,4BAA4Be,QAGrC,OAAOgD,EAAApD,8BAA8BjxE,EAAO5B,GAK7CgG,UACCuE,MAAMwQ,UAEN6D,EAAA7D,QAAQ9U,KAAK0/E,kBACb1/E,KAAK0/E,sBAAmB7lF,EAExB8e,EAAA7D,QAAQ9U,KAAKigF,kCACbjgF,KAAKigF,sCAAmCpmF,GA9nB1C6E,EAAAo/E,uBAAAA,kHC9BAp/E,EAAA2hF,cAAA,MAICtgF,YAAoBuxD,GAAAtxD,KAAAsxD,QAAAA,EACnBtxD,KAAKq2E,oBAAsBr4D,EAAA5G,MAAM8B,OAAOo4C,EAAQ+kB,qBAAqB,GAGtEt2E,OAAOkZ,EAAY5B,GAClB,OAAQA,GACP,IAAK,sBAAuB,OAAOrX,KAAKq2E,oBAGzC,MAAM,IAAIv3E,MAAM,oBAAoBuY,KAGrCtX,KAAKkZ,EAAY+0B,EAAiBpkC,GACjC,OAAQokC,GACP,IAAK,WAAwC,OAA5BhuC,KAAKsxD,QAAQklB,SAAS5sE;AAAapR,QAAQyB,UAC5D,IAAK,aAA+C,OAAjC+F,KAAK+2E,WAAWntE,EAAI,GAAIA,EAAI,IAAYpR,QAAQyB,UAGpE,MAAM,IAAI6E,MAAM,mBAAmBkvC,KAG5BjuC,WAAWmkC,EAAkBhjC,GACpC,IAAIo/E,EAAY1pF,QAAQie,IAExB,OAAQqvB,GACP,IAAK,QACJo8C,EAAY1pF,QAAQ+E,MACpB,MACD,IAAK,OACJ2kF,EAAY1pF,QAAQoK,KACpB,MACD,IAAK,OACJs/E,EAAY1pF,QAAQgpE,KAItB0gB,EAAUrhF,KAAKrI,WAAYsK,KAI7B,MAAaq/E,EAEZxgF,YAAoBmoD,GAAAloD,KAAAkoD,QAAAA,EAEpBmuB,0BACC,OAAOr2E,KAAKkoD,QAAQa,OAAO,uBAG5BhpD,SAASo2E,GACRoK,EAAoB/J,SAASx2E,KAAKkoD,QAASiuB,GAGrCp2E,gBAAgBmoD,EAAmBiuB,GACzC,OAAOjuB,EAAQjpD,KAAK,WAAYk3E,GAGjCp2E,WAAWmkC,EAAkBhjC,GAC5BlB,KAAKkoD,QAAQjpD,KAAK,aAAc,CAACilC,EAAUhjC,KAjB7CxC,EAAA6hF,oBAAAA,EAqBA,MAAaC,UAA2B3C,EAAAzG,oBAGvCr3E,YAAoB0gF,EAA6BjhB,GAChDl7D,MAAMk7D,GADax/D,KAAAygF,OAAAA,EAEnBzgF,KAAKilD,UAAUw7B,EAAOpK,oBAAoBF,GAAS3W,EAAWgX,SAASL,KAGxEp2E,SAASo2E,GACR7xE,MAAMkyE,SAASL,GAEfn2E,KAAKygF,OAAOjK,SAASL,IAXvBz3E,EAAA8hF,mBAAAA,gEC1CA,SAAS3rE,EAAI6rE,EAA+BvK,EAAiBt3E,GAC5D,OAAQs3E,GACP,KAAK0H,EAAA/H,SAASnD,MAAO+N,EAAOvL,MAAMt2E,GAAU,MAC5C,KAAKg/E,EAAA/H,SAASa,MAAO+J,EAAOllB,MAAM38D,GAAU,MAC5C,KAAKg/E,EAAA/H,SAASxgB,KAAMorB,EAAO9gB,KAAK/gE,GAAU,MAC1C,KAAKg/E,EAAA/H,SAASzgB,QAASqrB,EAAO1/E,KAAKnC,GAAU;CAC7C,KAAKg/E,EAAA/H,SAASh3E,MAAO4hF,EAAO/kF,MAAMkD,GAAU,MAC5C,KAAKg/E,EAAA/H,SAASc,SAAU8J,EAAOvJ,SAASt4E,GAAU,MAClD,QAAS,MAAM,IAAIC,MAAM,uEAlB3BJ,EAAAiiF,qBAAA,SAAqC3pF,EAAc4pF,EAAkBC,EAAkBC,GAEtF,OAD+Br9C,EAAQ4X,iBAAiB,UACzCslC,qBAAqB3pF,EAAM4pF,EAAUC,EAAUC,IAoB/D,MAAaC,UAAsBlD,EAAA3H,mBAQlCn2E,YAA6B/I,EAA+BgqF,EAAoB7K,GAC/E7xE,QAD4BtE,KAAAhJ,KAAAA,EAA+BgJ,KAAAghF,WAAAA,EAJpDhhF,KAAAkZ,OAAiB,GACjBlZ,KAAAihF,4BAAoDpnF,EAK3DmG,KAAKw2E,SAASL,GACdn2E,KAAKkhF,sBACLlhF,KAAKilD,UAAUjlD,KAAKq2E,oBAAoBF,IACnCn2E,KAAKmhF,SACRnhF,KAAKmhF,QAAQ3K,SAASL,MAKjBp2E,sBAcP,OAbKC,KAAKihF,yBACTjhF,KAAKihF,uBAxDR/8D,eAAkCk9D,EAAqBJ,GAEtD,IACC,MAAMK,QAAU,IAAA7oF,QAAA,CAAA0hD,EAAAC,KAAA1W,EAAA,CAAa,UAAQyW,EAAAC,KACrCknC,EAAQC,aAAa,KAAM,KAC3B,MAAMC,EAAcppF,EAAKwB,KAAKqnF,EAAY,GAAGI,SAC7C,OAAOC,EAAQG,0BAA0BJ,EAAaG,EAAa,QAAiB,GACnF,MAAO3oF,GACRhC,QAAQ+E,MAAM/C,GAEf,OAAO,KA8CyB6oF,CAAmBzhF,KAAKhJ,KAAMgJ,KAAKghF,YAC/DhoF,KAAK0nF,IACL,GAAIA,EAAQ,CACX1gF,KAAKmhF,QAAUT,EACf1gF,KAAKmhF,QAAQ3K,SAASx2E,KAAK02E;CAC3B,IAAK,MAAMP,MAAEA,EAAKt3E,QAAEA,KAAamB,KAAKkZ,OACrCrE,EAAI7U,KAAKmhF,QAAShL,EAAOt3E,GAE1BmB,KAAKkZ,OAAS,OAIXlZ,KAAKihF,uBAGLlhF,KAAKo2E,EAAiBt3E,GACzBmB,KAAKmhF,QACRtsE,EAAI7U,KAAKmhF,QAAShL,EAAOt3E,GACfmB,KAAK02E,YAAcP,GAC7Bn2E,KAAKkZ,OAAOjiB,KAAK,CAAEk/E,MAAAA,EAAOt3E,QAAAA,IAI5BkB,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcmH,EAAA/H,SAASnD,OAC/B3yE,KAAK0hF,KAAK7D,EAAA/H,SAASnD,MAAO3yE,KAAKksB,OAAO,CAACrtB,KAAYqC,KAIrDnB,MAAMlB,KAAoBqC,GACrBlB,KAAK02E,YAAcmH,EAAA/H,SAASa,OAC/B32E,KAAK0hF,KAAK7D,EAAA/H,SAASa,MAAO32E,KAAKksB,OAAO,CAACrtB,KAAYqC,KAIrDnB,KAAKlB,KAAoBqC,GACpBlB,KAAK02E,YAAcmH,EAAA/H,SAASxgB,MAC/Bt1D,KAAK0hF,KAAK7D,EAAA/H,SAASxgB,KAAMt1D,KAAKksB,OAAO,CAACrtB,KAAYqC,KAIpDnB,KAAKlB,KAAoBqC,GACpBlB,KAAK02E,YAAcmH,EAAA/H,SAASzgB,SAC/Br1D,KAAK0hF,KAAK7D,EAAA/H,SAASzgB,QAASr1D,KAAKksB,OAAO,CAACrtB,KAAYqC,KAIvDnB,MAAMlB,KAA4BqC,GACjC,GAAIlB,KAAK02E,YAAcmH,EAAA/H,SAASh3E,MAE/B,GAAID,aAAmBC,MAAO,CAC7B,MAAM0F,EAAQkE,MAAM1J,UAAUhH,MAAMiH,KAAK0M,WACzCnH,EAAM,GAAK3F,EAAQiE,MACnB9C,KAAK0hF,KAAK7D,EAAA/H,SAASh3E,MAAOkB,KAAKksB,OAAO1nB,SAEtCxE,KAAK0hF,KAAK7D,EAAA/H,SAASh3E,MAAOkB,KAAKksB,OAAO,CAACrtB,KAAYqC,KAKtDnB,SAASlB,KAA4BqC,GAChClB,KAAK02E,YAAcmH,EAAA/H,SAASc,UAC/B52E,KAAK0hF,KAAK7D,EAAA/H,SAASc,SAAU52E,KAAKksB,OAAO,CAACrtB,KAAYqC,KAIxDnB;AACKC,KAAKmhF,QACRnhF,KAAKmhF,QAAQ9nE,QACHrZ,KAAKihF,wBACfjhF,KAAKihF,uBAAuBjoF,KAAK,IAAMgH,KAAKqZ,SAI9CtZ,UACKC,KAAKmhF,QACRnhF,KAAK2hF,gBACK3hF,KAAKihF,wBACfjhF,KAAKihF,uBAAuBjoF,KAAK,IAAMgH,KAAK2hF,iBAE7C3hF,KAAKihF,4BAAyBpnF,EAGvBkG,gBACHC,KAAKmhF,UACRnhF,KAAKmhF,QAAQS,OACb5hF,KAAKmhF,aAAUtnF,GAITkG,OAAOmB,GACd,IAAI/K,EAAS,GAEb,IAAK,IAAIC,EAAI,EAAGA,EAAI8K,EAAK5K,OAAQF,IAAK,CACrC,IAAI8O,EAAIhE,EAAK9K,GAEb,GAAiB,iBAAN8O,EACV,IACCA,EAAI/J,KAAKsD,UAAUyG,GAClB,MAAOtM,IAGVzC,IAAWC,EAAI,EAAI,IAAM,IAAM8O,EAGhC,OAAO/O,GA9HTuI,EAAAqiF,cAAAA,uHCjCcriF,EAAAs2D,SAAW6sB,EAAApsB,QAEZ/2D,EAAAojF,qBAAuB1X,EAAA5pE,gBAAsC,uBA0B1E,SAAYuhF,GAKXA,EAAAA,EAAA,UAAA,GAAA,YAKAA,EAAAA,EAAA,OAAA,GAAA,SAVD,CAAYrjF,EAAAqjF,sBAAArjF,EAAAqjF,oBAAmB,KA8L/B,SAAYC,GAKXA,EAAAA,EAAA,IAAA,GAAA,MAMAA,EAAAA,EAAA,OAAA,GAAA,SAKAA,EAAAA,EAAA,MAAA,GAAA,QAhBD,CAAYtjF,EAAAsjF,sBAAAtjF,EAAAsjF,oBAAmB,KAuF/BtjF,EAAAujF,iBAAA,MAAAliF,cAEUC,KAAAkiF,SAAW,IAAIC;AAEPniF,KAAAoiF,YAA6B,IAAIpkE,EAAAlG,QACzC9X,KAAAqiF,WAA0BriF,KAAKoiF,YAAY/qE,MAEpDtX,eAAemkC,IACfnkC,cAAclB,IACdkB,cAAcuiF,IAEdviF,QACCC,KAAKoiF,YAAYttE,YAInB,MAAaqtE,EACZpiF,YACAA,QACAA,MAAMnB,IACNmB,OAAOnB,KAJRF,EAAAyjF,aAAAA,8EChUA,IAAII,EAGJ,oDAAI76D,EAAArB,MAAO,CAGVk8D,EAAU,GAG0B,IAAhC5kF,OAAOC,KAAK2kF,GAASjsF,QACxB8kE,EAAA1+C,OAAO6lE,EAAS,CACfziB,QAAS,aACT0iB,kBAAmB,MACnBC,SAAU,6BACVC,UAAW,iBACXC,YAAa,aAIf,MAAMj9D,EAAKC,SAASC,eAAe,uCAC7Bg9D,EAA0Bl9D,GAAMA,EAAGG,aAAa,iBAClD+8D,GACHxnB,EAAA1+C,OAAO6lE,EAASpnF,KAAKC,MAAMwnF,QAKxB,CAAA,QAAuB,IAAZn/C,GAA+D,mBAA7BA,EAAQ4X,iBAyBzD,MAAM,IAAIv8C,MAAM,2CAzB0E,CAG1F,MAAM+jF,EAAW1qF,EAAK4zB,QAAQuxB,EAAAha,qBAAqBG,EAAS,KAE5D8+C,EAAUnnB,EAAA1+C,OAAO,GAAI+mB,EAAQ4X,iBAAiBljD,EAAKwB,KAAKkpF,EAAU,kBAClE,MAAMC,EAAMr/C,EAAQ4X,iBAAiBljD,EAAKwB,KAAKkpF,EAAU,iBAGrDE,EAAAjoF,IAAgB,YACnBsgE,EAAA1+C,OAAO6lE,EAAS;AACfG,UAAW,GAAGH,EAAQG,gBACtBD,SAAU,GAAGF,EAAQE,eACrBO,eAAgB,GAAGT,EAAQS,uBAI7B5nB,EAAA1+C,OAAO6lE,EAAS,CACfziB,QAASgjB,EAAIhjB,QACb0iB,kBAAmBM,EAAIN,qBASzB9jF,EAAA+2D,QAAe8sB,iHC5Bf,SAASU,EAAazoF,EAAsB8X,GAC3C,OAAIoV,EAAAzB,UAPL,SAA2BzrB,EAAsB8X,GAGhD,MAAO,gBAFOuqC,EAAOG,WAAW,OAAOC,OAAOziD,GAAc0iD,OAAO,UAEnCgmC,EAAAztB,QAAQqK,WAAWxtD,SAK3C6wE,CAAkB3oF,EAAc8X,GAnBzC,SAAyB9X,EAAsB8X,GAC9C,MAAM8wE,EAAiBvoF,QAAQC,IAAqB,gBAEpD,GAAI4D,EAAA2kF,gBAAkBD,EAAgB,CACrC,MAAME,EAAQzmC,EAAOG,WAAW,OAAOC,OAAOziD,GAAc0iD,OAAO,OAAO9mB,OAAO,EAAG,GACpF,OAAOj+B,EAAKwB,KAAK+E,EAAA2kF,cAAe,UAAUC,KAASJ,EAAAztB,QAAQqK,WAAWxtD,UAGvE,OAAOna,EAAKwB,KAAKa,EAAc,GAAG0oF,EAAAztB,QAAQqK,WAAWxtD,UAc9CixE,CAAgB/oF,EAAc8X,oDAxBzB5T,EAAA2kF,cAAgBxoF,QAAQC,IAAqB,gBAuD1D,MAAa0oF,EA4MZzjF,YAAoB0jF,EAA2BC,GAC9C,GADmB1jF,KAAAyjF,MAAAA,EAA2BzjF,KAAA0jF,UAAAA,GACzC7oF,QAAQC,IAAiB,YAAG,CAChC,MAAMyD,EAAMolF,EAAAlqD,iBAAiB,IAAIviC,MAAQsH,QAAQ,eAAgB,IACjE3D,QAAQC,IAAiB,YAAI3C,EAAKwB,KAAKqG,KAAKxF,aAAc,OAAQ+D;AAGnEyB,KAAK0qE,SAAW7vE,QAAQC,IAAiB,YA9M1CoG,WAAyB,OAAOlB,KAAKyjF,MAGrCG,cAAwB,OAAOzrF,EAAK4zB,QAAQuxB,EAAAha,qBAAqBG,EAAS,KAE1EogD,eAAyB,OAAO7jF,KAAK0jF,UAGrCI,cAAwB,OAxCLD,EAwCuB7jF,KAAK6jF,SAxCVD,EAwCoB5jF,KAAK4jF,QAxCRG,EAwCiB/jF,KAAK+jF,QArCxEr8D,EAAAzB,UACC89D,EACI5rF,EAAKwB,KAAKxB,EAAK4zB,QAAQ83D,GAAW,MAAO,GAAGX,EAAAztB,QAAQuuB,uBAGrD7rF,EAAKwB,KAAKiqF,EAAS,UAAW,gBAIlCl8D,EAAAvB,QACC49D,EACI5rF,EAAKwB,KAAKxB,EAAK4zB,QAAQ83D,GAAW,MAAO,GAAGX,EAAAztB,QAAQuuB,mBAGrD7rF,EAAKwB,KAAKiqF,EAAS,UAAW,eAIlCG,EACI5rF,EAAKwB,KAAKiqF,EAAS,MAAO,QAG3BzrF,EAAKwB,KAAKiqF,EAAS,UAAW,eAzBtC,IAAoBC,EAAkBD,EAAiBG,EA6CtDtwC,eAAyB,OAAOsK,EAAGkmC,UAGnCzpF,mBACC,MAAM4oF,EAAiBvoF,QAAQC,IAAqB,gBACpD,OAAIsoF,EACIjrF,EAAKwB,KAAKypF,EAAgB,aAG3Bc,EAAiBlkF,KAAKyjF,MAAO5oF,SAIrCspF,sBAA6B,OAAO/gD,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKqG,KAAKxF,aAAc,SAG1E4pF,0BAAiC,OAAOpkF,KAAKmkF,gBAG7CE,uBAA8B,OAAOC,EAAU3zC,SAAS3wC,KAAKokF,oBAAqB,iBAGlFG,uBAA8B,OAAOD,EAAU3zC,SAAS3wC,KAAKokF,oBAAqB,SAGlFI;AAAyC,OAAOF,EAAU3zC,SAAS3wC,KAAKukF,iBAAkB,iBAG1FE,qCAA4C,OAAOH,EAAU3zC,SAAS3wC,KAAKukF,iBAAkB,oBAG7FG,8BAAqC,OAAOthD,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKqG,KAAK0qE,SAAU,qBAG9Eia,0BAAiC,OAAOvhD,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKqG,KAAKxF,aAAc,YAG9EoqF,8BAAqC,OAAON,EAAU3zC,SAAS3wC,KAAK2kF,oBAAqB,iBAGzF1jB,wBAAkC,OAAO9oE,EAAKwB,KAAKqG,KAAKmkF,gBAAgBjkD,OAAQ,iBAGhF2kD,2BAAqC,OAAO1sF,EAAKwB,KAAKqG,KAAKmkF,gBAAgBjkD,OAAQ,oBAGnF4kD,0BAAiC,OAAOR,EAAU3zC,SAAS3wC,KAAKokF,oBAAqB,oBAGrFW,6BAAoC,OAAOT,EAAU3zC,SAAS3wC,KAAKokF,oBAAqB,uBAGxFY,mBACC,MAAM5B,EAAiBvoF,QAAQC,IAAqB,gBACpD,OAAIsoF,EACIhgD,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKypF,EAAgB,cAGpChgD,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKqG,KAAKyzC,SAAUyvC,EAAAztB,QAAQutB,eAAgB,cAIlEiC,6BAAwC,QAASjlF,KAAKyjF,MAAMyB;AAG5DC,iBAAwB,OAAO/hD,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKqG,KAAKxF,aAAcuwE,EAAAT,UAGrE8a,2BAAqC,OAAOjtF,EAAKwB,KAAKqG,KAAKmlF,WAAWjlD,OAAQ,mBAG9EmlD,6BAAoC,OAAOjiD,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKqG,KAAKxF,aAAc,eAGjF8qF,wBAAkC,OAAOntF,EAAKwB,KAAKqG,KAAKxF,aAAc,iBAGtE+qF,4BACC,MAAMC,EAAWC,EAAazlF,KAAKyjF,MAAM,0BAA2B5oF,SACpE,OAAI2qF,GAGIrtF,EAAKkyB,UAAUlyB,EAAKwB,KAAK2jD,EAAAha,qBAAqBG,EAAS,IAAK,KAAM,eAK3EiiD,qBACC,MAAMF,EAAWC,EAAazlF,KAAKyjF,MAAM,kBAAmB5oF,SAE5D,GAAI2qF,EACH,OAAOA,EAGR,MAAMG,EAAmB9qF,QAAQC,IAAuB,kBACxD,GAAI6qF,EACH,OAAOA,EAGR,MAAMvC,EAAiBvoF,QAAQC,IAAqB,gBACpD,OAAIsoF,EACIjrF,EAAKwB,KAAKypF,EAAgB,cAG3BjrF,EAAKwB,KAAKqG,KAAKyzC,SAAUyvC,EAAAztB,QAAQutB,eAAgB,cAGhD4C,0BACR,OAAQ5lF,KAAKyjF,MAAM,yBAA2B,IAAIhqF,IAAKgL,GAAcghF,EAAahhF,EAAG5J,UAE7EgrF,iCACR,OAAQ7lF,KAAKyjF,MAAM,iCAAmC,IAAIhqF,IAAKgL,GAAcghF,EAAahhF,EAAG5J,UAI9FirF,sCACC,MAAMrvD,EAAIz2B,KAAKyjF,MAAMyB;CACrB,GAAIx8E,MAAMC,QAAQ8tB,GACjB,OAAOA,EAAEh9B,IAAIgL,GACR,kBAAkB0tB,KAAK1tB,GACnB2+B,EAAA3D,IAAIrkC,MAAMqJ,GAEX2+B,EAAA3D,IAAIlnC,KAAKJ,EAAKkyB,UAAU5lB,KAOlCshF,gCACC,MAAMtvD,EAAIz2B,KAAKyjF,MAAMuC,mBACrB,GAAIvvD,EACH,MAAI,kBAAkBtE,KAAKsE,GACnB2M,EAAA3D,IAAIrkC,MAAMq7B,GAEX2M,EAAA3D,IAAIlnC,KAAKJ,EAAKkyB,UAAUoM,IAKjCwvD,wBACC,GAAIjmF,KAAKyjF,MAAM,sBACd,OAAO,EAER,MAAMwC,EAAoBjmF,KAAKyjF,MAAM,qBACrC,GAAIwC,EAAmB,CACtB,GAAiC,iBAAtBA,EACV,MAAO,CAACA,GAET,GAAIv9E,MAAMC,QAAQs9E,IAAsBA,EAAkB3vF,OAAS,EAClE,OAAO2vF,EAGT,OAAO,EAIRC,yBAAsD,OAAOC,EAAuBnmF,KAAKyjF,MAAOzjF,KAAK+jF,SAErGqC,oCAA+C,QAASpmF,KAAKkB,KAAKklF,8BAElErC,cAAyB,OAAQlpF,QAAQC,IAAgB,WACzDs5D,cAAyB,QAASp0D,KAAKyjF,MAAMrvB,QAC7Cv/C,UAAgC,OAAO7U,KAAKyjF,MAAM5uE,IAElDwxE,WAAsB,QAASrmF,KAAKyjF,MAAM4C,KAE1C1wB,aAAwB,QAAS31D,KAAKyjF,MAAM9tB,OAG5C2wB,oBAA8B,OAAOrD,EAAajjF,KAAKxF,aAAc,QAGrE+rF,sBAAgC,OAAOtD,EAAajjF,KAAKxF,aAAc,UAGvEgsF,wBAA8C,OAAO3rF,QAAQC,IAAiC,kCAAKjB,EAGnG4sF;AAAsC,OAAOnC,EAAU3zC,SAASvN,EAAA3D,IAAIlnC,KAAKyH,KAAKxF,cAAe,aAE7FksF,qBAAgC,QAAS1mF,KAAKyjF,MAAM,mBACpDkD,2BAAsC,QAAS3mF,KAAKyjF,MAAM,0BAE1DmD,mBAAyC,OAAO5mF,KAAKyjF,MAAc,OACnEoD,oBAA+B,QAAS7mF,KAAKyjF,MAAM,mBAYpD,SAAgB0C,EAAuBjlF,EAAkB4lF,GACxD,OAAOC,EAAe7lF,EAAK,sBAAuBA,EAAK,0BAA2B,KAAM4lF,EAAS5lF,EAAK8lF,SAOvG,SAASD,EAAeE,EAA8BC,EAAiCC,EAA0BL,EAAkBE,GAClI,MACMn4C,EAAOrsC,OADG0kF,GAAeD,KACGH,EAA6B,KAAnBK,GAG5C,MAAO,CAAEt4C,KAAAA,EAAMu4C,QAFHv4C,GAAOwqC,UAAU6N,GAEFF,QAAAA,GAG5B,SAAgBvB,EAAa77E,EAAyB/O,GACrD,IAAK+O,EACJ,OAKD,MAAM0b,EAAWntB,EAAK8B,QAAQ2P,GAE9B,OAAIzR,EAAKkyB,UAAUzgB,KAAS0b,EACpBA,EAGDntB,EAAK8B,QAAQY,EAAQC,IAAgB,YAAKD,EAAQ4sB,MAAO7d,GAGjE,SAAgBs6E,EAAiBhjF,EAAkBrG,GAClD,OAAO4qF,EAAavkF,EAAK,iBAAkBrG,IAAY1C,EAAK8B,QAAQ+vB,EAAMwzB,uBAAuB3iD,EAAQsqB,WAhPzG0lD,EAAA,CADCwc,EAAAzlF,qCAMDipE,EAAA,CADCwc,EAAAzlF,qCAMDipE,EAAA,CADCwc,EAAAzlF,sCAIDipE,EAAA,CADCwc,EAAAzlF,0CAWDipE,EAAA,CADCwc,EAAAzlF,6CAIDipE,EAAA,CADCwc,EAAAzlF;AAIDipE,EAAA,CADCwc,EAAAzlF,8CAIDipE,EAAA,CADCwc,EAAAzlF,8CAIDipE,EAAA,CADCwc,EAAAzlF,yDAIDipE,EAAA,CADCwc,EAAAzlF,4DAIDipE,EAAA,CADCwc,EAAAzlF,qDAIDipE,EAAA,CADCwc,EAAAzlF,iDAIDipE,EAAA,CADCwc,EAAAzlF,qDAIDipE,EAAA,CADCwc,EAAAzlF,+CAIDipE,EAAA,CADCwc,EAAAzlF,kDAIDipE,EAAA,CADCwc,EAAAzlF,iDAIDipE,EAAA,CADCwc,EAAAzlF,oDAIDipE,EAAA,CADCwc,EAAAzlF,0CAWDipE,EAAA,CADCwc,EAAAzlF,oDAIDipE,EAAA,CADCwc,EAAAzlF,wCAIDipE,EAAA,CADCwc,EAAAzlF,kDAIDipE,EAAA,CADCwc,EAAAzlF,oDAIDipE,EAAA,CADCwc,EAAAzlF,+CAIDipE,EAAA,CADCwc,EAAAzlF;AAWDipE,EAAA,CADCwc,EAAAzlF,4CAqBQipE,EAAA,CAARwc,EAAAzlF,iDAGQipE,EAAA,CAARwc,EAAAzlF,wDAKDipE,EAAA,CADCwc,EAAAzlF,6DAeDipE,EAAA,CADCwc,EAAAzlF,uDA6BDipE,EAAA,CADCwc,EAAAzlF,gDAGDipE,EAAA,CADCwc,EAAAzlF,2DAYDipE,EAAA,CADCwc,EAAAzlF,2CAIDipE,EAAA,CADCwc,EAAAzlF,6CAIDipE,EAAA,CADCwc,EAAAzlF,+CAIDipE,EAAA,CADCwc,EAAAzlF,sDAnMFlD,EAAA8kF,mBAAAA,EAsNA9kF,EAAAynF,uBAAAA,EAIAznF,EAAA4oF,gBAAA,SAAgCpmF,EAAkB4lF,GACjD,OAAOC,EAAe7lF,EAAK,kBAAmBA,EAAK,sBAAuB,KAAM4lF,IAWjFpoF,EAAA+mF,aAAAA,EAgBA/mF,EAAAwlF,iBAAAA;CCpSA,MAAMqD,EAA4B,CAAC,KAAM,KAAM,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAS,SAC7E,WAApBrE,EAAAztB,QAAQ+xB,SACXD,EAAgBtwF,KAAK,MAGtB,IAAawwF,EAAb,cAA0C9uE,EAAAlE,WASzC1U,YAC+C2nF,EACzBnoB,EACSC,GAE9Bl7D,QAJ8CtE,KAAA0nF,2BAAAA,EAEhB1nF,KAAAw/D,WAAAA,EANdx/D,KAAA2nF,sBAAuC3nF,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAClE9X,KAAA4nF,qBAAoC5nF,KAAK2nF,sBAAsBtwE,MAQvErX,KAAKwY,MAAQxY,KAAKilD,UAAU,IAAI4iC,EAAmBtoB,EAAoBC,IAEvEx/D,KAAKilD,UAAUyiC,EAA2B/pB,sBAAsB,EAAGG,MAAAA,KAAY99D,KAAK29D,sBAAsBG,KAC1G99D,KAAKilD,UAAUyiC,EAA2B7pB,wBAAwB,EAAGgC,WAAAA,KAAiB7/D,KAAK69D,wBAAwBgC,KAGpH9/D,eAAeuS,GACd,OAAQ,IAAJA,EACI9Z,QAAQyB,QAAQ,IAAIstF,IAErBvnF,KAAKwY,MAAMsvE,mBAChB9uF,KAAK+uF,IACL,MAAMC,EAAgB,IAAJ11E,EAAoC3U,OAAOC,KAAKmqF,GAAiB,IAAIR,KAAoB5pF,OAAOC,KAAKmqF,IACvH,OAAO3O,EAAAvwE,SAASm/E,KAIXjoF,sBAAsBm9D,GACzBA,GAAaA,EAAUE,UAAYF,EAAUE,SAASwG,aAAe1G,EAAUE,SAASwG,YAAYC,eAAiB3G,EAAUE,SAASwG,YAAYC,cAAcvtE,SACrK0J,KAAKw/D,WAAWhE,MAAM,2CAA4C0B,EAAU2C,WAAWpmD,IACvFzZ,KAAKi9C,SAASjkD,KAAKylC,IAAiBA,GAAWz+B,KAAK2nF,sBAAsB5vE;CAIpEhY,wBAAwB8/D,GAC/B7/D,KAAKwY,MAAMsvE,mBACT9uF,KAAK+uF,IACDpqF,OAAOC,KAAKmqF,GAAe77C,KAAKzmB,GAAYsiE,EAActiE,IAAasiE,EAActiE,GAAU84C,WAAWryB,KAAKtzC,GAAKqvF,EAAAnkB,kBAAkBlrE,EAAEsvF,oBAAqBroB,OAChK7/D,KAAKw/D,WAAWhE,MAAM,6CAA8CqE,EAAWpmD,IAC/EzZ,KAAKi9C,SAASjkD,KAAKylC,IAAiBA,GAAWz+B,KAAK2nF,sBAAsB5vE,YAK9EhY,SACC,OAAOvH,QAAQgB,IAAI,CAACwG,KAAKwY,MAAMsvE,mBAAoB9nF,KAAK0nF,2BAA2BppB,iBACjFtlE,KAAK,EAAEiU,EAASk7E,KAAenoF,KAAKwY,MAAMykC,OAAOkrC,GAChDnvF,KAAKovF,IAAYhP,EAAAtyE,OAAOnJ,OAAOC,KAAKqP,GAAUtP,OAAOC,KAAKwqF,QApDlDX,EAAoB5c,EAAA,CAU9BC,EAAA,EAAAud,EAAAnd,6BACAJ,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAA+S,EAAA9H,cAZU0R,GAAA/oF,EAAA+oF,qBAAAA,EAwDb,IAAMI,EAAN,cAAiClvE,EAAAlE,WAOhC1U,YACsBw/D,EACSC,GAE9Bl7D,QAF8BtE,KAAAw/D,WAAAA,EAPvBx/D,KAAA+nF,cAAuD,GAU9D/nF,KAAKsoF,sBAAwBhuD,EAAA3gC,KAAK4lE,EAAmB/kE,aAAc,sBACnEwF,KAAKuoF,yBAA2B,IAAIx8C,EAAA/pB,MAGrCjiB,mBAEC,OAAIC,KAAKuoF,yBAAyBrpF,OAASc,KAAKwoF,iBACxCxoF,KAAKyoF,oBACVzvF,KAAK,IAAMgH,KAAK+nF,eAEZvvF,QAAQyB,QAAQ+F,KAAK+nF,eAG7BhoF,OAAOw+D;AACN,OAAOv+D,KAAKyoF,kBAAkBV,IAC7BpqF,OAAOC,KAAKmqF,GAAe1oF,QAAQomB,UAAmBsiE,EAActiE,IACpEzlB,KAAK0oF,kCAAkCX,KAAkBxpB,KACvDvlE,KAAK,IAAMgH,KAAK+nF,eAGZhoF,kCAAkCgoF,KAAyDxpB,GAClG,IAAK,MAAMrB,KAAaqB,EACnBrB,GAAaA,EAAUE,UAAYF,EAAUE,SAASwG,aAAe1G,EAAUE,SAASwG,YAAYC,eAAiB3G,EAAUE,SAASwG,YAAYC,cAAcvtE,QACrK0J,KAAK2oF,iCAAiCZ,EAAe7qB,GAGvDv/D,OAAOC,KAAKmqF,GAAe1oF,QAAQo2E,GAAcz1E,KAAK4oF,WAAWb,EAActS,KAGxE11E,iCAAiCgoF,EAAsD7qB,GAC9F,MAAMgrB,EAAsBhrB,EAAU2C,WAChCgE,EAAgB3G,EAAUE,SAASwG,aAAe1G,EAAUE,SAASwG,YAAYC,cAAgB3G,EAAUE,SAASwG,YAAYC,cAAgB,GACtJ,IAAK,MAAMglB,KAA4BhlB,EACtC,GAAI3G,EAAUvkE,SAASmnC,SAAW6P,EAAArC,QAAQ/0C,MAAQuwF,EAAAvT,oBAAoBsT,GAA2B,CAChG,IAAIE,EAAehB,EAAcc,EAAyBpT,YACrDsT,IACJA,EAAe,CAAEhtF,KAAM,GAAIwiE,WAAY,GAAIviE,aAAc,IACzD+rF,EAAcc,EAAyBpT,YAAcsT,GAEtD,IAAIC,EAA0BD,EAAaxqB,WAAWl2D,OAAOzP,GAAKqvF,EAAAnkB,kBAAkBlrE,EAAEsvF,oBAAqBA,IAAsB,GAC7Hc,EACHA,EAAwBlpB,QAAU5C,EAAUE,SAAS0C,QAErDipB,EAAaxqB,WAAWtnE,KAAK,CAAEixF,oBAAAA,EAAqBpoB,QAAS5C,EAAUE,SAAS0C,UAEjF,IAAK,MAAM4V,KAAemT,EAAyB7sF,aAClD+sF,EAAa/sF,aAAa05E,EAAYj8D,IAAM6gB,EAAA3gC,KAAKujE,EAAUvkE,SAASunC,OAAQw1C,EAAYv9E;AAMpF4H,WAAWgpF,GAClB,GAAIA,EAAc,CACjB,MAAME,EAAMC,EAAAlsC,WAAW,OACvB,IAAK,MAAMkgB,KAAa6rB,EAAaxqB,WACpC0qB,EAAIhsC,OAAOigB,EAAUgrB,oBAAoB9qC,MAAQ8f,EAAUgrB,oBAAoBzuE,IAAIwjC,OAAOigB,EAAU4C,SAErGipB,EAAahtF,KAAOktF,EAAI/rC,OAAO,QAIzBn9C,kBAAqBQ,EAAyE,KAAM,OAC3G,OAAOP,KAAKuoF,yBAAyB/oE,MAAM,KAC1C,IAAIrpB,EAAmB,KACvB,OAAO+vE,EAAIlsE,SAASgG,KAAKsoF,sBAAuB,QAC9CtvF,UAAKa,EAAWf,GAAoB,WAAbA,EAAIiB,KAAoBvB,QAAQyB,QAAQ,MAAQzB,QAAQ0B,OAAOpB,IACtFE,KAA4CqrD,IAAS,IAAM,OAAOlpD,KAAKC,MAAMipD,GAAQ,MAAOzrD,GAAK,MAAO,MACxGI,KAAK+uF,IAAmB5xF,EAASoK,EAAGwnF,GAAuBA,IAC3D/uF,KAAK+uF,IACL,IAAK,MAAMtiE,KAAY9nB,OAAOC,KAAKmqF,GAC7BA,EAActiE,WACXsiE,EAActiE,GAGvBzlB,KAAK+nF,cAAgBA,EACrB/nF,KAAKwoF,kBAAmB,EACxB,MAAMnkC,EAAMlpD,KAAKsD,UAAUuB,KAAK+nF,eAEhC,OADA/nF,KAAKw/D,WAAWhE,MAAM,yBAA0BnX,GACzC6hB,EAAI9rE,UAAU4F,KAAKsoF,sBAAuBjkC,KAEjDrrD,KAAK,IAAM7C,EAAQwF,GAASqE,KAAKw/D,WAAW7jE,MAAMA,QA7FjDksF,EAAkBhd,EAAA,CAQrBC,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAA+S,EAAA9H,cATG8R,6GClFOnpF,EAAAyqF,gBAAkB/e,EAAA5pE,gBAAiC;6GC4CnD9B,EAAA0qF,SAAsB,IArBnC,MAAArpF,cAEkBC,KAAA7F,KAAO,IAAI8F,IAErBF,IAAI0Z,EAAYtf,GACtBkvF,EAAO1qF,GAAGy4D,EAAMp7B,SAASviB,IACzB4vE,EAAO1qF,GAAGy4D,EAAMn7B,SAAS9hC,IACzBkvF,EAAO1qF,IAAIqB,KAAK7F,KAAK+O,IAAIuQ,GAAK,8CAE9BzZ,KAAK7F,KAAKiG,IAAIqZ,EAAItf,GAGZ4F,MAAM0Z,GACZ,OAAOzZ,KAAK7F,KAAK+O,IAAIuQ,GAGf1Z,GAAG0Z,GACT,OAAOzZ,KAAK7F,KAAK+F,IAAIuZ,IAAO,uHCvCjB/a,EAAA4qF,WAAa,CACzBC,iBAAkB,2BAoEnB,MAAMC,EAA2B,IA5BjC,MAOCzpF,cAHiBC,KAAAypF,mBAAqB,IAAIzrE,EAAAlG,QACjC9X,KAAA0pF,kBAAmC1pF,KAAKypF,mBAAmBpyE,MAGnErX,KAAK2pF,YAAc,GAGb5pF,eAAe4iC,EAAainD,GApBpC,IAAqBnwE,EAqBnBzZ,KAAK2pF,aArBclwE,EAqBUkpB,EApB1BlpB,EAAGnjB,OAAS,GAAkC,MAA7BmjB,EAAG2Y,OAAO3Y,EAAGnjB,OAAS,GACnCmjB,EAAG/d,UAAU,EAAG+d,EAAGnjB,OAAS,GAE7BmjB,IAiB+BmwE,EACrC5pF,KAAKypF,mBAAmB1xE,KAAK4qB,GAGvB5iC,oBAAoB4iC,GAC1B3iC,KAAKypF,mBAAmB1xE,KAAK4qB,GAGvB5iC,yBACN,MAAO,CACN8pF,QAAS7pF,KAAK2pF,eAOjBxkE,EAASikE,SAAS/oF,IAAI3B,EAAA4qF,WAAWC,iBAAkBC;kICjEtC9qF,EAAA4qF,WAAa,CACzBQ,cAAe,oCAqEhB,SAAkBC,GAIjBA,EAAAA,EAAA,YAAA,GAAA,cAIAA,EAAAA,EAAA,QAAA,GAAA,UAIAA,EAAAA,EAAA,OAAA,GAAA,SAIAA,EAAAA,EAAA,SAAA,GAAA,WAIAA,EAAAA,EAAA,qBAAA,GAAA,uBAIAA,EAAAA,EAAA,oBAAA,GAAA,sBAxBD,CAAkBrrF,EAAAqrF,qBAAArrF,EAAAqrF,mBAAkB,KAyDvBrrF,EAAAsrF,YAAuF,CAAEhlB,WAAY,GAAIilB,kBAAmB,IAC5HvrF,EAAAwrF,oBAA+F,CAAEllB,WAAY,GAAIilB,kBAAmB,IACpIvrF,EAAAyrF,gBAA2F,CAAEnlB,WAAY,GAAIilB,kBAAmB,IAChIvrF,EAAA0rF,2BAAsG,CAAEplB,WAAY,GAAIilB,kBAAmB,IAC3IvrF,EAAA2rF,eAA0F,CAAErlB,WAAY,GAAIilB,kBAAmB,IAC/HvrF,EAAA4rF,iBAA4F,CAAEtlB,WAAY,GAAIilB,kBAAmB,IAEjIvrF,EAAA6rF,iCAAmC,6CAEhD,MAAMC,EAAuB9iE,EAAA0hE,SAASqB,GAA8BC,EAAApB,WAAeC,kBAwQnF,SAAgBoB,EAAgBr4E,GAE/B,OADU5J,MAAMC,QAAQ2J,GAAmBA,EAAM,GAAaA,GAE7D,IAAK,UACJ,OAAO,EACR,IAAK;AACL,IAAK,SACJ,OAAO,EACR,IAAK,SACJ,MAAO,GACR,IAAK,QACJ,MAAO,GACR,IAAK,SACJ,MAAO,GACR,QACC,OAAO,MAjBG5T,EAAAksF,0BAA4B,IAAIn4D,OADnB,aAG1B/zB,EAAAisF,gBAAAA,EAoBA,MAAME,EAAwB,IA1R9B,MAeC9qF,cARiBC,KAAA8qF,oBAAsB,IAAI3qF,IAE1BH,KAAA+qF,mBAAqB,IAAI/sE,EAAAlG,QACjC9X,KAAAgrF,kBAAiChrF,KAAK+qF,mBAAmB1zE,MAEjDrX,KAAAglD,0BAA+C,IAAIhnC,EAAAlG,QAC3D9X,KAAAslD,yBAA4CtlD,KAAKglD,0BAA0B3tC,MAGnFrX,KAAKirF,kCAAoC,CACxCxxE,GAAI,mBACJyxE,MAAOj3B,EAAII,SAAS,EAA+B,MACnD2Q,WAAY,IAEbhlE,KAAKmrF,0BAA4B,CAACnrF,KAAKirF,mCACvCjrF,KAAKorF,+BAAiC,CAAEpmB,WAAY,GAAIilB,kBAAmB,GAAIoB,sBAAsB,EAAOC,aAAc,uCAAwCC,qBAAqB,EAAMC,eAAe,GAC5MxrF,KAAKyrF,wBAA0B,GAC/BzrF,KAAK0rF,gCAAkC,GAEvClB,EAAqBmB,eAAejtF,EAAA6rF,iCAAkCvqF,KAAKorF,gCAGrErrF,sBAAsB6rF,EAAmCC,GAAoB;AACnF7rF,KAAK8rF,uBAAuB,CAACF,GAAgBC,GAGvC9rF,uBAAuBgsF,EAAsCF,GAAoB,GACvF,MAAM7mB,EAAuB,GAC7B+mB,EAAe1sF,QAAQusF,IACtB5mB,EAAW/tE,QAAQ+I,KAAKgsF,8BAA8BJ,EAAeC,IACrE7rF,KAAKmrF,0BAA0Bl0F,KAAK20F,GACpC5rF,KAAKisF,0BAA0BL,KAGhCpB,EAAqBmB,eAAejtF,EAAA6rF,iCAAkCvqF,KAAKorF,gCAC3EprF,KAAK+qF,mBAAmBhzE,OACxB/X,KAAKglD,0BAA0BjtC,KAAKitD,GAG9BjlE,yBAAyBgsF,GAC/B,MAAM/mB,EAAuB,GACvBknB,EAA2BN,IAChC,GAAIA,EAAc5mB,WACjB,IAAK,MAAMzmE,KAAOqtF,EAAc5mB,WAO/B,OANAA,EAAW/tE,KAAKsH,UAETyB,KAAKyrF,wBAAwBltF,UAG7BG,EAAAsrF,YAAYhlB,WAAWzmE,GACtBqtF,EAAc5mB,WAAWzmE,GAAK+kF,OACrC,KAAA,SACQ5kF,EAAAwrF,oBAAoBllB,WAAWzmE,GACtC,MACD,KAAA,SACQG,EAAAyrF,gBAAgBnlB,WAAWzmE,GAClC,MACD,KAAA,SACQG,EAAA0rF,2BAA2BplB,WAAWzmE,GAC7C,MACD,KAAA,SACQG,EAAA2rF,eAAerlB,WAAWzmE,GACjC,MACD,KAAA,EACA,KAAA,SACQG,EAAA4rF,iBAAiBtlB,WAAWzmE,GAKnCqtF,EAAcO,OACjBP,EAAcO,MAAM9sF,QAAQuQ,GAAQs8E,EAAwBt8E,KAG9D,IAAK,MAAMg8E,KAAiBG,EAAgB,CAC3CG,EAAwBN,GACxB,MAAMpwF,EAAQwE,KAAKmrF,0BAA0BxpF,QAAQiqF,IACtC,IAAXpwF,GACHwE,KAAKmrF,0BAA0BrzF,OAAO0D,EAAO;AAI/CgvF,EAAqBmB,eAAejtF,EAAA6rF,iCAAkCvqF,KAAKorF,gCAC3EprF,KAAK+qF,mBAAmBhzE,OACxB/X,KAAKglD,0BAA0BjtC,KAAKitD,GAG9BjlE,8BAA8BqsF,GACpC,MAAMpnB,EAAuB,GAE7B,IAAK,MAAMqnB,KAAwBD,EAClC,IAAK,MAAM7tF,KAAO8tF,EAAqBC,SAAU,CAChD,MAAMvtE,EAAestE,EAAqBC,SAAS/tF,GACnD,GAAIG,EAAAksF,0BAA0Bz4D,KAAK5zB,IAAgC,iBAAjBwgB,EAA2B,CAC5E,MAAMwtE,EAA+C,CACpDj6E,KAAM,SACNmjD,QAAS12C,EACTytE,YAAav4B,EAAII,SAAS,EAAgC,KAAgE91D,GAC1HkuF,KAAM/tF,EAAA6rF,kCAEP7rF,EAAAsrF,YAAYhlB,WAAWzmE,GAAOguF,EAC9BvsF,KAAKirF,kCAAkCjmB,WAAYzmE,GAAOguF,EAC1DvsF,KAAKyrF,wBAAwBltF,GAAOguF,EACpCvnB,EAAW/tE,KAAKsH,IAKnByB,KAAK+qF,mBAAmBhzE,OACxB/X,KAAKglD,0BAA0BjtC,KAAKitD,GAG9BjlE,gCAAgCqsF,GACtC,MAAMpnB,EAAuB,GAC7B,IAAK,MAAMqnB,KAAwBD,EAClC,IAAK,MAAM7tF,KAAO8tF,EAAqBC,SACtCtnB,EAAW/tE,KAAKsH,UACTG,EAAAsrF,YAAYhlB,WAAWzmE,UACvByB,KAAKirF,kCAAkCjmB,WAAYzmE,UACnDyB,KAAKyrF,wBAAwBltF,GAGtCyB,KAAK+qF,mBAAmBhzE,OACxB/X,KAAKglD,0BAA0BjtC,KAAKitD,GAG9BjlE,oCAAoCgsF,GAC1C/rF,KAAK+qF,mBAAmBhzE;AAGlBhY,4BAA4B+qF,GAClC,IAAK,MAAM4B,KAAsB5B,EAChC9qF,KAAK8qF,oBAAoBzqF,IAAIqsF,GAG9B1sF,KAAK2sF,mCAGE5sF,8BAA8B6rF,EAAmCC,GAAoB,EAAMvI,EAAA,GAClGA,EAAQ3uB,EAAMx4B,kBAAkByvD,EAActI,OAASA,EAAQsI,EAActI,MAC7E,IAAIsJ,EAAyB,GACzB5nB,EAAa4mB,EAAc5mB,WAC/B,GAAIA,EACH,IAAK,IAAIzmE,KAAOymE,EAAY,CAC3B,GAAI6mB,GAAYgB,EAAiBtuF,GAAM,QAC/BymE,EAAWzmE,GAClB,SAGD,IAAImD,EAAWsjE,EAAWzmE,GACtBwgB,EAAerd,EAAS+zD,QACxBd,EAAMz4B,YAAYnd,KACrBrd,EAAS+zD,QAAUk1B,EAAgBjpF,EAAS4Q,OAEzC5T,EAAAksF,0BAA0Bz4D,KAAK5zB,GAClCmD,EAAS4hF,WAAQzpF,EAEjB6H,EAAS4hF,MAAQ3uB,EAAMx4B,kBAAkBz6B,EAAS4hF,OAASA,EAAQ5hF,EAAS4hF,OAKzEte,EAAWzmE,GAAKQ,eAAe,aAAgBimE,EAAWzmE,GAAKuuF,UAKlE9sF,KAAKyrF,wBAAwBltF,GAAOymE,EAAWzmE,GAGhDquF,EAAa31F,KAAKsH,KAPjByB,KAAK0rF,gCAAgCntF,GAAOymE,EAAWzmE,UAChDymE,EAAWzmE,IASrB,IAAIwuF,EAAWnB,EAAcO,MAC7B,GAAIY,EACH,IAAK,IAAIn9E,KAAQm9E,EAChBH,EAAa31F,QAAQ+I,KAAKgsF,8BAA8Bp8E,EAAMi8E,EAAUvI,IAG1E,OAAOsJ,EAGR7sF,oBACC,OAAOC,KAAKmrF,0BAGbprF,6BACC,OAAOC,KAAKyrF,wBAGb1rF,qCACC,OAAOC,KAAK0rF,gCAGL3rF,0BAA0B6rF,GACjC,MAAMoB,EAAYpB,IACjB,IAAI5mB,EAAa4mB,EAAc5mB,WAC/B,GAAIA,EACH,IAAK,MAAMzmE,KAAOymE,EAEjB,OADAtmE,EAAAsrF,YAAYhlB,WAAWzmE,GAAOymE,EAAWzmE;AACjCymE,EAAWzmE,GAAK+kF,OACvB,KAAA,EACC5kF,EAAAwrF,oBAAoBllB,WAAWzmE,GAAOymE,EAAWzmE,GACjD,MACD,KAAA,EACCG,EAAAyrF,gBAAgBnlB,WAAWzmE,GAAOymE,EAAWzmE,GAC7C,MACD,KAAA,EACCG,EAAA0rF,2BAA2BplB,WAAWzmE,GAAOymE,EAAWzmE,GACxD,MACD,KAAA,EACCG,EAAA2rF,eAAerlB,WAAWzmE,GAAOymE,EAAWzmE,GAC5C,MACD,KAAA,EACCG,EAAA4rF,iBAAiBtlB,WAAWzmE,GAAOymE,EAAWzmE,GAC9C,MACD,KAAA,EACCG,EAAA4rF,iBAAiBtlB,WAAWzmE,GAAOymE,EAAWzmE,GAC9CyB,KAAKorF,+BAA+BpmB,WAAYzmE,GAAOymE,EAAWzmE,GAKtE,IAAIwuF,EAAWnB,EAAcO,MACzBY,GACHA,EAAS1tF,QAAQ2tF,IAGnBA,EAASpB,GAGF7rF,yCACP,IAAK,MAAM2sF,KAAsBrjD,EAAA/rC,OAAO0C,KAAK8qF,qBAAsB,CAClE,MAAMmC,EAA6B,IAAIP,KACjCQ,EAAgD,CACrD56E,KAAM,SACNk6E,YAAav4B,EAAII,SAAS,EAAuC,MACjEi3B,aAAcr3B,EAAII,SAAS,EAAiC,MAC5Do4B,KAAM/tF,EAAA6rF,iCACN90B,QAAuF,QAAhF9gD,EAAE3U,KAAKirF,kCAAkCjmB,WAAYioB,UAA2B,IAAAt4E,OAAA,EAAAA,EAAE8gD,SAE1F/2D,EAAAsrF,YAAYhlB,WAAWioB,GAA8BC,EACrDxuF,EAAAwrF,oBAAoBllB,WAAWioB,GAA8BC,EAC7DxuF,EAAAyrF,gBAAgBnlB,WAAWioB,GAA8BC,EACzDxuF,EAAA0rF,2BAA2BplB,WAAWioB,GAA8BC,EACpExuF,EAAA2rF,eAAerlB,WAAWioB,GAA8BC,EACxDxuF,EAAA4rF,iBAAiBtlB,WAAWioB,GAA8BC,EAE3DltF,KAAK+qF,mBAAmBhzE,SA8B1B,SAAgB80E,EAAiBnrF;AAChC,OAAIhD,EAAAksF,0BAA0Bz4D,KAAKzwB,GAC3BuyD,EAAII,SAAS,EAAmC,KAAoK3yD,QAEvJ7H,IAAjEgxF,EAAsBsC,6BAA6BzrF,GAC/CuyD,EAAII,SAAS,EAA6B,KAA+D3yD,GAE1G,KATRgmB,EAAA0hE,SAAS/oF,IAAI3B,EAAA4qF,WAAWQ,cAAee,GAEvCnsF,EAAAmuF,iBAAAA,EAUAnuF,EAAA0uF,UAAA,WACC,MAAMC,EAAqD,GACrD5B,EAA0BZ,EAAsBsC,6BACtD,IAAK,MAAM5uF,KAAOZ,OAAOC,KAAK6tF,GAC7B4B,EAAOp2F,KAAK,CAACsH,EAAKktF,EAAwBltF,GAAK+kF,QAIhD,OAFA+J,EAAOp2F,KAAK,CAAC,SAAQ,IACrBo2F,EAAOp2F,KAAK,CAAC,OAAM,IACZo2F,oFC3NR,SAAgBC,EAAatoB,EAA6CuoB,GACzE,MAAM95E,EAAO9V,OAAOK,OAAO,MAE3B,IAAK,IAAIO,KAAOymE,EACfwoB,EAAe/5E,EAAMlV,EAAKymE,EAAWzmE,GAAMgvF,GAG5C,OAAO95E,EAGR,SAAgB+5E,EAAeC,EAAuBlvF,EAAaK,EAAY2uF,GAC9E,MAAMr7E,EAAW3T,EAAI4F,MAAM,KACrBsJ,EAAOyE,EAAS1L,MAEtB,IAAIknF,EAAOD,EACX,IAAK,IAAIr3F,EAAI,EAAGA,EAAI8b,EAAS5b,OAAQF,IAAK,CACzC,IAAIqgC,EAAIvkB,EAAS9b,GACbqS,EAAMilF,EAAKj3D,GACf,cAAehuB,GACd,IAAK,YACJA,EAAMilF,EAAKj3D,GAAK94B,OAAOK,OAAO,MAC9B,MACD,IAAK,SACJ,MACD,QAEC,YADAuvF,EAAiB,YAAYhvF,QAAU2T,EAASla,MAAM,EAAG5B,EAAI,GAAGuD,KAAK,WAAWwB,KAAKsD,UAAUgK,MAGjGilF,EAAOjlF,EAGY,iBAATilF,EACVA,EAAKjgF,GAAQ7O,EAEb2uF,EAAiB,YAAYhvF,QAAU2T,EAASvY,KAAK,WAAWwB,KAAKsD,UAAUivF,MA+BjF,SAAgBC,EAAyBpyF,EAAaqyF,EAAqB7uE,GAY1E,MACM5oB,EAZN,SAAuBoF,EAAapD,GACnC,IAAI8U,EAAU1R,EACd,IAAK,MAAMsyF,KAAa11F,EAAM,CAC7B,GAAuB,iBAAZ8U,GAAoC,OAAZA,EAClC,OAEDA,EAAUA,EAAQ4gF;AAEnB,OAAU5gF,EAII6gF,CAAcvyF,EADhBqyF,EAAYzpF,MAAM,MAG/B,YAAyB,IAAXhO,EAAyB4oB,EAAe5oB,EAkCvD,SAAgB43F,EAA0BxvF,GACzC,OAAOA,EAAI7C,UAAU,EAAG6C,EAAIjI,OAAS,GAGtC,SAAgB03F,EAA0BtB,GACzC,MAAO,IAAIA,sDApVChuF,EAAAuvF,sBAAwB7jB,EAAA5pE,gBAAuC,wBAE5E9B,EAAAwvF,yBAAA,SAAyCj5E,GACxC,OAAOA,GACc,iBAAVA,KACLA,EAAMy3E,oBAA0D,iBAA7Bz3E,EAAMy3E,uBACzCz3E,EAAMkN,UAAYlN,EAAMkN,oBAAoBihB,EAAA3D,MAQnD,SAAkB0uD,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SAPD,CAAkBzvF,EAAAyvF,sBAAAzvF,EAAAyvF,oBAAmB,KASrCzvF,EAAA0vF,4BAAA,SAA4CC,GAC3C,OAAQA,GACP,KAAA,EAA+B,MAAO,OACtC,KAAA,EAAqC,MAAO,aAC5C,KAAA,EAAsC,MAAO,cAC7C,KAAA,EAAoC,MAAO,YAC3C,KAAA,EAA2C,MAAO,mBAClD,KAAA,EAAkC,MAAO,UACzC,KAAA,EAAiC,MAAO,WA2G1C3vF,EAAAsG,QAAA,SAAgBA,EAAQvN,EAAuCC;AAC9D,MAAMgQ,EAAQhQ,EACXD,EAAOC,EAAGkG,KAAKyK,OAAO9J,IAAmC,IAA5B9G,EAAKmG,KAAK+D,QAAQpD,IAAe,IAAI7G,EAAGkG,MACrE,GACG6J,EAAUhQ,EACbC,EAAKD,EAAKmG,KAAKyK,OAAO9J,IAAiC,IAA1B7G,EAAGkG,KAAK+D,QAAQpD,IAAe,IAAI9G,EAAKmG,MACrE,GACGwqF,EAAoB,GAE1B,GAAI1wF,GAAMD,EACT,IAAK,MAAM8G,KAAO9G,EAAKmG,KACtB,IAA8B,IAA1BlG,EAAGkG,KAAK+D,QAAQpD,GAAa,CAChC,MAAM+vF,EAASX,EAAsBl2F,EAAKgG,SAAUc,GAC9CgwF,EAASZ,EAAsBj2F,EAAG+F,SAAUc,GAC7C4+B,EAAQr2B,OAAOwnF,EAAQC,IAC3BnG,EAAQnxF,KAAKsH,GAMjB,MAAMiwF,EAAkC,GAClCC,EAAwBD,IAC7B,MAAMr4F,EAAwC,GAC9C,IAAK,MAAMu4F,KAAYF,EACtB,IAAK,MAAM3uB,KAAc6uB,EAASC,YACjCx4F,EAAO63F,EAA0BnuB,IAAe6uB,EAGlD,OAAOv4F,GAEFy4F,EAAyDl3F,EAAK+2F,EAAqB/2F,EAAG82F,WAAa,GACnGK,EAA2Dp3F,EAAOg3F,EAAqBh3F,EAAK+2F,WAAa,GAE/G,GAAI7wF,OAAOC,KAAKgxF,GAAyBt4F,OACxC,IAAK,MAAMiI,KAAOmJ,EAAO,CACxB,MAAMgnF,EAAWE,EAAwBrwF,GACrCmwF,GACHF,EAAUv3F,KAAK,CAAC82F,EAA0BxvF,GAAMmwF,EAAS9wF,OAI5D,GAAID,OAAOC,KAAKixF,GAA2Bv4F,OAC1C,IAAK,MAAMiI,KAAOkJ,EAAS,CAC1B,MAAMinF,EAAWG,EAA0BtwF,GACvCmwF,GACHF,EAAUv3F,KAAK,CAAC82F,EAA0BxvF,GAAMmwF,EAAS9wF,OAK5D,GAAID,OAAOC,KAAKgxF,GAAyBt4F,QAAUqH,OAAOC,KAAKixF,GAA2Bv4F,OACzF,IAAK,MAAMiI,KAAO6pF,EAAS,CAC1B,MAAM0G,EAAeD,EAA0BtwF,GACzCwwF,EAAaH,EAAwBrwF,GAC3C,GAAIuwF,GAAgBC,EAAY,CAC/B,MAAM54F,EAAS6O,EAAQ,CAAEvH,SAAUqxF,EAAarxF,SAAUG,KAAMkxF,EAAalxF,KAAM4wF,UAAW,IAAM,CAAE/wF,SAAUsxF,EAAWtxF,SAAUG,KAAMmxF,EAAWnxF,KAAM4wF,UAAW,KACvKA,EAAUv3F,KAAK,CAAC82F,EAA0BxvF,GAAM,IAAIpI,EAAOuR,SAAUvR,EAAOsR,WAAYtR,EAAOiyF,YAKlG,MAAO,CAAE1gF,MAAAA,EAAOD,QAAAA,EAAS2gF,QAAAA,EAASoG,UAAAA,IAGnC9vF,EAAAswF,YAAA,SAA4B3qC,EAAUkpC,GACrC,MAAMiB,EAA0B,GAChC,IAAK,MAAMjwF,KAAOZ,OAAOC,KAAKymD,GAC7B,GAAI4qC,EAAArE,0BAA0Bz4D,KAAK5zB,GAAM,CACxC,MAAM2wF,EAAmB,GACzB,IAAK,MAAMC,KAAoB9qC,EAAI9lD,GAClC2wF,EAAYC,GAAoB9qC,EAAI9lD,GAAK4wF,GAE1CX,EAAUv3F,KAAK;AACd03F,YAAa,CAACZ,EAA0BxvF,GAAK8vB,QAC7CzwB,KAAMD,OAAOC,KAAKsxF,GAClBzxF,SAAU6vF,EAAa4B,EAAa3B,KAIvC,OAAOiB,GAGR9vF,EAAA4uF,aAAAA,EAUA5uF,EAAA8uF,eAAAA,EA4BA9uF,EAAA0wF,oBAAA,SAAoCC,EAAgB9wF,IAKpD,SAAS+wF,EAAsBD,EAAgBn9E,GAC9C,MAAM9S,EAAQ8S,EAAS8J,QACvB,GAAwB,IAApB9J,EAAS5b,OAGZ,mBADO+4F,EAAUjwF,GAIlB,IAA+C,IAA3CzB,OAAOC,KAAKyxF,GAAW1tF,QAAQvC,GAAe,CACjD,MAAMR,EAAQywF,EAAUjwF,GACH,iBAAVR,GAAuB8J,MAAMC,QAAQ/J,KAC/C0wF,EAAsB1wF,EAAOsT,GACK,IAA9BvU,OAAOC,KAAKgB,GAAOtI,eACf+4F,EAAUjwF,KAhBpBkwF,CAAsBD,EADL9wF,EAAI4F,MAAM,OA0B5BzF,EAAAivF,sBAAAA,EAkBAjvF,EAAAgZ,MAAA,SAAgBA,EAAM0R,EAAW/oB,EAAUy+B,GAC1CnhC,OAAOC,KAAKyC,GAAKhB,QAAQd,IACpBA,KAAO6qB,EACNurC,EAAM14B,SAAS7S,EAAK7qB,KAASo2D,EAAM14B,SAAS57B,EAAI9B,IACnDmZ,EAAM0R,EAAK7qB,GAAM8B,EAAI9B,GAAMugC,GACjBA,IACV1V,EAAK7qB,GAAO8B,EAAI9B,IAGjB6qB,EAAK7qB,GAAO8B,EAAI9B,MAKnBG,EAAA6wF,qBAAA,WACC,MAAMvqB,EAAat9C,EAAA0hE,SAASqB,GAA2BwE,EAAA3F,WAAWQ,eAAeqD,6BACjF,OAAOxvF,OAAOC,KAAKonE,IAGpBtmE,EAAA8wF,iBAAA,WACC,MAAMC,EAAqB9xF,OAAOK,OAAO,MACnCgnE,EAAat9C,EAAA0hE,SAASqB,GAA2BwE,EAAA3F,WAAWQ,eAAeqD,6BAEjF,IAAK,IAAI5uF,KAAOymE,EAAY,CAE3BwoB,EAAeiC,EAAelxF,EADlBymE,EAAWzmE,GAAKk3D,QACc52D,GAAWjI,QAAQ+E,MAAM,iCAAiCkD,MAGrG,OAAO4wF,GAGR/wF,EAAAqvF,0BAAAA,EAIArvF,EAAAsvF,0BAAAA,EAIAtvF,EAAAgxF,wBAAA,SAA2CC,EAA6CC,EAA4BC;AACnH,MAAMC,EAAUH,EAAqBI,QAAWH,GAC1CI,EAAgBL,EAAqBI,QAAWF,GAEtD,YAAiC,IAAtBC,EAAQG,gBAA+D,IAA3BH,EAAQI,qBAA0E,IAAjCJ,EAAQK,qBACxGL,EAAQlxF,WAC8B,IAA5BoxF,EAAcC,gBAAqE,IAAjCD,EAAcE,qBAAgF,IAAvCF,EAAcG,qBACjIH,EAAcpxF,MAEdkxF,EAAQ/wE,iKC/VjB,MAAaqxE,EAIZrwF,YACSswF,EAAiB,GACjBC,EAAkB,GAClBC,EAA2B,IAF3BvwF,KAAAqwF,UAAAA,EACArwF,KAAAswF,MAAAA,EACAtwF,KAAAuwF,WAAAA,EALDvwF,KAAA4c,UAAoB,EAS5Bnf,eACC,OAAOuC,KAAKwwF,eAAexwF,KAAKqwF,WAGjC7B,gBACC,OAAOxuF,KAAKwwF,eAAexwF,KAAKuwF,YAGjC3yF,WACC,OAAOoC,KAAKwwF,eAAexwF,KAAKswF,OAGjCvwF,UACC,OAA6B,IAAtBC,KAAKswF,MAAMh6F,QAAuD,IAAvCqH,OAAOC,KAAKoC,KAAKqwF,WAAW/5F,QAA2C,IAA3B0J,KAAKuwF,WAAWj6F,OAG/FyJ,SAAY0wF,GACX,OAAOA,EAAUC,EAAA/C,sBAA2B3tF,KAAKvC,SAAUgzF,GAAWzwF,KAAKvC,SAG5EsC,iBAAoB0wF,EAA6B/D,GAChD,MAAMiE,EAAmB3wF,KAAK4wF,gCAAgClE,GAC9D,OAAOiE,EACJF,EAAUC,EAAA/C,sBAA2BgD,EAAkBF,GAAWE,OAClE92F,EAGJkG,6BAA6B8/D;AAC5B,IAAK,MAAM6uB,KAAY1uF,KAAKwuF,UAC3B,IAAkD,IAA9CE,EAASC,YAAYhtF,QAAQk+D,GAChC,OAAO6uB,EAAS9wF,KAGlB,MAAO,GAGRmC,SAAS8/D,GACR,MAAM8wB,EAAmB3wF,KAAK4wF,gCAAgC/wB,GAE9D,IAAK8wB,GAAgD,iBAArBA,IAAkChzF,OAAOC,KAAK+yF,GAAkBr6F,OAE/F,OAAO0J,KAGR,IAAIvC,EAAgB,GACpB,IAAK,MAAMc,KAAOisC,EAAO3hC,SAAS,IAAIlL,OAAOC,KAAKoC,KAAKvC,aAAcE,OAAOC,KAAK+yF,KAAqB,CAErG,IAAIE,EAAiB7wF,KAAKvC,SAASc,GAC/BuyF,EAAyBH,EAAiBpyF,GAG1CuyF,IAE2B,iBAAnBD,GAAiE,iBAA3BC,GAChDD,EAAiB1zD,EAAQa,UAAU6yD,GACnC7wF,KAAK+wF,cAAcF,EAAgBC,IAEnCD,EAAiBC,GAInBrzF,EAASc,GAAOsyF,EAGjB,OAAO,IAAIT,EAAmB3yF,EAAUuC,KAAKpC,KAAMoC,KAAKwuF,WAGzDzuF,SAASixF,GACR,MAAMvzF,EAAW0/B,EAAQa,UAAUh+B,KAAKvC,UAClC+wF,EAAYrxD,EAAQa,UAAUh+B,KAAKwuF,WACnC5wF,EAAO,IAAIoC,KAAKpC,MAEtB,IAAK,MAAMoJ,KAASgqF,EAAQ,CAC3BhxF,KAAK+wF,cAActzF,EAAUuJ,EAAMvJ,UAEnC,IAAK,MAAMwzF,KAAiBjqF,EAAMwnF,UAAW,CAC5C,MAAOE,GAAYF,EAAUnmF,OAAOL,GAAKwiC,EAAO1jC,OAAOkB,EAAE2mF,YAAasC,EAActC,cAChFD,EACH1uF,KAAK+wF,cAAcrC,EAASjxF,SAAUwzF,EAAcxzF,UAEpD+wF,EAAUv3F,KAAKkmC,EAAQa,UAAUizD,IAGnC,IAAK,MAAM1yF,KAAOyI,EAAMpJ,MACI,IAAvBA,EAAK+D,QAAQpD,IAChBX,EAAK3G,KAAKsH,GAIb,OAAO,IAAI6xF,EAAmB3yF,EAAUG,EAAM4wF,GAG/CzuF,SAEC,OADAC,KAAK4c,UAAW,EACT5c,KAGAD,cAAc0e,EAAa9mB,GAClC,IAAK,MAAM4G,KAAOZ,OAAOC,KAAKjG,GACzB4G,KAAOkgB,GACNk2C,EAAM14B,SAASxd,EAAOlgB,KAASo2D,EAAM14B,SAAStkC,EAAO4G,IACxDyB,KAAK+wF,cAActyE,EAAOlgB,GAAM5G,EAAO4G,IAIzCkgB,EAAOlgB,GAAO4+B,EAAQa,UAAUrmC,EAAO4G;AAIjCwB,eAAkB5F,GACzB,OAAI6F,KAAK4c,WAAajf,OAAOif,SAASziB,GAC9BgjC,EAAQc,WAAW9jC,GAEpBA,EAGA4F,gCAAgC8/D,GACvC,IAAK,MAAM6uB,KAAY1uF,KAAKwuF,UAC3B,IAAkD,IAA9CE,EAASC,YAAYhtF,QAAQk+D,GAChC,OAAO6uB,EAASjxF,SAGlB,OAAO,KAGRsC,SACC,MAAO,CACNtC,SAAUuC,KAAKvC,SACf+wF,UAAWxuF,KAAKwuF,UAChB5wF,KAAMoC,KAAKpC,MAMNmC,SAASxB,EAAaK,GAC5BoB,KAAKkxF,OAAO3yF,GACZmyF,EAAAlD,eAAextF,KAAKvC,SAAUc,EAAKK,EAAOhG,IAAO,MAAM,IAAIkG,MAAMlG,KAG3DmH,YAAYxB,GACdyB,KAAKmxF,UAAU5yF,IAClBmyF,EAAAtB,oBAAoBpvF,KAAKvC,SAAUc,GAI7BwB,OAAOxB,GACd,IAAI/C,EAAQwE,KAAKpC,KAAKtH,OACtB,IAAK,IAAIF,EAAI,EAAGA,EAAIoF,EAAOpF,IACQ,IAA9BmI,EAAIoD,QAAQ3B,KAAKpC,KAAKxH,MACzBoF,EAAQpF,GAGV4J,KAAKpC,KAAK9F,OAAO0D,EAAO,EAAG+C,GAGpBwB,UAAUxB,GACjB,IAAI/C,EAAQwE,KAAKpC,KAAK+D,QAAQpD,GAC9B,OAAe,IAAX/C,IACHwE,KAAKpC,KAAK9F,OAAO0D,EAAO,IACjB,IA3KVkD,EAAA0xF,mBAAAA,EAiLA1xF,EAAA0yF,0BAAA,cAA+ChB,EAE9CrwF,cACC,MAAMtC,EAAWizF,EAAAlB,mBACX5xF,EAAO8yF,EAAAnB,uBACPf,EAA0B,GAChC,IAAK,MAAMjwF,KAAOZ,OAAOC,KAAKH,GACzBwxF,EAAArE,0BAA0Bz4D,KAAK5zB,IAClCiwF,EAAUv3F,KAAK,CACd03F,YAAa,CAAC+B,EAAA3C,0BAA0BxvF,GAAK8vB,QAC7CzwB,KAAMD,OAAOC,KAAKH,EAASc,IAC3Bd,SAAUizF,EAAApD,aAAa7vF,EAASc,GAAMM,GAAWjI,QAAQ+E,MAAM,sCAAsCkD;GAIxGyF,MAAM7G,EAAUG,EAAM4wF,KAIxB9vF,EAAA2yF,yBAAA,MAMCtxF,YAA+BuxF,EAAuBC,GAAvBvxF,KAAAsxF,MAAAA,EAAuBtxF,KAAAuxF,QAAAA,EAJ9CvxF,KAAAwxF,KAAY,KACZxxF,KAAAyxF,oBAAiD,KACjDzxF,KAAA0xF,aAAsB,GAI9BC,yBACC,OAAO3xF,KAAKyxF,qBAAuB,IAAIrB,EAGxCt9E,aACC,OAAO9S,KAAK0xF,aAGN3xF,aAAa1F,GACnB,GAAIA,EAAS,CACZ,MAAMgqD,EAAMrkD,KAAK4xF,eAAev3F,GAChC2F,KAAK6xF,SAASxtC,IAITtkD,SAASskD,GACfrkD,KAAKwxF,KAAOntC,EACZ,MAAMstC,EAAqB3xF,KAAK8xF,WAAWztC,GAC3CrkD,KAAKyxF,oBAAsB,IAAIrB,EAAmBuB,EAAmBl0F,SAAUk0F,EAAmB/zF,KAAM+zF,EAAmBnD,WAGrHzuF,QACFC,KAAKwxF,MACRxxF,KAAK6xF,SAAS7xF,KAAKwxF,MAIXzxF,eAAe1F,GACxB,IAAIgqD,EAAW,GACXtxC,EAAiC,KACjCC,EAAqB,GACrBC,EAAyB,GACzBoyC,EAAiC,GAErC,SAASnyC,EAAQtU,GACZ8J,MAAMC,QAAQqK,GACTA,EAAe/b,KAAK2H,GAClBmU,IACVC,EAAcD,GAAmBnU,GAInC,IAAIoR,EAA4B,CAC/BO,cAAe,KACd,IAAI4C,EAAS,GACbD,EAAQC,GACRF,EAAgBhc,KAAK+b,GACrBA,EAAgBG,EAChBJ,EAAkB,MAEnBvC,iBAAmBxZ,IAClB+b,EAAkB/b,GAEnByZ,YAAa,KACZuC,EAAgBC,EAAgBzM,OAEjCkK,aAAc,KACb,IAAIlM,EAAe,GACnB0O,EAAQ1O,GACRyO,EAAgBhc,KAAK+b,GACrBA,EAAgBxO,EAChBuO,EAAkB,MAEnBpC,WAAY,KACXqC,EAAgBC,EAAgBzM,OAEjCoK,eAAgBsC,EAChBnC,QAAS,CAACpV,EAA4BkU,EAAgBvZ,KACrD+uD,EAAYpuD,KAAK,CAAE0E,MAAAA,EAAOkU,OAAAA,EAAQvZ,OAAAA,MAGpC,GAAI+D,EACH,IACCurD,EAAK71C,MAAM1V,EAAS2V,GACpBq0C,EAAMrxC,EAAc,IAAM,GACzB,MAAOpa,GACRhC,QAAQ+E,MAAM,qCAAqCqE,KAAKsxF,UAAU14F,KAClEoH,KAAK0xF,aAAe,CAAC94F,GAIvB,OAAOyrD,EAGEtkD,WAAWskD;AACpB,GAAIrkD,KAAKuxF,QAAS,CACjB,MAAM9F,EAA0B/jE,EAAA0hE,SAASqB,GAA2BwE,EAAA3F,WAAWQ,eAAeqD,6BAC9F9oC,EAAMrkD,KAAK+xF,cAAc1tC,EAAKonC,GAAyB,EAAMzrF,KAAKuxF,SAKnE,MAAO,CAAE9zF,SAHQizF,EAAApD,aAAajpC,EAAKxlD,GAAWjI,QAAQ+E,MAAM,6BAA6BqE,KAAKsxF,UAAUzyF,MAGrFjB,KAFND,OAAOC,KAAKymD,GAEAmqC,UADOkC,EAAA1B,YAAY3qC,EAAKxlD,GAAWjI,QAAQ+E,MAAM,6BAA6BqE,KAAKsxF,UAAUzyF,OAI/GkB,cAAcilE,EAAiBymB,EAAmFuG,EAAqC3E,GAC9J,MAAMl3F,EAAc,GACpB,IAAK,IAAIoI,KAAOymE,EACf,GAAIiqB,EAAArE,0BAA0Bz4D,KAAK5zB,IAAQyzF,EAC1C77F,EAAOoI,GAAOyB,KAAK+xF,cAAc/sB,EAAWzmE,GAAMktF,GAAyB,EAAO4B,OAC5E,CACN,MAAM/J,EAAQtjF,KAAKiyF,SAAS1zF,EAAKktF,IACF,IAA3B4B,EAAO1rF,QAAQ2hF,KAClBntF,EAAOoI,GAAOymE,EAAWzmE,IAI5B,OAAOpI,EAGA4J,SAASxB,EAAaktF,GAC7B,MAAMc,EAAiBd,EAAwBltF,GAC/C,OAAOguF,QAAkD,IAAzBA,EAAejJ,MAAwBiJ,EAAejJ,MAAO,IAI/F,MAAawG,EAKZ/pF,YACSmyF,EACAC,EACAC,EAA+C,IAAIhC,EACnDiC,EAA8C,IAAIjC,EAClDkC,EAAyD,IAAIjpD,EAAA5C,YAC7D8rD,EAA2C,IAAInC,EAC/CoC,EAAkE,IAAInpD,EAAA5C,YACtEgsD,GAAmB,GAPnBzyF,KAAAkyF,sBAAAA,EACAlyF,KAAAmyF,wBAAAA,EACAnyF,KAAAoyF,yBAAAA,EACApyF,KAAAqyF,wBAAAA,EACAryF,KAAAsyF,sBAAAA,EACAtyF,KAAAuyF,qBAAAA,EACAvyF,KAAAwyF,+BAAAA,EACAxyF,KAAAyyF,QAAAA,EAXDzyF,KAAA0yF,oCAAiE;AACjE1yF,KAAA2yF,mCAAsE,IAAItpD,EAAA5C,YAsM1EzmC,KAAA4yF,mBAAgD,KAzLxD7yF,SAAS0wF,EAA6BjC,EAAoCqE,GAEzE,OADsC7yF,KAAK8yF,iCAAiCtE,EAAWqE,GAClDpe,SAASgc,GAG/C1wF,YAAYxB,EAAaK,EAAY4vF,EAAqC,IACzE,IAAIuE,EACAvE,EAAUrsE,UACb4wE,EAAsB/yF,KAAKwyF,+BAA+BtyF,IAAIsuF,EAAUrsE,aAEvE4wE,EAAsB,IAAI3C,EAC1BpwF,KAAKwyF,+BAA+BpyF,IAAIouF,EAAUrsE,SAAU4wE,IAG7DA,EAAsB/yF,KAAKuyF,0BAGd14F,IAAV+E,EACHm0F,EAAoBC,YAAYz0F,GAEhCw0F,EAAoBE,SAAS10F,EAAKK,GAG9B4vF,EAAUrsE,WACdniB,KAAK0yF,oCAAsC,MAI7C3yF,QAAWxB,EAAaiwF,EAAoCqE;AAC3D,MAAMK,EAAgClzF,KAAK8yF,iCAAiCtE,EAAWqE,GACjFM,EAA2BnzF,KAAKozF,uCAAuC5E,EAAUrsE,SAAU0wE,GAC3FQ,EAA2B7E,EAAUrsE,UAAWniB,KAAKwyF,+BAA+BtyF,IAAIsuF,EAAUrsE,WAAyCniB,KAAKuyF,qBAEhJxzE,EAAeyvE,EAAU9B,mBAAqB1sF,KAAKkyF,sBAAsB18E,SAASk5E,SAASF,EAAU9B,oBAAoBjY,SAAYl2E,GAAOyB,KAAKkyF,sBAAsB18E,SAASi/D,SAAYl2E,GAC5L0xF,EAAYzB,EAAU9B,mBAAqB1sF,KAAKszF,kBAAkB99E,SAASk5E,SAASF,EAAU9B,oBAAoBjY,SAAYl2E,GAAOyB,KAAKszF,kBAAkB99E,SAASi/D,SAAYl2E,GACjLg1F,EAAiB/E,EAAU9B,mBAAqB1sF,KAAKwzF,uBAAuBh+E,SAASk5E,SAASF,EAAU9B,oBAAoBjY,SAAYl2E,GAAOyB,KAAKwzF,uBAAuBh+E,SAASi/D,SAAYl2E,GAChMk1F,EAAkBjF,EAAU9B,mBAAqB1sF,KAAK0zF,wBAAwBl+E,SAASk5E,SAASF,EAAU9B,oBAAoBjY,SAAYl2E,GAAOyB,KAAK0zF,wBAAwBl+E,SAASi/D,SAAYl2E,GACnM2xF,EAAiB2C,EAAYrE,EAAU9B,mBAAqB1sF,KAAKqyF,wBAAwB78E,SAASk5E,SAASF,EAAU9B,oBAAoBjY,SAAYl2E,GAAOyB,KAAKqyF,wBAAwB78E,SAASi/D,SAAYl2E,QAAO1E,EACrNs2F,EAAuBgD,EAA2B3E,EAAU9B,mBAAqByG,EAAyB39E,SAASk5E,SAASF,EAAU9B,oBAAoBjY,SAAYl2E,GAAO40F,EAAyB39E,SAASi/D,SAAYl2E,QAAO1E,EAClO85F,EAAcnF,EAAU9B,mBAAqB2G,EAAyB3E,SAASF,EAAU9B,oBAAoBjY,SAAYl2E,GAAO80F,EAAyB5e,SAAYl2E,GACrKK,EAAQs0F,EAA8Bze,SAAYl2E,GAClDusF,EAAgCtgD,EAAO3hC,SAAS2hC,EAAO/gC,QAAQypF,EAA8B1E,UAAU/0F,IAAIi1F,GAAYA,EAASC,eAAetmF,OAAOqkF,QAAkG7yF,IAA5Eq5F,EAA8BU,iBAAiBr1F,EAAKmuF;CAEtO,MAAO,CACN3tE,aAAcA,EACdkxE,UAAWA,EACXsD,eAAgBA,EAChBE,gBAAiBA,EACjBvD,eAAgBA,EAChBC,qBAAsBA,EACtBwD,YAAaA,EACb/0F,MAAAA,EAEA62D,aAA0B57D,IAAjBklB,EAA6B,CAAEngB,MAAOoB,KAAKkyF,sBAAsB18E,SAASi/D,SAASl2E,GAAMmwF,SAAUF,EAAU9B,mBAAqB1sF,KAAKkyF,sBAAsB18E,SAASo+E,iBAAiBr1F,EAAKiwF,EAAU9B,yBAAsB7yF,QAAcA,EACnPg6F,UAAoBh6F,IAAdo2F,EAA0B,CAAErxF,MAAOoB,KAAKszF,kBAAkB99E,SAASi/D,SAASl2E,GAAMmwF,SAAUF,EAAU9B,mBAAqB1sF,KAAKszF,kBAAkB99E,SAASo+E,iBAAiBr1F,EAAKiwF,EAAU9B,yBAAsB7yF,QAAcA,EACrOi6F,eAA8Bj6F,IAAnB05F,EAA+B,CAAE30F,MAAOoB,KAAKwzF,uBAAuBh+E,SAASi/D,SAASl2E,GAAMmwF,SAAUF,EAAU9B,mBAAqB1sF,KAAKwzF,uBAAuBh+E,SAASo+E,iBAAiBr1F,EAAKiwF,EAAU9B,yBAAsB7yF,QAAcA,EACzPk6F,gBAAgCl6F,IAApB45F,EAAgC,CAAE70F,MAAOoB,KAAK0zF,wBAAwBl+E,SAASi/D,SAASl2E,GAAMmwF,SAAUF,EAAU9B,mBAAqB1sF,KAAK0zF,wBAAwBl+E,SAASo+E,iBAAiBr1F,EAAKiwF,EAAU9B,yBAAsB7yF,QAAcA,EAC7Pg5F,eAA8Bh5F,IAAnBq2F,EAA+B,CAAEtxF,MAAOoB,KAAKqyF,wBAAwB78E,SAASi/D,SAASl2E;AAAMmwF,SAAUF,EAAU9B,mBAAqB1sF,KAAKqyF,wBAAwB78E,SAASo+E,iBAAiBr1F,EAAKiwF,EAAU9B,yBAAsB7yF,QAAcA,EAC3Pm6F,qBAA0Cn6F,IAAzBs2F,EAAqC,CAAEvxF,MAAOu0F,MAAAA,OAAwB,EAAxBA,EAA0B39E,SAASi/D,SAASl2E,GAAMmwF,SAAUF,EAAU9B,mBAAqByG,MAAAA,OAAwB,EAAxBA,EAA0B39E,SAASo+E,iBAAiBr1F,EAAKiwF,EAAU9B,yBAAsB7yF,QAAcA,EACjQk2E,YAAwBl2E,IAAhB85F,EAA4B,CAAE/0F,MAAOy0F,EAAyB5e,SAASl2E,GAAMmwF,SAAUF,EAAU9B,mBAAqB2G,EAAyBO,iBAAiBr1F,EAAKiwF,EAAU9B,yBAAsB7yF,QAAcA,EAE3NixF,oBAAqBA,EAAoBx0F,OAASw0F,OAAsBjxF,GAI1EkG,KAAK8yF,GAMJ,MAAMM,EAA2BnzF,KAAKozF,4CAAuCv5F,EAAWg5F,GACxF,MAAO,CACNp9B,QAASz1D,KAAKkyF,sBAAsB18E,SAAS5X,KAC7Ci2F,KAAM7zF,KAAKszF,kBAAkB99E,SAAS5X,KACtCi1F,UAAW7yF,KAAKqyF,wBAAwB78E,SAAS5X,KACjDo2F,gBAAiBb,EAA2BA,EAAyB39E,SAAS5X,KAAO,IAIvFmC,2BAA2BssF,GAC1BrsF,KAAKkyF,sBAAwB7F,EAC7BrsF,KAAK0yF,oCAAsC,KAC3C1yF,KAAK2yF,mCAAmCnxF,QAGzCzB,6BAA6ByzF,GAC5BxzF,KAAKmyF,wBAA0BqB,EAC/BxzF,KAAK4yF,mBAAqB,KAC1B5yF,KAAK0yF,oCAAsC;AAC3C1yF,KAAK2yF,mCAAmCnxF,QAGzCzB,8BAA8B2zF,GAC7B1zF,KAAKoyF,yBAA2BsB,EAChC1zF,KAAK4yF,mBAAqB,KAC1B5yF,KAAK0yF,oCAAsC,KAC3C1yF,KAAK2yF,mCAAmCnxF,QAGzCzB,6BAA6Bk0F,GAC5Bj0F,KAAKqyF,wBAA0B4B,EAC/Bj0F,KAAK0yF,oCAAsC,KAC3C1yF,KAAK2yF,mCAAmCnxF,QAGzCzB,0BAA0BoiB,EAAeypE,GACxC5rF,KAAKsyF,sBAAsBlyF,IAAI+hB,EAAUypE,GACzC5rF,KAAK2yF,mCAAmCryF,OAAO6hB,GAGhDpiB,0BAA0BoiB,GACzBniB,KAAKk0F,qBAAqB5zF,OAAO6hB,GACjCniB,KAAK2yF,mCAAmCryF,OAAO6hB,GAGhDpiB,qCAAqCusF,EAA8B1uF,GAClE,MAAM4wF,EAAkC5wF,EACtCyK,OAAO9J,GAAO0wF,EAAArE,0BAA0Bz4D,KAAK5zB,IAC7C9E,IAAI8E;AACJ,MAAMmuF,EAAqBgE,EAAA3C,0BAA0BxvF,GAC/C41F,EAAWn0F,KAAKkyF,sBAAsBkC,6BAA6B1H,GACnE2H,EAAS/H,EAAS8H,6BAA6B1H,GAC/C9uF,EAAO,IACTy2F,EAAOhsF,OAAO9J,IAAkC,IAA3B41F,EAASxyF,QAAQpD,OACtC41F,EAAS9rF,OAAO9J,IAAgC,IAAzB81F,EAAO1yF,QAAQpD,OACtC41F,EAAS9rF,OAAO9J,IAAQ4+B,EAAQr2B,OAAO9G,KAAKkyF,sBAAsBxD,SAAShC,GAAoBjY,SAASl2E,GAAM+tF,EAASoC,SAAShC,GAAoBjY,SAASl2E,MAEjK,MAAO,CAACmuF,EAAoB9uF,KAG9B,OADAoC,KAAKs0F,2BAA2BhI,GACzB,CAAE1uF,KAAAA,EAAM4wF,UAAAA,GAGhBzuF,uCAAuC8zF,GACtC,MAAMnsF,MAAEA,EAAK0gF,QAAEA,EAAO3gF,QAAEA,EAAO+mF,UAAEA,GAAckC,EAAA1rF,QAAQhF,KAAKwzF,uBAAwBK,GAC9Ej2F,EAAO,IAAI8J,KAAU0gF,KAAY3gF,GAIvC,OAHI7J,EAAKtH,QACR0J,KAAKu0F,6BAA6BV,GAE5B,CAAEj2F,KAAAA,EAAM4wF,UAAAA,GAGhBzuF,wCAAwC8zF,GACvC,MAAMnsF,MAAEA,EAAK0gF,QAAEA,EAAO3gF,QAAEA,EAAO+mF,UAAEA,GAAckC,EAAA1rF,QAAQhF,KAAK0zF,wBAAyBG,GACrF,IAAIj2F,EAAO,IAAI8J,KAAU0gF,KAAY3gF,GAIrC,OAHI7J,EAAKtH,QACR0J,KAAKw0F,8BAA8BX,GAE7B,CAAEj2F,KAAAA,EAAM4wF,UAAAA,GAGhBzuF,uCAAuCk0F,GACtC,MAAMvsF,MAAEA,EAAK0gF,QAAEA,EAAO3gF,QAAEA,EAAO+mF,UAAEA,GAAckC,EAAA1rF,QAAQhF,KAAKi0F,uBAAwBA,GACpF,IAAIr2F,EAAO,IAAI8J,KAAU0gF,KAAY3gF;CAIrC,OAHI7J,EAAKtH,QACR0J,KAAKy0F,6BAA6BR,GAE5B,CAAEr2F,KAAAA,EAAM4wF,UAAAA,GAGhBzuF,oCAAoCoiB,EAAeuyE,GAClD,MAAMC,EAA6B30F,KAAKk0F,qBAAqBh0F,IAAIiiB,IAC3Dza,MAAEA,EAAK0gF,QAAEA,EAAO3gF,QAAEA,EAAO+mF,UAAEA,GAAckC,EAAA1rF,QAAQ2vF,EAA4BD,GACnF,IAAI92F,EAAO,IAAI8J,KAAU0gF,KAAY3gF,GAIrC,OAHI7J,EAAKtH,QAAWq+F,GACnB30F,KAAK40F,0BAA0BzyE,EAAUuyE,GAEnC,CAAE92F,KAAAA,EAAM4wF,UAAAA,GAGhBzuF,oCAAoCuoE,GACnC,MAAMusB,EAAe70F,KAAKk0F,qBAAqBh0F,IAAIooE,GACnD,IAAKusB,EACJ,MAAM,IAAI/1F,MAAM,kBAEjBkB,KAAK80F,0BAA0BxsB,GAC/B,MAAM5gE,MAAEA,EAAK0gF,QAAEA,EAAO3gF,QAAEA,EAAO+mF,UAAEA,GAAckC,EAAA1rF,QAAQ6vF,OAAch7F,GACrE,MAAO,CAAE+D,KAAM,IAAI8J,KAAU0gF,KAAY3gF,GAAU+mF,UAAAA,GAGpDlC,eACC,OAAOtsF,KAAKkyF,sBAIboB,wBAOC,OANKtzF,KAAK4yF,qBACT5yF,KAAK4yF,mBAAqB5yF,KAAKoyF,yBAAyB72E,UAAYvb,KAAKmyF,wBAA0BnyF,KAAKmyF,wBAAwBz6E,MAAM1X,KAAKoyF,0BACvIpyF,KAAKyyF,SACRzyF,KAAK4yF,mBAAmBp9E,UAGnBxV,KAAK4yF,mBAGbY,6BACC,OAAOxzF,KAAKmyF,wBAGbuB;AACC,OAAO1zF,KAAKoyF,yBAGb6B,6BACC,OAAOj0F,KAAKqyF,wBAGb6B,2BACC,OAAOl0F,KAAKsyF,sBAGLvyF,iCAAiCyuF,EAAoCqE,GAC5E,IAAIlB,EAAqB3xF,KAAK+0F,6CAA6CvG,EAAWqE,GACtF,OAAOrE,EAAU9B,mBAAqBiF,EAAmBjD,SAASF,EAAU9B,oBAAsBiF,EAG3F5xF,8CAA6CoiB,SAAEA,GAAqC0wE,GAC3F,IAAImC,EAA2Bh1F,KAAKi1F,wCAEpC,GAAIpC,GAAa1wE,EAAU,CAC1B,MAAM1O,EAAOo/E,EAAUqC,UAAU/yE,GAC7B1O,IACHuhF,EAA2Bh1F,KAAKm1F,mCAAmC1hF,EAAKkvB,MAAQqyD,GAEjF,MAAMI,EAAiCp1F,KAAKwyF,+BAA+BtyF,IAAIiiB,GAC3EizE,IACHJ,EAA2BA,EAAyBt9E,MAAM09E,IAI5D,OAAOJ,EAGAj1F,wCAOP,OANKC,KAAK0yF,sCACT1yF,KAAK0yF,oCAAsC1yF,KAAKkyF,sBAAsBx6E,MAAM1X,KAAKszF,kBAAmBtzF,KAAKqyF,wBAAyBryF,KAAKuyF,sBACnIvyF,KAAKyyF,UACRzyF,KAAKqyF,wBAA0BryF,KAAKqyF,wBAAwB78E,WAGvDxV,KAAK0yF,oCAGL3yF,mCAAmCuoE;AAC1C,IAAI+sB,EAAkCr1F,KAAK2yF,mCAAmCzyF,IAAIooE,GAClF,IAAK+sB,EAAiC,CACrC,MAAMC,EAAoCt1F,KAAKi1F,wCACzCP,EAAsB10F,KAAKsyF,sBAAsBpyF,IAAIooE,GACvDosB,GACHW,EAAkCC,EAAkC59E,MAAMg9E,GACtE10F,KAAKyyF,UACR4C,EAAkCA,EAAgC7/E,UAEnExV,KAAK2yF,mCAAmCvyF,IAAIkoE,EAAQ+sB,IAEpDA,EAAkCC,EAGpC,OAAOD,EAGAt1F,uCAAuCoiB,EAAkC0wE,GAChF,GAAIA,GAAa1wE,EAAU,CAC1B,MAAM1O,EAAOo/E,EAAUqC,UAAU/yE,GACjC,GAAI1O,EACH,OAAOzT,KAAKsyF,sBAAsBpyF,IAAIuT,EAAKkvB,MAM9C5iC,SACC,MAAO,CACNusF,SAAU,CACT7uF,SAAUuC,KAAKkyF,sBAAsBz0F,SACrC+wF,UAAWxuF,KAAKkyF,sBAAsB1D,UACtC5wF,KAAMoC,KAAKkyF,sBAAsBt0F,MAElCi2F,KAAM,CACLp2F,SAAUuC,KAAKszF,kBAAkB71F,SACjC+wF,UAAWxuF,KAAKszF,kBAAkB9E,UAClC5wF,KAAMoC,KAAKszF,kBAAkB11F,MAE9Bi1F,UAAW,CACVp1F,SAAUuC,KAAKqyF,wBAAwB50F,SACvC+wF,UAAWxuF,KAAKqyF,wBAAwB7D,UACxC5wF,KAAMoC,KAAKqyF,wBAAwBz0F,MAEpCw1C,QAASpzC,KAAKsyF,sBAAsB10F,OAAOsM,OAA+C,CAAC/T,EAAQmyE,KAClG,MAAM7qE,SAAEA,EAAQ+wF,UAAEA,EAAS5wF,KAAEA,GAASoC,KAAKsyF,sBAAsBpyF,IAAIooE,GAErE,OADAnyE,EAAOc,KAAK,CAACqxE,EAAQ,CAAE7qE,SAAAA,EAAU+wF,UAAAA,EAAW5wF,KAAAA,KACrCzH,GACL,KAIL4J,UACC,MAAMnC,EAAoB,IAAIuC;CAK9B,OAJAH,KAAKkyF,sBAAsB18E,SAAS5X,KAAKyB,QAAQd,GAAOX,EAAKyC,IAAI9B,IACjEyB,KAAKszF,kBAAkB99E,SAAS5X,KAAKyB,QAAQd,GAAOX,EAAKyC,IAAI9B,IAC7DyB,KAAKqyF,wBAAwB78E,SAAS5X,KAAKyB,QAAQd,GAAOX,EAAKyC,IAAI9B,IACnEyB,KAAKsyF,sBAAsBjzF,QAAQk2F,GAAuBA,EAAoB//E,SAAS5X,KAAKyB,QAAQd,GAAOX,EAAKyC,IAAI9B,KAC7G8qC,EAAA/rC,OAAOM,GAGLmC,gCAAgC2sF,GACzC,MAAM9uF,EAAoB,IAAIuC,IAK9B,OAJAH,KAAKkyF,sBAAsBkC,6BAA6B1H,GAAoBrtF,QAAQd,GAAOX,EAAKyC,IAAI9B,IACpGyB,KAAKszF,kBAAkBc,6BAA6B1H,GAAoBrtF,QAAQd,GAAOX,EAAKyC,IAAI9B,IAChGyB,KAAKqyF,wBAAwB+B,6BAA6B1H,GAAoBrtF,QAAQd,GAAOX,EAAKyC,IAAI9B,IACtGyB,KAAKsyF,sBAAsBjzF,QAAQk2F,GAAuBA,EAAoBnB,6BAA6B1H,GAAoBrtF,QAAQd,GAAOX,EAAKyC,IAAI9B,KAChJ8qC,EAAA/rC,OAAOM,GAGfmC,aAAa5F,GACZ,MAAMkyF,EAAuBrsF,KAAKw1F,wBAAwBr7F,EAAKmyF,UACzDgH,EAAoBtzF,KAAKw1F,wBAAwBr7F,EAAK05F,MACtDI,EAAyBj0F,KAAKw1F,wBAAwBr7F,EAAK04F,WAC3Dz/C,EAA2Cj5C,EAAKi5C,QAAQlpC,OAAO,CAAC/T,EAAQyI,KAC7EzI,EAAOiK,IAAIgjC,EAAA3D,IAAI2N,OAAOxuC,EAAM,IAAKoB,KAAKw1F,wBAAwB52F,EAAM,KAC7DzI,GACL,IAAIkzC,EAAA5C,aACP,OAAO,IAAIqjD,EAAcuC,EAAsBiH,EAAmB,IAAIlD,EAAsB6D,EAAwB7gD,EAAS,IAAIg9C,EAAsB,IAAI/mD,EAAA5C,aAAmC;AAGvL1mC,+BAA+B01F,GACtC,OAAO,IAAIrF,EAAmBqF,EAAMh4F,SAAUg4F,EAAM73F,KAAM63F,EAAMjH,WAAWh5E,UAvV7E9W,EAAAorF,cAAAA,EA4VAprF,EAAAg3F,aAAA,YAAgCxnB,GAC/B,GAAuB,IAAnBA,EAAQ53E,OACX,MAAO,CAAEsH,KAAM,GAAI4wF,UAAW,IAE/B,GAAuB,IAAnBtgB,EAAQ53E,OACX,OAAO43E,EAAQ,GAEhB,MAAMynB,EAAU,IAAIx1F,IACdy1F,EAAe,IAAI31F,IACzB,IAAK,MAAMogC,KAAU6tC,EACpB7tC,EAAOziC,KAAKyB,QAAQd,GAAOo3F,EAAQt1F,IAAI9B,IACvC8hC,EAAOmuD,UAAUnvF,QAAQ,EAAEwgE,EAAYjiE,MACtC,MAAMzH,EAASkzC,EAAAzE,SAASgxD,EAAc/1B,EAAY,IAAI1/D,KACtDvC,EAAKyB,QAAQd,GAAOpI,EAAOkK,IAAI9B,MAGjC,MAAMiwF,EAAkC,GAExC,OADAoH,EAAav2F,QAAQ,CAACzB,EAAMiiE,IAAe2uB,EAAUv3F,KAAK,CAAC4oE,EAAYx2B,EAAA/rC,OAAOM,MACvE,CAAEA,KAAMyrC,EAAA/rC,OAAOq4F,GAAUnH,UAAAA,IAGjC,MAAaqH,EAOZ91F,YAAqBsgC,EAA+C9yB,EAA4FuoF,EAAsDC,GAAjM/1F,KAAAqgC,OAAAA,EAA+CrgC,KAAAuN,SAAAA,EAA4FvN,KAAA81F,qBAAAA,EAAsD91F,KAAA+1F,iBAAAA,EAW9M/1F,KAAAg2F,4BAAoDn8F,EAV3D,MAAM87F,EAAU,IAAIx1F,IACpBkgC,EAAOziC,KAAKyB,QAAQd,GAAOo3F,EAAQt1F,IAAI9B,IACvC8hC,EAAOmuD,UAAUnvF,QAAQ,EAAE,CAAEzB,KAAUA,EAAKyB,QAAQd,GAAOo3F,EAAQt1F,IAAI9B,KACvEyB,KAAKi2F,aAAe5sD,EAAA/rC,OAAOq4F,GAE3B,MAAMhE,EAAqB,IAAIvB,EAC/BpwF,KAAKi2F,aAAa52F,QAAQd,GAAOozF,EAAmBsB,SAAS10F,EAAK,KAClEyB,KAAKk2F,iBAAmBvE,EAAmBl0F,SAI5C04F,4BAIC,OAHKn2F,KAAKg2F,wBAA0Bh2F,KAAKuN,WACxCvN,KAAKg2F,uBAAyBlM,EAAc1uF,MAAM4E,KAAKuN,SAASpT,OAE1D6F,KAAKg2F,uBAGbj2F,qBAAqB0wF,EAAiBjC;CACrC,GAAIxuF,KAAKo2F,6BAA6Bp2F,KAAKk2F,iBAAkBzF,GAAU,CACtE,GAAIjC,EAAW,CACd,MAAMF,EAAStuF,KAAKm2F,sBAAwBn2F,KAAKm2F,sBAAsB1hB,SAASgc,EAASjC,EAAwB,QAAf75E,EAAE3U,KAAKuN,gBAAQ,IAAAoH,OAAA,EAAAA,EAAEk+E,gBAAah5F,EAC1H00F,EAASvuF,KAAK81F,qBAAqBrhB,SAASgc,EAASjC,EAAWxuF,KAAK+1F,kBAC3E,OAAQ54D,EAAQr2B,OAAOwnF,EAAQC,GAEhC,OAAO,EAER,OAAO,EAGAxuF,6BAA6Bm2F,EAAuBzF,GAC3D,IAEIlyF,EAFA83F,EAAgB3F,EAAApD,aAAa,CAAEvtF,CAAC0wF,IAAU,GAAQ,QAGtD,KAAgC,iBAAlB4F,IAA+B93F,EAAMZ,OAAOC,KAAKy4F,GAAe,KAAK,CAElF,KADAH,EAAmBA,EAAiB33F,IAEnC,OAAO,EAER83F,EAAgBA,EAAc93F,GAE/B,OAAO,GAjDTG,EAAAm3F,yBAAAA,EAqDAn3F,EAAA43F,gCAAA,cAAqDT,EACpD91F,YAAY6rF,EAA8BiH,EAA6Bp0E,EAAoC83E,GAC1GjyF,MAAM,CAAE1G,KAAMguF,EAAc4K,UAAWhI,UAAW,SAAM30F,EAAW+xF,EAAeiH,GADZ7yF,KAAAye,OAAAA,EAAoCze,KAAAu2F,aAAAA,sJCtuB5G,MAAaE,UAA6B99E,EAAAlE,WAUzC1U,YACkBskF,GAEjB//E,QAFiBtE,KAAAqkF,iBAAAA,EAJDrkF,KAAA02F,0BAAgE12F,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAC3F9X,KAAA22F,yBAA6D32F,KAAK02F,0BAA0Br/E;AAMpGrX,KAAK4rF,cAAgB,IAAIgL,EAAA9M,cAAc,IAAI8M,EAAAxF,0BAA6B,IAAIwF,EAAAxG,oBAC5EpwF,KAAKilD,UAAUv9B,EAAA0hE,SAASqB,GAA2BwE,EAAA3F,WAAWQ,eAAexkC,yBAAyBmmC,GAA2BzrF,KAAK62F,gCAAgCpL,KAGvK1rF,aAKC,OAJIC,KAAK82F,wBACR92F,KAAK82F,uBAAuBhiF,UAGzB9U,KAAKqkF,iBAAiBvkD,SAAW6P,EAAArC,QAAQ/0C,KACrCC,QAAQyB,UAET,IAAIzB,QAAc,CAACC,EAAGG,KAC5BoH,KAAK82F,uBAAyB92F,KAAKilD,UAAU,IAAI8xC,EAAAlyC,cAAc7kD,KAAKqkF,iBAAiBnkD,OAAQ,CAC5FkmB,kBAAmB,IAAKr1C,QAASpV,GAASwM,EAAA9E,kBAAkB1H,GAAQopD,cAAe,IAAI6xC,EAAAvF,yBAAyBrxF,KAAKqkF,iBAAiBnkD,QAAS9kC,MAAO,CAACf,EAAiBgrD,KACvK,MAAM2xC,EAAwB,IAAIJ,EAAAvF,yBAAyBrxF,KAAKqkF,iBAAiBnkD,QAGjF,OAFA82D,EAAsBC,aAAa58F,GACrB,IAAI28F,EAAsBlkF,QACjCkkF,GACLtxC,aAAc,KAChB1lD,KAAK4rF,cAAgB,IAAIgL,EAAA9M,cAAc,IAAI8M,EAAAxF,0BAA6BpxF,KAAK82F,uBAAwBnxC,YAAYgsC;AACjH3xF,KAAKilD,UAAUjlD,KAAK82F,uBAAwBxxC,yBAAyB,IAAMtlD,KAAKk3F,6BAA6Bl3F,KAAK82F,uBAAwBnxC,YAAYgsC,sBACtJl5F,UAMJsH,uBACC,OAAOC,KAAK4rF,cAAcuL,SAO3Bp3F,SAAS0pC,EAAY2B,GACpB,MAAMqlD,EAA0B,iBAAThnD,EAAoBA,OAAO5vC,EAC5C20F,EAAYkC,EAAAxC,yBAAyBzkD,GAAQA,EAAOinD,EAAAxC,yBAAyB9iD,GAAQA,EAAO,GAClG,OAAOprC,KAAK4rF,cAAcnX,SAASgc,EAASjC,OAAW30F,GAOxDkG,YAAYxB,EAAaK,EAAYk3D,EAAYC,GAChD,OAAOv9D,QAAQ0B,OAAO,IAAI4E,MAAM,kBAGjCiB,QAAWxB,GACV,OAAOyB,KAAK4rF,cAAcmE,QAAWxxF,EAAK,QAAI1E,GAG/CkG,OAMC,OAAOC,KAAK4rF,cAAchuF,UAAK/D,GAGhCkG,oBAAoBuoE,GACnB,OAAItoE,KAAK82F,uBACD,IAAIt+F,QAAcC,GAAKuH,KAAK82F,uBAAwB3wC,OAAO6wC,IACjEh3F,KAAKk3F,6BAA6BF,EAAsBrF,oBACxDl5F,OAGKuH,KAAKo3F,aAGLr3F,6BAA6Bs3F,GACpC,MAAM9pF,EAAWvN,KAAK4rF,cAAcuL,SAC9B92D,EAASrgC,KAAK4rF,cAAc0L,uCAAuCD,GACzEr3F,KAAKsgB,QAAQ+f,EAAQ9yB,EAAQ,GAGtBxN,gCAAgCnC;AACvC,MAAM2P,EAAWvN,KAAK4rF,cAAcuL,SAC9B92D,EAASrgC,KAAK4rF,cAAc2L,qCAAqC,IAAIX,EAAAxF,0BAA6BxzF,GACxGoC,KAAKsgB,QAAQ+f,EAAQ9yB,EAAQ,GAGtBxN,QAAQy3F,EAA2CjqF,EAA8BkR,GACxF,MAAMpH,EAAQ,IAAIu/E,EAAAf,yBAAyB2B,EAAqB,CAAEr9F,KAAMoT,GAAYvN,KAAK4rF,eACzFv0E,EAAMoH,OAASA,EACfpH,EAAMk/E,aAAev2F,KAAKy3F,uBAAuBh5E,GACjDze,KAAK02F,0BAA0B3+E,KAAKV,GAG7BtX,uBAAuBpI,GAC9B,OAAQA,GACP,KAAA,EACC,OAAOqI,KAAK4rF,cAAcU,SAAS7uF,SACpC,KAAA,EACC,OAAOuC,KAAK4rF,cAAc4H,uBAAuB/1F,SAEnD,MAAO,IAjHTiB,EAAA+3F,qBAAAA,gFCMA,SAAgBiB,EAAUh6E,GACzB,OAAQA,EAAQzG,IAAI0gF,YAAcj6E,EAAQzG,IAAI0gF,YAAc,KAAOj6E,EAAQzG,IAAI0gF,WAAa,KAAmC,OAA3Bj6E,EAAQzG,IAAI0gF,WAGjH,SAASC,EAAal6E,GACrB,OAAkC,MAA3BA,EAAQzG,IAAI0gF,4DAfPj5F,EAAAm5F,gBAAkBztB,EAAA5pE,gBAAiC,kBAUhE9B,EAAAg5F,UAAAA,EAQAh5F,EAAAo5F,OAAO5zE,eAAsBxG,GAC5B,IAAKg6E,EAAUh6E,GACd,MAAM,IAAI5e,MAAM,mBAAqB4e,EAAQzG,IAAI0gF,YAElD,OAAIC,EAAal6E,GACT,YAEaqpC,EAAA5tB,eAAezb,EAAQkQ,SAC9BnT;AAGf/b,EAAAq5F,OAAO7zE,eAA8BxG,GACpC,IAAKg6E,EAAUh6E,GACd,MAAM,IAAI5e,MAAM,mBAAqB4e,EAAQzG,IAAI0gF,YAElD,GAAIC,EAAal6E,GAChB,OAAO,KAER,MAAMxE,QAAe6tC,EAAA5tB,eAAezb,EAAQkQ,QAC5C,OAAOzyB,KAAKC,MAAM8d,EAAOuB,aAY1BiN,EAAA0hE,SAASqB,GAA2BwE,EAAA3F,WAAWQ,eAC7CkO,sBAAsB,CACtBv+E,GAAI,OACJw+E,MAAO,GACP/M,MAAOn2B,EAAAV,SAAS,EAA0B,MAC1C/hD,KAAM,SACN0yD,WAAY,CACXkzB,aAAc,CACb5lF,KAAM,SACNM,QAAS,wEACTulF,oBAAqBpjC,EAAAV,SAAS,EAAS,OAExC+jC,sBAAuB,CACtB9lF,KAAM,UACNmjD,SAAS,EACT+2B,YAAaz3B,EAAAV,SAAS,EAAa,OAEpCgkC,0BAA2B,CAC1B/lF,KAAM,CAAC,OAAQ,UACfmjD,QAAS,KACT0iC,oBAAqBpjC,EAAAV,SAAS,EAAsB,OAErDikC,oBAAqB,CACpBhmF,KAAM,SACNimF,KAAM,CAAC,MAAO,KAAM,YACpBC,iBAAkB,CACjBzjC,EAAAV,SAAS,EAAmB,MAC5BU,EAAAV,SAAS,EAAkB,MAC3BU,EAAAV,SAAS,EAAwB,OAElCoB,QAAS,WACT+2B,YAAaz3B,EAAAV,SAAS,EAAgB,OAEvCokC,0BAA2B,CAC1BnmF,KAAM,UACNmjD,SAAS,EACT+2B,YAAaz3B,EAAAV,SAAS,EAAsB;kDC9EhD31D,EAAAg6F,eAAA,MAEC34F,YAA6BuxD,GAAAtxD,KAAAsxD,QAAAA,EAE7BvxD,OAAO2d,EAAcrG,GACpB,MAAM,IAAIvY,MAAM,kBAGjBiB,KAAK2d,EAAcswB,EAAiB9sC,GACnC,OAAQ8sC,GACP,IAAK,UAAW,OAAOhuC,KAAKsxD,QAAQ1I,QAAQ1nD,EAAK,GAAIwd,EAAAf,kBAAkBjJ,MACrE1b,KAAKkrB,OAASjN,IAAAA,EAAK2W,OAAAA,MACnB,MAAM1U,QAAe6tC,EAAA5tB,eAAevL,GACpC,MAAwB,CAAC,CAAE+pE,WAAY1gF,EAAI0gF,WAAYgB,QAAS1hF,EAAI0hF,SAAWz/E,KAGlF,MAAM,IAAIpa,MAAM,kBAIlB,MAAa85F,EAIZ74F,YAA6BmoD,GAAAloD,KAAAkoD,QAAAA,EAE7BnoD,cAAckQ,EAA0BlI,GACvC,OAAO6wF,EAAqBhwC,QAAQ5oD,KAAKkoD,QAASj4C,EAASlI,GAG5DhI,qBAAqBmoD,EAAmBj4C,EAA0BlI,GACjE,MAAOkP,EAAKiC,SAAgBgvC,EAAQjpD,KAAsB,UAAW,CAACgR,IACtE,MAAO,CAAEgH,IAAAA,EAAK2W,OAAQm5B,EAAA3tB,eAAelgB,KAZvCxa,EAAAk6F,qBAAAA,oHCfAl6F,EAAAm6F,cAAO30E,eAA6B40E,EAAuB7oF,EAAoB,IAC9E,MAAM8oF,EAAaC,EAAA59F,MAAS09F,GACtBG,EAAWhpF,EAAQipF,UAjB1B,SAA2BH;AAC1B,MAA4B,UAAxBA,EAAWxxC,SACP1sD,QAAQC,IAAIq+F,YAAct+F,QAAQC,IAAIs+F,YAAc,KACzB,WAAxBL,EAAWxxC,WACd1sD,QAAQC,IAAIu+F,aAAex+F,QAAQC,IAAIw+F,aAAez+F,QAAQC,IAAIq+F,YAAct+F,QAAQC,IAAIs+F,aAG7F,KAU8BG,CAAkBR,GAEvD,IAAKE,EACJ,OAAO,KAGR,MAAMO,EAAgBR,EAAA59F,MAAS69F,GAE/B,IAAK,YAAY9mE,KAAKqnE,EAAcjyC,UAAY,IAC/C,OAAO,KAGR,MAAMiZ,EAAO,CACZ5xB,KAAM4qD,EAAcC,UAAY,GAChC5qD,KAAM2qD,EAAc3qD,OAAoC,UAA3B2qD,EAAcjyC,SAAuB,MAAQ,MAC1EmyC,KAAMF,EAAcE,KACpBC,oBAAoBn7D,EAAAlC,UAAUrsB,EAAQ2pF,YAAa3pF,EAAQ2pF,WAG5D,MAA+B,UAAxBb,EAAWxxC,SACf,UAAK,IAAA/uD,QAAA,CAAA0hD,EAAAC,KAAA1W,EAAA,CAAa,oBAAkByW,EAAAC,MAAGqmB,GACvC,UAAK,IAAAhoE,QAAA,CAAAqhG,EAAAC,KAAAr2D,EAAA,CAAa,qBAAmBo2D,EAAAC,MAAGt5B,+GCzC/B9hE,EAAAq7F,cAAgB3vB,EAAA5pE,gBAA+B,oJCQ5D,MAAaw5F,EAKZj6F,YAAoBk6F,EAAwBlpF,GAAxB/Q,KAAAi6F,OAAAA,EAAwBj6F,KAAA+Q,QAAAA,EAHpC/Q,KAAAk6F,UAAoC,KACpCl6F,KAAAm6F,8BAA+C,KAIvDC;AAKC,OAJKp6F,KAAKk6F,YACTl6F,KAAKk6F,UAAYl6F,KAAKumD,YAGhBvmD,KAAKk6F,UAGbn6F,aACC,GAAIC,KAAKk6F,UACR,OAGD,MAAME,QAAiBp6F,KAAKulD,YAExBvlD,KAAKk6F,YAITl6F,KAAKk6F,UAAYE,GAGVr6F,WACP,IAGC,OAFAC,KAAKm6F,8BAAgC/hG,EAAGiD,aAAa2E,KAAKi6F,QAAQx/E,WAE3Dtf,KAAKC,MAAM4E,KAAKm6F,+BACtB,MAAOx+F,GAKR,MAJmB,WAAfA,EAAM5B,MACTiG,KAAK+Q,QAAQpV,GAGP,IAIDoE,kBACP,IAGC,OAFAC,KAAKm6F,qCAAuCj3C,EAAAlpD,SAASgG,KAAKi6F,SAASx/E,WAE5Dtf,KAAKC,MAAM4E,KAAKm6F,+BACtB,MAAOx+F,GAKR,MAJmB,WAAfA,EAAM5B,MACTiG,KAAK+Q,QAAQpV,GAGP,IAMToE,QAAWxB,EAAawgB,GACvB,MAAM9H,EAAMjX,KAAKo6F,SAAS77F,GAC1B,OAAIigC,EAAArC,kBAAkBllB,GACd8H,EAGD9H,EAGRlX,QAAQxB,EAAapE,GAGpB,GAAIqkC,EAAArC,kBAAkBhiC,GACrB,OAAO6F,KAAKonC,WAAW7oC,IAIJ,iBAATpE,GAAqC,iBAATA,GAAqC,kBAATA,GAC9D6F,KAAKo6F,SAAS77F,KAASpE,KAK5B6F,KAAKo6F,SAAS77F,GAAOpE,EACrB6F,KAAKq6F,YAGNt6F,WAAWxB,GAGLigC,EAAAtC,YAAYl8B,KAAKo6F,SAAS77F,MAC9ByB,KAAKo6F,SAAS77F,QAAO1E,EACrBmG,KAAKq6F,YAICt6F,WACP,MAAMu6F,EAAqBn/F,KAAKsD,UAAUuB,KAAKo6F,SAAU,KAAM;CAC/D,GAAIE,IAAuBt6F,KAAKm6F,8BAIhC,IACCj3C,EAAAlB,cAAchiD,KAAKi6F,OAAQK,GAC3Bt6F,KAAKm6F,8BAAgCG,EACpC,MAAO3+F,GACRqE,KAAK+Q,QAAQpV,KAzGhB+C,EAAAs7F,YAAAA,EA8GA,IAAaO,EAAb,MAAaA,EAQZx6F,YACsBw/D,EACRC,GAEbx/D,KAAKw6F,YAAc,IAAIR,EAAY7hG,EAAKwB,KAAK4lE,EAAmB/kE,aAAc+/F,EAAaE,YAAa9+F,GAAS6jE,EAAW7jE,MAAMA,IAGnIoE,OACC,OAAOC,KAAKw6F,YAAYE,OAKzB36F,QAAWxB,EAAawgB,GACvB,OAAO/e,KAAKw6F,YAAYG,QAAQp8F,EAAKwgB,GAGtChf,QAAQxB,EAAapE,GACpB6F,KAAKw6F,YAAYI,QAAQr8F,EAAKpE,GAG/B4F,WAAWxB,GACVyB,KAAKw6F,YAAYpzD,WAAW7oC,KA1BLg8F,EAAAE,WAAa,eAJzBF,EAAY1vB,EAAA,CAStBC,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAA+S,EAAA9H,cAVUwkB,GAAA77F,EAAA67F,aAAAA,yEChHb,IAAYM,mDAFCn8F,EAAAo8F,gBAAkB1wB,EAAA5pE,gBAAiC,kBAEhE,SAAYq6F,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,SAAA,GAAA,WAFD,CAAYA,EAAAn8F,EAAAm8F,sBAAAn8F,EAAAm8F,oBAAmB,KAoG/B,SAAkBE,GAKjBA,EAAAA,EAAA,OAAA,GAAA,SAKAA,EAAAA,EAAA,UAAA,GAAA,YAVD,CAAkBr8F,EAAAq8F,eAAAr8F,EAAAq8F,aAAY,KAkB9B,MAAaC,UAA+BriF,EAAAlE,WAA5C1U;AAIkBC,KAAAi7F,oBAAsBj7F,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACjD9X,KAAAk7F,mBAAqBl7F,KAAKi7F,oBAAoB5jF,MAEpCrX,KAAAm7F,iBAAmBn7F,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAChD9X,KAAAo7F,gBAAkBp7F,KAAKm7F,iBAAiB9jF,MAEzCrX,KAAAq7F,YAAmC,IAAIp7F,IACvCD,KAAAs7F,eAAsC,IAAIr7F,IAE1CF,SAASujF,GAChB,OAAY,IAALA,EAAgCtjF,KAAKq7F,YAAcr7F,KAAKs7F,eAIhEv7F,IAAIxB,EAAa+kF,EAAqBiY,GACrC,MAAM38F,EAAQoB,KAAKw7F,SAASlY,GAAOpjF,IAAI3B,GAEvC,OAAIigC,EAAArC,kBAAkBv9B,GACd28F,EAGD38F,EAIRmB,WAAWxB,EAAa+kF,EAAqBiY,GAC5C,MAAM38F,EAAQoB,KAAKw7F,SAASlY,GAAOpjF,IAAI3B,GAEvC,OAAIigC,EAAArC,kBAAkBv9B,GACd28F,EAGS,SAAV38F,EAIRmB,UAAUxB,EAAa+kF,EAAqBiY,GAC3C,MAAM38F,EAAQoB,KAAKw7F,SAASlY,GAAOpjF,IAAI3B,GAEvC,OAAIigC,EAAArC,kBAAkBv9B,GACd28F,EAGDhqE,SAAS3yB,EAAO,IAGxBmB,MAAMxB,EAAaK,EAAqD0kF,GAGvE,GAAI9kD,EAAArC,kBAAkBv9B,GACrB,OAAOoB,KAAKwb,OAAOjd,EAAK+kF,GAIzB,MAAMmY,EAAWr3F,OAAOxF,GAIxB,OADqBoB,KAAKw7F,SAASlY,GAAOpjF,IAAI3B,KACzBk9F,EACbjjG,QAAQyB,WAIhB+F,KAAKw7F,SAASlY,GAAOljF,IAAI7B,EAAKk9F,GAG9Bz7F,KAAKi7F,oBAAoBljF,KAAK,CAAEurE,MAAAA,EAAO/kF,IAAAA,IAEhC/F,QAAQyB,WAGhB8F,OAAOxB,EAAa+kF,GAEnB,OADmBtjF,KAAKw7F,SAASlY,GAAOhjF,OAAO/B,IAM/CyB,KAAKi7F,oBAAoBljF,KAAK,CAAEurE,MAAAA,EAAO/kF,IAAAA,IAEhC/F,QAAQyB,WANPzB,QAAQyB,UASjB8F,aACC27F,EAAW17F,KAAKq7F,YAAar7F,KAAKs7F,eAAgB,WAAY;CAG/Dv7F,cAAc47F,IAId57F,QACCC,KAAKm7F,iBAAiBpjF,KAAK,CAAE6jF,OAAQf,EAAoBgB,QAIpD33E,eAAew3E,EAAWr3E,EAA6BwuE,EAAgCiJ,EAAoBC,GACjH,MAAMC,EAAap9F,IAClB,IACC,OAAOzD,KAAKC,MAAMwD,GACjB,MAAOjD,GACR,OAAOiD,IAIHq9F,EAAc,IAAIh8F,IAClBi8F,EAAoB,IAAIj8F,IAC9BokB,EAAOhlB,QAAQ,CAACT,EAAOL,KACtB09F,EAAY77F,IAAI7B,EAAKK,GACrBs9F,EAAkB97F,IAAI7B,EAAKy9F,EAAUp9F,MAGtC,MAAMu9F,EAAiB,IAAIl8F,IACrBm8F,EAAuB,IAAIn8F,IACjC4yF,EAAUxzF,QAAQ,CAACT,EAAOL,KACzB49F,EAAe/7F,IAAI7B,EAAKK,GACxBw9F,EAAqBh8F,IAAI7B,EAAKy9F,EAAUp9F,MAGzChI,QAAQ06B,MAAM,0BAA0BwqE,MACxC,IAAIO,EAAiD,GACrDJ,EAAY58F,QAAQ,CAACT,EAAOL,KAC3B89F,EAAaplG,KAAK,CAAEsH,IAAAA,EAAKK,MAAAA,MAE1BhI,QAAQ0lG,MAAMD,GACdzlG,QAAQoqE,WAERpqE,QAAQie,IAAIqnF,GAEZtlG,QAAQ06B,MAAM,6BAA6ByqE,MAC3C,IAAIQ,EAAoD,GACxDJ,EAAe98F,QAAQ,CAACT,EAAOL,KAC9Bg+F,EAAgBtlG,KAAK,CAAEsH,IAAAA,EAAKK,MAAAA,MAE7BhI,QAAQ0lG,MAAMC,GACd3lG,QAAQoqE,WAERpqE,QAAQie,IAAIunF,GA7Ib19F,EAAAs8F,uBAAAA,EAoGAt8F,EAAAg9F,WAAAA,2ECvMA,IAAiBc,mDAAjB,SAAiBA,GACAA,EAAAx3F,QAAhB,SAAwBE,EAAegC,GACtC,OAAIhC,EAAEu3F,UAAYv1F,EAAEu1F,WACX,EACEv3F,EAAEu3F,UAAYv1F,EAAEu1F,UACnB,EAED,GAPT,CAAiBD,EAAA99F,EAAA89F,aAAA99F,EAAA89F,WAAU,KAW3B,MAA8BE,EAU7B38F,YAAY48F,EAAqCC,EAAaF,EAAmBG,qBAJzE78F,KAAA88F,cAAqB,EACrB98F,KAAAoZ,QAAwB,GACbpZ,KAAA+8F,aAAe,IAAIpkF,EAAAvD;AAGrCpV,KAAKg9F,kBAAoBL,EACzB38F,KAAKi9F,YAAcL,EAGnB,MAAMM,EAASC,EAAOh6F,aAAai6F,YAAatkG,GAAQkH,KAAKq9F,cAAcvkG,IAC3EkH,KAAK+8F,aAAa18F,IAAIsY,EAAAxD,aAAa+nF,IAGnCl9F,KAAKs9F,wBAGNv9F,UACCoC,aAAanC,KAAK88F,cAClB98F,KAAKu9F,eACLv9F,KAAK+8F,aAAajoF,UAGT/U,yBAIFA,cAAcjH,GAErB,IAAKA,EACJ,OAIGA,EAAI87D,QAAU97D,EAAI87D,OAAO9xD,QAC5BhK,EAAMA,EAAI87D,QAIX,IAAI6nC,EAAY/zF,MAAMC,QAAQ7P,EAAIgK,OAAShK,EAAIgK,MAAMnJ,KAAK,MAAQb,EAAIgK,MAClEwlB,EAAMxvB,EAAI+F,QAAU/F,EAAI+F,QAAUu8D,EAAAp8B,cAAclmC,GAG/C2jG,GAILz8F,KAAKw9F,SAAS,CAAEl1E,IAAAA,EAAKm0E,UAAAA,IAGZ18F,SAASnH,GAElB,MAAMqkB,EAAMm8D,EAAAjyE,aAAanH,KAAKoZ,QAASxgB,EAAG4jG,EAAWx3F,SACjDiY,EAAM,GACTrkB,EAAEuG,MAAQ,EACVa,KAAKoZ,QAAQthB,QAAQmlB,EAAK,EAAGrkB,KAExBoH,KAAKoZ,QAAQ6D,GAAK9d,QACtBa,KAAKoZ,QAAQ6D,GAAK9d,MAAQ,GAE3Ba,KAAKoZ,QAAQ6D,GAAK9d,OAAU,IAGF,IAAvBa,KAAK88F,eACR98F,KAAK88F,aAAe16F,WAAW,KAC9BpC,KAAKu9F,eACLv9F,KAAK88F,cAAgB,GACnB98F,KAAKi9F,cAIFl9F,eACP,IAAK,IAAIpE,KAASqE,KAAKoZ,QAEtBpZ,KAAKg9F,kBAAkBS,WAAqD,iBAAkB9hG,GAAO,GAEtGqE,KAAKoZ,QAAQ9iB,OAAS,GAjFxBoI,EAAA+2D,QAAAinC,EAEeA,EAAAG,oBAA8B;kDCpC7C,MAAqBa,UAAuBC,EAAAloC,QACjC11D,wBACT,IAAI69F,EACAn0C,EAAOzpD,KACoB,mBAApB0nB,EAAAb,QAAQg3E,UAClBD,EAAal2E,EAAAb,QAAQg3E,SAEtBn2E,EAAAb,QAAQg3E,QAAU,SAAUh/F,EAAiB+hF,EAAkBt8C,EAAcC,EAAiB3rC,GAC7F6wD,EAAKq0C,iBAAiBj/F,EAAS+hF,EAAUt8C,EAAMC,EAAQ3rC,GACnDglG,GACHA,EAAWr8F,MAAMvB,KAAM2L,YAGzB3L,KAAK+8F,aAAa18F,IAAIsY,EAAAxD,aAAa,KAC9ByoF,IACHl2E,EAAAb,QAAQg3E,QAAUD,MAKb79F,iBAAiBuoB,EAAa/vB,EAAc+rC,EAAcC,EAAiBzrC,GAClF,IAAIqB,EAAmB,CACtBsiG,UAAWn0E,EACXA,IAAAA,EACA/vB,KAAAA,EACA+rC,KAAAA,EACAC,OAAAA,GAGD,GAAIzrC,EAAK,CACR,IAAI9B,KAAEA,EAAI6H,QAAEA,EAAOiE,MAAEA,GAAUhK,EAC/BqB,EAAK4jG,oBAAsB/mG,EACvB6H,IACH1E,EAAK6jG,mBAAqBn/F,GAEvBiE,IACH3I,EAAKsiG,UAAY/zF,MAAMC,QAAQ7P,EAAIgK,OAChChK,EAAIgK,MAAQhK,EAAIgK,MAAMnJ,KAAK,MAC3Bb,EAAIgK,OAIT9C,KAAKw9F,SAASrjG,IA1ChBuE,EAAA+2D,QAAAioC,4GCDah/F,EAAAu/F,kBAAoB7zB,EAAA5pE,gBAAmC,oBAmCvD9B,EAAAw/F,mBAAqB,uBACrBx/F,EAAAy/F,6BAA+B,+BAC/Bz/F,EAAA0/F,2BAA6B,6BAC7B1/F,EAAA2/F,0BAA4B;4IC8BzC,IAAKC,EAmBAC,EAJL,SAASC,KAAiBrxD,GACzB,OAAO/oC,OAAO+oC,EAAMjjC,OAAO,CAACC,EAAGs0F,IAAMt0F,EAAIs0F,EAAG,qDAhB7C,SAAKH,GACJA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,yBAAA,IAAA,2BACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,2BAAA,IAAA,6BACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,yBAAA,KAAA,2BACAA,EAAAA,EAAA,YAAA,MAAA,cAZD,CAAKA,IAAAA,EAAK,KAmBV,SAAKC,GACJA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,SAAA,GAAA;AACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,iBAAA,IAAA,mBARD,CAAKA,IAAAA,EAAU,KAWf,MAAMG,EAAY,CACjBC,KAAM,gDACNC,QAAS,kDACTC,UAAW,oDACXC,SAAU,uCACVC,KAAM,8CACNC,QAAS,kDACTC,WAAY,gDAGPC,EAAe,CACpBC,WAAY,oDACZC,cAAe,4CACfC,OAAQ,qCACRC,mBAAoB,kDAoBfC,EAAiC,CACtCC,WAAY,EACZC,SAduB,GAevBC,OAAM,EACNC,UAAS,EACTxyD,MAAOmxD,EAAM5pF,KACbkrF,SAAU,GACVC,WAAY,IAGb,MAAMC,EAEL//F,YAAoB2sB,EAAQ6yE,GAARv/F,KAAA0sB,MAAAA,EAEpB8yE,iBAA2B,OAAOx/F,KAAK0sB,MAAM8yE,WAC7CC,eAAyB,OAAOz/F,KAAK0sB,MAAM+yE,SAC3CC,aAAuB,OAAO1/F,KAAK0sB,MAAMgzE,OACzCC,gBAA0B,OAAO3/F,KAAK0sB,MAAMizE;AAC5CxyD,YAAsB,OAAOntC,KAAK0sB,MAAMygB,MAExCptC,SAASy/F,EAAoBC,EAAmBz/F,KAAK0sB,MAAM+yE,UAC1D,OAAO,IAAIK,EAAM1kC,EAAA1+C,OAAO,GAAI1c,KAAK0sB,MAAO,CAAE8yE,WAAAA,EAAYC,SAAAA,KAGvD1/F,WAAWggG,KAA2BziG,GACrC,MAAMsiG,EAAW,IACb5/F,KAAK0sB,MAAMkzE,YACXtiG,EAAO7D,IAAImF,IAAS,CAAGmhG,WAAAA,EAAYnhG,MAAAA,MAGvC,OAAO,IAAIkhG,EAAM1kC,EAAA1+C,OAAO,GAAI1c,KAAK0sB,MAAO,CAAEkzE,SAAAA,KAG3C7/F,WAAW2/F,GACV,OAAO,IAAII,EAAM1kC,EAAA1+C,OAAO,GAAI1c,KAAK0sB,MAAO,CAAEgzE,OAAAA,KAG3C3/F,cAAc4/F,GACb,OAAO,IAAIG,EAAM1kC,EAAA1+C,OAAO,GAAI1c,KAAK0sB,MAAO,CAAEizE,UAAAA,KAG3C5/F,aAAaotC,GACZ,OAAO,IAAI2yD,EAAM1kC,EAAA1+C,OAAO,GAAI1c,KAAK0sB,MAAO,CAAEygB,MAAOA,EAAMjjC,OAAO,CAACC,EAAGs0F,IAAMt0F,EAAIs0F,EAAG,MAGhF1+F,kBAAkB8/F,GACjB,OAAO,IAAIC,EAAM1kC,EAAA1+C,OAAO,GAAI1c,KAAK0sB,MAAO,CAAEmzE,WAAAA,KAG3Cx7C,UACC,MAAMu7C,SAAEA,EAAQJ,WAAEA,EAAUC,SAAEA,EAAQC,OAAEA,EAAMC,UAAEA,EAASxyD,MAAEA,EAAK0yD,WAAEA,GAAe7/F,KAAK0sB,MAEtF,MAAO,CAAEszE,QADO,CAAC,CAAEJ,SAAAA,EAAUJ,WAAAA,EAAYC,SAAAA,EAAUC,OAAAA,EAAQC,UAAAA,IACzCE,WAAAA,EAAY1yD,MAAAA,GAG/B8yD,iBACC,MAAMC,EAAYlgG,KAAK0sB,MAAMkzE,SAASv3F,OAAO63F,GAAaA,EAAUH,aAAexB,EAAW4B,YAAY,GAC1G,OAAOD,GAAaA,EAAUthG,MAAQshG,EAAUthG,MAAQ,IAI1D,SAASwhG,EAAaC,EAA8CrpG,GACnE,MAAMb,GAAUkqG,GAAc,IAAIh4F,OAAOouB,GAAKA,EAAE6pE,gBAAkBtpG,GAAM,GACxE,OAAOb,EAASA,EAAOyI,MAAQ,EAGhC,SAAS2hG,EAAyBzgC;AAGjC,OADeA,EAAQxmE,MAAM+O,OAAOo2F,GAAyD,IAApDA,EAAE+B,UAAU7+F,QADlB,6CAErBuI,OAA2C,CAAC/T,EAAQoC,KACjE,MAAMkoG,EAAQC,EAAgB5gC,EAASvnE,EAAKioG,WAI5C,OAHIC,GACHtqG,EAAOc,KAAK,CAACsB,EAAKioG,UAAU9kG,UALK,2CAKgCpF,QAASmqG,IAEpEtqG,GACL,IAGJ,SAASwqG,EAAmB7gC,GAC3B,GAAIA,EAAQkF,WAAY,CACvB,MAAM7jD,EAAU2+C,EAAQkF,WAAW38D,OAAO5D,GAAKA,EAAElG,MAAQmgG,EAAUO,YAC7D2B,EAAY,IAAInuE,OAAO,kEAEvBkQ,EAAMxhB,EAAQ9Y,OAAO8B,GAAKy2F,EAAUzuE,KAAKhoB,EAAEvL,QAAQ,GACzD,OAAO+jC,EAAM,CAAEA,IAAKA,EAAI/jC,MAAOiiG,YAAal+D,EAAI/jC,OAAU,KAE3D,OAAO8hG,EAAgB5gC,EAAS4+B,EAAUO,YAG3C,SAAS6B,EAAiBhhC,GACzB,MAAO,CACNn9B,IAAK,GAAGm9B,EAAQihC,oBAAoBrC,EAAUK,qBAC9C8B,YAAa,GAAG/gC,EAAQihC,oBAAoBrC,EAAUK,QAIxD,SAASiC,EAAalhC,GACrB,MAAM2gC,EAAQC,EAAgB5gC,EAAS4+B,EAAUC,MACjD,GAAI8B,EACH,OAAOA,EAER,MAAM99D,EAAMc,EAAQJ,MAAM,2BAC1B,MAAO,CAAEV,IAAAA,EAAKk+D,YAAal+D,GAG5B,SAAS+9D,EAAgB5gC,EAAsCxtD,GAE9D,OADewtD,EAAQxmE,MAAM+O,OAAOo2F,GAAKA,EAAE+B,YAAcluF,GAAM,GAC/C,CAAEqwB,IAAK,GAAGm9B,EAAQmhC,YAAY3uF,IAAQuuF,YAAa,GAAG/gC,EAAQihC,oBAAoBzuF,KAAW,KAG9G,SAAS4uF,EAAcphC,EAAsCp+D,GAC5D,MAAMpE,EAASwiE,EAAQkF,WAAalF,EAAQkF,WAAW38D,OAAO5D,GAAKA,EAAElG,MAAQmD,GAAY,GACnF9C,EAAQtB,EAAOhH,OAAS,GAAKgH,EAAO,GAAGsB;CAC7C,OAAOA,EAAQA,EAAMuF,MAAM,KAAK1K,IAAIoG,GAAKooF,EAAAjkB,0BAA0BnkE,IAAM,GAG1E,SAASshG,EAAUrhC,GAClB,MAAMxiE,EAASwiE,EAAQkF,WAAalF,EAAQkF,WAAW38D,OAAO5D,GAAKA,EAAElG,MAAQ2gG,EAAaG,QAAU,GACpG,OAAQ/hG,EAAOhH,OAAS,GAAKgH,EAAO,GAAGsB,OAAU,GAGlD,SAASwiG,EAAsBthC,GAC9B,MAAMxiE,EAASwiE,EAAQkF,WAAalF,EAAQkF,WAAW38D,OAAO5D,GAAKA,EAAElG,MAAQ2gG,EAAaI,oBAAsB,GAC1G1gG,EAAStB,EAAOhH,OAAS,GAAKgH,EAAO,GAAGsB,OAAU,GACxD,OAAOA,EAAQA,EAAMuF,MAAM,KAAO,GAOnC,SAASk9F,EAAYC,EAAwCxhC,EAAsCtkE,EAAem7B,EAAc4qE,GAC/H,MAAMC,EAAkC,CACvCpkC,SAAUsjC,EAAgB5gC,EAAS4+B,EAAUI,UAC7C2C,OAAQf,EAAgB5gC,EAAS4+B,EAAUE,SAC3C8C,UAAWhB,EAAgB5gC,EAAS4+B,EAAUG,WAC9C8C,QAASjB,EAAgB5gC,EAAS4+B,EAAUM,SAC5C4C,WAAYjB,EAAmB7gC,GAC/B+hC,SAAUf,EAAiBhhC,GAC3BgiC,KAAMd,EAAalhC,GACnBiiC,iBAAkBxB,EAAyBzgC,IAG5C,MAAO,CACND,WAAY,CACXpmD,GAAIwuE,EAAA/jB,sBAAsBo9B,EAAiBn9B,UAAUQ,cAAe28B,EAAiBU,eACrF5kD,KAAMkkD,EAAiBW,aAExBjrG,KAAMsqG,EAAiBU,cACvBliC,QAASA,EAAQA,QACjBpmC,KAAMomC,EAAQoiC,YACdC,YAAab,EAAiBa,YAC9Bz9B,YAAa48B,EAAiBn9B,UAAUO,YACxCP,UAAWm9B,EAAiBn9B,UAAUQ,cACtCC,qBAAsB08B,EAAiBn9B,UAAUg+B,YACjD3V,YAAa8U,EAAiBc,kBAAoB,GAClDC,aAAcjC,EAAakB,EAAiBjB,WAAY,WACxDiC,OAAQlC,EAAakB,EAAiBjB,WAAY,iBAClDkC,YAAanC,EAAakB,EAAiBjB,WAAY,eACvDmB,OAAAA,EACAx8B,WAAY;AACXH,aAAcq8B,EAAcphC,EAASo/B,EAAaC,YAClDqD,cAAetB,EAAcphC,EAASo/B,EAAaE,eACnDn8B,OAAQk+B,EAAUrhC,GAClB2iC,mBAAoBrB,EAAsBthC,IAS3CmF,cAAe,CACdzpE,OAASm7B,EAAM6oE,WAAa,GAAK7oE,EAAM8oE,SAAYjkG,EACnDykG,WAAYtpE,EAAMspE,WAClBsB,YAAAA,GAEDmB,SAnDoBv1D,EAmDEm0D,EAAiBn0D,OAlDH,IAA9BA,EAAMxrC,QAAQ,aADtB,IAAsBwrC,EA4DtB,IAAaw1D,EAAb,MASC5iG,YACmC6iG,EACJpjC,EACQD,EACFo9B,EACLntB,EACGqzB,EACUC,GANV9iG,KAAA4iG,eAAAA,EACJ5iG,KAAAw/D,WAAAA,EACQx/D,KAAAu/D,mBAAAA,EACFv/D,KAAA28F,iBAAAA,EACL38F,KAAAwvE,YAAAA,EACGxvE,KAAA6iG,eAAAA,EACU7iG,KAAA8iG,eAAAA,EAE5C,MAAMvnG,EAASsnG,EAAeE,kBAC9B/iG,KAAKgjG,qBAAuBznG,GAAUA,EAAO0nG,WAC7CjjG,KAAKkjG,qBAAuB3nG,GAAUA,EAAO4nG,WAC7CnjG,KAAKojG,qBAAuBC,EAA0BR,EAAe/iC,QAAS9/D,KAAKu/D,mBAAoBv/D,KAAKwvE,YAAaxvE,KAAK8iG,gBAGvH/iG,IAAI5H,EAAO,IAClB,MAAO,GAAG6H,KAAKgjG,uBAAuB7qG,IAGvC4H,YACC,QAASC,KAAKgjG,qBAGfjjG,uBAAuB0pC,EAAgDq2B,GACtE,MAAM5C,EAAsCmrB,EAAAhlB,uBAAuB55B,GAAQ,KAAOA,EAClF,GAAIyzB,GAAaA,EAAU8H,WAAW/B,QAAUqgC,EAAAtgC,cAAc9F,EAAU8H,WAAW/B,OAAQjjE,KAAK6iG,eAAe/iC,SAC9G,OAAOtnE,QAAQyB,QAAQijE,GAExB,MAAMzjD,GAAEA,EAAE2jC,KAAEA,GAAS8f,EAAYA,EAAU2C,WAAmCp2B;CAC9E,IAAI9S,GAAQ,IAAImpE,GACdyD,UAAUjF,EAAMkF,gBAAiBlF,EAAMmF,kBAAmBnF,EAAMoF,aAAcpF,EAAMqF,yBAA0BrF,EAAMsF,qBACpHC,SAAS,EAAG,GACZC,WAAWvF,EAAWwF,OAAQ,+BAC9BD,WAAWvF,EAAWyF,iBAAkBxF,EAAcF,EAAM2F,cAQ9D,OALCttE,EADGymB,EACKzmB,EAAMmtE,WAAWvF,EAAW2F,YAAa9mD,GAEzCzmB,EAAMmtE,WAAWvF,EAAW4F,cAAe1qF,GAG7CzZ,KAAKokG,aAAaztE,EAAOjY,EAAAf,kBAAkBjJ,MAChD1b,KAAK,EAAGqrG,kBAAAA,MACR,MAAOC,GAAgBD,EACvB,IAAKC,IAAiBA,EAAar/E,SAAS3uB,OAC3C,OAAO,KAER,GAAIwpE,EAAS,CACZ,MAAMykC,EAAeD,EAAar/E,SAAS5c,OAAOxI,GAAKA,EAAEigE,UAAYA,GAAS,GAC9E,GAAIykC,EAAc,CACjB,MAAMrnC,EAAYmkC,EAAYiD,EAAcC,EAAc,EAAG5tE,GAC7D,GAAIumC,EAAU8H,WAAW/B,QAAUqgC,EAAAtgC,cAAc9F,EAAU8H,WAAW/B,OAAQjjE,KAAK6iG,eAAe/iC,SACjG,OAAO5C,EAGT,OAAO,KAER,OAAOl9D,KAAKwkG,6BAA6BF,EAAcA,EAAar/E,UAClEjsB,KAAKyrG,GACDA,EACIpD,EAAYiD,EAAcG,EAAY,EAAG9tE,GAE1C,QAOZ52B,MAAM0pC,EAAW2B,GAChB,MAAMn7B,EAAyByO,EAAAf,kBAAkBC,oBAAoB6rB,GAAQ,GAAKA,EAC5E1hC,EAA2B2W,EAAAf,kBAAkBC,oBAAoB6rB,GAAQA,EAAO2B,EAEtF,IAAKprC,KAAK0kG,YACT,OAAOlsG,QAAQ0B,OAAO,IAAI4E,MAAM,6CAGjC,MAAMwT,EAAOrC,EAAQ00F,MAAQ,MAAS10F,EAAQpC,KAAO,OAAS,MAC9D,IAAIA,EAAOoC,EAAQpC,MAAQ;CAC3B,MAAM4xF,EAAWrkC,EAAAn8B,aAAahvB,EAASjI,GAAKA,EAAEy3F,SAAU,IAUxDz/F,KAAK28F,iBAAiBc,WAAwE,uBAAwB,CAAEnrF,KAAAA,EAAMzE,KAAAA,IAE9H,IAAI8oB,GAAQ,IAAImpE,GACdyD,UAAUjF,EAAMsG,yBAA0BtG,EAAMkF,gBAAiBlF,EAAMmF,kBAAmBnF,EAAMoF,aAAcpF,EAAMqF,0BACpHE,SAAS,EAAGpE,GACZqE,WAAWvF,EAAWwF,OAAQ,+BAC9BD,WAAWvF,EAAWyF,iBAAkBxF,EAAcF,EAAM2F,cAuC9D,OArCIp2F,IAaHA,GALAA,GANAA,EAAOA,EAAKrP,QAAQ,8CAA+C,CAACya,EAAG4rF,EAAgBC,KACtFnuE,EAAQA,EAAMmtE,WAAWvF,EAAWwG,SAAUD,GAAYD,GACnD,MAIIrmG,QAAQ,yCAA0C,CAACya,EAAG+rF,EAAWC,KAC5EtuE,EAAQA,EAAMmtE,WAAWvF,EAAW2G,IAAKD,GAAOD,GACzC,MAGI32E,UAGXxgB,EAAOA,EAAKvX,OAAS,IAAMuX,EAAOA,EAAKnS,UAAU,EAAG,KACpDi7B,EAAQA,EAAMmtE,WAAWvF,EAAW4B,WAAYtyF,IAGjD8oB,EAAQA,EAAMwuE,WAAU,IAExBxuE,EADU1mB,EAAQm1F,IACVzuE,EAAMmtE,WAAWvF,EAAW2F,eAAgBj0F,EAAQm1F,KAClDn1F,EAAQ00F,MACVhuE,EAAMmtE,WAAWvF,EAAW4F,iBAAkBl0F,EAAQ00F,OAEtDhuE,EAAMwuE,WAAU,GAGK,iBAAnBl1F,EAAQyvF,SAClB/oE,EAAQA,EAAMwuE,WAAWl1F,EAAQyvF,SAGD,iBAAtBzvF,EAAQ0vF,YAClBhpE,EAAQA,EAAM0uE,cAAcp1F,EAAQ0vF,YAG9B3/F,KAAKokG,aAAaztE,EAAO5uB,GAAO/O,KAAK,EAAGqrG,kBAAAA,EAAmBiB,MAAAA,MAajE,MAAO;AAAEC,UAZUlB,EAAkB5qG,IAAI,CAACb,EAAG4C,IAAU6lG,EAAYzoG,EAAGA,EAAEqsB,SAAS,GAAIzpB,EAAOm7B,EAAO1mB,EAAQwO,SAY3E6mF,MAAAA,EAAO7F,SAXtB9oE,EAAM8oE,SAW0B+F,QAVjC,CAACC,EAAmBC,KACnC,GAAIA,EAAGx9F,wBACN,OAAO1P,QAAQ0B,OAAOiO,EAAAvE,YAGvB,MAAM+hG,EAAgBhvE,EAAMktE,SAAS4B,EAAY,GACjD,OAAOzlG,KAAKokG,aAAauB,EAAeD,GACtC1sG,KAAK,EAAGqrG,kBAAAA,KAAwBA,EAAkB5qG,IAAI,CAACb,EAAG4C,IAAU6lG,EAAYzoG,EAAGA,EAAEqsB,SAAS,GAAIzpB,EAAOmqG,EAAe11F,EAAQwO,cAO7H1e,aAAa42B,EAAc5uB,GAClC,OAAK/H,KAAK0kG,YAGH1kG,KAAKojG,qBAAqBpqG,KAAK4sG,IACrC,MAAMzrG,EAAOgB,KAAKsD,UAAUk4B,EAAM0tB,KAC5Bs0C,EAAUv9B,EAAA1+C,OAAO,GAAIkpF,EAAe,CACzCC,eAAgB,mBAChBC,OAAU,6CACVC,kBAAmB,OACnBC,iBAAkB7rG,EAAK7D,SAGxB,OAAO0J,KAAK4iG,eAAeh6C,QAAQ,CAClCt2C,KAAM,OACN2zF,IAAKjmG,KAAKkmG,IAAI,mBACd/rG,KAAAA,EACAw+F,QAAAA,GACE5wF,GAAO/O,KAAK0kB,GAEVA,EAAQzG,IAAI0gF,YAAcj6E,EAAQzG,IAAI0gF,YAAc,KAAOj6E,EAAQzG,IAAI0gF,WAAa,IAChF,CAAE0M,kBAAmB,GAAIiB,MAAO,GAGjCa,EAAApO,OAA+Br6E,GAAS1kB,KAAK7C,IACnD,GAAIA,EAAQ,CACX,MAAMgU,EAAIhU,EAAOgrB,QAAQ,GACnBkjF,EAAoBl6F,EAAEo0D,WACtB6nC,EAAcj8F,EAAEk8F,gBAAkBl8F,EAAEk8F,eAAeh+F,OAAO9B,GAAwB,gBAAnBA,EAAE+/F,cAAgC,GAGvG,MAAO,CAAEjC,kBAAAA,EAAmBiB,MAFdc,GAAeA,EAAYG,cAAcl+F,OAAOjS,GAAgB,eAAXA,EAAEY,MAAuB,GAAGmI,OAAS,GAIzG,MAAO;AAAEklG,kBAAmB,GAAIiB,MAAO,QA/BlC9sG,QAAQ0B,OAAO,IAAI4E,MAAM,6CAqClCiB,gBAAgBokE,EAAmBntE,EAAc8oE,EAAiBxtD,GACjE,OAAKtS,KAAK0kG,YAIH1kG,KAAKojG,qBAAqBpqG,KAAK4sG,IACrC,MAAMjN,EAAOh7F,OAAA+e,OAAA/e,OAAA+e,OAAA,GAAQkpF,GAAa,CAAEE,OAAQ,kCAE5C,OAAO9lG,KAAK4iG,eAAeh6C,QAAQ,CAClCt2C,KAAM,OACN2zF,IAAKjmG,KAAKkmG,IAAI,eAAe/hC,gBAAwBntE,KAAQ8oE,oBAA0BxtD,KACvFqmF,QAAAA,GACEj6E,EAAAf,kBAAkBjJ,MAAM1b,UAAKa,EAAW,SAAMA,KAV1CrB,QAAQyB,aAAQJ,GAczBkG,SAASm9D,EAA8BvkE,EAAeo1E,GACrD/tE,KAAKw/D,WAAW2V,MAAM,mCAAoCjY,EAAU2C,WAAWpmD,IAC/E,MAAMskD,EAAMzqB,EAAA3C,SAASh4C,EAAUslD,EAAAjH,gBACzB78C,EAAO8tF,EAAAljB,iCAAiC7H,GACxCspC,GAAY,IAAItvG,MAAO8hB,UASvBnE,EAAO4xF,GAAqBzmG,KAAK28F,iBAAiB+J,UAAU,8BAA+BtrC,EAAA1+C,OAAOviB,EAAM,CAAEssG,SAAAA,KAE1GE,EAA0B,IAAT54B,EAAyC,UAAqB,IAATA,EAAwC,SAAW,GACzH64B,EAAgBD,EAAiB,CACtChkE,IAAK,GAAGu6B,EAAUskC,OAAOK,SAASl/D,OAAOgkE,SACzC9F,YAAa,GAAG3jC,EAAUskC,OAAOK,SAAShB,eAAe8F,UACtDzpC,EAAUskC,OAAOK;CAErB,OAAO7hG,KAAK6mG,SAASD,GACnB5tG,KAAK0kB,GAAW1d,KAAKwvE,YAAYp1E,UAAU2jE,EAAKrgD,EAAQkQ,SACxD50B,KAAK,IAAM6b,GAAI,IAAI3d,MAAO8hB,UAAYwtF,IACtCxtG,KAAK,IAAM+kE,GAGdh+D,UAAUm9D,EAA8Bn1D,GACvC,OAAIm1D,EAAUskC,OAAOC,OACbzhG,KAAK6mG,SAAS3pC,EAAUskC,OAAOC,OAAQ,GAAI15F,GAChD/O,KAAK0kB,GAAWyoF,EAAArO,OAAOp6E,IACvB1kB,KAAKqB,GAAWA,GAAW,IAEvB7B,QAAQyB,QAAQ,IAGxB8F,YAAYm9D,EAA8Bn1D,GACzC,OAAIm1D,EAAUskC,OAAOpkC,SACbp9D,KAAK6mG,SAAS3pC,EAAUskC,OAAOpkC,SAAU,GAAIr1D,GAClD/O,KAAKmtG,EAAArO,QACL9+F,KAAK6U,GAAQA,EAAO1S,KAAKC,MAAMyS,GAAQ,MAEnCrV,QAAQyB,QAAQ,MAGxB8F,mBAAmBm9D,EAA8BuY,GAChD,MAAMgrB,EAAQvjC,EAAUskC,OAAOO,iBAAiB15F,OAAO4B,GAAKA,EAAE,KAAOwrE,EAAWx+C,eAAe,GAC/F,OAAIwpE,EACIzgG,KAAK6mG,SAASpG,EAAM,IACzBznG,KAAKmtG,EAAArO,QACL9+F,KAAK6U,GAAQA,EAAO1S,KAAKC,MAAMyS,GAAQ,MAEnCrV,QAAQyB,QAAQ,MAGxB8F,aAAam9D,EAA8Bn1D,GAC1C,OAAIm1D,EAAUskC,OAAOE,UACb1hG,KAAK6mG,SAAS3pC,EAAUskC,OAAOE,UAAW,GAAI35F,GACnD/O,KAAK0kB,GAAWyoF,EAAArO,OAAOp6E,IACvB1kB,KAAKqB,GAAWA,GAAW,IAEvB7B,QAAQyB,QAAQ,IAGxB8F,eAAem9D,EAA8B4pC,GAC5C,IAAInwE,GAAQ,IAAImpE,GACdyD,UAAUjF,EAAMyI,gBAAiBzI,EAAMoF,aAAcpF,EAAMqF,yBAA0BrF,EAAMsF,qBAC3FC,SAAS,EAAG,GACZC,WAAWvF,EAAWwF,OAAQ,+BAC9BD,WAAWvF,EAAWyF,iBAAkBxF,EAAcF,EAAM2F;CAQ9D,OALCttE,EADGumC,EAAU2C,WAAWziB,KAChBzmB,EAAMmtE,WAAWvF,EAAW2F,YAAahnC,EAAU2C,WAAWziB,MAE9DzmB,EAAMmtE,WAAWvF,EAAW4F,cAAejnC,EAAU2C,WAAWpmD,IAGlEzZ,KAAKokG,aAAaztE,EAAOjY,EAAAf,kBAAkBjJ,MAAM1b,KAAK,EAAGqrG,kBAAAA,KAC3DA,EAAkB/tG,OACjBwwG,EACItuG,QAAQgB,IAAI6qG,EAAkB,GAAGp/E,SAASxrB,IAAIoG,GAAKG,KAAKmhG,UAAUthG,GAAG7G,KAAKiqE,GAAUqgC,EAAAtgC,cAAcC,EAAQjjE,KAAK6iG,eAAe/iC,SAAWjgE,EAAI,QAClJ7G,KAAKisB,GAAYA,EAChB5c,OAAOxI,KAAOA,GACdpG,IAAIoG,IAAK,CAAGigE,QAASjgE,EAAGigE,QAASpmC,KAAM75B,EAAGqiG,gBAEtCmC,EAAkB,GAAGp/E,SAASxrB,IAAIoG,IAAK,CAAGigE,QAASjgE,EAAEigE,QAASpmC,KAAM75B,EAAEqiG,eAGxE,IAIDniG,SAAS0gG,EAA+BxwF,EAA2B,GAAIlI,EAA2B2W,EAAAf,kBAAkBjJ,MAC3H,OAAO1U,KAAKojG,qBAAqBpqG,KAAK4sG,IACrC,MACMjN,EAAUv9B,EAAA1+C,OAAO,GAAIkpF,EAAe31F,EAAQ0oF,SAAW,IAC7D1oF,EAAUmrD,EAAA1+C,OAAO,GAAIzM,EAFD,CAAEqC,KAAM,OAEe,CAAEqmF,QAAAA,IAE7C,MAAMsN,EAAMxF,EAAM99D,IACZqkE,EAAcvG,EAAMI,YACpBoG,EAAe7rC,EAAA1+C,OAAO,GAAIzM,EAAS,CAAEg2F,IAAAA,IAE3C,OAAOjmG,KAAK4iG,eAAeh6C,QAAQq+C,EAAcl/F,GAC/C/O,KAAK0kB,GAC0B,MAA3BA,EAAQzG,IAAI0gF,WACRn/F,QAAQyB,QAAQyjB,GAGjByoF,EAAArO,OAAOp6E,GACZ1kB,KAAK6F,GAAWrG,QAAQ0B,OAAO,IAAI4E,MAAM,0BAA0B4e,EAAQzG,IAAI0gF,0BAA0B94F,QAE3G7F,UAAKa,EAAWf,IAChB,GAAIqP,EAAA7E,uBAAuBxK,GAC1B,OAAON,QAAQ0B,OAAOpB,GAGvB,MAAM+F,EAAUsJ,EAAAjE,gBAAgBpL;CAShCkH,KAAK28F,iBAAiBc,WAAoF,6BAA8B,CAAEwI,IAAAA,EAAKpnG,QAAAA,IAE/I,MAAMqoG,EAAkB9rC,EAAA1+C,OAAO,GAAIzM,EAAS,CAAEg2F,IAAKe,IACnD,OAAOhnG,KAAK4iG,eAAeh6C,QAAQs+C,EAAiBn/F,OAKhDhI,6BAA6Bm9D,EAAiCj4C,GACrE,MAAM66C,EAAU9/D,KAAKmnG,2CAA2CjqC,EAAWj4C,GAC3E,OAAI66C,GAGG9/D,KAAKonG,wCAAwClqC,EAAWj4C,GAGxDllB,2CAA2Cm9D,EAAiCj4C,GACnF,IAAK,MAAM66C,KAAW76C,EAAU,CAC/B,MAAMg+C,EAASk+B,EAAUrhC,GACzB,IAAKmD,EACJ,OAAO,KAER,GAAIqgC,EAAAtgC,cAAcC,EAAQjjE,KAAK6iG,eAAe/iC,SAC7C,OAAOtnE,QAAQyB,QAAQ6lE,GAGzB,OAAO,KAGA//D,UAAU+/D,GACjB,MAAMmD,EAASk+B,EAAUrhC,GACzB,GAAImD,EACH,OAAOzqE,QAAQyB,QAAQgpE,GAGxB,MAAM7F,EAAWsjC,EAAgB5gC,EAAS4+B,EAAUI,UACpD,IAAK1hC,EACJ,OAAO5kE,QAAQ0B,OAAO,0BAIvB,OAAO8F,KAAK6mG,SAASzpC,EAAU,CAAEu7B,QADjB,CAAEoN,kBAAmB,UAEnC/sG,KAAK0kB,GAAWyoF,EAAApO,OAA2Br6E,IAC3C1kB,KAAKokE,GAAYA,EAAWA,EAAS2F,QAAQv1B,OAASh1C,QAAQ0B,OAAe,iCAGxE6F,wCAAwCm9D,EAAiCj4C,GAChF,IAAKA,EAAS3uB,OACb,OAAOkC,QAAQyB,QAAQ,MAGxB,MAAM6lE,EAAU76C,EAAS,GACzB,OAAOjlB,KAAKmhG,UAAUrhC,GACpB9mE,KAAKiqE,GACAqgC,EAAAtgC,cAAcC,EAAQjjE,KAAK6iG,eAAe/iC,UAI/CA,EAAQkF,WAAalF,EAAQkF,YAAc,GAC3ClF,EAAQkF,WAAW/tE,KAAK;AAAEsH,IAAK2gG,EAAaG,OAAQzgG,MAAOqkE,IACpDnD,GALC9/D,KAAKonG,wCAAwClqC,EAAWj4C,EAASjtB,MAAM,KASlF+H,sBACC,OAAKC,KAAK0kG,YAIL1kG,KAAKkjG,qBAIHljG,KAAK4iG,eAAeh6C,QAAQ,CAAEt2C,KAAM,MAAO2zF,IAAKjmG,KAAKkjG,sBAAwBxkF,EAAAf,kBAAkBjJ,MAAM1b,KAAK0kB,GACjF,MAA3BA,EAAQzG,IAAI0gF,WACRn/F,QAAQ0B,OAAO,IAAI4E,MAAM,qCAG1BqnG,EAAApO,OAA6Br6E,GAAS1kB,KAAK7C,IACjD,MAAMsD,EAAM,IAAIwG,IAEhB,GAAI9J,EACH,IAAK,MAAMsjB,KAAMtjB,EAAOmvE,UAAW,CAClC,MAAMj8C,EAAM5vB,EAAIyG,IAAIuZ,IAAO,CAAEA,GAAI,CAAEA,GAAAA,GAAM6rD,WAAW,EAAM+hC,MAAM,GAChEh+E,EAAIi8C,WAAY,EAChB7rE,EAAI2G,IAAIqZ,EAAI4P,GAId,OAAO7wB,QAAQyB,QAAQovC,EAAA/rC,OAAO7D,OAnBxBjB,QAAQyB,QAAQ,IAJhBzB,QAAQ0B,OAAO,IAAI4E,MAAM,+CA6B5BolB,eAAem/E,EAA0BvjC,EAAiBP,EAAyCiQ,EAA2BszB,GACpI,MAAMnK,EAAoB,CACzB2O,qBAAsB,UAAUxnC,IAChCynC,aAAc,UAAUznC,KAEzB,IAAI1iB,EAAsB,KAC1B,GAAImiB,EAAmBknB,yBAA0B,CAChD,IACC,MACM7nF,SADiB4wE,EAAYx1E,SAASulE,EAAmBknB,2BACxC7nF,MAAM6b,WAC7B2iC,EAAOa,EAAAlH,OAAOn4C,GAASA,EAAQ,KAC9B,MAAOhG,GACRwkD,EAAO,KAGR,IAAKA,EAAM,CACVA,EAAOa,EAAAjH,eACP,UACOw4B,EAAYp1E,UAAUmlE,EAAmBknB,yBAA0B1/B,EAAA9uB,SAASqB,WAAW8jB,IAC5F,MAAOzhD;AAkBX,OAZImnG,KACH1lD,EAAO0lD,EAAe5iG,IAAI,qBAAoB,IAA0B,QAEvEk9C,EAAOa,EAAAjH,eACP8rD,EAAe0E,MAAM,qBAAsBpqD,EAAI,KAI7CA,IACHu7C,EAAQ,oBAAsBv7C,GAGxBu7C,EAxdKgK,EAAuB93B,EAAA,CAUjCC,EAAA,EAAAq7B,EAAAtO,iBACA/sB,EAAA,EAAA+S,EAAA9H,aACAjL,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAA28B,EAAAxJ,mBACAnzB,EAAA,EAAAkF,EAAA9D,cACApB,EAAA,EAAA48B,EAAAve,iBACAre,EAAA,EAAAV,EAAAT,SAASg+B,EAAA7M,mBAhBC6H,GAAAjkG,EAAAikG,wBAAAA,EAmbbjkG,EAAA2kG,0BAAAA,+ICluBA,IAAauE,EAAb,MAgBC7nG,YACCxE,EACyCssG,GAAA7nG,KAAA6nG,sBAAAA,EALzB7nG,KAAA+8F,aAAe,IAAIpkF,EAAAvD,gBAC5BpV,KAAA8nG,iBAA6B,GAMpC9nG,KAAK+nG,UAAYxsG,EAAOysG,SACxBhoG,KAAKioG,kBAAoB1sG,EAAO2sG,kBAAoB1vG,QAAQyB,QAAQ,IACpE+F,KAAKmoG,UAAY5sG,EAAO6sG,UAAY,GACpCpoG,KAAKqoG,YAAa,EAClBroG,KAAKsoG,UAAW,EAGhBtoG,KAAK8nG,iBAAmB,CAAC,sCAEzB,IAAK,IAAIS,KAAWvoG,KAAKmoG,UACxBnoG,KAAK8nG,iBAAiB7wG,KAAK,IAAIw7B,OAAOmH,EAAAjL,uBAAuB45E,GAAU,OAGpEvoG,KAAK6nG,wBACR7nG,KAAKwoG;AACLxoG,KAAK6nG,sBAAsBlR,yBAAyB32F,KAAKwoG,iBAAkBxoG,KAAMA,KAAK+8F,cAOtF/8F,KAAKy9F,WAA4C,cAAe,CAAEgL,MAAOzoG,KAAKqoG,aAE9EroG,KAAKioG,kBAAkBjvG,KAAKsE,IAC3B,MAAMorG,EAAa,eAAev2E,KAAK70B,EAAO,qBAK9C0C,KAAKy9F,WAA4E,oBAAqB,CAAEkL,mBAAoBD,IAExHntG,EAAOqtG,eAIV5oG,KAAKy9F,WAAkF,0BAA2B,CAAEoL,mBAAoBttG,EAAOqtG,mBAMnJ7oG,WAAWnB,GACVoB,KAAKsoG,SAAW1pG,EAGTmB,mBACP,MAAMxE,EAASyE,KAAK6nG,sBAAsBpzB,SAAcq0B,GACxD9oG,KAAKqoG,WAAa9sG,EAASA,EAAOwtG,gBAAkB/oG,KAAKqoG,WAG1DW,gBACC,OAAOhpG,KAAKqoG,YAAcroG,KAAKsoG,SAGhCvoG,yBACC,MAAMzC,QAAe0C,KAAKioG,kBAQ1B,MAAO,CAAEzrC,UALOl/D,EAAkB,UAKd2rG,WAJH3rG,EAAO,qBAIQ2+C,UAHhB3+C,EAAO,oBAGoB4rG,aAFxB5rG,EAAO,wBAK3ByC,UACCC,KAAK+8F,aAAajoF,UAGnB/U,UAAUyZ,EAAmBrf,EAAuBgvG,GAEnD,OAAKnpG,KAAKgpG,UAIHhpG,KAAKioG,kBAAkBjvG,KAAKsE,IAGlCnD,EAAOihE,EAAAv8B,MAAM1kC,EAAMmD,GAGnBnD,EAAOihE,EAAA/8B,eAAelkC,EAAMyE,IAC3B,GAAqB,iBAAVA,EACV,OAAOoB,KAAKopG,aAAaxqG,EAAOuqG,KAKlCnpG,KAAK+nG,UAAUlzF,IAAI2E,EAAWrf;EAE5BrB,IAEFlC,QAAQ+E,MAAM7C,KApBPN,QAAQyB,aAAQJ,GAwBzBkG,WAA0FyZ,EAAmBrf,EAAkCgvG,GAC9I,OAAOnpG,KAAK0mG,UAAUltF,EAAWrf,EAAwBgvG,GAGlDppG,aAAa+C,EAAeqmG,GACnC,IAAIE,EAAevmG,EAEnB,GAAIqmG,EAAoB,CACvB,MAAMG,EAAqC,GAC3C,IAAK,IAAI32E,KAAU3yB,KAAK8nG,iBACvB,OAAa,CACZ,MAAM3xG,EAASw8B,EAAOC,KAAK9vB,GAC3B,IAAK3M,EACJ,MAEDmzG,EAAeryG,KAAK,CAACd,EAAOqF,MAAOm3B,EAAOtpB,YAI5C,MAAMkgG,EAAmB,kDACnBC,EAAY,sFAClB,IAAIngG,EAAY,EAGhB,IAFAggG,EAAe,KAEF,CACZ,MAAMlzG,EAASqzG,EAAU52E,KAAK9vB,GAC9B,IAAK3M,EACJ,OAGIozG,EAAiBp3E,KAAKh8B,EAAO,KAAOmzG,EAAe78E,MAAM,EAAE7hB,EAAG6+F,KAAOtzG,EAAOqF,MAAQoP,GAAKzU,EAAOqF,OAASiuG,KAC7GJ,GAAgBvmG,EAAMpH,UAAU2N,EAAWlT,EAAOqF,OAAS,6BAC3D6N,EAAYmgG,EAAUngG,WAGpBA,EAAYvG,EAAMxM,SACrB+yG,GAAgBvmG,EAAMszB,OAAO/sB,IAK/B,IAAK,IAAIspB,KAAU3yB,KAAK8nG,iBACvBuB,EAAeA,EAAa7qG,QAAQm0B,EAAQ,IAE7C,OAAO02E,IAhKQzB,EAAA8B,sBAAwB,gBACxB9B,EAAA+B,qBAAuB,eAH3B/B,EAAgB/8B,EAAA,CAkB1BC,EAAA,EAAAV,EAAAT,SAAS+mB,EAAAzC,yBAlBC2Z,GAAAlpG,EAAAkpG,iBAAAA,EAuKb,MAAMkB,EAAuB,YAE7BphF,EAAA0hE,SAASqB,GAA2BwE,EAAA3F,WAAWQ,eAAekO,sBAAsB,CACnFv+E,GAAMqvF,EACN7Q,MAAS,IACT3lF,KAAQ,SACR44E,MAASn2B,EAAAV,SAAS,EAA+B,MACjD2Q,WAAc,CACb4kC,4BAA6B,CAC5Bt3F,KAAQ;AACRk6E,YAAez3B,EAAAV,SAAS,EAA6B,MACrDoB,SAAW,EACXo0C,KAAQ,CAAC,oJC9LCnrG,EAAAorG,qBAAuB,IAAI,MAAA/pG,cASvCC,KAAAgpG,WAAY,EAPZjpG,UAAUyZ,EAAmBrf,GAC5B,OAAO3B,QAAQyB,aAAQJ,GAExBkG,WAA0FyZ,EAAmBrf,GAC5G,OAAO6F,KAAK0mG,UAAUltF,EAAWrf,GAElC4F,cAEAA,mBACC,OAAOvH,QAAQyB,QAAQ,CACtBgvG,WAAY,uBACZzsC,UAAW,sBACXvgB,UAAW,0BAUdv9C,EAAAqrG,iBAAA,YAAoCC,GACnC,MAAO,CACNn1F,IAAK,CAACjc,EAAGmE,IAAMitG,EAAU3qG,QAAQ6F,GAAKA,EAAE2P,IAAIjc,EAAGmE,IAC/Csc,MAAO,IAAM7gB,QAAQgB,IAAIwwG,EAAUvwG,IAAIyL,GAAKA,EAAEmU,YAInC3a,EAAAurG,aAAmC,CAAEp1F,IAAK,IAAM,KAAMwE,MAAO,IAAM7gB,QAAQyB,QAAQ,OAGhG,IAAaiwG,EAAb,MAGCnqG,YAA0CoqG,GAAAnqG,KAAAmqG,YAAAA,EADlCnqG,KAAAoqG,sBAAwB,2DAGhCrqG,QACC,OAAOvH,QAAQyB,aAAQJ,GAGxBkG,IAAIyZ,EAAmBrf,GACtB,MAAMkwG,EAAuC,GAC7C1sG,OAAOC,KAAKzD,GAAMkF,QAAQd,IACpByB,KAAKoqG,sBAAsBj4E,KAAK5zB,KACpC8rG,EAAa9rG,GAAOpE,EAAKoE,MAG3ByB,KAAKmqG,YAAYh1B,MAAM,aAAa37D,IAAa6wF,KA4HnD,SAASC,EAAY1rG;AACpB,IAAKA,EACJ,MAAO,GAER,MAAMzI,EAAmB,GAEzB,OAGD,SAASo0G,EAASp0G,EAAkBm+C,EAAgB11C,GAC/CA,GAA0B,iBAAVA,IAAuB8J,MAAMC,QAAQ/J,GACxDjB,OAAOC,KAAKgB,GACVS,QAAQd,GAAOgsG,EAASp0G,EAAQm+C,EAAS,GAAGA,KAAU/1C,IAAQA,EAAKK,EAAML,KAE3EpI,EAAOc,KAAKq9C,GATbi2D,CAASp0G,EAAQ,GAAIyI,GACdzI,EAlJK+zG,EAAWr/B,EAAA,CAGVC,EAAA,EAAA+S,EAAA9H,cAHDm0B,GAAAxrG,EAAAwrG,YAAAA,EAmCbxrG,EAAA8rG,uBAAA,SAAuC7N,EAAqChN,GAC3E,OAAOA,EAAqBgH,yBAAyBt/E,IACpC,IAAZA,EAAMoH,QASTk+E,EAAiBc,WAAwE,sBAAuB,CAC/GgN,oBAAqB/Z,EAAAtC,4BAA4B/2E,EAAMoH,QACvDisF,kBAAmBJ,EAAYjzF,EAAMk/E,mBAczC73F,EAAAisG,sBAAA,SAAsCxwG,GAErC,MAAM6qE,EAAyBrnE,OAAOK,OAAO,MACvC4sG,EAA6BjtG,OAAOK,OAAO,MAE3C6sG,EAAOltG,OAAOK,OAAO,OA6C5B,SAASyL,EAAQhB,EAAUtS,EAAgC8hG,EAAgB,EAAG3jD,GAC7E,IAAK7rC,EACJ,OAGD,IAAK,IAAIwL,KAAQtW,OAAO8D,oBAAoBgH,GAAM,CACjD,MAAM7J,EAAQ6J,EAAIwL,GACZzY,EAAQ84C,EAASA,EAASrgC,EAAOA,EAEnCvL,MAAMC,QAAQ/J,GACjBzI,EAAOqF,GAAS4/D,EAAAp8B,cAAcpgC,GAEpBA,aAAiB1H,KAE3Bf,EAAOqF,GAASoD,EAAMi3E,cAEZr3C,EAAAvC,SAASr9B,GACfq5F,EAAQ,EACXxuF,EAAQ7K,EAAOzI,EAAQ8hG,EAAQ,EAAGz8F,EAAQ,KAE1CrF,EAAOqF,GAAS4/D,EAAAp8B,cAAcpgC,GAG/BzI,EAAOqF,GAASoD,GAnElB6K,CAAQtP,EAAM0wG,GAEd,IAAK,IAAI92F,KAAQ82F,EAAM,CAGtB,MAAMjsG,EAAQisG,EADd92F,EAAOA,EAAKzd,OAAS,IAAMyd,EAAKqiB,OAAOriB,EAAKzd,OAAS,KAAOyd,GAGvC,iBAAVnV,EACVgsG,EAAa72F,GAAQnV,EAEM,kBAAVA,EACjBgsG,EAAa72F,GAAQnV,EAAQ,EAAI,EAEN,iBAAVA,EAEjBomE,EAAWjxD,GAAQnV,EAAMlD,UAAU,EAAG,MAE5B,MAAOkD,IACjBomE,EAAWjxD,GAAQnV,GAIrB,MAAO,CACNomE,WAAAA,EACA4lC,aAAAA;EAIFlsG,EAAAosG,qBAAA,SAAqCC,GACpC,IAAKA,EACJ,MAAO,OAGR,IAAIv/E,EAAM,QAQV,MANA,CAAC,aAAc,gBAAiB,qBAAsB,OAAOnsB,QAAS4X,IACzB,IAAxC8zF,EAAiBppG,QAAQ,GAAGsV,QAC/BuU,EAAMvU,KAIDuU,8HCvHR,IAAaw/E,EAAb,MAICjrG,YACSkrG,EACAC,EACRC,EACqBhB,GAHbnqG,KAAAirG,aAAAA,EACAjrG,KAAAkrG,aAAAA,EAEalrG,KAAAmqG,YAAAA,EAEhBnqG,KAAKkrG,eACTlrG,KAAKkrG,aAAevtG,OAAOK,OAAO,OAGC,iBAAzBmtG,EACVnrG,KAAKorG,UA1CR,SAAmBC,GAElB,IAAInwC,EAqBJ,OApBIowC,EAAYC,eACfrwC,EAAS,IAAIowC,EAAYE,gBAAgBH,IAClCnjD,QAAQujD,wBAAuB,IAEtCH,EAAYI,MAAML,GAChBM,wBAAuB,GACvBC,2BAA0B,GAC1BC,0BAAyB,GACzBC,4BAA2B,GAC3BC,8BAA6B,GAC7BC,uBAAsB,GACtBC,oBAAmB,GAAO,GAC1BR,wBAAuB,GACvB5lG,QACFq1D,EAASowC,EAAYC,eAGQ,IAA1BF,EAAM1pG,QAAQ,UACjBu5D,EAAO3/D,OAAO2wG,YAAc,gDAEtBhxC,EAmBYixC,CAAUhB,GACe,mBAAzBA,IACjBnrG,KAAKorG,UAAYD,KAInBprG,IAAIyZ,EAAmBrf;AACjB6F,KAAKorG,YAGVjxG,EAAOihE,EAAAv8B,MAAM1kC,EAAM6F,KAAKkrG,cACxB/wG,EAAOiyG,EAAAzB,sBAAsBxwG,GAEzB6F,KAAKmqG,aACRnqG,KAAKmqG,YAAYh1B,MAAM,aAAa37D,IAAarf,GAElD6F,KAAKorG,UAAUiB,WAAW,CACzBr1G,KAAMgJ,KAAKirG,aAAe,IAAMzxF,EAChCwrD,WAAY7qE,EAAK6qE,WACjB4lC,aAAczwG,EAAKywG,gBAIrB7qG,QACC,OAAIC,KAAKorG,UACD,IAAI5yG,QAAQyB,IAClB+F,KAAKorG,UAAW/xF,MAAM,CACrB/Z,SAAU,KAETU,KAAKorG,eAAYvxG,EACjBI,OAAQJ,QAKLrB,QAAQyB,aAAQJ,KAlDZmxG,EAAmBngC,EAAA,CAQ7BC,EAAA,EAAA+S,EAAA9H,cARUi1B,GAAAtsG,EAAAssG,oBAAAA,2HC3BbtsG,EAAA4tG,wBAAOpoF,eACN3pB,EACAulE,EACA7jB,EACAswD,EACAjnB,EACA/C,GAEA,MAAMpsF,EAA4DwH,OAAOK,OAAO,MAGhF7H,EAAO,oBAAsB8lD,EAE7B9lD,EAAkB,UAAIinD,EAAKpG,eAAiB9/C,KAAKC,MAEjDhB,EAAmB,WAAIoE,EAEvBpE,EAAgB,QAAI2pE,EAEpB3pE,EAAO,2BAA6B4nD,EAAGyuD,WAAa,IAAIhuG,QAAQ,6BAA8B,UAE9FrI,EAAO,mBAAqB2vB,EAASC,iBAAiBD,EAASX,UAE/DhvB,EAAO,uBAAyB0E,QAAQsqB,SAExChvB,EAAO,mBAAqB0E,QAAQkoD,KAEpC5sD,EAAO,kBAAoBosF,GAAW,UAEtC,MAAM2mB,EA4CP,SAAuCuD;AACtC,IAAK5xG,UAAYA,QAAQC,MAAQD,QAAQC,IAAmB,cAC3D,OAAO,EAGR,MAAM4xG,EAAS7xG,QAAQC,IAAmB,cAAG6uB,cAC7C,OAAO8iF,EAAWvgE,KAAKygE,GAAcD,IAAWC,GAlD3BC,CAA8BL,GAAuB,IACtErD,IAEH/yG,EAAO,uBAAyB+yG,GAIjC,IAAI2D,EAAM,EACV,MAAMrG,EAAYtvG,KAAKC,MACvBwG,OAAOmvG,iBAAiB32G,EAAQ,CAE/BmB,UAAa,CACZ4I,IAAK,IAAM,IAAIhJ,KACfmK,YAAY,GAGb0rG,+BAAgC,CAC/B7sG,IAAK,IAAMhJ,KAAKC,MAAQqvG,EACxBnlG,YAAY,GAGb2rG,kBAAmB,CAClB9sG,IAAK,IAAM2sG,IACXxrG,YAAY,KAIW,UAArBxG,QAAQsqB,UAAwBtqB,QAAQC,IAAImyG,MAAQpyG,QAAQC,IAAIoyG,gBAEnE/2G,EAAO,eAAiB,QAGzB,IACC,MAAMsH,QAAiBylD,EAAAlpD,SAASsrF,EAAmB,QAGnDnvF,EAAO,iBAAmBsH,EAASzF,MAAM,EAAG,IAC3C,MAAO2D,IAIT,OAAOxF,wHCtERuI,EAAAyuG,sBAAA,SAAsCvpB,EAAiB8B,GACtD,MAAM0nB,EAAkBzvG,OAAOK,OAAO,MAEhCqvG,EAAiB,CAAC5vG,EAAkB6vG,KACzC,MAAMroC,EAAgB9pE,KAAKC,MAAMqC,GACjC2vG,EAAgBE,GAAWroC,GAE5B,GAAIygB,EAAgB,CAEnB,MAAM6nB,EAAOrqD,EAAA1E,YAAYknC,GAAgBr9E,OAAO/O,IAE/C,IACC,OAAO2qD,EAAAupD,SAASlzE,EAAA3gC,KAAK+rF,EAAgBpsF,IAAQJ,cAC5C,MAAAyb,GACD,OAAO,KAGH84F,EAAiC,GACvCF,EAAKluG,QAASjG,IAGQ,IAFP8pD,EAAA1E,YAAYlkB,EAAA3gC,KAAK+rF,EAAgBtsF,IAAMiP,OAAO9P,GAAiB,mBAATA,GAE1DjC,QACTm3G,EAAqBx2G,KAAKmC;AAG5Bq0G,EAAqBpuG,QAASipE,IAC7B,MAAM7qE,EAAWwmD,EAAA5oD,aAAai/B,EAAA3gC,KAAK+rF,EAAgBpd,EAAQ,mBAAmB7tD,WAC9E4yF,EAAe5vG,EAAU6qE,KAG3B,IAAI7qE,EAAWwmD,EAAA5oD,aAAai/B,EAAA3gC,KAAKiqF,EAAS,wBAAwBnpE,WAIlE,OAHA4yF,EAAe5vG,EAAU,eACzBA,EAAWwmD,EAAA5oD,aAAai/B,EAAA3gC,KAAKiqF,EAAS,8BAA8BnpE,WACpE4yF,EAAe5vG,EAAU,qBAClBtC,KAAKsD,UAAU2uG,EAAiB,KAAM,+GCvCjC1uG,EAAAgvG,kBAAoBtjC,EAAA5pE,gBAAmC,oBAWpE9B,EAAAivG,iBAAA,MACC5tG,YAAoBuxD,GAAAtxD,KAAAsxD,QAAAA,EAEpBvxD,OAAOkZ,EAAY5B,GAClB,OAAQA,GACP,IAAK,YAAa,OAAOrX,KAAKsxD,QAAQxJ,UAEvC,MAAM,IAAIhpD,MAAM,kBAAkBuY,KAGnCtX,WAAWkZ,EAAY+0B,EAAiB9sC,GACvC,OAAQ8sC,GACP,IAAK,OAAQ,OAAOhuC,KAAKsxD,QAAQjJ,KAAKnnD,EAAK,IAE5C,MAAM,IAAIpC,MAAM,gBAAgBkvC,OAIlCtvC,EAAAkvG,uBAAA,MAKC7tG,YAA6BmoD,GAAAloD,KAAAkoD,QAAAA,EAC5BloD,KAAK8nD,UAAY9nD,KAAKkoD,QAAQa,OAAe,aAGvChpD,KAAK5F,GACX6F,KAAKkoD,QAAQjpD,KAAK,OAAQ,CAAC9E,6GCtC7BuE,EAAAmvG,iBAAA,MACC9tG,YAAoBuxD;AAAAtxD,KAAAsxD,QAAAA,EAEpBvxD,OAAOkZ,EAAY5B,GAClB,MAAM,IAAIvY,MAAM,kBAAkBuY,KAGnCtX,KAAKkZ,EAAY+0B,EAAiB9sC,GACjC,OAAQ8sC,GACP,IAAK,YAAa,OAAOhuC,KAAKsxD,QAAQo1C,UAAUxlG,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACvE,IAAK,aAAc,OAAOlB,KAAKsxD,QAAQmsC,WAAWv8F,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,IAAK,aAAc,OAAO1I,QAAQyB,QAAQ+F,KAAKsxD,QAAQw8C,WAAW5sG,EAAK,KACvE,IAAK,mBAAoB,OAAOlB,KAAKsxD,QAAQy8C,mBAE9C,MAAM,IAAIjvG,MAAM,gBAAgBkvC,OAIlCtvC,EAAAsvG,uBAAA,MAGCjuG,YAA6BmoD,GAAAloD,KAAAkoD,QAAAA,EAEtBnoD,UAAUyZ,EAAmBrf,EAAuBgvG,GAC1D,OAAOnpG,KAAKkoD,QAAQjpD,KAAK,YAAa,CAACua,EAAWrf,EAAMgvG,IAGlDppG,WAA0FyZ,EAAmBrf,EAAkCgvG,GACrJ,OAAOnpG,KAAKkoD,QAAQjpD,KAAK,aAAc,CAACua,EAAWrf,EAAMgvG,IAGnDppG,WAAWnB,GACjBoB,KAAKkoD,QAAQjpD,KAAK,YAAa,CAACL,IAG1BmB,mBACN,OAAOC,KAAKkoD,QAAQjpD,KAAK,oBAG1B+pG,gBACC,OAAO,4HCzCT,MAAMiF,EACLC,cACC,MAAM,IAAIpvG,MAAM,iBAEjBsa,cACC,MAAM,IAAIta,MAAM,iBAGViB,yBACN,MAAM,IAAIjB,MAAM,iBAEViB;AACN,MAAM,IAAIjB,MAAM,iBAEViB,cACN,MAAM,IAAIjB,MAAM,kBAIlBJ,EAAA8sG,gBAAA,MAAAzrG,cACQC,KAAA0d,aAAe7jB,EACfmG,KAAAkoG,sBAAwBruG,EACxBmG,KAAAzE,OAAc,GAEdyE,KAAAkoD,QAAe,IAAI+lD,EAEnBluG,wBACN,MAAM,IAAIjB,MAAM,iBAGViB,2BACN,MAAM,IAAIjB,MAAM,iBAGViB,yBACN,MAAM,IAAIjB,MAAM,iBAGViB,aACN,MAAM,IAAIjB,MAAM,iBAGViB,cACN,MAAM,IAAIjB,MAAM,iBAGViB,iBACN,MAAM,IAAIjB,MAAM,iBAGViB,eACN,MAAM,IAAIjB,MAAM,iBAGViB,kBACN,MAAM,IAAIjB,MAAM,iBAGViB,QACN,MAAM,IAAIjB,MAAM,iBAGViB,2BACN,MAAM,IAAIjB,MAAM,iBAGViB,uBACN,MAAM,IAAIjB,MAAM,iBAGViB,0BACN,MAAM,IAAIjB,MAAM,iBAGViB,WAAWkQ,GACZA,EAAQ+0D,aACZ/0D,EAAQ+0D,WAAa,IAEjB/0D,EAAQ26F,eACZ36F,EAAQ26F,aAAe,IAGxB,IACC,MAAMuD,EAAOpwD,EAAGowD,OAChBl+F,EAAQ26F,aAAawD,MAAQD,EAAK73G,OAClC2Z,EAAQ+0D,WAAW,mBAAqBmpC,EAAK,GAAG1Y,MAC/C,MAAO95F;AAET,IACCsU,EAAQ26F,aAAayD,WAAatwD,EAAGuwD,UACrCr+F,EAAQ26F,aAAa2D,YAAcxwD,EAAGywD,WACrC,MAAO7yG,IAET,IACCsU,EAAQ+0D,WAAW,gBAAkBjnB,EAAG0wD,WAAWx4C,MACnDhmD,EAAQ+0D,WAAW,kBAAoBjnB,EAAGyuD,UAC1Cv8F,EAAQ+0D,WAAW,eAAiBjnB,EAAGgF,OACtC,MAAOpnD,IAET,IACC,MAAMsqG,EAAMprG,QAAQC,IAAI4zG,eAAiB,uCACnC9lD,GAAW,SAASz2B,KAAK8zE,GAAOr4D,EAAOC,GAAO+a,QAAQq9C,EAAK,CAChEroE,OAAQ,OACR+6D,QAAS,CACRkN,eAAgB,sBAGlBj9C,EAAQjvC,GAAG,QAAS,QACpBivC,EAAQ37B,MAAM9xB,KAAKsD,UAAUwR,IAC7B24C,EAAQ57C,MACP,MAAOrR,KAGHoE,MAAMkQ,GACRA,EAAQ3Q,UACX2Q,EAAQ3Q,SAAS,kHCvHPZ,EAAAgiF,OAASiuB,EAAAjuB,OAAWkuB,MAAM,8ICOvC,MAAM7iB,EAAiB,IAAI9rF,IACrB4uG,EAAe12G,EAAKwB,KAAK2jD,EAAAha,qBAAqBG,EAAS,IAAK,qBAErD/kC,EAAAowG,wBAA2BvzG,GAChCA,KAA0CA,EAAQiB,gBAG1D,MAAMuyG,EAAuB,CAC5Br0G,OAAQ,KACRC,mBAAoB,IAGR+D,EAAAswG,oBAAsB9qF,MAAOxpB,EAAgBF,KACzD,MAAMif,EAAK,GAAG/e,MAAWF;CAkBzB,OAjBKuxF,EAAe7iF,IAAIuQ,IACvBsyE,EAAe3rF,IAAIqZ,EAAI,IAAIjhB,QAAQ0rB,MAAOjqB,IACzC,MAAMsB,EAAS2nF,EAAAztB,QAAQl7D,cAAgB00G,EAAK3wD,UAAUlmD,EAAGE,OAAlB22G,CAA0BJ,SACxDK,EAAG50G,oBAAoB4oF,EAAAztB,QAAQl7D,OAAQC,EAAcq0G,EAAcn0G,GACzEq0G,EACCrwG,EAAAowG,wBAAwBvzG,KAC3BA,EAAO4zG,sBAAuB,GAKT,OAAlB5zG,EAAOb,QAAqC,UAAlBa,EAAOb,QAAwE,IAAlDiD,OAAOC,KAAKrC,EAAOZ,oBAAoBrE,QACjGy1F,EAAezrF,OAAOmZ,GAEvBxf,EAAQsB,MAGHwwF,EAAe7rF,IAAIuZ,IAGd/a,EAAA0wG,gBAAkBlrF,MAAOxpB,EAAgBF,KACrD,MAAMe,QAAemD,EAAAswG,oBAAoBt0G,EAAQF,GACjD,GAAIkE,EAAAowG,wBAAwBvzG,GAC3B,IACC,OAAOJ,KAAKC,YAAY6zG,EAAK3wD,UAAUlmD,EAAG4B,SAAlBi1G,CAA4B1zG,EAAOkB,wBAAyB,SACnF,MAAOd,IAEV,MAAO,IAGK+C,EAAA2wG,oBAAsBnrF,MAAO1pB,IACzC,MAAMlB,EAAQ,CAAC,cAAe,aAC9B,IAAK,IAAIlD,EAAI,EAAGA,EAAIkD,EAAMhD,SAAUF,EACnC,IACC,MAAMk5G,EAAkBn3G,EAAKwB,KAAKa,EAAc,OAAQlB,EAAMlD,IACxDiE,EAAU6Z,QAAoB+6F,EAAK3wD,UAAUlmD,EAAG4B,SAAlBi1G,CAA4BK,EAAiB,SACjF,OAAOn0G,KAAKC,MAAMf,GAASK,OAC1B,MAAOiB,IAEV,MAAO,MAIR,MAAMuY,EAAiB7Z,IAGtB,OAAOA,EAAQmE,QAFA,wGAEgB,CAAC6yB,EAAOk+E,EAAKC,EAAKv8C,EAAIw8C,KAEpD,GAAIx8C,EAEH,MAAO,GACD,GAAIw8C,EAAI,CAEd,MAAMC,EAAWD,EAAGn5G,OACpB,OAAIo5G,EAAW,GAA0B,OAArBD,EAAGC,EAAW,GACL,OAArBD,EAAGC,EAAW,GAAc,OAAS,KAGrC,GAIR,OAAOr+E;mHCxEV,MAAa28B,UAAiBwE,EAAAxD,mBAC7BjvD,YAAmB8sD,EAAoC58C,GACtD3L,MACC2L,EAAQ0/F,oBACL,IAAIC,EAAA59C,WAAWnF,GACf,IAAI+iD,EAAAv9C,oBAAoB,IAAIu9C,EAAA59C,WAAWnF,KAJW7sD,KAAAiQ,QAAAA,EAQhDlQ,sBACN,MAAM8sD,EAAS7sD,KAAKuuD,YACpB,OAAO1B,aAAkB+iD,EAAA59C,WACtBnF,EAAOA,OACNA,EAA+BA,OAAOA,OAMpC9sD,YACN,OAAO,IAAIvH,QAAQ,CAACyB,EAASC,KAC5B,MAAM4mB,EAAU9gB,KAAKmvD,iBAAkB0gD,IACtC,IACC,MAAMhxG,EAAU1D,KAAKC,MAAMy0G,EAAWp1F,YACtC,OAAQ5b,EAAQyT,MACf,IAAK,OAAQ,OAAOtS,KAAK8vG,aAAajxG,GACtC,IAAK,iBAEJ,OADAiiB,EAAQhM,UACD7a,EAAQ4E,GAChB,QAAS,MAAM,IAAIC,MAAM,8BAEzB,MAAOnD,GACRmlB,EAAQhM,UACR5a,EAAOyB,QASHoE,aAAagwG,GACpB/vG,KAAKgwG,YAAY,CAAE19F,KAAM,OAAQnY,KAAM,KAMjC4F,SACN,MAAM,IAAIjB,MAAM,iCAOViB,YAAYlB,GAClBmB,KAAKiwG,YAAYlpD,EAAA9uB,SAASqB,WAAWn+B,KAAKsD,UAAUI,MA1DtDH,EAAAsvD,SAAAA;ACTatvD,EAAAwxG,mBAAqB5yD,EAAAha,qBAAqBG,EAAS,iCACnD/kC,EAAA++D,kBAAqBstC,IACjC,MACMoF,EADgC1sE,EAAQ4X,iBAAiB38C,EAAAwxG,mBACjBE,CAAyBrF,GACvE,OAAO,IAAI5tC,EAAAtnB,eAAes6D,wICM3B,MAAsBE,EAMrBtwG,YAA6BwnD,EAAoCx/C,GAApC/H,KAAAunD,SAAAA,EAAoCvnD,KAAA+H,MAAAA,EALhD/H,KAAAiuD,SAAW,IAAIjwC,EAAAlG,QAChB9X,KAAAkuD,QAAUluD,KAAKiuD,SAAS52C,MAChCrX,KAAAgE,UAAW,EAKnBssG,cACC,OAAOtwG,KAAKuwG,SAGNxwG,UAAU8sD,EAAiB3zC,GACjClZ,KAAKuwG,cAAW12G,EAChBmG,KAAKwwG,YAAY3jD,EAAQ3zC,GAGnBnZ,UACDC,KAAKgE,WACThE,KAAKgE,UAAW,EAChBhE,KAAKywG,YACLzwG,KAAKiuD,SAASl2C,QAINhY,aACJC,KAAKuwG,WACTvwG,KAAKuwG,SAAWr5G,KAAKC,QA3BxBuH,EAAA2xG,WAAAA,EAyCA3xG,EAAAgyG,qBAAA,cAA0CL,EACzCtwG,YAA6BwnD,EAAoBx/C,GAChDzD,MAAMijD,EAAUx/C,GADY/H,KAAAunD,SAAAA,EAE5BA,EAAS2G,QAAQ,IAAMluD,KAAK8U,WAC5ByyC,EAAS8H,cAAc,IAAMrvD,KAAK2wG,cAGzB5wG,YACTC,KAAKunD,SAASiH,iBACdxuD,KAAKunD,SAASzyC,UACd9U,KAAKunD,SAASgH,YAAYvhD,MAGjBjN,YAAY8sD,EAAiB3zC,GACtClZ,KAAKunD,SAASqpD,wBAAwB/jD,EAAQ3zC;AAC9ClZ,KAAKunD,SAASspD,0BAIhBnyG,EAAAoyG,wBAAA,cAA6CT,EAG5CtwG,YACCrF,EAAe6sD,EAAoBruC,EAAkBnR,EACpC8M,EACAk8F,GAEjBzsG,MAAMijD,EAAUx/C,GAHC/H,KAAA6U,IAAAA,EACA7U,KAAA+wG,YAAAA,EAGjB/wG,KAAKunD,SAASzyC,UACd9U,KAAK83D,MAAMp9D,EAAQwe,GAAQlgB,KAAMyL,GAAMzE,KAAKnF,QAAU4J,GACtDzE,KAAKunD,SAASypD,sBAAsB1kF,QAG3BvsB,YACLC,KAAKnF,SACRmF,KAAKnF,QAAQy9D,OAEdt4D,KAAKunD,SAASgH,YAAYvhD,MAGjBjN,YAAY8sD,EAAiB3zC,GAEtClZ,KAAKunD,SAASqpD,wBAAwB/jD,EAAQ,MAC9C7sD,KAAKunD,SAASzyC,UACd9U,KAAKixG,gBAAgB/3F,GAGdnZ,gBAAgBmZ,GACvB,MAAM2zC,EAAS7sD,KAAKunD,SAASypD,sBAC7BnkD,EAAOvgC,QACPtsB,KAAKnF,QAASwtD,KAAK,CAClB/1C,KAAM,4BACNo+C,iBAAmBx3C,EAAOA,OAAkBuB,SAAS,UACrDk1F,oBAAqB3vG,KAAKunD,SAASgH,sBAAuBiE,EAAAR,YACxDnF,GAGI9sD,YAAYrF,EAAgBwe,GACnC,MAAM3d,QAAew5D,EAAAi6C,oBAAoBt0G,EAAQsF,KAAK+wG,YAAYv2G,cAC5D02G,EAAOr6C,EAAG6E,KACfpe,EAAAha,qBAAqBG,EAAS,kBAC9B,CAAE,uBAAwB,wBAAwB4a,EAAA6xD,sBAClD,CACCp1G,IAAG6C,OAAA+e,OAAA/e,OAAA+e,OAAA,GACC7hB,QAAQC,KAAG,CACdosE,eAAgB;AAChBC,aAAc,OACdC,gBAAiB,OACjB+pC,gCAAiC,OACjCC,+BAAgC,OAChCC,iBAAkB,QAClBC,iBAAkBtxG,KAAK+wG,YAAY38C,QAAU,QAAUp0D,KAAK+wG,YAAYl8F,IACxE08F,kBAAmBp2G,KAAKsD,UAAUlD,KAEnCklE,QAAQ,IAIVywC,EAAKv3F,GAAG,QAAS,IAAM3Z,KAAK8U,WAC5Bo8F,EAAKv3F,GAAG,OAAQ,IAAM3Z,KAAK8U,WACvBo8F,EAAKp1D,QAAUo1D,EAAKp6C,SACvBo6C,EAAKp1D,OAAO6kB,YAAY,QAAQhnD,GAAG,OAAS5c,GAAMiD,KAAK6U,IAAI+qD,KAAK,wBAAyB7iE,IACzFm0G,EAAKp6C,OAAO6J,YAAY,QAAQhnD,GAAG,OAAS5c,GAAMiD,KAAK6U,IAAIlZ,MAAM,wBAAyBoB,KAE3Fm0G,EAAKv3F,GAAG,UAAYtC,IACnB,GAAIA,GAAwB,eAAfA,EAAM/E,KAAuB,CACzC,MAAM4xB,EAAiBlkC,KAAK6U,IAAKwC,EAAM6sB,UAAY7sB,EAAM6sB,SAAW,OAC9DlkC,KAAK6U,IAAKqvB,GAAU,iBAAkB7sB,EAAM1L,WAE/C0L,GAAwB,gCAAfA,EAAM/E,MAClBtS,KAAK2wG,eAIP,MAAM5nD,EAAUlqD,IACM,6BAAjBA,EAAQyT,OACX4+F,EAAKr3F,eAAe,UAAWkvC,GAC/B/oD,KAAKixG,gBAAgB/3F,KAIvB,OAAOg4F,EAAKv3F,GAAG,UAAWovC,kHChJ5B,SAAiByoD,GACAA,EAAA1qG,OAAhB,SAAuB5B,EAAiBgC,GACvC,GAAIhC,IAAMgC,EACT,OAAO;CAER,IAAIuqG,EAAQ9zG,OAAOC,KAAKsH,GACpBwsG,EAAqB,IAAIvxG,IAC7B,IAAK,IAAI5B,KAAOZ,OAAOC,KAAKsJ,GAC3BwqG,EAAMrxG,IAAI9B,GAEX,GAAIkzG,EAAMn7G,SAAWo7G,EAAMxyG,KAC1B,OAAO,EAGR,IAAK,IAAIX,KAAOkzG,EAAO,CACtB,GAAIvsG,EAAE3G,KAAS2I,EAAE3I,GAChB,OAAO,EAERmzG,EAAMpxG,OAAO/B,GAEd,OAAsB,IAAfmzG,EAAMxyG,MApBf,CAAiBR,EAAA8yG,eAAA9yG,EAAA8yG,aAAY,KA8B7B9yG,EAAAizG,OAAA,MAIC5xG,YACC6xG,GAEA5xG,KAAK6xG,gBAAkBD,EAGjB7xG,MAAM0e,EAAgB5f,GAC5BmB,KAAK6xG,gBAAgBC,EAAA98C,SAASl2D,MAAO2f,EAAQ5f,GAGvCkB,KAAK0e,EAAgB5f,GAC3BmB,KAAK6xG,gBAAgBC,EAAA98C,SAASK,QAAS52C,EAAQ5f,GAGzCkB,KAAK0e,EAAgB5f,GAC3BmB,KAAK6xG,gBAAgBC,EAAA98C,SAASM,KAAM72C,EAAQ5f,8KCzC9C,MAAMkzG,EAAgB,eAStB,MAAeC,EASdjyG,YAAYkyG,EAAoBp9F,EAAWq9F,EAA4BrvC,EAAoBsvC,GAC1FnyG,KAAKoyG,YAAcH,EACnBjyG,KAAK0hF,KAAO7sE,EACZ7U,KAAKqyG,oBAAsBH,EAC3BlyG,KAAKsyG,WAAazvC,EAClB7iE,KAAKuyG,oBAAsBJ,EAC3BnyG,KAAKwyG,sBAAwBr6G,EAAKwB,KAAKu4G,EAAoBH,IAI7D,MAAMU,UAAgCT,EAE9BjyG,QACN,OAAOmmE,EAAIlsE,SAASgG,KAAKwyG,uBAAuBx5G,KAAM05G,IACrD,MAAM5/F,EAA4B,GAC5BsqD,EAAWxX,EAAKxqD,MAAMs3G,EAAiBj4F,WAAY3H,GACzD,OAAsB,IAAlBA,EAAOxc,QAA+C,WAA/BsvD,EAAK/zC,YAAYurD,IACvCA,EAASu1C,aACZv1C,EAAShgB,KAAOggB,EAASu1C,WAAWl5F,WAE9B2jD,EAASu1C;AACTv1C,IAEPtqD,EAAOzT,QAAQzG,IACdoH,KAAK0hF,KAAK/lF,MAAMqE,KAAKqyG,oBAAqBp+C,EAAII,SAAS,EAAiB,KAAwCr0D,KAAKwyG,sBAAuB55G,EAAEiX,OAAQjX,EAAEtC,OAAQs8G,EAAA/9C,qBAAqBj8D,EAAE+C,WAGlL,OACJ7C,GACc,WAAbA,EAAIiB,KACA,MAGRiG,KAAK0hF,KAAK/lF,MAAMqE,KAAKqyG,oBAAqBp+C,EAAII,SAAS,EAAgB,KAA8Br0D,KAAKwyG,sBAAuB15G,EAAI+F,UAC9H,QAKV,MAAMg0G,UAAqCb,EAI1CjyG,YAAYkyG,EAAoBp9F,EAAWq9F,EAA4BrvC,EAAoBsvC,EAA6B9sF,GACvH/gB,MAAM2tG,EAAYp9F,EAAKq9F,EAAoBrvC,EAAWsvC,GACtDnyG,KAAK8yG,WAAaztF,EAGZtlB,WAAWgzG,GAgBjB,MAAMC,EAAe,CAACC,EAA0BngG,KAC/CA,EAAOzT,QAAS1D,IACfqE,KAAK0hF,KAAK/lF,MAAMqE,KAAKqyG,oBAAqBp+C,EAAII,SAAS,EAA0B,KAA6B4+C,EAAWL,EAAA/9C,qBAAqBl5D,EAAMA,YAGhJu3G,EAAuBD,IAC5BjzG,KAAK0hF,KAAK/lF,MAAMqE,KAAKqyG,oBAAqBp+C,EAAII,SAAS,EAAqB,KAA6C4+C,KAG1H,IAAI/1C,EAAY/kE,EAAK8zB,QAAQjsB,KAAKwyG,uBAC9BxmF,EAAWhsB,KAAKwyG,sBAAsBp8E,OAAO,EAAGp2B,KAAKwyG,sBAAsBl8G,OAAS4mE,EAAU5mE,QAElG,MAAM68G,EAAgB,GAAGJ,EAAqB5uC,aAAa4uC,EAAqB/7G,OAChF,IACIo8G,EADAC,EAAkBrzG,KAAK8yG,WAAW92G,aAAam3G,GAgDnD,OA7CCC,EADGC,EACiBntC,EAAIlsE,SAASq5G,EAAiB,QAAQr6G,KAA4CqB,IACrG,IAAIyY,EAA4B,GAC5BwgG,EAAuC1tD,EAAKxqD,MAAMf,EAASyY,GAC/D,GAAIA,EAAOxc,OAAS,EAEnB,OADA08G,EAAaK,EAAiBvgG,GACvB,CAAExV,YAAQzD,EAAW47D,QAAS,GAAGzpC,cAClC,GAA4C,WAAxC45B,EAAK/zC,YAAYyhG,GAE3B,OADAJ,EAAoBG,GACb,CAAE/1G,YAAQzD,EAAW47D,QAAS,GAAGzpC,cAGxC,MAAO;AAAE1uB,OADIg2G,EAAkB71G,SAAW61G,EAAkB71G,SAAS81G,aAAU15G,EACtD47D,QAAS,GAAGzpC,eAEnCrwB,IACI,CAAE2B,YAAQzD,EAAW47D,QAAS,GAAGzpC,gBAGrBk6C,EAAIjqE,WAAW+vB,EAAW,OAASkxC,GAAWlkE,KAAmEV,IACpI,GAAKA,EAGL,OAAOu6G,EAA6BW,mBAAmBxzG,KAAK8yG,WAAY9mF,GAAUhzB,KAAMy6G,GAClFA,EAAcR,UAGZ/sC,EAAIlsE,SAASy5G,EAAcR,UAAW,QAAQj6G,KAAK06G,IACzD,IAAI5gG,EAA4B,GAC5B3U,EAAuBynD,EAAKxqD,MAAMs4G,EAAsB5gG,GAC5D,OAAIA,EAAOxc,OAAS,GACnB08G,EAAaS,EAAcR,UAAWngG,GAC/B,CAAExV,YAAQzD,EAAW47D,QAASg+C,EAAc9zG,WACV,WAA/BimD,EAAK/zC,YAAY1T,IAC3B+0G,EAAoBO,EAAcR,WAC3B,CAAE31G,YAAQzD,EAAW47D,QAASg+C,EAAc9zG,WAE7C,CAAErC,OAAQa,EAAUs3D,QAASg+C,EAAc9zG,WAC/C7G,IACI,CAAEwE,YAAQzD,EAAW47D,QAASg+C,EAAc9zG,YAd5C,CAAErC,YAAQzD,EAAW47D,QAASg+C,EAAc9zG,UAgBjD7G,UAMmBE,KAAMo6G,IAC9B,QAA0Bv5G,IAAtBu5G,EACH,OAAOL,EAER,IAAIjgG,EAA4B,GAEhC,OAAO+/F,EAA6Bc,6BAA6BP,EAAkB39C,QAAS3iD,GAAQ9Z,KAAMszF,IACzG,GAAIx5E,EAAOxc,OAAS,EAEnB,OADA08G,EAAaI,EAAkB39C,QAAS3iD,GACjCigG,EACD,GAA4C,WAAxCntD,EAAK/zC,YAAYuhG,GAE3B,OADAF,EAAoBE,EAAkB39C,SAC/Bs9C,EAER,MAAME,EAAYG,EAAkB91G,QAAUK,OAAOK,OAAO,MAE5D,OADA60G,EAA6Be,kBAAkB5zG,KAAK8yG,WAAYC,EAAsBE,EAAW3mB,EAAUtsF,KAAK0hF,KAAM1hF,KAAKqyG,qBACpHU,KAELj6G,GACIi6G,GAODhzG,oCAAoC8zG,EAAsC/gG,GACjF,OAAO,IAAIta,QAA2C,CAACC,EAAGG,KACrDi7G,EACH3tC,EAAIlsE,SAAS65G,GAAuB76G,KAAK86G,IACxCr7G,EAAEmtD,EAAKxqD,MAAM04G,EAAsBr5F,WAAY3H,KAC5Cha,IACHL,EAAE,QAGHA,EAAE;GASGsH,0BAA0BslB,EAA6B2G,GAC9D,OAAO,IAAIxzB,QAAyD,CAACC,EAAGG,KAiBvE,GAAIysB,EAAU0uF,SAAW1uF,EAAUzqB,SAAWyqB,EAAU3qB,OACvD,OAAOjC,EAAE,CAAEw6G,UAAWjnF,EAAW,YAAarsB,SAAU,QAjBzD,SAAS2hB,EAAK0K,EAAkBtxB,GAC/B,IAAIs5G,EAAU,GAAGhoF,SAAgBtxB,SACjCwrE,EAAIjqE,WAAW+3G,GAASh7G,KAAKV,IACxBA,GACHG,EAAE,CAAEw6G,UAAWe,EAASr0G,SAAU,GAAGqsB,eAEtC,IAAIxwB,EAAQd,EAAOe,YAAY,MAChB,IAAXD,EACH/C,EAAE,CAAEw6G,UAAW,GAAGjnF,aAAqBrsB,SAAU,QAEjDjF,EAASA,EAAOgB,UAAU,EAAGF,GAC7B8lB,EAAK0K,EAAUtxB,MAQlB4mB,CAAK0K,EAAU3G,EAAU3qB,UAQnBqF,yBAA2CslB,EAA6B4uF,EAAY91G,EAAsC+1G,EAAoDr/F,EAAWs/F,GAChM,SAASC,EAAa3rG,EAAUlK,EAAsByvC,GACrD,IAAIpvC,EAAQ6J,EAAIlK,GAChB,GAAIo2D,EAAM34B,SAASp9B,GAAQ,CAC1B,IAAIwvB,EAAcxvB,EACdtI,EAAS83B,EAAI93B,OACjB,GAAIA,EAAS,GAAgB,MAAX83B,EAAI,IAAkC,MAApBA,EAAI93B,EAAS,GAAY,CAC5D,IAAI+9G,EAAajmF,EAAIgI,OAAO,EAAG9/B,EAAS,GACpCuI,EAAUV,EAASk2G,QAGPx6G,IAAZgF,GAAyBq1G,IAC5Br1G,EAAUq1G,EAAiBG,IAExBx1G,GACCwmB,EAAUzqB,SAEbiE,EAAU,IAAWA,EAAQL,QAAQ,WAAY,QAAU,KAE5DiK,EAAIlK,GAAOyvC,IAAoB,UAARzvC,GAA2B,aAARA,IAAuB21G,EAAmB,CAAEt1G,MAAOC,EAASc,SAAUu0G,EAAiBG,IAAgBx1G,GAEjJgW,EAAI7T,KAAKmzG,EAAclgD,EAAII,SAAS,EAAiB,KAAsCggD,UAGvF,GAAI1/C,EAAM14B,SAASr9B,GACzB,IAAK,IAAIiU,KAAKjU,EACTA,EAAMG,eAAe8T,IACLuhG,EAAax1G,EAAOiU,EAAjC,aAANA,GAAyEm7B,QAGrE,GAAI2mB,EAAMhsD,QAAQ/J,GACxB,IAAK,IAAIxI,EAAI,EAAGA,EAAIwI,EAAMtI,OAAQF,IACjCg+G,EAAax1G,EAAOxI,EAAG43C,GAK1B,IAAK,IAAIzvC,KAAO01G,EACXA,EAAQl1G,eAAeR,IAC1B61G,EAAaH,EAAS11G,IAwB1B,MAAM+1G,UAAmCtC,EACxCjyG,SAASw0G,GACR,IAAIxB,EAAqDwB,EACzDxB,EAAqBlwC,UAAY7iE,KAAKsyG,WACtCS,EAAqBZ,mBAAqBnyG,KAAKuyG;CAE/C,IAAI7vC,EAAoB,GACxB,OAAK4xC,EAA2BE,4BAA4Bx0G,KAAKoyG,YAAapyG,KAAKqyG,oBAAqBU,EAAsBrwC,IAQ9HA,EAAQrjE,QAAS1D,IAChBqE,KAAK0hF,KAAK1gF,KAAKhB,KAAKqyG,oBAAqB12G,KAIrCo3G,EAAqB5uC,YACzB4uC,EAAqB5uC,UAAY,uBAIlC4uC,EAAqBt5F,GAAK,GAAGs5F,EAAqB5uC,aAAa4uC,EAAqB/7G,OACpF+7G,EAAqBlzC,WAAa,IAAIsF,EAAA5B,oBAAoBwvC,EAAqBt5F,IAE/Es5F,EAAqB0B,kBAAoBrxE,EAAA3D,IAAIlnC,KAAKyH,KAAKqyG,qBAEhDU,IAtBNrwC,EAAQrjE,QAAS1D,IAChBqE,KAAK0hF,KAAK/lF,MAAMqE,KAAKqyG,oBAAqB12G,KAEpC,MAsBDoE,mCAAmC+/D,EAAiB40C,EAA6B3B,EAA6CrwC,GAErI,QAAK4xC,EAA2BK,gCAAgCD,EAAqB3B,EAAsBrwC,KAItGkyC,EAAOC,MAAM9B,EAAqBjzC,SAKhCwjC,EAAA3gC,wBAAwB7C,EAASizC,EAAsBrwC,IAJ7DA,EAAQzrE,KAAKg9D,EAAII,SAAS,EAAa,QAChC,IAMDt0D,uCAAuC20G,EAA6B3B,EAA6CrwC,GACxH,IAAKqwC,EAEJ,OADArwC,EAAQzrE,KAAKg9D,EAAII,SAAS,EAA8B,QACjD,EAER,QAA8C,IAAnC0+C,EAAqB5uC,WAAuE,iBAAnC4uC,EAAqB5uC,UAExF,OADAzB,EAAQzrE,KAAKg9D,EAAII,SAAS,EAAkC,QACrD,EAER,GAAyC,iBAA9B0+C,EAAqB/7G,KAE/B,OADA0rE,EAAQzrE,KAAKg9D,EAAII,SAAS,EAA6B,KAA4D,UAC5G,EAER,GAA4C,iBAAjC0+C,EAAqBjzC,QAE/B,OADA4C,EAAQzrE,KAAKg9D,EAAII,SAAS,EAAgC,KAA4D,aAC/G,EAER,IAAK0+C,EAAqBhwC,QAEzB,OADAL,EAAQzrE,KAAKg9D,EAAII,SAAS,GAAgC,KAA4D,aAC/G;CAER,GAAmD,iBAAxC0+C,EAAqBhwC,QAAQv1B,OAEvC,OADAk1B,EAAQzrE,KAAKg9D,EAAII,SAAS,GAAuC,KAA4D,oBACtH,EAER,QAA0D,IAA/C0+C,EAAqBjuC,wBAC1BwvC,EAA2BQ,eAAe/B,EAAqBjuC,uBAEnE,OADApC,EAAQzrE,KAAKg9D,EAAII,SAAS,GAA8C,KAA+D,2BAChI,EAGT,QAAqD,IAA1C0+C,EAAqBgC,iBAAkC,CACjE,IAAKT,EAA2BQ,eAAe/B,EAAqBgC,kBAEnE,OADAryC,EAAQzrE,KAAKg9D,EAAII,SAAS,GAA0C,KAA+D,sBAC5H,EAER,QAAyC,IAA9B0+C,EAAqBjwC,KAE/B,OADAJ,EAAQzrE,KAAKg9D,EAAII,SAAS,GAA0C,KAA6E,mBAAoB,UAC9J,EAGT,QAAyC,IAA9B0+C,EAAqBjwC,KAAsB,CACrD,GAAyC,iBAA9BiwC,EAAqBjwC,KAE/B,OADAJ,EAAQzrE,KAAKg9D,EAAII,SAAS,GAA8B,KAA6D,UAC9G,EACD,CACN,IAAI2gD,EAAyB78G,EAAKwB,KAAK+6G,EAAqB3B,EAAqBjwC,MAE7EkyC,EAAuBrzG,QAAQ+yG,IAClChyC,EAAQzrE,KAAKg9D,EAAII,SAAS,GAA8B,KAAqH2gD,EAAwBN,IAIvM,QAAqD,IAA1C3B,EAAqBgC,iBAE/B,OADAryC,EAAQzrE,KAAKg9D,EAAII,SAAS,GAA8B,KAA6E,mBAAoB,UAClJ,EAGT,OAAO,EAGAt0D,sBAAsB8G,GAC7B,IAAK6B,MAAMC,QAAQ9B,GAClB,OAAO,EAER,IAAK,IAAIzQ,EAAI,EAAGC,EAAMwQ,EAAIvQ,OAAQF,EAAIC,EAAKD,IAC1C,GAAsB,iBAAXyQ,EAAIzQ,GACd,OAAO,EAGT,OAAO,GAIT,MAAa6+G,EAIZl1G,YACiBkyG,EACA13G,EACAG,EACAq5G,EACA7B,EACArvC,EACAsvC,EACA+C,GAPAl1G,KAAAiyG,WAAAA,EACAjyG,KAAAzF,OAAAA,EACAyF,KAAAtF,OAAAA,EACAsF,KAAA+zG,QAAAA,EACA/zG,KAAAkyG,mBAAAA,EACAlyG,KAAA6iE,UAAAA,EACA7iE,KAAAmyG,mBAAAA;AACAnyG,KAAAk1G,YAAAA,EAKVn1G,uBAAuByd,GAC7B,MAAO,CACNu2F,QAASv2F,EAAMu2F,QACfr5G,OAAQ8iB,EAAM9iB,OACdE,OAAyB,WAAjB4iB,EAAM9iB,OACdsB,aAAcwhB,EAAM03F,aAIfn1G,cAAcmF,EAA0BgC,GAC9C,OACChC,EAAE+sG,aAAe/qG,EAAE+qG,YAChB/sG,EAAE3K,SAAW2M,EAAE3M,QACf2K,EAAExK,SAAWwM,EAAExM,QACfwK,EAAE6uG,UAAY7sG,EAAE6sG,SAChB7uG,EAAEgtG,qBAAuBhrG,EAAEgrG,oBAC3BhtG,EAAE29D,YAAc37D,EAAE27D,WAClB39D,EAAEitG,qBAAuBjrG,EAAEirG,oBAC3BjtG,EAAEoqE,QAAUpoE,EAAEooE,OACd6lC,EAAA3D,aAAa1qG,OAAO5B,EAAEgwG,YAAahuG,EAAEguG,cApC3Cx2G,EAAAu2G,sBAAAA,EAkDA,MAAMG,EAELr1G,YAAoB0T,GAAAzT,KAAAyT,KAAAA,EAEpB1T,oBACC,OAAOmmE,EAAI9jB,cAAcpiD,KAAKyT,MAC5Bza,KAAKo6C,GAAWA,EAAQ35C,IAAIzC,IAAQ,CAAGA,KAAAA,EAAMmB,KAAMA,EAAKwB,KAAKqG,KAAKyT,KAAMzc,QAI5E0H,EAAA22G,iBAAA,MAKSt1G,qBAAqB+/D,EAAiBjrD,EAAWq9F,EAA4BrvC,EAAoBsvC,EAA6B9sF,GAIrI,OAHA6sF,EAAqB/5G,EAAKkyB,UAAU6nF,GAEvB,IAAIO,EAAwB3yC,EAASjrD,EAAKq9F,EAAoBrvC,EAAWsvC,GACxE/2G,QAAQpC,KAAoC+5G,IACzD,GAA6B,OAAzBA,EACH,OAAO,KAIR,OADkB,IAAIF,EAA6B/yC,EAASjrD,EAAKq9F,EAAoBrvC,EAAWsvC,EAAoB9sF,GACjGiwF,WAAWvC,KAC5B/5G,KAAM+5G,IACR,GAA6B,OAAzBA,EACH,OAAO,KAIR,OADgB,IAAIuB,EAA2Bx0C,EAASjrD,EAAKq9F,EAAoBrvC,EAAWsvC,GAC3EtmB,SAASknB,KAOrBhzG,4BAA4Byd,EAA8B3I,EAAW0gG,EAAsC,MACjH,MAAMrD,EAAqB10F,EAAM00F,mBAC3BrvC,EAAYrlD,EAAMqlD,UAClBsvC,EAAqB30F,EAAM20F,mBAE5BoD,IACJA,EAAW,IAAIH,EAAyBlD,IAGzC,IACC,IAAIsD,EAA+C,GACnD,IAAK3yC,EACJ;AACC,MAAM4yC,QAA6BvvC,EAAIlsE,SAAS7B,EAAKwB,KAAKu4G,EAAoB,aAAc,QAC5FsD,EAAWr6G,KAAKC,MAAMq6G,GACrB,MAAO38G,IAKV,IAAI48G,QAAaH,EAASI,oBAG1BD,EAAK9tG,KAAK,CAAC1C,EAAGgC,IAAMhC,EAAElO,KAAOkQ,EAAElQ,MAAQ,EAAI,GAEtC6rE,IACJ6yC,EAAOA,EAAKrtG,OAAOutG,GAAiC,IAA1BA,EAAI5+G,KAAK2K,QAAQ,OAG5C,MAAM0jB,EAAY4vF,EAAsBY,gBAAgBr4F,GACxD,IAAIs4F,QAA+Bt9G,QAAQgB,IAAIk8G,EAAKj8G,IAAI0Q,GAAKnK,KAAK+1G,cAAcv4F,EAAMy0F,WAAYp9F,EAAK1K,EAAEhS,KAAM0qE,EAAWsvC,EAAoB9sF,KAC1I2wF,EAAwBxrE,EAAOpiC,SAAS0tG,GAG5C,GAFAE,EAAwBA,EAAsB3tG,OAAO4L,GAAiB,OAATA,IAAkBuhG,EAAS,IAAIvtB,EAAAlkB,+BAA+B,CAAEtqD,GAAIwuE,EAAA/jB,sBAAsBjwD,EAAKkwD,UAAWlwD,EAAKjd,OAASid,EAAK6rD,SAASvhE,SAE9LskE,EAAW,CAGfmzC,EAD+C/tB,EAAA7jB,iBAAiB4xC,EAAuBp9G,IAAK,CAAG6gB,GAAI7gB,EAAEinE,WAAWjhE,MAAOw+C,KAAMxkD,EAAEwkD,QAC3F3jD,IAAIgL,GAAKA,EAAEmD,KAAK,CAAC1C,EAAGgC,IAAM0tG,EAAOqB,SAAS/wG,EAAE46D,QAAS54D,EAAE44D,UAAU,IAStG,OANAk2C,EAAsBpuG,KAAK,CAAC1C,EAAGgC,IAC1BhC,EAAEuvG,kBAAkBv0E,OAASh5B,EAAEutG,kBAAkBv0E,QAC5C,EAEF,GAED81E,EACN,MAAOl9G,GAER,OADA+b,EAAIlZ,MAAMu2G,EAAoBp5G,GACvB,IAQFiH,mCAAmCyd,EAA8B3I,GACvE,MAAMq9F,EAAqB10F,EAAM00F,mBAC3BrvC,EAAYrlD,EAAMqlD,UAClBsvC,EAAqB30F,EAAM20F,mBAEjC,OAAOjsC,EAAIjqE,WAAW9D,EAAKwB,KAAKu4G,EAAoBH,IAAgB/4G,KAAMV,IACzE,GAAIA,EAAQ,CACX,MAAM+sB,EAAY4vF,EAAsBY,gBAAgBr4F,GACxD,OAAOxd,KAAK+1G,cAAcv4F,EAAMy0F,WAAYp9F,EAAKq9F,EAAoBrvC,EAAWsvC,EAAoB9sF,GAAWrsB,KAAM+5G,GACvF,OAAzBA,EACI,GAED,CAACA,IAGV,OAAO/yG,KAAKk2G,eAAe14F,EAAO3I,IAC/B/b,IACH+b,EAAIlZ,MAAMu2G,EAAoBp5G,GACvB;AAIFiH,2BAA2Byd,EAA8B3I,GAC/D,MAAMq9F,EAAqB10F,EAAM00F,mBAC3BrvC,EAAYrlD,EAAMqlD,UAClBsvC,EAAqB30F,EAAM20F,mBAC3B9sF,EAAY4vF,EAAsBY,gBAAgBr4F,GACxD,OAAOxd,KAAK+1G,cAAcv4F,EAAMy0F,WAAYp9F,EAAKq9F,EAAoBrvC,EAAWsvC,EAAoB9sF,GAG9FtlB,8BAA8Bo2G,EAAqDC,GACzF,OAAO59G,QAAQgB,IAAI,CAAC28G,EAAmBC,IAAyBp9G,KAAK,EAAEm9G,EAAmBC,MACzF,IAAIC,EAAsD14G,OAAOK,OAAO,MACxE,IAAK,IAAI5H,EAAI,EAAGC,EAAM8/G,EAAkB7/G,OAAQF,EAAIC,EAAKD,IACxDigH,EAAUlxC,EAAA5B,oBAAoB78B,MAAMyvE,EAAkB//G,GAAGypE,aAAes2C,EAAkB//G,GAG3F,IAAK,IAAIA,EAAI,EAAGC,EAAM+/G,EAAuB9/G,OAAQF,EAAIC,EAAKD,IAC7DigH,EAAUlxC,EAAA5B,oBAAoB78B,MAAM0vE,EAAuBhgH,GAAGypE,aAAeu2C,EAAuBhgH,GAGrG,IAAIkgH,EAAY34G,OAAOC,KAAKy4G,GAAW58G,IAAKggB,GAAO48F,EAAU58F,IAY7D,OAXA68F,EAAU1uG,KAAK,CAAC1C,EAAGgC,KAClB,MAAMqvG,EAAep+G,EAAK6zB,SAAS9mB,EAAEuvG,kBAAkBv0E,QACjDs2E,EAAer+G,EAAK6zB,SAAS9kB,EAAEutG,kBAAkBv0E,QACvD,OAAIq2E,EAAeC,GACV,EAELD,EAAeC,EACX,EAED,IAEDF,kLC7kBV,MAAMG,UAAgBC,EAAA54B,uBAAtB/9E,kCACiBC,KAAA22G,QAAU,IAAI12G,IAEvBF,UACNC,KAAK22G,QAAQt3G,QAASu3G,GAAMA,EAAE9hG,WAC9B9U,KAAK22G,QAAQn1G,QACb8C,MAAMwQ,UAGA/U,OAAO82G,EAAa10F,EAAeq+C,GACzCxgE,KAAK22G,QAAQv2G,IAAIy2G,EAAK72G,KAAKkkD,MAAM/hC,EAAUq+C;AAGrCzgE,QAAQ82G,GACd72G,KAAK22G,QAAQz2G,IAAI22G,GAAM/hG,UACvB9U,KAAK22G,QAAQr2G,OAAOu2G,IAItBn4G,EAAAo4G,oBAAA,MAIC/2G,YACkBw/D,EACAC,GADAx/D,KAAAu/D,mBAAAA,EACAv/D,KAAAw/D,WAAAA,EAJDx/D,KAAA+2G,SAAW,IAAI92G,IAM/BD,KAAKssE,SAAW,IAAIoqC,EAAA54B,uBAAuB99E,KAAKw/D,YAG1Cz/D,OAAO2d,EAAuCrG,EAAenW,GACnE,OAAQmW,GACP,IAAK,aAAc,OAAOrX,KAAKg3G,WAAWt5F,EAASxc,EAAK,IACxD,IAAK,iBAAkB,OAAOlB,KAAKk7E,eAAeh6E,EAAK,GAAIA,EAAK,IAGjE,MAAM,IAAIpC,MAAM,mBAAmBuY,MAG5BtX,WAAW2d,EAAuCu5F,GACzD,MAAMp/F,EAAU,IAAImG,EAAAlG,QAA0B,CAC7C4B,mBAAoB,KACnB,MAAM4yD,EAAW,IAAImqC,EAAQz2G,KAAKw/D,YAClCx/D,KAAK+2G,SAAS32G,IAAI62G,EAAS3qC,GAC3B,MAAMp+C,EAAcmwB,EAAAof,kBAAkB//C,EAAQqtF,iBAC9Cz+B,EAASgM,gBAAiBx/D,IACzBjB,EAAQE,KAAKe,EAAOrf,IAAK4d,GAAU1Z,OAAA+e,OAAA/e,OAAA+e,OAAA,GAC/BrF,GAAK,CACR8K,SAAU+L,EAAY8nB,kBAAkB3+B,EAAM8K,gBAGhDmqD,EAASkM,gBAAiBnhE,GAAUrX,KAAKw/D,WAAW7jE,MAAM0b,KAE3DuC,qBAAsB,KACrB5Z,KAAK+2G,SAAS72G,IAAI+2G,GAAUniG,UAC5B9U,KAAK+2G,SAASz2G,OAAO22G,MAIvB,OAAOp/F,EAAQR,MAGRtX,eAAeoiB,EAAyBq+C,GAC/C,IAAIya,EACJ,MAAMpjE,EAAU,IAAImG,EAAAlG,QAA8C,CACjE4B,mBAAoB,KACduhE,KACJA,EAAaG,EAAAt5B,iBAAiB9hD,KAAKssE,SAAUtsE,KAAKiuB,UAAU9L,GAASxkB,OAAA+e,OAAA/e,OAAA+e,OAAA,GACjE8jD,GAAI,CACP0P,WAAY;KAEFv2D,GAAG,OAASxf,GAAS0d,EAAQE,KAAK5d,IAC7C8gF,EAAWthE,GAAG,QAAUhe,GAAUkc,EAAQE,KAAKpc,IAC/Cs/E,EAAWthE,GAAG,MAAO,IAAM9B,EAAQE,KAAK,UAG1C6B,qBAAsB,IAAMqhE,GAAcA,EAAWzuD,YAGtD,OAAO3U,EAAQR,MAGTtX,KAAKkZ,EAAY+0B,EAAiB9sC,GACxC,OAAQ8sC,GACP,IAAK,OAAQ,OAAOhuC,KAAK/G,KAAKiI,EAAK,IACnC,IAAK,OAAQ,OAAOlB,KAAKwgD,KAAKt/C,EAAK,GAAIA,EAAK,IAC5C,IAAK,QAAS,OAAOlB,KAAK4gD,MAAM1/C,EAAK,IACrC,IAAK,OAAQ,OAAOlB,KAAKutB,KAAKrsB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACrD,IAAK,WAAY,OAAOlB,KAAKhG,SAASkH,EAAK,IAC3C,IAAK,QAAS,OAAOlB,KAAKitB,MAAM/rB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,IAAK,YAAa,OAAOlB,KAAK5F,UAAU8G,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC/D,IAAK,SAAU,OAAOlB,KAAKM,OAAOY,EAAK,GAAIA,EAAK,IAChD,IAAK,QAAS,OAAOlB,KAAK7C,MAAM+D,EAAK,IACrC,IAAK,UAAW,OAAOlB,KAAK3G,QAAQ6H,EAAK,IACzC,IAAK,SAAU,OAAOlB,KAAKk+C,OAAOh9C,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzD,IAAK,OAAQ,OAAOlB,KAAK0hD,KAAKxgD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACrD,IAAK,QAAS,OAAOlB,KAAKkkD,MAAMhjD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAChE,IAAK,UAAW,OAAOlB,KAAKk3G,QAAQh2G,EAAK,GAAIA,EAAK,IAGnD,MAAM,IAAIpC,MAAM,iBAAiBkvC,MAG3BjuC,UACNC,KAAK+2G,SAAS13G,QAASu3G,GAAMA,EAAE9hG,WAC/B9U,KAAK+2G,SAASv1G,QAGPzB,WAAWoiB,GAClB,OAAOniB,KAAKssE,SAASrzE,KAAK+G,KAAKiuB,UAAU9L,IAGlCpiB,WAAWoiB,EAAyBq+C,GAC3C,OAAOxgE,KAAKssE,SAAS9rB,KAAKxgD,KAAKiuB,UAAU9L,GAAWq+C;AAG7CzgE,YAAY2gD,GACnB,OAAO1gD,KAAKssE,SAAS1rB,MAAMF,GAGpB3gD,WAAW2gD,EAAY3yC,EAAazX,GAC3C,MAAM4iB,EAAS6tC,EAAA9uB,SAASO,MAAMliC,GAE9B,MAAO,CAAC4iB,QADgBlZ,KAAKssE,SAAS/+C,KAAKmzB,EAAI3yC,EAAKmL,EAAOA,OAAQ,EAAG5iB,IAI/DyJ,eAAeoiB,GACtB,OAAO4kC,EAAA9uB,SAASsB,WAAWv5B,KAAKssE,SAAStyE,SAASgG,KAAKiuB,UAAU9L,KAG1DpiB,MAAM2gD,EAAY3yC,EAAamL,EAAkBrJ,EAAgBvZ,GACxE,OAAO0J,KAAKssE,SAASr/C,MAAMyzB,EAAI3yC,EAAKmL,EAAOA,OAAQrJ,EAAQvZ,GAGpDyJ,UAAUoiB,EAAyBjJ,EAAkBsnD,GAC5D,OAAOxgE,KAAKssE,SAASlyE,UAAU4F,KAAKiuB,UAAU9L,GAAWjJ,EAAOA,OAAQsnD,GAGjEzgE,aAAaoiB,EAAyBq+C,GAC7C,OAAOxgE,KAAKssE,SAAShsE,OAAON,KAAKiuB,UAAU9L,GAAWq+C,GAG/CzgE,YAAYoiB,GACnB,OAAOniB,KAAKssE,SAASnvE,MAAM6C,KAAKiuB,UAAU9L,IAGnCpiB,cAAcoiB,GACrB,OAAOniB,KAAKssE,SAASjzE,QAAQ2G,KAAKiuB,UAAU9L,IAGrCpiB,aAAaoiB,EAAyBxqB,EAAuB6oE,GACpE,OAAOxgE,KAAKssE,SAASpuB,OAAOl+C,KAAKiuB,UAAU9L,GAAWihB,EAAA3D,IAAIhoC,KAAKE,GAAS6oE,GAGjEzgE,KAAKoiB,EAAyBxqB,EAAuB6oE,GAC5D,OAAOxgE,KAAKssE,SAAS5qB,KAAK1hD,KAAKiuB,UAAU9L,GAAWihB,EAAA3D,IAAIhoC,KAAKE,GAAS6oE,GAG/DzgE,YAAYk3G,EAAiBJ,EAAa10F,EAAyBq+C,GAC1ExgE,KAAK+2G,SAAS72G,IAAI+2G,GAAUE,OAAON,EAAK72G,KAAKiuB,UAAU9L,GAAWq+C,GAG3DzgE,cAAck3G,EAAiBJ,GACtC72G,KAAK+2G,SAAS72G,IAAI+2G,GAAUC,QAAQL,GAG7B92G,UAAUoiB,GAEjB,GAAI,mBAAmBgQ,KAAKhQ,EAAShqB,MACpC,OAAOirC,EAAA3D,IAAIlnC,KAAKyH,KAAKu/D,mBAAmBqkB,QAAUzhE,EAAShqB,KAAKqG,QAAQ,mBAAoB;CAEtF,GAAsB,qBAAlB2jB,EAAShqB,MAA+BgqB,EAASwU,MAC3D,IACC,MAAMA,EAAQx7B,KAAKC,MAAM+mB,EAASwU,OAClC,GAAIA,EAAMygF,oBACT,OAAOh0E,EAAA3D,IAAIlnC,KAAKo+B,EAAMygF,qBAEtB,MAAOz7G,IAEV,OAAOynC,EAAA3D,IAAIhoC,KAAK0qB,KAIlBzjB,EAAA24G,4BAAA,MACCt3G,YACkBgxG,EACAl8F,EACAyiG,EACAxoE,GAHA9uC,KAAA+wG,YAAAA,EACA/wG,KAAA6U,IAAAA,EACA7U,KAAAs3G,UAAAA,EACAt3G,KAAA8uC,gBAAAA,EAGX/uC,OAAOkZ,EAAY5B,GACzB,MAAM,IAAIvY,MAAM,mBAAmBuY,MAG7BtX,WAAW2d,EAAcswB,EAAiB9sC,GAChD,OAAQ8sC,GACP,IAAK,qBACJ,OAAOmvB,EAAAhnB,4BACAn2C,KAAKu3G,mBAAmBr2G,EAAKukB,UACnC44B,EAAAof,kBAAkB//C,EAAQqtF,kBAE5B,IAAK,oBAAqB,OAAO/qG,KAAKw3G,oBACtC,IAAK,mBAAoB,OAAOx3G,KAAKy3G,mBAEtC,MAAM,IAAI34G,MAAM,iBAAiBkvC,MAG1BjuC,yBAAyBrF,GAChC,MAAO,CACNs9D,IAAKn9D,QAAQm9D,IACblpB,gBAAiB9uC,KAAK8uC,gBACtB80C,QAASxgD,EAAA3D,IAAIlnC,KAAKyH,KAAK+wG,YAAYntB,SACnCO,gBAAiBnkF,KAAK+wG,YAAY5sB,gBAClCuzB,aAAc13G,KAAK+wG,YAAYpsB,oBAC/Bja,SAAUtnC,EAAA3D,IAAIlnC,KAAKyH,KAAK+wG,YAAYrmC,UACpCgb,eAAgBtiD,EAAA3D,IAAIlnC,KAAKyH,KAAK+wG,YAAYrrB;AAC1CiyB,sBAAuBv0E,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKqG,KAAK+wG,YAAYrmC,SAAU,mBACrEzJ,kBAAmB79B,EAAA3D,IAAIlnC,KAAKyH,KAAK+wG,YAAY9vC,mBAC7CxtB,SAAUrQ,EAAA3D,IAAIlnC,KAAKyH,KAAK+wG,YAAYt9D,UACpC8qB,iBAAkBv+D,KAAKk2G,eAAex7G,GACtCqjD,GAAIr2B,EAAAH,IAIExnB,qBAAqBrF,GAC5B,MAAMsB,QAAqB+4D,EAAAq6C,gBAAgB10G,EAAQsF,KAAK+wG,YAAYv2G,cAE9Do9G,EAAe,CAAC/0C,EAAoBsvC,EAA6BnoF,IAC/DxxB,QAAQgB,IAAIwwB,EAAMvwB,IAAKtB,GACtBg9G,EAAAE,iBAAiBa,eAAe,IAAIf,EAAAF,sBAC1C/xB,EAAAztB,QAAQqK,QACRojB,EAAAztB,QAAQl7D,OACRG,IACEG,QAAQC,IAAI+8G,WACd1/G,EACA0qE,EACAsvC,EACAn2G,GACEgE,KAAK6U,OAYV,OAAOrc,QAAQgB,IAAI,CARC0qB,UACZ0zF,GAAa,GAAM,EAAO,CAAC53G,KAAK+wG,YAAYxrB,yBAA0BvlF,KAAK+wG,YAAYlrB,6BAO3EiyB,GAJE5zF,UACd0zF,GAAa,GAAO,EAAM,CAAC53G,KAAK+wG,YAAYrrB,kBAAoB1lF,KAAK+wG,YAAYnrB,sBAGtDmyB,KAAkB/+G,KAAMg/G,IAC1D,MAAMC,EAAmB,IAAIh4G,IAc7B,OAbA+3G,EAAc34G,QAAS64G,IACtBA,EAAmB74G,QAASk/D,IAC3BA,EAAWl/D,QAAS69D,IACnB,MAAMzjD,EAAK0rD,EAAA5B,oBAAoB78B,MAAMw2B,EAAU2C,YAC/C,GAAIo4C,EAAiB/uG,IAAIuQ,GAAK,CAC7B,MAAMilC,EAAUu5D,EAAiB/3G,IAAIuZ,GAAKg7F,kBAAkBv0E,OACtDye,EAAUue,EAAUu3C,kBAAkBv0E,OAC5ClgC,KAAK6U,IAAI7T,KAAK,GAAG09C,yBAA+BC,KAEjDs5D,EAAiB73G,IAAIqZ,EAAIyjD;AAIrBx0D,MAAMjR,KAAKwgH,EAAiB36G,YAI7ByC,oBACP,MAAM,IAAIjB,MAAM,mBAGTiB,yBACPC,KAAKs3G,UAAUxJ,YAAW,KAI5BpvG,EAAAy5G,iBAAA,MAkBCp4G,cAjBOC,KAAAo4G,mBAAgBv+G,EAINmG,KAAA8sD,WAAa,IAAI9uC,EAAAlG,QAClB9X,KAAA8nD,UAAY9nD,KAAK8sD,WAAWz1C,MAC3BrX,KAAAq4G,YAAc,IAAIr6F,EAAAlG,QACnB9X,KAAAs4G,WAAat4G,KAAKq4G,YAAYhhG,MAC9BrX,KAAAu4G,QAAU,IAAIv6F,EAAAlG,QACd9X,KAAAw4G,OAASx4G,KAAKu4G,QAAQlhG,MACtBrX,KAAAy4G,MAAQ,IAAIz6F,EAAAlG,QACZ9X,KAAA04G,KAAO14G,KAAKy4G,MAAMphG,MAGjBrX,KAAAiuD,SAAW,IAAIjwC,EAAAlG,QAChB9X,KAAAkuD,QAAUluD,KAAKiuD,SAAS52C,MAIvCrX,KAAKuzD,OAAS,IAAIolD,EAAArlD,OAAO,CACxBxL,UAAW9nD,KAAKs4G,WAChBpqD,QAASluD,KAAKkuD,QACdsqD,OAAQx4G,KAAKw4G,OACbE,KAAM14G,KAAK04G,KACXrwD,KAAOxpD,IACNmB,KAAK8sD,WAAW/0C,KAAKlZ,MAKjBkB,KAAKlB,GACXmB,KAAKq4G,YAAYtgG,KAAKlZ,iJCjUXH,EAAAk6G,gCAAkC,mBAO/C,MAAaC,UAAiClgG,EAAAlE,WAqB7C1U,YAAY+4G,GACXx0G,QAhBgBtE,KAAAi3G,QAAkBh5D,EAAAjH,eAGlBh3C,KAAA+4G,aAAe/4G,KAAKilD,UAAU,IAAIjnC,EAAAlG;AAC1C9X,KAAAs4E,gBAAkBt4E,KAAK+4G,aAAa1hG,MAErCrX,KAAAi+E,sBAAwBj+E,KAAKilD,UAAU,IAAIjnC,EAAAlG,SAC1C9X,KAAAw4E,gBAAkBx4E,KAAKi+E,sBAAsB5mE,MAErCrX,KAAAg5G,yBAA2Bh5G,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACtD9X,KAAAu4E,wBAA0Bv4E,KAAKg5G,yBAAyB3hG,MAQhE,MAAMwzC,EAAaiuD,EAAmBG,gBACtCj5G,KAAKkoD,QAAU2C,EAAWK,WAAqBxsD,EAAAk6G,iCAE/C54G,KAAKk5G,kBAAiB,GACtBJ,EAAmBK,iBAAiBngH,KAAKogH,GAA0Bp5G,KAAKk5G,oBAAoBE,GAAmD,IAAzBA,EAAuBr7D,MAE7I/9C,KAAKq5G,oBAXN9sC,mBAAqD,OAAOvsE,KAAKq+E,cAczDt+E,oBACPC,KAAKilD,UAAUjlD,KAAKkoD,QAAQa,OAAkC,aAAc,CAAC/oD,KAAKi3G,SAAnEj3G,CAA6Es5G,IAC3F,GAAI5wG,MAAMC,QAAQ2wG,GAAgB,CACjC,MAAMxgG,EAASwgG,EACft5G,KAAK+4G,aAAahhG,KAAKe,EAAOrf,IAAI4d,IAAS,CAAG8K,SAAUihB,EAAA3D,IAAI2N,OAAO/1B,EAAM8K,UAAW7P,KAAM+E,EAAM/E,aAC1F,CACN,MAAM3W,EAAQ29G,EACdt5G,KAAKi+E,sBAAsBlmE,KAAKpc,OAKnCoE,iBAAiBw5G,GAChB,IAAIhtC,EAAe,GAOfgtC,IACHhtC,GAAY,MAGbvsE,KAAKq+E,cAAgB9R,EACrBvsE,KAAKg5G,yBAAyBjhG,UAAKle,GAKpCkG,KAAKoiB,GACJ,OAAOniB,KAAKkoD,QAAQjpD,KAAK,OAAQ,CAACkjB,IAGnCpiB,KAAKoiB,EAAeq+C,GACnB,OAAOxgE,KAAKkoD,QAAQjpD,KAAK,OAAQ,CAACkjB,EAAUq+C,IAG7CzgE,MAAM2gD;AACL,OAAO1gD,KAAKkoD,QAAQjpD,KAAK,QAAS,CAACyhD,IAGpC3gD,WAAW2gD,EAAY3yC,EAAa5T,EAAkB0V,EAAgBvZ,GACrE,MAAOuwD,EAAOpO,SAAuCz4C,KAAKkoD,QAAQjpD,KAAK,OAAQ,CAACyhD,EAAI3yC,EAAKzX,IAQzF,OAFA6D,EAAKiG,IAAIymD,EAAM3tC,OAAOlhB,MAAM,EAAGygD,GAAY5oC,GAEpC4oC,EAGR14C,eAAeoiB,GAGd,aAF6BniB,KAAKkoD,QAAQjpD,KAAK,WAAY,CAACkjB,KAEhDjJ,OAGbnZ,eAAeoiB,EAAeq+C,EAA6Bz4D,GAC1D,MAAM6lB,EAASqrB,EAAA9sB,mBAA+BhyB,GAAQ4sD,EAAA9uB,SAASvuB,OAAOvP,EAAKV,IAAIU,GAAQ4sD,EAAA9uB,SAASsB,KAAKp/B,KAAQ+e,QAGvGnW,EAAW/C,KAAKkoD,QAAQa,OAA6C,iBAAkB,CAAC5mC,EAAUq+C,GAAvFxgE,CAA8Fw5G,IAG9G,GAAIA,aAA4BzyD,EAAA9uB,SAC/BrK,EAAOX,MAAMusF,EAAiBtgG,YAI1B,CACJ,GAAyB,QAArBsgG,EACH5rF,EAAO5gB,UACD,CAMN,IAAIrR,EAAQ69G,EACN79G,aAAiBmD,QACtBnD,EAAQ,IAAImD,MAAMwhE,EAAA5L,eAAe/4D,KAGlCiyB,EAAO5gB,IAAIrR,GAIZoH,EAAS+R,aAmBX,OAdI/M,GACHiW,EAAA5G,MAAM5L,KAAKzD,EAAMgW,wBAAjBC,CAA0C,KAIzC4P,EAAO5gB,IAAI7E,EAAAvE,YAKXb,EAAS+R,YAIJ8Y,EAGR7tB,MAAM2gD,EAAY3yC,EAAa5T,EAAkB0V,EAAgBvZ,GAChE,OAAO0J,KAAKkoD,QAAQjpD,KAAK,QAAS,CAACyhD,EAAI3yC,EAAKg5C,EAAA9uB,SAASsB,KAAKp/B,GAAO0V,EAAQvZ,IAG1EyJ,UAAUoiB,EAAe9nB,EAAqBmmE,GAC7C,OAAOxgE,KAAKkoD,QAAQjpD,KAAK,YAAa,CAACkjB,EAAU4kC,EAAA9uB,SAASsB,KAAKl/B,GAAUmmE,IAG1EzgE,OAAOoiB,EAAeq+C,GACrB,OAAOxgE,KAAKkoD,QAAQjpD,KAAK,SAAU,CAACkjB,EAAUq+C,IAG/CzgE,MAAMoiB,GACL,OAAOniB,KAAKkoD,QAAQjpD,KAAK,QAAS,CAACkjB,IAGpCpiB,QAAQoiB,GACP,OAAOniB,KAAKkoD,QAAQjpD,KAAK,UAAW,CAACkjB,IAGtCpiB,OAAOoiB,EAAexqB,EAAa6oE,GAClC,OAAOxgE,KAAKkoD,QAAQjpD,KAAK,SAAU,CAACkjB,EAAUxqB,EAAQ6oE,IAGvDzgE,KAAKoiB,EAAexqB,EAAa6oE;AAChC,OAAOxgE,KAAKkoD,QAAQjpD,KAAK,OAAQ,CAACkjB,EAAUxqB,EAAQ6oE,IAGrDzgE,MAAMoiB,EAAeq+C,GACpB,MAAMq2C,EAAMhyG,KAAKiG,SAGjB,OAFA9K,KAAKkoD,QAAQjpD,KAAK,QAAS,CAACe,KAAKi3G,QAASJ,EAAK10F,EAAUq+C,IAElD7nD,EAAAxD,aAAa,IAAMnV,KAAKkoD,QAAQjpD,KAAK,UAAW,CAACe,KAAKi3G,QAASJ,MAjLxEn4G,EAAAm6G,yBAAAA,6GCban6G,EAAA+6G,2BAA6B,cAE7B/6G,EAAAg7G,oBAAsBtvC,EAAA5pE,gBAAqC,qKCiBxE,MAAam5G,UAAqB76G,MAKjCiB,YAAYuS,EAAoCsnG,GAC/C,IAAI/6G,EAAU+6G,EAAM/6G,QAEpB,OAAQyT,GACP,IAAK,aAAczT,EAAU,gBAAgBA,IAG9CyF,MAAMzF,GACNmB,KAAKsS,KAAOA,EACZtS,KAAK45G,MAAQA,GAYf,SAASC,EAAe/gH,GACvB,GAAIA,aAAe6gH,EAClB,OAAO7gH,EAGR,IAAIwZ,OAAqCzY,EAMzC,MAJI,sDAAsDs4B,KAAKr5B,EAAI+F,WAClEyT,EAAO,cAGD,IAAIqnG,EAAarnG,EAAMxZ,GAoC/B,SAASghH,EAAWC,EAAkBC,EAAoB/pG,EAAmBlI,GAC5E,IAAI0F,EAAOs+B,EAAAvtB,wBAA8B,IAAMhmB,QAAQyB,WACnDggH,EAAwB,EAO5B,OALAj8F,EAAA5G,MAAM5L,KAAKzD,EAAMgW,wBAAjBC,CAA0C,KACzCvQ,EAAK6Q;AACLy7F,EAAQn5D,UAGF,IAAIpoD,QAAQ,CAACC,EAAGG,KACtB,MAAMynB,EAAY,IAAI0rB,EAAAtsB,UAEhBy6F,EAAiBnyG,IAClBA,EAAMG,0BAIV+xG,IACAF,EAAQI,cAGTJ,EAAQvuG,KAAK,QAAS5S,GACtBmhH,EAAQvuG,KAAK,QAAS,IAAMiC,EAAKzU,KAAK,KACjC+O,EAAMG,yBAA2B6xG,EAAQK,aAAeH,EAC3DxhH,IAEAG,EAAE,IAAI+gH,EAAa,aAAc,IAAI76G,MAAMm1D,EAAII,SAAS,EAAqB,KAAwC4lD,EAAuBF,EAAQK,gBAEnJxhH,IACHmhH,EAAQI,YACRJ,EAAQpgG,GAAG,QAAU+pB,IAEpB,GAAI37B,EAAMG,wBACT,OAGD,IAAK+H,EAAQoqG,gBAAgBloF,KAAKuR,EAAM42E,UAEvC,YADAJ,EAAcnyG,GAIf,MAAMuyG,EAAW52E,EAAM42E,SAAS97G,QAAQyR,EAAQoqG,gBAAiB,IAGjE,GAAI,MAAMloF,KAAKmoF,GAAW,CACzB,MAAMC,EAAiBpiH,EAAKwB,KAAKqgH,EAAYM,GAE7C,YADA7sG,EAAOs+B,EAAAvtB,wBAAwBzW,GAASm7C,EAAA7lD,OAAOk9G,GAAgBvhH,KAAK,IAAMkhH,EAAcnyG,IAAQ/O,UAAKa,EAAWjB,KAIjH,MAAMg1B,EAAS4sF,EAAcT,EAASr2E,GAChCga,EA1GT,SAAuBha,GACtB,MAAM+2E,EAAO/2E,EAAMg3E,wBAA0B,IAAM,MAEnD,MAAO,CAAC,IAAmB,GAAkB,GAC3CjhH,IAAI84D,GAAQkoD,EAAOloD,GACnBroD,OAAO,CAAChF,EAAGgC,IAAMhC,EAAIgC,EAAU,MAAPuzG,GAqGXE,CAAcj3E,GAE3Bj2B,EAAOs+B,EAAAvtB,wBAAwBzW,GAASsY,EAAUb,MAAM,IAAMoO,EAAO50B,KAAK40B,IAtF7E,SAAsBA,EAAkB0sF,EAAkB58D,EAAcs8D,EAAoB/pG,EAAmBlI,GAC9G,MAAMulG,EAAUn1G,EAAK4zB,QAAQuuF,GACvBM,EAAgBziH,EAAKwB,KAAKqgH,EAAY1M,GAC5C,GAA0C,IAAtCsN,EAAcj5G,QAAQq4G,GACzB,OAAOxhH,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAAgB,KAAuCimD,KAErG,MAAMC,EAAiBpiH,EAAKwB,KAAKqgH,EAAYM,GAE7C,IAAIO,EAQJ,OANA78F,EAAA5G,MAAM5L,KAAKzD,EAAMgW,wBAAjBC,CAA0C,KACrC68F,GACHA,EAAQruF;AAIHh0B,QAAQyB,QAAQipD,EAAA7lD,OAAOu9G,IAAgB5hH,KAAK,IAAM,IAAIR,QAAc,CAACC,EAAGG,KAC9E,IAAImP,EAAMG,wBAIV,KACC2yG,EAAU52D,EAAA5C,kBAAkBk5D,EAAgB,CAAE78D,KAAAA,KACtClyC,KAAK,QAAS,IAAM/S,KAC5BoiH,EAAQrvG,KAAK,QAAS5S,GACtBg1B,EAAOpiB,KAAK,QAAS5S,GACrBg1B,EAAOgsB,KAAKihE,GACX,MAAOl/G,GACR/C,EAAE+C,QA0DkFm/G,CAAaltF,EAAQ0sF,EAAU58D,EAAMs8D,EAAY/pG,EAASlI,GAAO/O,KAAK,IAAMkhH,EAAcnyG,MAAU/O,KAAK,KAAMJ,QAKtM,SAASmiH,EAAQC,EAAiBC,GAAgB,GACjD,OAAO,IAAIziH,QAAQ,CAACyB,EAASC,KAC5BghH,EAAA16D,KAASw6D,EAASC,EAAO,CAAEE,aAAa,QAASthH,EAAY,CAAC8B,EAAeo+G,KACxEp+G,EACHzB,EAAO2/G,EAAel+G,IAEtB1B,EAAQ8/G,OAMZ,SAASS,EAAcQ,EAAkBt3E,GACxC,OAAO,IAAIlrC,QAAQ,CAACyB,EAASC,KAC5B8gH,EAAQI,eAAe13E,EAAO,CAAC/nC,EAAeiyB,KACzCjyB,EACHzB,EAAO2/G,EAAel+G,IAEtB1B,EAAQ2zB,OArJZlvB,EAAAi7G,aAAAA,EAiKAj7G,EAAAq/D,IAAA,SAAoBs9C,EAAiB/hH,GACpC,OAAO,IAAId,QAAgB,CAACC,EAAGG,KAC9B,MAAMmlE,EAAM,IAAIu9C,EAAKC,QACrBjiH,EAAM+F,QAAQo/F,IACTA,EAAEhhG,SACLsgE,EAAIy9C,UAAgC,iBAAf/c,EAAEhhG,SAAwBi6B,OAAOjgC,KAAKgnG,EAAEhhG,SAAU,QAAUghG,EAAEhhG,SAAUghG,EAAEtmG,MACrFsmG,EAAEgd,WACZ19C,EAAI29C,QAAQjd,EAAEgd,UAAWhd,EAAEtmG,QAG7B4lE,EAAI/wD,MAEJ,MAAM2uG,EAAY13D,EAAA5C,kBAAkBg6D,GACpCt9C,EAAI69C,aAAahiE,KAAK+hE,GAEtB59C,EAAI69C,aAAapwG,KAAK,QAAS5S,GAC/B+iH,EAAUnwG,KAAK,QAAS5S,GACxB+iH,EAAUnwG,KAAK,SAAU,IAAM/S,EAAE4iH,OAInC38G,EAAAm9G,QAAA,SAAwBR,EAAiBrB,EAAoB/pG,EAA2B,GAAIlI,GAC3F,MAAMsyG,EAAkB,IAAI5nF,OAAOxiB,EAAQ6rG,WAAa,IAAI7rG,EAAQ6rG,aAAe,IAEnF,IAAI5hG,EAAU6gG,EAAQM,GAAS,GAM/B,OAJIprG,EAAQ6uB,YACX5kB,EAAUA,EAAQlhB,KAAK+gH,GAAW72D,EAAAxqD,OAAOshH,GAAYhhH,KAAK,IAAM+gH,KAG1D7/F,EAAQlhB,KAAK+gH,GAAWD,EAAWC,EAASC,EAAY;AAAEK,gBAAAA,GAAmBtyG,KAiBrFrJ,EAAAwa,OAAA,SAAuBmiG,EAAiB38B,GACvC,OAfD,SAAc28B,EAAiB38B,GAC9B,OAAOq8B,EAAQM,GAASriH,KAAK+gH,GACrB,IAAIvhH,QAAkB,CAACC,EAAGG,KAChCmhH,EAAQpgG,GAAG,QAAU+pB,IAChBA,EAAM42E,WAAa57B,GACtB87B,EAAcT,EAASr2E,GAAO1qC,KAAK40B,GAAUn1B,EAAEm1B,GAAS90B,GAAOF,EAAEE,MAInEihH,EAAQvuG,KAAK,QAAS,IAAM5S,EAAE,IAAIkG,MAAMm1D,EAAII,SAAS,EAAY,KAA6BqqB,SAMzFnxD,CAAK8tF,EAAS38B,GAAU1lF,KAAK40B,GAC5B,IAAIp1B,QAAgB,CAACC,EAAGG,KAC9B,MAAMukB,EAAoB,GAC1ByQ,EAAOpiB,KAAK,QAAS5S,GACrBg1B,EAAOjU,GAAG,OAASzS,GAAciW,EAAQlmB,KAAKiQ,IAC9C0mB,EAAOjU,GAAG,MAAO,IAAMlhB,EAAEi/B,OAAOhuB,OAAOyT,0HC7O1Cze,EAAAw/D,YAAA,SAA4BU,GAC3B,OAAOm9C,EAAA7iG,OAAO0lD,EAAM,0BAClB5lE,KAAKkgB,IACL,IACC,OAAO/d,KAAKC,MAAM8d,EAAOuB,SAAS,SACjC,MAAO3hB,GACR,MAAM,IAAIgG,MAAMi2D,EAAAV,SAAS,EAAmB,gRC6ChD,MAAa2nD,UAAiCl9G,MAC7CiB,YAAYlB,EAA0B9E,GACrCuK,MAAMzF,GAD+BmB,KAAAjG,KAAAA,GAKvC,SAASkiH,EAAc53D,GACtB,OAAO,IAAI7rD,QAAQ,CAACC,EAAGG,KACtB;AACC,MAAMwkE,EAAWjiE,KAAKC,MAAMipD,GACtB9mD,EAAW6/D,EAASu1C,YAAc,YACjCv1C,EAASu1C,WAChBl6G,EAAE,CAAE2kE,SAAAA,EAAU7/D,SAAAA,IACb,MAAOzE,GACRF,EAAE,IAAIkG,MAAMm1D,EAAII,SAAS,EAAmB,WAd/C31D,EAAAs9G,yBAAAA,EA0CA,IAAaE,EAAb,cAAgDvjG,EAAAlE,WA2B/C1U,YACuCw/D,EACK48C,EACb38C,EACM48C,EACAzf,EACFkG,GAElCv+F,QAPsCtE,KAAAu/D,mBAAAA,EACKv/D,KAAAm8G,eAAAA,EACbn8G,KAAAw/D,WAAAA,EACMx/D,KAAAo8G,gBAAAA,EACAp8G,KAAA28F,iBAAAA,EACF38F,KAAA6iG,eAAAA,EAxB3B7iG,KAAAq8G,oBAAsB,EACbr8G,KAAAs8G,qBAAwE,IAAIr8G,IAC5ED,KAAAu8G,uBAA+D,IAAIt8G,IAInED,KAAAw8G,oBAAsBx8G,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACjD9X,KAAA09D,mBAAmD19D,KAAKw8G,oBAAoBnlG,MAEpErX,KAAAy8G,uBAAyBz8G,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACpD9X,KAAA29D,sBAAyD39D,KAAKy8G,uBAAuBplG,MAE7ErX,KAAA08G,sBAAwB18G,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACnD9X,KAAA49D,qBAAoD59D,KAAK08G,sBAAsBrlG,MAEhFrX,KAAA28G,yBAA2B38G,KAAKilD,UAAU,IAAIjnC,EAAAlG,SACtD9X,KAAA69D,wBAA6D79D,KAAK28G,yBAAyBtlG,MA8zBnFrX,KAAA48G,yBAA0C,KAQ1C58G,KAAA68G,6BAA8C;AA3zBrD78G,KAAK88G,qBAAuBv9C,EAAmBgmB,sBAC/CvlF,KAAK0lF,eAAiBnmB,EAAmBmmB,eACzC1lF,KAAK+8G,gBAAkB5kH,EAAKwB,KAAKqG,KAAK0lF,eAAgB,aACtD1lF,KAAKg9G,uBAAyB,IAAIjxE,EAAA/pB,MAClChiB,KAAKi9G,cAAgBj9G,KAAKilD,UAAU,IAAIi4D,EAAAr3C,wBAAwBtG,EAAoBv/D,OACpFA,KAAKm9G,mBAAqBn9G,KAAKilD,UAAU,IAAIm4D,EAAA99C,oBAAoBC,EAAoBv/D,KAAKw/D,aAE1Fx/D,KAAKilD,UAAUtsC,EAAAxD,aAAa,KAC3BnV,KAAKs8G,qBAAqBj9G,QAAQ6a,GAAWA,EAAQoE,UACrDte,KAAKu8G,uBAAuBl9G,QAAQ6a,GAAWA,EAAQoE,UACvDte,KAAKs8G,qBAAqB96G,QAC1BxB,KAAKu8G,uBAAuB/6G,WAI9BzB,IAAIm9D,GAEH,OADAl9D,KAAKw/D,WAAW2V,MAAM,iCAAkCjY,EAAU2C,WAAWpmD,IACtEzZ,KAAKq9G,aAAangD,GACvBlkE,KAAKM,GAASyiH,EAAAh+C,IAAI5lE,EAAKwB,KAAK8iD,EAAAuB,SAAUC,EAAAjH,gBAAiB19C,IACvDN,KAAUb,GAAQirC,EAAA3D,IAAIlnC,KAAKJ,IAG9B4H,MAAM4+D,EAAkBrsD,GAEvB,OADAtS,KAAKw/D,WAAW2V,MAAM,mCAAoCxW,EAAYlkD,YAC/Dza,KAAKi+D,QAAQU,EAAarsD,GAAMtZ,KAAK8kE,GAASA,EAAM+B,YAG5D9/D,kBAAkB6+D,GACjB,MAAM0+C,QAAyBt9G,KAAKu9G,aAAa3+C,GAC3Cy8C,EAAUljH,EAAK8B,QAAQqjH,EAAiBp9E,QAC9C,OAAOs9E,EAAAt/C,YAAYm9C,GAGZt7G,aAAam9D,GAEpB,MAAMugD,EAA4Bv5F,MAAO9qB;AACxC,IAAI/B,QAAgB6uE,EAAI7sE,QAAQD,GAChC/B,EAAUA,EAAQoC,IAAIb,GAAKT,EAAKwB,KAAKP,EAAKR,IAC1C,MAAMG,QAAcP,QAAQgB,IAAInC,EAAQoC,IAAIb,GAAKstE,EAAIjtE,KAAKL,KAC1D,IAAIshB,EAA6B1hB,QAAQyB,QAAQ,IAYjD,OAXAlB,EAAMsG,QAAQ,CAACpG,EAAMuC,KACpB,MAAMkoC,EAAQrsC,EAAQmE,GAClBvC,EAAKspD,WACRroC,EAAUA,EAAQlhB,KAAK7C,GAAU,IAAKA,EAAQutC,KAE3CzqC,EAAKC,gBACRghB,EAAUA,EACRlhB,KAAK7C,GAAUsnH,EAA0B/5E,GACxC1qC,KAAKM,GAAS,IAAKnD,KAAWmD,QAG5B4gB,GAGR,OAAOujG,EAA0BvgD,EAAUvkE,SAASunC,QAClDlnC,KAAKM,GAASA,EAAMG,IAAIglG,IAAK,CAAUtmG,KAAM,aAAaA,EAAK2zB,SAASoxC,EAAUvkE,SAASunC,OAAQu+D,KAAMgd,UAAWhd,MAIvH1+F,QAAQ6+D,EAAWtsD,EAAA,GAElB,OADAtS,KAAKw/D,WAAW2V,MAAM,qCAAsCvW,EAAKnkD,YAC1DsxB,EAAAvtB,wBAAwBzW,GACvB/H,KAAKu9G,aAAa3+C,GAAM5lE,KAAKskH,IACnC,MAAMjC,EAAUljH,EAAK8B,QAAQqjH,EAAiBp9E,QAE9C,OAAOs9E,EAAAt/C,YAAYm9C,GACjBriH,KAAKokE,IACL,MAAMyC,EAAa,CAAEpmD,GAAIwuE,EAAA/jB,sBAAsB9G,EAAS+G,UAAW/G,EAASpmE,OAC5E,IAAI+2E,EAAS,EACb,GAAI3Q,EAAS2F,SAAW3F,EAAS2F,QAAQv1B,SAAW81D,EAAAtgC,cAAc5F,EAAS2F,QAAQv1B,OAAQ01C,EAAAztB,QAAQqK,SAClG,OAAOtnE,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAAgB,KAAiFwL,EAAWpmD,GAAIypE,EAAAztB,QAAQqK,WAEtK,MAAM49C,EAAwB,IAAIz1B,EAAAlkB,+BAA+BlE,EAAYzC,EAAS0C,SACtF,OAAO9/D,KAAKs+D,aAAY,GACtBtlE,KAAK2kH,IACL,MAAMC,EAAWD,EAAoBt1G,OAAOjS,GAAK6xF,EAAAnkB,kBAAkBjE,EAAYzpE,EAAEypE,aAAa,GAC9F,OAAI+9C,GACH7vC,EAAS;AACL2vC,EAAsB52G,OAAO,IAAImhF,EAAAlkB,+BAA+B65C,EAAS/9C,WAAY+9C,EAASxgD,SAAS0C,UACnG9/D,KAAK69G,gBAAgBD,EAAU,YAAY5kH,KAAK,KAAMJ,GAAKJ,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAAe,KAAmD+I,EAAS+kC,aAAe/kC,EAASpmE,SACjM49G,EAAOkJ,GAAGF,EAASxgD,SAAS0C,QAAS1C,EAAS0C,SACjD9/D,KAAKo+D,UAAUw/C,GAAU,QAD1B,GAMA59G,KAAK+9G,4BAA4BL,GACtC1kH,KAAK4kH,IACL,GAAIA,EACH,OAAO59G,KAAK69G,gBAAgBD,EAAU,YAAY5kH,KAAK,KAAMJ,GAAKJ,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAAe,KAAmD+I,EAAS+kC,aAAe/kC,EAASpmE,aAO/MgC,KAAK,KACLgH,KAAKw/D,WAAWI,KAAK,4BAA6BC,EAAWpmD,IAC7DzZ,KAAKw8G,oBAAoBzkG,KAAK,CAAE8nD,WAAAA,EAAYw7C,QAAAA,IACrCr7G,KAAKg+G,YAAY/1B,EAAA/jB,sBAAsB9G,EAAS+G,UAAW/G,EAASpmE,OACzEgC,KACAuE,GAAYyC,KAAKi+G,mBAAmBP,EAAuBrC,EAAS99G,EAAU+U,EAAMy7D,EAAWhmE,GAC/F,IAAM/H,KAAKi+G,mBAAmBP,EAAuBrC,EAAS,KAAM/oG,EAAMy7D,EAAWhmE,IACrF/O,KACA8kE,IAAW99D,KAAKw/D,WAAWI,KAAK,wCAAyCC,EAAWpmD,IAAYqkD,GAChGllE,IACCoH,KAAKw/D,WAAW7jE,MAAM,mCAAoCkkE,EAAWpmD,GAAI7gB,EAAEiG,SACpErG,QAAQ0B,OAAOtB,YAQxBmH,aAAa6+D,GACpB,GAAIA,EAAK9+B,SAAW6P,EAAArC,QAAQ/0C,KAC3B,OAAOC,QAAQyB,QAAQ2kE;CAExB,IAAK5+D,KAAKo8G,gBACT,MAAM,IAAIt9G,MAAM,qCAEjB,MAAMo/G,EAAqB/lH,EAAKwB,KAAK8iD,EAAAuB,SAAUC,EAAAjH,gBAC/C,OAAOh3C,KAAKo8G,gBAAgBva,SAASjjC,EAAMx7B,EAAA3D,IAAIlnC,KAAK2lH,IAAqBllH,KAAK,IAAMoqC,EAAA3D,IAAIlnC,KAAK2lH,IAGtFn+G,mBAAmB29G,EAAuDrC,EAAiB99G,EAAmC+U,EAAqBy7D,EAA6BhmE,GACvL,OAAO/H,KAAKm+G,wBAAwBn+G,KAAKo+G,iBAAiB,CAAE/C,QAAAA,EAASqC,sBAAAA,EAAuBngH,SAAAA,GAAY+U,EAAMvK,GAC5G/O,KAAK8kE,GAAS99D,KAAKq+G,qCAAqCvgD,EAAO,MAC9D9kE,KACA,IAAM8kE,EACNniE,IACKy9E,EAAAxwE,gBAAgBk1D,EAAMV,SAAS0H,wBAClC9kE,KAAKw/D,WAAWx+D,KAAK,4CAA6C88D,EAAM+B,WAAWpmD,GAAI9d,EAAMkD,SAE1Fu6E,EAAAxwE,gBAAgBk1D,EAAMV,SAASolC,gBAClCxiG,KAAKw/D,WAAWx+D,KAAK,iDAAkD88D,EAAM+B,WAAWpmD,GAAI9d,EAAMkD,SAE5Fi/D,KAET9kE,KACA8kE,IAAW99D,KAAKy8G,uBAAuB1kG,KAAK,CAAE8nD,WAAY69C,EAAsB79C,WAAYw7C,QAAAA,EAASv9C,MAAAA,EAAOiQ,UAAAA,IAAqBjQ,GACjIniE,IAAWqE,KAAKy8G,uBAAuB1kG,KAAK,CAAE8nD,WAAY69C,EAAsB79C,WAAYw7C,QAAAA,EAASttC,UAAAA,EAAWpyE,MAAAA,IAAiBnD,QAAQ0B,OAAOyB,MAInJoE,yBAAyBm9D;AACxB,IAAKl9D,KAAKm8G,eAAezX,YACxB,OAAOlsG,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAAuB,QAErE,MAAMmyC,GAAY,IAAItvG,MAAO8hB,UAEvBslG,EAA+B,CAACphD,EAA8B6Q,EAA6BjQ,KAChG99D,KAAKw/D,WAAWI,KAAK,qCAAsC1C,EAAU2C,WAAWpmD,IAChFzZ,KAAKy8G,uBAAuB1kG,KAAK,CAAE8nD,WAAY3C,EAAU2C,WAAY0+C,QAASrhD,EAAWY,MAAAA,EAAOiQ,UAAAA,IAChG/tE,KAAKw+G,gBAAgBx+G,KAAKy+G,kBAAkB1wC,GAAYka,EAAAljB,iCAAiC7H,IAAY,IAAIhmE,MAAO8hB,UAAYwtF,OAAW3sG,IAGlI6kH,EAA+B,CAACxhD,EAA8B6Q,EAA6BpyE,KAChG,MAAMm5D,EAAYn5D,GAAoCA,EAAO5B,KAAkC4B,EAAO5B,KA/OnF,UAgPnBiG,KAAKw/D,WAAW7jE,MAAM,+BAAgCuhE,EAAU2C,WAAWpmD,GAAI9d,EAAQA,EAAMkD,QAAUi2D,GACvG90D,KAAKy8G,uBAAuB1kG,KAAK,CAAE8nD,WAAY3C,EAAU2C,WAAY0+C,QAASrhD,EAAW6Q,UAAAA,EAAWpyE,MAAOm5D,IAC3G90D,KAAKw+G,gBAAgBx+G,KAAKy+G,kBAAkB1wC,GAAYka,EAAAljB,iCAAiC7H,IAAY,IAAIhmE,MAAO8hB,UAAYwtF,EAAW7qG,GACnIA,aAAiBmD,QACpBnD,EAAM3E,KAAO89D,IAIf,IACCoI,QAAkBl9D,KAAK2+G,6BAA6BzhD,GACnD,MAAOvhE,GAER,OADA+iH,EAA6BxhD,EAAS,EAA4BvhE,GAC3DnD,QAAQ0B,OAAOyB,GAGvB,MAAM4C,EAAM,IAAI0pF,EAAAlkB,+BAA+B7G,EAAU2C,WAAY3C,EAAU4C,SAASvhE,MACxF,IAAIqgH,EAAqB5+G,KAAKs8G,qBAAqBp8G,IAAI3B,GACvD,IAAKqgH,EAAoB;AAExB5+G,KAAKw/D,WAAWI,KAAK,wBAAyB1C,EAAU2C,WAAWpmD,IACnEzZ,KAAKw8G,oBAAoBzkG,KAAK,CAAE8nD,WAAY3C,EAAU2C,WAAY0+C,QAASrhD,IAE3E,IACIxT,EAAsCm1D,EAAmDC,EADzF/wC,EAAS,EAEb6wC,EAAqB7yE,EAAAvtB,wBAAwBzW,IAAW2hD,EAAoB3hD,EAAc,IAAIvP,QAAQ,CAACC,EAAGG,KAAQimH,EAAkBpmH,EAAGqmH,EAAgBlmH,MACvJoH,KAAKs8G,qBAAqBl8G,IAAI7B,EAAKqgH,GACnC,IACC,MACMG,SADkB/+G,KAAKs+D,aAAY,IACLj2D,OAAOjS,GAAK6xF,EAAAnkB,kBAAkB1tE,EAAEypE,WAAY3C,EAAU2C,aAAa,GACnGk/C,IACHhxC,EAAS,GAGV/tE,KAAKg/G,6BAA6B9hD,EAAW6Q,GAC3C/0E,KAAKimH,GAAwBj/G,KAAKo+G,iBAAiBa,EAAoB,EAAsBv1D,GAC5F1wD,KAAK8kE,GAASoI,EAAIxtE,OAAOumH,EAAqB5D,SAASx8F,QAAQ,IAAM,MAAM7lB,KAAK,IAAM8kE,KACvF9kE,KAAK8kE,GAAS99D,KAAKq+G,qCAAqCvgD,EAAOihD,GAC9D/lH,KAAK,IAAM8kE,EAAOniE,GAASqE,KAAKo+D,UAAUN,GAAO,GAAM9kE,KAAK,IAAMR,QAAQ0B,OAAOyB,GAAQ,IAAMnD,QAAQ0B,OAAOyB,MAC/G3C,KACAkrB,MAAM45C,IACDihD,GAAqBnK,EAAOsK,IAAIH,EAAkB3hD,SAAS0C,QAAS5C,EAAU4C,gBAC3E9/D,KAAKm/G,eAAeJ,GAE3B/+G,KAAKs8G,qBAAqBh8G,OAAO/B,GACjC+/G,EAA6BphD,EAAW6Q,EAAWjQ,GACnD+gD,EAAgB/gD,IAEjBniE,IACCqE,KAAKs8G,qBAAqBh8G,OAAO/B,GACjCmgH,EAA6BxhD,EAAW6Q,EAAWpyE,GACnDmjH,EAAcnjH,KAGhB,MAAOA,GAGR,OAFAqE,KAAKs8G,qBAAqBh8G,OAAO/B,GACjCmgH,EAA6BxhD,EAAW6Q,EAAWpyE,GAC5CnD,QAAQ0B,OAAOyB,IAKxB,OAAOijH,EAGA7+G,mCAAmCm9D;AAC1C,SAAUl9D,KAAKo/G,YAAYliD,GAC1B,OAAO1kE,QAAQ0B,OAAO,IAAI8hH,EAAyB/nD,EAAII,SAAS,EAAuB,MAAqEg0B,EAAA5c,0BAG7J,MAAM4zC,QAA4Br/G,KAAKm8G,eAAemD,uBAAuBpiD,GAE7E,OAAKmiD,GACG7mH,QAAQ0B,OAAO,IAAI8hH,EAAyB/nD,EAAII,SAAS,EAAgC,KAAqH6I,EAAU2C,WAAWpmD,GAAIypE,EAAAztB,QAAQqK,SAAUuoB,EAAA3c,6BAMlQ3rE,qBAAqBm9D,GAEpB,OADAl9D,KAAKw/D,WAAW2V,MAAM,kDAAmDjY,EAAU2C,WAAWpmD,IACzFzZ,KAAKm8G,eAAezX,YAGlB1kG,KAAKu/G,qBAAqBriD,GAC/BlkE,KAAKsoG,GACDA,EACIthG,KAAKm/G,eAAejiD,GACzBlkE,KAAK,IAAMgH,KAAKw/G,2BAA2BtiD,GAC1ClkE,KACA,IAAMgH,KAAKm+D,mBAAmBmjC,GAAkBtoG,OAChDJ,GAAKJ,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAAe,KAA+FiM,EAAA5L,eAAe97D,QAErKJ,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAA+B,SAXtE77D,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,EAAuB,QAe9Dt0D,kBAAkBguE,GACzB,OAAgB,IAATA,EAAwC,0BAA4B,2BAGpEhuE,YAAYm9D,GACnB,OAAOl9D,KAAKy+D,sBACVzlE,KAAKqsE,GAAU4iB,EAAA7iB,0BAA0BC,GAAQn8D,IAAIg0D,EAAU2C,WAAWpmD,KAGrE1Z,6BAA6Bm9D,EAA8B6Q,GAClE,MAAMxwE,EAA6B,CAClCkc,GAAIyjD,EAAU2C,WAAWziB;AACzBsnB,YAAaxH,EAAUwH,YACvBE,qBAAsB1H,EAAU0H,sBAIjC,OADA5kE,KAAKw/D,WAAW2V,MAAM,iCAAkCjY,EAAU2C,WAAWpmD,IACtEzZ,KAAKm8G,eAAeta,SAAS3kC,EAAW95B,EAAA3D,IAAIlnC,KAAKkkD,EAAAuB,UAAW+vB,GACjE/0E,KACA+kE,IACC,MAAMs9C,EAAUt9C,EAAI79B,OAEpB,OADAlgC,KAAKw/D,WAAWI,KAAK,wBAAyB1C,EAAU2C,WAAWpmD,GAAI4hG,GAChEmC,EAAAt/C,YAAYm9C,GACjBriH,KACAokE,IAAY,CAAyBi+C,QAAAA,EAASqC,sBAAuB,IAAIz1B,EAAAlkB,+BAA+B7G,EAAU2C,WAAYzC,EAAS0C,SAAUviE,SAAAA,IACjJ5B,GAASnD,QAAQ0B,OAAO,IAAI8hH,EAAyBh8G,KAAKy/G,WAAW9jH,GAAOkD,QA9WlD,iBAiX7BlD,GAASnD,QAAQ0B,OAAO,IAAI8hH,EAAyBh8G,KAAKy/G,WAAW9jH,GAAOkD,QAlX9C,iBAqXzBkB,iBAAiBk/G,EAA4C3sG,EAAqBvK,GACzF,OAAO/H,KAAK+9G,4BAA4BkB,EAAqBvB,uBAC3D1kH,KACA8kE,GACKA,GAGG99D,KAAK0/G,kBAAkBT,EAAsB3sG,EAAMvK,GAE3DnP,GACK8uB,EAAAxB,YACI1tB,QAAQ0B,OAAO,IAAI8hH,EAAyB/nD,EAAII,SAAS,GAAY,MAjY1C,qBAmY5B77D,QAAQ0B,OAAO,IAAI8hH,EAAyB/nD,EAAII,SAAS,GAAY,MAnYzC,sBAuY/Bt0D,4BAA4B29G,GACnC,OAAO19G,KAAK2/G,cAAcjC,GACxB1kH,KAA6B2mH,GACzBA,GACH3/G,KAAKw/D,WAAW2V,MAAM,gDAAiDuoC,EAAsB79C,WAAWpmD;AAEjGzZ,KAAK4/G,iBAAiBlC,GAC3B1kH,KAAK,KACLgH,KAAKw/D,WAAWI,KAAK,+CAAgD89C,EAAsB79C,WAAWpmD,IAC/FzZ,KAAKs+D,aAAY,KAExBtlE,KAAKmvF,GAAaA,EAAU9/E,OAAOjS,GAAK,IAAI6xF,EAAAlkB,+BAA+B3tE,EAAEypE,WAAYzpE,EAAEgnE,SAAS0C,SAASh5D,OAAO42G,IAAwB,KAExI,MAIF39G,mBAAkBs7G,QAAEA,EAAOqC,sBAAEA,EAAqBngH,SAAEA,GAAkC+U,EAAqBvK,GAClH,MAAM83D,WAAEA,GAAe69C,EACjB/kH,EAAe,IAAJ2Z,EAA8BtS,KAAK0lF,eAAiB1lF,KAAK88G,qBACpE+C,EAAanC,EAAsBn/G,MACnCuhH,EAAW3nH,EAAKwB,KAAKhB,EAAU,IAAIknH,KACnCE,EAAgB5nH,EAAKwB,KAAKhB,EAAUknH,GAC1C,OAAO35C,EAAIxtE,OAAOqnH,GAChB/mH,KAAK,IAAMgH,KAAKggH,iBAAiBngD,EAAYw7C,EAASyE,EAAUC,EAAeh4G,GAAQnP,GAAKJ,QAAQ0B,OAAO,IAAI8hH,EAAyB/nD,EAAII,SAAS,GAAiB,KAAoI0rD,EAAelgD,EAAWpmD,IAzZzS,cA0Z3BzgB,KAAK,IAAMgH,KAAK+1G,cAAc8J,EAAYlnH,EAAU2Z,IACpDtZ,KAAK8kE,GACAA,GAGL99D,KAAKw/D,WAAWI,KAAK,0BAA2BC,EAAWpmD,IACvDlc,GACHyC,KAAKigH,YAAYniD,EAAOvgE,GACjByC,KAAKkgH,8BAA8BpiD,IAEpCA,GAPCtlE,QAAQ0B,OAAO+5D,EAAII,SAAS,GAAe,KAAsC17D,IAQvFgD,GAASuqE,EAAIxtE,OAAOqnH,GAAe/mH,KAAK,IAAMR,QAAQ0B,OAAOyB,GAAQ,IAAMnD,QAAQ0B,OAAOyB,KAGvFoE,iBAAiB8/D,EAAkCw7C,EAAiB8E,EAAqBC,EAAoBr4G;AACpH,OAAO/H,KAAK67G,QAAQh8C,EAAYw7C,EAAS8E,EAAap4G,GACpD/O,KAAK,IAAMgH,KAAKk+C,OAAO2hB,EAAYsgD,EAAaC,EAAYlpH,KAAKC,MAAQ,MACxE6B,KACA,IAAMgH,KAAKw/D,WAAWI,KAAK,aAAcwgD,GACzCxnH,IACCoH,KAAKw/D,WAAWI,KAAK,kDAAmDugD,GACjEj6C,EAAIxtE,OAAOynH,GAAathG,QAAQ,IAAM,MAAM7lB,KAAK,IAAMR,QAAQ0B,OAAOtB,OAI1EmH,QAAQ8/D,EAAkCw7C,EAAiB8E,EAAqBp4G,GAEvF,OADA/H,KAAKw/D,WAAW2V,MAAM,yCAAyCkmC,QAAc8E,KACtEj6C,EAAIxtE,OAAOynH,GAChBnnH,KACA,IAAM+iH,EAAAF,QAAQR,EAAS8E,EAAa,CAAErE,WAAY,YAAah9E,WAAW,GAAQ/2B,GAChF/O,KACA,IAAMgH,KAAKw/D,WAAWI,KAAK,0BAA0BugD,KAAgBtgD,EAAWpmD,IAChF7gB,GAAKstE,EAAIxtE,OAAOynH,GAAathG,QAAQ,IAAM,MACzC7lB,KAAK,IAAMR,QAAQ0B,OAAO,IAAI8hH,EAAyBpjH,EAAEiG,QAASjG,aAAamjH,EAAApC,cAAgB/gH,EAAE0Z,KAAO1Z,EAAE0Z,KA7bjF,iBA8b7B1Z,GAAKJ,QAAQ0B,OAAO,IAAI8hH,EAAyBh8G,KAAKy/G,WAAW7mH,GAAGiG,QA5bzC,cA+btBkB,OAAO8/D,EAAkCsgD,EAAqBC,EAAoBC,GACzF,OAAOn6C,EAAIhoB,OAAOiiE,EAAaC,GAC7BpnH,UAAKa,EAAW8B,GACZ+rB,EAAAzB,WAAatqB,GAAwB,UAAfA,EAAM5B,MAAoB7C,KAAKC,MAAQkpH,GAChErgH,KAAKw/D,WAAWI,KAAK,mBAAmBugD,QAAkBC,wCAAkDvgD,EAAWpmD,IAChHzZ,KAAKk+C,OAAO2hB,EAAYsgD,EAAaC,EAAYC,IAElD7nH,QAAQ0B,OAAO,IAAI8hH,EAAyBrgH,EAAMkD,SAAWo1D,EAAII,SAAS,GAAe,KAA2C8rD,EAAaC,GAAazkH,EAAM5B,MAvchJ;AA2ctBgG,2CAA2CooF,EAA4By1B,GAC9E,GAAI59G,KAAKm8G,eAAezX,YAAa,CACpC,MAAM4b,EAA0Cn4B,EAAU/qB,SAAS0H,uBAAyB,GAC5F,GAAIqjB,EAAU/qB,SAASolC,cACtB,IAAK,MAAMtlC,KAAairB,EAAU/qB,SAASolC,cAEpCob,GAAYA,EAASxgD,SAASolC,eAAiBob,EAASxgD,SAASolC,cAAct2D,KAAKq0E,GAAOt4B,EAAAnkB,kBAAkB,CAAErqD,GAAI8mG,GAAO,CAAE9mG,GAAIyjD,MACjIojD,EAA8B7zF,MAAM7zB,IAAMqvF,EAAAnkB,kBAAkB,CAAErqD,GAAI7gB,GAAK,CAAE6gB,GAAIyjD,MAChFojD,EAA8BrpH,KAAKimE,GAKvC,GAAIojD,EAA8BhqH,OACjC,OAAO0J,KAAKs+D,eACVtlE,KAAKmvF,IAEL,MAAMwc,EAAQ2b,EAA8Bj4G,OAAOoR,GAAM0uE,EAAU17D,MAAM,EAAGozC,WAAY2gD,MAAyBv4B,EAAAnkB,kBAAkB08C,EAAmB,CAAE/mG,GAAAA,MACxJ,GAAIkrF,EAAMruG,OACT,OAAO0J,KAAKm8G,eAAexlF,MAAM,CAAEguE,MAAAA,EAAOlF,SAAU6gB,EAA8BhqH,QAAUooB,EAAAf,kBAAkBjJ,MAC5G1b,KAAKynH,IACL,MAAMC,EAAsBD,EAAclb,UAC1C,OAAO/sG,QAAQgB,IAAIknH,EAAoBjnH,IAAIb,GAAKoH,KAAKm+D,mBAAmBvlE,KACtEI,UAAKa,EAAWiZ,GAAU9S,KAAK2gH,SAASD,GAAqB1nH,KAAK,IAAMR,QAAQ0B,OAAO4Y,GAAS,IAAMta,QAAQ0B,OAAO4Y,SAO9H,OAAOta,QAAQyB,aAAQJ,GAGhBkG,SAASw+D;AAChB,OAAOv+D,KAAKs+D,aAAY,GACtBtlE,KAAKmvF,GACL3vF,QAAQgB,IAAI2uF,EAAU9/E,OAAOy1D,GAASS,EAAWryB,KAAKo1D,GAAoB,IAAIrZ,EAAAlkB,+BAA+BjG,EAAM+B,WAAY/B,EAAMV,SAAS0C,SAASh5D,OAAO,IAAImhF,EAAAlkB,+BAA+Bu9B,EAAiBzhC,WAAYyhC,EAAiBxhC,YAC7OrmE,IAAIqkE,GAAS99D,KAAKo+D,UAAUN,GAAO,MACrC9kE,KAAK,SAAMa,EAAW,SAAMA,GAG/BkG,UAAUm9D,EAA4B2B,GAAQ,GAE7C,OADA7+D,KAAKw/D,WAAW2V,MAAM,uCAAwCjY,EAAU2C,WAAWpmD,IAC5EzZ,KAAKm+G,wBAAwBn+G,KAAKs+D,aAAY,GACnDtlE,KAAKmvF,IACL,MAAMy4B,EAAuBz4B,EAAU9/E,OAAOzP,GAAKqvF,EAAAnkB,kBAAkBlrE,EAAEinE,WAAY3C,EAAU2C,aAAa,GAC1G,OAAI+gD,EACI5gH,KAAK6gH,iCAAiCD,EAAsBz4B,GAAWnvF,UAAKa,EAAW8B,GAASnD,QAAQ0B,OAAO8F,KAAKy/G,WAAW9jH,KAE/HnD,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,GAAgB,KAAqC6I,EAAUE,SAAS+kC,aAAejlC,EAAUE,SAASpmE,WAK3J+I,eAAe+9D,EAAwBvgE,GAGtC,OAFAyC,KAAKw/D,WAAW2V,MAAM,4CAA6CrX,EAAM+B,WAAWpmD,IACpFqkD,EAAMvgE,SAAWA,EACVyC,KAAKkgH,8BAA8BpiD,GACxC9kE,KAAK8nH,IACL9gH,KAAKi9G,cAAch3C,aACZ66C,IAIF/gH,8BAA8B+9D,GACrC,IAAKA,EAAMvgE,SACV,OAAO/E,QAAQyB,QAAQ6jE,GAExB,MAAMijD,EAAe5oH,EAAKwB,KAAKmkE,EAAMnlE,SAASunC,OAAQ;CACtD,OAAOgmC,EAAIlsE,SAAS+mH,EAAc,QAChC/nH,KAAKqrD,GAAO43D,EAAc53D,IAC1BrrD,KAAK,EAAGokE,SAAAA,KAAehC,EAAA1+C,OAAO0gD,EAAU,CAAEu1C,WAAY70C,EAAMvgE,YAC5DvE,KAAKokE,GAAY8I,EAAI9rE,UAAU2mH,EAAc5lH,KAAKsD,UAAU2+D,EAAU,KAAM,QAC5EpkE,KAAK,IAAM8kE,GAGN/9D,YAAYiiG,GACnB,OAAOhiG,KAAKghH,2BAA2Bhf,GACrChpG,KAAKsoG,GAAoBA,EAAqC,CAAE7nF,GAAI6nF,EAAiBzhC,WAAWziB,KAAMwnB,qBAAsB08B,EAAiB18B,qBAAsBF,YAAa48B,EAAiB58B,aAAgB,MAG5M3kE,qBAAqB+9D,GAC5B,OAAIA,EAAM+B,WAAWziB,KACbp9C,KAAKihH,yBAAyBnjD,EAAM+B,WAAWziB,MACpDpkD,KAAKsoG,GAAoBA,GAAsCthG,KAAKghH,2BAA2BljD,EAAM+B,WAAWpmD,KAE5GzZ,KAAKghH,2BAA2BljD,EAAM+B,WAAWpmD,IAGjD1Z,yBAAyBq9C,GAChC,OAAOp9C,KAAKm8G,eAAexlF,MAAM,CAAEyuE,IAAK,CAAChoD,GAAOqiD,SAAU,GAAK/gF,EAAAf,kBAAkBjJ,MAAM1b,KAAKynH,GAAiBA,EAAclb,UAAU,IAG9HxlG,2BAA2B/I,GAClC,OAAOgJ,KAAKm8G,eAAexlF,MAAM,CAAEguE,MAAO,CAAC3tG,GAAOyoG,SAAU,GAAK/gF,EAAAf,kBAAkBjJ,MAAM1b,KAAKynH,GAAiBA,EAAclb,UAAU,IAGhIxlG,WAAWmhH,GAClB,MAAMpuG,EAASpK,MAAMC,QAAQu4G,GAAiBA,EAAgB,CAACA,GAC/D,OAAsB,IAAlBpuG,EAAOxc,OACHwc,EAAO,aAAchU,MAAegU,EAAO,GAAK,IAAIhU,MAAcgU,EAAO,IAE1EA,EAAO5I,OAAc,CAACi3G,EAAsBC,IAC3C,IAAItiH,MAAM,GAAGqiH,EAActiH,UAAUsiH,EAActiH,QAAU,IAAM,KAAKuiH,aAAwBtiH,MAAQsiH,EAAaviH,QAAUuiH,KACpI,IAAItiH,MAAM;AAGNiB,iCAAiCm9D,EAA4BirB,GACpE,OAAOnoF,KAAKqhH,sBAAsBnkD,GAChClkE,KAAK,KACL,MAAMsoH,EAAmBthH,KAAKuhH,gCAAgCrkD,EAAWirB,GACzE,OAAIm5B,EAAiBhrH,OACb0J,KAAKwhH,oBAAoBtkD,EAAWokD,EAAkBn5B,GAEvDnoF,KAAKwhH,oBAAoBtkD,EAAW,GAAIirB,KAE/CnvF,KAAK,IAAMgH,KAAKyhH,uBAAuBvkD,GACvCvhE,IACCqE,KAAKyhH,uBAAuBvkD,EAAW,IAAI8+C,EAAyBrgH,aAAiBmD,MAAQnD,EAAMkD,QAAUlD,EAnkBtF,UAokBhBnD,QAAQ0B,OAAOyB,KAIlBoE,oBAAoBm9D,EAA4BwkD,EAA+Cv5B,GACtG,MAAMw5B,EAAa3hH,KAAK4hH,cAAc1kD,EAAWirB,GACjD,GAAIw5B,EAAWrrH,OAAQ,CACtB,MAAMurH,EAAsBF,EAAWt5G,OAAOy5G,GAAa5kD,IAAc4kD,IAAgE,IAAnDJ,EAA2B//G,QAAQmgH,IACzH,GAAID,EAAoBvrH,OACvB,OAAOkC,QAAQ0B,OAAO,IAAI4E,MAAMkB,KAAK+hH,0BAA0B7kD,EAAW2kD,KAG5E,OAAOrpH,QAAQgB,IAAI,CAACwG,KAAKgiH,mBAAmB9kD,MAAewkD,EAA2BjoH,IAAIsD,GAAKiD,KAAKiiH,YAAYllH,MAAM/D,KAAK,SAAMa,GAG1HkG,0BAA0Bm9D,EAA4BykD;AAC7D,OAA0B,IAAtBA,EAAWrrH,OACP29D,EAAII,SAAS,GAAwB,KAC3C6I,EAAUE,SAAS+kC,aAAejlC,EAAUE,SAASpmE,KAAM2qH,EAAW,GAAGvkD,SAAS+kC,aAAewf,EAAW,GAAGvkD,SAASpmE,MAEhG,IAAtB2qH,EAAWrrH,OACP29D,EAAII,SAAS,GAAsB,KACzC6I,EAAUE,SAAS+kC,aAAejlC,EAAUE,SAASpmE,KAAM2qH,EAAW,GAAGvkD,SAAS+kC,aAAewf,EAAW,GAAGvkD,SAASpmE,KAAM2qH,EAAW,GAAGvkD,SAAS+kC,aAAewf,EAAW,GAAGvkD,SAASpmE,MAEtLi9D,EAAII,SAAS,GAA2B,KAC9C6I,EAAUE,SAAS+kC,aAAejlC,EAAUE,SAASpmE,KAAM2qH,EAAW,GAAGvkD,SAAS+kC,aAAewf,EAAW,GAAGvkD,SAASpmE,KAAM2qH,EAAW,GAAGvkD,SAAS+kC,aAAewf,EAAW,GAAGvkD,SAASpmE,MAGrL+I,gCAAgCm9D,EAA4BirB,EAA8B+5B,EAA6B,IAC9H,IAAoC,IAAhCA,EAAQvgH,QAAQu7D,GACnB,MAAO,GAERglD,EAAQjrH,KAAKimE,GACb,MAAMilD,EAAiBjlD,EAAUE,SAASolC,cAAgBtlC,EAAUE,SAASolC,cAAgB,GAC7F,GAAI2f,EAAe7rH,OAAQ,CAC1B,MAAMgrH,EAAmBn5B,EAAU9/E,OAAOjS,GAAK+rH,EAAej2E,KAAKzyB,GAAMwuE,EAAAnkB,kBAAkB,CAAErqD,GAAAA,GAAMrjB,EAAEypE,cAC/FuiD,EAA4C,GAClD,IAAK,MAAMC,KAAmBf,EAC7Bc,EAAuBnrH,QAAQ+I,KAAKuhH,gCAAgCc,EAAiBl6B,EAAW+5B,IAEjG,MAAO,IAAIZ,KAAqBc,GAEjC,MAAO,GAGAriH,cAAcm9D,EAA4BirB,GACjD,OAAOA,EAAU9/E,OAAOzP,GAAKA,EAAEwkE,SAAS0H,uBAAyBlsE,EAAEwkE,SAAS0H,sBAAsB54B,KAAKzyB,GAAMwuE,EAAAnkB,kBAAkB,CAAErqD,GAAAA,GAAMyjD,EAAU2C,cAG1I9/D,YAAYm9D;AACnB,OAAOl9D,KAAKqhH,sBAAsBnkD,GAChClkE,KAAK,IAAMgH,KAAKgiH,mBAAmB9kD,IACnClkE,KAAK,IAAMgH,KAAKyhH,uBAAuBvkD,GACvCvhE,IACCqE,KAAKyhH,uBAAuBvkD,EAAW,IAAI8+C,EAAyBrgH,aAAiBmD,MAAQnD,EAAMkD,QAAUlD,EA1nBtF,UA2nBhBnD,QAAQ0B,OAAOyB,KAIlBoE,sBAAsBm9D,GAC7B,OAAO1kE,QAAQyB,QAAQisE,EAAI5tE,OAAO4kE,EAAUvkE,SAASunC,SACnDlnC,KAAKV,GAAUA,EAAS,KAAOE,QAAQ0B,OAAO,IAAI4E,MAAMm1D,EAAII,SAAS,GAAa,SAClFr7D,KAAK,KACLgH,KAAKw/D,WAAWI,KAAK,0BAA2B1C,EAAU2C,WAAWpmD,IACrEzZ,KAAK08G,sBAAsB3kG,KAAKmlD,EAAU2C,cAIrC9/D,mBAAmB+9D,GAC1B,IAAI5jD,EAAUla,KAAKu8G,uBAAuBr8G,IAAI49D,EAAM+B,WAAWpmD,IAQ/D,OAPKS,IAEJA,EAAU6xB,EAAAvtB,wBAAwBzW,GAAS/H,KAAKsiH,oBAAmB,GACjEtpH,KAAKupH,GAAkBviH,KAAKm/G,kBAAkBoD,EAAel6G,OAAOm6G,GAAKv6B,EAAAnkB,kBAAkB0+C,EAAE3iD,WAAY/B,EAAM+B,eAC/G7mE,KAAK,KAAQgH,KAAKu8G,uBAAuBj8G,OAAOw9D,EAAM+B,WAAWpmD,OACnEzZ,KAAKu8G,uBAAuBn8G,IAAI09D,EAAM+B,WAAWpmD,GAAIS,IAE/CA,EAGAna,6BAA6Bm9D,EAA4BvhE;AAC5DA,EACHqE,KAAKw/D,WAAW7jE,MAAM,iCAAkCuhE,EAAU2C,WAAWpmD,GAAI9d,EAAMkD,UAEvFmB,KAAKw/D,WAAWI,KAAK,sCAAuC1C,EAAU2C,WAAWpmD,IAE7EyjD,EAAU2C,WAAWziB,YAClBp9C,KAAKm8G,eAAesG,gBAAgBvlD,EAAUE,SAAS+G,UAAWjH,EAAUE,SAASpmE,KAAMkmE,EAAUE,SAAS0C,QAAO,cAG7H9/D,KAAKw+G,gBAAgB,6BAA8Bv2B,EAAAzjB,+BAA+BtH,QAAYrjE,EAAW8B,GACzG,MAAM+mH,EAAY/mH,EAAQA,aAAiBqgH,EAA2BrgH,EAAM5B,KA3pBxD,eA2pB+EF,EACnGmG,KAAK28G,yBAAyB5kG,KAAK,CAAE8nD,WAAY3C,EAAU2C,WAAYlkE,MAAO+mH,IAG/E3iH,aAAauS,EAA6B,MACzC,MAAMqwG,EAAyC,GAU/C,OARa,OAATrwG,GAAqB,IAAJA,GACpBqwG,EAAS1rH,KAAK+I,KAAK4iH,uBAAuB5pH,KAAK,KAAMJ,GAAKJ,QAAQ0B,OAAO,IAAI8hH,EAAyBh8G,KAAKy/G,WAAW7mH,GAAGiG,QA5qBtF,qBA+qBvB,OAATyT,GAAqB,IAAJA,GACpBqwG,EAAS1rH,KAAK+I,KAAKsiH,oBAAmB,GAAMtpH,KAAK,KAAMJ,GAAKJ,QAAQ0B,OAAO,IAAI8hH,EAAyBh8G,KAAKy/G,WAAW7mH,GAAGiG,QA/qBvF,mBAkrB9BrG,QAAQgB,IAAuBmpH,GAAU3pH,KAAKogF,EAAA3vE,QAASqJ,GAAUta,QAAQ0B,OAAO8F,KAAKy/G,WAAW3sG,KAGhG/S,uBACPC,KAAKw/D,WAAW2V,MAAM;CACtB,MAAM0tC,EAA0BrqH,QAAQgB,IAAI,CAC3CwG,KAAKk2G,eAAel2G,KAAK88G,qBAAoB,MAC1C98G,KAAKu/D,mBAAmBsmB,2BACzBpsF,IAAKtB,GAAS6H,KAAKk2G,eAAe/9G,EAAI,MACtCa,KAAMmoB,IACR,MAAMhrB,EAASgrB,EAAQjX,OAAO,CAAC2gG,EAAM59F,IAAY49F,EAAKnhG,OAAOuD,GAAU,IAEvE,OADAjN,KAAKw/D,WAAW2V,MAAM,6BAA8Bh/E,EAAOG,QACpDH,IAER,GAAI6J,KAAKu/D,mBAAmBwkB,QAC3B,OAAO8+B,EAIR,MAAMC,EAA6B9iH,KAAK+iH,6BACtC/pH,KAAKgqH,GACDA,EAAwB1sH,OACpB0J,KAAKk2G,eAAel2G,KAAKijH,wBAAuB,GACrDjqH,KAAK7C,IACL6J,KAAKw/D,WAAW2V,MAAM,iCAAkCh/E,EAAOG,QACxDH,EAAOkS,OAAO8B,GAAK64G,EAAwB92E,KAAKzyB,GAAMwuE,EAAAnkB,kBAAkB35D,EAAE01D,WAAY,CAAEpmD,GAAAA,QAG1F,IAGV,OAAOjhB,QAAQgB,IAAI,CAACqpH,EAAyBC,IAC3C9pH,KAAK,EAAEkqH,EAAkBC,KAAyB,IAAID,KAAqBC,IAGtEpjH,sBAAsB8/G,EAAoBvtG,GACjD,OAAO9Z,QAAQgB,IAAI,CAClBwG,KAAKk2G,eAAe2J,EAAYvtG,MAC7BtS,KAAKu/D,mBAAmBqmB,oBAAoBnsF,IAAKgL,GAAMzE,KAAKk2G,eAAezxG,EAAC,MAC7EzL,KAAMmoB,GAAYA,EAAQjX,OAAO,CAAC2gG,EAAM59F,IAAY49F,EAAKnhG,OAAOuD,GAAU,KAGtElN,mBAAmBqjH,GAE1B,OADApjH,KAAKw/D,WAAW2V,MAAM;AACf38E,QAAQgB,IAAI,CAACwG,KAAKqjH,2BAA4BrjH,KAAKsjH,sBAAsBtjH,KAAK0lF,eAAc,KACjG1sF,KAAK,EAAEuqH,EAAahlD,MAEpB,GADAA,EAAaA,EAAWl2D,OAAOzP,IAAM2qH,EAAY,IAAIt7B,EAAAlkB,+BAA+BnrE,EAAEinE,WAAYjnE,EAAEwkE,SAAS0C,SAASvhE,QAClH6kH,EAAiB,CAEpB7kD,EADyC0pB,EAAA7jB,iBAAiB7F,EAAY3lE,GAAKA,EAAEinE,YACpDpmE,IAAIgL,GAAKA,EAAEmD,KAAK,CAAC1C,EAAGgC,IAAM0tG,EAAOqB,SAAS/wG,EAAEk4D,SAAS0C,QAAS54D,EAAEk2D,SAAS0C,UAAU,IAG7G,OADA9/D,KAAKw/D,WAAW2V,MAAM,2BAA4B5W,EAAWjoE,QACtDioE,IAIFx+D,eAAe0T,EAAcnB,GACpC,MAAMkxG,EAAU,IAAIz3E,EAAAxqB,QAAa,IACjC,OAAO2kD,EAAI7sE,QAAQoa,GACjBvW,MAAOvB,IACP,GAAmB,WAAfA,EAAM5B,KACT,MAAM4B,EAEP,MAAiB,KAEjB3C,KAAKyqH,GAAqBjrH,QAAQgB,IAAqBiqH,EAAkBhqH,IAAIiqH,GAAmBF,EAAQhkG,MAAM,IAAMxf,KAAK+1G,cAAc2N,EAAiBjwG,EAAMnB,OAC9JtZ,KAAKulE,GAAcA,EAAWl2D,OAAOzP,GAAKA,GAAKA,EAAEinE,aAG5C9/D,cAAc8/G,EAAoBpsG,EAAcnB,GACvD,GAAQ,IAAJA,GAA2D,IAA5ButG,EAAWl+G,QAAQ,KACrD,OAAOnJ,QAAQyB,QAAQ,MAExB,MAAM8lH,EAAgB5nH,EAAKwB,KAAK8Z,EAAMosG,GACtC,OAAO35C,EAAI7sE,QAAQ0mH,GACjB/mH,KAAKO,IAhuBT,SAAsBwmH,GACrB,MAAM4C,EAAW,CAChBz8C,EAAIlsE,SAAS7B,EAAKwB,KAAKomH,EAAe,gBAAiB,QACrD/mH,KAAKqrD,GAAO43D,EAAc53D,IAC5B6hB,EAAIlsE,SAAS7B,EAAKwB,KAAKomH,EAAe,oBAAqB,QACzD/mH,UAAKa,EAAWf,GAAoB,WAAbA,EAAIiB,KAAoBvB,QAAQ0B,OAAepB,GAAO,MAC7EE,KAAKqrD,GAAOlpD,KAAKC,MAAMipD,KAG1B,OAAO7rD,QAAQgB,IAASmpH,GAAU3pH,KAAK,GAAIokE,SAAAA,EAAU7/D,SAAAA,GAAYvB,MACzD;AACNohE,SAAUumD,EAAAtkD,iBAAiBjC,EAAUphE,GACrCuB,SAAAA,MAotBkBqmH,CAAa7D,GAC7B/mH,KAAK,EAAGokE,SAAAA,EAAU7/D,SAAAA,MAClB,MAAMkkG,EAASloG,EAAS8O,OAAO3O,GAAS,yBAAyBy4B,KAAKz4B,IAAQ,GACxEmqH,EAAYpiB,EAASr+D,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKomH,EAAete,IAAW,KAClEC,EAAYnoG,EAAS8O,OAAO3O,GAAS,4BAA4By4B,KAAKz4B,IAAQ,GAC9EoqH,EAAepiB,EAAYt+D,EAAA3D,IAAIlnC,KAAKJ,EAAKwB,KAAKomH,EAAere,IAAc,KAC3E7hC,EAAa,CAAEpmD,GAAIwuE,EAAA/jB,sBAAsB9G,EAAS+G,UAAW/G,EAASpmE,OACtE8mE,EAAyB,CAAExrD,KAAAA,EAAMutD,WAAAA,EAAYzC,SAAAA,EAAU7/D,SAAAA,EAAU5E,SAAUyqC,EAAA3D,IAAIlnC,KAAKwnH,GAAgB8D,UAAAA,EAAWC,aAAAA,GAIrH,OAHIvmH,GACHyC,KAAKigH,YAAYniD,EAAOvgE,GAElBugE,KAER9kE,UAAKa,EAAW,IAAM,MAGjBkG,YAAY+9D,EAAwBvgE,GAC3CugE,EAAMvgE,SAAWA,EACjBugE,EAAM+B,WAAWziB,KAAO7/C,EAASkc,GAGlC1Z,yCACOC,KAAK+jH,oCACL/jH,KAAKgkH,2BAGJjkH,oCACP,MAAMwjH,QAAoBvjH,KAAKqjH,2BACzB9kD,QAAmBv+D,KAAKsjH,sBAAsBtjH,KAAK0lF,eAAc,GACjEyC,EAAyB,IAAIhoF,IACnC,IAAK,MAAMvH,KAAK2lE,EACVglD,EAAY,IAAIt7B,EAAAlkB,+BAA+BnrE,EAAEinE,WAAYjnE,EAAEwkE,SAAS0C,SAASvhE,QACrF4pF,EAAU9nF,IAAIzH,EAAEinE,WAAWpmD,GAAGkQ,eAGhC,MAAM26C,EAAmC2jB,EAAA7jB,iBAAiB7F,EAAY3lE,GAAKA,EAAEinE,kBACvErnE,QAAQgB,IAAI8qE,EAAY7qE,IAAIyqB,MAAMtrB;AACvC,MAAMoN,EAASpN,EAAEgP,KAAK,CAAC1C,EAAGgC,IAAM0tG,EAAOqB,SAAS/wG,EAAEk4D,SAAS0C,QAAS54D,EAAEk2D,SAAS0C,UAAU,GACpFqoB,EAAUj/E,IAAIlD,EAAO65D,WAAWpmD,GAAGkQ,sBACjC3pB,KAAKm9G,mBAAmB8G,cAAcj+G,MAG9C,MAAMk+G,EAA8B3lD,EAAWl2D,OAAOzP,GAAK2qH,EAAY,IAAIt7B,EAAAlkB,+BAA+BnrE,EAAEinE,WAAYjnE,EAAEwkE,SAAS0C,SAASvhE,cACtI/F,QAAQgB,IAAI0qH,EAASzqH,IAAIb,GAAKoH,KAAKw/G,2BAA2B5mH,KAG7DmH,2BACP,OAAOC,KAAKsjH,sBAAsBtjH,KAAK0lF,eAAc,GACnD1sF,KAAKulE,IACL,MAAM2lD,EAA8B,GAG9B5/C,EAAmC2jB,EAAA7jB,iBAAiB7F,EAAY3lE,GAAKA,EAAEinE,YAG7E,OAFAqkD,EAASjtH,QAAQmiF,EAAA3vE,QAAQ66D,EAAY7qE,IAAIgL,GAAKA,EAAEmD,KAAK,CAAC1C,EAAGgC,IAAM0tG,EAAOqB,SAAS/wG,EAAEk4D,SAAS0C,QAAS54D,EAAEk2D,SAAS0C,UAAU9nE,MAAM,MAEvHQ,QAAQgB,IAAI0qH,EAASzqH,IAAIyjE,GAAal9D,KAAK69G,gBAAgB3gD,EAAW,gBAC3ElkE,KAAK,SAAMa,GAGRkG,2BAA2Bm9D,GAClC,OAAOl9D,KAAK69G,gBAAgB3gD,EAAW,eACrClkE,KAAK,IAAMgH,KAAKmkH,0BAA0BZ,UAAsBA,EAAY,IAAIt7B,EAAAlkB,+BAA+B7G,EAAU2C,WAAY3C,EAAUE,SAAS0C,SAASvhE,SACjKvF,KAAK,SAAMa,GAGNkG,gBAAgBm9D,EAA4B5qD,GAEnD,OADAtS,KAAKw/D,WAAW2V,MAAM,YAAY7iE,wBAA4B4qD,EAAU2C,WAAWpmD,GAAIyjD,EAAUvkE,SAASunC;AACnGgmC,EAAIxtE,OAAOwkE,EAAUvkE,SAASunC,QAAQlnC,KAAK,IAAMgH,KAAKw/D,WAAWI,KAAK,oBAAqB1C,EAAU2C,WAAWpmD,GAAIyjD,EAAUvkE,SAASunC,SAGvIngC,cAAc8/D,GACrB,OAAO7/D,KAAKokH,kBAAkBvkD,GAAY7mE,KAAKuqH,GAAsC,IAAvBA,EAAYjtH,QAGnEyJ,qBAAqB4uF,GAC5B,OAAO3uF,KAAKmkH,0BAA0BE,IACrC,MAAMd,EAAwB,GAC9B,IAAK,MAAM1jD,KAAc8uB,EAClB01B,EAAexkD,EAAWthE,QAC/BglH,EAAYtsH,KAAK4oE,EAAWthE,OAG9B,OAAOglH,IAIDxjH,kBAAkBw+D,GACzB,MAAM6mC,EAAwC7mC,EAAW9kE,IAAIb,GAAK,IAAIqvF,EAAAlkB,+BAA+BnrE,EAAEinE,WAAYjnE,EAAEwkE,SAAS0C,UAC9H,OAAO9/D,KAAKmkH,0BAA0BZ,GAAenoD,EAAA1+C,OAAO6mG,EAAane,EAAIl7F,OAAO,CAAC/T,EAAQsjB,KAAStjB,EAAOsjB,EAAGlb,QAAS,EAAapI,GAAW,MAG1I4J,iBAAiBmoF,GACxB,OAAOloF,KAAKmkH,0BAAgCZ,UAAsBA,EAAYr7B,EAAoB3pF,QAG3FwB,2BACP,OAAOC,KAAKmkH,0BAA0BZ,GAAeA,GAG9CxjH,gCAAmCQ,GAC1C,aAAaP,KAAKg9G,uBAAuBx9F,MAAM,KAC9C,IAAIrpB,EAAmB,KACvB,OAAO+vE,EAAIlsE,SAASgG,KAAK+8G,gBAAiB,QACxC/jH,UAAKa,EAAWf,GAAoB,WAAbA,EAAIiB,KAAoBvB,QAAQyB,QAAQ,MAAQzB,QAAQ0B,OAAOpB,IACtFE,KAAgCqrD,IAAS,IAAM,OAAOlpD,KAAKC,MAAMipD,GAAQ,MAAOzrD,GAAK,MAAO,MAC5FI,KAAKuqH,IAAiBptH,EAASoK,EAAGgjH,GAAqBA,IACvDvqH,KAAKuqH;AACL,GAAwC,IAApC5lH,OAAOC,KAAK2lH,GAAajtH,OAC5B,OAAO4vE,EAAIxtE,OAAOsH,KAAK+8G,iBACjB,CACN,MAAM14D,EAAMlpD,KAAKsD,UAAU8kH,GAC3B,OAAOr9C,EAAI9rE,UAAU4F,KAAK+8G,gBAAiB14D,MAG5CrrD,KAAK,IAAM7C,KAIf4J,sBACC,MAAM5I,GAAM,IAAID,MAAO8hB,UAOvB,QALKhZ,KAAKskH,oBAAsBntH,EAAM6I,KAAKq8G,oBAAsB,OAChEr8G,KAAKskH,mBAAqBtkH,KAAKukH,oBAC/BvkH,KAAKq8G,oBAAsBllH,GAGrB6I,KAAKskH,mBAGLvkH,oBAGP,OAFAC,KAAKw/D,WAAW2V,MAAM,mDAEfn1E,KAAKm8G,eAAe19C,sBACzBzlE,KAAK7C,IACL6J,KAAKw/D,WAAW2V,MAAM,yDAAyDh/E,EAAOG,2CAC/EH,GACL2C,IACFkH,KAAKw/D,WAAW2V,MAAM,oFACf,KAKV8tC,8BAIC,OAHKjjH,KAAK48G,2BACT58G,KAAK48G,yBAA2BzkH,EAAKkyB,UAAUlyB,EAAKwB,KAAK2jD,EAAAha,qBAAqBG,EAAS,IAAK,KAAM,SAAU,uBAEtGzjC,KAAK48G,yBAIb4H;AAIC,OAHKxkH,KAAK68G,+BACT78G,KAAK68G,6BAA+B1kH,EAAKkyB,UAAUlyB,EAAKwB,KAAK2jD,EAAAha,qBAAqBG,EAAS,IAAK,KAAM,QAAS,4BAEzGzjC,KAAK68G,6BAGL98G,6BACP,OAAOmmE,EAAIlsE,SAASgG,KAAKwkH,4BAA6B,QACpDxrH,KAAKmB,GAAQ8tF,EAAA1iB,uBAAuBprE,EAAM6F,KAAK6iG,eAAerb,SAAS/tF,IAAI4vB,GAAOA,EAAIryB,OAGjF+I,wBAA2Bma,GAClC,OAAO,IAAI1hB,QAAQ,CAACC,EAAGG,IAAMshB,EAAQlhB,KAAK7C,GAAUsC,EAAEtC,GAASwF,GAAS/C,EAAE+C,KAGnEoE,gBAAgByZ,EAAmBirG,EAAoBhe,EAAmB9qG,GACjF,MAAM+mH,EAAY/mH,EAAQA,aAAiBqgH,EAA2BrgH,EAAM5B,KA75BxD,eA65B+EF,EAgCnGmG,KAAK28F,iBAAiB+J,UAAUltF,EAAW4hD,EAAA1+C,OAAO+nG,EAAe,CAAEpsD,SAAU18D,EAAO8qG,SAAAA,EAAUic,UAAAA,OAj5BnFxG,EAA0BrxC,EAAA,CA4BpCC,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAAud,EAAAld,0BACAL,EAAA,EAAA+S,EAAA9H,aACAjL,EAAA,EAAAV,EAAAT,SAAS+6C,EAAAv6C,mBACTW,EAAA,EAAA28B,EAAAxJ,mBACAnzB,EAAA,EAAA48B,EAAAve,kBAjCU+yB,GAAAx9G,EAAAw9G,2BAAAA,mJC3Fb,MAAMyI,EAAeC,EAAM/I,QACrBgJ,EAAcD,EAAM1rG,OAiBbxa,EAAAomH,IAAM5gG,MAAO6gG,EAAiBzrH;AAC1C,MAAM0rH,EAAOC,EAAUD,OACjB33F,EAAmB,GACnBT,EAAQ,IAAIp0B,QAAiByB,IAClC+qH,EAAKrrG,GAAG,MAAO,IAAM1f,EAAQy9B,OAAOhuB,OAAO2jB,OAE5C23F,EAAKrrG,GAAG,OAAS2T,GAAkBD,EAAOp2B,KAAKq2B,IAC/C,IAAK,IAAIl3B,EAAI,EAAGA,EAAIkD,EAAMhD,OAAQF,IAAK,CACtC,MAAMmC,EAAOe,EAAMlD,GACnB4uH,EAAKthF,MAAM,CAAE1sC,KAAMuB,EAAKJ,MAAQI,EAAKkF,UAItC,OAFAunH,EAAKE,iBACCjW,EAAK3wD,UAAUlmD,EAAGgC,UAAlB60G,CAA6B8V,QAAen4F,GAC3Cm4F,GAGKrmH,EAAAm9G,QAAU33F,MAAOihG,EAAqBhF,EAAqBlwG,EAA2B,GAAIlI,KACtG,UACOq9G,EAAWD,EAAahF,EAAalwG,EAASlI,GACnD,MAAOpM,GACJA,EAAM8e,WAAW4qG,SAAS,6BACvBV,EAAaQ,EAAahF,EAAalwG,EAASlI,KAK5CrJ,EAAAwa,OAAS,CAAC8gG,EAAoBt7B,IACnC,IAAIlmF,QAAgB0rB,MAAOjqB,EAASC,KAC1C,IACC,IAAI4R,GAAgB,EAOpB,SANMw5G,EAActL,EAAY,IAAIvnF,OAAOisD,GAAW,CAAC6mC,EAAmBprH,KACrEhC,EAAKkyB,UAAUk7F,KAAeptH,EAAKkyB,UAAUq0D,KAChD5yE,GAAO,EACP7R,EAAQE,OAGL2R,EACJ,MAAM,IAAIhN,MAAM,uBAA0B4/E,GAE1C,MAAO/iF,GACJA,EAAM8e,WAAW4qG,SAAS,sBAC7BR,EAAY7K,EAAYt7B,GAAU1lF,KAAKiB,GAASiD,MAAMhD,GAEtDA,EAAOyB,MAMX,MAAM2pH,EAAgBphG,MAAO6gG,EAAiB1zF,EAAe/xB,IACrD,IAAI9G,QAAc,CAACyB,EAASC,KAClC,MAAMsrH,EAAYP,EAAUpJ,UACtB4J,EAAQ9pH,IACb6pH,EAAUh5F,UACVtyB,EAAOyB,IAER6pH,EAAUh6G,KAAK,QAASi6G,GACxBD,EAAU7rG,GAAG,QAASuK,MAAOokC,EAAQ16B,EAAQ5hB,KAC5C,MAAMhV,EAAOsxD,EAAOtxD,KAChBq6B,EAAMc,KAAKn7B,GACd0uH,EAAY93F,GAAQ50B,KAAMmB,IACzBmF,EAAStI,EAAMmD,GACf6R,MACE9O,MAAMuoH,IAET73F,EAAOjU,GAAG,MAAO,IAAM3N,KACvB4hB,EAAOrB,YAGTi5F,EAAU7rG,GAAG,SAAU1f,GACvB7B,EAAG0pD,iBAAiBijE,GAASnrE,KAAK4rE,KAI9BE,EAAe93F,GACb,IAAIp1B,QAAQ,CAACyB,EAASC,KAC5B,MAAMyrH,EAAqB,GAC3B/3F,EAAOjU,GAAG,QAASzf,GACnB0zB,EAAOjU,GAAG,MAAO,IAAM1f,EAAQy9B,OAAOhuB,OAAOi8G,KAC7C/3F,EAAOjU,GAAG,OAASxf,GAASwrH,EAAS1uH,KAAKkD;GAItCirH,EAAalhG,MAAO6gG,EAAiB/K,EAAoB/pG,EAA2B,GAAIlI,IACtF,IAAIvP,QAAc,CAACyB,EAASC,KAClC,MAAMmgH,EAAkB,IAAI5nF,OAAOxiB,EAAQ6rG,WAAa,IAAI7rG,EAAQ6rG,aAAe,IAC7E0J,EAAYP,EAAUpJ,UACtB4J,EAAQ9pH,IACb6pH,EAAUh5F,UACVtyB,EAAOyB,IAER6pH,EAAUh6G,KAAK,QAASi6G,GACxBD,EAAU7rG,GAAG,QAASuK,MAAOokC,EAAQ16B,EAAQ5hB,KAC5C,MAAM45G,EAAY,KACjBh4F,EAAOjU,GAAG,MAAO,IAAM3N,KACvB4hB,EAAOrB,UAGFs5F,EAAU1tH,EAAKkyB,UAAUi+B,EAAOtxD,MACtC,GAAI+Q,EAAMG,0BAA4BmyG,EAAgBloF,KAAK0zF,GAC1D,OAAOD,IAGR,MAAMtL,EAAWuL,EAAQrnH,QAAQ67G,EAAiB,IAC5CE,EAAiBpiH,EAAKwB,KAAKqgH,EAAYM,GAC7C,GAAI,MAAMnoF,KAAKmoF,GACd,OAAOp3D,EAAA7lD,OAAOk9G,GAAgBvhH,KAAK4sH,GAGpC,MAAMtY,EAAUn1G,EAAK4zB,QAAQuuF,GACvBM,EAAgBziH,EAAKwB,KAAKqgH,EAAY1M,GAC5C,GAA0C,IAAtCsN,EAAcj5G,QAAQq4G,GACzB,OAAOyL,EAAK,IAAI3mH,MAAMm1D,EAAII,SAAS,EAAgB,KAAuCimD,WAGrFp3D,EAAA7lD,OAAOu9G,OAAe/gH,GAE5B,MAAMisH,EAAU1tH,EAAGipD,kBAAkBk5D,EAAgB,CAAE78D,KAAM4K,EAAO5K,OACpEooE,EAAQt6G,KAAK,QAAS,IAAMQ,KAC5B85G,EAAQt6G,KAAK,QAASi6G,GACtB73F,EAAOgsB,KAAKksE,KAEbN,EAAUh6G,KAAK,SAAUvR,GACzB7B,EAAG0pD,iBAAiBijE,GAASnrE,KAAK4rE,KAQvB9mH,EAAAqnH,wBAA0B,KAChC7iC,EAAAztB,QAASstC,kBAAiBplG,OAAA+e,OAAA,CAC/BumF,WAAYpoG,QAAQC,IAAIkrH,aAAe,mCACvCC,QAASprH,QAAQC,IAAIorH,UAAY,GACjC/iB,WAAY,GACZgjB,mBAAoB,IAChBjjC,EAAAztB,QAAQstC,mBAAqB,IAGlC,MAAMprG,EAASitH,EACfjtH,EAAOomE,IAAMr/D,EAAAomH,IACbntH,EAAOkkH,QAAUn9G,EAAAm9G,QACjBlkH,EAAOuhB,OAASxa,EAAAwa;uJCxIjB,IAAaktG,EAAb,cAAoCztG,EAAAlE,WAQnC1U,YACwB4vF,EACOnwB,GAE9Bl7D,QAF8BtE,KAAAw/D,WAAAA,EAG9Bx/D,KAAKqmH,UAAU12B,EAAqBlb,YACpCz0E,KAAKilD,UAAU0qC,EAAqBgH,yBAAyB,IAAM32F,KAAKqmH,UAAU12B,EAAqBlb,YAAaz0E,OAG7GD,UAAUxE,GACjByE,KAAKk5F,SAAW39F,EAAOqyC,MAAQryC,EAAOqyC,KAAK04E,MAC3CtmH,KAAK45F,aAAer+F,EAAOqyC,OAAQryC,EAAOqyC,KAAK24E,gBAC/CvmH,KAAKwmH,cAAgBjrH,EAAOqyC,MAAQryC,EAAOqyC,KAAK64E,mBAGjD1mH,cAAckQ,EAA6BlI,GAC1C/H,KAAKw/D,WAAW2V,MAAM,yBAA0BllE,EAAQg2F,KAExD,MAAM/M,SAAEA,EAAQU,UAAEA,GAAc55F,KAC1B0mH,EAAQz2G,EAAQy2G,MAAQz2G,EAAQy2G,YAAcC,EAAA9tB,cAAc5oF,EAAQg2F,KAAO,GAAI,CAAE/M,SAAAA,EAAUU,UAAAA,IASjG,OAPA3pF,EAAQy2G,MAAQA,EAChBz2G,EAAQ2pF,UAAYA,EAEhB55F,KAAKwmH,gBACRv2G,EAAQ0oF,QAAUv9B,EAAA1+C,OAAOzM,EAAQ0oF,SAAW,GAAI,CAAEiuB,sBAAuB5mH,KAAKwmH,iBAGxExmH,KAAK6mH,SAAS52G,EAASlI,GAGvBhI,qBAAqBkQ,GAG5B,OADqC,WADpB+oF,EAAA59F,MAAS6U,EAAQg2F,KACV1+C,eAAwB,IAAA/uD,QAAA,CAAA0hD,EAAAC,KAAA1W,EAAA,CAAa,SAAOyW,EAAAC,WAAI,IAAA3hD,QAAA,CAAAqhG,EAAAC,KAAAr2D,EAAA,CAAa,QAAMo2D,EAAAC,MAC7ElxC,QAGP7oD,SAASkQ,EAA6BlI;AAE7C,OAAO,IAAIvP,QAAyB0rB,MAAOzrB,EAAGG,KAC7C,IAAIi+G,EAEJ,MAAMiQ,EAAW9tB,EAAA59F,MAAS6U,EAAQg2F,KAC5B8gB,EAAa92G,EAAQ+2G,cACxB/2G,EAAQ+2G,cAAc/2G,SAChBjQ,KAAKinH,eAAeh3G,GAEvBuwD,EAA6B,CAClCi5B,SAAUqtB,EAASrtB,SACnB5qD,KAAMi4E,EAASj4E,KAAOtd,SAASu1F,EAASj4E,MAA+B,WAAtBi4E,EAASv/D,SAAwB,IAAM,GACxFA,SAAUu/D,EAASv/D,SACnBpvD,KAAM2uH,EAAS3uH,KACfylC,OAAQ3tB,EAAQqC,MAAQ,MACxBqmF,QAAS1oF,EAAQ0oF,QACjB+tB,MAAOz2G,EAAQy2G,MACf/sB,oBAAoBn7D,EAAAlC,UAAUrsB,EAAQ2pF,YAAa3pF,EAAQ2pF,WAGxD3pF,EAAQ4jF,MAAQ5jF,EAAQi3G,WAC3B1mD,EAAKk5B,KAAOzpF,EAAQ4jF,KAAO,IAAM5jF,EAAQi3G,WAG1CrQ,EAAMkQ,EAAWvmD,EAAOvpD,IACvB,MAAMkwG,EAA0B3oF,EAAAnC,SAASpsB,EAAQk3G,iBAAmBl3G,EAAQk3G,gBAAkB,EAC9F,GAAIlwG,EAAI0gF,YAAc1gF,EAAI0gF,YAAc,KAAO1gF,EAAI0gF,WAAa,KAAOwvB,EAAkB,GAAKlwG,EAAI0hF,QAAkB,SACnH34F,KAAK6mH,SAASzrD,EAAA1+C,OAAO,GAAIzM,EAAS,CACjCg2F,IAAKhvF,EAAI0hF,QAAkB,SAC3BwuB,gBAAiBA,EAAkB,IAChCp/G,GAAO/O,KAAKP,EAAGG,OACb,CACN,IAAIg1B,EAA6C3W,EAET,SAApCA,EAAI0hF,QAAQ,sBACf/qE,EAAS3W,EAAI2iC,KAAKwtE,EAAAC,iBAGnB5uH,EAAE,CAAEwe,IAAAA,EAAK2W,OAAQm5B,EAAA1tB,6BAA6BzL,SAI5CjU,GAAG,QAAS/gB,GAEZqX,EAAQ4P,SACXg3F,EAAIz0G,WAAW6N,EAAQ4P,SAGpB5P,EAAQ9V,MACiB,iBAAjB8V,EAAQ9V,MAClB08G,EAAI5pF,MAAMhd,EAAQ9V,MAIpB08G,EAAI7pG,MAEJjF,EAAMgW,wBAAwB,KAC7B84F,EAAIyQ,QACJ1uH,EAAEuP,EAAAvE,gBAKL7D,mBAAmBkmG,MA7GPmgB,EAAcv7C,EAAA,CASxBC,EAAA,EAAA4lB,EAAAzC,uBACAnjB,EAAA,EAAA+S,EAAA9H,cAVUqwC;AAAA1nH,EAAA0nH,eAAAA,2TCab,MACMmB,EAAgB9tG,GAAes7C,EAAAV,SAAS,EAAgB,KAAqC56C,GAC7F+tG,EAAQzyD,EAAAV,SAAS,EAAS,KAA+E,oBAE/G,SAASozD,EAAMrqD,EAA8BsqD,GAC5C,OAAIA,EACI,GAAGtqD,EAAS+G,aAAa/G,EAASpmE,QAAQomE,EAAS0C,UAEnD,GAAG1C,EAAS+G,aAAa/G,EAASpmE,OAI3C,MAAM2wH,EAAqB,sCAE3B,SAAgBC,EAAgBnuG,GAC/B,MAAM9G,EAAUg1G,EAAmB/0F,KAAKnZ,GACxC,OAAI9G,GAAWA,EAAQ,GACf,CAACs1E,EAAAjkB,0BAA0BrxD,EAAQ,IAAKA,EAAQ,IAEjD,CAACs1E,EAAAjkB,0BAA0BvqD,QAAK5f,GALxC6E,EAAAkpH,gBAAAA,EASA,IAAaC,EAAb,MAEC9nH,YACyC+nH,EACFvoD,EACQmoB,EACHqgC,GAHH/nH,KAAA8nH,qBAAAA,EACF9nH,KAAAu/D,mBAAAA,EACQv/D,KAAA0nF,2BAAAA,EACH1nF,KAAA+nH,wBAAAA,EAG5ChoH,UAAUioH;AACLA,EAAK,wBACFhoH,KAAKioH,iBAAiBD,EAAK,mBACvBA,EAAK,yBACThoH,KAAKkoH,iBAAiBF,EAAK,iBAAkBA,EAAe,UACxDA,EAAK,2BACThoH,KAAKmoH,kBAAkBH,EAAK,uBAAwBA,EAAY,OAC5DA,EAAK,6BACThoH,KAAKgiH,mBAAmBgG,EAAK,wBACzBA,EAAK,0BACThoH,KAAKooH,gBAAgBJ,EAAK,qBACtBA,EAAgB,WAC1BpxH,QAAQie,IAAIwzG,EAAAlb,sBAAsBntG,KAAKu/D,mBAAmBqkB,QAAS5jF,KAAKu/D,mBAAmBmmB,eAAiB1lF,KAAKu/D,mBAAmBmmB,oBAAiB7rF,IAI/IkG,iBAAiBuoH,GACxB,OAAOplE,EAAA9oD,UAAU4F,KAAKu/D,mBAAmB+lB,kBAAmBgjC,EAActwH,MAAM,EAAG,KAG5E+H,qBAAqBwoH,EAAuBzjB,GACnD,IAAIvmC,QAAmBv+D,KAAK0nF,2BAA2BppB,aAAY,GAEnE,MAAMkqD,EAAa,CAAC,0BAA2B,WAAY,UAAW,SAAU,YAAa,aAAc,UAAW,kBAAmB,QAAS,oBAAqB,oBACvK,GAAI1jB,GAAyB,KAAbA,EAAiB;AAChC,GAAI0jB,EAAW7mH,QAAQmjG,EAASn7E,eAAiB,EAEhD,YADA/yB,QAAQie,IAAI,wHAGb0pD,EAAaA,EAAWl2D,OAAOzP,IAC9B,GAAIA,EAAEwkE,SAASorD,WAAY,CAE1B,OADsC5vH,EAAEwkE,SAASorD,WAAW/uH,IAAIhB,GAAKA,EAAEkxB,eAC5ChoB,QAAQmjG,EAASn7E,gBAAkB,EAE/D,OAAO,SAEF,GAAiB,KAAbm7E,EAKV,OAJAluG,QAAQie,IAAI,8BACZ2zG,EAAWnpH,QAAQylG,IAClBluG,QAAQie,IAAIiwF,KAIdvmC,EAAWl/D,QAAQzG,GAAKhC,QAAQie,IAAI4yG,EAAM7uH,EAAEwkE,SAAUmrD,KAG/CxoH,wBAAwBw+D,EAAsBM,GACrD,MAAM4pD,EAAmB,GACnBC,EAAqD,GACvDnqD,EAAWjoE,QACdM,QAAQie,IAAIkgD,EAAAV,SAAS,EAAwB,OAG9C,IAAK,MAAM6I,KAAaqB,EACvB,IACC,MAAMnB,QAAiBp9D,KAAKo+G,iBAAiBlhD,EAAW2B,GACpDzB,GACHsrD,EAA6BzxH,KAAKmmE,GAElC,MAAOtkE,GACRlC,QAAQ+E,MAAM7C,EAAI+F,SAAW/F,EAAIgK,OAAShK,GAC1C2vH,EAAOxxH,KAAKimE,GAMd,OAHIwrD,EAA6Bx8E,KAAKkxB,GAAY+H,EAAAxB,wBAAwBvG,WACnEp9D,KAAK2oH,2BAELF,EAAOnyH,OAASkC,QAAQ0B,OAAO66D,EAAAV,SAAS,EAAuB,KAAqCo0D,EAAO9uH,KAAK,QAAUnB,QAAQyB,UAGlI8F,uBAAuBm9D,EAAmB2B,GACjD,GAAI,WAAW1sC,KAAK+qC,GAAY,CAC/BA,EAAY/kE,EAAK2xB,WAAWozC,GAAaA,EAAY/kE,EAAKwB,KAAKkB,QAAQ4sB,MAAOy1C,GAE9E,MAAME,QAAiBogD,EAAAt/C,YAAYhB;CAGnC,aAFoBl9D,KAAK6rF,SAASzuB,EAAUyB,GAGpC7+D,KAAK0nF,2BAA2BzpB,QAAQ76B,EAAA3D,IAAIlnC,KAAK2kE,IAAYlkE,KAAKygB,IACxE7iB,QAAQie,IAAIkgD,EAAAV,SAAS,EAAsB,KAA+CmlB,EAAA9lC,aAAawpB,KAChGE,GACLzhE,GACEwM,EAAA7E,uBAAuB3H,IAC1B/E,QAAQie,IAAIkgD,EAAAV,SAAS,EAAqB,KAAyCmlB,EAAA9lC,aAAawpB,KACzF,MAEA1kE,QAAQ0B,OAAOyB,IAIlB,KAGR,MAAO8d,EAAIqmD,GAAW8nD,EAAgB1qD,GACtC,OAAOl9D,KAAK0nF,2BAA2BppB,aAAY,GACjDtlE,KAAKmvF,GAAanoF,KAAK+nH,wBAAwBzI,uBAAuB,CAAE7lG,GAAAA,GAAMqmD,GAC7E9mE,KAAwB,KAAMF,IAC9B,GAAIA,EAAI8vH,aACP,IACC,MAAMxgE,EAAWjtD,KAAKC,MAAMtC,EAAI8vH,cAChC,OAAOpwH,QAAQ0B,OAAOkuD,EAASvpD,SAC9B,MAAOjG,IAIV,OAAOJ,QAAQ0B,OAAOpB,KAEtBE,KAAKkrB,MAAMg5C,IACX,IAAKA,EACJ,OAAO1kE,QAAQ0B,OAAO,IAAI4E,MAAM,GA7IrB,CAAC2a,GAAes7C,EAAAV,SAAS,EAAY,KAA8B56C,GA6I3CovG,CAAS/oD,EAAU,GAAGrmD,KAAMqmD,IAAYrmD,OAAQ+tG,MAGpF,MAAMpqD,QAAiBp9D,KAAK+nH,wBAAwB7pD,YAAYhB,EAAWx+C,EAAAf,kBAAkBjJ,OACtFo0G,GAAsB3gC,EAAU9/E,OAAOzP,GAAKqvF,EAAAnkB,kBAAkBlrE,EAAEinE,WAAY,CAAEpmD,GAAAA,KACrF,GAAIqvG,EAAoB,CACvB,GAAI5rD,EAAU4C,UAAYgpD,EAAmB1rD,SAAS0C,QAErD,OADAlpE,QAAQie,IAAIkgD,EAAAV,SAAS,EAAoB,KAAyCyL,EAAU,GAAGrmD,KAAMqmD,IAAYrmD,IAC1GjhB,QAAQyB,QAAQ,MAExB,IAAK6lE,IAAYjB,EAEhB,OADAjoE,QAAQie,IAAIkgD,EAAAV,SAAS,EAAe,KAAwJ56C,EAAIqvG,EAAmB1rD,SAAS0C,QAAS5C,EAAU4C,UACxOtnE,QAAQyB,QAAQ;CAExBrD,QAAQie,IAAIkgD,EAAAV,SAAS,EAAiB,KAAmD56C,EAAIyjD,EAAU4C,UAGxG,aADM9/D,KAAKm+D,mBAAmB1kD,EAAIyjD,GAC3BE,KAIHr9D,eAAeq9D,EAA8ByB,GACpD,IAAKzB,EACJ,MAAM,IAAIt+D,MAAM,gBAGjB,MAAMopF,EAAsB,CAAEzuE,GAAIwuE,EAAA/jB,sBAAsB9G,EAAS+G,UAAW/G,EAASpmE,OAE/E+xH,SAD4B/oH,KAAK0nF,2BAA2BppB,aAAY,IAC5Cj2D,OAAOy1D,GAASmqB,EAAAnkB,kBAAkBokB,EAAqBpqB,EAAM+B,aAAe+0C,EAAOkJ,GAAGhgD,EAAMV,SAAS0C,QAAS1C,EAAS0C,UAAU,GAEnK,QAAIipD,IAAUlqD,KACbjoE,QAAQie,IAAIkgD,EAAAV,SAAS,GAAkB,KAAqH00D,EAAMlpD,WAAWpmD,GAAIsvG,EAAM3rD,SAAS0C,QAAS1C,EAAS0C,WAC3M,GAMD//D,yBAAyB0Z,EAAYyjD,GAC5CtmE,QAAQie,IAAIkgD,EAAAV,SAAS,GAAc,KAAsC56C,EAAIyjD,EAAU4C,UAEvF,UACO9/D,KAAK0nF,2BAA2BvpB,mBAAmBjB,GACzDtmE,QAAQie,IAAIkgD,EAAAV,SAAS,GAAkB,KAAoD56C,EAAIyjD,EAAU4C,UACxG,MAAOnkE,GACR,IAAIwM,EAAA7E,uBAAuB3H,GAG1B,MAAMA,EAFN/E,QAAQie,IAAIkgD,EAAAV,SAAS,GAAqB,KAAyC56C,KAO9E1Z,yBAAyBw+D,GAChCr6C,eAAe8kG,EAAejW,GAC7B,IAAK,WAAW5gF,KAAK4gF,GACpB,OAAOA,EAGR,MAAMsI,EAAUljH,EAAK2xB,WAAWipF,GAAwBA,EAAuB56G,EAAKwB,KAAKkB,QAAQ4sB,MAAOsrF,GAExG,OAAO0U,QADgBjK,EAAAt/C,YAAYm9C,IAIpC,MAAM4N,EAA2C,GACjD,IAAK,MAAM/rD,KAAaqB,EAAY;AACnC,MAAM9kD,QAAWuvG,EAAe9rD,GAC1BirB,QAAkBnoF,KAAK0nF,2BAA2BppB,aAAY,IAC7DsiD,GAAwBz4B,EAAU9/E,OAAOzP,GAAKqvF,EAAAnkB,kBAAkBlrE,EAAEinE,WAAY,CAAEpmD,GAAAA,KACvF,IAAKmnG,EACJ,OAAOpoH,QAAQ0B,OAAO,IAAI4E,MAAM,GAAGyoH,EAAa9tG,OAAQ+tG,MAEzD5wH,QAAQie,IAAIkgD,EAAAV,SAAS,GAAgB,KAAuB56C,UACtDzZ,KAAK0nF,2BAA2BtpB,UAAUwiD,GAAsB,GACtEqI,EAAsBhyH,KAAK2pH,GAC3BhqH,QAAQie,IAAIkgD,EAAAV,SAAS,GAAoB,KAAiD56C,IAGvFwvG,EAAsB/8E,KAAKtzC,GAAKusE,EAAAxB,wBAAwB/qE,EAAEwkE,kBACvDp9D,KAAK2oH,2BAIL5oH,sBAAsBw+D,GAC7B,MAAM4pB,QAAkBnoF,KAAK0nF,2BAA2BppB,eACxDC,EAAWl/D,QAAQzG,IAClBuvF,EAAU9oF,QAAQjJ,IACbA,EAAEypE,WAAWpmD,KAAO7gB,GACnBxC,EAAEuC,SAASmnC,SAAW6P,EAAArC,QAAQ/0C,MACjC3B,QAAQie,IAAIze,EAAEuC,SAASunC,YAQpBngC,iCACP,MAAMmpH,EAAsBlpH,KAAK8nH,qBAAqBqB,eAAergC,EAAArB,4BAC/DyhC,EAAoBjsE,SAC1BisE,EAAoBp0G,YA1NT+yG,EAAIh9C,EAAA,CAGdC,EAAA,EAAAV,EAAAH,uBACAa,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAAud,EAAAnd,6BACAJ,EAAA,EAAAud,EAAAld,2BANU08C,GAAAnpH,EAAAmpH,KAAAA,EA8Nb,MAAMuB,EAAc,kBAEpB1qH,EAAAokE,KAAO5+C,eAAoB8jG;AAC1B,MAAM31C,EAAW,IAAIC,EAAAT,kBACf98D,EAAc,IAAI4D,EAAAvD,gBAElBmqD,EAAqB,IAAI8pD,EAAA7lC,mBAAmBwkC,EAAMntH,QAAQgpF,UAC1DrkB,EAA0B,IAAI8pD,EAAAvoC,cAAc,MAAOxhB,EAAmBmL,SAAUmT,EAAAvG,YAAY/X,IAClG1kE,QAAQ2Q,KAAK,OAAQ,IAAMg0D,EAAW1qD,WACtC0qD,EAAWI,KAAK,OAAQooD,SAElBxvH,QAAQgB,IAAsB,CAAC+lE,EAAmB4kB,gBAAgBjkD,OAAQq/B,EAAmBmmB,gBACjGjsF,IAAKtB,GAAoCA,EAAO+qD,EAAA7lD,OAAOlF,QAAQ0B,IAEjE,MAAM81F,EAAuB,IAAI45B,EAAA9yB,qBAAqBl3B,EAAmB8kB,kBACzEtvE,EAAY1U,IAAIsvF,SACVA,EAAqByH,aAE3B/kB,EAASjyE,IAAI2qE,EAAAV,oBAAqB9K,GAClC8S,EAASjyE,IAAIy9E,EAAA9H,YAAavW,GAC1B6S,EAASjyE,IAAIswF,EAAAzC,sBAAuB0B,GACpCtd,EAASjyE,IAAIopH,EAAAzvB,cAAe,IAAI5mB,EAAAzK,eAAe+gD,EAAAlvB,eAC/CloB,EAASjyE,IAAIsnG,EAAAve,gBAAexrF,OAAA+e,OAAA,CAAI07F,mBAAev+G,GAAcqpF,EAAAztB,UAG7D,MAAM+Z,EAAc,IAAIk6C,EAAAlyC,YAAYhY,GACpCzqD,EAAY1U,IAAImvE,GAChB6C,EAASjyE,IAAI4vE,EAAA9D,aAAcsD,GAE3B,MAAMm6C,EAAyB,IAAIjT,EAAA54B,uBAAuBte,GAC1DzqD,EAAY1U,IAAIspH,GAChBn6C,EAAYo6C,iBAAiBj6E,EAAArC,QAAQ/0C,KAAMoxH,GAE3C,MAAM7B,EAA8C,IAAI+B,EAAAz3C,qBAAqBC,GAE7E,OAAOy1C,EAAqBgC,eAAe5lG,MAAM4uD,IAChD,MAAMi3C,EAAaj3C,EAAS5yE,IAAI6qE,EAAAV,qBAC1B2/C,EAAel3C,EAAS5yE,IAAIspH,EAAAzvB,gBAE5BnW,QAAEA,EAAO8B,eAAEA,EAAgBI,gCAAiCA,EAA+B/B,QAAEA,EAAOuB,kBAAEA,GAAsBykC,EAE5H13C,EAAW,IAAIC,EAAAT;CAGrBQ,EAASjyE,IAAI+lG,EAAAtO,gBAAiB,IAAI1kB,EAAAzK,eAAeuhD,EAAA7D,iBACjD/zC,EAASjyE,IAAIioF,EAAAnd,4BAA6B,IAAIiI,EAAAzK,eAAewhD,EAAAhO,6BAC7D7pC,EAASjyE,IAAIioF,EAAAld,yBAA0B,IAAIgI,EAAAzK,eAAeyhD,EAAAxnB,0BAE1D,MAAMqH,EAAmC,GACzC,GAAIjmB,IAAY+B,IAAoCikC,EAAW7oH,KAAK,sBAAwBgiF,EAAAztB,QAAQszC,gBAAiB,CAEhH7lB,EAAAztB,QAAQ20D,UAAYlnC,EAAAztB,QAAQ20D,SAASC,WACxCrgB,EAAU/yG,KAAK,IAAIqzH,EAAAtf,oBAAoBoe,EAAa,KAAMlmC,EAAAztB,QAAQ20D,SAASC,UAAW7qD,IAGvF,MAAMjkE,EAAkC,CACvCysG,SAAUoE,EAAArC,oBAAoBC,GAC9B9B,iBAAkBqiB,EAAAje,wBAAwBppB,EAAAztB,QAAQl7D,OAAQ2oF,EAAAztB,QAAQqK,QAASkqD,EAAarvB,QAAQ,uBAAwBzX,EAAAztB,QAAQ82C,oBAAqBjnB,GACrJ8iB,SAAU1iB,EAAiB,CAAC9B,EAAS8B,GAAkB,CAAC9B,IAGzDvR,EAASjyE,IAAIqnG,EAAAxJ,kBAAmB,IAAI9qB,EAAAzK,eAAe8hD,EAAA5iB,iBAAkB,CAACrsG,UAGtE82E,EAASjyE,IAAIqnG,EAAAxJ,kBAAmBmO,EAAAtC,sBAGjC,MACMhnC,EADwBglD,EAAqB2C,YAAYp4C,GAC5B82C,eAAetB,GAElD,UACO/kD,EAAK4nD,IAAI1C,SAET5b,EAAArC,oBAAoBC,GAAW3wF,gBAErCtE,EAAYD;gXCzTfpW,EAAAisH,OAAA,MAAA5qH,cACiBC,KAAA4qH,oBAAsB,IAAI5sG,EAAAlG,QAC1B9X,KAAAoqD,mBAAqBpqD,KAAK4qH,oBAAoBvzG,MAC7CrX,KAAA6qH,IAAM,IAAIv8D,EAAAnE,UAAwCnqD,KAAKoqD,oBAEvDpqD,KAAA8qH,2BAA6B,EAC7B9qH,KAAA8qD,YAAc,IAAI7qD,IAElBD,KAAAqyE,SAAW,IAAIC,EAAAT,kBAGzB9xE,UAAUmB,GAChB,OAAO6pH,EAAAjoD,KAAK5hE,GAGNnB,iBAAiBkQ,GACvB,MAAMie,EAAcmwB,EAAAof,kBAAkBxtD,EAAQ86F,iBACzC/qG,KAAKgrH,kBACThrH,KAAKgrH,gBAAkBhrH,KAAKirH,mBAAmBh7G,EAAQ/O,aAElDlB,KAAKgrH,gBACX,MAAMja,EAAc/wG,KAAKqyE,SAASnyE,IAAI6qE,EAAAV,qBAChC6gD,EAAYj7G,EAAQi7G,UAC1B,MAAO,CACNC,0BAA2B,CAC1BC,aAAcF,GAAaA,EAAUr4B,UAAYzvD,EAAA3D,IAAIrkC,MAAM8vH,EAAUjlB,UAAOpsG;AAC5EwxH,UAAWH,IAAcA,EAAUr4B,UAAYzvD,EAAA3D,IAAIrkC,MAAM8vH,EAAUjlB,UAAOpsG,EAC1EkxG,gBAAiB96F,EAAQ86F,gBACzBx0B,SAAUsH,EAAAvG,YAAYy5B,IAEvBua,kBAAmBp9F,EAAY8nB,kBAAkB5S,EAAA3D,IAAIlnC,KAAKw4G,EAAYv2G,eACtE+wH,qBAAsBroC,EAAAztB,QACtB+1D,uBAAwBz2D,EAAAi6C,oBAAoB+B,EAAY7vG,KAAKxG,cAAgBq6D,EAAAs6C,oBAAoB0B,EAAYv2G,cAAeu2G,EAAYv2G,cACxID,OAAQ2oF,EAAAztB,QAAQl7D,QAAU,eAIrBwF,sBAAsB8sD,EAAoBl2B,GAChD,IAAKA,EAAM80F,kBACV,MAAM,IAAI3sH,MAAM,uDAEjB,MAAMyoD,EAAW,IAAImkE,EAAA19D,SAASnB,EAAQ,CACrC4+D,kBAA2B90F,EAAM80F,kBACjCE,aAAqC,SAAvBh1F,EAAMg1F,aACpBhc,oBAAmD,SAA9Bh5E,EAAMg5E,sBAE5B,UACO3vG,KAAK6zD,cAActM,EAASqkE,YAAarkE,GAC9C,MAAO5rD,GACR4rD,EAASyoD,YAAY,CAAE19F,KAAM,QAASspF,OAAQjgG,EAAMkD,UACpD0oD,EAASzyC,UACTyyC,EAASgH,YAAYz5C,UAEtB,OAAO,EAGA/U,cAAclB,EAAgC0oD,GAKrD,OAJI27B,EAAAztB,QAAQl7D,QAAUsE,EAAQtE,SAAW2oF,EAAAztB,QAAQl7D,QAChDo0G,EAAAjuB,OAAO1/E,KAAK,qBAAqBnC,EAAQtE,qBAAqB2oF,EAAAztB,QAAQl7D,WAG/DsE,EAAQgtH,uBACf,KAAA,EACA,KAAA;AACM7rH,KAAK8qD,YAAY5hD,IAAIrK,EAAQgtH,wBACjC7rH,KAAK8qD,YAAY1qD,IAAIvB,EAAQgtH,sBAAuB,IAAI5rH,KAEzD,MAAM6qD,EAAc9qD,KAAK8qD,YAAY5qD,IAAIrB,EAAQgtH,uBAE3CltH,EAAKulB,SAC0B,IAA7BrlB,EAAQgtH,sBACZ,CAAEC,gBAAiB9rH,KAAK+rH,gBACxB,CAAEz5G,KAAM,MAGNvK,EAAQw/C,EAASt3C,QAAQw7G,kBAC/B,GAAIlkE,EAASt3C,QAAQ07G,cAAgB7gE,EAAY5hD,IAAInB,GAAQ,CAC5Dw/C,EAASyoD,kBAAkBrxG,KAC3B,MAAMua,EAASquC,EAASyJ,mBAExB,OADAzJ,EAASzyC,UACFg2C,EAAY5qD,IAAI6H,GAAQikH,UAAUzkE,EAASgH,YAAar1C,GACzD,GAAIquC,EAASt3C,QAAQ07G,cAAgB7gE,EAAY5hD,IAAInB,GAC3D,MAAM,IAAIjJ,MAAMyoD,EAASt3C,QAAQ07G,aAC9B,kCACA,gCAMJ,IAAI9gE,EACJ,GAHAtD,EAASyoD,kBAAkBrxG,KAGM,IAA7BE,EAAQgtH,sBACXhhE,EAAa,IAAIohE,EAAAvb,qBAAqBnpD,EAAUx/C,GAChD/H,KAAK4qH,oBAAoB7yG,KAAK,CAC7BwvC,SAAAA,EAAUiD,sBAAuBK,EAAWqD,UAK5CluD,KAAKqyE,SAASnyE,IAAIgsH,EAAAxe,mBAAwC+K,MAAM1gG,OACjE8yC,EAAWqD,QAAQ,IAAOluD,KAAKqyE,SAASnyE,IAAIgsH,EAAAxe,mBAAwC6K,QAAQxgG,YACtF,CACN,MAAMmB,EAASquC,EAASyJ;CACxBnG,EAAa,IAAIohE,EAAAnb,wBAChBjyG,EAAQqC,KAAOrC,EAAQqC,KAAKukB,SAAW,KACvC8hC,EAAUruC,EAAQnR,EAClB/H,KAAKqyE,SAASnyE,IAAI29E,EAAA9H,aAClB/1E,KAAKqyE,SAASnyE,IAAI6qE,EAAAV,sBAGpBvf,EAAY1qD,IAAI2H,EAAO8iD,GACvBA,EAAWqD,QAAQ,IAAMpD,EAAYxqD,OAAOyH,IAC5C/H,KAAKmsH,6BAA6BrhE,GAClC,MACD,KAAA,EAA4B,OAAOvD,EAAS6kE,SAC5C,QAAS,MAAM,IAAIttH,MAAM,iCAInBiB,6BAA6B+qD,GACpC,MAAMwlD,EAAU5nG,MAAMjR,KAAKqzD,EAAYxtD,UACrC+K,OAAQwiD,QAA6C,IAAvBA,EAAWylD,SAC3C,IAAK,IAAIl6G,EAAI,EAAG+W,EAAMmjG,EAAQh6G,OAAS0J,KAAK8qH,2BAA4B10H,EAAI+W,IAAO/W,EAClFk6G,EAAQl6G,GAAG0e,UAIL/U,yBAAyBmB,GAChC,MAAMq+D,EAAqB,IAAI8pD,EAAA7lC,mBAAmBtiF,EAAMrG,QAAQgpF,UAC1DrkB,EAAa,IAAI8pD,EAAAvoC,cAAcsrC,EAAA5S,2BAA4Bl6C,EAAmBmL,SAAUmT,EAAAvG,YAAY/X,IACpGiQ,EAAc,IAAIk6C,EAAAlyC,YAAYhY,GACpCgQ,EAAYo6C,iBAAiBj6E,EAAArC,QAAQ/0C,KAAM,IAAIm+G,EAAA54B,uBAAuBte,IAEtE,MAAM4oC,EAAW,CAChBjwG,EAAKwB,KAAK4lE,EAAmB/kE,aAAc,OAC3C+kE,EAAmBmmB,eACnBnmB,EAAmBgmB,yBAChBhmB,EAAmBqmB,uBACnBrmB,EAAmBsmB,4BAGvB7lF,KAAK6qH,IAAIjgE,gBAAgB,SAAU,IAAI0hE,EAAAjsC,cAAc7gB;AACrDx/D,KAAK6qH,IAAIjgE,gBAAgB2hE,EAAArwD,mCAAmCQ,YAAa,IAAI6vD,EAAArwD,oCAE7El8D,KAAKqyE,SAASjyE,IAAIy9E,EAAA9H,YAAavW,GAC/Bx/D,KAAKqyE,SAASjyE,IAAI2qE,EAAAV,oBAAqB9K,GACvCv/D,KAAKqyE,SAASjyE,IAAIswF,EAAAzC,sBAAuB,IAAI9a,EAAAzK,eAAe6gD,EAAA9yB,qBAAsB,CAACl3B,EAAmBqlB,2BACtG5kF,KAAKqyE,SAASjyE,IAAI+lG,EAAAtO,gBAAiB,IAAI1kB,EAAAzK,eAAeuhD,EAAA7D,iBACtDpmH,KAAKqyE,SAASjyE,IAAI4vE,EAAA9D,aAAcsD,GAChCxvE,KAAKqyE,SAASjyE,IAAIsnG,EAAAve,gBAAexrF,OAAA+e,OAAA,CAAI07F,mBAAev+G,GAAcqpF,EAAAztB,UAClEz1D,KAAKqyE,SAASjyE,IAAIioF,EAAAld,yBAA0B,IAAIgI,EAAAzK,eAAeyhD,EAAAxnB,0BAC/D3iG,KAAKqyE,SAASjyE,IAAIioF,EAAAnd,4BAA6B,IAAIiI,EAAAzK,eAAewhD,EAAAhO,6BAE7D38C,EAAmBr+D,KAAK,qBAa5BlB,KAAKqyE,SAASjyE,IAAIqnG,EAAAxJ,kBAAmBmO,EAAAtC,sBAZrC9pG,KAAKqyE,SAASjyE,IAAIqnG,EAAAxJ,kBAAmB,IAAI9qB,EAAAzK,eAAe8hD,EAAA5iB,iBAAkB,CAAC,CAC1EI,SAAUoE,EAAArC,iBACT,IAAIugB,EAAAtf,oBAAoB,cAAe,KAAM,IAAM,IAAIwhB,EAAAhhB,gBAA0BhsC,GACjF,IAAI4sC,EAAAlC,YAAY1qC;AAEjB0oC,iBAAkBqiB,EAAAje,wBACjBppB,EAAAztB,QAAQl7D,OAAQ2oF,EAAAztB,QAAQqK,cAAe2sD,EAAA7vE,eACvC,GAAI2iB,EAAmB+lB,kBAAmB,eAE3C8iB,SAAAA,YAMI,IAAI5vG,QAASyB,IAClB,MAAM6tH,EAAuB,IAAI+B,EAAAz3C,qBAAqBpyE,KAAKqyE,UAC3DryE,KAAKqyE,SAASjyE,IAAI0oF,EAAAxT,sBAAuBwyC,EAAqBqB,eAAeuD,EAAAjlC,uBAC7EznF,KAAKqyE,SAASjyE,IAAI8rH,EAAAxe,kBAAmBoa,EAAqBqB,eAAewD,EAAAxU,mBAEzE2P,EAAqBgC,eAAe,KACnChC,EAAqBqB,eAAeyD,EAAAriD,iBACpC,MAAMoyB,EAAmB38F,KAAKqyE,SAASnyE,IAAIunG,EAAAxJ,mBAC3Cj+F,KAAK6qH,IAAIjgE,gBAAgB,aAAc,IAAIiiE,EAAArvD,2BAC1Cx9D,KAAKqyE,SAASnyE,IAAImoF,EAAAnd,6BACjBxtD,GAAY2gC,EAAAof,kBAAkB//C,EAAQqtF,mBAExC/qG,KAAK6qH,IAAIjgE,gBAAgB,8BAA+B,IAAI+hE,EAAAtV,4BAC3D93C,EAAoBC,EAAYm9B,EAAkB,KAEnD38F,KAAK6qH,IAAIjgE,gBAAgB,UAAW,IAAIkiE,EAAAp0B,eAAe14F,KAAKqyE,SAASnyE,IAAIimG,EAAAtO,mBACzE73F,KAAK6qH,IAAIjgE,gBAAgB,YAAa,IAAIy9D,EAAAxa,iBAAiBlR,IAC3D38F,KAAK6qH,IAAIjgE,gBAAgB,YAAa,IAAIshE,EAAAve,iBAAiB3tG,KAAKqyE,SAASnyE,IAAIgsH,EAAAxe;AAC7E1tG,KAAK6qH,IAAIjgE,gBAAgB,gBAAsCmiE,EAAA17D,sBAAsBrxD,KAAKqyE,SAASnyE,IAAI4oF,EAAAxT,yBACvGt1E,KAAK6qH,IAAIjgE,gBAAgBoiE,EAAApU,gCAAiC,IAAI+T,EAAA7V,oBAAoBv3C,EAAoBC,IACtGvlE,EAAQ,IAAI0jG,EAAAloC,QAAeknC,QAQtB58F,2JCtPToI,EAAA/E,0BAA2BzH,GAAUsxH,EAAAvsC,OAAO1/E,KAAKrF,aAAiBmD,MAAQnD,EAAMkD,QAAUlD,IAC1FuxH,EAAAnH,0BAKA,MAAMoH,EAAOtyH,QAAQsyH,KAMrB,GALAtyH,QAAQsyH,KAAO,SAASpzH,GACvBkzH,EAAAvsC,OAAO1/E,KAAK,iCAAiCjH,GAAQ,yBAIJ,IAAvCc,QAAQC,IAAIsyH,uBAAwC,CAC9D,MAAMC,EAAY97F,SAAS12B,QAAQC,IAAIsyH,uBAAwB,IAC/D1qG,YAAY,KACX,IACC7nB,QAAQy9D,KAAK+0D,EAAW,GACvB,MAAOz0H,GACRu0H,MAEC,UAEHF,EAAAvsC,OAAO/kF,MAAM,qBACbwxH,EAAK,GAGN,MAAM3/E,EAAS,IAAI8/E,EAAA3C,OACbtiE,EAAQxpD,IACb,IAAKhE,QAAQwtD,KACZ,MAAM,IAAIvpD,MAAM,wBAEjBjE,QAAQwtD,KAAKxpD,IAKdhE,QAAQ8e,GAAG,UAAWuK,MAAOrlB,EAA4BguD,KAExD,OADAogE,EAAAvsC,OAAOllB,MAAM,+BAAgCmzC,EAAA4e,MAAM,UAAW1uH;AACtDA,EAAQyT,MACf,IAAK,OACJ,IACC,MAAMrC,QAAgBu9B,EAAO4pD,WAAWv4F,EAAQoR,SAChDo4C,EAAK,CAAE/1C,KAAM,UAAWmH,GAAI5a,EAAQ4a,GAAIxJ,QAAAA,IACvC,MAAOtU,GACRsxH,EAAAvsC,OAAO/kF,MAAMA,EAAMkD,SACnBsuH,EAAK,GAEN,MACD,IAAK,MACJ,UACO3/E,EAAOggF,IAAI3uH,EAAQqC,MACzBisH,EAAK,GACJ,MAAOxxH,GACRsxH,EAAAvsC,OAAO/kF,MAAMA,EAAMkD,SACnBsuH,EAAK,GAEN,MACD,IAAK,SACJ3/E,EAAOigF,gBAAgB5gE,EAAQhuD,EAAQ83B,UAIrC97B,QAAQwtD,KAKZA,EAAK,CAAE/1C,KAAM,WAJb26G,EAAAvsC,OAAO/kF,MAAM,wBACbwxH,EAAK,SvIvENluH,KAAAe","file":"entry.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj._performanceEntries = sharedObj._performanceEntries || [];\n\n\tconst _dataLen = 2;\n\tconst _timeStamp = typeof console.timeStamp === 'function' ? console.timeStamp.bind(console) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj._performanceEntries.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj._performanceEntries.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getEntry(name) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tif (entries[i] === name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: entries[i],\n\t\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj._performanceEntries.push(name, Date.now());\n\t\t_timeStamp(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetEntry: getEntry,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\nlet sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\t// invalid context...\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n//@ts-check\n\n/**\n * @param {NodeRequire} nodeRequire\n * @param {typeof import('path')} path\n * @param {typeof import('fs')} fs\n * @param {typeof import('../common/performance')} perf\n */\nfunction factory(nodeRequire, path, fs, perf) {\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<boolean>}\n\t */\n\tfunction exists(file) {\n\t\treturn new Promise(c => fs.exists(file, c));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction touch(file) {\n\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<object>}\n\t */\n\tfunction lstat(file) {\n\t\treturn new Promise((c, e) => fs.lstat(file, (err, stats) => err ? e(err) : c(stats)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string[]>}\n\t */\n\tfunction readdir(dir) {\n\t\treturn new Promise((c, e) => fs.readdir(dir, (err, files) => err ? e(err) : c(files)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string>}\n\t */\n\tfunction mkdirp(dir) {\n\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<void>}\n\t */\n\tfunction rmdir(dir) {\n\t\treturn new Promise((c, e) => fs.rmdir(dir, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction unlink(file) {\n\t\treturn new Promise((c, e) => fs.unlink(file, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} location\n\t * @returns {Promise<void>}\n\t */\n\tfunction rimraf(location) {\n\t\treturn lstat(location).then(stat => {\n\t\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\t\treturn readdir(location)\n\t\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(path.join(location, child)))))\n\t\t\t\t\t.then(() => rmdir(location));\n\t\t\t} else {\n\t\t\t\treturn unlink(location);\n\t\t\t}\n\t\t}, err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tfunction readFile(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.readFile(file, 'utf8', function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @param {string} content\n\t * @returns {Promise<void>}\n\t */\n\tfunction writeFile(file, content) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.writeFile(file, content, 'utf8', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {string} userDataPath\n\t * @returns {object}\n\t */\n\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\ttry {\n\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t// language changes.\n\t\t\treturn JSON.parse(fs.readFileSync(configFile, \"utf8\"));\n\t\t} catch (err) {\n\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t// language pack config.\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {object} config\n\t * @param {string} locale\n\t */\n\tfunction resolveLanguagePackLocale(config, locale) {\n\t\ttry {\n\t\t\twhile (locale) {\n\t\t\t\tif (config[locale]) {\n\t\t\t\t\treturn locale;\n\t\t\t\t} else {\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {string} commit\n\t * @param {string} userDataPath\n\t * @param {string} metaDataFile\n\t * @param {string} locale\n\t */\n\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\tif (locale === 'pseudo') {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t}\n\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t// the right file to use.\n\n\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t// English translation (we don't ship *.nls.en.json files)\n\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\tconst initialLocale = locale;\n\n\t\tperf.mark('nlsGeneration:start');\n\n\t\tconst defaultResult = function (locale) {\n\t\t\tperf.mark('nlsGeneration:end');\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t};\n\t\ttry {\n\t\t\tif (!commit) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\tif (!configs) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\tif (!locale) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst packConfig = configs[locale];\n\t\t\tlet mainPack;\n\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\tif (!fileExists) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\tconst result = {\n\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t};\n\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\tlet toDelete;\n\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\treturn defaultResult(locale);\n\t\t}\n\t}\n\n\treturn {\n\t\tgetNLSConfiguration\n\t};\n}\n\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(__m[94/*vs/base/node/languagePacks*/], __M([41/*path*/,19/*fs*/,168/*vs/base/common/performance*/]), function (path, fs, perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\tconst path = require('path');\n\tconst fs = require('fs');\n\tconst perf = require('../common/performance');\n\tmodule.exports = factory(require, path, fs, perf);\n} else {\n\tthrow new Error('Unknown context');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport type IStringDictionary<V> = Record<string, V>;\n\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport type INumberDictionary<V> = Record<number, V>;\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given set.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function size<T>(from: IStringDictionary<T> | INumberDictionary<T>): number {\n\tlet count = 0;\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nexport function first<T>(from: IStringDictionary<T> | INumberDictionary<T>): T | undefined {\n\tfor (const key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\treturn (from as any)[key];\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Iterates over each entry in the provided set. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result: IStringDictionary<T[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}\n\nexport function mapValues<V>(map: Map<any, V>): V[] {\n\tconst result: V[] = [];\n\tmap.forEach(v => result.push(v));\n\treturn result;\n}\n\nexport class SetMap<K, V> {\n\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function fromSet<T>(set: Set<T>): T[] {\n\tconst result: T[] = [];\n\tset.forEach(o => result.push(o));\n\treturn result;\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\ninterface NativeIteratorYieldResult<TYield> {\n\tdone?: false;\n\tvalue: TYield;\n}\n\ninterface NativeIteratorReturnResult<TReturn> {\n\tdone: true;\n\tvalue: TReturn;\n}\n\ntype NativeIteratorResult<T, TReturn = any> = NativeIteratorYieldResult<T> | NativeIteratorReturnResult<TReturn>;\n\nexport interface NativeIterator<T> {\n\tnext(): NativeIteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function single<T>(value: T): Iterator<T> {\n\t\tlet done = false;\n\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tdone = true;\n\t\t\t\treturn { done: false, value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromArray<T>(array: ReadonlyArray<T>, index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromNativeIterator<T>(it: NativeIterator<T>): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tconst result = it.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: result.value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>, atMost: number = Number.POSITIVE_INFINITY): T[] {\n\t\tconst result: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\tlet i = 0;\n\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tresult.push(next.value);\n\n\t\t\tif (++i >= atMost) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\texport function concat<T>(...iterators: Iterator<T>[]): Iterator<T> {\n\t\tlet i = 0;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif (i >= iterators.length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tconst iterator = iterators[i];\n\t\t\t\tconst result = iterator.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\ti++;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\t}\n\n\texport function chain<T>(iterator: Iterator<T>): ChainableIterator<T> {\n\t\treturn new ChainableIterator(iterator);\n\t}\n}\n\nexport class ChainableIterator<T> implements Iterator<T> {\n\n\tconstructor(private it: Iterator<T>) { }\n\n\tnext(): IteratorResult<T> { return this.it.next(); }\n\tmap<R>(fn: (t: T) => R): ChainableIterator<R> { return new ChainableIterator(Iterator.map(this.it, fn)); }\n\tfilter(fn: (t: T) => boolean): ChainableIterator<T> { return new ChainableIterator(Iterator.filter(this.it, fn)); }\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: ISequence<T> | undefined): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else if (!arg) {\n\t\treturn Iterator.empty();\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate readonly items: readonly T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T | null) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as any as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as any as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (node === Node.Undefined) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tthis._asyncDeliveryQueue.push([e.value, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (lastSlash !== i - 1 && dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length === 2 || res.length === 1) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tif (res.length > 0) {\n\t\t\t\t\t\tres += `${separator}..`;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = '..';\n\t\t\t\t\t}\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += separator + path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t((pathObject.name || '') + (pathObject.ext || ''));\n\tif (!dir) {\n\t\treturn base;\n\t}\n\tif (dir === pathObject.root) {\n\t\treturn dir + base;\n\t}\n\treturn dir + sep + base;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t} else if (!resolvedDevice) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)['=' + resolvedDevice] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 3).toLowerCase() !==\n\t\t\t\t\tresolvedDevice.toLowerCase() + '\\\\') {\n\t\t\t\t\tpath = resolvedDevice + '\\\\';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len > 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// Possible UNC root\n\n\t\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\t\tisAbsolute = true;\n\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\t\tlet j = 2;\n\t\t\t\t\t\tlet last = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEnd = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t\t// Possible device root\n\n\t\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\t\trootEnd = 2;\n\t\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator\n\t\t\t\trootEnd = 1;\n\t\t\t\tisAbsolute = true;\n\t\t\t}\n\n\t\t\tif (device.length > 0 &&\n\t\t\t\tresolvedDevice.length > 0 &&\n\t\t\t\tdevice.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length === 0 && device.length > 0) {\n\t\t\t\tresolvedDevice = device;\n\t\t\t}\n\t\t\tif (!resolvedAbsolute) {\n\t\t\t\tresolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length > 0 && resolvedAbsolute) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n\t\t\t'.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t\t// path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t\t// is nothing left to process\n\n\t\t\t\t\t\t\t\treturn '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid unnecessary\n\t\t\t// work\n\t\t\treturn '\\\\';\n\t\t}\n\n\t\tlet tail;\n\t\tif (rootEnd < len) {\n\t\t\ttail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\n\t\t\t\tisPathSeparator);\n\t\t} else {\n\t\t\ttail = '';\n\t\t}\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\tif (isAbsolute) {\n\t\t\t\tif (tail.length > 0) {\n\t\t\t\t\treturn '\\\\' + tail;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '\\\\';\n\t\t\t\t}\n\t\t\t} else if (tail.length > 0) {\n\t\t\t\treturn tail;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (isAbsolute) {\n\t\t\tif (tail.length > 0) {\n\t\t\t\treturn device + '\\\\' + tail;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn device + '\\\\';\n\t\t\t}\n\t\t} else if (tail.length > 0) {\n\t\t\treturn device + tail;\n\t\t} else {\n\t\t\treturn device;\n\t\t}\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\tif (isPathSeparator(code)) {\n\t\t\treturn true;\n\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t// Possible device root\n\n\t\t\tif (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '\\\\' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1) {\n\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t\t++slashCount;\n\t\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\tfor (; slashCount < joined.length; ++slashCount) {\n\t\t\t\tif (!isPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = '\\\\' + joined.slice(slashCount);\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\tfor (; fromEnd - 1 > fromStart; --fromEnd) {\n\t\t\tif (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\tfor (; toEnd - 1 > toStart; --toEnd) {\n\t\t\tif (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length && lastCommonSep === -1) {\n\t\t\treturn toOrig;\n\t\t}\n\n\t\tlet out = '';\n\t\tif (lastCommonSep === -1) {\n\t\t\tlastCommonSep = 0;\n\t\t}\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '\\\\..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + toOrig.slice(toStart + lastCommonSep, toEnd);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn toOrig.slice(toStart, toEnd);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length >= 3) {\n\t\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\t\treturn '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\t\t\treturn '\\\\\\\\?\\\\' + resolvedPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = offset = 1;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = offset = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\trootEnd = offset = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn path;\n\t\t}\n\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = rootEnd;\n\t\t\t}\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2) {\n\t\t\tconst drive = path.charCodeAt(0);\n\t\t\tif (isWindowsDeviceRoot(drive)) {\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tstart = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('\\\\', pathObject);\n\t},\n\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = 1;\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\tif (len === 3) {\n\t\t\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\tret.root = ret.dir = path;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t}\n\t\t} else {\n\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\tret.base = path.slice(startPart, end);\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = process.cwd();\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = path + '/' + resolvedPath;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\tif (resolvedPath.length > 0) {\n\t\t\t\treturn '/' + resolvedPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t} else if (resolvedPath.length > 0) {\n\t\t\treturn resolvedPath;\n\t\t} else {\n\t\t\treturn '.';\n\t\t}\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0 && !isAbsolute) {\n\t\t\tpath = '.';\n\t\t}\n\t\tif (path.length > 0 && trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tif (isAbsolute) {\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = arguments[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '/' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 1;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 1;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toEnd = to.length;\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t} else if (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t\t// For example: from='/foo'; to='/'\n\t\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '/..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + to.slice(toStart + lastCommonSep);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn to.slice(toStart);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('/', pathObject);\n\t},\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\t\tret.base = ret.name = path.slice(1, end);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\tret.name = path.slice(1, startDot);\n\t\t\t\tret.base = path.slice(1, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t}\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t */\n\twrite(data: T): void;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\nexport function isReadableStream<T>(obj: any): obj is ReadableStream<T> {\n\tconst candidate: ReadableStream<T> = obj;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer);\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tconstructor(private reducer: IReducer<T>) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: IReducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlet wrapperStream: WriteableStream<T> | undefined = undefined;\n\n\t\tstream.on('data', data => {\n\n\t\t\t// If we reach maxChunks, we start to return a stream\n\t\t\t// and make sure that any data we have already read\n\t\t\t// is in it as well\n\t\t\tif (!wrapperStream && chunks.length === maxChunks) {\n\t\t\t\twrapperStream = newWriteableStream(reducer);\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.write(data);\n\n\t\t\t\treturn resolve(wrapperStream);\n\t\t\t}\n\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.write(data);\n\t\t\t} else {\n\t\t\t\tchunks.push(data);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('error', error => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.error(error);\n\t\t\t} else {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('end', () => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.end();\n\t\t\t} else {\n\t\t\t\treturn resolve(reducer(chunks));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn ((charCode - 0xD800) << 10) + (nextCharCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn ((prevCharCode - 0xD800) << 10) + (charCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, '');\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void {\n\t\tthis.buffer.set(array.buffer, offset);\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nfunction readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nfunction writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, endsWith, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && endsWith(candidate, ':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (endsWith(candidate, ':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n\n/**\n * Reference a resource that might be inlined.\n * Do not inline icons that will be used by the native mac touchbar.\n * Do not rename this method unless you adopt the build scripts.\n */\nexport function registerAndGetAmdImageURL(absolutePath: string): string {\n\treturn require.toUrl(absolutePath);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Iterator, IteratorResult, FIN } from './iterator';\n\n\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport function mapToSerializable(map: Map<string, string>): [string, string][] {\n\tconst serializable: [string, string][] = [];\n\n\tmap.forEach((value, key) => {\n\t\tserializable.push([key, value]);\n\t});\n\n\treturn serializable;\n}\n\nexport function serializableToMap(serializable: [string, string][]): Map<string, string> {\n\tconst items = new Map<string, string>();\n\n\tfor (const [key, value] of serializable) {\n\t\titems.set(key, value);\n\t}\n\n\treturn items;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(private _splitOnBackslash: boolean = true) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment!: string;\n\tvalue: E | undefined;\n\tkey!: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI) => void): void {\n\t\tthis.map.forEach((value, index) => clb(value, URI.parse(index)));\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && strings.endsWith(path, base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && strings.endsWith(pattern, '/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || strings.endsWith(path, slashBase) || strings.endsWith(path, backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || strings.endsWith(path, nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string, basename: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename: string, name: string, hasSibling: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { regExpFlags } from 'vs/base/common/strings';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\nexport function revive(obj: any, depth = 0): any {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return URI.revive(obj);\n\t\t\tcase 2: return new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof ((<any>'').normalize) === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function getComparisonKey(resource: URI): string {\n\treturn hasToIgnoreCase(resource) ? resource.toString().toLowerCase() : resource.toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase);\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, ignoreCase, '/');\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests wheter the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\nexport function isEqual(first: URI | undefined, second: URI | undefined, ignoreCase = hasToIgnoreCase(first)): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn p1 === p2 || ignoreCase && equalsIgnoreCase(p1 || '/', p2 || '/');\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tif (resource.scheme === Schemas.file) {\n\t\treturn URI.file(paths.dirname(originalFSPath(resource)));\n\t}\n\tlet dirname = paths.posix.dirname(resource.path);\n\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns the fsPath of an URI where the drive letter is not normalized.\n * See #56403.\n */\nexport function originalFSPath(uri: URI): string {\n\tlet value: string;\n\tconst uriPath = uri.path;\n\tif (uri.authority && uriPath.length > 1 && uri.scheme === Schemas.file) {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uriPath}`;\n\t} else if (\n\t\tisWindows\n\t\t&& uriPath.charCodeAt(0) === CharCode.Slash\n\t\t&& extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\n\t\t&& uriPath.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tvalue = uriPath.substr(1);\n\t} else {\n\t\t// other path\n\t\tvalue = uriPath;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, ignoreCase = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(from.path, to.path);\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (ignoreCase) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<{ root: URI, expression: ParsedExpression }> = TernarySearchTree.forPaths<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root.toString(), { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource.toString());\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { sep, posix, normalize, win32 } from 'vs/base/common/path';\nimport { endsWith, startsWithIgnoreCase, rtrim, startsWith } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome: string;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider) {\n\t\tres = tildify(res, userHomeProvider.userHome);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? startsWith(path, normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[]): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${sep}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(sep) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(sep) + sep.length);\n\t\t\tpath = path.substr(path.indexOf(sep) + sep.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(sep);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(sep);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(sep) > -1) ? sep + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = endsWith(paths[otherPathIndex], subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (endsWith(segments[0], ':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + sep + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + sep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + sep;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + sep + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tprivate readonly _uriTransformer: IRawURITransformer;\n\n\tconstructor(uriTransformer: IRawURITransformer) {\n\t\tthis._uriTransformer = uriTransformer;\n\t}\n\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformIncoming(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : URI.from(result));\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn this._uriTransformer.transformOutgoingScheme(scheme);\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex(): string;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value: string) {\n\t\t// empty\n\t}\n\n\tpublic asHex(): string {\n\t\treturn this._value;\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static readonly _chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static readonly _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array: string[]): string {\n\t\treturn array[Math.floor(array.length * Math.random())];\n\t}\n\n\tprivate static _randomHex(): string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\nexport function v4(): UUID {\n\treturn new V4UUID();\n}\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value: string): UUID {\n\tif (!isUUID(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid(): string {\n\treturn v4().asHex();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as iconv from 'iconv-lite';\nimport { Readable, Writable } from 'stream';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport const UTF8 = 'utf8';\nexport const UTF8_with_bom = 'utf8bom';\nexport const UTF16be = 'utf16be';\nexport const UTF16le = 'utf16le';\n\nexport type UTF_ENCODING = typeof UTF8 | typeof UTF8_with_bom | typeof UTF16be | typeof UTF16le;\n\nexport function isUTFEncoding(encoding: string): encoding is UTF_ENCODING {\n\treturn [UTF8, UTF8_with_bom, UTF16be, UTF16le].some(utfEncoding => utfEncoding === encoding);\n}\n\nexport const UTF16be_BOM = [0xFE, 0xFF];\nexport const UTF16le_BOM = [0xFF, 0xFE];\nexport const UTF8_BOM = [0xEF, 0xBB, 0xBF];\n\nconst ZERO_BYTE_DETECTION_BUFFER_MAX_LEN = 512; \t// number of bytes to look at to decide about a file being binary or not\nconst NO_ENCODING_GUESS_MIN_BYTES = 512; \t\t\t// when not auto guessing the encoding, small number of bytes are enough\nconst AUTO_ENCODING_GUESS_MIN_BYTES = 512 * 8; \t\t// with auto guessing we want a lot more content to be read for guessing\nconst AUTO_ENCODING_GUESS_MAX_BYTES = 512 * 128; \t// set an upper limit for the number of bytes we pass on to jschardet\n\nexport interface IDecodeStreamOptions {\n\tguessEncoding: boolean;\n\tminBytesRequiredForDetection?: number;\n\n\toverwriteEncoding(detectedEncoding: string | null): string;\n}\n\nexport interface IDecodeStreamResult {\n\tstream: NodeJS.ReadableStream;\n\tdetected: IDetectedEncodingResult;\n}\n\nexport function toDecodeStream(readable: Readable, options: IDecodeStreamOptions): Promise<IDecodeStreamResult> {\n\tif (!options.minBytesRequiredForDetection) {\n\t\toptions.minBytesRequiredForDetection = options.guessEncoding ? AUTO_ENCODING_GUESS_MIN_BYTES : NO_ENCODING_GUESS_MIN_BYTES;\n\t}\n\n\treturn new Promise<IDecodeStreamResult>((resolve, reject) => {\n\t\tconst writer = new class extends Writable {\n\t\t\tprivate decodeStream: NodeJS.ReadWriteStream | undefined;\n\t\t\tprivate decodeStreamPromise: Promise<void> | undefined;\n\n\t\t\tprivate bufferedChunks: Buffer[] = [];\n\t\t\tprivate bytesBuffered = 0;\n\n\t\t\t_write(chunk: Buffer, encoding: string, callback: (error: Error | null) => void): void {\n\t\t\t\tif (!Buffer.isBuffer(chunk)) {\n\t\t\t\t\treturn callback(new Error('toDecodeStream(): data must be a buffer'));\n\t\t\t\t}\n\n\t\t\t\t// if the decode stream is ready, we just write directly\n\t\t\t\tif (this.decodeStream) {\n\t\t\t\t\tthis.decodeStream.write(chunk, callback);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// otherwise we need to buffer the data until the stream is ready\n\t\t\t\tthis.bufferedChunks.push(chunk);\n\t\t\t\tthis.bytesBuffered += chunk.byteLength;\n\n\t\t\t\t// waiting for the decoder to be ready\n\t\t\t\tif (this.decodeStreamPromise) {\n\t\t\t\t\tthis.decodeStreamPromise.then(() => callback(null), error => callback(error));\n\t\t\t\t}\n\n\t\t\t\t// buffered enough data for encoding detection, create stream and forward data\n\t\t\t\telse if (typeof options.minBytesRequiredForDetection === 'number' && this.bytesBuffered >= options.minBytesRequiredForDetection) {\n\t\t\t\t\tthis._startDecodeStream(callback);\n\t\t\t\t}\n\n\t\t\t\t// only buffering until enough data for encoding detection is there\n\t\t\t\telse {\n\t\t\t\t\tcallback(null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_startDecodeStream(callback: (error: Error | null) => void): void {\n\n\t\t\t\t// detect encoding from buffer\n\t\t\t\tthis.decodeStreamPromise = Promise.resolve(detectEncodingFromBuffer({\n\t\t\t\t\tbuffer: Buffer.concat(this.bufferedChunks),\n\t\t\t\t\tbytesRead: this.bytesBuffered\n\t\t\t\t}, options.guessEncoding)).then(detected => {\n\n\t\t\t\t\t// ensure to respect overwrite of encoding\n\t\t\t\t\tdetected.encoding = options.overwriteEncoding(detected.encoding);\n\n\t\t\t\t\t// decode and write buffer\n\t\t\t\t\tthis.decodeStream = decodeStream(detected.encoding);\n\t\t\t\t\tthis.decodeStream.write(Buffer.concat(this.bufferedChunks), callback);\n\t\t\t\t\tthis.bufferedChunks.length = 0;\n\n\t\t\t\t\t// signal to the outside our detected encoding\n\t\t\t\t\t// and final decoder stream\n\t\t\t\t\tresolve({ detected, stream: this.decodeStream });\n\t\t\t\t}, error => {\n\t\t\t\t\tthis.emit('error', error);\n\n\t\t\t\t\tcallback(error);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t_final(callback: () => void) {\n\n\t\t\t\t// normal finish\n\t\t\t\tif (this.decodeStream) {\n\t\t\t\t\tthis.decodeStream.end(callback);\n\t\t\t\t}\n\n\t\t\t\t// we were still waiting for data to do the encoding\n\t\t\t\t// detection. thus, wrap up starting the stream even\n\t\t\t\t// without all the data to get things going\n\t\t\t\telse {\n\t\t\t\t\tthis._startDecodeStream(() => {\n\t\t\t\t\t\tif (this.decodeStream) {\n\t\t\t\t\t\t\tthis.decodeStream.end(callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// errors\n\t\treadable.on('error', reject);\n\n\t\t// pipe through\n\t\treadable.pipe(writer);\n\t});\n}\n\nexport function decode(buffer: Buffer, encoding: string): string {\n\treturn iconv.decode(buffer, toNodeEncoding(encoding));\n}\n\nexport function encode(content: string | Buffer, encoding: string, options?: { addBOM?: boolean }): Buffer {\n\treturn iconv.encode(content as string /* TODO report into upstream typings */, toNodeEncoding(encoding), options);\n}\n\nexport function encodingExists(encoding: string): boolean {\n\treturn iconv.encodingExists(toNodeEncoding(encoding));\n}\n\nfunction decodeStream(encoding: string | null): NodeJS.ReadWriteStream {\n\treturn iconv.decodeStream(toNodeEncoding(encoding));\n}\n\nexport function encodeStream(encoding: string, options?: { addBOM?: boolean }): NodeJS.ReadWriteStream {\n\treturn iconv.encodeStream(toNodeEncoding(encoding), options);\n}\n\nfunction toNodeEncoding(enc: string | null): string {\n\tif (enc === UTF8_with_bom || enc === null) {\n\t\treturn UTF8; // iconv does not distinguish UTF 8 with or without BOM, so we need to help it\n\t}\n\n\treturn enc;\n}\n\nexport function detectEncodingByBOMFromBuffer(buffer: Buffer | VSBuffer | null, bytesRead: number): typeof UTF8_with_bom | typeof UTF16le | typeof UTF16be | null {\n\tif (!buffer || bytesRead < UTF16be_BOM.length) {\n\t\treturn null;\n\t}\n\n\tconst b0 = buffer.readUInt8(0);\n\tconst b1 = buffer.readUInt8(1);\n\n\t// UTF-16 BE\n\tif (b0 === UTF16be_BOM[0] && b1 === UTF16be_BOM[1]) {\n\t\treturn UTF16be;\n\t}\n\n\t// UTF-16 LE\n\tif (b0 === UTF16le_BOM[0] && b1 === UTF16le_BOM[1]) {\n\t\treturn UTF16le;\n\t}\n\n\tif (bytesRead < UTF8_BOM.length) {\n\t\treturn null;\n\t}\n\n\tconst b2 = buffer.readUInt8(2);\n\n\t// UTF-8\n\tif (b0 === UTF8_BOM[0] && b1 === UTF8_BOM[1] && b2 === UTF8_BOM[2]) {\n\t\treturn UTF8_with_bom;\n\t}\n\n\treturn null;\n}\n\n// we explicitly ignore a specific set of encodings from auto guessing\n// - ASCII: we never want this encoding (most UTF-8 files would happily detect as\n//          ASCII files and then you could not type non-ASCII characters anymore)\n// - UTF-16: we have our own detection logic for UTF-16\n// - UTF-32: we do not support this encoding in VSCode\nconst IGNORE_ENCODINGS = ['ascii', 'utf-16', 'utf-32'];\n\n/**\n * Guesses the encoding from buffer.\n */\nasync function guessEncodingByBuffer(buffer: Buffer): Promise<string | null> {\n\tconst jschardet = await import('jschardet');\n\n\tconst guessed = jschardet.detect(buffer.slice(0, AUTO_ENCODING_GUESS_MAX_BYTES)); // ensure to limit buffer for guessing due to https://github.com/aadsm/jschardet/issues/53\n\tif (!guessed || !guessed.encoding) {\n\t\treturn null;\n\t}\n\n\tconst enc = guessed.encoding.toLowerCase();\n\tif (0 <= IGNORE_ENCODINGS.indexOf(enc)) {\n\t\treturn null; // see comment above why we ignore some encodings\n\t}\n\n\treturn toIconvLiteEncoding(guessed.encoding);\n}\n\nconst JSCHARDET_TO_ICONV_ENCODINGS: { [name: string]: string } = {\n\t'ibm866': 'cp866',\n\t'big5': 'cp950'\n};\n\nfunction toIconvLiteEncoding(encodingName: string): string {\n\tconst normalizedEncodingName = encodingName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\tconst mapped = JSCHARDET_TO_ICONV_ENCODINGS[normalizedEncodingName];\n\n\treturn mapped || normalizedEncodingName;\n}\n\n/**\n * The encodings that are allowed in a settings file don't match the canonical encoding labels specified by WHATWG.\n * See https://encoding.spec.whatwg.org/#names-and-labels\n * Iconv-lite strips all non-alphanumeric characters, but ripgrep doesn't. For backcompat, allow these labels.\n */\nexport function toCanonicalName(enc: string): string {\n\tswitch (enc) {\n\t\tcase 'shiftjis':\n\t\t\treturn 'shift-jis';\n\t\tcase 'utf16le':\n\t\t\treturn 'utf-16le';\n\t\tcase 'utf16be':\n\t\t\treturn 'utf-16be';\n\t\tcase 'big5hkscs':\n\t\t\treturn 'big5-hkscs';\n\t\tcase 'eucjp':\n\t\t\treturn 'euc-jp';\n\t\tcase 'euckr':\n\t\t\treturn 'euc-kr';\n\t\tcase 'koi8r':\n\t\t\treturn 'koi8-r';\n\t\tcase 'koi8u':\n\t\t\treturn 'koi8-u';\n\t\tcase 'macroman':\n\t\t\treturn 'x-mac-roman';\n\t\tcase 'utf8bom':\n\t\t\treturn 'utf8';\n\t\tdefault:\n\t\t\tconst m = enc.match(/windows(\\d+)/);\n\t\t\tif (m) {\n\t\t\t\treturn 'windows-' + m[1];\n\t\t\t}\n\n\t\t\treturn enc;\n\t}\n}\n\nexport interface IDetectedEncodingResult {\n\tencoding: string | null;\n\tseemsBinary: boolean;\n}\n\nexport interface IReadResult {\n\tbuffer: Buffer | null;\n\tbytesRead: number;\n}\n\nexport function detectEncodingFromBuffer(readResult: IReadResult, autoGuessEncoding?: false): IDetectedEncodingResult;\nexport function detectEncodingFromBuffer(readResult: IReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult>;\nexport function detectEncodingFromBuffer({ buffer, bytesRead }: IReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult> | IDetectedEncodingResult {\n\n\t// Always first check for BOM to find out about encoding\n\tlet encoding = detectEncodingByBOMFromBuffer(buffer, bytesRead);\n\n\t// Detect 0 bytes to see if file is binary or UTF-16 LE/BE\n\t// unless we already know that this file has a UTF-16 encoding\n\tlet seemsBinary = false;\n\tif (encoding !== UTF16be && encoding !== UTF16le && buffer) {\n\t\tlet couldBeUTF16LE = true; // e.g. 0xAA 0x00\n\t\tlet couldBeUTF16BE = true; // e.g. 0x00 0xAA\n\t\tlet containsZeroByte = false;\n\n\t\t// This is a simplified guess to detect UTF-16 BE or LE by just checking if\n\t\t// the first 512 bytes have the 0-byte at a specific location. For UTF-16 LE\n\t\t// this would be the odd byte index and for UTF-16 BE the even one.\n\t\t// Note: this can produce false positives (a binary file that uses a 2-byte\n\t\t// encoding of the same format as UTF-16) and false negatives (a UTF-16 file\n\t\t// that is using 4 bytes to encode a character).\n\t\tfor (let i = 0; i < bytesRead && i < ZERO_BYTE_DETECTION_BUFFER_MAX_LEN; i++) {\n\t\t\tconst isEndian = (i % 2 === 1); // assume 2-byte sequences typical for UTF-16\n\t\t\tconst isZeroByte = (buffer.readInt8(i) === 0);\n\n\t\t\tif (isZeroByte) {\n\t\t\t\tcontainsZeroByte = true;\n\t\t\t}\n\n\t\t\t// UTF-16 LE: expect e.g. 0xAA 0x00\n\t\t\tif (couldBeUTF16LE && (isEndian && !isZeroByte || !isEndian && isZeroByte)) {\n\t\t\t\tcouldBeUTF16LE = false;\n\t\t\t}\n\n\t\t\t// UTF-16 BE: expect e.g. 0x00 0xAA\n\t\t\tif (couldBeUTF16BE && (isEndian && isZeroByte || !isEndian && !isZeroByte)) {\n\t\t\t\tcouldBeUTF16BE = false;\n\t\t\t}\n\n\t\t\t// Return if this is neither UTF16-LE nor UTF16-BE and thus treat as binary\n\t\t\tif (isZeroByte && !couldBeUTF16LE && !couldBeUTF16BE) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Handle case of 0-byte included\n\t\tif (containsZeroByte) {\n\t\t\tif (couldBeUTF16LE) {\n\t\t\t\tencoding = UTF16le;\n\t\t\t} else if (couldBeUTF16BE) {\n\t\t\t\tencoding = UTF16be;\n\t\t\t} else {\n\t\t\t\tseemsBinary = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Auto guess encoding if configured\n\tif (autoGuessEncoding && !seemsBinary && !encoding && buffer) {\n\t\treturn guessEncodingByBuffer(buffer.slice(0, bytesRead)).then(guessedEncoding => {\n\t\t\treturn {\n\t\t\t\tseemsBinary: false,\n\t\t\t\tencoding: guessedEncoding\n\t\t\t};\n\t\t});\n\t}\n\n\treturn { seemsBinary, encoding };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst cmdline = {\n\twindows: 'getmac.exe',\n\tunix: '/sbin/ifconfig -a || /sbin/ip link'\n};\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\texec(isWindows ? cmdline.windows : cmdline.unix, { timeout: 10000 }, (err, stdout, stdin) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(`Unable to retrieve mac address (${err.toString()})`);\n\t\t\t\t} else {\n\t\t\t\t\tconst regex = /(?:[a-f\\d]{2}[:\\-]){5}[a-f\\d]{2}/gi;\n\n\t\t\t\t\tlet match;\n\t\t\t\t\twhile ((match = regex.exec(stdout)) !== null) {\n\t\t\t\t\t\tconst macAddressCandidate = match[0];\n\t\t\t\t\t\tif (validateMacAddress(macAddressCandidate)) {\n\t\t\t\t\t\t\treturn resolve(macAddressCandidate);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn reject('Unable to retrieve mac address (unexpected format)');\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = getPathFromAmdModule(require, 'paths');\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { endsWith } from 'vs/base/common/strings';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { encode, encodeStream } from 'vs/base/node/encoding';\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\tstat: fs.Stats;\n\tisSymbolicLink: boolean;\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet linkStat: fs.Stats | undefined;\n\tlet linkStatError: NodeJS.ErrnoException | undefined;\n\ttry {\n\t\tlinkStat = await lstat(path);\n\t} catch (error) {\n\t\tlinkStatError = error;\n\t}\n\n\t// Then stat the target and return that\n\tconst isLink = !!(linkStat && linkStat.isSymbolicLink());\n\tif (linkStatError || isLink) {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn { stat: fileStat, isSymbolicLink: isLink };\n\t}\n\n\treturn { stat: linkStat!, isSymbolicLink: false };\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tfs.rename(oldPath, newPath, () => resolve());\n\t});\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: NodeJS.ReadableStream, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | NodeJS.ReadableStream | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | NodeJS.ReadableStream | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => writeFileAndFlush(path, data, options));\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accomodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n\tencoding?: {\n\t\tcharset: string;\n\t\taddBOM: boolean;\n\t};\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\nfunction writeFileAndFlush(path: string, data: string | Buffer | NodeJS.ReadableStream | Uint8Array, options: IWriteFileOptions | undefined): Promise<void> {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\treturn new Promise((resolve, reject) => {\n\t\tif (typeof data === 'string' || Buffer.isBuffer(data) || data instanceof Uint8Array) {\n\t\t\tdoWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve());\n\t\t} else {\n\t\t\tdoWriteFileStreamAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve());\n\t\t}\n\t});\n}\n\nfunction doWriteFileStreamAndFlush(path: string, reader: NodeJS.ReadableStream, options: IEnsuredWriteFileOptions, callback: (error?: Error) => void): void {\n\n\t// finish only once\n\tlet finished = false;\n\tconst finish = (error?: Error) => {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\n\t\t\t// in error cases we need to manually close streams\n\t\t\t// if the write stream was successfully opened\n\t\t\tif (error) {\n\t\t\t\tif (isOpen) {\n\t\t\t\t\twriter.once('close', () => callback(error));\n\t\t\t\t\twriter.destroy();\n\t\t\t\t} else {\n\t\t\t\t\tcallback(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// otherwise just return without error\n\t\t\telse {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t};\n\n\t// create writer to target. we set autoClose: false because we want to use the streams\n\t// file descriptor to call fs.fdatasync to ensure the data is flushed to disk\n\tconst writer = fs.createWriteStream(path, { mode: options.mode, flags: options.flag, autoClose: false });\n\n\t// Event: 'open'\n\t// Purpose: save the fd for later use and start piping\n\t// Notes: will not be called when there is an error opening the file descriptor!\n\tlet fd: number;\n\tlet isOpen: boolean;\n\twriter.once('open', descriptor => {\n\t\tfd = descriptor;\n\t\tisOpen = true;\n\n\t\t// if an encoding is provided, we need to pipe the stream through\n\t\t// an encoder stream and forward the encoding related options\n\t\tif (options.encoding) {\n\t\t\treader = reader.pipe(encodeStream(options.encoding.charset, { addBOM: options.encoding.addBOM }));\n\t\t}\n\n\t\t// start data piping only when we got a successful open. this ensures that we do\n\t\t// not consume the stream when an error happens and helps to fix this issue:\n\t\t// https://github.com/Microsoft/vscode/issues/42542\n\t\treader.pipe(writer);\n\t});\n\n\t// Event: 'error'\n\t// Purpose: to return the error to the outside and to close the write stream (does not happen automatically)\n\treader.once('error', error => finish(error));\n\twriter.once('error', error => finish(error));\n\n\t// Event: 'finish'\n\t// Purpose: use fs.fdatasync to flush the contents to disk\n\t// Notes: event is called when the writer has finished writing to the underlying resource. we must call writer.close()\n\t// because we have created the WriteStream with autoClose: false\n\twriter.once('finish', () => {\n\n\t\t// flush to disk\n\t\tif (canFlush && isOpen) {\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\twriter.destroy();\n\t\t\t});\n\t\t} else {\n\t\t\twriter.destroy();\n\t\t}\n\t});\n\n\t// Event: 'close'\n\t// Purpose: signal we are done to the outside\n\t// Notes: event is called when the writer's filedescriptor is closed\n\twriter.once('close', () => finish());\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (options.encoding) {\n\t\tdata = encode(data instanceof Uint8Array ? Buffer.from(data) : data, options.encoding.charset, { addBOM: options.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (ensuredOptions.encoding) {\n\t\tdata = encode(data, ensuredOptions.encoding.charset, { addBOM: ensuredOptions.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w',\n\t\tencoding: options.encoding\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || endsWith(source, '.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/Microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { dirname } from 'vs/base/common/path';\nimport * as objects from 'vs/base/common/objects';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile } from 'vs/base/node/watcher';\n\nexport interface IConfigurationChangeEvent<T> {\n\tconfig: T;\n}\n\nexport interface IConfigWatcher<T> {\n\tpath: string;\n\thasParseErrors: boolean;\n\n\treload(callback: (config: T) => void): void;\n\tgetConfig(): T;\n}\n\nexport interface IConfigOptions<T> {\n\tonError: (error: Error | string) => void;\n\tdefaultConfig: T;\n\tchangeBufferDelay?: number;\n\tparse?: (content: string, errors: any[]) => T;\n\tinitCallback?: (config: T) => void;\n}\n\n/**\n * A simple helper to watch a configured file for changes and process its contents as JSON object.\n * Supports:\n * - comments in JSON files and errors\n * - symlinks for the config file itself\n * - delayed processing of changes to accomodate for lots of changes\n * - configurable defaults\n */\nexport class ConfigWatcher<T> extends Disposable implements IConfigWatcher<T> {\n\tprivate cache: T | undefined;\n\tprivate parseErrors: json.ParseError[] | undefined;\n\tprivate disposed: boolean | undefined;\n\tprivate loaded: boolean | undefined;\n\tprivate timeoutHandle: NodeJS.Timer | null | undefined;\n\tprivate readonly _onDidUpdateConfiguration: Emitter<IConfigurationChangeEvent<T>>;\n\n\tconstructor(private _path: string, private options: IConfigOptions<T> = { defaultConfig: Object.create(null), onError: error => console.error(error) }) {\n\t\tsuper();\n\t\tthis._onDidUpdateConfiguration = this._register(new Emitter<IConfigurationChangeEvent<T>>());\n\n\t\tthis.registerWatcher();\n\t\tthis.initAsync();\n\t}\n\n\tget path(): string {\n\t\treturn this._path;\n\t}\n\n\tget hasParseErrors(): boolean {\n\t\treturn !!this.parseErrors && this.parseErrors.length > 0;\n\t}\n\n\tget onDidUpdateConfiguration(): Event<IConfigurationChangeEvent<T>> {\n\t\treturn this._onDidUpdateConfiguration.event;\n\t}\n\n\tprivate initAsync(): void {\n\t\tthis.loadAsync(config => {\n\t\t\tif (!this.loaded) {\n\t\t\t\tthis.updateCache(config); // prevent race condition if config was loaded sync already\n\t\t\t}\n\t\t\tif (this.options.initCallback) {\n\t\t\t\tthis.options.initCallback(this.getConfig());\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateCache(value: T): void {\n\t\tthis.cache = value;\n\t\tthis.loaded = true;\n\t}\n\n\tprivate loadSync(): T {\n\t\ttry {\n\t\t\treturn this.parse(fs.readFileSync(this._path).toString());\n\t\t} catch (error) {\n\t\t\treturn this.options.defaultConfig;\n\t\t}\n\t}\n\n\tprivate loadAsync(callback: (config: T) => void): void {\n\t\tfs.readFile(this._path, (error, raw) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(this.options.defaultConfig);\n\t\t\t}\n\n\t\t\treturn callback(this.parse(raw.toString()));\n\t\t});\n\t}\n\n\tprivate parse(raw: string): T {\n\t\tlet res: T;\n\t\ttry {\n\t\t\tthis.parseErrors = [];\n\t\t\tres = this.options.parse ? this.options.parse(raw, this.parseErrors) : json.parse(raw, this.parseErrors);\n\n\t\t\treturn res || this.options.defaultConfig;\n\t\t} catch (error) {\n\t\t\treturn this.options.defaultConfig; // Ignore parsing errors\n\t\t}\n\t}\n\n\tprivate registerWatcher(): void {\n\n\t\t// Watch the parent of the path so that we detect ADD and DELETES\n\t\tconst parentFolder = dirname(this._path);\n\t\tthis.watch(parentFolder, true);\n\n\t\t// Check if the path is a symlink and watch its target if so\n\t\tthis.handleSymbolicLink().then(undefined, () => { /* ignore error */ });\n\t}\n\n\tprivate async handleSymbolicLink(): Promise<void> {\n\t\tconst { stat, isSymbolicLink } = await statLink(this._path);\n\t\tif (isSymbolicLink && !stat.isDirectory()) {\n\t\t\tconst realPath = await realpath(this._path);\n\n\t\t\tthis.watch(realPath, false);\n\t\t}\n\t}\n\n\tprivate watch(path: string, isFolder: boolean): void {\n\t\tif (this.disposed) {\n\t\t\treturn; // avoid watchers that will never get disposed by checking for being disposed\n\t\t}\n\n\t\tif (isFolder) {\n\t\t\tthis._register(watchFolder(path, (type, path) => path === this._path ? this.onConfigFileChange() : undefined, error => this.options.onError(error)));\n\t\t} else {\n\t\t\tthis._register(watchFile(path, () => this.onConfigFileChange(), error => this.options.onError(error)));\n\t\t}\n\t}\n\n\tprivate onConfigFileChange(): void {\n\t\tif (this.timeoutHandle) {\n\t\t\tglobal.clearTimeout(this.timeoutHandle);\n\t\t\tthis.timeoutHandle = null;\n\t\t}\n\n\t\t// we can get multiple change events for one change, so we buffer through a timeout\n\t\tthis.timeoutHandle = global.setTimeout(() => this.reload(), this.options.changeBufferDelay || 0);\n\t}\n\n\treload(callback?: (config: T) => void): void {\n\t\tthis.loadAsync(currentConfig => {\n\t\t\tif (!objects.equals(currentConfig, this.cache)) {\n\t\t\t\tthis.updateCache(currentConfig);\n\n\t\t\t\tthis._onDidUpdateConfiguration.fire({ config: currentConfig });\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(currentConfig);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetConfig(): T {\n\t\tthis.ensureLoaded();\n\n\t\treturn this.cache!;\n\t}\n\n\tprivate ensureLoaded(): void {\n\t\tif (!this.loaded) {\n\t\t\tthis.updateCache(this.loadSync());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposed = true;\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidChangeConnections: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => this.activeRequests.delete(disposable));\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidChangeConnections = new Emitter<Connection<TContext>>();\n\treadonly onDidChangeConnections: Event<Connection<TContext>> = this._onDidChangeConnections.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidChangeConnections.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tconst channelPromise = router.routeCall(that, command, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tconst channelPromise = router.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidChangeConnections.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidChangeConnections);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.flush();\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext) {\n\t\tsuper(protocol, id);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new BufferedEmitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\tconsole.error(`PROTOCOL CORRUPTION, LAST SAW MSG ${this._incomingMsgId} AND HAVE NOW RECEIVED MSG ${msg.id}`);\n\t\t\t\t}\n\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\tthis._sendAckCheck();\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { revive } from 'vs/base/common/marshalling';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { isUpperAsciiLetter } from 'vs/base/common/strings';\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\n\nexport class NodeSocket implements ISocket {\n\tpublic readonly socket: Socket;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\tthis.socket.write(<Buffer>buffer.buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tmask: 0\n\t};\n\n\tconstructor(socket: NodeSocket) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.dispose();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this.socket.onClose(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\theader.writeUInt8(0b10000010, 0);\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\t// const firstByte = peekHeader.readUInt8(0);\n\t\t\t\t// const finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._onData.fire(body);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t} else {\n\t\t// Mac/Unix: use socket file\n\t\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\tconst _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone, assign } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/Microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = assign(deepClone(process.env), { 'VSCODE_PARENT_PID': String(process.pid) });\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = assign(forkOpts.env, this.options.env);\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ILogToSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onLogToEmitter = new Emitter<ILogToSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'log':\n\t\t\t\treturn Promise.resolve(this._onLogToEmitter.fire({ sessionId: arg[0], log: arg[1] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'log':\n\t\t\t\treturn this._onLogToEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tlogToSession(sessionId: string, log: IRemoteConsoleLog): void {\n\t\tthis.channel.call('log', [sessionId, log]);\n\t}\n\n\tget onLogToSession(): Event<ILogToSessionEvent> {\n\t\treturn this.channel.listen('log');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: IProcessEnvironment): Promise<void> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension, IGlobalExtensionEnablementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer), args[1]);\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) { }\n\n\tget onInstallExtension(): Event<InstallExtensionEvent> { return this.channel.listen('onInstallExtension'); }\n\tget onDidInstallExtension(): Event<DidInstallExtensionEvent> { return Event.map(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension'), i => ({ ...i, local: i.local ? transformIncomingExtension(i.local, null) : i.local })); }\n\tget onUninstallExtension(): Event<IExtensionIdentifier> { return this.channel.listen('onUninstallExtension'); }\n\tget onDidUninstallExtension(): Event<DidUninstallExtensionEvent> { return this.channel.listen('onDidUninstallExtension'); }\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation, type]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, force]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n\nexport class GlobalExtensionEnablementServiceChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IGlobalExtensionEnablementService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeEnablement': return this.service.onDidChangeEnablement;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getDisabledExtensionsAsync': return Promise.resolve(this.service.getDisabledExtensions());\n\t\t\tcase 'enableExtension': return this.service.enableExtension(args[0]);\n\t\t\tcase 'disableExtension': return this.service.disableExtension(args[0]);\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class GlobalExtensionEnablementServiceClient implements IGlobalExtensionEnablementService {\n\n\t_serviceBrand: undefined;\n\n\tget onDidChangeEnablement(): Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }> { return this.channel.listen('onDidChangeEnablement'); }\n\n\tconstructor(private readonly channel: IChannel) {\n\t}\n\n\tgetDisabledExtensionsAsync(): Promise<IExtensionIdentifier[]> {\n\t\treturn this.channel.call('getDisabledExtensionsAsync');\n\t}\n\n\tenableExtension(extension: IExtensionIdentifier): Promise<boolean> {\n\t\treturn this.channel.call('enableExtension', [extension]);\n\t}\n\n\tdisableExtension(extension: IExtensionIdentifier): Promise<boolean> {\n\t\treturn this.channel.call('disableExtension', [extension]);\n\t}\n\n\tgetDisabledExtensions(): IExtensionIdentifier[] {\n\t\tthrow new Error('not supported');\n\t}\n\n}\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { rimraf } from 'vs/base/node/pfs';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\tprivate environmentService: IEnvironmentService,\n\t\tprivate logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string;\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly webviewEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.metadata ? extension.metadata.publisherId : null,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.metadata ? extension.metadata.publisherDisplayName : null,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface IBuiltInExtension {\n\tname: string;\n\tversion: string;\n\trepo: string;\n\tforQualities?: ReadonlyArray<string>;\n\tmetadata: any;\n}\n\n/**\n * Parses the built-in extension JSON data and filters it down to the\n * extensions built into this product quality.\n */\nexport function parseBuiltInExtensions(rawJson: string, productQuality: string | undefined) {\n\tconst parsed: IBuiltInExtension[] = JSON.parse(rawJson);\n\tif (!productQuality) {\n\t\treturn parsed;\n\t}\n\n\treturn parsed.filter(ext => ext.forQualities?.indexOf?.(productQuality) !== -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/nsfw/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: WatcherChannelClient | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tconst options = {};\n\t\tthis._register(this.service.watch(options)(e => !this.isDisposed && this.onFileChanges(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/unix/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: WatcherChannelClient | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.watch(this.watcherOptions)(e => !this.isDisposed && this.onFileChanges(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(getPathFromAmdModule(require, 'vs/platform/files/node/watcher/win32/CodeHelper.exe'), args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim, endsWith } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && endsWith(this.folder.path, posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onFileChanges(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { forEach } from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes[key];\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn this._nodes[this._hashFn(data)];\n\t}\n\n\tisEmpty(): boolean {\n\t\tfor (const _key in this._nodes) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew(first: A1, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\tcreateInstance<Services extends BrandedService[], Ctor extends new (...services: Services) => any, R extends InstanceType<Ctor>>(t: Ctor): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\t_serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { IUserHomeProvider } from 'vs/base/common/labels';\n\nexport interface ParsedArgs {\n\t_: string[];\n\t'folder-uri'?: string[]; // undefined or array of 1 or more\n\t'file-uri'?: string[]; // undefined or array of 1 or more\n\t_urls?: string[];\n\thelp?: boolean;\n\tversion?: boolean;\n\ttelemetry?: boolean;\n\tstatus?: boolean;\n\twait?: boolean;\n\twaitMarkerFilePath?: string;\n\tdiff?: boolean;\n\tadd?: boolean;\n\tgoto?: boolean;\n\t'new-window'?: boolean;\n\t'unity-launch'?: boolean; // Always open a new window, except if opening the first window or opening a file or folder as part of the launch.\n\t'reuse-window'?: boolean;\n\tlocale?: string;\n\t'user-data-dir'?: string;\n\t'prof-startup'?: boolean;\n\t'prof-startup-prefix'?: string;\n\t'prof-append-timers'?: string;\n\tverbose?: boolean;\n\ttrace?: boolean;\n\t'trace-category-filter'?: string;\n\t'trace-options'?: string;\n\tlog?: string;\n\tlogExtensionHostCommunication?: boolean;\n\t'extensions-dir'?: string;\n\t'builtin-extensions-dir'?: string;\n\t'extra-extensions-dir'?: string[];\n\t'extra-builtin-extensions-dir'?: string[];\n\textensionDevelopmentPath?: string[]; // // undefined or array of 1 or more local paths or URIs\n\textensionTestsPath?: string; // either a local path or a URI\n\t'extension-development-confirm-save'?: boolean;\n\t'inspect-extensions'?: string;\n\t'inspect-brk-extensions'?: string;\n\tdebugId?: string;\n\t'inspect-search'?: string;\n\t'inspect-brk-search'?: string;\n\t'disable-extensions'?: boolean;\n\t'disable-extension'?: string[]; // undefined or array of 1 or more\n\t'list-extensions'?: boolean;\n\t'show-versions'?: boolean;\n\t'category'?: string;\n\t'install-extension'?: string[]; // undefined or array of 1 or more\n\t'uninstall-extension'?: string[]; // undefined or array of 1 or more\n\t'locate-extension'?: string[]; // undefined or array of 1 or more\n\t'enable-proposed-api'?: string[]; // undefined or array of 1 or more\n\t'open-url'?: boolean;\n\t'skip-getting-started'?: boolean;\n\t'skip-release-notes'?: boolean;\n\t'sticky-quickopen'?: boolean;\n\t'disable-restore-windows'?: boolean;\n\t'disable-telemetry'?: boolean;\n\t'export-default-configuration'?: string;\n\t'install-source'?: string;\n\t'disable-updates'?: boolean;\n\t'disable-crash-reporter'?: boolean;\n\t'skip-add-to-recently-opened'?: boolean;\n\t'max-memory'?: string;\n\t'file-write'?: boolean;\n\t'file-chmod'?: boolean;\n\t'driver'?: string;\n\t'driver-verbose'?: boolean;\n\tremote?: string;\n\t'disable-user-env-probe'?: boolean;\n\t'force'?: boolean;\n\t'force-user-env'?: boolean;\n\n\t// chromium command line args: https://electronjs.org/docs/all#supported-chrome-command-line-switches\n\t'no-proxy-server'?: boolean;\n\t'proxy-server'?: string;\n\t'proxy-bypass-list'?: string;\n\t'proxy-pac-url'?: string;\n\t'inspect'?: string;\n\t'inspect-brk'?: string;\n\t'js-flags'?: string;\n\t'disable-gpu'?: boolean;\n\t'nolazy'?: boolean;\n\t'force-device-scale-factor'?: string;\n\t'force-renderer-accessibility'?: boolean;\n\t'ignore-certificate-error'?: boolean;\n\t'allow-insecure-localhost'?: boolean;\n}\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport const BACKUPS = 'Backups';\n\nexport interface IEnvironmentService extends IUserHomeProvider {\n\n\t_serviceBrand: undefined;\n\n\targs: ParsedArgs;\n\n\texecPath: string;\n\tcliPath: string;\n\tappRoot: string;\n\n\tuserHome: string;\n\tuserDataPath: string;\n\n\tappSettingsHome: URI;\n\n\t// user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\n\t// sync resources\n\tuserDataSyncLogResource: URI;\n\tuserDataSyncHome: URI;\n\tsettingsSyncPreviewResource: URI;\n\tkeybindingsSyncPreviewResource: URI;\n\n\tmachineSettingsHome: URI;\n\tmachineSettingsResource: URI;\n\n\tglobalStorageHome: string;\n\tworkspaceStorageHome: string;\n\n\tbackupHome: URI;\n\tbackupWorkspacesPath: string;\n\n\tuntitledWorkspacesHome: URI;\n\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tbuiltinExtensionsPath: string;\n\textensionsPath?: string;\n\textraExtensionPaths: string[];\n\textraBuiltinExtensionPaths: string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\tlogExtensionHostCommunication?: boolean;\n\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\n\tisBuilt: boolean;\n\twait: boolean;\n\tstatus: boolean;\n\n\tlog?: string;\n\tlogsPath: string;\n\tverbose: boolean;\n\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\tnodeCachedDataDir?: string;\n\n\tinstallSourcePath: string;\n\tdisableUpdates: boolean;\n\tdisableCrashReporter: boolean;\n\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n\n\tgalleryMachineIdResource?: URI;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\treadonly manifest: IExtensionManifest;\n\tmetadata: IGalleryMetadata;\n\treadmeUrl: URI | null;\n\tchangelogUrl: URI | null;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport interface IExtensionGalleryService {\n\t_serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<URI>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport interface IExtensionManagementService {\n\t_serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI): Promise<ILocalExtension>;\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n\t// Async method until storage service is available in shared process\n\tgetDisabledExtensionsAsync(): Promise<IExtensionIdentifier[]>;\n}\n\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An even that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onFileChanges: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onAfterOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tprivate readonly _changes: readonly IFileChange[];\n\n\tconstructor(changes: readonly IFileChange[]) {\n\t\tthis._changes = changes;\n\t}\n\n\tget changes() {\n\t\treturn this._changes;\n\t}\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this._changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this._changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this._changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer, VSBufferWriteableStream, newWriteableBufferStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n}\n\nexport function createReadStream(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: ICreateReadStreamOptions, token?: CancellationToken): VSBufferReadableStream {\n\tconst stream = newWriteableBufferStream();\n\n\t// do not await reading but simply return the stream directly since it operates\n\t// via events. finally end the stream and send through the possible error\n\tlet error: Error | undefined = undefined;\n\n\tdoReadFileIntoStream(provider, resource, stream, options, token).then(undefined, err => error = err).finally(() => stream.end(error));\n\n\treturn stream;\n}\n\nasync function doReadFileIntoStream(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, stream: VSBufferWriteableStream, options: ICreateReadStreamOptions, token?: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\ttry {\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tstream.write(buffer);\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\tstream.write(buffer.slice(0, lastChunkLength));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token?: CancellationToken): boolean {\n\tif (token && token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow it to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, isSymbolicLink } = await statLink(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (isSymbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(() => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onFileChanges(normalizedFileChanges);\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tthis._entries.forEach((value, key) => callback(key, value));\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\n// PROXY\n// Ghetto-declare of the global Proxy object. This isn't the proper way\n// but allows us to run this code in the browser without IE11.\ndeclare const Proxy: any;\nconst _canUseProxy = typeof Proxy === 'function';\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn.apply(undefined, [accessor, ...args]);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 150) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation || !_canUseProxy) {\n\t\t\t// eager instantiation or no support JS proxies (e.g. IE11)\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.getValue();\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.getValue()[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const enum LanguageType {\n\tCore = 1,\n\tContributed\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\t_serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(type?: LanguageType): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\t_serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\t_serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.client.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.client.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.client.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.client.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.client.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.client.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.args.log === 'string') {\n\t\tconst logLevel = environmentService.args.log.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isAbsolutePath, dirname, basename, joinPath, isEqual, isEqualOrParent } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, bufferToStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, ReadableStreamEvents, consumeReadableWithLimit, consumeStreamWithLimit } from 'vs/base/common/stream';\nimport { Queue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { assign } from 'vs/base/common/objects';\nimport { createReadStream } from 'vs/platform/files/common/io';\n\nexport class FileService extends Disposable implements IFileService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onFileChanges.fire(new FileChangesEvent(changes))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promise.all(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate _onAfterOperation: Emitter<FileOperationEvent> = this._register(new Emitter<FileOperationEvent>());\n\treadonly onAfterOperation: Event<FileOperationEvent> = this._onAfterOperation.event;\n\n\tprivate _onError: Emitter<Error> = this._register(new Emitter<Error>());\n\treadonly onError: Event<Error> = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forPaths<true>();\n\t\t\t\ttrie.set(resource.toString(), true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri.toString(), true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource.toString()) || trie.get(stat.resource.toString()))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: getBaseLabel(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promise.all(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promise.all(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onAfterOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tbufferOrReadableOrStream = await consumeStreamWithLimit(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStream = consumeReadableWithLimit(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, bufferOrReadableOrStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, bufferOrReadableOrStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStream) : bufferOrReadableOrStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// file cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tconst stream = await this.doReadAsFileStream(provider, resource, assign({\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t}, options || Object.create(null)));\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadAsFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadAsFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & { preferUnbuffered?: boolean }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelyhood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\tlet fileStreamPromise: Promise<VSBufferReadableStream>;\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStreamPromise = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileStreamed(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileBuffered(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\tconst [fileStat, fileStream] = await Promise.all([statPromise, fileStreamPromise]);\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn this.transformFileReadStream(resource, fileStream, options);\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = createReadStream(provider, resource, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn this.transformFileReadStream(resource, fileStream, options);\n\t}\n\n\tprivate transformFileReadStream(resource: URI, stream: ReadableStreamEvents<Uint8Array | VSBuffer>, options: IReadFileOptions): VSBufferReadableStream {\n\t\treturn transform(stream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate async readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileOptions): Promise<VSBufferReadableStream> {\n\t\tlet buffer = await provider.readFile(resource);\n\n\t\t// respect position option\n\t\tif (options && typeof options.position === 'number') {\n\t\t\tbuffer = buffer.slice(options.position);\n\t\t}\n\n\t\t// respect length option\n\t\tif (options && typeof options.length === 'number') {\n\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\treturn bufferToStream(VSBuffer.wrap(buffer));\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onAfterOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onAfterOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promise.all(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst isPathCaseSensitive = !!(sourceProvider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = isEqual(source, target, true /* ignore case */);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && isEqualOrParent(target, source, !isPathCaseSensitive)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst isPathCaseSensitive = !!(sourceProvider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tif (isEqualOrParent(source, target, !isPathCaseSensitive)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onAfterOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\twhile (!isEqual(directory, dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync del(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<void> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onAfterOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate _onFileChanges: Emitter<FileChangesEvent> = this._register(new Emitter<FileChangesEvent>());\n\treadonly onFileChanges: Event<FileChangesEvent> = this._onFileChanges.event;\n\n\tprivate activeWatchers = new Map<string, { disposable: IDisposable, count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet watchDisposable = toDisposable(() => watchDisposed = true);\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\twatchDisposable = disposable;\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => dispose(watchDisposable));\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\treturn [\n\t\t\tthis.toMapKey(provider, resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate writeQueues: Map<string, Queue<void>> = new Map();\n\n\tprivate ensureWriteQueue(provider: IFileSystemProvider, resource: URI): Queue<void> {\n\t\t// ensure to never write to the same resource without finishing\n\t\t// the one write. this ensures a write finishes consistently\n\t\t// (even with error) before another write is done.\n\t\tconst queueKey = this.toMapKey(provider, resource);\n\t\tlet writeQueue = this.writeQueues.get(queueKey);\n\t\tif (!writeQueue) {\n\t\t\twriteQueue = new Queue<void>();\n\t\t\tthis.writeQueues.set(queueKey, writeQueue);\n\n\t\t\tconst onFinish = Event.once(writeQueue.onFinished);\n\t\t\tonFinish(() => {\n\t\t\t\tthis.writeQueues.delete(queueKey);\n\t\t\t\tdispose(writeQueue);\n\t\t\t});\n\t\t}\n\n\t\treturn writeQueue;\n\t}\n\n\tprivate toMapKey(provider: IFileSystemProvider, resource: URI): string {\n\t\tconst isPathCaseSensitive = !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\treturn isPathCaseSensitive ? resource.toString() : resource.toString().toLowerCase();\n\t}\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, readableOrStream: VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, stream: VSBufferReadableStream): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet posInFile = 0;\n\n\t\t\tstream.on('data', async chunk => {\n\n\t\t\t\t// pause stream to perform async write operation\n\t\t\t\tstream.pause();\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t// handler again before finishing.\n\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t});\n\n\t\t\tstream.on('error', error => reject(error));\n\t\t\tstream.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(() => this.doWriteUnbufferedQueued(provider, resource, bufferOrReadableOrStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStream);\n\t\t}\n\n\t\treturn provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promise.all([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mkdir, open, close, read, write, fdatasync, Dirent, Stats } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { statLink, unlink, move, copy, readFile, truncate, rimraf, RimRafMode, exists, readdirWithFileTypes } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, transform } from 'vs/base/common/stream';\nimport { createReadStream } from 'vs/platform/files/common/io';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(private logService: ILogService, private options?: IDiskFileSystemProviderOptions) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, isSymbolicLink } = await statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, isSymbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdirWithFileTypes(this.toFilePath(resource));\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | Dirent, isSymbolicLink = entry.isSymbolicLink()): FileType {\n\t\tif (isSymbolicLink) {\n\t\t\treturn FileType.SymbolicLink | (entry.isDirectory() ? FileType.Directory : FileType.File);\n\t\t}\n\n\t\treturn entry.isFile() ? FileType.File : entry.isDirectory() ? FileType.Directory : FileType.Unknown;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst fileStream = createReadStream(this, resource, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn transform(fileStream, { data: data => data.buffer }, data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate writeHandles: Set<number> = new Set();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (opts.create) {\n\t\t\t\tif (isWindows && await exists(filePath)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (opts.create) {\n\t\t\t\tthis.writeHandles.add(handle);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promisify(mkdir)(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@ben ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tthis.recursiveFoldersToWatch.push(folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tthis.recursiveFoldersToWatch.splice(this.recursiveFoldersToWatch.indexOf(folderToWatch), 1);\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(() => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\t//#endregion\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LoggerChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t\tcase 'consoleLog': this.consoleLog(arg[0], arg[1]); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate consoleLog(severity: string, args: string[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (severity) {\n\t\t\tcase 'error':\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase 'warn':\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n}\n\nexport class LoggerChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLoggerChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n\tconsoleLog(severity: string, args: string[]): void {\n\t\tthis.channel.call('consoleLog', [severity, args]);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private master: LoggerChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(master.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.master.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n\nasync function createSpdLogLogger(processName: string, logsFolder: string): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\treturn _spdlog.createRotatingLoggerAsync(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tprivate buffer: ILog[] = [];\n\tprivate _loggerCreationPromise: Promise<void> | undefined = undefined;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(private readonly name: string, private readonly logsFolder: string, level: LogLevel) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tif (!this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise = createSpdLogLogger(this.name, this.logsFolder)\n\t\t\t\t.then(logger => {\n\t\t\t\t\tif (logger) {\n\t\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buffer = [];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn this._loggerCreationPromise;\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t\tthis._loggerCreationPromise = undefined;\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\tsticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\tsilent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\tneverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\tid: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\tisSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces.\n\t */\n\tscope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\tseverity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\tmessage: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\tsource?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\tprimary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\tsecondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\tlabel: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\tisSecondary?: boolean;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\tkeepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\tshowAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\thideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param onCancel will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\tprivate readonly _onDidClose: Emitter<void> = new Emitter();\n\treadonly onDidClose: Event<void> = this._onDidClose.event;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void {\n\t\tthis._onDidClose.dispose();\n\t}\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/platform/product/common/productService';\nimport { assign } from 'vs/base/common/objects';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { env } from 'vs/base/common/process';\n\nlet product: IProductConfiguration;\n\n// Web\nif (isWeb) {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tassign(product, {\n\t\t\tversion: '1.41.0-dev',\n\t\t\tcodeServerVersion: 'dev',\n\t\t\tnameLong: 'Visual Studio Code Web Dev',\n\t\t\tnameShort: 'VSCode Web Dev',\n\t\t\turlProtocol: 'code-oss'\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tassign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\n// Node: AMD loader\nelse if (typeof require !== 'undefined' && typeof require.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\n\n\tproduct = assign({}, require.__$__nodeRequire(path.join(rootPath, 'product.json')) as IProductConfiguration);\n\tconst pkg = require.__$__nodeRequire(path.join(rootPath, 'package.json')) as { version: string; codeServerVersion: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tassign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tassign(product, {\n\t\tversion: pkg.version,\n\t\tcodeServerVersion: pkg.codeServerVersion,\n\t});\n}\n\n// Unknown\nelse {\n\tthrow new Error('Unable to resolve product configuration');\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, ParsedArgs, IDebugParams, IExtensionHostDebugParams, BACKUPS } from 'vs/platform/environment/common/environment';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport product from 'vs/platform/product/common/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nexport const xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\n\tif (xdgRuntimeDir && !vscodePortable) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\treturn path.join(xdgRuntimeDir, `vscode-${scope}-${product.version}-${type}.sock`);\n\t}\n\n\treturn path.join(userDataPath, `${product.version}-${type}.sock`);\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${product.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport class EnvironmentService implements IEnvironmentService {\n\n\t_serviceBrand: undefined;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): string { return os.homedir(); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return resources.joinPath(this.userRoamingDataHome, '.sync'); }\n\n\t@memoize\n\tget settingsSyncPreviewResource(): URI { return resources.joinPath(this.userDataSyncHome, 'settings.json'); }\n\n\t@memoize\n\tget keybindingsSyncPreviewResource(): URI { return resources.joinPath(this.userDataSyncHome, 'keybindings.json'); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(path.join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget machineSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'Machine')); }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return resources.joinPath(this.machineSettingsHome, 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): string { return path.join(this.appSettingsHome.fsPath, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): string { return path.join(this.appSettingsHome.fsPath, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(path.join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn URI.file(path.join(this.userHome, product.dataFolderName, 'argv.json'));\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): URI { return URI.file(path.join(this.userDataPath, BACKUPS)); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome.fsPath, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn path.join(this.userHome, product.dataFolderName, 'extensions');\n\t}\n\n\t@memoize get extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\t@memoize get extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(p => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(p)) {\n\t\t\t\t\treturn URI.parse(p);\n\t\t\t\t}\n\t\t\t\treturn URI.file(path.normalize(p));\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\t@memoize\n\tget logExtensionHostCommunication(): boolean { return !!this.args.logExtensionHostCommunication; }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget log(): string | undefined { return this._args.log; }\n\n\tget wait(): boolean { return !!this._args.wait; }\n\n\tget status(): boolean { return !!this._args.status; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\t@memoize\n\tget galleryMachineIdResource(): URI { return resources.joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n\nexport function parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService, LanguageType } from 'vs/platform/localizations/common/localizations';\nimport product from 'vs/platform/product/common/product';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nconst systemLanguages: string[] = ['de', 'en', 'en-US', 'es', 'fr', 'it', 'ja', 'ko', 'ru', 'zh-CN', 'zh-TW'];\nif (product.quality !== 'stable') {\n\tsystemLanguages.push('hu');\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(type: LanguageType): Promise<string[]> {\n\t\tif (type === LanguageType.Core) {\n\t\t\treturn Promise.resolve([...systemLanguages]);\n\t\t}\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tconst languages = type === LanguageType.Contributed ? Object.keys(languagePacks) : [...systemLanguages, ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\t_serviceBrand: undefined;\n\n}\n\nexport interface IProductConfiguration {\n\treadonly version: string;\n\treadonly codeServerVersion: string;\n\treadonly date?: string;\n\treadonly quality?: string;\n\treadonly commit?: string;\n\n\treadonly nameShort: string;\n\treadonly nameLong: string;\n\n\treadonly win32AppUserModelId?: string;\n\treadonly win32MutexName?: string;\n\treadonly applicationName: string;\n\n\treadonly urlProtocol: string;\n\treadonly dataFolderName: string;\n\n\treadonly downloadUrl?: string;\n\treadonly updateUrl?: string;\n\treadonly target?: string;\n\n\treadonly settingsSearchBuildId?: number;\n\treadonly settingsSearchUrl?: string;\n\n\treadonly experimentsUrl?: string;\n\n\treadonly extensionsGallery?: {\n\t\treadonly serviceUrl: string;\n\t\treadonly itemUrl: string;\n\t\treadonly controlUrl: string;\n\t\treadonly recommendationsUrl: string;\n\t};\n\n\treadonly extensionTips?: { [id: string]: string; };\n\treadonly extensionImportantTips?: { [id: string]: { name: string; pattern: string; isExtensionPack?: boolean }; };\n\treadonly exeBasedExtensionTips?: { [id: string]: IExeBasedExtensionTip; };\n\treadonly extensionKeywords?: { [extension: string]: readonly string[]; };\n\treadonly keymapExtensionTips?: readonly string[];\n\n\treadonly crashReporter?: {\n\t\treadonly companyName: string;\n\t\treadonly productName: string;\n\t};\n\n\treadonly enableTelemetry?: boolean;\n\treadonly aiConfig?: {\n\t\treadonly asimovKey: string;\n\t};\n\n\treadonly sendASmile?: {\n\t\treadonly reportIssueUrl: string,\n\t\treadonly requestFeatureUrl: string\n\t};\n\n\treadonly documentationUrl?: string;\n\treadonly releaseNotesUrl?: string;\n\treadonly keyboardShortcutsUrlMac?: string;\n\treadonly keyboardShortcutsUrlLinux?: string;\n\treadonly keyboardShortcutsUrlWin?: string;\n\treadonly introductoryVideosUrl?: string;\n\treadonly tipsAndTricksUrl?: string;\n\treadonly newsletterSignupUrl?: string;\n\treadonly twitterUrl?: string;\n\treadonly requestFeatureUrl?: string;\n\treadonly reportIssueUrl?: string;\n\treadonly licenseUrl?: string;\n\treadonly privacyStatementUrl?: string;\n\treadonly telemetryOptOutUrl?: string;\n\n\treadonly npsSurveyUrl?: string;\n\treadonly surveys?: readonly ISurveyData[];\n\n\treadonly checksums?: { [path: string]: string; };\n\treadonly checksumFailMoreInfoUrl?: string;\n\n\treadonly hockeyApp?: {\n\t\treadonly 'win32-ia32': string;\n\t\treadonly 'win32-x64': string;\n\t\treadonly 'linux-x64': string;\n\t\treadonly 'darwin': string;\n\t};\n\n\treadonly portable?: string;\n\n\treadonly extensionKind?: { readonly [extensionId: string]: ExtensionKind[]; };\n\treadonly extensionAllowedProposedApi?: readonly string[];\n\n\treadonly msftInternalDomains?: string[];\n\treadonly linkProtectionTrustedDomains?: readonly string[];\n}\n\nexport interface IExeBasedExtensionTip {\n\tfriendlyName: string;\n\twindowsPath?: string;\n\trecommendations: readonly string[];\n\timportant?: boolean;\n\texeFriendlyName?: string;\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { values } from 'vs/base/common/map';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tmachineSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tmachineOverridableSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of values(this.overrideIdentifiers)) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\tdefault: this.defaultOverridesConfigurationNode.properties![overrideIdentifierProperty]?.default\n\t\t\t};\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object') {\n\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, values, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (content) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\tif (scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema && typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW;\n\t}\n}\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: this._folderConfigurations.keys().reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, values(keys)]));\n\treturn { keys: values(keysSet), overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = values(keysSet);\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationModelParser, ConfigurationChangeEvent } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ConfigWatcher } from 'vs/base/node/config';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\t_serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfigModelWatcher: ConfigWatcher<ConfigurationModelParser> | undefined;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI\n\t) {\n\t\tsuper();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t}\n\n\tinitialize(): Promise<void> {\n\t\tif (this.userConfigModelWatcher) {\n\t\t\tthis.userConfigModelWatcher.dispose();\n\t\t}\n\n\t\tif (this.settingsResource.scheme !== Schemas.file) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn new Promise<void>((c, e) => {\n\t\t\tthis.userConfigModelWatcher = this._register(new ConfigWatcher(this.settingsResource.fsPath, {\n\t\t\t\tchangeBufferDelay: 300, onError: error => onUnexpectedError(error), defaultConfig: new ConfigurationModelParser(this.settingsResource.fsPath), parse: (content: string, parseErrors: any[]) => {\n\t\t\t\t\tconst userConfigModelParser = new ConfigurationModelParser(this.settingsResource.fsPath);\n\t\t\t\t\tuserConfigModelParser.parseContent(content);\n\t\t\t\t\tparseErrors = [...userConfigModelParser.errors];\n\t\t\t\t\treturn userConfigModelParser;\n\t\t\t\t}, initCallback: () => {\n\t\t\t\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), this.userConfigModelWatcher!.getConfig().configurationModel);\n\t\t\t\t\tthis._register(this.userConfigModelWatcher!.onDidUpdateConfiguration(() => this.onDidChangeUserConfiguration(this.userConfigModelWatcher!.getConfig().configurationModel)));\n\t\t\t\t\tc();\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void> {\n\t\tif (this.userConfigModelWatcher) {\n\t\t\treturn new Promise<void>(c => this.userConfigModelWatcher!.reload(userConfigModelParser => {\n\t\t\t\tthis.onDidChangeUserConfiguration(userConfigModelParser.configurationModel);\n\t\t\t\tc();\n\t\t\t}));\n\t\t}\n\t\treturn this.initialize();\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\t_serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn JSON.parse(buffer.toString());\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\t_serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tremoveItem(key: string): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileSync, readFile } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\t_serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\tNONE = 0,\n\tSHUTDOWN = 1\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IWorkspaceStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be converted to a string.\n\t * Storing either undefined or null will remove the entry under the key.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the onWillSaveState to ask\n\t * everyone for latest state.\n\t */\n\tflush(): void;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport interface IWorkspaceStorageChangeEvent {\n\tkey: string;\n\tscope: StorageScope;\n}\n\nexport class InMemoryStorageService extends Disposable implements IStorageService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<IWorkspaceStorageChangeEvent>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprotected readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate globalCache: Map<string, string> = new Map<string, string>();\n\tprivate workspaceCache: Map<string, string> = new Map<string, string>();\n\n\tprivate getCache(scope: StorageScope): Map<string, string> {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalCache : this.workspaceCache;\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.remove(key, scope);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.getCache(scope).get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// Update in cache\n\t\tthis.getCache(scope).set(key, valueStr);\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tremove(key: string, scope: StorageScope): Promise<void> {\n\t\tconst wasDeleted = this.getCache(scope).delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn Promise.resolve(); // Return early if value already deleted\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tlogStorage(): void {\n\t\tlogStorage(this.globalCache, this.workspaceCache, 'inMemory', 'inMemory');\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n\n\tflush(): void {\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLog2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error, true);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from '../common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tisOptedIn: boolean;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { values } from 'vs/base/common/map';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.map(value => ({ filterType, value }))\n\t\t];\n\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy }));\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query(assign({}, this.state, { sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query(assign({}, this.state, { assetTypes }));\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w\\.]+))(:(//)?)([\\w\\.@\\:/\\-~]+)(\\.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = require.toUrl('./media/defaultIcon.png');\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\t_serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) private readonly storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, this.storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn Promise.resolve(extension);\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None)\n\t\t\t.then(({ galleryExtensions }) => {\n\t\t\t\tconst [rawExtension] = galleryExtensions;\n\t\t\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (version) {\n\t\t\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\t\t\tif (versionAsset) {\n\t\t\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\t\t\treturn extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n\t\t\t\t\t.then(rawVersion => {\n\t\t\t\t\t\tif (rawVersion) {\n\t\t\t\t\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\ttype GalleryServiceQueryClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\ttext: { classification: 'CustomerContent', purpose: 'FeatureInsight' };\n\t\t};\n\t\ttype GalleryServiceQueryEvent = {\n\t\t\ttype: string;\n\t\t\ttext: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\treturn this.queryGallery(query, token).then(({ galleryExtensions, total }) => {\n\t\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\t\tconst pageSize = query.pageSize;\n\t\t\tconst getPage = (pageIndex: number, ct: CancellationToken) => {\n\t\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\t\treturn Promise.reject(canceled());\n\t\t\t\t}\n\n\t\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\t\treturn this.queryGallery(nextPageQuery, ct)\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source)));\n\t\t\t};\n\n\t\t\treturn { firstPage: extensions, total, pageSize, getPage } as IPager<IGalleryExtension>;\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst data = JSON.stringify(query.raw);\n\t\t\tconst headers = assign({}, commonHeaders, {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t\t'Content-Length': data.length\n\t\t\t});\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token).then(context => {\n\n\t\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t}\n\n\t\t\t\treturn asJson<IRawGalleryQueryResult>(context).then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst r = result.results[0];\n\t\t\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\t\t\treturn { galleryExtensions, total };\n\t\t\t\t\t}\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None).then(undefined, () => undefined);\n\t\t});\n\t}\n\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<URI> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst zip = joinPath(location, generateUuid());\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', assign(data, { duration }));\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\treturn this.getAsset(downloadAsset)\n\t\t\t.then(context => this.fileService.writeFile(zip, context.stream))\n\t\t\t.then(() => log(new Date().getTime() - startTime))\n\t\t\t.then(() => zip);\n\t}\n\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\treturn this.getAsset(extension.assets.readme, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\treturn this.getAsset(extension.assets.manifest, {}, token)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\treturn this.getAsset(asset[1])\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\treturn this.getAsset(extension.assets.changelog, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions }) => {\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tif (compatible) {\n\t\t\t\t\treturn Promise.all(galleryExtensions[0].versions.map(v => this.getEngine(v).then(engine => isEngineValid(engine, this.productService.version) ? v : null)))\n\t\t\t\t\t\t.then(versions => versions\n\t\t\t\t\t\t\t.filter(v => !!v)\n\t\t\t\t\t\t\t.map(v => ({ version: v!.version, date: v!.lastUpdated })));\n\t\t\t\t} else {\n\t\t\t\t\treturn galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated }));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tprivate getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst baseOptions = { type: 'GET' };\n\t\t\tconst headers = assign({}, commonHeaders, options.headers || {});\n\t\t\toptions = assign({}, options, baseOptions, { headers });\n\n\t\t\tconst url = asset.uri;\n\t\t\tconst fallbackUrl = asset.fallbackUri;\n\t\t\tconst firstOptions = assign({}, options, { url });\n\n\t\t\treturn this.requestService.request(firstOptions, token)\n\t\t\t\t.then(context => {\n\t\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\t\treturn Promise.resolve(context);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn asText(context)\n\t\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t\t})\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\t\t\turl: string;\n\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t};\n\t\t\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\t\t\tconst fallbackOptions = assign({}, options, { url: fallbackUrl });\n\t\t\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion> | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn Promise.resolve(version);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn Promise.resolve(engine);\n\t\t}\n\n\t\tconst manifest = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\treturn this.getAsset(manifest, { headers })\n\t\t\t.then(context => asJson<IExtensionManifest>(context))\n\t\t\t.then(manifest => manifest ? manifest.engines.vscode : Promise.reject<string>('Error while reading manifest'));\n\t}\n\n\tprivate getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.getEngine(version)\n\t\t\t.then(engine => {\n\t\t\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\tversion.properties = version.properties || [];\n\t\t\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None).then(context => {\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn Promise.reject(new Error('Could not get extensions report.'));\n\t\t\t}\n\n\t\t\treturn asJson<IRawExtensionsReport>(context).then(result => {\n\t\t\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const id of result.malicious) {\n\t\t\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\t\t\text.malicious = true;\n\t\t\t\t\t\tmap.set(id, ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(values(map));\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService?: IStorageService): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tlet uuid: string | null = null;\n\tif (environmentService.galleryMachineIdResource) {\n\t\ttry {\n\t\t\tconst contents = await fileService.readFile(environmentService.galleryMachineIdResource);\n\t\t\tconst value = contents.value.toString();\n\t\t\tuuid = isUUID(value) ? value : null;\n\t\t} catch (e) {\n\t\t\tuuid = null;\n\t\t}\n\n\t\tif (!uuid) {\n\t\t\tuuid = generateUuid();\n\t\t\ttry {\n\t\t\t\tawait fileService.writeFile(environmentService.galleryMachineIdResource, VSBuffer.fromString(uuid));\n\t\t\t} catch (error) {\n\t\t\t\t//noop\n\t\t\t}\n\t\t}\n\t}\n\n\tif (storageService) {\n\t\tuuid = storageService.get('marketplace.userid', StorageScope.GLOBAL) || null;\n\t\tif (!uuid) {\n\t\t\tuuid = generateUuid();\n\t\t\tstorageService.store('marketplace.userid', uuid, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tif (uuid) {\n\t\theaders['X-Market-User-Id'] = uuid;\n\t}\n\n\treturn headers;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n\ttrueMachineId?: string;\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\t_serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\n\t\t\t\tif (config.trueMachineId) {\n\t\t\t\t\ttype MachineIdDisambiguationClassification = {\n\t\t\t\t\t\tcorrectedMachineId: { endPoint: 'MacAddressHash', classification: 'EndUserPseudonymizedInformation', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\tthis.publicLog2<{ correctedMachineId: string }, MachineIdDisambiguationClassification>('machineIdDisambiguation', { correctedMachineId: config.trueMachineId });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\t_serviceBrand: undefined;\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promise.all(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData: { [key: string]: any } = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\t// Whitelisted remote authorities\n\t['ssh-remote', 'dev-container', 'attached-container', 'wsl'].forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t\t@ILogService private _logService?: ILogService\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tif (this._logService) {\n\t\t\tthis._logService.trace(`telemetry/${eventName}`, data);\n\t\t}\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport async function resolveCommonProperties(\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\ttry {\n\t\tconst contents = await readFile(installSourcePath, 'utf8');\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tif (!process || !process.env || !process.env['USERDNSDOMAIN']) {\n\t\treturn false;\n\t}\n\n\tconst domain = process.env['USERDNSDOMAIN']!.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}","import { ReadWriteConnection } from '@coder/node-browser';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const INodeProxyService = createDecorator<INodeProxyService>('nodeProxyService');\n\nexport interface INodeProxyService extends ReadWriteConnection {\n\t_serviceBrand: any;\n\tsend(message: string): void;\n\tonMessage: Event<string>;\n\tonUp: Event<void>;\n\tonClose: Event<void>;\n\tonDown: Event<void>;\n}\n\nexport class NodeProxyChannel implements IServerChannel {\n\tconstructor(private service: INodeProxyService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onMessage': return this.service.onMessage;\n\t\t}\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'send': return this.service.send(args[0]);\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class NodeProxyChannelClient {\n\t_serviceBrand: any;\n\n\tpublic readonly onMessage: Event<string>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.onMessage = this.channel.listen<string>('onMessage');\n\t}\n\n\tpublic send(data: string): void {\n\t\tthis.channel.call('send', [data]);\n\t}\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic get isOptedIn(): boolean {\n\t\treturn true;\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(getPathFromAmdModule(require, ''), 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport interface SocketOptions {\n\treadonly reconnectionToken: string;\n\treadonly reconnection: boolean;\n\treadonly skipWebSocketFrames: boolean;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(new NodeSocket(socket)),\n\t\t);\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst message = JSON.parse(rawMessage.toString());\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth': return this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\thandler.dispose();\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault: throw new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler.dispose();\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_message: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host, it just sends\n\t * back a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n}\n","import { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URITransformer, IRawURITransformer } from 'vs/base/common/uriIpc';\n\nexport const uriTransformerPath = getPathFromAmdModule(require, 'vs/server/node/uriTransformer');\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\tconst rawURITransformerFactory = <any>require.__$__nodeRequire(uriTransformerPath);\n\tconst rawURITransformer = <IRawURITransformer>rawURITransformerFactory(remoteAuthority);\n\treturn new URITransformer(rawURITransformer);\n};\n","import * as cp from 'child_process';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { uriTransformerPath } from 'vs/server/node/util';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tpublic constructor(protected protocol: Protocol, public readonly token: string) {}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(socket, buffer);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(socket: ISocket, buffer: VSBuffer): void;\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protected protocol: Protocol, token: string) {\n\t\tsuper(protocol, token);\n\t\tprotocol.onClose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tthis.protocol.getSocket().end();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis.protocol.beginAcceptReconnection(socket, buffer);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\n\tpublic constructor(\n\t\tlocale:string, protocol: Protocol, buffer: VSBuffer, token: string,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly environment: IEnvironmentService,\n\t) {\n\t\tsuper(protocol, token);\n\t\tthis.protocol.dispose();\n\t\tthis.spawn(locale, buffer).then((p) => this.process = p);\n\t\tthis.protocol.getUnderlyingSocket().pause();\n\t}\n\n\tprotected doDispose(): void {\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t\tthis.protocol.getSocket().end();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\t// This is just to set the new socket.\n\t\tthis.protocol.beginAcceptReconnection(socket, null);\n\t\tthis.protocol.dispose();\n\t\tthis.sendInitMessage(buffer);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer): void {\n\t\tconst socket = this.protocol.getUnderlyingSocket();\n\t\tsocket.pause();\n\t\tthis.process!.send({ // Process must be set at this point.\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (buffer.buffer as Buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.getSocket() instanceof NodeSocket,\n\t\t}, socket);\n\t}\n\n\tprivate async spawn(locale: string, buffer: VSBuffer): Promise<cp.ChildProcess> {\n\t\tconst config = await getNlsConfiguration(locale, this.environment.userDataPath);\n\t\tconst proc = cp.fork(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t[ '--type=extensionHost', `--uriTransformerPath=${uriTransformerPath}` ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: this.environment.verbose ? 'trace' : this.environment.log,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', () => this.dispose());\n\t\tproc.on('exit', () => this.dispose());\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.log.info('Extension host stdout', d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.log.error('Extension host stderr', d));\n\t\t}\n\t\tproc.on('message', (event) => {\n\t\t\tif (event && event.type === '__$console') {\n\t\t\t\tconst severity = (<any>this.log)[event.severity] ? event.severity : 'info';\n\t\t\t\t(<any>this.log)[severity]('Extension host', event.arguments);\n\t\t\t}\n\t\t\tif (event && event.type === 'VSCODE_EXTHOST_DISCONNECTED') {\n\t\t\t\tthis.setOffline();\n\t\t\t}\n\t\t});\n\n\t\tconst listen = (message: IExtHostReadyMessage) => {\n\t\t\tif (message.type === 'VSCODE_EXTHOST_IPC_READY') {\n\t\t\t\tproc.removeListener('message', listen);\n\t\t\t\tthis.sendInitMessage(buffer);\n\t\t\t}\n\t\t};\n\n\t\treturn proc.on('message', listen);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn pfs.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = json.parse(manifestContents.toString(), errors);\n\t\t\tif (errors.length === 0 && json.getNodeType(manifest) === 'object') {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = pfs.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.fileExists(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn pfs.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tpfs.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.fileExists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tlet normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\n\t\t\t\tif (normalizedAbsolutePath.indexOf(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly tanslations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.tanslations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.tanslations, b.tanslations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await pfs.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.fileExists(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { Server } from '@coder/node-browser';\nimport * as path from 'path';\nimport { VSBuffer, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { OS } from 'vs/base/common/platform';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { createReadStream } from 'vs/platform/files/common/io';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INodeProxyService } from 'vs/server/common/nodeProxy';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tlet fileStream: VSBufferReadableStream | undefined;\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tif (!fileStream) {\n\t\t\t\t\tfileStream = createReadStream(this.provider, this.transform(resource), {\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tbufferSize: 64 * 1024, // From DiskFileSystemProvider\n\t\t\t\t\t});\n\t\t\t\t\tfileStream.on('data', (data) => emitter.fire(data));\n\t\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t\t}\n\t\t\t},\n\t\t\tonLastListenerRemove: () => fileStream && fileStream.destroy(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: IEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(locale: string): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tappSettingsHome: this.environment.appSettingsHome,\n\t\t\tsettingsPath: this.environment.machineSettingsHome,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: URI.file(this.environment.globalStorageHome),\n\t\t\tuserHome: URI.file(this.environment.userHome),\n\t\t\textensions: await this.scanExtensions(locale),\n\t\t\tos: OS,\n\t\t};\n\t}\n\n\tprivate async scanExtensions(locale: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(locale, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlocale,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, extension);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n}\n\nexport class NodeProxyService implements INodeProxyService {\n\tpublic _serviceBrand = undefined;\n\n\tpublic readonly server: Server;\n\n\tprivate readonly _onMessage = new Emitter<string>();\n\tpublic readonly onMessage = this._onMessage.event;\n\tprivate readonly _$onMessage = new Emitter<string>();\n\tpublic readonly $onMessage = this._$onMessage.event;\n\tpublic readonly _onDown = new Emitter<void>();\n\tpublic readonly onDown = this._onDown.event;\n\tpublic readonly _onUp = new Emitter<void>();\n\tpublic readonly onUp = this._onUp.event;\n\n\t// Unused because the server connection will never permanently close.\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\n\tpublic constructor() {\n\t\t// TODO: down/up\n\t\tthis.server = new Server({\n\t\t\tonMessage: this.$onMessage,\n\t\t\tonClose: this.onClose,\n\t\t\tonDown: this.onDown,\n\t\t\tonUp: this.onUp,\n\t\t\tsend: (message: string): void => {\n\t\t\t\tthis._onMessage.fire(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic send(message: string): void {\n\t\tthis._$onMessage.fire(message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\tprivate readonly channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities!: FileSystemProviderCapabilities;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper();\n\n\t\tconst connection = remoteAgentService.getConnection()!;\n\t\tthis.channel = connection.getChannel<IChannel>(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\tthis.setCaseSensitive(true);\n\t\tremoteAgentService.getEnvironment().then(remoteAgentEnvironment => this.setCaseSensitive(!!(remoteAgentEnvironment && remoteAgentEnvironment.os === OperatingSystem.Linux)));\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(error);\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\tif (token) {\n\t\t\tEvent.once(token.onCancellationRequested)(() => {\n\n\t\t\t\t// Ensure to end the stream properly with an error\n\t\t\t\t// to indicate the cancellation.\n\t\t\t\tstream.end(canceled());\n\n\t\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t\t// reading the file.\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistenConnectionEvent as PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\t_serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\tgetEnvironment(bail?: boolean): Promise<IRemoteAgentEnvironment | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\tEvent.once(token.onCancellationRequested)(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\tEvent.once(token.onCancellationRequested)(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(zipfile);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(stream);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { flatten, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { extract, ExtractError, zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, groupByExtension, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion, parseBuiltInExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localizeManifest } from '../common/extensionNls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Limiter, createCancelablePromise, CancelablePromise, Queue } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'semver-umd';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst ERROR_UNKNOWN = 'unknown';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nfunction parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\treturn new Promise((c, e) => {\n\t\ttry {\n\t\t\tconst manifest = JSON.parse(raw);\n\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\tdelete manifest.__metadata;\n\t\t\tc({ manifest, metadata });\n\t\t} catch (err) {\n\t\t\te(new Error(nls.localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t}\n\t});\n}\n\nfunction readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\tconst promises = [\n\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t.then(raw => parseManifest(raw)),\n\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t.then(raw => JSON.parse(raw))\n\t];\n\n\treturn Promise.all<any>(promises).then(([{ manifest, metadata }, translations]) => {\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t});\n}\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata: IGalleryMetadata | null;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\t_serviceBrand: undefined;\n\n\tprivate systemExtensionsPath: string;\n\tprivate extensionsPath: string;\n\tprivate uninstalledPath: string;\n\tprivate uninstalledFileLimiter: Queue<any>;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions: Map<string, CancelablePromise<ILocalExtension>> = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionLifecycle: ExtensionsLifecycle;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath!;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionLifecycle = this._register(new ExtensionsLifecycle(environmentService, this.logService));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\treturn this.collectFiles(extension)\n\t\t\t.then(files => zip(path.join(tmpdir(), generateUuid()), files))\n\t\t\t.then<URI>(path => URI.file(path));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\treturn this.install(zipLocation, type).then(local => local.identifier);\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn collectFilesFromDirectory(extension.location.fsPath)\n\t\t\t.then(files => files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f })));\n\n\t}\n\n\tinstall(vsix: URI, type: ExtensionType = ExtensionType.User): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(token => {\n\t\t\treturn this.downloadVsix(vsix).then(downloadLocation => {\n\t\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t.then(manifest => {\n\t\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\t\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\t\t\t\treturn Promise.reject(new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version)));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t\t\t\t\t.then(installedExtensions => {\n\t\t\t\t\t\t\t\tconst existing = installedExtensions.filter(i => areSameExtensions(identifier, i.identifier))[0];\n\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\t\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\t\t\t\t\t\treturn this.uninstall(existing, true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t\t\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\t\t\t\t\t\treturn this.unsetUninstalledAndGetLocal(identifierWithVersion)\n\t\t\t\t\t\t\t\t\t\t.then(existing => {\n\t\t\t\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\t\t\t\t\t\t\t\treturn this.getMetadata(getGalleryExtensionId(manifest.publisher, manifest.name))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tmetadata => this.installFromZipPath(identifierWithVersion, zipPath, metadata, type, operation, token),\n\t\t\t\t\t\t\t\t\t\t() => this.installFromZipPath(identifierWithVersion, zipPath, null, type, operation, token))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tlocal => { this.logService.info('Successfully installed the extension:', identifier.id); return local; },\n\t\t\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn Promise.resolve(vsix);\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\t\tconst downloadedLocation = path.join(tmpdir(), generateUuid());\n\t\treturn this.downloadService.download(vsix, URI.file(downloadedLocation)).then(() => URI.file(downloadedLocation));\n\t}\n\n\tprivate installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IGalleryMetadata | null, type: ExtensionType, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.toNonCancellablePromise(this.installExtension({ zipPath, identifierWithVersion, metadata }, type, token)\n\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, null)\n\t\t\t\t.then(\n\t\t\t\t\t() => local,\n\t\t\t\t\terror => {\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}))\n\t\t\t.then(\n\t\t\t\tlocal => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, local, operation }); return local; },\n\t\t\t\terror => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, operation, error }); return Promise.reject(error); }\n\t\t\t));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\tconst startTime = new Date().getTime();\n\n\t\tconst onDidInstallExtensionSuccess = (extension: IGalleryExtension, operation: InstallOperation, local: ILocalExtension) => {\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t};\n\n\t\tconst onDidInstallExtensionFailure = (extension: IGalleryExtension, operation: InstallOperation, error: Error) => {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tonDidInstallExtensionFailure(extension, InstallOperation.Install, error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\n\t\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tlet cancellationToken: CancellationToken, successCallback: (local: ILocalExtension) => void, errorCallback: (e?: any) => any | null;\n\t\t\tcancellablePromise = createCancelablePromise(token => { cancellationToken = token; return new Promise((c, e) => { successCallback = c; errorCallback = e; }); });\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\ttry {\n\t\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\t\tconst existingExtension = installed.filter(i => areSameExtensions(i.identifier, extension.identifier))[0];\n\t\t\t\tif (existingExtension) {\n\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t}\n\n\t\t\t\tthis.downloadInstallableExtension(extension, operation)\n\t\t\t\t\t.then(installableExtension => this.installExtension(installableExtension, ExtensionType.User, cancellationToken)\n\t\t\t\t\t\t.then(local => pfs.rimraf(installableExtension.zipPath).finally(() => null).then(() => local)))\n\t\t\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, existingExtension)\n\t\t\t\t\t\t.then(() => local, error => this.uninstall(local, true).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t\t\t.then(\n\t\t\t\t\t\tasync local => {\n\t\t\t\t\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\t\t\t\t\tawait this.setUninstalled(existingExtension);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionSuccess(extension, operation, local);\n\t\t\t\t\t\t\tsuccessCallback(local);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t});\n\n\t\t\t} catch (error) {\n\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS));\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\n\t\tif (!compatibleExtension) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE));\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\treturn this.findGalleryExtension(extension)\n\t\t\t.then(galleryExtension => {\n\t\t\t\tif (galleryExtension) {\n\t\t\t\t\treturn this.setUninstalled(extension)\n\t\t\t\t\t\t.then(() => this.removeUninstalledExtension(extension)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t() => this.installFromGallery(galleryExtension).then(),\n\t\t\t\t\t\t\t\te => Promise.reject(new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e))))));\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\")));\n\t\t\t});\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.getExtensionsReport()\n\t\t\t.then(report => getMaliciousExtensionsSet(report).has(extension.identifier.id));\n\t}\n\n\tprivate downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<InstallableExtension> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\treturn this.galleryService.download(extension, URI.file(tmpdir()), operation)\n\t\t\t.then(\n\t\t\t\tzip => {\n\t\t\t\t\tconst zipPath = zip.fsPath;\n\t\t\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tmanifest => (<InstallableExtension>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata }),\n\t\t\t\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING))\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING)));\n\t}\n\n\tprivate installExtension(installableExtension: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion)\n\t\t\t.then(\n\t\t\t\tlocal => {\n\t\t\t\t\tif (local) {\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.extractAndInstall(installableExtension, type, token);\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t});\n\t}\n\n\tprivate unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\treturn this.isUninstalled(identifierWithVersion)\n\t\t\t.then<ILocalExtension | null>(isUninstalled => {\n\t\t\t\tif (isUninstalled) {\n\t\t\t\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\t\t\t\treturn this.unsetUninstalled(identifierWithVersion)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(installed => installed.filter(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion))[0]);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tconst location = type === ExtensionType.User ? this.extensionsPath : this.systemExtensionsPath;\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(location, `.${folderName}`);\n\t\tconst extensionPath = path.join(location, folderName);\n\t\treturn pfs.rimraf(extensionPath)\n\t\t\t.then(() => this.extractAndRename(identifier, zipPath, tempPath, extensionPath, token), e => Promise.reject(new ExtensionManagementError(nls.localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifier.id), INSTALL_ERROR_DELETING)))\n\t\t\t.then(() => this.scanExtension(folderName, location, type))\n\t\t\t.then(local => {\n\t\t\t\tif (!local) {\n\t\t\t\t\treturn Promise.reject(nls.localize('cannot read', \"Cannot read the extension from {0}\", location));\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Installation completed.', identifier.id);\n\t\t\t\tif (metadata) {\n\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\treturn this.saveMetadataForLocalExtension(local);\n\t\t\t\t}\n\t\t\t\treturn local;\n\t\t\t}, error => pfs.rimraf(extensionPath).then(() => Promise.reject(error), () => Promise.reject(error)));\n\t}\n\n\tprivate extractAndRename(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, renamePath: string, token: CancellationToken): Promise<void> {\n\t\treturn this.extract(identifier, zipPath, extractPath, token)\n\t\t\t.then(() => this.rename(identifier, extractPath, renamePath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */)\n\t\t\t\t.then(\n\t\t\t\t\t() => this.logService.info('Renamed to', renamePath),\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', extractPath);\n\t\t\t\t\t\treturn pfs.rimraf(extractPath).finally(() => null).then(() => Promise.reject(e));\n\t\t\t\t\t}));\n\t}\n\n\tprivate extract(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${extractPath}`);\n\t\treturn pfs.rimraf(extractPath)\n\t\t\t.then(\n\t\t\t\t() => extract(zipPath, extractPath, { sourcePath: 'extension', overwrite: true }, token)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t() => this.logService.info(`Extracted extension to ${extractPath}:`, identifier.id),\n\t\t\t\t\t\te => pfs.rimraf(extractPath).finally(() => null)\n\t\t\t\t\t\t\t.then(() => Promise.reject(new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING)))),\n\t\t\t\te => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING)));\n\t}\n\n\tprivate rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\treturn pfs.rename(extractPath, renamePath)\n\t\t\t.then(undefined, error => {\n\t\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new ExtensionManagementError(error.message || nls.localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING));\n\t\t\t});\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | null): Promise<void> {\n\t\tif (this.galleryService.isEnabled()) {\n\t\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\t\tif (installed.manifest.extensionPack) {\n\t\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\treturn this.getInstalled()\n\t\t\t\t\t.then(installed => {\n\t\t\t\t\t\t// filter out installed extensions\n\t\t\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\t\t\tif (names.length) {\n\t\t\t\t\t\t\treturn this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None)\n\t\t\t\t\t\t\t\t.then(galleryResult => {\n\t\t\t\t\t\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\t\t\t\t\t\treturn Promise.all(extensionsToInstall.map(e => this.installFromGallery(e)))\n\t\t\t\t\t\t\t\t\t\t.then(undefined, errors => this.rollback(extensionsToInstall).then(() => Promise.reject(errors), () => Promise.reject(errors)));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed =>\n\t\t\t\tPromise.all(installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))) // Check with version because we want to rollback the exact version\n\t\t\t\t\t.map(local => this.uninstall(local, true))))\n\t\t\t.then(() => undefined, () => undefined);\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.toNonCancellablePromise(this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => {\n\t\t\t\tconst extensionToUninstall = installed.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\t\tif (extensionToUninstall) {\n\t\t\t\t\treturn this.checkForDependenciesAndUninstall(extensionToUninstall, installed).then(undefined, error => Promise.reject(this.joinErrors(error)));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name)));\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal.metadata = metadata;\n\t\treturn this.saveMetadataForLocalExtension(local)\n\t\t\t.then(localExtension => {\n\t\t\t\tthis.manifestCache.invalidate();\n\t\t\t\treturn localExtension;\n\t\t\t});\n\t}\n\n\tprivate saveMetadataForLocalExtension(local: ILocalExtension): Promise<ILocalExtension> {\n\t\tif (!local.metadata) {\n\t\t\treturn Promise.resolve(local);\n\t\t}\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\treturn pfs.readFile(manifestPath, 'utf8')\n\t\t\t.then(raw => parseManifest(raw))\n\t\t\t.then(({ manifest }) => assign(manifest, { __metadata: local.metadata }))\n\t\t\t.then(manifest => pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t')))\n\t\t\t.then(() => local);\n\t}\n\n\tprivate getMetadata(extensionName: string): Promise<IGalleryMetadata | null> {\n\t\treturn this.findGalleryExtensionByName(extensionName)\n\t\t\t.then(galleryExtension => galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : null);\n\t}\n\n\tprivate findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\treturn this.findGalleryExtensionById(local.identifier.uuid)\n\t\t\t\t.then(galleryExtension => galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id));\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tif (packedExtensions.length) {\n\t\t\t\t\treturn this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t\t}\n\t\t\t\treturn this.uninstallExtensions(extension, [], installed);\n\t\t\t})\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extension !== dependent && otherExtensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, remainingDependents)));\n\t\t\t}\n\t\t}\n\t\treturn Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]).then(() => undefined);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate doUninstall(extension: ILocalExtension): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => this.uninstallExtension(extension))\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(pfs.exists(extension.location.fsPath))\n\t\t\t.then(exists => exists ? null : Promise.reject(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => {\n\t\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\t});\n\t}\n\n\tprivate uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(token => this.scanUserExtensions(false)\n\t\t\t\t.then(userExtensions => this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier))))\n\t\t\t\t.then(() => { this.uninstallingExtensions.delete(local.identifier.id); }));\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\treturn Promise.all<ILocalExtension[]>(promises).then(flatten, errors => Promise.reject(this.joinErrors(errors)));\n\t}\n\n\tprivate scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = Promise.all([\n\t\t\tthis.scanExtensions(this.systemExtensionsPath, ExtensionType.System),\n\t\t\t...this.environmentService.extraBuiltinExtensionPaths\n\t\t\t\t.map((path) => this.scanExtensions(path, ExtensionType.System))\n\t\t]).then((results) => {\n\t\t\tconst result = results.reduce((flat, current) => flat.concat(current), []);\n\t\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\t\treturn result;\n\t\t});\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.getDevSystemExtensionsList()\n\t\t\t.then(devSystemExtensionsList => {\n\t\t\t\tif (devSystemExtensionsList.length) {\n\t\t\t\t\treturn this.scanExtensions(this.devSystemExtensionsPath, ExtensionType.System)\n\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\t\t\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t});\n\t\treturn Promise.all([systemExtensionsPromise, devSystemExtensionsPromise])\n\t\t\t.then(([systemExtensions, devSystemExtensions]) => [...systemExtensions, ...devSystemExtensions]);\n\t}\n\n\tprivate scanAllUserExtensions(folderName: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\treturn Promise.all([\n\t\t\tthis.scanExtensions(folderName, type),\n\t\t\t...this.environmentService.extraExtensionPaths.map((p) => this.scanExtensions(p, ExtensionType.User))\n\t\t]).then((results) => results.reduce((flat, current) => flat.concat(current), []));\n\t}\n\n\tprivate scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\treturn Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User)])\n\t\t\t.then(([uninstalled, extensions]) => {\n\t\t\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\t\t\tif (excludeOutdated) {\n\t\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t\t\t}\n\t\t\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\t\t\treturn extensions;\n\t\t\t});\n\t}\n\n\tprivate scanExtensions(root: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\treturn pfs.readdir(root)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn <string[]>[];\n\t\t\t})\n\t\t\t.then(extensionsFolders => Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, root, type)))))\n\t\t\t.then(extensions => extensions.filter(e => e && e.identifier));\n\t}\n\n\tprivate scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\treturn pfs.readdir(extensionPath)\n\t\t\t.then(children => readManifest(extensionPath)\n\t\t\t\t.then(({ manifest, metadata }) => {\n\t\t\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : null;\n\t\t\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : null;\n\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, metadata, location: URI.file(extensionPath), readmeUrl, changelogUrl };\n\t\t\t\t\tif (metadata) {\n\t\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\t}\n\t\t\t\t\treturn local;\n\t\t\t\t}))\n\t\t\t.then(undefined, () => null);\n\t}\n\n\tprivate setMetadata(local: ILocalExtension, metadata: IGalleryMetadata): void {\n\t\tlocal.metadata = metadata;\n\t\tlocal.identifier.uuid = metadata.id;\n\t}\n\n\tasync removeDeprecatedExtensions(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promise.all(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.extensionLifecycle.postUninstall(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promise.all(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate removeOutdatedExtensions(): Promise<void> {\n\t\treturn this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User) // All user extensions\n\t\t\t.then(extensions => {\n\t\t\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t\t\t// Outdated extensions\n\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\t\t\treturn Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t\t\t}).then(() => undefined);\n\t}\n\n\tprivate removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn this.removeExtension(extension, 'uninstalled')\n\t\t\t.then(() => this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]))\n\t\t\t.then(() => undefined);\n\t}\n\n\tprivate removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\treturn pfs.rimraf(extension.location.fsPath).then(() => this.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath));\n\t}\n\n\tprivate isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\treturn this.filterUninstalled(identifier).then(uninstalled => uninstalled.length === 1);\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.withUninstalledExtensions(uninstalled => assign(uninstalled, ids.reduce((result, id) => { result[id.key()] = true; return result; }, {} as { [id: string]: boolean })));\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tprivate getUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tprivate async withUninstalledExtensions<T>(fn: (uninstalled: { [id: string]: boolean; }) => T): Promise<T> {\n\t\treturn await this.uninstalledFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.uninstalledPath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [id: string]: boolean }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(uninstalled => { result = fn(uninstalled); return uninstalled; })\n\t\t\t\t.then(uninstalled => {\n\t\t\t\t\tif (Object.keys(uninstalled).length === 0) {\n\t\t\t\t\t\treturn pfs.rimraf(this.uninstalledPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst raw = JSON.stringify(uninstalled);\n\t\t\t\t\t\treturn pfs.writeFile(this.uninstalledPath, raw);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => result);\n\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate updateReportCache(): Promise<IReportedExtension[]> {\n\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\n\t\treturn this.galleryService.getExtensionsReport()\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\t\treturn result;\n\t\t\t}, err => {\n\t\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate _devSystemExtensionsFilePath: string | null = null;\n\tprivate get devSystemExtensionsFilePath(): string {\n\t\tif (!this._devSystemExtensionsFilePath) {\n\t\t\tthis._devSystemExtensionsFilePath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'build', 'builtInExtensions.json'));\n\t\t}\n\t\treturn this._devSystemExtensionsFilePath;\n\t}\n\n\tprivate getDevSystemExtensionsList(): Promise<string[]> {\n\t\treturn pfs.readFile(this.devSystemExtensionsFilePath, 'utf8')\n\t\t\t.then(data => parseBuiltInExtensions(data, this.productService.quality).map(ext => ext.name));\n\t}\n\n\tprivate toNonCancellablePromise<T>(promise: Promise<T>): Promise<T> {\n\t\treturn new Promise((c, e) => promise.then(result => c(result), error => e(error)));\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog(eventName, assign(extensionData, { success: !error, duration, errorcode }));\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\treturn mkdirp(targetFileName).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\tawait mkdirp(targetDirName, undefined);\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\t_serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request(assign({}, options, {\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}), token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStream<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\n\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/node/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension } from 'vs/platform/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-vscode.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\n\nexport class Main {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tasync run(argv: ParsedArgs): Promise<void> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions'], argv['category']);\n\t\t} else if (argv['install-extension']) {\n\t\t\tawait this.installExtensions(argv['install-extension'], !!argv['force']);\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tawait this.uninstallExtension(argv['uninstall-extension']);\n\t\t} else if (argv['locate-extension']) {\n\t\t\tawait this.locateExtension(argv['locate-extension']);\n\t\t} else if (argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(this.environmentService.appRoot, this.environmentService.extensionsPath ? this.environmentService.extensionsPath : undefined));\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<void> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean, category?: string): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t// TODO: we should save this array in a common place so that the command and extensionQuery can use it that way changing it is easier\n\t\tconst categories = ['\"programming languages\"', 'snippets', 'linters', 'themes', 'debuggers', 'formatters', 'keymaps', '\"scm providers\"', 'other', '\"extension packs\"', '\"language packs\"'];\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\tconsole.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\tconsole.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tconsole.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tprivate async installExtensions(extensions: string[], force: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\tconsole.log(localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tfor (const extension of extensions) {\n\t\t\ttry {\n\t\t\t\tconst manifest = await this.installExtension(extension, force);\n\t\t\t\tif (manifest) {\n\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\tfailed.push(extension);\n\t\t\t}\n\t\t}\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t\treturn failed.length ? Promise.reject(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', '))) : Promise.resolve();\n\t}\n\n\tprivate async installExtension(extension: string, force: boolean): Promise<IExtensionManifest | null> {\n\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\textension = path.isAbsolute(extension) ? extension : path.join(process.cwd(), extension);\n\n\t\t\tconst manifest = await getManifest(extension);\n\t\t\tconst valid = await this.validate(manifest, force);\n\n\t\t\tif (valid) {\n\t\t\t\treturn this.extensionManagementService.install(URI.file(extension)).then(id => {\n\t\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(extension)));\n\t\t\t\t\treturn manifest;\n\t\t\t\t}, error => {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(extension)));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [id, version] = getIdAndVersion(extension);\n\t\treturn this.extensionManagementService.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => this.extensionGalleryService.getCompatibleExtension({ id }, version)\n\t\t\t\t.then<IGalleryExtension>(null, err => {\n\t\t\t\t\tif (err.responseText) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = JSON.parse(err.responseText);\n\t\t\t\t\t\t\treturn Promise.reject(response.message);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// noop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t})\n\t\t\t\t.then(async extension => {\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn Promise.reject(new Error(`${notFound(version ? `${id}@${version}` : id)}\\n${useId}`));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(extension, CancellationToken.None);\n\t\t\t\t\tconst [installedExtension] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\t\tif (installedExtension) {\n\t\t\t\t\t\tif (extension.version === installedExtension.manifest.version) {\n\t\t\t\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version && !force) {\n\t\t\t\t\t\t\tconsole.log(localize('forceUpdate', \"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.\", id, installedExtension.manifest.version, extension.version));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, extension.version));\n\t\t\t\t\t}\n\t\t\t\t\tawait this.installFromGallery(id, extension);\n\t\t\t\t\treturn manifest;\n\t\t\t\t}));\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.filter(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version))[0];\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async installFromGallery(id: string, extension: IGalleryExtension): Promise<void> {\n\t\tconsole.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, extension.version));\n\n\t\ttry {\n\t\t\tawait this.extensionManagementService.installFromGallery(extension);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, extension.version));\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async uninstallExtension(extensions: string[]): Promise<void> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst [extensionToUninstall] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\treturn Promise.reject(new Error(`${notInstalled(id)}\\n${useId}`));\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall, true);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async locateExtension(extensions: string[]): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\tconsole.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function main(argv: ParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\tconst disposables = new DisposableStore();\n\n\tconst environmentService = new EnvironmentService(argv, process.execPath);\n\tconst logService: ILogService = new SpdLogService('cli', environmentService.logsPath, getLogLevel(environmentService));\n\tprocess.once('exit', () => logService.dispose());\n\tlogService.info('main', argv);\n\n\tawait Promise.all<void | undefined>([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath]\n\t\t.map((path): undefined | Promise<void> => path ? mkdirp(path) : undefined));\n\n\tconst configurationService = new ConfigurationService(environmentService.settingsResource);\n\tdisposables.add(configurationService);\n\tawait configurationService.initialize();\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, configurationService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\t// Files\n\tconst fileService = new FileService(logService);\n\tdisposables.add(fileService);\n\tservices.set(IFileService, fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\tdisposables.add(diskFileSystemProvider);\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst envService = accessor.get(IEnvironmentService);\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI: extensionDevelopmentLocationURI, isBuilt, installSourcePath } = envService;\n\n\t\tconst services = new ServiceCollection();\n\n\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (isBuilt && !extensionDevelopmentLocationURI && !envService.args['disable-telemetry'] && product.enableTelemetry) {\n\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey, logService));\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, product.version, stateService.getItem('telemetry.machineId'), product.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: extensionsPath ? [appRoot, extensionsPath] : [appRoot]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\tconst main = instantiationService2.createInstance(Main);\n\n\t\ttry {\n\t\t\tawait main.run(argv);\n\t\t\t// Flush the remaining data in AI adapter.\n\t\t\tawait combinedAppender(...appenders).flush();\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t});\n}\n","import * as net from 'net';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, IPCServer, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createChannelReceiver } from 'vs/base/parts/ipc/node/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from \"vs/code/node/cliProcessMain\";\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/node/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { getLogLevel, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel } from 'vs/platform/log/common/logIpc';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryServiceConfig, TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, LogAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { INodeProxyService, NodeProxyChannel } from 'vs/server/common/nodeProxy';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/server/ipc';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, NodeProxyService } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from \"vs/workbench/services/remote/common/remoteAgentFileSystemChannel\";\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: ParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as IEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? URI.parse(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? URI.parse(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit: product.commit || 'development',\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.sendMessage({ type: 'error', reason: error.message });\n\t\t\tprotocol.dispose();\n\t\t\tprotocol.getSocket().dispose();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst ok = async () => {\n\t\t\t\t\treturn message.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t\t? { debugPort: await this.getDebugPort() }\n\t\t\t\t\t\t: { type: 'ok' };\n\t\t\t\t};\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tif (protocol.options.reconnection && connections.has(token)) {\n\t\t\t\t\tprotocol.sendMessage(await ok());\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tprotocol.dispose();\n\t\t\t\t\treturn connections.get(token)!.reconnect(protocol.getSocket(), buffer);\n\t\t\t\t} else if (protocol.options.reconnection || connections.has(token)) {\n\t\t\t\t\tthrow new Error(protocol.options.reconnection\n\t\t\t\t\t\t? 'Unrecognized reconnection token'\n\t\t\t\t\t\t: 'Duplicate reconnection token'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendMessage(await ok());\n\n\t\t\t\tlet connection: Connection;\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\tconnection = new ManagementConnection(protocol, token);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol, onDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t\t// TODO: Need a way to match clients with a connection. For now\n\t\t\t\t\t// dispose everything which only works because no extensions currently\n\t\t\t\t\t// utilize long-running proxies.\n\t\t\t\t\t(this.services.get(INodeProxyService) as NodeProxyService)._onUp.fire();\n\t\t\t\t\tconnection.onClose(() => (this.services.get(INodeProxyService) as NodeProxyService)._onDown.fire());\n\t\t\t\t} else {\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tmessage.args ? message.args.language : 'en',\n\t\t\t\t\t\tprotocol, buffer, token,\n\t\t\t\t\t\tthis.services.get(ILogService) as ILogService,\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as IEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => connections.delete(token));\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel: return protocol.tunnel();\n\t\t\tdefault: throw new Error('Unrecognized connection type');\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\toffline[i].dispose();\n\t\t}\n\t}\n\n\tprivate async initializeServices(args: ParsedArgs): Promise<void> {\n\t\tconst environmentService = new EnvironmentService(args, process.execPath);\n\t\tconst logService = new SpdLogService(RemoteExtensionLogFileName, environmentService.logsPath, getLogLevel(environmentService));\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LoggerChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\t\tthis.services.set(IConfigurationService, new SyncDescriptor(ConfigurationService, [environmentService.machineSettingsResource]));\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, { _serviceBrand: undefined, ...product });\n\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\n\t\tif (!environmentService.args['disable-telemetry']) {\n\t\t\tthis.services.set(ITelemetryService, new SyncDescriptor(TelemetryService, [{\n\t\t\t\tappender: combinedAppender(\n\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any, logService),\n\t\t\t\t\tnew LogAppender(logService),\n\t\t\t\t),\n\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\tproduct.commit, product.version, await getMachineId(),\n\t\t\t\t\t[], environmentService.installSourcePath, 'code-server',\n\t\t\t\t),\n\t\t\t\tpiiPaths,\n\t\t\t} as ITelemetryServiceConfig]));\n\t\t} else {\n\t\t\tthis.services.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\t\t\tthis.services.set(ILocalizationsService, instantiationService.createInstance(LocalizationsService));\n\t\t\tthis.services.set(INodeProxyService, instantiationService.createInstance(NodeProxyService));\n\n\t\t\tinstantiationService.invokeFunction(() => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\t\t\t\tconst telemetryService = this.services.get(ITelemetryService) as ITelemetryService;\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\tthis.services.get(IExtensionManagementService) as IExtensionManagementService,\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(this.services.get(IRequestService) as IRequestService));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('nodeProxy', new NodeProxyChannel(this.services.get(INodeProxyService) as INodeProxyService));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>createChannelReceiver(this.services.get(ILocalizationsService) as ILocalizationsService));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tprivate async getDebugPort(): Promise<number | undefined> {\n\t\treturn undefined;\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { CodeServerMessage, VscodeMessage } from 'vs/server/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\n\nsetUnexpectedErrorHandler((error) => logger.warn(error instanceof Error ? error.message : error));\nenableCustomMarketplace();\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"]}