{"version":3,"sources":["vs/server/fake","vs/server/vs/base/common/performance.js","vs/server/vs/base/node/languagePacks.js","vs/server/file:/repo/lib/vscode/src/vs/base/common/assert.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/collections.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/decorators.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/errors.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/arrays.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/functional.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/iterator.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/json.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/lifecycle.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/linkedList.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/event.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/cancellation.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/platform.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/process.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/path.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/stream.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/strings.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/buffer.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/types.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/objects.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uri.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/amd.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/console.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/marshalling.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/normalization.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/labels.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uriIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uuid.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/decoder.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/macAddress.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/id.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/paths.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/pfs.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/extpath.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/watcher.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/date.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/errorMessage.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/severity.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/processes.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/download/common/download.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/server/file:/repo/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/files.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/io.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/localizations/common/localizations.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/common/log.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/fileService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/common/logIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/node/spdlogService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/product/common/product.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/environment/node/environmentService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/localizations/node/localizations.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/product/common/productService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/common/request.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/common/requestIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/node/proxy.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/state/node/state.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/state/node/stateService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/storage/common/storage.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/server/common/nodeProxy.ts","vs/server/file:/repo/lib/vscode/src/vs/server/common/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/insights.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/logger.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/nls.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/connection.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/protocol.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/util.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/channel.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/zip.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/marketplace.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/node/requestService.ts","vs/server/file:/repo/lib/vscode/src/vs/code/node/cliProcessMain.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/server.ts","vs/server/file:/repo/lib/vscode/src/vs/server/entry.ts"],"names":["__m","__M","deps","result","i","len","length","_factory","sharedObj","_performanceEntries","_dataLen","_timeStamp","console","timeStamp","bind","mark","name","push","Date","now","getEntries","entries","timestamp","getEntry","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","factory","nodeRequire","path","fs","perf","exists","file","Promise","c","rimraf","location","e","lstat","err","stats","then","stat","isDirectory","isSymbolicLink","dir","readdir","files","children","all","map","child","join","rmdir","undefined","unlink","code","readFile","resolve","reject","data","writeFile","content","getNLSConfiguration","commit","userDataPath","metaDataFile","locale","availableLanguages","pseudo","process","env","initialLocale","defaultResult","configs","configFile","JSON","parse","readFileSync","getLanguagePackConfigurations","config","index","lastIndexOf","substring","error","resolveLanguagePackLocale","packConfig","mainPack","hash","translations","fileExists","packId","cacheRoot","coreLocation","translationsConfigFile","corruptedFile","*","_languagePackId","_translationsConfigFile","_cacheRoot","_resolvedLanguagePackCoreLocation","_corruptedFile","corrupted","toDelete","d","utimes","touch","catch","mkdir","recursive","mkdirp","values","metadata","packData","contents","bundles","Object","keys","writes","bundle","modules","create","module","defaultMessages","messages","targetStrings","elem","translatedMessage","key","replace","stringify","exports","ok","value","message","Error","hasOwnProperty","prototype","call","size","count","first","forEach","callback","groupBy","groupFn","element","fromMap","original","SetMap","[object Object]","this","Map","get","Set","set","add","delete","fn","createDecorator","mapFn","descriptor","fnKey","memoizeId","createMemoizer","memoizeKeyPrefix","self","warn","memoizeKey","args","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","ErrorHandler","listeners","unexpectedErrorHandler","stack","listener","_removeListener","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","split","String","NotImplementedError","super","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","pop","j","firstIndex","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","o","min","isCancellationRequested","errors_1","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","distinctES6","has","uniqueFilter","lastIndex","notFoundValue","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","indexer","merger","t","reduce","r","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","asArray","getRandomElement","once","_this","didCall","arguments","Iterator","FIN","done","Iterable","iterable","Symbol","iterator","next","some","_empty","empty","single","fromArray","fromNativeIterator","it","elements","collect","atMost","POSITIVE_INFINITY","iterators","chain","ChainableIterator","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","max","MappedIterator","MappedNavigator","navigator","previous","parent","last","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","digits","hexValue","ch","charCodeAt","scanNext","isWhitespace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","isAtPropertyKey","setPreviousNode","colonOffset","sep","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","dispose","disposables","isDisposable","thing","combinedDisposable","toDisposable","DisposableStore","_toDispose","_isDisposed","DISABLE_DISPOSED_WARNING","_store","freeze","MutableDisposable","_value","ReferenceCollection","references","reference","counter","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","global","define","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_userAgent","isElectronRenderer","versions","electron","platform","rawNlsConfig","nlsConfig","resolved","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","_globals","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","newWriteableStream","WriteableStreamImpl","isReadableStream","pause","resume","destroy","every","state","flowing","ended","destroyed","flowData","flowErrors","flowEnd","write","fullDataBuffer","consumeReadable","readable","chunks","chunk","read","consumeReadableWithLimit","maxChunks","lastReadChunk","consumeStream","stream","consumeStreamWithLimit","wrapperStream","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","readUInt16LE","writeUInt16LE","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","toSlashes","osPath","path_1","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","indexOfPath","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","assertType","condition","assertIsDefined","assertAllDefined","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","types_1","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","getOrDefault","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","_makeFsPath","change","_URI","percentDecode","components","uri","pathFragment","newPath","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","line","column","label","isOneStringArg","consoleArgs","forEachable","getOrSet","mapToString","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_from","_to","justSeps","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","iter","reset","val","hasNext","oldElement","_nodeIterator","_forEach","iterator_1","ResourceMap","toKey","clb","resourceMap","Touch","LinkedMap","_map","_head","_tail","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","replacer","flags","revive","depth","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeSettings","webviewPanel","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","pathname","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","removeAccents","regex","originalFSPath","uriPath","hasToIgnoreCase","network_1","parentCandidate","isEqualAuthority","a1","a2","hasTrailingPathSeparator","fsp","caseInsensitivePath","fromPath","toPath","getComparisonKey","basenameOrAuthority","second","ignoreFragment","p1","p2","joinPath","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forPaths","glob_1","rootExpression","findSubstr","toLocalResource","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","tildify","userHome","getBaseLabel","normalizedUserHomeCached","normalizedUserHome","normalized","untildify","ellipsis","unc","home","Type","shorten","pathSeparator","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","remoteAuthority","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformOutgoing","transformIncomingURIs","transformAndReviveIncomingURIs","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","require","__$__nodeRequire","cmdline","windows","unix","invalidMacAddresses","validateMacAddress","tempCandidate","getMac","child_process_1","stdout","stdin","macAddressCandidate","machineId","virtualMachineHint","mac","_virtualMachineOUIs","forStrings","vmOui","interfaceCount","interfaces","os_1","networkInterfaces","_isVirtualMachineMacAdress","getMachineId","crypto","resolve_1","reject_1","macAddress","macAddress_1","createHash","update","digest","getMacMachineId","uuid","pathsPath","amd_1","getAppDataPath","getDefaultUserDataPath","RimRafMode","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","chmod","util_1","promisify","handleDirectoryChildren","readdirSync","normalization_1","oldPath","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","writeFilePathQueues","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","pfs_1","ix","realpath","access","constants","R_OK","realpathSync","accessSync","doWatchNonRecursive","onChange","originalFileName","mapPathToStatDisposable","watcherDisposables","disposable","watcher","fs_1","watch","removeAllListeners","folderChildren","raw","changedFileName","changedFilePath","statDisposable","timeoutHandle","CHANGE_BUFFER_DELAY","watchFile","watchFolder","State","DataType","RequestType","ResponseType","BufferReader","bytes","BufferWriter","buffer_1","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","send","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","listen","timeoutTimer","requests","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","arrays_1","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","emptyBuffer","getEmptyBuffer","ChunkStream","_chunks","_totalLength","buff","byteCount","_read","advance","resultOffset","chunkIndex","chunkPart","ProtocolMessageType","ProtocolConstants","ProtocolMessage","ack","writtenTime","ProtocolReader","socket","_onMessage","_register","_state","readHead","readLen","messageType","_socket","_incomingData","onData","acceptChunk","lastReadTime","ProtocolWriter","lastWriteTime","_writeNow","_writeSoon","head","wasEmpty","_bufferAdd","_bufferTake","Protocol","_onClose","onClose","_socketWriter","_socketReader","Client","ipc_1","getSocket","sendDisconnect","BufferedEmitter","_hasListeners","_isDeliveringMessages","_bufferedMessages","_deliverMessages","QueueElement","resultLen","PersistentProtocol","initialChunk","_onControlMessage","onControlMessage","_onSocketClose","onSocketClose","_onSocketTimeout","onSocketTimeout","_isReconnecting","_outgoingUnackMsg","_outgoingMsgId","_outgoingAckId","_outgoingAckTimeout","_incomingMsgId","_incomingAckId","_incomingMsgLastTime","_incomingAckTimeout","_outgoingKeepAliveTimeout","_incomingKeepAliveTimeout","_socketDisposables","_receiveMessage","_sendKeepAliveCheck","_recvKeepAliveCheck","unacknowledgedCount","timeSinceLastOutgoingMsg","timeSinceLastIncomingMsg","initialDataChunk","flushBuffer","toSend","_recvAckCheck","peek","_sendAckCheck","readEntireBuffer","_sendAck","oldestUnacknowledgedMsg","timeSinceOldestUnacknowledgedMsg","propertyIsEvent","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","Proxy","_target","propKey","methodArgs","NodeSocket","_listener","off","Constants","ReadState","WebSocketNodeSocket","_onData","mask","ipc_net_1","_acceptChunk","onEnd","headerLen","secondByte","hasMask","unmask","cnt","v","bytesLeft","m3","m2","m1","generateRandomPipeName","randomSuffix","Server","server","toClientConnectionEvent","onConnection","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","nls","minute","hour","day","week","month","year","fromNow","date","appendAgoLabel","seconds","nls_1","localize","toLocalISOString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","types","detail","getParseErrorMessage","errorCode","Severity","_warning","_warn","_info","_displayStrings","Warning","Info","fromValue","Ignore","default","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","ee","cp","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","withExtension","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","ExtensionHostDebugBroadcastChannel","_onCloseEmitter","_onReloadEmitter","_onTerminateEmitter","_onLogToEmitter","_onAttachEmitter","sessionId","subId","ChannelName","ExtensionHostDebugChannelClient","onReload","onAttachSession","onLogToSession","onTerminateSession","transformIncomingURI","transformIncomingExtension","extension","uriIpc_1","manifest","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","uriTransformer","local","zip","unzip","install","getManifest","installFromGallery","uninstall","reinstallFromGallery","getInstalled","extensions","updateMetadata","getExtensionsReport","ExtensionManagementChannelClient","zipLocation","vsix","force","nlsRegex","localizeManifest","ExtensionsLifecycle","environmentService","logService","processesLimiter","script","parseScript","info","identifier","version","runLifecycleHook","getExtensionStoragePath","scriptKey","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","errorMessage_1","uninstallHook","opts","silent","extensionUninstallProcess","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","VERSION_REGEXP","isValidVersionStr","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","isIExtensionIdentifier","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","areSameExtensions","ExtensionIdentifierWithVersion","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","properties","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","report","malicious","parseBuiltInExtensions","rawJson","productQuality","parsed","_b","forQualities","ExtensionsManifestCache","extensionsManagementService","extensionsManifestCache","onDidUnInstallExtension","invalidate","pfs","WatcherChannel","onLogMessage","setRoots","setVerboseLogging","stop","WatcherChannelClient","enable","roots","FileWatcher","onDidFilesChange","verboseLogging","isDisposed","restartCounter","startWatching","ipc_cp_1","AMD_ENTRYPOINT","PIPE_LOGGING","VERBOSE_LOGGING","MAX_RESTARTS","watcherIpc_1","setFolders","watcherOptions","OutOfProcessWin32FolderWatcher","watchedFolder","ignored","eventCallback","logCallback","glob","startWatcher","decoder","rawEvents","eventParts","changeType","absolutePath","ignore","changeTypeMap","folder","csharpWatcherService_1","excludes","onFileEvents","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","Graph","_hashFn","_nodes","collections_1","outgoing","fromNode","lookupOrInsertNode","toNode","incoming","_key","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IDownloadService","instantiation_1","IEnvironmentService","BACKUPS","LogsDataCleaner","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","__decorate","__param","environment_1","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","IExtensionManagementService","IExtensionGalleryService","SortBy","SortOrder","StatisticType","InstallOperation","INSTALL_ERROR_NOT_SUPPORTED","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","DISABLED_EXTENSIONS_STORAGE_PATH","ENABLED_EXTENSIONS_STORAGE_PATH","IGlobalExtensionEnablementService","ExtensionsLabel","ExtensionsChannelId","PreferencesLabel","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","checkForChangeType","getOfType","hasType","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","throwIfCancelled","throwIfTooLarge","totalBytesRead","limits","memory","files_1","bytesRead","allowedRemainingBytes","bufferSize","posInFile","posInBuffer","lastChunkLength","doReadFileIntoStream","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","fileChangesDelayer","watcher_2","fileChangesBuffer","pathToWatch","eventType","onFileChange","onVerbose","fileChanges","normalizedFileChanges","watcher_1","ServiceCollection","_entries","instanceOrDescriptor","_enableTracing","CyclicDependencyError","graph","InstantiationService","services","serviceCollection_1","strict","_services","_parent","_trace","Trace","traceInvocation","_done","isOptional","_getOrCreateServiceInstance","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","getValue","TraceType","_start","_dep","_None","dur","_totals","causedCreation","lines","printChild","trace","nested","LanguageType","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","LogServiceAdapter","adapter","consoleLog","extractMessage","ConsoleLogInMainService","MultiplexLogService","logServices","critical","DelegatedLogService","NullLogService","getLogLevel","Off","FileService","BUFFER_SIZE","_onDidChangeFileSystemProviderRegistrations","_onWillActivateFileSystemProvider","onWillActivateFileSystemProvider","_onDidChangeFileSystemProviderCapabilities","onDidChangeFileSystemProviderCapabilities","_onDidRunOperation","onDidRunOperation","_onError","_onDidFilesChange","activeWatchers","writeQueues","providerDisposables","onDidChangeFile","onDidChangeCapabilities","onDidErrorOccur","joiners","capability","resourceForError","activateProvider","withProvider","doResolveFile","resolveTo","resolveSingleChildDescendants","resolveMetadata","trie","toFileStat","Boolean","findSuperstr","recurse","labels_1","File","Directory","SymbolicLink","ctime","resolvedEntries","childResource","childStat","toResolve","bufferOrReadableOrStream","throwIfFileSystemIsReadonly","withWriteProvider","validateWriteFile","stream_1","doWriteUnbuffered","doWriteBuffered","withReadProvider","doReadAsFileStream","preferUnbuffered","cancellableSource","statPromise","validateReadFile","fileStreamPromise","readFileUnbuffered","readFileStreamed","readFileBuffered","fileStream","readFileStream","transformFileReadStream","io_1","validateReadFileLimits","tooLargeErrorResult","sourceProvider","targetProvider","doMoveCopy","isSameResourceWithDifferentPathCase","doValidateMoveCopy","del","sourceFile","doCopyFolder","doPipeBuffered","doPipeBufferedToUnbuffered","doPipeUnbufferedToBuffered","doPipeUnbuffered","sourceFolder","targetFolder","sourceChild","targetChild","isPathCaseSensitive","directory","directoriesToCreate","useTrash","watchDisposed","watchDisposable","doWatch","toWatchKey","toMapKey","writeQueue","readableOrStream","ensureWriteQueue","doWriteStreamBufferedQueued","doWriteReadableBufferedQueued","doWriteBuffer","totalBytesWritten","doWriteUnbufferedQueued","doPipeBufferedQueued","sourceHandle","targetHandle","doPipeUnbufferedQueued","doPipeUnbufferedToBufferedQueued","log_1","DiskFileSystemProvider","mapHandleToPos","writeHandles","_onDidWatchErrorOccur","_onDidChangeFile","recursiveFoldersToWatch","recursiveWatchRequestDelayer","_capabilities","toFilePath","toType","birthtime","toFileSystemProviderError","filePath","normalizedPos","normalizePos","updatePos","bytesLength","lastKnownPos","doWrite","bytesWritten","doDelete","fromFilePath","validateTargetDeleted","watchRecursive","watchNonRecursive","folderToWatch","refreshRecursiveWatchers","doRefreshRecursiveWatchers","recursiveWatcher","watcherService_3","watcherImpl","usePolling","watcherService_1","_c","watcherService_2","recursiveWatcherLogLevelListener","watcherService","watcherService_4","logLevelListener","LoggerChannel","consoleFn","LoggerChannelClient","FollowerLogService","master","logger","createRotatingLogger","filename","filesize","filecount","SpdLogService","logsFolder","_loggerCreationPromise","_createSpdLogLogger","_logger","processName","_spdlog","setAsyncMode","logfilePath","createRotatingLoggerAsync","createSpdLogLogger","_log","disposeLogger","drop","severity_1","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","onDidClose","onDidChangeVisibility","actions","product","nameLong","nameShort","urlProtocol","rawProductConfiguration","rootPath","pkg","process_1","dataFolderName","getIPCHandle","product_1","getWin32IPCHandle","vscodePortable","xdgRuntimeDir","scope","getNixIPCHandle","EnvironmentService","_args","_execPath","date_1","appRoot","execPath","cliPath","isBuilt","applicationName","homedir","parseUserDataDir","appSettingsHome","userRoamingDataHome","settingsResource","resources","userDataSyncHome","userDataSyncLogResource","machineSettingsResource","workspaceStorageHome","keybindingsResource","keyboardLayoutResource","argvResource","snippetsHome","isExtensionDevelopment","extensionDevelopmentPath","backupHome","backupWorkspacesPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","parsePathArg","extensionsPath","vscodeExtensions","extraExtensionPaths","extraBuiltinExtensionPaths","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","extensionEnabledProposedApi","debugExtensionHost","parseExtensionHostPort","logExtensionHostCommunication","mainIPCHandle","sharedIPCHandle","nodeCachedDataDir","serviceMachineIdResource","disableUpdates","disableCrashReporter","driverHandle","driverVerbose","decorators_1","isBuild","parseDebugPort","debugId","debugArg","debugBrkArg","defaultBuildPort","break","parseSearchPort","systemLanguages","quality","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionManagementUtil_1","extensionIdentifier","installed","updated","extensionManagement_1","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","crypto_1","IProductService","Registry","Assert","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultOverridesConfigurationNode","title","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","allOf","defaultConfigurations","defaultConfiguration","defaults","propertySchema","description","$ref","overrideIdentifier","updateOverridePropertyPatternKey","propertyKeys","validateProperty","included","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","curr","getConfigurationValue","settingPath","component","accessSetting","overrideIdentifierFromKey","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","value1","value2","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","fromOverride","toOverride","toOverrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","parseErrors","json","filterByScope","filterOverriddenProperties","getScope","UserSettings","userSettingsResource","_onDidChange","onDidChange","parser","parseContent","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","workspaceConfiguration","folderConfigurations","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","model","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","ConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","configurationModels_1","reloadConfigurationScheduler","reloadConfiguration","onDidDefaultConfigurationChange","loadConfiguration","toData","onDidChangeUserConfiguration","userConfigurationModel","compareAndUpdateLocalUserConfiguration","compareAndUpdateDefaultConfiguration","configurationChange","getTargetConfiguration","isSuccess","statusCode","hasNoContent","IRequestService","asText","asJson","registerConfiguration","order","http.proxy","markdownDescription","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","RequestChannel","headers","RequestChannelClient","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","hostname","auth","rejectUnauthorized","strictSSL","resolve_2","reject_2","getServiceMachineId","storageService","store","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","loadSync","loadAsync","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","init","getItem","setItem","WillSaveStateReason","IStorageService","StorageScope","InMemoryStorageService","_onDidChangeStorage","onDidChangeStorage","_onWillSaveState","onWillSaveState","globalCache","workspaceCache","fallbackValue","getCache","valueStr","logStorage","toWorkspace","reason","NONE","globalPath","workspacePath","safeParse","globalItems","globalItemsParsed","workspaceItems","workspaceItemsParsed","globalValues","table","workspaceValues","ErrorEvent","callstack","BaseErrorTelemetry","telemetryService","flushDelay","ERROR_FLUSH_TIMEOUT","_flushHandle","_disposables","_telemetryService","_flushDelay","unbind","Errors","addListener","_onErrorEvent","installErrorListeners","_flushBuffer","_enqueue","publicLog2","ErrorTelemetry","errorTelemetry_1","oldOnError","onerror","_onUncaughtError","uncaught_error_name","uncaught_error_msg","ITelemetryService","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","machineIdKey","trueMachineIdKey","crashReporterIdStorageKey","Flags","FilterType","flagsToString","f","AssetType","Icon","Details","Changelog","Manifest","VSIX","License","Repository","PropertyType","Dependency","ExtensionPack","Engine","LocalizedLanguages","DefaultQueryState","pageNumber","pageSize","sortBy","sortOrder","criteria","assetTypes","Query","filterType","filters","searchText","criterium","SearchText","getStatistic","statistics","statisticName","getCoreTranslationAssets","assetType","asset","getVersionAsset","getRepositoryAsset","gitRegExp","fallbackUri","getDownloadAsset","fallbackAssetUri","getIconAsset","assetUri","getExtensions","getEngine","getLocalizedLanguages","toExtension","galleryExtension","querySource","assets","readme","changelog","license","repository","download","icon","coreTranslations","extensionName","extensionId","lastUpdated","displayName","shortDescription","installCount","rating","ratingCount","extensionPack","localizedLanguages","preview","ExtensionGalleryService","requestService","productService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","resolveMarketplaceHeaders","extensionValidator_1","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","ExcludeNonValidated","withPage","withFilter","Target","ExcludeWithFlags","Unpublished","ExtensionId","ExtensionName","queryGallery","galleryExtensions","rawExtension","versionAsset","getLastValidExtensionVersion","rawVersion","isEnabled","names","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","withSortBy","ids","withSortOrder","total","firstPage","getPage","pageIndex","ct","nextPageQuery","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","url","api","request_1","resultCount","resultMetadata","metadataType","metadataItems","startTime","duration","publicLog","operationParam","downloadAsset","getAsset","compatible","IncludeVersions","fallbackUrl","firstOptions","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionRecursively","slow","telemetry_1","productService_1","storage_1","X-Market-Client-Id","User-Agent","serviceMachineId_1","TelemetryService","_configurationService","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","_enabled","piiPath","_updateUserOptIn","optIn","isHashedId","usingFallbackGuid","trueMachineId","correctedMachineId","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","instanceId","msftInternal","anonymizeFilePaths","_cleanupInfo","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","y","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","_logService","commonPropertiesRegex","strippedData","flattenKeys","flatKeys","configurationTelemetry","configurationSource","configurationKeys","validateTelemetryData","measurements","flat","cleanRemoteAuthority","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","telemetryUtils_1","trackEvent","resolveCommonProperties","msftInternalDomains","release","domainList","domain","msftDomain","verifyMicrosoftInternalDomain","seq","defineProperties","common.timesincesessionstart","common.sequence","SNAP","SNAP_REVISION","buildTelemetryMessage","mergedTelemetry","mergeTelemetry","dirName","dirs","statSync","telemetryJsonFolders","INodeProxyService","NodeProxyChannel","NodeProxyChannelClient","TelemetryChannel","setEnabled","getTelemetryInfo","TelemetryChannelClient","Channel","_sender","cpus","cores","memoryFree","freemem","memoryTotal","totalmem","userInfo","TELEMETRY_URL","logger_1","named","metadataPath","isInternalConfiguration","DefaultConfiguration","getNlsConfiguration","util","lp","_languagePackSupport","getTranslations","getLocaleFromConfig","localeConfigUri","_m1","_m2","m4","length_1","Connection","offline","_offline","doReconnect","doDispose","ManagementConnection","setOffline","beginAcceptReconnection","endAcceptReconnection","ExtensionHostConnection","environment","getUnderlyingSocket","sendInitMessage","skipWebSocketFrames","proc","VSCODE_EXTHOST_WILL_SEND_SOCKET","VSCODE_HANDLES_UNCAUGHT_ERRORS","VSCODE_LOG_STACK","VSCODE_LOG_LEVEL","LOG_LEVEL","VSCODE_NLS_CONFIG","ipc_net_2","rawMessage","authenticate","_message","sendMessage","sendControl","encodePath","Translations","aKeys","bKeys","Logger","messageHandler","_messageHandler","notification_1","MANIFEST_FILE","ExtensionManifestHandler","ourVersion","absoluteFolderPath","isUnderDevelopment","_ourVersion","_absoluteFolderPath","_isBuiltin","_isUnderDevelopment","_absoluteManifestPath","ExtensionManifestParser","manifestContents","__metadata","jsonErrorMessages_1","ExtensionManifestNLSReplacer","_nlsConfig","extensionDescription","reportErrors","localized","reportInvalidFormat","translationId","localizedMessages","translationPath","translationBundle","package","findMessageBundles","messageBundle","messageBundleContent","resolveOriginalMessageBundle","_replaceNLStrings","originalMessageBundle","originalBundleContent","devMode","toCheck","literal","originalMessages","messageScope","processEntry","messageKey","ExtensionManifestValidator","_extensionDescription","isValidExtensionDescription","extensionLocation","extensionFolderPath","baseIsValidExtensionDescription","semver","valid","_isStringArray","activationEvents","normalizedAbsolutePath","ExtensionScannerInput","tanslations","extensionPoints_1","DefaultExtensionResolver","ExtensionScanner","replaceNLS","resolver","obsolete","obsoleteFileContents","refs","resolveExtensions","ref","createNLSConfig","_extensionDescriptions","scanExtension","extensionDescriptions","rcompare","scanExtensions","builtinExtensions","extraBuiltinExtensions","resultMap","resultArr","aLastSegment","bLastSegment","Watcher","diskFileSystemProvider_1","watches","w","req","FileProviderChannel","watchers","filechange","session","unwatch","_watch","requestResourcePath","ExtensionEnvironmentChannel","telemetry","getEnvironmentData","getDiagnosticInfo","disableTelemetry","settingsPath","extensionHostLogsPath","scanMultiple","VSCODE_DEV","scanBuiltin","scanInstalled","allExtensions","uniqueExtensions","multipleExtensions","NodeProxyService","_serviceBrand","_$onMessage","$onMessage","_onDown","onDown","_onUp","onUp","node_browser_1","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteFileSystemProvider","remoteAgentService","_onDidChangeCapabilities","getConnection","setCaseSensitive","getEnvironment","remoteAgentEnvironment","registerListeners","eventsOrError","isCaseSensitive","dataOrErrorOrEnd","RemoteExtensionLogFileName","IRemoteAgentService","ExtractError","cause","toExtractError","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","sourcePathRegex","fileName","targetFileName","openZipStream","attr","externalFileAttributes","modeFromEntry","targetDirName","istream","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","openReadStream","zipPath","yazl","ZipFile","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","zip_1","ExtensionManagementError","parseManifest","ExtensionManagementService","galleryService","downloadService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","_devSystemExtensionsPath","_devSystemExtensionsFilePath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","manifestCache","extensionsManifestCache_1","extensionLifecycle","extensionLifecycle_1","collectFiles","downloadLocation","downloadVsix","extensionManagementUtil_2","collectFilesFromDirectory","identifierWithVersion","installedExtensions","existing","removeExtension","gt","unsetUninstalledAndGetLocal","getMetadata","installFromZipPath","downloadedLocation","toNonCancellablePromise","installExtension","installDependenciesAndPackExtensions","onDidInstallExtensionSuccess","gallery","reportTelemetry","getTelemetryEvent","onDidInstallExtensionFailure","checkAndGetCompatibleVersion","cancellablePromise","successCallback","errorCallback","existingExtension","downloadInstallableExtension","installableExtension","neq","setUninstalled","isMalicious","compatibleExtension","getCompatibleExtension","findGalleryExtension","removeUninstalledExtension","joinErrors","extractAndInstall","isUninstalled","unsetUninstalled","folderName","tempPath","extensionPath","extractAndRename","setMetadata","saveMetadataForLocalExtension","extractPath","renamePath","retryUntil","dependenciesAndPackExtensions","old","galleryIdentifier","galleryResult","extensionsToInstall","rollback","extensionToUninstall","checkForDependenciesAndUninstall","localExtension","manifestPath","findGalleryExtensionByName","findGalleryExtensionById","errorOrErrors","previousValue","currentValue","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","uninstallExtension","doUninstall","checked","extensionsPack","packOfPackedExtensions","packedExtension","scanUserExtensions","userExtensions","u","reportStatistic","errorcode","promises","scanSystemExtensions","systemExtensionsPromise","devSystemExtensionsPromise","getDevSystemExtensionsList","devSystemExtensionsList","devSystemExtensionsPath","systemExtensions","devSystemExtensions","excludeOutdated","getUninstalledExtensions","scanAllUserExtensions","uninstalled","limiter","extensionsFolders","extensionFolder","extensionNls_1","readManifest","readmeUrl","changelogUrl","removeUninstalledExtensions","removeOutdatedExtensions","postUninstall","toRemove","withUninstalledExtensions","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","devSystemExtensionsFilePath","extensionData","download_1","vszipExtract","vszip","vszipBuffer","tar","tarPath","pack","tarStream","finalize","archivePath","extractTar","includes","extractAssets","assetPath","extractor","fail","extractData","fileData","nextEntry","rawName","fstream","enableCustomMarketplace","SERVICE_URL","itemUrl","ITEM_URL","recommendationsUrl","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","agent","proxy_1","Proxy-Authorization","_request","endpoint","rawRequest","getRawRequest","getNodeRequest","password","followRedirects","zlib_1","createGunzip","abort","notInstalled","useId","getId","withVersion","EXTENSION_ID_REGEX","getIdAndVersion","Main","instantiationService","extensionGalleryService","argv","setInstallSource","listExtensions","installExtensions","locateExtension","telemetry_2","installSource","showVersions","categories","failed","installedExtensionsManifests","updateLocalizationsCache","responseText","notFound","installedExtension","newer","getExtensionId","uninstalledExtensions","localizationService","createInstance","eventPrefix","environmentService_1","spdlogService_1","fileService_1","diskFileSystemProvider","registerProvider","configurationService_1","initialize","state_1","stateService_1","instantiationService_1","invokeFunction","accessor","envService","stateService","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","commonProperties_1","telemetryService_1","createChild","Vscode","_onDidClientConnect","ipc","maxExtraOfflineConnections","cliProcessMain_1","servicesPromise","initializeServices","startPath","parseUrl","workbenchWebConfiguration","workspaceUri","folderUri","workspaceProvider","payload","remoteUserDataUri","productConfiguration","nlsConfiguration","reconnectionToken","protocol_1","reconnection","handshake","desiredConnectionType","debugPort","getDebugPort","reconnect","connection_1","nodeProxy_1","disposeOldOfflineConnections","tunnel","remoteAgentService_1","logIpc_1","extensionHostDebugIpc_1","insights_1","id_1","localizations_2","channel_1","logsDataCleaner_1","extensionManagementIpc_1","requestIpc_1","ipc_2","remoteAgentFileSystemChannel_1","logger_2","marketplace_1","exit","CODE_SERVER_PARENT_PID","parentPid","server_1","field","cli","handleWebSocket"],"mappings":"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,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA;AAEAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,UAAA,KAAA,YACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,KAAA,QAEAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,cAAA,OAAA,gBACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,YAAA,IAAA,cAtID,CAAWA,IAAAA,EAAc,KAsJzBjP,EAAAuT,YAAA,SAA4BpE,EAAchF,GACzC,MAAMqJ,EAAsB,GACtBC,EAAuB,IAAIxU,OACjC,IAAIyU,OAAqCvY,EACzC,MAAMwY,EAA6B,CAClCzT,MAAO,GACPiR,OAAQ,EACRvZ,OAAQ;AACRgc,KAAM,SACN9E,YAAQ3T,GAET,IAAI0Y,GAAkB,EACtB,SAASC,EAAgB5T,EAAeiR,EAAgBvZ,EAAgBgc,GACvED,EAAiBzT,MAAQA,EACzByT,EAAiBxC,OAASA,EAC1BwC,EAAiB/b,OAASA,EAC1B+b,EAAiBC,KAAOA,EACxBD,EAAiBI,iBAAc5Y,EAC/BuY,EAAeC,EAEhB,IAECtC,EAAMlC,EAAM,CACX0C,cAAe,CAACV,EAAgBvZ,KAC/B,GAAIuS,GAAYgH,EACf,MAAMsC,EAEPC,OAAevY,EACf0Y,EAAkB1J,EAAWgH,EAC7BqC,EAASjb,KAAK,KAEfuZ,iBAAkB,CAACxZ,EAAc6Y,EAAgBvZ,KAChD,GAAIuS,EAAWgH,EACd,MAAMsC,EAIP,GAFAK,EAAgBxb,EAAM6Y,EAAQvZ,EAAQ,YACtC4b,EAASA,EAAS5b,OAAS,GAAKU,EAC5B6R,GAAYgH,EAASvZ,EACxB,MAAM6b,GAGR1B,YAAa,CAACZ,EAAgBvZ,KAC7B,GAAIuS,GAAYgH,EACf,MAAMsC,EAEPC,OAAevY,EACfqY,EAAS5L,OAEVoK,aAAc,CAACb,EAAgBvZ,KAC9B,GAAIuS,GAAYgH,EACf,MAAMsC,EAEPC,OAAevY,EACfqY,EAASjb,KAAK,IAEf0Z,WAAY,CAACd,EAAgBvZ,KAC5B,GAAIuS,GAAYgH,EACf,MAAMsC,EAEPC,OAAevY,EACfqY,EAAS5L,OAEVsK,eAAgB,CAAChS,EAAYiR,EAAgBvZ,KAC5C,GAAIuS,EAAWgH,EACd,MAAMsC,EAIP,GAFAK,EAAgB5T,EAAOiR,EAAQvZ,EAAQub,EAAYjT,IAE/CiK,GAAYgH,EAASvZ,EACxB,MAAM6b,GAGRtB,YAAa,CAAC6B,EAAa7C,EAAgBvZ,KAC1C,GAAIuS,GAAYgH,EACf,MAAMsC,EAEP,GAAY,MAARO,GAAeN,GAAsC,aAAtBA,EAAaE,KAC/CF,EAAaK,YAAc5C,EAC3B0C,GAAkB,EAClBH,OAAevY,OACT,GAAY,MAAR6Y,EAAa,CACvB,MAAMjF,EAAOyE,EAASA,EAAS5b,OAAS,GACpB,iBAATmX,EACVyE,EAASA,EAAS5b,OAAS,GAAKmX,EAAO,GAEvC8E,GAAkB,EAClBL,EAASA,EAAS5b,OAAS,GAAK,IAEjC8b,OAAevY,MAIjB,MAAOjB,GACR,GAAIA,IAAMuZ,EACT,MAAMvZ,EAIR,MAAO,CACNT,KAAM+Z,EACNE,aAAAA,EACAG,gBAAAA,EACAI,QAAUC,IACT,IAAIC,EAAI,EACR,IAAK,IAAIzc,EAAI,EAAGyc,EAAID,EAAQtc,QAAUF,EAAI8b,EAAS5b,OAAQF,IAC1D,GAAIwc,EAAQC,KAAOX,EAAS9b,IAAqB,MAAfwc,EAAQC,GACzCA,SACM,GAAmB,OAAfD,EAAQC,GAClB,OAAO,EAGT,OAAOA,IAAMD,EAAQtc,UAUxBoI,EAAAtD,MAAA,SAAsByS,EAAciF,EAAuB,GAAI7C,EAAwBvC,EAAawC,SACnG,IAAI6C,EAAiC,KACjCC,EAAqB;CACzB,MAAMC,EAAyB,GAE/B,SAASC,EAAQtU,GACZ4J,MAAMC,QAAQuK,GACTA,EAAe/b,KAAK2H,GACE,OAApBmU,IACVC,EAAcD,GAAmBnU,GAkCnC,OADAmR,EAAMlC,EA7BuB,CAC5B0C,cAAe,KACd,MAAM4C,EAAS,GACfD,EAAQC,GACRF,EAAgBhc,KAAK+b,GACrBA,EAAgBG,EAChBJ,EAAkB,MAEnBvC,iBAAmBxZ,IAClB+b,EAAkB/b,GAEnByZ,YAAa,KACZuC,EAAgBC,EAAgB3M,OAEjCoK,aAAc,KACb,MAAMpM,EAAe,GACrB4O,EAAQ5O,GACR2O,EAAgBhc,KAAK+b,GACrBA,EAAgB1O,EAChByO,EAAkB,MAEnBpC,WAAY,KACXqC,EAAgBC,EAAgB3M,OAEjCsK,eAAgBsC,EAChBnC,QAAS,CAACpV,EAAuBkU,EAAgBvZ,KAChDwc,EAAO7b,KAAK,CAAE0E,MAAAA,EAAOkU,OAAAA,EAAQvZ,OAAAA,MAGV2Z,GACd+C,EAAc,IAOtBtU,EAAA0U,UAAA,SAA0BvF,EAAciF,EAAuB,GAAI7C,EAAwBvC,EAAawC,SACvG,IAAI8C,EAA0B,CAAEV,KAAM,QAASzC,QAAS,EAAGvZ,QAAS,EAAGiD,SAAU,GAAIiU,YAAQ3T,GAE7F,SAASwZ,EAAuBC,GACJ,aAAvBN,EAAcV,OACjBU,EAAc1c,OAASgd,EAAYN,EAAcnD,OACjDmD,EAAgBA,EAAcxF,QAIhC,SAAS0F,EAAQK,GAEhB,OADAP,EAAczZ,SAAUtC,KAAKsc,GACtBA,EAyCRxD,EAAMlC,EAtCuB,CAC5B0C,cAAgBV,IACfmD,EAAgBE,EAAQ,CAAEZ,KAAM,SAAUzC,OAAAA,EAAQvZ,QAAS,EAAGkX,OAAQwF,EAAezZ,SAAU,MAEhGiX,iBAAkB,CAACxZ,EAAc6Y,EAAgBvZ,MAChD0c,EAAgBE,EAAQ,CAAEZ,KAAM,WAAYzC,OAAAA,EAAQvZ,QAAS,EAAGkX,OAAQwF,EAAezZ,SAAU,MACnFA,SAAUtC,KAAK,CAAEqb,KAAM,SAAU1T,MAAO5H,EAAM6Y,OAAAA,EAAQvZ,OAAAA,EAAQkX,OAAQwF,KAErFvC,YAAa,CAACZ,EAAgBvZ,KAC7B0c,EAAc1c,OAASuZ,EAASvZ,EAAS0c,EAAcnD,OACvDmD,EAAgBA,EAAcxF,OAC9B6F,EAAuBxD,EAASvZ,IAEjCoa,aAAc,CAACb,EAAgBvZ,KAC9B0c,EAAgBE,EAAQ,CAAEZ,KAAM,QAASzC,OAAAA,EAAQvZ,QAAS,EAAGkX,OAAQwF,EAAezZ,SAAU,MAE/FoX,WAAY,CAACd,EAAgBvZ,KAC5B0c,EAAc1c,OAASuZ,EAASvZ,EAAS0c,EAAcnD,OACvDmD,EAAgBA,EAAcxF,OAC9B6F,EAAuBxD,EAASvZ;EAEjCsa,eAAgB,CAAChS,EAAYiR,EAAgBvZ,KAC5C4c,EAAQ,CAAEZ,KAAMT,EAAYjT,GAAQiR,OAAAA,EAAQvZ,OAAAA,EAAQkX,OAAQwF,EAAepU,MAAAA,IAC3EyU,EAAuBxD,EAASvZ,IAEjCua,YAAa,CAAC6B,EAAa7C,EAAgBvZ,KACf,aAAvB0c,EAAcV,OACL,MAARI,EACHM,EAAcP,YAAc5C,EACV,MAAR6C,GACVW,EAAuBxD,KAI1BkB,QAAS,CAACpV,EAAuBkU,EAAgBvZ,KAChDwc,EAAO7b,KAAK,CAAE0E,MAAAA,EAAOkU,OAAAA,EAAQvZ,OAAAA,MAGV2Z,GAErB,MAAM9Z,EAAS6c,EAAczZ,SAAU,GAIvC,OAHIpD,UACIA,EAAOqX,OAERrX,GAMRuI,EAAA8U,mBAAA,SAAmCC,EAAYtb,GAC9C,IAAKsb,EACJ,OAED,IAAI7D,EAAO6D,EACX,IAAK,IAAIC,KAAWvb,EACnB,GAAuB,iBAAZub,EAAsB,CAChC,GAAkB,WAAd9D,EAAK0C,OAAsB9J,MAAMC,QAAQmH,EAAKrW,UACjD,OAED,IAAIoa,GAAQ,EACZ,IAAK,MAAMC,KAAgBhE,EAAKrW,SAC/B,GAAIiP,MAAMC,QAAQmL,EAAara,WAAaqa,EAAara,SAAS,GAAGqF,QAAU8U,EAAS,CACvF9D,EAAOgE,EAAara,SAAS,GAC7Boa,GAAQ,EACR,MAGF,IAAKA,EACJ,WAEK,CACN,MAAMnY,EAAgBkY,EACtB,GAAkB,UAAd9D,EAAK0C,MAAoB9W,EAAQ,IAAMgN,MAAMC,QAAQmH,EAAKrW,WAAaiC,GAASoU,EAAKrW,SAASjD,OACjG,OAEDsZ,EAAOA,EAAKrW,SAASiC,GAGvB,OAAOoU,GAMRlR,EAAAmV,YAAA,SAAgBA,EAAYjE,GAC3B,IAAKA,EAAKpC,SAAWoC,EAAKpC,OAAOjU,SAChC,MAAO,GAER,MAAMpB,EAAO0b,EAAYjE,EAAKpC,QAC9B,GAAyB,aAArBoC,EAAKpC,OAAO8E,KAAqB,CACpC,MAAM/T,EAAMqR,EAAKpC,OAAOjU,SAAS,GAAGqF,MACpCzG,EAAKlB,KAAKsH,QACJ,GAAyB,UAArBqR,EAAKpC,OAAO8E,KAAkB,CACxC,MAAM9W,EAAQoU,EAAKpC,OAAOjU,SAASkI,QAAQmO,IAC5B,IAAXpU,GACHrD,EAAKlB,KAAKuE,GAGZ,OAAOrD,GAMRuG,EAAAoV,aAAA,SAAgBA,EAAalE,GAC5B,OAAQA,EAAK0C,MACZ,IAAK;AACJ,OAAO1C,EAAKrW,SAAUE,IAAIqa,GAC3B,IAAK,SACJ,MAAMvL,EAAM5K,OAAOK,OAAO,MAC1B,IAAK,IAAI+V,KAAQnE,EAAKrW,SAAW,CAChC,MAAMga,EAAYQ,EAAKxa,SAAU,GAC7Bga,IACHhL,EAAIwL,EAAKxa,SAAU,GAAGqF,OAASkV,EAAaP,IAG9C,OAAOhL,EACR,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,UACJ,OAAOqH,EAAKhR,MACb,QACC,SAKHF,EAAAiR,SAAAA,EAOAjR,EAAAsV,iBAAA,SAAgBA,EAAiBpE,EAAYC,EAAgBC,GAAoB,GAChF,GAAIH,EAASC,EAAMC,EAAQC,GAAoB,CAC9C,MAAMvW,EAAWqW,EAAKrW,SACtB,GAAIiP,MAAMC,QAAQlP,GACjB,IAAK,IAAInD,EAAI,EAAGA,EAAImD,EAASjD,QAAUiD,EAASnD,GAAGyZ,QAAUA,EAAQzZ,IAAK,CACzE,MAAM6d,EAAOD,EAAiBza,EAASnD,GAAIyZ,EAAQC,GACnD,GAAImE,EACH,OAAOA,EAKV,OAAOrE,IASTlR,EAAAqR,MAAAA,EAsPArR,EAAAwV,cAAA,SAA8BrG,EAAcsG,GAE3C,IAECC,EAEArG,EAJGoC,EAAWvC,EAAcC,GAC5BwG,EAAkB,GAElBxE,EAAS,EAGV,GAGC,OAFA9B,EAAMoC,EAASf,cACfgF,EAAOjE,EAASd,QAEf,KAAA,GACA,KAAA,GACA,KAAA,GACKQ,IAAW9B,GACdsG,EAAMpd,KAAK4W,EAAKnS,UAAUmU,EAAQ9B,SAEjBlU,IAAdsa,GACHE,EAAMpd,KAAKkZ,EAASZ,gBAAgB/Q,QAAQ,WAAY2V,IAEzDtE,EAASM,EAASf,qBAGR,KAAJgF,GAET,OAAOC,EAAM1a,KAAK,KAGnB+E,EAAAmT,YAAAA;CC9yCA,MAAMyC,GAAoB,EAEpBC,EAA4B,4BAElC,SAASC,EAAmCjK,GAC3C,GAAK+J,GAID/J,GAAKA,IAAMkK,EAAWC,KACzB,IACEnK,EAAUgK,IAA6B,EACvC,MAAAI,KAMJ,SAASC,EAAuCrK,GAC/C,IAAK+J,EACJ,OAAO/J,EAGR,MAAM3H,EAAQ,IAAI9D,MAAM,iCAAiC8D,MAMzD,OALAV,WAAW,KACJqI,EAAUgK,IACf3d,QAAQie,IAAIjS,IAEX,KACI2H,EAeR,SAAgBuK,EAA+BC,GAC9C,OAAIvM,MAAMC,QAAQsM,IACjBA,EAAY1V,QAAQtC,IACfA,IACHyX,EAAYzX,GACZA,EAAE+X,aAGG,IACGC,GACVP,EAAYO,GACZA,EAAYD,UACLC,QAEP,EAtBFrW,EAAAsW,aAAA,SAA+CC,GAC9C,MAA+C,mBAAnBA,EAAOH,SAAkE,IAA1BG,EAAOH,QAAQxe,QAO3FoI,EAAAoW,QAAAA,EAkBApW,EAAAwW,mBAAA,YAAsCH,GAErC,OADAA,EAAY1V,QAAQmV,GACbI,EAAgB,CAAEE,QAAS,IAAMA,EAAQC,MAGjDrW,EAAAyW,aAAA,SAA6B9U,GAC5B,MAAMQ,EAAO+T,EAAgB,CAC5BE,QAAS,KACRN,EAAY3T,GACZR,OAGF,OAAOQ,GAGR,IAAAuU,EAAA,MAAA,MAAaA,EAAbvV,cAISC,KAAAuV,WAAa,IAAIpV,IACjBH,KAAAwV,aAAc,EAOfzV,UACFC,KAAKwV,cAITd,EAAY1U,MACZA,KAAKwV,aAAc,EACnBxV,KAAKwB,SAMCzB,QACNC,KAAKuV,WAAWhW,QAAQ4U,GAAQA,EAAKa,WACrChV,KAAKuV,WAAW/T,QAGVzB,IAA2B+J,GACjC,IAAKA,EACJ,OAAOA,EAER,GAAKA,IAAqC9J,KACzC,MAAM,IAAIhB,MAAM,2CAYjB,OATA0V,EAAY5K;AACR9J,KAAKwV,YACHF,EAAgBG,0BACpB3e,QAAQkK,KAAK,IAAIhC,MAAM,uHAAuH8D,OAG/I9C,KAAKuV,WAAWlV,IAAIyJ,GAGdA,GAET,OA/CQwL,EAAAG,0BAA2B,EA+CnCH,GAjDA,GAAa1W,EAAA0W,gBAAAA,EAmDb,IAAAX,EAAA,MAAA,MAAsBA,EAMrB5U,cAFiBC,KAAA0V,OAAS,IAAIJ,EAG7BR,EAAgB9U,MAGVD,UACN2U,EAAY1U,MAEZA,KAAK0V,OAAOV,UAGHjV,UAAiC+J,GAC1C,GAAKA,IAAgC9J,KACpC,MAAM,IAAIhB,MAAM,2CAEjB,OAAOgB,KAAK0V,OAAOrV,IAAIyJ,IAEzB,OApBiB6K,EAAAC,KAAO/W,OAAO8X,OAAoB,CAAE5V,cAoBrD4U,GAtBA,GAAsB/V,EAAA+V,WAAAA,EA8BtB/V,EAAAgX,kBAAA,MAIC7V,cAFQC,KAAAwV,aAAc,EAGrBV,EAAgB9U,MAGjBlB,YACC,OAAOkB,KAAKwV,iBAAczb,EAAYiG,KAAK6V,OAG5C/W,UAAUA,GACLkB,KAAKwV,aAAe1W,IAAUkB,KAAK6V,SAInC7V,KAAK6V,QACR7V,KAAK6V,OAAOb,UAETlW,GACH4V,EAAY5V,GAEbkB,KAAK6V,OAAS/W,GAGfiB,QACCC,KAAKlB,WAAQ/E,EAGdgG,UACCC,KAAKwV,aAAc,EACnBd,EAAY1U,MACRA,KAAK6V,QACR7V,KAAK6V,OAAOb,UAEbhV,KAAK6V,YAAS9b,IAQhB6E,EAAAkX,oBAAA,MAAA/V,cAEkBC,KAAA+V,WAAoE,IAAI9V,IAEzFF,QAAQtB,GACP,IAAIuX,EAAYhW,KAAK+V,WAAW7V,IAAIzB,GAE/BuX,IACJA,EAAY;AAAEC,QAAS,EAAG5C,OAAQrT,KAAKkW,uBAAuBzX,IAC9DuB,KAAK+V,WAAW3V,IAAI3B,EAAKuX,IAG1B,MAAM3C,OAAEA,GAAW2C,EACbhB,EAAUmB,EAAA7K,KAAK,KACS,KAAvB0K,EAAWC,UAChBjW,KAAKoW,wBAAwB3X,EAAKuX,EAAW3C,QAC7CrT,KAAK+V,WAAWzV,OAAO7B,MAMzB,OAFAuX,EAAUC,UAEH,CAAE5C,OAAAA,EAAQ2B,QAAAA,KAOnBpW,EAAAyX,kBAAA,MACCtW,YAAmBsT,GAAArT,KAAAqT,OAAAA,EACnBtT,uIClPD,IAAAuW,EAAA,MAAA,MAAMA,EAQLvW,YAAYJ,GACXK,KAAKL,QAAUA,EACfK,KAAKiM,KAAOqK,EAAKC,UACjBvW,KAAKwW,KAAOF,EAAKC,WAEnB,OAXiBD,EAAAC,UAAY,IAAID,OAAUvc,GAW3Cuc,GAbA,GAeA1X,EAAA6X,WAAA,MAAA1W,cAESC,KAAA0W,OAAkBJ,EAAKC,UACvBvW,KAAA2W,MAAiBL,EAAKC,UACtBvW,KAAA4W,MAAgB,EAExBxX,WACC,OAAOY,KAAK4W,MAGb7W,UACC,OAAOC,KAAK0W,SAAWJ,EAAKC,UAG7BxW,QACCC,KAAK0W,OAASJ,EAAKC,UACnBvW,KAAK2W,MAAQL,EAAKC,UAClBvW,KAAK4W,MAAQ,EAGd7W,QAAQJ,GACP,OAAOK,KAAK6W,QAAQlX,GAAS,GAG9BI,KAAKJ,GACJ,OAAOK,KAAK6W,QAAQlX,GAAS,GAGtBI,QAAQJ,EAAYmX,GAC3B,MAAMC,EAAU,IAAIT,EAAK3W,GACzB,GAAIK,KAAK0W,SAAWJ,EAAKC,UACxBvW,KAAK0W,OAASK,EACd/W,KAAK2W,MAAQI,OAEP,GAAID,EAAU,CAEpB,MAAME,EAAUhX,KAAK2W,MACrB3W,KAAK2W,MAAQI,EACbA,EAAQP,KAAOQ,EACfA,EAAQ/K,KAAO8K,MAET;AAEN,MAAME,EAAWjX,KAAK0W,OACtB1W,KAAK0W,OAASK,EACdA,EAAQ9K,KAAOgL,EACfA,EAAST,KAAOO,EAEjB/W,KAAK4W,OAAS,EAEd,IAAIM,GAAY,EAChB,MAAO,KACDA,IACJA,GAAY,EACZlX,KAAKmX,QAAQJ,KAKhBhX,QACC,GAAIC,KAAK0W,SAAWJ,EAAKC,UAElB,CACN,MAAMa,EAAMpX,KAAK0W,OAAO/W,QAExB,OADAK,KAAKmX,QAAQnX,KAAK0W,QACXU,GAITrX,MACC,GAAIC,KAAK2W,QAAUL,EAAKC,UAEjB,CACN,MAAMa,EAAMpX,KAAK2W,MAAMhX,QAEvB,OADAK,KAAKmX,QAAQnX,KAAK2W,OACXS,GAIDrX,QAAQ+P,GACf,GAAIA,EAAK0G,OAASF,EAAKC,WAAazG,EAAK7D,OAASqK,EAAKC,UAAW,CAEjE,MAAMc,EAASvH,EAAK0G,KACpBa,EAAOpL,KAAO6D,EAAK7D,KACnB6D,EAAK7D,KAAKuK,KAAOa,OAEPvH,EAAK0G,OAASF,EAAKC,WAAazG,EAAK7D,OAASqK,EAAKC,WAE7DvW,KAAK0W,OAASJ,EAAKC,UACnBvW,KAAK2W,MAAQL,EAAKC,WAERzG,EAAK7D,OAASqK,EAAKC,WAE7BvW,KAAK2W,MAAQ3W,KAAK2W,MAAOH,KACzBxW,KAAK2W,MAAM1K,KAAOqK,EAAKC,WAEbzG,EAAK0G,OAASF,EAAKC,YAE7BvW,KAAK0W,OAAS1W,KAAK0W,OAAQzK,KAC3BjM,KAAK0W,OAAOF,KAAOF,EAAKC,WAIzBvW,KAAK4W,OAAS,EAGf7W,EAAEgM,OAAOC,YACR,IAAI8D,EAAO9P,KAAK0W,OAChB,KAAO5G,IAASwG,EAAKC,iBACdzG,EAAKnQ,QACXmQ,EAAOA,EAAK7D,KAIdlM,UACC,MAAM1J,EAAc,GACpB,IAAK,IAAIyZ,EAAO9P,KAAK0W,OAAQ5G,IAASwG,EAAKC,UAAWzG,EAAOA,EAAK7D,KACjE5V,EAAOc,KAAK2Y,EAAKnQ,SAElB,OAAOtJ,2ECxHT,IAAiBihB;sIAAjB,SAAiBA,GAMhB,SAAgBhM,EAAQiM,GACvB,MAAO,CAACxU,EAAUyU,EAAW,KAAMvC,KAElC,IACI5e,EADAohB,GAAU,EAkBd,OAhBAphB,EAASkhB,EAAMze,IACd,IAAI2e,EAQJ,OANWphB,EACVA,EAAO2e,UAEPyC,GAAU,EAGJ1U,EAAS5D,KAAKqY,EAAU1e,IAC7B,KAAMmc,GAELwC,GACHphB,EAAO2e,UAGD3e,GAQT,SAAgBsD,EAAU4d,EAAiB5d,GAC1C,OAAO+d,EAAS,CAAC3U,EAAUyU,EAAW,KAAMvC,IAAiBsC,EAAMjhB,GAAKyM,EAAS5D,KAAKqY,EAAU7d,EAAIrD,IAAK,KAAM2e,IAOhH,SAAgB1V,EAAWgY,EAAiBI,GAC3C,OAAOD,EAAS,CAAC3U,EAAUyU,EAAW,KAAMvC,IAAiBsC,EAAMjhB,IAAOqhB,EAAKrhB,GAAIyM,EAAS5D,KAAKqY,EAAUlhB,IAAO,KAAM2e,IASzH,SAAgB5M,EAAUkP,EAAiBlP,GAC1C,OAAOqP,EAAS,CAAC3U,EAAUyU,EAAW,KAAMvC,IAAiBsC,EAAMze,GAAKuP,EAAOvP,IAAMiK,EAAS5D,KAAKqY,EAAU1e,GAAI,KAAMmc,IAwBxH,SAAgBlL,EAAawN,EAAiBK,EAA6CC,GAC1F,IAAIC,EAAwBD,EAE5B,OAAOle,EAAU4d,EAAOze,GACvBgf,EAASF,EAAME,EAAQhf,IAUzB,SAAgB4e,EAAYH,GAC3B,IAAIxU,EACJ,MAAMgV,EAAU,IAAIC,EAAW,CAC9BjY,qBACCgD,EAAWwU,EAAMQ,EAAQE,KAAMF,IAEhChY,uBACCgD,EAASiS,aAIX,OAAO+C,EAAQR,MAchB,SAAgB1V,EAAe0V,EAAiBK,EAA6C9V,EAAgB,IAAKoW,GAAU,EAAOC,GAElI,IAAIC,EACAN,OAAwB/d,EACxBse,OAActe,EACdue,EAAoB,EAExB,MAAMP,EAAU,IAAIC,EAAW,CAC9BG,qBAAAA,EACApY,qBACCqY,EAAeb,EAAMgB,IACpBD,IACAR,EAASF,EAAME,EAAQS,GAEnBL,IAAYG,IACfN,EAAQE,KAAKH,GACbA,OAAS/d,GAGVoI,aAAakW,GACbA,EAASjW,WAAW,KACnB,MAAMoW,EAAUV,EAChBA,OAAS/d,EACTse,OAASte,IACJme,GAAWI,EAAoB,IACnCP,EAAQE,KAAKO,GAGdF,EAAoB,GAClBxW,MAGL/B,uBACCqY,EAAapD,aAIf,OAAO+C,EAAQR,MAiBhB,SAAgBkB,EAASlB,GACxB,IACImB,EADAC,GAAY,EAGhB,OAAOtQ,EAAOkP,EAAOzY;AACpB,MAAM8Z,EAAaD,GAAa7Z,IAAU4Z,EAG1C,OAFAC,GAAY,EACZD,EAAQ5Z,EACD8Z,IAlLItB,EAAA1C,KAAmB,IAAMiE,EAAAlE,WAAWC,KAKjC0C,EAAAhM,KAAIA,EA6BJgM,EAAA3d,IAAGA,EAQH2d,EAAA/X,QAAOA,EAUP+X,EAAAjP,OAAMA,EAONiP,EAAAwB,OAAhB,SAA0BvB,GACzB,OAAOA,GASQD,EAAAyB,IAAhB,YAA0BC,GACzB,MAAO,CAACjW,EAAUyU,EAAW,KAAMvC,IAAiB4D,EAAAzD,sBAAsB4D,EAAOrf,IAAI4d,GAASA,EAAMze,GAAKiK,EAAS5D,KAAKqY,EAAU1e,GAAI,KAAMmc,MAO5HqC,EAAAvN,OAAMA,EAcNuN,EAAAI,SAAQA,EAyBRJ,EAAAzV,SAAQA,EA6CRyV,EAAA2B,UAAhB,SAA6B1B,GAC5B,MAAM1R,GAAQ,IAAIzO,MAAO8hB,UACzB,OAAOvf,EAAI2R,EAAKiM,GAAQ4B,IAAK,IAAI/hB,MAAO8hB,UAAYrT,IAOrCyR,EAAAmB,MAAKA,EAkCLnB,EAAA8B,OAAhB,SAA0B7B,EAAiB8B,GAAW,EAAOC,EAAe,IAC3E,IAAIF,EAAqBE,EAAQphB,QAE7B6K,EAA+BwU,EAAMze,IACpCsgB,EACHA,EAAOjiB,KAAK2B,GAEZif,EAAQE,KAAKnf,KAIf,MAAMygB,EAAQ,KACTH,GACHA,EAAO7Z,QAAQzG,GAAKif,EAAQE,KAAKnf,IAElCsgB,EAAS,MAGJrB,EAAU,IAAIC,EAAW,CAC9BjY,qBACMgD,IACJA,EAAWwU,EAAMze,GAAKif,EAAQE,KAAKnf,MAIrCiH,wBACKqZ,IACCC,EACHjX,WAAWmX,GAEXA,MAKHxZ,uBACKgD,GACHA,EAASiS,UAEVjS,EAAW,QAIb,OAAOgV,EAAQR,OAiBhB,MAAMiC,EAELzZ,YAAqBwX,GAAAvX,KAAAuX,MAAAA,EAErBxX,IAAOQ,GACN,OAAO,IAAIiZ,EAAe7f,EAAIqG,KAAKuX,MAAOhX,IAG3CR,QAAQQ,GACP,OAAO,IAAIiZ,EAAeja,EAAQS,KAAKuX,MAAOhX,IAK/CR,OAAOQ,GACN,OAAO,IAAIiZ,EAAenR,EAAOrI,KAAKuX,MAAOhX,IAG9CR,OAAU6X,EAA6CC,GACtD,OAAO,IAAI2B,EAAezP,EAAO/J,KAAKuX,MAAOK,EAAOC,IAGrD9X,QACC,OAAO,IAAIyZ,EAAef,EAAMzY,KAAKuX,QAKtCxX,SAAY6X,EAA6C9V,EAAgB,IAAKoW,GAAU,EAAOC,GAC9F,OAAO,IAAIqB,EAAe3X,EAAS7B,KAAKuX,MAAOK,EAAO9V,EAAOoW,EAASC,IAGvEpY,GAAGgD,EAAyByU,EAAevC,GAC1C,OAAOjV,KAAKuX,MAAMxU,EAAUyU,EAAUvC,GAGvClV,KAAKgD,EAAyByU,EAAevC;AAC5C,OAAO3J,EAAKtL,KAAKuX,MAAVjM,CAAiBvI,EAAUyU,EAAUvC,IAI9BqC,EAAAxK,MAAhB,SAAyByK,GACxB,OAAO,IAAIiC,EAAejC,IAQXD,EAAAmC,qBAAhB,SAAwC1B,EAA2B2B,EAAmB/f,EAA6BggB,CAAAA,GAAMA,IACxH,MAAMpZ,EAAK,IAAIW,IAAgB7K,EAAO4hB,KAAKte,KAAOuH,IAG5C7K,EAAS,IAAI2hB,EAAW,CAAE4B,mBAFL,IAAM7B,EAAQ8B,GAAGH,EAAWnZ,GAEHuZ,qBADvB,IAAM/B,EAAQgC,eAAeL,EAAWnZ,KAGrE,OAAOlK,EAAOkhB,OAQCD,EAAA0C,oBAAhB,SAAuCjC,EAA0B2B,EAAmB/f,EAA6BggB,CAAAA,GAAMA,IACtH,MAAMpZ,EAAK,IAAIW,IAAgB7K,EAAO4hB,KAAKte,KAAOuH,IAG5C7K,EAAS,IAAI2hB,EAAW,CAAE4B,mBAFL,IAAM7B,EAAQkC,iBAAiBP,EAAWnZ,GAEjBuZ,qBADvB,IAAM/B,EAAQmC,oBAAoBR,EAAWnZ,KAG1E,OAAOlK,EAAOkhB,OAGCD,EAAA6C,YAAhB,SAAqCC,GACpC,MAAMrC,EAAU,IAAIC,EACpB,IAAIY,GAAa,EAajB,OAXAwB,EACElhB,UAAKa,EAAW,IAAM,MACtBb,KAAK,KACA0f,EAGJb,EAAQE,UAAKle,GAFbqI,WAAW,IAAM2V,EAAQE,UAAKle,GAAY,KAM7C6e,GAAa,EACNb,EAAQR,OAGAD,EAAA+C,UAAhB,SAA6B9C,GAC5B,OAAO,IAAI7e,QAAQC,GAAK2S,EAAKiM,EAALjM,CAAY3S,KArWtC,CAAiB2e,EAAA1Y,EAAA0Y,QAAA1Y,EAAA0Y,MAAK,KAmXtB,IAAIgD,GAA+B,EACnC1b,EAAA2b,8BAAA,SAA8ClU,GAC7C,MAAMmU,EAAWF,EAEjB,OADAA,EAA8BjU,EACvB,CACNtG,UACCua,EAA8BE,KAKjC,MAAMC,EAKL1a,YACU2a,EACAxjB,EAAe2N,KAAK8F,SAASgQ,SAAS,IAAIziB,MAAM,EAAG,IADnD8H,KAAA0a,gBAAAA,EACA1a,KAAA9I,KAAAA,EAJF8I,KAAA4a,eAAyB,EAOjC7a,UACKC,KAAK6a,SACR7a,KAAK6a,QAAQrZ,QAIfzB,MAAM+a,GAEL,IAAIC,EAAYT;CAKhB,GAJoC,iBAAzBta,KAAK0a,kBACfK,EAAY/a,KAAK0a,iBAGdK,GAAa,GAAKD,EAAgBC,EACrC,OAGI/a,KAAK6a,UACT7a,KAAK6a,QAAU,IAAI5a,KAEpB,MAAM6C,GAAQ,IAAI9D,OAAQ8D,MAAOqB,MAAM,MAAMjM,MAAM,GAAG2B,KAAK,MACrDwF,EAASW,KAAK6a,QAAQ3a,IAAI4C,IAAU,EAI1C,GAHA9C,KAAK6a,QAAQza,IAAI0C,EAAOzD,EAAQ,GAChCW,KAAK4a,gBAAkB,EAEnB5a,KAAK4a,gBAAkB,EAAG,CAM7B,IAAII,EAHJhb,KAAK4a,eAA6B,GAAZG,EAItB,IAAIE,EAAmB,EACvBjb,KAAK6a,QAAQtb,QAAQ,CAACF,EAAOyD,OACvBkY,GAAYC,EAAW5b,KAC3B2b,EAAWlY,EACXmY,EAAW5b,KAIbvI,QAAQkK,KAAK,IAAIhB,KAAK9I,kDAAkD4jB,gDAA4DG,OACpInkB,QAAQkK,KAAKga,GAGd,MAAO,KACN,MAAM3b,EAASW,KAAK6a,QAAS3a,IAAI4C,IAAU,EAC3C9C,KAAK6a,QAASza,IAAI0C,EAAOzD,EAAQ,KA0BpC,IAAA2Y,EAAA,MAAA,MAAaA,EAWZjY,YAAYoQ,GALJnQ,KAAAkb,WAAqB,EAM5Blb,KAAKmb,SAAWhL,EAChBnQ,KAAKob,YAAcd,EAA8B,EAC9C,IAAIG,EAAeza,KAAKmb,UAAYnb,KAAKmb,SAAShD,2BAClDpe,EAOJwd,YAwDC,OAvDKvX,KAAKqb,SACTrb,KAAKqb,OAAS,CAACtY,EAAyByU,EAAgBvC,KAClDjV,KAAKsb,aACTtb,KAAKsb,WAAa,IAAIC,EAAA9E,YAGvB,MAAM+E,EAAgBxb,KAAKsb,WAAWG,UAElCD,GAAiBxb,KAAKmb,UAAYnb,KAAKmb,SAASvB,oBACnD5Z,KAAKmb,SAASvB,mBAAmB5Z,MAGlC,MAAM0b,EAAS1b,KAAKsb,WAAWnkB,KAAMqgB,EAAsB,CAACzU,EAAUyU,GAAtBzU,GAWhD,IAAI4Y,EAKAtlB;CAwBJ,OAtCImlB,GAAiBxb,KAAKmb,UAAYnb,KAAKmb,SAASS,uBACnD5b,KAAKmb,SAASS,sBAAsB5b,MAGjCA,KAAKmb,UAAYnb,KAAKmb,SAASU,kBAClC7b,KAAKmb,SAASU,iBAAiB7b,KAAM+C,EAAUyU,GAK5CxX,KAAKob,cACRO,EAAgB3b,KAAKob,YAAYU,MAAM9b,KAAKsb,WAAWlc,OAIxD/I,EAAS,CACR2e,QAAS,KAKR,GAJI2G,GACHA,IAEDtlB,EAAO2e,QAAUgD,EAAQ+D,OACpB/b,KAAKkb,YACTQ,IACI1b,KAAKmb,UAAYnb,KAAKmb,SAASrB,sBAAsB,CAClC9Z,KAAKsb,aAAetb,KAAKsb,WAAWG,WAEzDzb,KAAKmb,SAASrB,qBAAqB9Z,SAMpCiV,aAAuB4D,EAAAvD,gBAC1BL,EAAY5U,IAAIhK,GACNqS,MAAMC,QAAQsM,IACxBA,EAAY9d,KAAKd,GAGXA,IAGF2J,KAAKqb,OAObtb,KAAKwX,GACJ,GAAIvX,KAAKsb,WAAY,CAKftb,KAAKgc,iBACThc,KAAKgc,eAAiB,IAAIT,EAAA9E,YAG3B,IAAK,IAAI1T,KAAY/C,KAAKsb,WACzBtb,KAAKgc,eAAe7kB,KAAK,CAAC4L,EAAUwU,IAGrC,KAAOvX,KAAKgc,eAAe5c,KAAO,GAAG,CACpC,MAAO2D,EAAUwU,GAASvX,KAAKgc,eAAeC,QAC9C,IACyB,mBAAblZ,EACVA,EAAS5D,UAAKpF,EAAWwd,GAEzBxU,EAAS,GAAG5D,KAAK4D,EAAS,GAAIwU,GAE9B,MAAOze,GACRqP,EAAA9E,kBAAkBvK,MAMtBiH,UACKC,KAAKsb,YACRtb,KAAKsb,WAAW9Z,QAEbxB,KAAKgc,gBACRhc,KAAKgc,eAAexa,QAEjBxB,KAAKob,aACRpb,KAAKob,YAAYpG;AAElBhV,KAAKkb,WAAY,GAEnB,OA5HyBlD,EAAA+D,MAAQ,aA4HjC/D,GA9HA,GAAapZ,EAAAoZ,QAAAA,EAgIbpZ,EAAAsd,iBAAA,cAAyClE,EAMxCjY,YAAYoQ,GACX7L,MAAM6L,GALCnQ,KAAAmc,UAAY,EACZnc,KAAAoc,YAAc,IAAIb,EAAA9E,WAKzBzW,KAAKqc,SAAWlM,GAAWA,EAAQyH,MAGpC7X,QACCC,KAAKmc,YAGNpc,SACC,GAAuB,IAAnBC,KAAKmc,WAAwC,KAAnBnc,KAAKmc,UAClC,GAAInc,KAAKqc,SAAU,CAGlB,MAAMrD,EAAShZ,KAAKoc,YAAYE,UAChCtc,KAAKoc,YAAY5a,QACjB8C,MAAM2T,KAAKjY,KAAKqc,SAASrD,SAKzB,MAAQhZ,KAAKmc,WAAuC,IAA1Bnc,KAAKoc,YAAYhd,MAC1CkF,MAAM2T,KAAKjY,KAAKoc,YAAYH,SAMhClc,KAAKwX,GACAvX,KAAKsb,aACe,IAAnBtb,KAAKmc,UACRnc,KAAKoc,YAAYjlB,KAAKogB,GAEtBjT,MAAM2T,KAAKV,MAUf3Y,EAAA2d,aAAA,cAAwDvE,EAIvDjY,gBAAgB1F,EAA4B0N,EAA0ByU,GACrE,GAAKxc,KAAKsb,WAAV,CAIKtb,KAAKyc,sBACTzc,KAAKyc,oBAAsB,IAAIlB,EAAA9E,YAGhC,IAAK,MAAM1T,KAAY/C,KAAKsb,WAC3Btb,KAAKyc,oBAAoBtlB,KAAK,CAAC4L,EAAU1I,IAG1C,KAAO2F,KAAKyc,oBAAoBrd,KAAO,IAAM2I,EAAMG,yBAAyB,CAE3E,MAAOnF,EAAU1I,GAAQ2F,KAAKyc,oBAAoBR,QAC5CS,EAA4B,GAE5BnF,EAAQ1Z,OAAA8e,OAAA9e,OAAA8e,OAAA,GACVtiB,GAAI,CACPuiB,UAAYnY,IACX,GAAI5G,OAAOgf,SAASH,GACnB,MAAM,IAAI1d,MAAM;CAEbwd,IACH/X,EAAI+X,EAAY/X,EAAuB,mBAAb1B,EAA0BA,EAAWA,EAAS,KAEzE2Z,EAAUvlB,KAAKsN,MAIjB,IACyB,mBAAb1B,EACVA,EAAS5D,UAAKpF,EAAWwd,GAEzBxU,EAAS,GAAG5D,KAAK4D,EAAS,GAAIwU,GAE9B,MAAOze,GACRqP,EAAA9E,kBAAkBvK,GAClB,SAKD+E,OAAO8X,OAAO+G,SACRhkB,QAAQgB,IAAIgjB,GAAWtf,MAAMtE,GAAKqP,EAAA9E,kBAAkBvK,QAK7D8F,EAAAke,iBAAA,MAMC/c,cAHQC,KAAA+c,cAAe,EACf/c,KAAAgZ,OAA+D,GAGtEhZ,KAAK+X,QAAU,IAAIC,EAAW,CAC7B4B,mBAAoB,IAAM5Z,KAAK4Z,qBAC/BE,qBAAsB,IAAM9Z,KAAK8Z,yBAInCvC,YACC,OAAOvX,KAAK+X,QAAQR,MAGrBxX,IAAIwX,GACH,MAAMze,EAAI,CAAEye,MAAOA,EAAOxU,SAAU,MACpC/C,KAAKgZ,OAAO7hB,KAAK2B,GAEbkH,KAAK+c,cACR/c,KAAKgd,KAAKlkB,GAYX,OAAO+f,EAAAxD,aAAac,EAAA7K,KATJ,KACXtL,KAAK+c,cACR/c,KAAKid,OAAOnkB,GAGb,MAAMokB,EAAMld,KAAKgZ,OAAOrX,QAAQ7I,GAChCkH,KAAKgZ,OAAOhhB,OAAOklB,EAAK,MAMlBnd,qBACPC,KAAK+c,cAAe,EACpB/c,KAAKgZ,OAAOzZ,QAAQzG,GAAKkH,KAAKgd,KAAKlkB,IAG5BiH,uBACPC,KAAK+c,cAAe,EACpB/c,KAAKgZ,OAAOzZ,QAAQzG,GAAKkH,KAAKid,OAAOnkB,IAG9BiH,KAAKjH,GACZA,EAAEiK,SAAWjK,EAAEye,MAAMvN,GAAKhK,KAAK+X,QAAQE,KAAKjO,IAGrCjK,OAAOjH,GACVA,EAAEiK,UACLjK,EAAEiK,SAASiS,UAEZlc,EAAEiK,SAAW,KAGdhD,UACCC,KAAK+X,QAAQ/C,YAwBfpW,EAAAue,cAAA;AAAApd,cAESC,KAAAod,QAAwB,GAEhCrd,UAAawX,GACZ,MAAO,CAACxU,EAAUyU,EAAWvC,IACrBsC,EAAMjhB,IACZ,MAAM8iB,EAASpZ,KAAKod,QAAQpd,KAAKod,QAAQ5mB,OAAS,GAE9C4iB,EACHA,EAAOjiB,KAAK,IAAM4L,EAAS5D,KAAKqY,EAAUlhB,IAE1CyM,EAAS5D,KAAKqY,EAAUlhB,SAEvByD,EAAWkb,GAIhBlV,aAAuBQ,GACtB,MAAM6Y,EAAyB,GAC/BpZ,KAAKod,QAAQjmB,KAAKiiB,GAClB,MAAMpP,EAAIzJ,IAGV,OAFAP,KAAKod,QAAQ5W,MACb4S,EAAO7Z,QAAQga,GAASA,KACjBvP,IAUTpL,EAAAye,MAAA,MAAAtd,cAESC,KAAAsd,WAAY,EACZtd,KAAAud,WAAuBjG,EAAM1C,KAC7B5U,KAAAwd,mBAAkC3E,EAAAlE,WAAWC,KAEpC5U,KAAA+X,QAAU,IAAIC,EAAW,CACzC4D,sBAAuB,KACtB5b,KAAKsd,WAAY,EACjBtd,KAAKwd,mBAAqBxd,KAAKud,WAAWvd,KAAK+X,QAAQE,KAAMjY,KAAK+X,UAEnE+B,qBAAsB,KACrB9Z,KAAKsd,WAAY,EACjBtd,KAAKwd,mBAAmBxI,aAIjBhV,KAAAuX,MAAkBvX,KAAK+X,QAAQR,MAExCkG,UAAUlG,GACTvX,KAAKud,WAAahG,EAEdvX,KAAKsd,YACRtd,KAAKwd,mBAAmBxI,UACxBhV,KAAKwd,mBAAqBjG,EAAMvX,KAAK+X,QAAQE,KAAMjY,KAAK+X,UAI1DhY,UACCC,KAAKwd,mBAAmBxI,UACxBhV,KAAK+X,QAAQ/C;CCn0Bf,MAAM0I,EAA4B7f,OAAO8X,QAAO,SAAUnW,EAAUme,GACnE,MAAMtF,EAASjW,WAAW5C,EAASxI,KAAK2mB,GAAU,GAClD,MAAO,CAAE5d,UAAYoC,aAAakW,QAGnC,IAAiBuF,GAAjB,SAAiBA,GAEAA,EAAAC,oBAAhB,SAAoC1I,GACnC,OAAIA,IAAUyI,EAAkBhJ,MAAQO,IAAUyI,EAAkBE,YAGhE3I,aAAiB4I,MAGhB5I,GAA0B,iBAAVA,KAGkD,kBAAxDA,EAA4BjN,yBACyB,mBAAxDiN,EAA4B6I,2BAI5BJ,EAAAhJ,KAA0B/W,OAAO8X,OAAO,CACpDzN,yBAAyB,EACzB8V,wBAAyBC,EAAA3G,MAAM1C,OAGnBgJ,EAAAE,UAA+BjgB,OAAO8X,OAAO,CACzDzN,yBAAyB,EACzB8V,wBAAyBN,IAxB3B,CAAiBE,EAAAhf,EAAAgf,oBAAAhf,EAAAgf,kBAAiB,KA4BlC,MAAMG,EAANhe,cAESC,KAAAke,cAAwB,EACxBle,KAAAme,SAAgC,KAEjCpe,SACDC,KAAKke,eACTle,KAAKke,cAAe,EAChBle,KAAKme,WACRne,KAAKme,SAASlG,UAAKle,GACnBiG,KAAKgV,YAKR9M,8BACC,OAAOlI,KAAKke,aAGbF,8BACC,OAAIhe,KAAKke,aACDR,GAEH1d,KAAKme,WACTne,KAAKme,SAAW,IAAIF,EAAAjG,SAEdhY,KAAKme,SAAS5G,OAGfxX,UACFC,KAAKme,WACRne,KAAKme,SAASnJ,UACdhV,KAAKme,SAAW,OAKnBvf,EAAAwf,wBAAA,MAKCre,YAAY2N;AAHJ1N,KAAAqe,YAA6BtkB,EAC7BiG,KAAAse,qBAAgCvkB,EAGvCiG,KAAKse,gBAAkB5Q,GAAUA,EAAOsQ,wBAAwBhe,KAAKue,OAAQve,MAG9E+H,YAMC,OALK/H,KAAKqe,SAGTre,KAAKqe,OAAS,IAAIN,GAEZ/d,KAAKqe,OAGbte,SACMC,KAAKqe,OAMCre,KAAKqe,kBAAkBN,GAEjC/d,KAAKqe,OAAOE,SAJZve,KAAKqe,OAAST,EAAkBE,UAQlC/d,QAAQwe,GAAkB,GACrBA,GACHve,KAAKue,SAEFve,KAAKse,iBACRte,KAAKse,gBAAgBtJ,UAEjBhV,KAAKqe,OAICre,KAAKqe,kBAAkBN,GAEjC/d,KAAKqe,OAAOrJ,UAJZhV,KAAKqe,OAAST,EAAkBhJ,8EC7HnC,SAAgB4J,EAAc/V,GAC7B,OAAOA,GAA2C,mBAAdA,EAAKvP,KAO1C,SAAgBulB,EAA2Bjf,GAC1C,MAAMkf,EAAS,IAAIC,EAAAP,wBAEbQ,EAAWpf,EAASkf,EAAO3W,OAC3BqS,EAAU,IAAI1hB,QAAW,CAACyB,EAASC,KACxCskB,EAAO3W,MAAMiW,wBAAwB,KACpC5jB,EAAO4Y,EAAOpP,cAEflL,QAAQyB,QAAQykB,GAAU1lB,KAAK4F,IAC9B4f,EAAO1J,UACP7a,EAAQ2E,IACN9F,IACF0lB,EAAO1J,UACP5a,EAAOpB,OAIT,OAA6B,IAAI,MAChC+G,SACC2e,EAAOH,SAERxe,KAAqC5F,EAA2EC,GAC/G,OAAOggB,EAAQlhB,KAAKiB,EAASC,GAE9B2F,MAAuB3F,GACtB,OAAO4F,KAAK9G,UAAKa,EAAWK,GAE7B2F,QAAQ8e,GACP,OAAOzE,EAAQ0E,QAAQD;qXApC1BjgB,EAAA4f,WAAAA,EAQA5f,EAAA6f,wBAAAA,EAmCA7f,EAAAmgB,iBAAA,SAAoC3E,EAAqBrS,EAA0BiX,GAClF,OAAOtmB,QAAQumB,KAAK,CAAC7E,EAAS,IAAI1hB,QAAWyB,GAAW4N,EAAMiW,wBAAwB,IAAM7jB,EAAQ6kB,QAGrGpgB,EAAAsgB,YAAA,SAA+B9E,EAAqB+E,EAAiBC,GACpE,IAAIC,OAA2CtlB,EAE/C,MAAMulB,EAAQld,WAAW,KACxBid,MAAAA,GAAAA,IACAD,MAAAA,GAAAA,KACED,GAEH,OAAOzmB,QAAQumB,KAAK,CACnB7E,EAAQ0E,QAAQ,IAAM3c,aAAamd,IACnC,IAAI5mB,QAAWyB,GAAWklB,EAAiBllB,MAI7CyE,EAAA2gB,UAAA,SAA6B/f,GAC5B,OAAO,IAAI9G,QAAW,CAACyB,EAASC,KAC/B,MAAM+Z,EAAO3U,IACTgf,EAAcrK,GACjBA,EAAKjb,KAAKiB,EAASC,GAEnBD,EAAQga,MAmCX,MAAaqL,EAMZzf,cACCC,KAAKyf,cAAgB,KACrBzf,KAAK0f,cAAgB,KACrB1f,KAAK2f,qBAAuB,KAG7B5f,MAAS6f,GACR,GAAI5f,KAAKyf,cAAe,CAGvB,GAFAzf,KAAK2f,qBAAuBC,GAEvB5f,KAAK0f,cAAe,CACxB,MAAMG,EAAa,KAClB7f,KAAK0f,cAAgB;CAErB,MAAMrpB,EAAS2J,KAAK8f,MAAM9f,KAAK2f,sBAG/B,OAFA3f,KAAK2f,qBAAuB,KAErBtpB,GAGR2J,KAAK0f,cAAgB,IAAIhnB,QAAQC,IAChCqH,KAAKyf,cAAevmB,KAAK2mB,EAAYA,GAAY3mB,KAAKP,KAIxD,OAAO,IAAID,QAAQ,CAACC,EAAGG,KACtBkH,KAAK0f,cAAexmB,KAAKP,EAAGG,KAM9B,OAFAkH,KAAKyf,cAAgBG,IAEd,IAAIlnB,QAAQ,CAACC,EAAGG,KACtBkH,KAAKyf,cAAevmB,KAAM7C,IACzB2J,KAAKyf,cAAgB,KACrB9mB,EAAEtC,IACC2C,IACHgH,KAAKyf,cAAgB,KACrB3mB,EAAEE,QA5CN4F,EAAA4gB,UAAAA,EAkDA5gB,EAAAmhB,UAAA,MAAAhgB,cAESC,KAAAmN,QAAwBzU,QAAQyB,QAAQ,MAEhD4F,MAASigB,GACR,OAAOhgB,KAAKmN,QAAUnN,KAAKmN,QAAQjU,KAAK,IAAM8mB,OA2BhD,MAAaC,EAQZlgB,YAAmBmgB,GAAAlgB,KAAAkgB,aAAAA,EAClBlgB,KAAKmf,QAAU,KACfnf,KAAKmgB,kBAAoB,KACzBngB,KAAKogB,UAAY,KACjBpgB,KAAKqgB,SAAW,KAChBrgB,KAAKsgB,KAAO,KAGbvgB,QAAQugB,EAA6Bxe,EAAgB9B,KAAKkgB,cA2BzD,OA1BAlgB,KAAKsgB,KAAOA,EACZtgB,KAAKugB,gBAEAvgB,KAAKmgB,oBACTngB,KAAKmgB,kBAAoB,IAAIznB,QAAQ,CAACC,EAAGG,KACxCkH,KAAKogB,UAAYznB,EACjBqH,KAAKqgB,SAAWvnB,IACdI,KAAK,KAGP,GAFA8G,KAAKmgB,kBAAoB,KACzBngB,KAAKogB,UAAY,KACbpgB,KAAKsgB,KAAM,CACd,MAAMA,EAAOtgB,KAAKsgB,KAElB,OADAtgB,KAAKsgB,KAAO,KACLA,QAMVtgB,KAAKmf,QAAU/c,WAAW,KACzBpC,KAAKmf,QAAU;AACXnf,KAAKogB,WACRpgB,KAAKogB,UAAU,OAEdte,GAEI9B,KAAKmgB,kBAGbpgB,cACC,OAAwB,OAAjBC,KAAKmf,QAGbpf,SACCC,KAAKugB,gBAEDvgB,KAAKmgB,oBACJngB,KAAKqgB,UACRrgB,KAAKqgB,SAASrN,EAAOpP,YAEtB5D,KAAKmgB,kBAAoB,MAInBpgB,gBACc,OAAjBC,KAAKmf,UACRhd,aAAanC,KAAKmf,SAClBnf,KAAKmf,QAAU,MAIjBpf,UACCC,KAAKugB,iBArEP3hB,EAAAqhB,QAAAA,EAkFArhB,EAAA4hB,iBAAA,MAKCzgB,YAAYmgB,GACXlgB,KAAKygB,QAAU,IAAIR,EAAQC,GAC3BlgB,KAAK0gB,UAAY,IAAIlB,EAGtBzf,QAAQ6f,EAAmC9d,GAC1C,OAAO9B,KAAKygB,QAAQE,QAAQ,IAAM3gB,KAAK0gB,UAAUZ,MAAMF,GAAiB9d,GAGzE/B,cACC,OAAOC,KAAKygB,QAAQG,cAGrB7gB,SACCC,KAAKygB,QAAQlC,SAGdxe,UACCC,KAAKygB,QAAQzL,YAoCf,SAAgBmK,EAAQ0B,EAAgB9Y,GACvC,OAAKA,EAIE,IAAIrP,QAAQ,CAACyB,EAASC,KAC5B,MAAMie,EAASjW,WAAWjI,EAAS0mB,GACnC9Y,EAAMiW,wBAAwB,KAC7B7b,aAAakW,GACbje,EAAO4Y,EAAOpP,gBAPR6a,EAAwB1W,GAASoX,EAAQ0B,EAAQ9Y,IA/B1DnJ,EAAAkiB,QAAA,MAMC/gB,cACCC,KAAK+gB,SAAU,EACf/gB,KAAKghB,SAAW,IAAItoB,QAAiB,CAACC,EAAGG,KACxCkH,KAAKihB,iBAAmBtoB,IAI1BoH,SACC,OAAOC,KAAK+gB,QAGbhhB,OACCC,KAAK+gB,SAAU,EACf/gB,KAAKihB,kBAAiB,GAGvBlhB,OACC,OAAOC,KAAKghB,WAMdpiB,EAAAugB,QAAAA;AAcAvgB,EAAAsiB,kBAAA,SAAkCC,EAAqBhC,EAAU,GAChE,MAAMG,EAAQld,WAAW+e,EAAShC,GAClC,OAAOtG,EAAAxD,aAAa,IAAMlT,aAAamd,KAGxC1gB,EAAAwiB,aAAA,SAAgChH,GAC/B,OAAOA,EAAQlhB,UAAKa,EAAWof,QAAKpf,IAQrC6E,EAAAyiB,SAAA,SAA4BC,GAC3B,MAAMC,EAAe,GACrB,IAAI7lB,EAAQ,EACZ,MAAMnF,EAAM+qB,EAAiB9qB,OAmB7B,OAAOkC,QAAQyB,QAAQ,MAAMjB,MAb7B,SAASsoB,EAAYnrB,GAChBA,MAAAA,GACHkrB,EAAQpqB,KAAKd,GAGd,MAAMgQ,EARC3K,EAAQnF,EAAM+qB,EAAiB5lB,OAAa,KASnD,OAAI2K,EACIA,EAAEnN,KAAKsoB,GAGR9oB,QAAQyB,QAAQonB,OAMzB3iB,EAAAU,MAAA,SAAyBgiB,EAAuCG,EAAgC3X,CAAAA,KAAOA,GAAGkV,EAAyB,MAClI,IAAItjB,EAAQ,EACZ,MAAMnF,EAAM+qB,EAAiB9qB,OAEvBkrB,EAAgC,KACrC,GAAIhmB,GAASnF,EACZ,OAAOmC,QAAQyB,QAAQ6kB,GAGxB,MAAM7mB,EAAUmpB,EAAiB5lB,KAGjC,OAFgBhD,QAAQyB,QAAQhC,KAEjBe,KAAK7C,GACforB,EAAWprB,GACPqC,QAAQyB,QAAQ9D,GAGjBqrB,MAIT,OAAOA,KAaR,MAAaC,EAQZ5hB,YAAY6hB,GANJ5hB,KAAA4W,MAAQ,EAOf5W,KAAK4hB,uBAAyBA,EAC9B5hB,KAAK6hB,oBAAsB,GAC3B7hB,KAAK8hB,gBAAkB,EACvB9hB,KAAK+hB,YAAc,IAAI9D,EAAAjG,QAGxBgK,iBACC,OAAOhiB,KAAK+hB,YAAYxK,MAGzBnY,WACC,OAAOY,KAAK4W,MAIb7W,MAAM5H,GAGL,OAFA6H,KAAK4W,QAEE,IAAIle,QAAW,CAACC,EAAGG,KACzBkH,KAAK6hB,oBAAoB1qB,KAAK,CAAEgB,QAAAA,EAASQ,EAAAA,EAAGG,EAAAA,IAC5CkH,KAAKiiB,YAICliB,UACP,KAAOC,KAAK6hB,oBAAoBrrB,QAAUwJ,KAAK8hB,gBAAkB9hB,KAAK4hB,wBAAwB;AAC7F,MAAMM,EAAeliB,KAAK6hB,oBAAoB5F,QAC9Cjc,KAAK8hB,kBAEL,MAAM1H,EAAU8H,EAAa/pB,UAC7BiiB,EAAQlhB,KAAKgpB,EAAavpB,EAAGupB,EAAappB,GAC1CshB,EAAQlhB,KAAK,IAAM8G,KAAKmiB,WAAY,IAAMniB,KAAKmiB,aAIzCpiB,WACPC,KAAK4W,QACL5W,KAAK8hB,kBAED9hB,KAAK6hB,oBAAoBrrB,OAAS,EACrCwJ,KAAKiiB,UAELjiB,KAAK+hB,YAAY9J,OAInBlY,UACCC,KAAK+hB,YAAY/M,WAxDnBpW,EAAA+iB,QAAAA,EA+DA,MAAaS,UAAiBT,EAE7B5hB,cACCuE,MAAM,IAHR1F,EAAAwjB,MAAAA,EAWAxjB,EAAAyjB,cAAA,MAAAtiB,cAEkBC,KAAAsiB,OAAS,IAAIriB,IAE9BF,SAASwiB,GACR,MAAM9jB,EAAM8jB,EAAS5H,WACrB,IAAK3a,KAAKsiB,OAAOpZ,IAAIzK,GAAM,CAC1B,MAAMqhB,EAAQ,IAAIsC,EAClBtC,EAAMkC,WAAW,KAChBlC,EAAM9K,UACNhV,KAAKsiB,OAAOhiB,OAAO7B,KAGpBuB,KAAKsiB,OAAOliB,IAAI3B,EAAKqhB,GAGtB,OAAO9f,KAAKsiB,OAAOpiB,IAAIzB,GAGxBsB,UACCC,KAAKsiB,OAAO/iB,QAAQugB,GAASA,EAAM9K,WACnChV,KAAKsiB,OAAO9gB,UAId5C,EAAA4jB,aAAA,MAKCziB,YAAY0iB,EAAqBtD,GAChCnf,KAAKqe,QAAU,EAEO,mBAAXoE,GAA4C,iBAAZtD,GAC1Cnf,KAAK0iB,YAAYD,EAAQtD,GAI3Bpf,UACCC,KAAKue,SAGNxe,UACsB,IAAjBC,KAAKqe,SACRlc,aAAanC,KAAKqe,QAClBre,KAAKqe,QAAU,GAIjBte,aAAa0iB,EAAoBtD,GAChCnf,KAAKue,SACLve,KAAKqe,OAASjc,WAAW,KACxBpC,KAAKqe,QAAU,EACfoE,KACEtD,GAGJpf,YAAY0iB,EAAoBtD;CACV,IAAjBnf,KAAKqe,SAITre,KAAKqe,OAASjc,WAAW,KACxBpC,KAAKqe,QAAU,EACfoE,KACEtD,MAILvgB,EAAA+jB,cAAA,MAIC5iB,cACCC,KAAKqe,QAAU,EAGhBte,UACCC,KAAKue,SAGNxe,UACsB,IAAjBC,KAAKqe,SACRuE,cAAc5iB,KAAKqe,QACnBre,KAAKqe,QAAU,GAIjBte,aAAa0iB,EAAoBI,GAChC7iB,KAAKue,SACLve,KAAKqe,OAASyE,YAAY,KACzBL,KACEI,KAIL,MAAaE,EAQZhjB,YAAY0iB,EAAkCtD,GAC7Cnf,KAAKgjB,cAAgB,EACrBhjB,KAAKyiB,OAASA,EACdziB,KAAKmf,QAAUA,EACfnf,KAAKijB,eAAiBjjB,KAAKof,UAAUpoB,KAAKgJ,MAM3CD,UACCC,KAAKue,SACLve,KAAKyiB,OAAS,KAMf1iB,SACKC,KAAKkjB,gBACR/gB,aAAanC,KAAKgjB,cAClBhjB,KAAKgjB,cAAgB,GAOvBjjB,SAAS+B,EAAQ9B,KAAKmf,SACrBnf,KAAKue,SACLve,KAAKgjB,aAAe5gB,WAAWpC,KAAKijB,eAAgBnhB,GAMrD/B,cACC,OAA8B,IAAvBC,KAAKgjB,aAGLjjB,YACPC,KAAKgjB,cAAgB,EACjBhjB,KAAKyiB,QACRziB,KAAKmjB,QAIGpjB,QACLC,KAAKyiB,QACRziB,KAAKyiB,UAzDR7jB,EAAAmkB,iBAAAA,EA8DAnkB,EAAAwkB,cAAA,cAAsCL,EAGrChjB,YAAY0iB,EAA8BtD,GACzC7a,MAAMme,EAAQtD,GAHPnf,KAAAqjB,MAAa,GAMrBtjB,KAAKujB,GACJtjB,KAAKqjB,MAAMlsB,KAAKmsB,GAEXtjB,KAAKkjB,eACTljB,KAAKujB,WAIGxjB,QACT,MAAMsjB,EAAQrjB,KAAKqjB,MACnBrjB,KAAKqjB,MAAQ,GAETrjB,KAAKyiB,QACRziB,KAAKyiB,OAAOY,GAIdtjB,UACCC,KAAKqjB,MAAQ;AAEb/e,MAAM0Q,YAkBR,WACC,GAAmC,mBAAxBwO,qBAAoE,mBAAvBC,mBAAmC,CAC1F,MAAMC,EAA0B7lB,OAAO8X,OAAO,CAC7CgO,YAAY,EACZC,cAAa,IAAY,KAE1BhlB,EAAAilB,YAAepB,IACd,MAAMpK,EAASjW,WAAW,IAAMqgB,EAAOiB,IACvC,IAAI1f,GAAW,EACf,MAAO,CACNjE,UACKiE,IAGJA,GAAW,EACX7B,aAAakW,YAKhBzZ,EAAAilB,YAAc,CAACpB,EAAQtD,KACtB,MAAM9G,EAAiBmL,oBAAoBf,EAA2B,iBAAZtD,EAAuB,CAAEA,QAAAA,QAAYplB,GAC/F,IAAIiK,GAAW,EACf,MAAO,CACNjE,UACKiE,IAGJA,GAAW,EACXyf,mBAAmBpL,OA7BxB,GAwCAzZ,EAAAklB,UAAA,MASC/jB,YAAYgkB,GAJJ/jB,KAAAgkB,SAAmB,EAK1BhkB,KAAKikB,UAAY,KAChB,IACCjkB,KAAK6V,OAASkO,IACb,MAAO/qB,GACRgH,KAAKkkB,OAASlrB,UAEdgH,KAAKgkB,SAAU,IAGjBhkB,KAAKmkB,QAAUvlB,EAAAilB,YAAY,IAAM7jB,KAAKikB,aAGvClkB,UACCC,KAAKmkB,QAAQnP,UAGdjV,WAKC,GAJKC,KAAKgkB,UACThkB,KAAKmkB,QAAQnP,UACbhV,KAAKikB,aAEFjkB,KAAKkkB,OACR,MAAMlkB,KAAKkkB,OAEZ,OAAOlkB,KAAK6V,SAMdjX,EAAAwlB,MAAOC,eAAwB/D,EAAyBxe,EAAewiB,GACtE,IAAIC,EAEJ,IAAK,IAAIjuB,EAAI,EAAGA,EAAIguB,EAAShuB,IAC5B,IACC,aAAagqB,IACZ,MAAOzkB,GACR0oB,EAAY1oB,QAENsjB,EAAQrd,GAIhB,MAAMyiB,GAsBP3lB,EAAA4lB,mBAAA,MAICzkB,WAAW0kB,GACV,QAAKzkB,KAAK0kB,WAIY,iBAAXD,EACHzkB,KAAK0kB,SAASD,SAAWA,IAGxBzkB,KAAK0kB,UAGfC;AACC,OAAO3kB,KAAK0kB,SAAW1kB,KAAK0kB,SAAStK,aAAUrgB,EAGhDgG,sBACc,QAAb8U,EAAA7U,KAAK0kB,gBAAQ,IAAA7P,GAAAA,EAAE0J,SAGhBxe,WAAW0kB,EAAgBrK,EAAwBwK,GAKlD,OAJA5kB,KAAK0kB,SAAW,CAAED,OAAQA,EAAQlG,OAAQ,IAAMqG,MAAAA,OAAQ,EAARA,IAAcxK,QAAAA,GAE9DA,EAAQlhB,KAAK,IAAM8G,KAAK6kB,YAAYJ,GAAS,IAAMzkB,KAAK6kB,YAAYJ,IAE7DrK,EAGAra,YAAY0kB,GACfzkB,KAAK0kB,UAAYD,IAAWzkB,KAAK0kB,SAASD,SAG7CzkB,KAAK0kB,cAAW3qB,EAGhBiG,KAAK8kB,eAIC/kB,cACP,GAAIC,KAAK+kB,MAAO,CACf,MAAM9Y,EAAOjM,KAAK+kB,MAClB/kB,KAAK+kB,WAAQhrB,EAGbkS,EAAK+Y,MAAM9rB,KAAK+S,EAAKoT,eAAgBpT,EAAKgZ,gBAI5CllB,QAAQilB,GAKP,GAAKhlB,KAAK+kB,MAkBT/kB,KAAK+kB,MAAMC,IAAMA,MAlBD,CAChB,IAAI3F,EACA4F,EACJ,MAAM7K,EAAU,IAAI1hB,QAAc,CAACyB,EAASC,KAC3CilB,EAAiBllB,EACjB8qB,EAAgB7qB,IAGjB4F,KAAK+kB,MAAQ,CACZC,IAAAA,EACA5K,QAAAA,EACAiF,eAAgBA,EAChB4F,cAAeA,GASjB,OAAOjlB,KAAK+kB,MAAM3K,adnyBpB1jB,EAFA,iBAAAwuB,OAEAA,OACA,iBAAAnkB,KAEAA,KAEA,GAGA,mBAAAokB,OAEAA,OAAA,6BAAA,IAAA,WAAA,OAAA1uB,EAAAC,MACA,iBAAAyH,QAAA,iBAAAA,OAAAS,UAEAT,OAAAS,QAAAnI,EAAAC;iQejGA,IAAI0uB,GAAa,EACbC,GAAe,EACfC,GAAW,EACXC,GAAY,EACZC,GAAS,EACTC,GAAS,EACTC,OAA8B3rB,EAC9B4rB,EATqB,KAUrBhpB,OAA8C5C,EAC9C6rB,OAAiC7rB,EAiCrC,MAAM8rB,EAAyC,oBAAZ9qB,cAAuD,IAArBA,QAAQ+qB,eAAiE,IAA9B/qB,QAAQ+qB,SAASC,UAA6C,aAAjBhrB,QAAQyX,KAGrK,GAAyB,iBAAdhF,WAA2BqY,GAoB/B,GAAuB,iBAAZ9qB,QAAsB,CACvCqqB,EAAmC,UAArBrqB,QAAQirB,SACtBX,EAAqC,WAArBtqB,QAAQirB,SACxBV,EAAiC,UAArBvqB,QAAQirB,SACpBN,EAvEwB,KAwExBC,EAxEwB,KAyExB,MAAMM,EAAelrB,QAAQC,IAAuB,kBACpD,GAAIirB,EACH,IACC,MAAMC,EAAuB7qB,KAAKC,MAAM2qB,GAClCE,EAAWD,EAAUrrB,mBAAmB,KAC9C6qB,EAAUQ,EAAUtrB,OAEpB+qB,EAAYQ,GAhFU,KAiFtBxpB,EAA0BupB,EAAUvpB,wBACnC,MAAO7D,IAGVysB,GAAY,OAtC6C,CACzDK,EAAapY,UAAU4Y,UACvBhB,EAAaQ,EAAWjkB,QAAQ,YAAc,EAC9C0jB,EAAeO,EAAWjkB,QAAQ,cAAgB,EAClD8jB,EAASG,EAAWjkB,QAAQ,cAAgB,KAAO6L,UAAU6Y,gBAAkB7Y,UAAU6Y,eAAiB,EAC1Gf,EAAWM,EAAWjkB,QAAQ,UAAY,EAC1C6jB,GAAS,EAETG,EADAD,EAAUlY,UAAU8Y;CAGpB,MAAMC,EAAyB,oBAAbC,UAA4BA,SAASC,eAAe,mCAChER,EAAeM,GAAMA,EAAGG,aAAa,iBAC3C,GAAIT,EACH,IACC,MAAMC,EAAuB7qB,KAAKC,MAAM2qB,GACxCP,EAAUQ,EAAUtrB,OACpB+B,EAA0BupB,EAAUvpB,wBACpCgpB,EAAYO,EAAUrrB,mBAAmB,MAhEnB,KAiErB,MAAOgB,MAuBX,SAAkB8qB,GACjBA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UAJD,CAAkB/nB,EAAA+nB,WAAA/nB,EAAA+nB,SAAQ,KAM1B/nB,EAAAgoB,iBAAA,SAAiCZ,GAChC,OAAQA,GACP,KAAA,EAAmB,MAAO,MAC1B,KAAA,EAAmB,MAAO,MAC1B,KAAA,EAAqB,MAAO,QAC5B,KAAA,EAAuB,MAAO,YAIhC,IAAIa,EAAS,EACTxB,EACHwB,EAAS,EACCzB,EACVyB,EAAS,EACCvB,IACVuB,EAAS,GAGGjoB,EAAAkoB,UAAY1B,EACZxmB,EAAAmoB,YAAc1B,EACdzmB,EAAAooB,QAAU1B,EACV1mB,EAAAqoB,SAAW1B,EACX3mB,EAAAsoB,MAAQ1B,EACR5mB,EAAAuoB,MAAQ1B,EACR7mB,EAAAonB,SAAWa,EACXjoB,EAAAwnB,UAAYR,EAEzBhnB,EAAAwoB,WAAA,WACC,OAAO7B,IAAcH,GAAoC,IAArBrqB,QAAQssB,UAQhCzoB,EAAA0nB,SAAWX,EAExB,SAAiB2B,GAEAA,EAAAxoB,MAAhB,WACC,OAAOF,EAAA0nB,UAGQgB,EAAAC,iBAAhB,WACC,OAAwB,IAApB3oB,EAAA0nB,SAAS9vB,OACQ,OAAboI,EAAA0nB,SACG1nB,EAAA0nB,SAAS9vB,QAAU,IACN,MAAhBoI,EAAA0nB,SAAS,IAA8B,MAAhB1nB,EAAA0nB,SAAS,IAA8B,MAAhB1nB,EAAA0nB,SAAS,KAMhDgB,EAAAE,UAAhB,WACC,MAAoB,OAAb5oB,EAAA0nB,UAjBT,CAAiB1nB,EAAA0oB,WAAA1oB,EAAA0oB,SAAQ,KA0BZ1oB,EAAAhE,OAAS8qB;AAKT9mB,EAAArC,uBAAyBI,EAEtC,MAAM8qB,EAA4B,iBAAT1mB,KAAoBA,KAAyB,iBAAXmkB,OAAsBA,OAAS,GAC7EtmB,EAAA8oB,QAAeD,EAMf7oB,EAAA+oB,aAA8B,WAC1C,GAAI/oB,EAAA8oB,QAAQC,aACX,OAAO/oB,EAAA8oB,QAAQC,aAAa3wB,KAAK4H,EAAA8oB,SAElC,GAAmC,mBAAxB9oB,EAAA8oB,QAAQE,cAA+BhpB,EAAA8oB,QAAQG,cAAe,CAKxE,IAAIlD,EAA2B,GAC/B/lB,EAAA8oB,QAAQzN,iBAAiB,UAAYnhB,IACpC,GAAIA,EAAEuB,MAAQvB,EAAEuB,KAAKytB,qBACpB,IAAK,IAAIxxB,EAAI,EAAGC,EAAMouB,EAAQnuB,OAAQF,EAAIC,EAAKD,IAAK,CACnD,MAAMyxB,EAAYpD,EAAQruB,GAC1B,GAAIyxB,EAAUpO,KAAO7gB,EAAEuB,KAAKytB,qBAG3B,OAFAnD,EAAQ3sB,OAAO1B,EAAG,QAClByxB,EAAUvoB,cAMd,IAAIwoB,EAAS,EACb,OAAQxoB,IACP,MAAMyoB,IAASD,EACfrD,EAAQxtB,KAAK,CACZwiB,GAAIsO,EACJzoB,SAAUA,IAEXZ,EAAA8oB,QAAQE,YAAY,CAAEE,qBAAsBG,GAAQ,MAGtD,GAAuB,oBAAZltB,SAAuD,mBAArBA,QAAQse,SACpD,OAAOte,QAAQse,SAASriB,KAAK+D,SAE9B,MAAMimB,EAAWtoB,QAAQyB,UACzB,OAAQqF,GAAuCwhB,EAAS9nB,KAAKsG,GApCnB,GAuC3C,SAAkB0oB,GACjBA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,MAAA,GAAA,QAHD,CAAkBtpB,EAAAspB,kBAAAtpB,EAAAspB,gBAAe,KAKpBtpB,EAAAupB,GAAM9C,EAAc,EAA8BD,EAAY,EAA0B,EAErG,IAAIgD,GAAkB,EAClBC,GAA0B,EAC9BzpB,EAAA0pB,eAAA,WACC,IAAKD,EAAyB,CAC7BA,GAA0B,EAC1B,MAAME,EAAO,IAAIC,WAAW,GAC5BD,EAAK,GAAK,EACVA,EAAK,GAAK;CACV,MAAME,EAAO,IAAIC,YAAYH,EAAKnP,QAClCgP,EAA+B,MAAZK,EAAK,GAEzB,OAAOL,sJC1NR,MAAMO,EAA4C,oBAAZ5tB,QAA2B,CAChE6tB,IAAG,IAAoB,IACvB5tB,IAAK6C,OAAOK,OAAO,MACnB8nB,eAAyB,OAAO6C,EAAA/B,UAAY,QAAU+B,EAAA9B,YAAc,SAAW,SAC/E1N,SAAS7Z,GAAmDqpB,EAAAlB,aAAanoB,IACtEzE,QAES6D,EAAAgqB,IAAMD,EAAYC,IAClBhqB,EAAA5D,IAAM2tB,EAAY3tB,IAClB4D,EAAAonB,SAAW2C,EAAY3C,SACvBpnB,EAAAya,SAAWsP,EAAYtP,oRCOpC,MAAMyP,EAAmB,GACnBC,EAAmB,GACnBC,EAAmB,GACnBC,EAAmB,IACnBC,EAAW,GACXC,EAAqB,GACrBC,EAAsB,GAI5B,MAAMC,UAA4BrqB,MAEjCe,YAAY7I,EAAcoyB,EAAkBC,GAE3C,IAAIC,EACoB,iBAAbF,GAAsD,IAA7BA,EAAS3nB,QAAQ,SACpD6nB,EAAa,cACbF,EAAWA,EAAS5qB,QAAQ,QAAS,KAErC8qB,EAAa,UAGd,MAAMhX,GAA8B,IAAvBtb,EAAKyK,QAAQ,KAAc,WAAa,WACrD,IAAI8nB,EAAM,QAAQvyB,MAASsb,KAAQgX,aAAsBF;CAGzDhlB,MADAmlB,GAAO,0BAA0BF,KAGjCvpB,KAAK/F,KAAO,wBAId,SAASyvB,EAAe5qB,EAAe5H,GACtC,GAAqB,iBAAV4H,EACV,MAAM,IAAIuqB,EAAoBnyB,EAAM,SAAU4H,GAIhD,SAAS6qB,EAAgB1vB,GACxB,OAAOA,IAASkvB,GAAsBlvB,IAASmvB,EAGhD,SAASQ,EAAqB3vB,GAC7B,OAAOA,IAASkvB,EAGjB,SAASU,EAAoB5vB,GAC5B,OAAOA,GAAQ6uB,GAAoB7uB,GAAQ+uB,GAC1C/uB,GAAQ8uB,GAAoB9uB,GAAQgvB,EAItC,SAASa,EAAgBzxB,EAAc0xB,EAAyBC,EAAmBL,GAClF,IAAIvS,EAAM,GACN6S,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACPlwB,EAAO,EACX,IAAK,IAAI3D,EAAI,EAAGA,GAAK+B,EAAK7B,SAAUF,EAAG,CACtC,GAAIA,EAAI+B,EAAK7B,OACZyD,EAAO5B,EAAKmW,WAAWlY,OAEnB,CAAA,GAAIqzB,EAAgB1vB,GACxB,MAGAA,EAAOkvB,EAGR,GAAIQ,EAAgB1vB,GAAO,CAC1B,GAAIiwB,IAAc5zB,EAAI,GAAc,IAAT6zB,QAEpB,GAAa,IAATA,EAAY,CACtB,GAAI/S,EAAI5gB,OAAS,GAA2B,IAAtByzB,GACrB7S,EAAI5I,WAAW4I,EAAI5gB,OAAS,KAAO0yB,GACnC9R,EAAI5I,WAAW4I,EAAI5gB,OAAS,KAAO0yB,EAAU,CAC7C,GAAI9R,EAAI5gB,OAAS,EAAG,CACnB,MAAM4zB,EAAiBhT,EAAIzb,YAAYquB,IACf,IAApBI,GACHhT,EAAM,GACN6S,EAAoB,GAGpBA,GADA7S,EAAMA,EAAIlf,MAAM,EAAGkyB,IACK5zB,OAAS,EAAI4gB,EAAIzb,YAAYquB,GAEtDE,EAAY5zB,EACZ6zB,EAAO,EACP,SACM,GAAmB,IAAf/S,EAAI5gB,OAAc,CAC5B4gB,EAAM,GACN6S,EAAoB,EACpBC,EAAY5zB,EACZ6zB,EAAO,EACP,UAGEJ,IACH3S,GAAOA,EAAI5gB,OAAS,EAAI,GAAGwzB,MAAgB,KAC3CC,EAAoB,QAGjB7S,EAAI5gB,OAAS,EAChB4gB,GAAO,GAAG4S,IAAY3xB,EAAKH,MAAMgyB,EAAY,EAAG5zB,KAGhD8gB,EAAM/e,EAAKH,MAAMgyB,EAAY,EAAG5zB,GAEjC2zB,EAAoB3zB,EAAI4zB,EAAY,EAErCA,EAAY5zB,EACZ6zB,EAAO,OACGlwB,IAASivB,IAAsB,IAAViB,IAC7BA,EAEFA,GAAQ,EAGV,OAAO/S,EAGR,SAASiT,EAAQzX,EAAa0X,GAC7B,GAAmB,OAAfA,GAA6C,iBAAfA,EACjC,MAAM,IAAIjB,EAAoB,aAAc,SAAUiB,GAEvD,MAAMhxB,EAAMgxB,EAAWhxB,KAAOgxB,EAAW3W,KACnC4W,EAAOD,EAAWC,MACvB,GAAGD,EAAWpzB,MAAQ,KAAKozB,EAAWE,KAAO,KAC9C,OAAKlxB,EAGEA,IAAQgxB,EAAW3W,KAAO,GAAGra,IAAMixB,IAAS,GAAGjxB,IAAMsZ,IAAM2X,IAF1DA,EA+BI3rB,EAAA6rB,MAAe;AAE3B1qB,WAAW2qB,GACV,IAAIC,EAAiB,GACjBC,EAAe,GACfC,GAAmB,EAEvB,IAAK,IAAIv0B,EAAIo0B,EAAal0B,OAAS,EAAGF,IAAM,EAAGA,IAAK,CACnD,IAAI+B,EACJ,GAAI/B,GAAK,GAKR,GAHAozB,EADArxB,EAAOqyB,EAAap0B,GACC,QAGD,IAAhB+B,EAAK7B,OACR,cAEmC,IAA1Bm0B,EAAen0B,OACzB6B,EAAO0C,EAAQ6tB,YAWF7uB,KAJb1B,EAAQ0C,EAAQC,IAAY,IAAI2vB,MAAqB5vB,EAAQ6tB,QAK5DvwB,EAAKH,MAAM,EAAG,GAAG4yB,gBAAkBH,EAAeG,eAClDzyB,EAAKmW,WAAW,KAAO4a,KACvB/wB,EAAO,GAAGsyB,OAIZ,MAAMp0B,EAAM8B,EAAK7B,OACjB,IAAIu0B,EAAU,EACVC,EAAS,GACTC,GAAa,EACjB,MAAMhxB,EAAO5B,EAAKmW,WAAW,GAG7B,GAAY,IAARjY,EACCozB,EAAgB1vB,KAEnB8wB,EAAU,EACVE,GAAa,QAER,GAAItB,EAAgB1vB,GAO1B,GAFAgxB,GAAa,EAETtB,EAAgBtxB,EAAKmW,WAAW,IAAK,CAExC,IAAI/H,EAAI,EACJkH,EAAOlH,EAEX,KAAOA,EAAIlQ,IAAQozB,EAAgBtxB,EAAKmW,WAAW/H,KAClDA,IAED,GAAIA,EAAIlQ,GAAOkQ,IAAMkH,EAAM,CAC1B,MAAMud,EAAY7yB,EAAKH,MAAMyV,EAAMlH,GAInC,IAFAkH,EAAOlH,EAEAA,EAAIlQ,GAAOozB,EAAgBtxB,EAAKmW,WAAW/H,KACjDA,IAED,GAAIA,EAAIlQ,GAAOkQ,IAAMkH,EAAM,CAI1B,IAFAA,EAAOlH,EAEAA,EAAIlQ,IAAQozB,EAAgBtxB,EAAKmW,WAAW/H,KAClDA,IAEGA,IAAMlQ,GAAOkQ,IAAMkH,IAEtBqd,EAAS,OAAOE,MAAc7yB,EAAKH,MAAMyV,EAAMlH,KAC/CskB,EAAUtkB,UAKbskB,EAAU,OAEDlB,EAAoB5vB,IAjPf,KAkPf5B,EAAKmW,WAAW,KAEhBwc,EAAS3yB,EAAKH,MAAM,EAAG,GACvB6yB,EAAU,EACNx0B,EAAM,GAAKozB,EAAgBtxB,EAAKmW,WAAW,MAG9Cyc,GAAa,EACbF,EAAU,IAIZ,GAAIC,EAAOx0B,OAAS,EACnB,GAAIm0B,EAAen0B,OAAS,GAC3B,GAAIw0B,EAAOF,gBAAkBH,EAAeG,cAE3C,cAGDH,EAAiBK,EAInB,GAAIH,GACH,GAAIF,EAAen0B,OAAS,EAC3B,WAKD,GAFAo0B,EAAe,GAAGvyB,EAAKH,MAAM6yB,OAAaH,IAC1CC,EAAmBI,EACfA,GAAcN,EAAen0B,OAAS,EACzC,MAaH,OAHAo0B,EAAed,EAAgBc,GAAeC,EAAkB,KAC/DlB,GAEMkB,EACN,GAAGF,MAAmBC,IACtB,GAAGD,IAAiBC,KAAkB,KAGxC7qB,UAAU1H,GACTqxB,EAAerxB,EAAM,QACrB,MAAM9B,EAAM8B,EAAK7B,OACjB,GAAY,IAARD,EACH,MAAO,IAER,IACIy0B,EADAD,EAAU,EAEVE,GAAa;CACjB,MAAMhxB,EAAO5B,EAAKmW,WAAW,GAG7B,GAAY,IAARjY,EAGH,OAAOqzB,EAAqB3vB,GAAQ,KAAO5B,EAE5C,GAAIsxB,EAAgB1vB,GAOnB,GAFAgxB,GAAa,EAETtB,EAAgBtxB,EAAKmW,WAAW,IAAK,CAExC,IAAI/H,EAAI,EACJkH,EAAOlH,EAEX,KAAOA,EAAIlQ,IAAQozB,EAAgBtxB,EAAKmW,WAAW/H,KAClDA,IAED,GAAIA,EAAIlQ,GAAOkQ,IAAMkH,EAAM,CAC1B,MAAMud,EAAY7yB,EAAKH,MAAMyV,EAAMlH,GAInC,IAFAkH,EAAOlH,EAEAA,EAAIlQ,GAAOozB,EAAgBtxB,EAAKmW,WAAW/H,KACjDA,IAED,GAAIA,EAAIlQ,GAAOkQ,IAAMkH,EAAM,CAI1B,IAFAA,EAAOlH,EAEAA,EAAIlQ,IAAQozB,EAAgBtxB,EAAKmW,WAAW/H,KAClDA,IAED,GAAIA,IAAMlQ,EAIT,MAAO,OAAO20B,MAAc7yB,EAAKH,MAAMyV,OAEpClH,IAAMkH,IAETqd,EAAS,OAAOE,MAAc7yB,EAAKH,MAAMyV,EAAMlH,KAC/CskB,EAAUtkB,UAKbskB,EAAU,OAEDlB,EAAoB5vB,IAlWd,KAkWuB5B,EAAKmW,WAAW,KAEvDwc,EAAS3yB,EAAKH,MAAM,EAAG,GACvB6yB,EAAU,EACNx0B,EAAM,GAAKozB,EAAgBtxB,EAAKmW,WAAW,MAG9Cyc,GAAa,EACbF,EAAU,IAIZ,IAAIpkB,EAAOokB,EAAUx0B,EACpBuzB,EAAgBzxB,EAAKH,MAAM6yB,IAAWE,EAAY,KAAMtB,GACxD,GAOD,OANoB,IAAhBhjB,EAAKnQ,QAAiBy0B,IACzBtkB,EAAO,KAEJA,EAAKnQ,OAAS,GAAKmzB,EAAgBtxB,EAAKmW,WAAWjY,EAAM,MAC5DoQ,GAAQ,WAEM5M,IAAXixB,EACIC,EAAa,KAAKtkB,IAASA,EAE5BskB,EAAa,GAAGD,MAAWrkB,IAAS,GAAGqkB,IAASrkB,KAGxD5G,WAAW1H,GACVqxB,EAAerxB,EAAM,QACrB,MAAM9B,EAAM8B,EAAK7B,OACjB,GAAY,IAARD,EACH,OAAO,EAGR,MAAM0D,EAAO5B,EAAKmW,WAAW,GAC7B,OAAOmb,EAAgB1vB,IAEtB1D,EAAM,GACNszB,EAAoB5vB,IAxYJ,KAyYhB5B,EAAKmW,WAAW,IAChBmb,EAAgBtxB,EAAKmW,WAAW,KAGlCzO,QAAQorB,GACP,GAAqB,IAAjBA,EAAM30B,OACT,MAAO,IAGR,IAAI40B,EACAF,EACJ,IAAK,IAAI50B,EAAI,EAAGA,EAAI60B,EAAM30B,SAAUF,EAAG,CACtC,MAAMqT,EAAMwhB,EAAM70B,GAClBozB,EAAe/f,EAAK,QAChBA,EAAInT,OAAS,SACDuD,IAAXqxB,EACHA,EAASF,EAAYvhB,EAGrByhB,GAAU,KAAKzhB,KAKlB,QAAe5P,IAAXqxB,EACH,MAAO,IAgBR,IAAIC,GAAe,EACfC,EAAa,EACjB,GAAyB,iBAAdJ,GAA0BvB,EAAgBuB,EAAU1c,WAAW,IAAK,GAC5E8c,EACF,MAAMC,EAAWL,EAAU10B;CACvB+0B,EAAW,GAAK5B,EAAgBuB,EAAU1c,WAAW,QACtD8c,EACEC,EAAW,IACV5B,EAAgBuB,EAAU1c,WAAW,MACtC8c,EAGFD,GAAe,IAKnB,GAAIA,EAAc,CAEjB,KAAOC,EAAaF,EAAO50B,QAC1BmzB,EAAgByB,EAAO5c,WAAW8c,KAClCA,IAIGA,GAAc,IACjBF,EAAS,KAAKA,EAAOlzB,MAAMozB,MAI7B,OAAO1sB,EAAA6rB,MAAMe,UAAUJ,IAQxBrrB,SAASpI,EAAcC,GAItB,GAHA8xB,EAAe/xB,EAAM,QACrB+xB,EAAe9xB,EAAI,MAEfD,IAASC,EACZ,MAAO,GAGR,MAAM6zB,EAAW7sB,EAAA6rB,MAAMtwB,QAAQxC,GACzB+zB,EAAS9sB,EAAA6rB,MAAMtwB,QAAQvC,GAE7B,GAAI6zB,IAAaC,EAChB,MAAO,GAMR,IAHA/zB,EAAO8zB,EAASX,kBAChBlzB,EAAK8zB,EAAOZ,eAGX,MAAO,GAIR,IAAIa,EAAY,EAChB,KAAOA,EAAYh0B,EAAKnB,QACvBmB,EAAK6W,WAAWmd,KAAevC,GAC/BuC,IAGD,IAAIC,EAAUj0B,EAAKnB,OACnB,KAAOo1B,EAAU,EAAID,GACpBh0B,EAAK6W,WAAWod,EAAU,KAAOxC,GACjCwC,IAED,MAAMC,EAAUD,EAAUD,EAG1B,IAAIG,EAAU,EACd,KAAOA,EAAUl0B,EAAGpB,QACnBoB,EAAG4W,WAAWsd,KAAa1C,GAC3B0C,IAGD,IAAIC,EAAQn0B,EAAGpB,OACf,KAAOu1B,EAAQ,EAAID,GAClBl0B,EAAG4W,WAAWud,EAAQ,KAAO3C,GAC7B2C,IAED,MAAMC,EAAQD,EAAQD,EAGhBt1B,EAASq1B,EAAUG,EAAQH,EAAUG,EAC3C,IAAIC,GAAiB,EACjB31B,EAAI,EACR,KAAOA,EAAIE,EAAQF,IAAK,CACvB,MAAM41B,EAAWv0B,EAAK6W,WAAWmd,EAAYr1B,GAC7C,GAAI41B,IAAat0B,EAAG4W,WAAWsd,EAAUx1B,GACxC,MACU41B,IAAa9C,IACvB6C,EAAgB31B,GAMlB,GAAIA,IAAME,GACT,IAAuB,IAAnBy1B,EACH,OAAOP,MAEF,CACN,GAAIM,EAAQx1B,EAAQ,CACnB,GAAIoB,EAAG4W,WAAWsd,EAAUx1B,KAAO8yB,EAGlC,OAAOsC,EAAOxzB,MAAM4zB,EAAUx1B,EAAI,GAEnC,GAAU,IAANA,EAGH,OAAOo1B,EAAOxzB,MAAM4zB,EAAUx1B,GAG5Bu1B,EAAUr1B,IACTmB,EAAK6W,WAAWmd,EAAYr1B,KAAO8yB,EAGtC6C,EAAgB31B,EACA,IAANA,IAGV21B,EAAgB,KAGK,IAAnBA,IACHA,EAAgB,GAIlB,IAAIE,EAAM,GAGV,IAAK71B,EAAIq1B,EAAYM,EAAgB,EAAG31B,GAAKs1B,IAAWt1B,EACnDA,IAAMs1B,GAAWj0B,EAAK6W,WAAWlY,KAAO8yB,IAC3C+C,GAAsB,IAAfA,EAAI31B,OAAe,KAAO,QAQnC,OAJAs1B,GAAWG,EAIPE,EAAI31B,OAAS,EACT,GAAG21B,IAAMT,EAAOxzB,MAAM4zB,EAASC,MAGnCL,EAAOld,WAAWsd,KAAa1C,KAChC0C;AAGIJ,EAAOxzB,MAAM4zB,EAASC,KAG9BhsB,iBAAiB1H,GAEhB,GAAoB,iBAATA,EACV,OAAOA,EAGR,GAAoB,IAAhBA,EAAK7B,OACR,MAAO,GAGR,MAAM41B,EAAextB,EAAA6rB,MAAMtwB,QAAQ9B,GAEnC,GAAI+zB,EAAa51B,QAAU,EAC1B,OAAO6B,EAGR,GAAI+zB,EAAa5d,WAAW,KAAO4a,GAElC,GAAIgD,EAAa5d,WAAW,KAAO4a,EAAqB,CACvD,MAAMnvB,EAAOmyB,EAAa5d,WAAW,GACrC,GArmBuB,KAqmBnBvU,GAA+BA,IAASivB,EAE3C,MAAO,eAAekD,EAAal0B,MAAM,WAGrC,GAAI2xB,EAAoBuC,EAAa5d,WAAW,KA3mBtC,KA4mBhB4d,EAAa5d,WAAW,IACxB4d,EAAa5d,WAAW,KAAO4a,EAE/B,MAAO,UAAUgD,IAGlB,OAAO/zB,GAGR0H,QAAQ1H,GACPqxB,EAAerxB,EAAM,QACrB,MAAM9B,EAAM8B,EAAK7B,OACjB,GAAY,IAARD,EACH,MAAO,IAER,IAAIw0B,GAAW,EACXhb,EAAS,EACb,MAAM9V,EAAO5B,EAAKmW,WAAW,GAE7B,GAAY,IAARjY,EAGH,OAAOozB,EAAgB1vB,GAAQ5B,EAAO,IAIvC,GAAIsxB,EAAgB1vB,IAKnB,GAFA8wB,EAAUhb,EAAS,EAEf4Z,EAAgBtxB,EAAKmW,WAAW,IAAK,CAExC,IAAI/H,EAAI,EACJkH,EAAOlH,EAEX,KAAOA,EAAIlQ,IAAQozB,EAAgBtxB,EAAKmW,WAAW/H,KAClDA,IAED,GAAIA,EAAIlQ,GAAOkQ,IAAMkH,EAAM,CAI1B,IAFAA,EAAOlH,EAEAA,EAAIlQ,GAAOozB,EAAgBtxB,EAAKmW,WAAW/H,KACjDA,IAED,GAAIA,EAAIlQ,GAAOkQ,IAAMkH,EAAM,CAI1B,IAFAA,EAAOlH,EAEAA,EAAIlQ,IAAQozB,EAAgBtxB,EAAKmW,WAAW/H,KAClDA,IAED,GAAIA,IAAMlQ,EAET,OAAO8B,EAEJoO,IAAMkH,IAKTod,EAAUhb,EAAStJ,EAAI,WAMjBojB,EAAoB5vB,IAhrBd,KAgrBuB5B,EAAKmW,WAAW,KAEvDuB,EADAgb,EAAUx0B,EAAM,GAAKozB,EAAgBtxB,EAAKmW,WAAW,IAAM,EAAI,GAIhE,IAAItB,GAAO,EACPmf,GAAe,EACnB,IAAK,IAAI/1B,EAAIC,EAAM,EAAGD,GAAKyZ,IAAUzZ,EACpC,GAAIqzB,EAAgBtxB,EAAKmW,WAAWlY,KACnC,IAAK+1B,EAAc,CAClBnf,EAAM5W,EACN,YAID+1B,GAAe,EAIjB,IAAa,IAATnf,EAAY,CACf,IAAiB,IAAb6d,EACH,MAAO,IAGR7d,EAAM6d,EAEP,OAAO1yB,EAAKH,MAAM,EAAGgV,IAGtBnN,SAAS1H,EAAcmyB,QACVzwB,IAARywB,GACHd,EAAec,EAAK,OAErBd,EAAerxB,EAAM,QACrB,IAGI/B,EAHAuP,EAAQ,EACRqH,GAAO,EACPmf,GAAe;CAYnB,GANIh0B,EAAK7B,QAAU,GAClBqzB,EAAoBxxB,EAAKmW,WAAW,KA3tBpB,KA4tBhBnW,EAAKmW,WAAW,KAChB3I,EAAQ,QAGG9L,IAARywB,GAAqBA,EAAIh0B,OAAS,GAAKg0B,EAAIh0B,QAAU6B,EAAK7B,OAAQ,CACrE,GAAIg0B,IAAQnyB,EACX,MAAO,GAER,IAAIi0B,EAAS9B,EAAIh0B,OAAS,EACtB+1B,GAAoB,EACxB,IAAKj2B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAKuP,IAASvP,EAAG,CAC1C,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAIqzB,EAAgB1vB,IAGnB,IAAKoyB,EAAc,CAClBxmB,EAAQvP,EAAI,EACZ,YAGyB,IAAtBi2B,IAGHF,GAAe,EACfE,EAAmBj2B,EAAI,GAEpBg2B,GAAU,IAETryB,IAASuwB,EAAIhc,WAAW8d,IACT,KAAZA,IAGLpf,EAAM5W,IAKPg2B,GAAU,EACVpf,EAAMqf,IAWV,OALI1mB,IAAUqH,EACbA,EAAMqf,GACa,IAATrf,IACVA,EAAM7U,EAAK7B,QAEL6B,EAAKH,MAAM2N,EAAOqH,GAE1B,IAAK5W,EAAI+B,EAAK7B,OAAS,EAAGF,GAAKuP,IAASvP,EACvC,GAAIqzB,EAAgBtxB,EAAKmW,WAAWlY,KAGnC,IAAK+1B,EAAc,CAClBxmB,EAAQvP,EAAI,EACZ,YAEkB,IAAT4W,IAGVmf,GAAe,EACfnf,EAAM5W,EAAI,GAIZ,OAAa,IAAT4W,EACI,GAED7U,EAAKH,MAAM2N,EAAOqH,IAG1BnN,QAAQ1H,GACPqxB,EAAerxB,EAAM,QACrB,IAAIwN,EAAQ,EACR2mB,GAAY,EACZC,EAAY,EACZvf,GAAO,EACPmf,GAAe,EAGfK,EAAc,EAMdr0B,EAAK7B,QAAU,GApzBF,KAqzBhB6B,EAAKmW,WAAW,IAChBqb,EAAoBxxB,EAAKmW,WAAW,MACpC3I,EAAQ4mB,EAAY,GAGrB,IAAK,IAAIn2B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAKuP,IAASvP,EAAG,CAC9C,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAIqzB,EAAgB1vB,IAGnB,IAAKoyB,EAAc,CAClBI,EAAYn2B,EAAI,EAChB,YAIW,IAAT4W,IAGHmf,GAAe,EACfnf,EAAM5W,EAAI,GAEP2D,IAASivB,GAEM,IAAdsD,EACHA,EAAWl2B,EAEa,IAAhBo2B,IACRA,EAAc,IAES,IAAdF,IAGVE,GAAe,GAIjB,OAAkB,IAAdF,IACM,IAATtf,GAEgB,IAAhBwf,GAEiB,IAAhBA,GACAF,IAAatf,EAAM,GACnBsf,IAAaC,EAAY,EACnB,GAEDp0B,EAAKH,MAAMs0B,EAAUtf,IAG7Byf,OAAQtC,EAAQrzB,KAAK,KAAM,MAE3B+I,MAAM1H,GACLqxB,EAAerxB,EAAM,QAErB,MAAMu0B,EAAM,CAAEjZ,KAAM,GAAIra,IAAK,GAAIixB,KAAM,GAAIC,IAAK,GAAItzB,KAAM,IAC1D,GAAoB,IAAhBmB,EAAK7B,OACR,OAAOo2B,EAGR,MAAMr2B,EAAM8B,EAAK7B,OACjB,IAAIu0B,EAAU,EACV9wB,EAAO5B,EAAKmW,WAAW,GAE3B,GAAY,IAARjY,EACH,OAAIozB,EAAgB1vB,IAGnB2yB,EAAIjZ,KAAOiZ,EAAItzB,IAAMjB;AACdu0B,IAERA,EAAIrC,KAAOqC,EAAI11B,KAAOmB,EACfu0B,GAGR,GAAIjD,EAAgB1vB,IAInB,GADA8wB,EAAU,EACNpB,EAAgBtxB,EAAKmW,WAAW,IAAK,CAExC,IAAI/H,EAAI,EACJkH,EAAOlH,EAEX,KAAOA,EAAIlQ,IAAQozB,EAAgBtxB,EAAKmW,WAAW/H,KAClDA,IAED,GAAIA,EAAIlQ,GAAOkQ,IAAMkH,EAAM,CAI1B,IAFAA,EAAOlH,EAEAA,EAAIlQ,GAAOozB,EAAgBtxB,EAAKmW,WAAW/H,KACjDA,IAED,GAAIA,EAAIlQ,GAAOkQ,IAAMkH,EAAM,CAI1B,IAFAA,EAAOlH,EAEAA,EAAIlQ,IAAQozB,EAAgBtxB,EAAKmW,WAAW/H,KAClDA,IAEGA,IAAMlQ,EAETw0B,EAAUtkB,EACAA,IAAMkH,IAEhBod,EAAUtkB,EAAI,WAKZ,GAAIojB,EAAoB5vB,IAp6Bd,KAo6BuB5B,EAAKmW,WAAW,GAAmB,CAE1E,GAAIjY,GAAO,EAIV,OADAq2B,EAAIjZ,KAAOiZ,EAAItzB,IAAMjB,EACdu0B,EAGR,GADA7B,EAAU,EACNpB,EAAgBtxB,EAAKmW,WAAW,IAAK,CACxC,GAAY,IAARjY,EAIH,OADAq2B,EAAIjZ,KAAOiZ,EAAItzB,IAAMjB,EACdu0B,EAER7B,EAAU,GAGRA,EAAU,IACb6B,EAAIjZ,KAAOtb,EAAKH,MAAM,EAAG6yB,IAG1B,IAAIyB,GAAY,EACZC,EAAY1B,EACZ7d,GAAO,EACPmf,GAAe,EACf/1B,EAAI+B,EAAK7B,OAAS,EAIlBk2B,EAAc,EAGlB,KAAOp2B,GAAKy0B,IAAWz0B,EAEtB,GAAIqzB,EADJ1vB,EAAO5B,EAAKmW,WAAWlY,KAItB,IAAK+1B,EAAc,CAClBI,EAAYn2B,EAAI,EAChB,YAIW,IAAT4W,IAGHmf,GAAe,EACfnf,EAAM5W,EAAI,GAEP2D,IAASivB,GAEM,IAAdsD,EACHA,EAAWl2B,EACe,IAAhBo2B,IACVA,EAAc,IAES,IAAdF,IAGVE,GAAe,GA6BjB,OAzBa,IAATxf,KACe,IAAdsf,GAEa,IAAhBE,GAEiB,IAAhBA,GACAF,IAAatf,EAAM,GACnBsf,IAAaC,EAAY,EAC1BG,EAAIrC,KAAOqC,EAAI11B,KAAOmB,EAAKH,MAAMu0B,EAAWvf,IAE5C0f,EAAI11B,KAAOmB,EAAKH,MAAMu0B,EAAWD,GACjCI,EAAIrC,KAAOlyB,EAAKH,MAAMu0B,EAAWvf,GACjC0f,EAAIpC,IAAMnyB,EAAKH,MAAMs0B,EAAUtf,KAQhC0f,EAAItzB,IADDmzB,EAAY,GAAKA,IAAc1B,EACxB1yB,EAAKH,MAAM,EAAGu0B,EAAY,GAE1BG,EAAIjZ,KAGRiZ,GAGRha,IAAK,KACLia,UAAW,IACXpC,MAAO,KACPqC,MAAO,MAGKluB,EAAAkuB,MAAe,CAE3B/sB,WAAW2qB,GACV,IAAI0B,EAAe,GACfvB,GAAmB,EAEvB,IAAK,IAAIv0B,EAAIo0B,EAAal0B,OAAS,EAAGF,IAAM,IAAMu0B,EAAkBv0B,IAAK,CACxE,MAAM+B,EAAO/B,GAAK,EAAIo0B,EAAap0B,GAAKyE,EAAQ6tB,MAEhDc,EAAerxB,EAAM,QAGD,IAAhBA,EAAK7B,SAIT41B,EAAe,GAAG/zB,KAAQ+zB,IAC1BvB,EAAmBxyB,EAAKmW,WAAW,KAAO2a,GAU3C,OAHAiD,EAAetC,EAAgBsC,GAAevB,EAAkB,IAC/DjB,GAEGiB,EACI,IAAIuB,IAELA,EAAa51B,OAAS,EAAI41B,EAAe;AAGjDrsB,UAAU1H,GAGT,GAFAqxB,EAAerxB,EAAM,QAED,IAAhBA,EAAK7B,OACR,MAAO,IAGR,MAAMy0B,EAAa5yB,EAAKmW,WAAW,KAAO2a,EACpC4D,EACL10B,EAAKmW,WAAWnW,EAAK7B,OAAS,KAAO2yB,EAKtC,OAAoB,KAFpB9wB,EAAOyxB,EAAgBzxB,GAAO4yB,EAAY,IAAKrB,IAEtCpzB,OACJy0B,EACI,IAED8B,EAAoB,KAAO,KAE/BA,IACH10B,GAAQ,KAGF4yB,EAAa,IAAI5yB,IAASA,IAGlC4yB,WAAW5yB,IACVqxB,EAAerxB,EAAM,QACdA,EAAK7B,OAAS,GAAK6B,EAAKmW,WAAW,KAAO2a,GAGlDppB,QAAQorB,GACP,GAAqB,IAAjBA,EAAM30B,OACT,MAAO,IAER,IAAI40B,EACJ,IAAK,IAAI90B,EAAI,EAAGA,EAAI60B,EAAM30B,SAAUF,EAAG,CACtC,MAAMqT,EAAMwhB,EAAM70B,GAClBozB,EAAe/f,EAAK,QAChBA,EAAInT,OAAS,SACDuD,IAAXqxB,EACHA,EAASzhB,EAETyhB,GAAU,IAAIzhB,KAIjB,YAAe5P,IAAXqxB,EACI,IAEDxsB,EAAAkuB,MAAMtB,UAAUJ,IAGxBrrB,SAASpI,EAAcC,GAItB,GAHA8xB,EAAe/xB,EAAM,QACrB+xB,EAAe9xB,EAAI,MAEfD,IAASC,EACZ,MAAO,GAOR,IAHAD,EAAOiH,EAAAkuB,MAAM3yB,QAAQxC,OACrBC,EAAKgH,EAAAkuB,MAAM3yB,QAAQvC,IAGlB,MAAO,GAGR,MACMg0B,EAAUj0B,EAAKnB,OACfq1B,EAAUD,EAFE,EAIZI,EAAQp0B,EAAGpB,OADD,EAIVA,EAAUq1B,EAAUG,EAAQH,EAAUG,EAC5C,IAAIC,GAAiB,EACjB31B,EAAI,EACR,KAAOA,EAAIE,EAAQF,IAAK,CACvB,MAAM41B,EAAWv0B,EAAK6W,WAXL,EAW4BlY,GAC7C,GAAI41B,IAAat0B,EAAG4W,WATL,EAS0BlY,GACxC,MACU41B,IAAa/C,IACvB8C,EAAgB31B,GAGlB,GAAIA,IAAME,EACT,GAAIw1B,EAAQx1B,EAAQ,CACnB,GAAIoB,EAAG4W,WAjBO,EAiBclY,KAAO6yB,EAGlC,OAAOvxB,EAAGM,MApBG,EAoBa5B,EAAI,GAE/B,GAAU,IAANA,EAGH,OAAOsB,EAAGM,MAzBG,EAyBa5B,QAEjBu1B,EAAUr1B,IAChBmB,EAAK6W,WA/BO,EA+BgBlY,KAAO6yB,EAGtC8C,EAAgB31B,EACA,IAANA,IAGV21B,EAAgB,IAKnB,IAAIE,EAAM,GAGV,IAAK71B,EA9Ca,EA8CG21B,EAAgB,EAAG31B,GAAKs1B,IAAWt1B,EACnDA,IAAMs1B,GAAWj0B,EAAK6W,WAAWlY,KAAO6yB,IAC3CgD,GAAsB,IAAfA,EAAI31B,OAAe,KAAO,OAMnC,MAAO,GAAG21B,IAAMv0B,EAAGM,MAnDH,EAmDmB+zB,MAGpCe,iBAAiB30B,GAETA,EAGR0H,QAAQ1H,GAEP,GADAqxB,EAAerxB,EAAM,QACD,IAAhBA,EAAK7B,OACR,MAAO;CAER,MAAMy2B,EAAU50B,EAAKmW,WAAW,KAAO2a,EACvC,IAAIjc,GAAO,EACPmf,GAAe,EACnB,IAAK,IAAI/1B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAK,IAAKA,EACvC,GAAI+B,EAAKmW,WAAWlY,KAAO6yB,GAC1B,IAAKkD,EAAc,CAClBnf,EAAM5W,EACN,YAID+1B,GAAe,EAIjB,OAAa,IAATnf,EACI+f,EAAU,IAAM,IAEpBA,GAAmB,IAAR/f,EACP,KAED7U,EAAKH,MAAM,EAAGgV,IAGtBnN,SAAS1H,EAAcmyB,QACVzwB,IAARywB,GACHd,EAAec,EAAK,OAErBd,EAAerxB,EAAM,QAErB,IAGI/B,EAHAuP,EAAQ,EACRqH,GAAO,EACPmf,GAAe,EAGnB,QAAYtyB,IAARywB,GAAqBA,EAAIh0B,OAAS,GAAKg0B,EAAIh0B,QAAU6B,EAAK7B,OAAQ,CACrE,GAAIg0B,IAAQnyB,EACX,MAAO,GAER,IAAIi0B,EAAS9B,EAAIh0B,OAAS,EACtB+1B,GAAoB,EACxB,IAAKj2B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAK,IAAKA,EAAG,CACtC,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAI2D,IAASkvB,GAGZ,IAAKkD,EAAc,CAClBxmB,EAAQvP,EAAI,EACZ,YAGyB,IAAtBi2B,IAGHF,GAAe,EACfE,EAAmBj2B,EAAI,GAEpBg2B,GAAU,IAETryB,IAASuwB,EAAIhc,WAAW8d,IACT,KAAZA,IAGLpf,EAAM5W,IAKPg2B,GAAU,EACVpf,EAAMqf,IAWV,OALI1mB,IAAUqH,EACbA,EAAMqf,GACa,IAATrf,IACVA,EAAM7U,EAAK7B,QAEL6B,EAAKH,MAAM2N,EAAOqH,GAE1B,IAAK5W,EAAI+B,EAAK7B,OAAS,EAAGF,GAAK,IAAKA,EACnC,GAAI+B,EAAKmW,WAAWlY,KAAO6yB,GAG1B,IAAKkD,EAAc,CAClBxmB,EAAQvP,EAAI,EACZ,YAEkB,IAAT4W,IAGVmf,GAAe,EACfnf,EAAM5W,EAAI,GAIZ,OAAa,IAAT4W,EACI,GAED7U,EAAKH,MAAM2N,EAAOqH,IAG1BnN,QAAQ1H,GACPqxB,EAAerxB,EAAM,QACrB,IAAIm0B,GAAY,EACZC,EAAY,EACZvf,GAAO,EACPmf,GAAe,EAGfK,EAAc,EAClB,IAAK,IAAIp2B,EAAI+B,EAAK7B,OAAS,EAAGF,GAAK,IAAKA,EAAG,CAC1C,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAI2D,IAASkvB,GASA,IAATjc,IAGHmf,GAAe,EACfnf,EAAM5W,EAAI,GAEP2D,IAASivB,GAEM,IAAdsD,EACHA,EAAWl2B,EAEa,IAAhBo2B,IACRA,EAAc,IAES,IAAdF,IAGVE,GAAe,QAvBf,IAAKL,EAAc,CAClBI,EAAYn2B,EAAI,EAChB,OAyBH,OAAkB,IAAdk2B,IACM,IAATtf,GAEgB,IAAhBwf,GAEiB,IAAhBA,GACAF,IAAatf,EAAM,GACnBsf,IAAaC,EAAY,EACnB,GAEDp0B,EAAKH,MAAMs0B,EAAUtf,IAG7Byf,OAAQtC,EAAQrzB,KAAK,KAAM,KAE3B+I,MAAM1H,GACLqxB,EAAerxB,EAAM,QAErB,MAAMu0B,EAAM,CAAEjZ,KAAM,GAAIra,IAAK,GAAIixB,KAAM;AAAIC,IAAK,GAAItzB,KAAM,IAC1D,GAAoB,IAAhBmB,EAAK7B,OACR,OAAOo2B,EAER,MAAM3B,EAAa5yB,EAAKmW,WAAW,KAAO2a,EAC1C,IAAItjB,EACAolB,GACH2B,EAAIjZ,KAAO,IACX9N,EAAQ,GAERA,EAAQ,EAET,IAAI2mB,GAAY,EACZC,EAAY,EACZvf,GAAO,EACPmf,GAAe,EACf/1B,EAAI+B,EAAK7B,OAAS,EAIlBk2B,EAAc,EAGlB,KAAOp2B,GAAKuP,IAASvP,EAAG,CACvB,MAAM2D,EAAO5B,EAAKmW,WAAWlY,GAC7B,GAAI2D,IAASkvB,GASA,IAATjc,IAGHmf,GAAe,EACfnf,EAAM5W,EAAI,GAEP2D,IAASivB,GAEM,IAAdsD,EACHA,EAAWl2B,EACe,IAAhBo2B,IACVA,EAAc,IAES,IAAdF,IAGVE,GAAe,QAtBf,IAAKL,EAAc,CAClBI,EAAYn2B,EAAI,EAChB,OAwBH,IAAa,IAAT4W,EAAY,CACf,MAAMrH,EAAsB,IAAd4mB,GAAmBxB,EAAa,EAAIwB,GAChC,IAAdD,GAEa,IAAhBE,GAEiB,IAAhBA,GACAF,IAAatf,EAAM,GACnBsf,IAAaC,EAAY,EAC1BG,EAAIrC,KAAOqC,EAAI11B,KAAOmB,EAAKH,MAAM2N,EAAOqH,IAExC0f,EAAI11B,KAAOmB,EAAKH,MAAM2N,EAAO2mB,GAC7BI,EAAIrC,KAAOlyB,EAAKH,MAAM2N,EAAOqH,GAC7B0f,EAAIpC,IAAMnyB,EAAKH,MAAMs0B,EAAUtf,IAUjC,OANIuf,EAAY,EACfG,EAAItzB,IAAMjB,EAAKH,MAAM,EAAGu0B,EAAY,GAC1BxB,IACV2B,EAAItzB,IAAM,KAGJszB,GAGRha,IAAK,IACLia,UAAW,IACXpC,MAAO,KACPqC,MAAO,MAGRluB,EAAAkuB,MAAMrC,MAAQ7rB,EAAA6rB,MAAMA,MAAQ7rB,EAAA6rB,MAC5B7rB,EAAAkuB,MAAMA,MAAQluB,EAAA6rB,MAAMqC,MAAQluB,EAAAkuB,MAEfluB,EAAA4sB,UAAkC,UAArBzwB,EAAQirB,SAAuBpnB,EAAA6rB,MAAMe,UAAY5sB,EAAAkuB,MAAMtB,UACpE5sB,EAAAqsB,WAAmC,UAArBlwB,EAAQirB,SAAuBpnB,EAAA6rB,MAAMQ,WAAarsB,EAAAkuB,MAAM7B,WACtErsB,EAAA/E,KAA6B,UAArBkB,EAAQirB,SAAuBpnB,EAAA6rB,MAAM5wB,KAAO+E,EAAAkuB,MAAMjzB,KAC1D+E,EAAAzE,QAAgC,UAArBY,EAAQirB,SAAuBpnB,EAAA6rB,MAAMtwB,QAAUyE,EAAAkuB,MAAM3yB,QAChEyE,EAAAsuB,SAAiC,UAArBnyB,EAAQirB,SAAuBpnB,EAAA6rB,MAAMyC,SAAWtuB,EAAAkuB,MAAMI,SAClEtuB,EAAAuuB,QAAgC,UAArBpyB,EAAQirB,SAAuBpnB,EAAA6rB,MAAM0C,QAAUvuB,EAAAkuB,MAAMK;AAChEvuB,EAAAwuB,SAAiC,UAArBryB,EAAQirB,SAAuBpnB,EAAA6rB,MAAM2C,SAAWxuB,EAAAkuB,MAAMM,SAClExuB,EAAAyuB,QAAgC,UAArBtyB,EAAQirB,SAAuBpnB,EAAA6rB,MAAM4C,QAAUzuB,EAAAkuB,MAAMO,QAChEzuB,EAAA+tB,OAA+B,UAArB5xB,EAAQirB,SAAuBpnB,EAAA6rB,MAAMkC,OAAS/tB,EAAAkuB,MAAMH,OAC9D/tB,EAAAtD,MAA8B,UAArBP,EAAQirB,SAAuBpnB,EAAA6rB,MAAMnvB,MAAQsD,EAAAkuB,MAAMxxB,MAC5DsD,EAAAouB,iBAAyC,UAArBjyB,EAAQirB,SAAuBpnB,EAAA6rB,MAAMuC,iBAAmBpuB,EAAAkuB,MAAME,iBAClFpuB,EAAAgU,IAA4B,UAArB7X,EAAQirB,SAAuBpnB,EAAA6rB,MAAM7X,IAAMhU,EAAAkuB,MAAMla,IACxDhU,EAAAiuB,UAAkC,UAArB9xB,EAAQirB,SAAuBpnB,EAAA6rB,MAAMoC,UAAYjuB,EAAAkuB,MAAMD,+DCz2CjF,SAAgBS,EAAsBvrB,GACrC,OAAO,IAAIwrB,EAAuBxrB,6NAxBnCnD,EAAA4uB,iBAAA,SAAoC/kB,GACnC,MAAMsf,EAAYtf,EAElB,OAAOsf,GAAa,CAACA,EAAUlO,GAAIkO,EAAU0F,MAAO1F,EAAU2F,OAAQ3F,EAAU4F,SAASC,MAAMrtB,GAAoB,mBAAPA,IAoB7G3B,EAAA0uB,mBAAAA,EAIA,MAAMC,EAmBLxtB,YAAoBgC,GAAA/B,KAAA+B,QAAAA,EAjBH/B,KAAA6tB,MAAQ,CACxBC,SAAS,EACTC,OAAO,EACPC,WAAW,GAGKhuB,KAAAoZ,OAAS,CACzB/e,KAAM,GACNwB,MAAO;AAGSmE,KAAA4C,UAAY,CAC5BvI,KAAM,GACNwB,MAAO,GACPqR,IAAK,IAKNnN,QACKC,KAAK6tB,MAAMG,YAIfhuB,KAAK6tB,MAAMC,SAAU,GAGtB/tB,SACKC,KAAK6tB,MAAMG,WAIVhuB,KAAK6tB,MAAMC,UACf9tB,KAAK6tB,MAAMC,SAAU,EAGrB9tB,KAAKiuB,WACLjuB,KAAKkuB,aACLluB,KAAKmuB,WAIPpuB,MAAM1F,GACD2F,KAAK6tB,MAAMG,YAKXhuB,KAAK6tB,MAAMC,QACd9tB,KAAK4C,UAAUvI,KAAKkF,QAAQwD,GAAYA,EAAS1I,IAKjD2F,KAAKoZ,OAAO/e,KAAKlD,KAAKkD,IAIxB0F,MAAMlE,GACDmE,KAAK6tB,MAAMG,YAKXhuB,KAAK6tB,MAAMC,QACd9tB,KAAK4C,UAAU/G,MAAM0D,QAAQwD,GAAYA,EAASlH,IAKlDmE,KAAKoZ,OAAOvd,MAAM1E,KAAK0E,IAIzBkE,IAAI1J,GACC2J,KAAK6tB,MAAMG,YAKX33B,aAAkB2I,MACrBgB,KAAKnE,MAAMxF,GACDA,GACV2J,KAAKouB,MAAM/3B,GAIR2J,KAAK6tB,MAAMC,SACd9tB,KAAK4C,UAAUsK,IAAI3N,QAAQwD,GAAYA,KAEvC/C,KAAK2tB,WAKL3tB,KAAK6tB,MAAME,OAAQ,GAOrBhuB,GAAGwX,EAAiC/X,GACnC,IAAIQ,KAAK6tB,MAAMG,UAIf,OAAQzW,GACP,IAAK,OACJvX,KAAK4C,UAAUvI,KAAKlD,KAAKqI,GAIzBQ,KAAK0tB,SAEL,MAED,IAAK,MACJ1tB,KAAK4C,UAAUsK,IAAI/V,KAAKqI,GAMpBQ,KAAK6tB,MAAMC,SAAW9tB,KAAKmuB,WAC9BnuB,KAAK2tB,UAGN,MAED,IAAK,QACJ3tB,KAAK4C,UAAU/G,MAAM1E,KAAKqI,GAItBQ,KAAK6tB,MAAMC,SACd9tB,KAAKkuB,cAODnuB,WACP,GAAIC,KAAKoZ,OAAO/e,KAAK7D,OAAS,EAAG,CAChC,MAAM63B,EAAiBruB,KAAK+B,QAAQ/B,KAAKoZ,OAAO/e,MAEhD2F,KAAK4C,UAAUvI,KAAKkF,QAAQwD,GAAYA,EAASsrB;AAEjDruB,KAAKoZ,OAAO/e,KAAK7D,OAAS,GAIpBuJ,aACP,GAAIC,KAAK4C,UAAU/G,MAAMrF,OAAS,EAAG,CACpC,IAAK,MAAMqF,KAASmE,KAAKoZ,OAAOvd,MAC/BmE,KAAK4C,UAAU/G,MAAM0D,QAAQwD,GAAYA,EAASlH,IAGnDmE,KAAKoZ,OAAOvd,MAAMrF,OAAS,GAIrBuJ,UACP,QAAIC,KAAK6tB,MAAME,QACd/tB,KAAK4C,UAAUsK,IAAI3N,QAAQwD,GAAYA,KAEhC/C,KAAK4C,UAAUsK,IAAI1W,OAAS,GAMrCuJ,UACMC,KAAK6tB,MAAMG,YACfhuB,KAAK6tB,MAAMG,WAAY,EACvBhuB,KAAK6tB,MAAME,OAAQ,EAEnB/tB,KAAKoZ,OAAO/e,KAAK7D,OAAS,EAC1BwJ,KAAKoZ,OAAOvd,MAAMrF,OAAS,EAE3BwJ,KAAK4C,UAAUvI,KAAK7D,OAAS,EAC7BwJ,KAAK4C,UAAU/G,MAAMrF,OAAS,EAC9BwJ,KAAK4C,UAAUsK,IAAI1W,OAAS,IAQ/BoI,EAAA0vB,gBAAA,SAAmCC,EAAuBxsB,GACzD,MAAMysB,EAAc,GAEpB,IAAIC,EACJ,KAAqC,QAA7BA,EAAQF,EAASG,SACxBF,EAAOr3B,KAAKs3B,GAGb,OAAO1sB,EAAQysB,IAQhB5vB,EAAA+vB,yBAAA,SAA4CJ,EAAuBxsB,EAAsB6sB,GACxF,MAAMJ,EAAc,GAEpB,IAAIC,OAA8B10B,EAClC,KAAqC,QAA7B00B,EAAQF,EAASG,SAAoBF,EAAOh4B,OAASo4B,GAC5DJ,EAAOr3B,KAAKs3B,GAKb,OAAc,OAAVA,GAAkBD,EAAOh4B,OAAS,EAC9BuL,EAAQysB,GAOT,CACNE,KAAM,KAGL,GAAIF,EAAOh4B,OAAS,EACnB,OAAOg4B,EAAOvS,QAIf,QAAqB,IAAVwS,EAAuB,CACjC,MAAMI,EAAgBJ,EAMtB,OAFAA,OAAQ10B,EAED80B,EAIR,OAAON,EAASG,UAQnB9vB,EAAAkwB,cAAA,SAAiCC,EAA2BhtB,GAC3D,OAAO,IAAIrJ,QAAQ,CAACyB,EAASC,KAC5B,MAAMo0B,EAAc,GAEpBO,EAAOlV,GAAG,OAAQxf,GAAQm0B,EAAOr3B,KAAKkD,IACtC00B,EAAOlV,GAAG,QAAShe,GAASzB,EAAOyB,IACnCkzB,EAAOlV,GAAG,MAAO,IAAM1f,EAAQ4H,EAAQysB;AASzC5vB,EAAAowB,uBAAA,SAA0CD,EAA2BhtB,EAAsB6sB,GAC1F,OAAO,IAAIl2B,QAAQ,CAACyB,EAASC,KAC5B,MAAMo0B,EAAc,GAEpB,IAAIS,OAAgDl1B,EAEpDg1B,EAAOlV,GAAG,OAAQxf,IAKjB,IAAK40B,GAAiBT,EAAOh4B,SAAWo4B,EAAW,CAElD,IADAK,EAAgB3B,EAAmBvrB,GAC5BysB,EAAOh4B,QACby4B,EAAcb,MAAMI,EAAOvS,SAK5B,OAFAgT,EAAcb,MAAM/zB,GAEbF,EAAQ80B,GAGZA,EACHA,EAAcb,MAAM/zB,GAEpBm0B,EAAOr3B,KAAKkD,KAId00B,EAAOlV,GAAG,QAAShe,IAClB,IAAIozB,EAGH,OAAO70B,EAAOyB,GAFdozB,EAAcpzB,MAAMA,KAMtBkzB,EAAOlV,GAAG,MAAO,KAChB,IAAIoV,EAOH,OAAO90B,EAAQ4H,EAAQysB,IANvB,KAAOA,EAAOh4B,QACby4B,EAAcb,MAAMI,EAAOvS,SAG5BgT,EAAc/hB,WAWlBtO,EAAAswB,SAAA,SAA4BplB,EAAM/H,GACjC,MAAMgtB,EAASzB,EAAsBvrB,GAIrC,OAFAgtB,EAAO7hB,IAAIpD,GAEJilB,GAMRnwB,EAAAuwB,WAAA,SAA8BrlB,GAC7B,IAAIqY,GAAW,EAEf,MAAO,CACNuM,KAAM,IACDvM,EACI,MAGRA,GAAW,EAEJrY,KAQVlL,EAAAwwB,UAAA,SAAiDL,EAAwCM,EAAkDttB,GAC1I,MAAMlK,EAASy1B,EAAgCvrB,GAM/C,OAJAgtB,EAAOlV,GAAG,OAAQxf,GAAQxC,EAAOu2B,MAAMiB,EAAYh1B,KAAKA,KACxD00B,EAAOlV,GAAG,MAAO,IAAMhiB,EAAOqV,OAC9B6hB,EAAOlV,GAAG,QAAShe,GAAShE,EAAOgE,MAAMwzB,EAAYxzB,MAAQwzB,EAAYxzB,MAAMA,GAASA,IAEjFhE;;AC7dR+G,EAAA0wB,oBAAA,SAAoCC,GACnC,OAAKA,GAAsB,iBAARA,GAGU,IAAtBA,EAAIC,OAAOh5B,QAMnBoI,EAAA6wB,IAAA,SAAoBppB,EAAWqpB,EAAWC,EAAe,KACxD,MAAMJ,EAAM,GAAKlpB,EACX2D,EAAI,CAACulB,GAEX,IAAK,IAAIj5B,EAAIi5B,EAAI/4B,OAAQF,EAAIo5B,EAAGp5B,IAC/B0T,EAAE7S,KAAKw4B,GAGR,OAAO3lB,EAAE4lB,UAAU/1B,KAAK,KAGzB,MAAMg2B,EAAgB,WAsCtB,SAAgBC,EAAuBhxB,GACtC,OAAOA,EAAMJ,QAAQ,kCAAmC,QAkBzD,SAAgBqxB,EAAMC,EAAkBC,GACvC,IAAKD,IAAaC,EACjB,OAAOD,EAGR,MAAME,EAAYD,EAAOz5B,OACzB,GAAkB,IAAd05B,GAAuC,IAApBF,EAASx5B,OAC/B,OAAOw5B,EAGR,IAAIjgB,EAAS,EAEb,KAAOigB,EAASruB,QAAQsuB,EAAQlgB,KAAYA,GAC3CA,GAAkBmgB,EAEnB,OAAOF,EAASp0B,UAAUmU,GAQ3B,SAAgBogB,EAAMH,EAAkBC,GACvC,IAAKD,IAAaC,EACjB,OAAOD,EAGR,MAAME,EAAYD,EAAOz5B,OACxB45B,EAAcJ,EAASx5B,OAExB,GAAkB,IAAd05B,GAAmC,IAAhBE,EACtB,OAAOJ,EAGR,IAAIjgB,EAASqgB,EACZlT,GAAO,EAER,MAEc,KADbA,EAAM8S,EAASr0B,YAAYs0B,EAAQlgB,EAAS,KAC1BmN,EAAMgT,IAAcngB,GAF1B,CAKZ,GAAY,IAARmN,EACH,MAAO,GAERnN,EAASmN,EAGV,OAAO8S,EAASp0B,UAAU,EAAGmU,GAwJ9B,SAAgB/K,EAAQE,EAAWgC,GAClC,OAAIhC,EAAIgC,GACC,EACEhC,EAAIgC,EACP,EAEA,EA+CT,SAAgBmpB,EAAmBp2B,GAClC,OAAOA,GAAI,IAAkBA,GAAI,IAGlC,SAAgBq2B,EAAmBr2B,GAClC,OAAOA,GAAI,IAAkBA,GAAI,GAGlC,SAASs2B,EAAct2B,GACtB,OAAOo2B,EAAmBp2B,IAASq2B,EAAmBr2B,GAOvD,SAASu2B,EAAmBtrB,EAAWgC,EAAWupB,EAASvrB,EAAE1O,QAC5D,IAAK,IAAIF,EAAI,EAAGA,EAAIm6B,EAAQn6B,IAAK,CAChC,MAAMo6B,EAAQxrB,EAAEsJ,WAAWlY,GACrBq6B,EAAQzpB,EAAEsH,WAAWlY,GAE3B,GAAIo6B,IAAUC,EAKd,GAAIJ,EAAcG,IAAUH,EAAcI,GAAQ,CACjD,MAAMC,EAAO/rB,KAAKgsB,IAAIH,EAAQC,GAC9B,GAAa,IAATC,GAAuB,KAATA,EACjB,OAAO,OAMR,GAAIxsB,OAAOuK,aAAa+hB,GAAO5F,gBAAkB1mB,OAAOuK,aAAagiB,GAAO7F,cAC3E,OAAO;AAKV,OAAO,EAoDR,SAAgBgG,EAAgBC,GAC/B,OAAQ,OAAUA,GAAYA,GAAY,MAM3C,SAAgBC,EAAeD,GAC9B,OAAQ,OAAUA,GAAYA,GAAY,MAM3C,SAAgBE,EAAiBC,EAAuBC,GACvD,OAA2CA,EAAe,OAAjDD,EAAgB,OAAW,IAAgC,MAMrE,SAAgBE,EAAiB7B,EAAah5B,EAAawZ,GAC1D,MAAMghB,EAAWxB,EAAI/gB,WAAWuB,GAChC,GAAI+gB,EAAgBC,IAAahhB,EAAS,EAAIxZ,EAAK,CAClD,MAAM86B,EAAe9B,EAAI/gB,WAAWuB,EAAS,GAC7C,GAAIihB,EAAeK,GAClB,OAAOJ,EAAiBF,EAAUM,GAGpC,OAAON,EAMR,SAASO,EAAiB/B,EAAaxf,GACtC,MAAMghB,EAAWxB,EAAI/gB,WAAWuB,EAAS,GACzC,GAAIihB,EAAeD,IAAahhB,EAAS,EAAG,CAC3C,MAAMwhB,EAAehC,EAAI/gB,WAAWuB,EAAS,GAC7C,GAAI+gB,EAAgBS,GACnB,OAAON,EAAiBM,EAAcR,GAGxC,OAAOA,EA8CR,SAASS,EAAyBjC,EAAaxf,GAC9C,MAAM0hB,EAAoBC,EAAkBC,cACtCp7B,EAAMg5B,EAAI/4B,OACVo7B,EAAgB7hB,EAChB8hB,EAAmBT,EAAiB7B,EAAKh5B,EAAKwZ,GAC9C+hB,EAA2BL,EAAkBM,qBAAqBF,GACxE9hB,GAAW8hB,GAAgB,MAAkD,EAAI,EAGjF,IAAIG,EAAoBF,EACxB,KAAO/hB,EAASxZ,GAAK,CACpB,MAAM07B,EAAgBb,EAAiB7B,EAAKh5B,EAAKwZ,GAC3CmiB,EAAwBT,EAAkBM,qBAAqBE,GACrE,GAAIE,EAA8BH,EAAmBE,GACpD,MAEDniB,GAAWkiB,GAAa,MAAkD,EAAI,EAC9ED,EAAoBE,EAErB,MAAM1e,EAAYzD,EAKlB,IAFAA,EAAS6hB,EACTI,EAAoBF,EACb/hB,EAAS,GAAG,CAClB,MAAMqiB,EAAgBd,EAAiB/B,EAAKxf,GACtCsiB,EAAwBZ,EAAkBM,qBAAqBK,GACrE,GAAID,EAA8BE,EAAuBL,GACxD,MAEDjiB,GAAWqiB,GAAa,MAAkD,EAAI,EAC9EJ,EAAoBK,EAGrB,MAAO,CAACtiB,EAAQyD,GAvgBjB5U,EAAA+tB,OAAA,SAAuB7tB,KAAkBoC,GACxC,OAAoB,IAAhBA,EAAK1K,OACDsI,EAEDA,EAAMJ,QAAQmxB,GAAe,SAAUyC,EAAOC,GACpD,MAAMrV,EAAMsV,SAASD,EAAO,IAC5B,OAAOE,MAAMvV,IAAQA,EAAM,GAAKA,GAAOhc,EAAK1K,OAC3C87B,EACApxB,EAAKgc,OAQRte,EAAA8zB,OAAA,SAAuBC,GACtB,OAAOA,EAAKj0B,QAAQ,UAAU,SAAU4zB,GACvC,OAAQA,GACP,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,QACjB,QAAS,OAAOA,OAQnB1zB,EAAAkxB,uBAAAA;AASAlxB,EAAA4wB,KAAA,SAAqBQ,EAAkBC,EAAiB,KAEvD,OAAOE,EADSJ,EAAMC,EAAUC,GACVA,IAQvBrxB,EAAAmxB,MAAAA,EAuBAnxB,EAAAuxB,MAAAA,EA6BAvxB,EAAAg0B,4BAAA,SAA4C9f,GAC3C,OAAOA,EAAQpU,QAAQ,wCAAyC,QAAQA,QAAQ,QAAS,OAG1FE,EAAAi0B,eAAA,SAA+B/f,GAC9B,OAAOA,EAAQpU,QAAQ,MAAO,KAM/BE,EAAAk0B,WAAA,SAA2B9C,EAAkBC,GAC5C,GAAID,EAASx5B,OAASy5B,EAAOz5B,OAC5B,OAAO,EAGR,GAAIw5B,IAAaC,EAChB,OAAO,EAGR,IAAK,IAAI35B,EAAI,EAAGA,EAAI25B,EAAOz5B,OAAQF,IAClC,GAAI05B,EAAS15B,KAAO25B,EAAO35B,GAC1B,OAAO,EAIT,OAAO,GAMRsI,EAAAm0B,SAAA,SAAyB/C,EAAkBC,GAC1C,MAAMW,EAAOZ,EAASx5B,OAASy5B,EAAOz5B,OACtC,OAAIo6B,EAAO,EACHZ,EAASruB,QAAQsuB,EAAQW,KAAUA,EACvB,IAATA,GACHZ,IAAaC,GActBrxB,EAAAo0B,aAAA,SAA6BC,EAAsBC,EAAkB/iB,EAAyB,IAC7F,IAAK8iB,EACJ,MAAM,IAAIj0B,MAAM,yCAEZk0B,IACJD,EAAenD,EAAuBmD,IAEnC9iB,EAAQgjB,YACN,KAAK5K,KAAK0K,EAAaG,OAAO,MAClCH,EAAe,MAAQA,GAEnB,KAAK1K,KAAK0K,EAAaG,OAAOH,EAAaz8B,OAAS,MACxDy8B,GAA8B,QAGhC,IAAII,EAAY,GAchB,OAbIljB,EAAQ+U,SACXmO,GAAa,KAETljB,EAAQmjB,YACZD,GAAa,KAEVljB,EAAQojB,YACXF,GAAa,KAEVljB,EAAQqjB,UACXH,GAAa,KAGP,IAAII,OAAOR,EAAcI,IAGjCz0B,EAAA80B,yBAAA,SAAyCC,GAGxC,MAAsB,MAAlBA,EAAOjV,QAAoC,OAAlBiV,EAAOjV,QAAqC,MAAlBiV,EAAOjV,QAAoC,WAAlBiV,EAAOjV,WAMzEiV,EAAOC,KAAK,KACc,IAArBD,EAAOvqB,YAG3BxK,EAAAi1B,4BAAA,SAA4CC;AAC3C,QAASA,EAAYxB,MAAM,0BAG5B1zB,EAAAm1B,YAAA,SAA4BJ,GAC3B,OAAQA,EAAOzO,OAAS,IAAM,KAC1ByO,EAAOK,WAAa,IAAM,KAC1BL,EAAOJ,UAAY,IAAM,KACxBI,EAAmDH,QAAU,IAAM,KAOzE50B,EAAAq1B,wBAAA,SAAwC1E,GACvC,IAAK,IAAIj5B,EAAI,EAAGC,EAAMg5B,EAAI/4B,OAAQF,EAAIC,EAAKD,IAAK,CAC/C,MAAM49B,EAAS3E,EAAI/gB,WAAWlY,GAC9B,GAAU,KAAN49B,GAAmC,IAANA,EAChC,OAAO59B,EAGT,OAAQ,GAOTsI,EAAAu1B,qBAAA,SAAqC5E,EAAa1pB,EAAgB,EAAGqH,EAAcqiB,EAAI/4B,QACtF,IAAK,IAAIF,EAAIuP,EAAOvP,EAAI4W,EAAK5W,IAAK,CACjC,MAAM49B,EAAS3E,EAAI/gB,WAAWlY,GAC9B,GAAU,KAAN49B,GAAmC,IAANA,EAChC,OAAO3E,EAAI3zB,UAAUiK,EAAOvP,GAG9B,OAAOi5B,EAAI3zB,UAAUiK,EAAOqH,IAO7BtO,EAAAw1B,uBAAA,SAAuC7E,EAAa8E,EAAqB9E,EAAI/4B,OAAS,GACrF,IAAK,IAAIF,EAAI+9B,EAAY/9B,GAAK,EAAGA,IAAK,CACrC,MAAM49B,EAAS3E,EAAI/gB,WAAWlY,GAC9B,GAAU,KAAN49B,GAAmC,IAANA,EAChC,OAAO59B,EAGT,OAAQ,GAGTsI,EAAAoG,QAAAA,EAUApG,EAAA01B,kBAAA,SAAkCpvB,EAAWgC,GAC5C,MAAM3Q,EAAMsO,KAAKoD,IAAI/C,EAAE1O,OAAQ0Q,EAAE1Q,QACjC,IAAK,IAAIF,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAC7B,IAAIo6B,EAAQxrB,EAAEsJ,WAAWlY,GACrBq6B,EAAQzpB,EAAEsH,WAAWlY,GAEzB,GAAIo6B,IAAUC,EAEb,SAGGL,EAAmBI,KACtBA,GAAS,IAGNJ,EAAmBK,KACtBA,GAAS,IAGV,MAAMC,EAAOF,EAAQC,EAErB,GAAa,IAATC,EAIG,OAAIP,EAAmBK,IAAUL,EAAmBM,GAEnDC,EAGA5rB,EAAQE,EAAE4lB,cAAe5jB,EAAE4jB,eAIpC,OAAI5lB,EAAE1O,OAAS0Q,EAAE1Q,QACR,EACE0O,EAAE1O,OAAS0Q,EAAE1Q,OAChB,EAEA,GAIToI,EAAAyxB,mBAAAA,EAIAzxB,EAAA0xB,mBAAAA,EAQA1xB,EAAA21B,iBAAA,SAAiCrvB,EAAWgC,GAC3C,OAAOhC,EAAE1O,SAAW0Q,EAAE1Q,QAAUg6B,EAAmBtrB,EAAGgC;AA+BvDtI,EAAA41B,qBAAA,SAAqCjF,EAAaxH,GACjD,MAAM0M,EAAkB1M,EAAUvxB,OAClC,QAAIuxB,EAAUvxB,OAAS+4B,EAAI/4B,SAIpBg6B,EAAmBjB,EAAKxH,EAAW0M,IAM3C71B,EAAA2K,mBAAA,SAAmCrE,EAAWgC,GAE7C,IAAI5Q,EACHC,EAAMsO,KAAKoD,IAAI/C,EAAE1O,OAAQ0Q,EAAE1Q,QAE5B,IAAKF,EAAI,EAAGA,EAAIC,EAAKD,IACpB,GAAI4O,EAAEsJ,WAAWlY,KAAO4Q,EAAEsH,WAAWlY,GACpC,OAAOA,EAIT,OAAOC,GAMRqI,EAAA81B,mBAAA,SAAmCxvB,EAAWgC,GAE7C,IAAI5Q,EACHC,EAAMsO,KAAKoD,IAAI/C,EAAE1O,OAAQ0Q,EAAE1Q,QAE5B,MAAMm+B,EAAazvB,EAAE1O,OAAS,EACxBo+B,EAAa1tB,EAAE1Q,OAAS,EAE9B,IAAKF,EAAI,EAAGA,EAAIC,EAAKD,IACpB,GAAI4O,EAAEsJ,WAAWmmB,EAAar+B,KAAO4Q,EAAEsH,WAAWomB,EAAat+B,GAC9D,OAAOA,EAIT,OAAOC,GAMRqI,EAAAkyB,gBAAAA,EAOAlyB,EAAAoyB,eAAAA,EAOApyB,EAAAqyB,iBAAAA,EAOAryB,EAAAwyB,iBAAAA,EAyBAxyB,EAAAi2B,eAAA,SAA+BtF,EAAaxf,GAC3C,MAAM0hB,EAAoBC,EAAkBC,cACtCC,EAAgB7hB,EAChBxZ,EAAMg5B,EAAI/4B,OAEVq7B,EAAmBT,EAAiB7B,EAAKh5B,EAAKwZ,GACpDA,GAAW8hB,GAAgB,MAAkD,EAAI,EAEjF,IAAIG,EAAoBP,EAAkBM,qBAAqBF,GAC/D,KAAO9hB,EAASxZ,GAAK,CACpB,MAAM07B,EAAgBb,EAAiB7B,EAAKh5B,EAAKwZ,GAC3CmiB,EAAwBT,EAAkBM,qBAAqBE,GACrE,GAAIE,EAA8BH,EAAmBE,GACpD,MAEDniB,GAAWkiB,GAAa,MAAkD,EAAI,EAC9ED,EAAoBE,EAGrB,OAAQniB,EAAS6hB,GAGlBhzB,EAAAk2B,eAAA,SAA+BvF,EAAaxf,GAC3C,MAAM0hB,EAAoBC,EAAkBC,cACtCC,EAAgB7hB,EAEhB8hB,EAAmBP,EAAiB/B,EAAKxf,GAC/CA,GAAW8hB,GAAgB,MAAkD,EAAI,EAEjF,IAAIG,EAAoBP,EAAkBM,qBAAqBF,GAC/D,KAAO9hB,EAAS,GAAG,CAClB,MAAMqiB,EAAgBd,EAAiB/B,EAAKxf,GACtCsiB,EAAwBZ,EAAkBM,qBAAqBK,GACrE,GAAID,EAA8BE,EAAuBL,GACxD,MAEDjiB,GAAWqiB,GAAa,MAAkD,EAAI,EAC9EJ,EAAoBK,EAGrB,OAAQT,EAAgB7hB,GAwCzBnR,EAAAm2B,wBAAA,SAAwCxF,EAAaxf;AACpD,OAAIA,EAAS,GAAKihB,EAAezB,EAAI/gB,WAAWuB,IACxCyhB,EAAyBjC,EAAKxf,EAAS,GAExCyhB,EAAyBjC,EAAKxf,IAOtCnR,EAAAo2B,WAAA,SAA2BzF,GAC1B,MAAM0F,EAAS1F,EAAI/4B,OAKnB,IAAI0+B,EAAa,EACbC,EAAY,EAChB,KAAOA,EAAYF,GAAQ,CAC1B,MAAMG,EAAYhE,EAAiB7B,EAAK0F,EAAQE,GAChDA,GAAcC,GAAS,MAAkD,EAAI,EAG5EF,GADGE,EAAY,IACD,EACJA,EAAY,KACR,EACJA,EAAY,MACR,EAEA,EAKhB,MAAMvuB,EAAM,IAAI2hB,WAAW0M,GAC3BC,EAAY,EACZ,IAAIE,EAAY,EAChB,KAAOF,EAAYF,GAAQ,CAC1B,MAAMG,EAAYhE,EAAiB7B,EAAK0F,EAAQE,GAChDA,GAAcC,GAAS,MAAkD,EAAI,EAEzEA,EAAY,IACfvuB,EAAIwuB,KAAeD,EACTA,EAAY,MACtBvuB,EAAIwuB,KAAe,KAA2B,KAAZD,KAAoD,EACtFvuB,EAAIwuB,KAAe,KAA2B,GAAZD,KAAoD,GAC5EA,EAAY,OACtBvuB,EAAIwuB,KAAe,KAA2B,MAAZD,KAAoD,GACtFvuB,EAAIwuB,KAAe,KAA2B,KAAZD,KAAoD,EACtFvuB,EAAIwuB,KAAe,KAA2B,GAAZD,KAAoD,IAEtFvuB,EAAIwuB,KAAe,KAA2B,QAAZD,KAAoD,GACtFvuB,EAAIwuB,KAAe,KAA2B,OAAZD,KAAoD,GACtFvuB,EAAIwuB,KAAe,KAA2B,KAAZD,KAAoD,EACtFvuB,EAAIwuB,KAAe,KAA2B,GAAZD,KAAoD,GAIxF,OAAOvuB,GAORjI,EAAA02B,WAAA,SAA2Blc,GAG1B,MAAM7iB,EAAM6iB,EAAOmc,WACbl/B,EAAmB,GACzB,IAAI0Z,EAAS,EACb,KAAOA,EAASxZ,GAAK,CACpB,MAAMi/B,EAAKpc,EAAOrJ,GAClB,IAAIqlB,EA2BJ,IAxBCA,EAFGI,GAAM,KAAczlB,EAAS,EAAIxZ,GAGb,EAAnB6iB,EAAOrJ,OAA2B,KAAQ,GACrB,GAAnBqJ,EAAOrJ,OAA2B,KAAQ,GACvB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,GACtB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,EAErCylB,GAAM,KAAczlB,EAAS,EAAIxZ,GAGpB,GAAnB6iB,EAAOrJ,OAA2B,KAAQ,GACrB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,GACtB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,EAErCylB,GAAM,KAAczlB,EAAS,EAAIxZ,GAGpB,GAAnB6iB,EAAOrJ,OAA2B,IAAO,GACpB,GAAnBqJ,EAAOrJ,OAA2B,IAAO,EAInCqJ,EAAOrJ,OAGF,GAAKqlB,GAAa,OAAYA,GAAa,OAAUA,GAAa,MAEnF/+B,EAAOc,KAAKiN,OAAOuK,aAAaymB,SAC1B,GAAIA,GAAa,OAAYA,GAAa,QAAU,CAE1D,MAAMK,EAASL,EAAY,MACrBM,EAAK,QAAoB,QAATD,KAAqC,IACrDE,EAAK,QAAoB,KAATF,KAAqC;CAC3Dp/B,EAAOc,KAAKiN,OAAOuK,aAAa+mB,IAChCr/B,EAAOc,KAAKiN,OAAOuK,aAAagnB,SAGhCt/B,EAAOc,KAAKiN,OAAOuK,aAAa,QAIlC,OAAOtY,EAAOwD,KAAK,KAMpB,MAAM+7B,EAAe,2eAKrBh3B,EAAAi3B,YAAA,SAA4BtG,GAC3B,OAAOqG,EAAarN,KAAKgH,IAM1B,MAAMuG,EAAiB,0MAEvBl3B,EAAAm3B,cAAA,SAA8BxG,GAC7B,OAAOuG,EAAevN,KAAKgH,IAG5B,MAAMyG,EAAiB,uBAiBvB,SAAgBC,EAAqBlF;AAwCpC,OADAA,GAAYA,IAEE,OAAUA,GAAY,OAC/BA,GAAY,OAAUA,GAAY,OAClCA,GAAY,OAAUA,GAAY,MAxDxCnyB,EAAAs3B,aAAA,SAA6B3G,GAC5B,OAAOyG,EAAezN,KAAKgH,IAG5B3wB,EAAAu3B,2BAAA,SAA2C5G,GAC1C,IAAK,IAAIj5B,EAAI,EAAGC,EAAMg5B,EAAI/4B,OAAQF,EAAIC,EAAKD,IAC1C,GAAI2/B,EAAqB1G,EAAI/gB,WAAWlY,IACvC,OAAO,EAGT,OAAO,GAGRsI,EAAAq3B,qBAAAA,EAmDAr3B,EAAAw3B,iBAAA,SAAiC3rB,GAChC,OACEA,GAAK,QAAWA,GAAK,QAAaA,GAAK,MAAQA,GAAK,OAAWA,GAAK,QAAUA,GAAK,QAChFA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QACpFA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAQ1F7L,EAAAy3B,KAAA,SAAqBtoB,EAAc1H,GAClC,GAAI0H,EAAKvX,OAAS6P,EACjB,OAAO0H,EAGR,MAAMuoB,EAAK,MACX,IAAIhgC,EAAI,EACR,KAAOggC,EAAG/N,KAAKxa,MACVA,EAAKvX,OAAS8/B,EAAGltB,UAAY/C,IAIjC/P,EAAIggC,EAAGltB,UACPktB,EAAGltB,WAAa,EAGjB,OAAO2E,EAAKnS,UAAUtF,GAAGoI,QAAQ,MAAO,KAKzC,MAAM63B,EAAK,kBACLC,EAAc,cACdC,EAAY,aAgBlB,SAAgBC,EAAkBnH,GACjC,SAAUA,GAAOA,EAAI/4B,OAAS,GAAsB,QAAjB+4B,EAAI/gB,WAAW,IAyGnD,SAAgB2jB,EAA8BwE,EAA+BC;AAI5E,OAAc,IAAVD,EAEe,IAAVC,GAAqD,IAAVA,GAOtC,IAAVD,GACW,IAAVC,KAIS,IAAVD,GAAsD,IAAVA,GAAiD,IAAVA,IAGzE,IAAVC,GAAsD,IAAVA,GAAiD,IAAVA,IAQzE,IAAVD,GACW,IAAVC,GAAgD,IAAVA,GAAgD,KAAVA,GAAiD,KAAVA,MAI1G,KAAVD,GAAiD,IAAVA,GAC5B,IAAVC,GAAgD,KAAVA,MAI7B,KAAVD,GAAkD,KAAVA,GAC7B,KAAVC,KAOS,IAAVA,GAAqD,KAAVA,IAQjC,IAAVA,IAGU,IAAVD,KAMU,KAAVA,GAAkD,KAAVC,KAO9B,IAAVD,GAAiE,IAAVC,WA/L5Dh4B,EAAAi4B,sBAAA,SAAsCtH,GAOrC,OANIA,IAGHA,GADAA,GADAA,EAAMA,EAAI7wB,QAAQ63B,EAAI,KACZ73B,QAAQ83B,EAAa,KACrB93B,QAAQ+3B,EAAW,KAGvBlH,GAKK3wB,EAAAk4B,mBAAqB1yB,OAAOuK,aAAY,OAErD/P,EAAA83B,kBAAAA,EAIA93B,EAAAm4B,aAAA,SAA6BxH,GAC5B,OAAOmH,EAAkBnH,GAAOA,EAAIyH,OAAO,GAAKzH,GAGjD3wB,EAAAq4B,SAAA,SAAyB1H,GACxB,OAAO2H,KAAKC,mBAAmB5H,KAGhC3wB,EAAAw4B,OAAA,SAAuBC,EAAWh4B,GACjC,IAAIhJ,EAAS,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAI+I,EAAO/I,IAC1BD,GAAUghC,EAEX,OAAOhhC,GAORuI,EAAA04B,cAAA,SAA8Bz/B,EAAgB0/B,GAC7C,IAAK1/B,IAAW0/B,EACf,OAAO,EAGR,GAAI1/B,EAAOrB,OAAS+gC,EAAM/gC,OACzB,OAAO,EAGR,MAAMghC,EAAWD,EAAM/gC,OACjBihC,EAAc5/B,EAAOizB,cAE3B,IAAIpvB,EAAQ,EACRC,GAAe,EACnB,KAAOD,EAAQ87B,GAAU,CACxB,MAAM71B,EAAU81B,EAAY91B,QAAQ41B,EAAM77B,GAAQC,EAAc,GAChE,GAAIgG,EAAU,EACb,OAAO,EAGRhG,EAAcgG,EAEdjG,IAGD,OAAO,GAGRkD,EAAA84B,2BAAA,SAA2C7/B,EAAgB8/B,GAAqB,GAC/E,QAAK9/B,IAID8/B,IACH9/B,EAASA,EAAO6G,QAAQ,OAAQ,KAG1B7G,EAAOizB,gBAAkBjzB,IAGjC+G,EAAAg5B,qBAAA,SAAqCrI,GACpC,OAAOA,EAAI6D,OAAO,GAAGyE,cAAgBtI,EAAIr3B,MAAM;AAGhD0G,EAAAk5B,UAAA,SAA0BvI,EAAalpB,EAAI,GAC1C,GAAU,IAANA,EACH,MAAO,GAGR,IAAI6W,GAAO,EACX,GACCA,EAAMqS,EAAI5tB,QAAQ,KAAMub,EAAM,GAC9B7W,UACQA,EAAI,GAAK6W,GAAO,GAEzB,OAAOA,GAAO,EACbqS,EAAIyH,OAAO,EAAG9Z,GACdqS,GAMF3wB,EAAAm5B,iBAAA,SAAiC1xB,GAKhC,OAFAA,GAAQ,IAFY,GAKZjC,OAAOuK,aAAa,GAAatI,GAGlCjC,OAAOuK,aAAa,GAAatI,EARpB,KAarBzH,EAAAmzB,qBAAA,SAAqCqD,GAEpC,OAD0B1D,EAAkBC,cACnBI,qBAAqBqD,IAG/Cx2B,EAAAuzB,8BAAAA,EAgFA,SAAkB6F,GACjBA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,GAAA,GAAA,KACAA,EAAAA,EAAA,GAAA,GAAA,KACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,EAAA,GAAA,IACAA,EAAAA,EAAA,EAAA,GAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,sBAAA,IAAA,wBAfD,CAAkBp5B,EAAAo5B,oBAAAp5B,EAAAo5B,kBAAiB,KAkBnC,IAAAtG,EAAA,MAAA,MAAMA,EAYL3xB;AACCC,KAAKi4B,MAyCC58B,KAAKC,MAAM;CAnDXyE,qBAIN,OAHK2xB,EAAkBwG,YACtBxG,EAAkBwG,UAAY,IAAIxG,GAE5BA,EAAkBwG,UASnBn4B,qBAAqBq1B,GAE3B,GAAIA,EAAY,GACf,OAAa,KAATA,EACH,EAEY,KAATA,EACH,EAED,EAGD,GAAIA,EAAY,IACf,OAAA,EAGD,MAAM/6B,EAAO2F,KAAKi4B,MACZE,EAAY99B,EAAK7D,OAAS,EAChC,IAAI4hC,EAAY,EAChB,KAAOA,GAAaD,GACnB,GAAI/C,EAAY/6B,EAAK,EAAI+9B,GAExBA,GAAY,MACN,CAAA,KAAIhD,EAAY/6B,EAAK,EAAI+9B,EAAY,IAK3C,OAAO/9B,EAAK,EAAI+9B,EAAY,GAH5BA,EAAY,EAAIA,EAAY,EAO9B,OAAA,GAEF,OAhDgB1G,EAAAwG,UAAsC,KAgDtDxG,GAlDA,6XCr/BA,MAAM2G,EAA+B,oBAAXC,OACpBC,EAAyC,oBAAhBC,YACzBC,EAAyC,oBAAhBC,YAE/B,IAAIC,EACAC,EAEJ,MAAaC,EAsDZ94B,YAAoBqZ,GACnBpZ,KAAKoZ,OAASA,EACdpZ,KAAKu1B,WAAav1B,KAAKoZ,OAAOmc,WAtD/Bx1B,aAAaw1B,GACZ,OACQ,IAAIsD,EADRR,EACiBC,OAAOQ,YAAYvD,GAEnB,IAAI/M,WAAW+M,IAIrCx1B,YAAYwpB;AAMX,OALI8O,IAAeC,OAAOS,SAASxP,KAGlCA,EAAS+O,OAAO3gC,KAAK4xB,EAAOnQ,OAAQmQ,EAAOyP,WAAYzP,EAAOgM,aAExD,IAAIsD,EAAStP,GAGrBxpB,kBAAkB2e,GACjB,OAAI2Z,EACI,IAAIQ,EAASP,OAAO3gC,KAAK+mB,IACtB6Z,GACLI,IACJA,EAAc,IAAIH,aAEZ,IAAIK,EAASF,EAAYM,OAAOva,KAEhC,IAAIma,EAASK,EAAQlE,WAAWtW,IAIzC3e,cAAcqd,EAAqB+b,GAClC,QAA2B,IAAhBA,EAA6B,CACvCA,EAAc,EACd,IAAK,IAAI7iC,EAAI,EAAGC,EAAM6mB,EAAQ5mB,OAAQF,EAAIC,EAAKD,IAC9C6iC,GAAe/b,EAAQ9mB,GAAGi/B,WAI5B,MAAM3I,EAAMiM,EAASO,MAAMD,GAC3B,IAAIppB,EAAS,EACb,IAAK,IAAIzZ,EAAI,EAAGC,EAAM6mB,EAAQ5mB,OAAQF,EAAIC,EAAKD,IAAK,CACnD,MAAMqJ,EAAUyd,EAAQ9mB,GACxBs2B,EAAIxsB,IAAIT,EAASoQ,GACjBA,GAAUpQ,EAAQ41B,WAGnB,OAAO3I,EAWR7sB,WACC,OAAIs4B,EACIr4B,KAAKoZ,OAAOuB,WACT8d,GACLG,IACJA,EAAc,IAAIF,aAEZE,EAAYS,OAAOr5B,KAAKoZ,SAExB8f,EAAQ5D,WAAWt1B,KAAKoZ,QAIjCrZ,MAAM8F,EAAgBqH,GAIrB,OAAO,IAAI2rB,EAAS74B,KAAKoZ,OAAOkgB,SAASzzB,EAAwBqH,IAKlEnN,IAAIyE,EAA8BuL,GAC7BvL,aAAiBq0B,EACpB74B,KAAKoZ,OAAOhZ,IAAIoE,EAAM4U,OAAQrJ,GAE9B/P,KAAKoZ,OAAOhZ,IAAIoE,EAAOuL,GAIzBhQ,aAAagQ,GACZ,OAAOwpB,EAAav5B,KAAKoZ,OAAQrJ,GAGlChQ,cAAcjB,EAAeiR,GAC5BypB,EAAcx5B,KAAKoZ,OAAQta,EAAOiR,GAGnChQ,aAAagQ,GACZ,OAAO0pB,EAAaz5B,KAAKoZ,OAAQrJ,GAGlChQ,cAAcjB,EAAeiR,GAC5B2pB,EAAc15B,KAAKoZ,OAAQta,EAAOiR,GAGnChQ,UAAUgQ,GACT,OAAO4pB,EAAU35B,KAAKoZ,OAAQrJ,GAG/BhQ,WAAWjB,EAAeiR,GACzB6pB,EAAW55B,KAAKoZ,OAAQta,EAAOiR,IAiBjC,SAAgBwpB,EAAa7a,EAAoB3O,GAChD,OACC2O,EAAO3O,GAAU,GAAK,GACC,MAArB2O,EAAO3O,EAAS,GACK,IAArB2O,EAAO3O,EAAS,GAChB2O,EAAO3O,EAAS,GAIpB,SAAgBypB,EAAcK,EAAyB/6B,EAAeiR,GACrE8pB,EAAY9pB,EAAS,GAAKjR,EAC1BA,KAAkB,EAClB+6B,EAAY9pB,EAAS,GAAKjR,EAC1BA,KAAkB,EAClB+6B,EAAY9pB,EAAS,GAAKjR,EAC1BA,KAAkB,EAClB+6B,EAAY9pB,GAAUjR;AAGvB,SAAgB26B,EAAa/a,EAAoB3O,GAChD,OACG2O,EAAO3O,EAAS,IAAM,IAAO,EAC7B2O,EAAO3O,EAAS,IAAM,IAAO,EAC7B2O,EAAO3O,EAAS,IAAM,KAAQ,EAC9B2O,EAAO3O,EAAS,IAAM,KAAQ,EAIlC,SAAgB2pB,EAAcG,EAAyB/6B,EAAeiR,GACrE8pB,EAAY9pB,EAAS,GAAc,IAARjR,EAC3BA,KAAkB,EAClB+6B,EAAY9pB,EAAS,GAAc,IAARjR,EAC3BA,KAAkB,EAClB+6B,EAAY9pB,EAAS,GAAc,IAARjR,EAC3BA,KAAkB,EAClB+6B,EAAY9pB,EAAS,GAAc,IAARjR,EAG5B,SAAgB66B,EAAUjb,EAAoB3O,GAC7C,OAAO2O,EAAO3O,GAGf,SAAgB6pB,EAAWC,EAAyB/6B,EAAeiR,GAClE8pB,EAAY9pB,GAAUjR,EA1KvBF,EAAAi6B,SAAAA,EAkHAj6B,EAAAk7B,aAAA,SAA6Bpb,EAAoB3O,GAChD,OACG2O,EAAO3O,EAAS,IAAM,IAAO,EAC7B2O,EAAO3O,EAAS,IAAM,IAAO,GAIjCnR,EAAAm7B,cAAA,SAA8BF,EAAyB/6B,EAAeiR,GACrE8pB,EAAY9pB,EAAS,GAAc,IAARjR,EAC3BA,KAAkB,EAClB+6B,EAAY9pB,EAAS,GAAc,IAARjR,GAG5BF,EAAA26B,aAAAA,EASA36B,EAAA46B,cAAAA,EAUA56B,EAAA66B,aAAAA,EASA76B,EAAA86B,cAAAA,EAUA96B,EAAA+6B,UAAAA,EAIA/6B,EAAAg7B,WAAAA,EAUAh7B,EAAAo7B,iBAAA,SAAiCzL,GAChC,OAAO0L,EAAQ3L,gBAA0BC,EAAUC,GAAUqK,EAASpvB,OAAO+kB,KAG9E5vB,EAAAs7B,iBAAA,SAAiC9gB,GAChC,OAAO6gB,EAAQ9K,WAAqB/V,IAGrCxa,EAAAu7B,eAAA,SAA+BpL,GAC9B,OAAOkL,EAAQnL,cAAwBC,EAAQP,GAAUqK,EAASpvB,OAAO+kB,KAG1E5vB,EAAAw7B,eAAA,SAA+BhhB,GAC9B,OAAO6gB,EAAQ/K,SAAmB9V,EAAQoV,GAAUqK,EAASpvB,OAAO+kB,KAGrE5vB,EAAAy7B,6BAAA,SAA6CtL,GAC5C,OAAOkL,EAAQ7K,UAAyCL,EAAQ,CAAE10B,KAAMA,GAAwB,iBAATA,EAAoBw+B,EAASyB,WAAWjgC,GAAQw+B,EAAS0B,KAAKlgC,IAASm0B,GAAUqK,EAASpvB,OAAO+kB,KAGzL5vB,EAAA47B,yBAAA,WACC,OAAOP,EAAQ3M,mBAA6BkB,GAAUqK,EAASpvB,OAAO+kB;CC/MvE,SAAgB7E,EAAgB1vB,GAC/B,OAAW,KAAJA,GAA+B,KAAJA,sOADnC2E,EAAA+qB,gBAAAA,EASA/qB,EAAA67B,UAAA,SAA0BC,GACzB,OAAOA,EAAOh8B,QAAQ,SAAUi8B,EAAA7N,MAAMla,MAQvChU,EAAAg8B,QAAA,SAAwBviC,EAAcua,EAAc+nB,EAAA7N,MAAMla,KAEzD,IAAKva,EACJ,MAAO,GAGR,MAAM9B,EAAM8B,EAAK7B,OACXqkC,EAAcxiC,EAAKmW,WAAW,GACpC,GAAImb,EAAgBkR,GAAc,CACjC,GAAIlR,EAAgBtxB,EAAKmW,WAAW,MAG9Bmb,EAAgBtxB,EAAKmW,WAAW,IAAK,CACzC,IAAIP,EAAM,EACV,MAAMpI,EAAQoI,EACd,KAAOA,EAAM1X,IACRozB,EAAgBtxB,EAAKmW,WAAWP,IADnBA,KAKlB,GAAIpI,IAAUoI,IAAQ0b,EAAgBtxB,EAAKmW,WAAWP,EAAM,IAE3D,IADAA,GAAO,EACAA,EAAM1X,EAAK0X,IACjB,GAAI0b,EAAgBtxB,EAAKmW,WAAWP,IACnC,OAAO5V,EAAKH,MAAM,EAAG+V,EAAM,GACzBvP,QAAQ,SAAUkU,GASzB,OAAOA,EAED,GAAIkoB,EAAqBD,IAGT,KAAlBxiC,EAAKmW,WAAW,GACnB,OAAImb,EAAgBtxB,EAAKmW,WAAW,IAG5BnW,EAAKH,MAAM,EAAG,GAAK0a,EAInBva,EAAKH,MAAM,EAAG,GAQxB,IAAI+V,EAAM5V,EAAKsJ,QAAQ,OACvB,IAAa,IAATsM,EAEH,IADAA,GAAO,EACAA,EAAM1X,EAAK0X,IACjB,GAAI0b,EAAgBtxB,EAAKmW,WAAWP,IACnC,OAAO5V,EAAKH,MAAM,EAAG+V,EAAM,GAK9B,MAAO,IAURrP,EAAAm8B,MAAA,SAAsB1iC,GACrB,IAAKwwB,EAAA/B,UAEJ,OAAO,EAGR,IAAKzuB,GAAQA,EAAK7B,OAAS,EAE1B,OAAO,EAGR,IAAIyD,EAAO5B,EAAKmW,WAAW,GAC3B,GAAQ,KAAJvU,EACH,OAAO,EAGR,GAAQ,MADRA,EAAO5B,EAAKmW,WAAW,IAEtB,OAAO,EAER,IAAIP,EAAM,EACV,MAAMpI,EAAQoI;CACd,KAAOA,EAAM5V,EAAK7B,QAET,MADRyD,EAAO5B,EAAKmW,WAAWP,IADEA,KAM1B,OAAIpI,IAAUoI,IAGdhU,EAAO5B,EAAKmW,WAAWP,EAAM,IACzBwkB,MAAMx4B,IAAa,KAAJA,IAOpB,MAAM+gC,EAA6B,mBAC7BC,EAA0B,SAC1BC,EAA0B,iDAuFhC,SAAgBJ,EAAqBK,GACpC,OAAOA,GAAK,IAAkBA,GAAK,IAAkBA,GAAK,IAAkBA,GAAK,IAvFlFv8B,EAAAw8B,gBAAA,SAAgClkC,EAAiCmkC,EAAuBxS,EAAA/B,WACvF,MAAMwU,EAAmBD,EAAcL,EAA6BC,EAEpE,SAAK/jC,GAAwB,IAAhBA,EAAKV,QAAgB,QAAQ+xB,KAAKrxB,MAI/CokC,EAAiBlyB,UAAY,GACzBkyB,EAAiB/S,KAAKrxB,OAItBmkC,IAAeH,EAAwB3S,KAAKrxB,MAInC,MAATA,GAAyB,OAATA,MAIhBmkC,GAAyC,MAA1BnkC,EAAKA,EAAKV,OAAS,QAIlC6kC,GAAenkC,EAAKV,SAAWU,EAAKs4B,OAAOh5B,WAI3CU,EAAKV,OAAS,WAOnBoI,EAAA28B,QAAA,SAAwBC,EAAeC,EAAezH,GACrD,MAAM0H,EAAkBF,IAAUC,EAClC,OAAKzH,GAAc0H,EACXA,KAGHF,IAAUC,IAIRE,EAAApH,iBAAiBiH,EAAOC,IAGhC78B,EAAAg9B,gBAAA,SAAgCvjC,EAAc0vB,EAAmBiM,EAAsBhK,EAAY2Q,EAAA/nB,KAClG,GAAIva,IAAS0vB,EACZ,OAAO,EAGR,IAAK1vB,IAAS0vB,EACb,OAAO,EAGR,GAAIA,EAAUvxB,OAAS6B,EAAK7B,OAC3B,OAAO,EAGR,GAAIw9B,EAAY,CAEf,IADmB2H,EAAAnH,qBAAqBn8B,EAAM0vB,GAE7C,OAAO,EAGR,GAAIA,EAAUvxB,SAAW6B,EAAK7B,OAC7B,OAAO,EAGR,IAAIqlC,EAAY9T,EAAUvxB,OAK1B,OAJIuxB,EAAUqL,OAAOrL,EAAUvxB,OAAS,KAAOwzB,GAC9C6R,IAGMxjC,EAAK+6B,OAAOyI,KAAe7R,EAOnC,OAJIjC,EAAUqL,OAAOrL,EAAUvxB,OAAS,KAAOwzB,IAC9CjC,GAAaiC,GAGqB,IAA5B3xB,EAAKsJ,QAAQomB,IAGrBnpB,EAAAk8B,qBAAAA,EAIAl8B,EAAAk9B,iBAAA,SAAiC/T,EAAmBa,GAiCnD,OA9BIC,EAAA/B,WAAaiB,EAAUgL,SAAS,OACnChL,GAAa4S,EAAA/nB;AAIT+nB,EAAA1P,WAAWlD,KACfA,EAAY4S,EAAA9gC,KAAK+uB,EAAKb,IAIvBA,EAAY4S,EAAAnP,UAAUzD,GAGlBc,EAAA/B,WACHiB,EAAY4T,EAAAxL,MAAMpI,EAAW4S,EAAA/nB,MAGfmgB,SAAS,OACtBhL,GAAa4S,EAAA/nB,MAIdmV,EAAY4T,EAAAxL,MAAMpI,EAAW4S,EAAA/nB,QAI5BmV,EAAY4S,EAAA/nB,KAIPmV,GAGRnpB,EAAAm9B,oBAAA,SAAoC1jC,GACnC,MAAM2jC,EAAiBrB,EAAAnP,UAAUnzB,GAEjC,OAAIwwB,EAAA/B,YACCzuB,EAAK7B,OAAS,KAIXskC,EAAqBkB,EAAextB,WAAW,KACtB,KAA5BwtB,EAAextB,WAAW,KACT,IAAhBnW,EAAK7B,QAA4C,KAA5BwlC,EAAextB,WAAW,KAG9CwtB,IAAmBrB,EAAA7N,MAAMla,KAGjChU,EAAAq9B,YAAA,SAA4B5jC,EAAc0vB,EAAmBiM,GAC5D,OAAIjM,EAAUvxB,OAAS6B,EAAK7B,QACnB,EAGL6B,IAAS0vB,EACL,GAGJiM,IACH37B,EAAOA,EAAKyyB,cACZ/C,EAAYA,EAAU+C,eAGhBzyB,EAAKsJ,QAAQomB,0DC3RrB,SAAgBmU,EAAS3M,GACxB,MAAuB,iBAARA,EAehB,SAAgB4M,EAAS1zB,GAIxB,QAAsB,iBAARA,GACF,OAARA,GACCC,MAAMC,QAAQF,IACbA,aAAegrB,QACfhrB,aAAerR,MAqBtB,SAAgBglC,EAAY3zB,GAC3B,YAAuB,IAARA,EAMhB,SAAgB4zB,EAAkB5zB,GACjC,OAAQ2zB,EAAY3zB,IAAgB,OAARA;mWA5D7B7J,EAAA+J,QAAA,SAAwBnE,GACvB,OAAOkE,MAAMC,QAAQnE,IAMtB5F,EAAAs9B,SAAAA,EAOAt9B,EAAA09B,cAAA,SAA8Bx9B,GAC7B,OAAO4J,MAAMC,QAAQ7J,IAAkBA,EAAO8uB,MAAMrvB,GAAQ29B,EAAS39B,KAQtEK,EAAAu9B,SAAAA,EAeAv9B,EAAA29B,SAAA,SAAyB9zB,GACxB,MAAuB,iBAARA,IAAqBgqB,MAAMhqB,IAM3C7J,EAAA49B,UAAA,SAA0B/zB,GACzB,OAAgB,IAARA,IAAwB,IAARA,GAMzB7J,EAAAw9B,YAAAA,EAOAx9B,EAAAy9B,kBAAAA,EAKAz9B,EAAA69B,WAAA,SAA2BC,EAAgBlqB,GAC1C,IAAKkqB,EACJ,MAAM,IAAI19B,MAAMwT,EAAO,8BAA8BA,KAAU,oBAOjE5T,EAAA+9B,gBAAA,SAAmChzB,GAClC,GAAI0yB,EAAkB1yB,GACrB,MAAM,IAAI3K,MAAM,mDAGjB,OAAO2K,GASR/K,EAAAg+B,iBAAA,YAAoC17B,GACnC,MAAM7K,EAAS,GAEf,IAAK,IAAIC,EAAI,EAAGA,EAAI4K,EAAK1K,OAAQF,IAAK,CACrC,MAAMqT,EAAMzI,EAAK5K;CAEjB,GAAI+lC,EAAkB1yB,GACrB,MAAM,IAAI3K,MAAM,uCAAuC1I,0BAGxDD,EAAOc,KAAKwS,GAGb,OAAOtT,GAGR,MAAM4I,EAAiBpB,OAAOqB,UAAUD,eAsBxC,SAAgB49B,EAAWp0B,GAC1B,MAAuB,mBAARA,EAmBhB,SAAgBq0B,EAAmBnzB,EAAUozB,GAE5C,GAAIb,EAASa,IACZ,UAAWpzB,IAAQozB,EAClB,MAAM,IAAI/9B,MAAM,8CAA8C+9B,UAEzD,GAAIF,EAAWE,GAAa,CAClC,IACC,GAAIpzB,aAAeozB,EAClB,OAEA,MAAAloB,IAGF,IAAKwnB,EAAkB1yB,IAAQA,EAAIqzB,cAAgBD,EAClD,OAED,GAA0B,IAAtBA,EAAWvmC,SAAoD,IAApCumC,EAAW59B,UAAKpF,EAAW4P,GACzD,OAED,MAAM,IAAI3K,MAAM,8IAIlB,SAAgBi+B,EAAoBx0B,GACnC,IAAI2O,EAAgB,GAChB8lB,EAAQr/B,OAAOs/B,eAAe10B,GAClC,KAAO5K,OAAOqB,YAAcg+B,GAC3B9lB,EAAMA,EAAI3N,OAAO5L,OAAO4D,oBAAoBy7B,IAC5CA,EAAQr/B,OAAOs/B,eAAeD,GAE/B,OAAO9lB,EApERxY,EAAAw+B,cAAA,SAA8B30B,GAC7B,IAAK0zB,EAAS1zB,GACb,OAAO,EAGR,IAAK,IAAIhK,KAAOgK,EACf,GAAIxJ,EAAeE,KAAKsJ,EAAKhK,GAC5B,OAAO,EAIT,OAAO,GAMRG,EAAAi+B,WAAAA,EAOAj+B,EAAAy+B,aAAA,YAAgCC,GAC/B,OAAOA,EAAQ9mC,OAAS,GAAK8mC,EAAQ1P,MAAMiP,IAK5Cj+B,EAAA2+B,oBAAA,SAAoCr8B,EAAas8B,GAChD,MAAMjnC,EAAMsO,KAAKoD,IAAI/G,EAAK1K,OAAQgnC,EAAYhnC,QAC9C,IAAK,IAAIF,EAAI,EAAGA,EAAIC,EAAKD,IACxBwmC,EAAmB57B,EAAK5K,GAAIknC,EAAYlnC;AAI1CsI,EAAAk+B,mBAAAA,EAwBAl+B,EAAAq+B,oBAAAA,EAUAr+B,EAAA6+B,kBAAA,SAAkCh1B,GACjC,MAAMi1B,EAAoB,GAC1B,IAAK,MAAMzpB,KAAQgpB,EAAoBx0B,GACJ,mBAAtBA,EAAYwL,IACvBypB,EAAQvmC,KAAK8c,GAGf,OAAOypB,GAGR9+B,EAAA++B,kBAAA,SAAoDC,EAAuBC,GAC1E,MAAMC,EAAqBC,IACnB,WACN,MAAM78B,EAAOwH,MAAMxJ,UAAUhH,MAAMiH,KAAKsM,UAAW,GACnD,OAAOoyB,EAAOE,EAAQ78B,KAIxB,IAAI7K,EAAS,GACb,IAAK,MAAM2nC,KAAcJ,EAClBvnC,EAAQ2nC,GAAcF,EAAkBE,GAE/C,OAAO3nC,GAMRuI,EAAAq/B,oBAAA,SAAuCxzB,GACtC,OAAa,OAANA,OAAa1Q,EAAY0Q,GAMjC7L,EAAAs/B,oBAAA,SAAuCzzB,GACtC,YAAoB,IAANA,EAAoB,KAAOA,mOC1N1C7L,EAAAu/B,UAAA,SAAgBA,EAAa11B,GAC5B,IAAKA,GAAsB,iBAARA,EAClB,OAAOA,EAER,GAAIA,aAAegrB,OAElB,OAAOhrB,EAER,MAAMpS,EAAcqS,MAAMC,QAAQF,GAAO,GAAK,GAQ9C,OAPA5K,OAAOC,KAAU2K,GAAKlJ,QAASd,IACpBgK,EAAKhK,IAAmC,iBAAdgK,EAAKhK,GACxCpI,EAAOoI,GAAO0/B,EAAgB11B,EAAKhK,IAEnCpI,EAAOoI,GAAagK,EAAKhK,KAGpBpI,GAGRuI,EAAAw/B,WAAA,SAA8B31B,GAC7B,IAAKA,GAAsB,iBAARA,EAClB,OAAOA,EAER,MAAM3F,EAAe,CAAC2F,GACtB,KAAO3F,EAAMtM,OAAS,GAAG,CACxB,MAAMiS,EAAM3F,EAAMmZ,QAClBpe,OAAO8X,OAAOlN;CACd,IAAK,MAAMhK,KAAOgK,EACjB,GAAI41B,EAAgBl/B,KAAKsJ,EAAKhK,GAAM,CACnC,MAAMwV,EAAOxL,EAAIhK,GACG,iBAATwV,GAAsBpW,OAAOgf,SAAS5I,IAChDnR,EAAM3L,KAAK8c,IAKf,OAAOxL,GAGR,MAAM41B,EAAkBxgC,OAAOqB,UAAUD,eAiFzC,SAAgB6H,EAAOC,EAAUC,GAChC,GAAID,IAAQC,EACX,OAAO,EAER,GAAID,MAAAA,GAAAA,MAAqCC,EACxC,OAAO,EAER,UAAWD,UAAeC,EACzB,OAAO,EAER,GAAmB,iBAARD,EACV,OAAO,EAER,GAAK2B,MAAMC,QAAQ5B,KAAW2B,MAAMC,QAAQ3B,GAC3C,OAAO,EAGR,IAAI1Q,EACAmI,EAEJ,GAAIiK,MAAMC,QAAQ5B,GAAM,CACvB,GAAIA,EAAIvQ,SAAWwQ,EAAMxQ,OACxB,OAAO,EAER,IAAKF,EAAI,EAAGA,EAAIyQ,EAAIvQ,OAAQF,IAC3B,IAAKwQ,EAAOC,EAAIzQ,GAAI0Q,EAAM1Q,IACzB,OAAO,MAGH,CACN,MAAMgoC,EAAoB,GAE1B,IAAK7/B,KAAOsI,EACXu3B,EAAQnnC,KAAKsH,GAEd6/B,EAAQ12B,OACR,MAAM22B,EAAsB,GAC5B,IAAK9/B,KAAOuI,EACXu3B,EAAUpnC,KAAKsH,GAGhB,GADA8/B,EAAU32B,QACLd,EAAOw3B,EAASC,GACpB,OAAO,EAER,IAAKjoC,EAAI,EAAGA,EAAIgoC,EAAQ9nC,OAAQF,IAC/B,IAAKwQ,EAAOC,EAAIu3B,EAAQhoC,IAAK0Q,EAAMs3B,EAAQhoC,KAC1C,OAAO,EAIV,OAAO,EAjIRsI,EAAA4/B,eAAA,SAA+B/1B,EAAUg2B,GACxC,OAGD,SAASC,EAAgBj2B,EAAUg2B,EAA6Bz1B,GAC/D,GAAI21B,EAAAtC,kBAAkB5zB,GACrB,OAAOA,EAGR,MAAMm2B,EAAUH,EAAQh2B,GACxB,QAAuB,IAAZm2B,EACV,OAAOA,EAGR,GAAID,EAAAh2B,QAAQF,GAAM,CACjB,MAAMo2B,EAAY,GAClB,IAAK,MAAM/lC,KAAK2P,EACfo2B,EAAG1nC,KAAKunC,EAAgB5lC,EAAG2lC,EAASz1B,IAErC,OAAO61B,EAGR,GAAIF,EAAAxC,SAAS1zB,GAAM,CAClB,GAAIO,EAAKE,IAAIT,GACZ,MAAM,IAAIzJ,MAAM,yCAEjBgK,EAAK3I,IAAIoI,GACT,MAAMq2B,EAAK,GACX,IAAK,IAAIC,KAAMt2B,EACV41B,EAAgBl/B,KAAKsJ,EAAKs2B,KAC5BD,EAAWC,GAAML,EAAgBj2B,EAAIs2B,GAAKN,EAASz1B,IAItD,OADAA,EAAK1I,OAAOmI,GACLq2B,EAGR,OAAOr2B,EApCAi2B,CAAgBj2B,EAAKg2B,EAAS,IAAIt+B;AA2C1CvB,EAAAogC,MAAA,SAAgBA,EAAMnF,EAAkBnb,EAAaugB,GAAqB,GACzE,OAAKN,EAAAxC,SAAStC,IAIV8E,EAAAxC,SAASzd,IACZ7gB,OAAOC,KAAK4gB,GAAQnf,QAAQd,IACvBA,KAAOo7B,EACNoF,IACCN,EAAAxC,SAAStC,EAAYp7B,KAASkgC,EAAAxC,SAASzd,EAAOjgB,IACjDugC,EAAMnF,EAAYp7B,GAAMigB,EAAOjgB,GAAMwgC,GAErCpF,EAAYp7B,GAAOigB,EAAOjgB,IAI5Bo7B,EAAYp7B,GAAOigB,EAAOjgB,KAItBo7B,GAlBCnb,GA4BT9f,EAAA+d,OAAA,SAAuBkd,KAAqBqF,GAE3C,OADAA,EAAQ3/B,QAAQmf,GAAU7gB,OAAOC,KAAK4gB,GAAQnf,QAAQd,GAAOo7B,EAAYp7B,GAAOigB,EAAOjgB,KAChFo7B,GAGRj7B,EAAAkI,OAAAA,EA0DAlI,EAAAugC,cAAA,SAA8B12B,GAC7B,MAAMO,EAAc,GACpB,OAAO3N,KAAKsD,UAAU8J,EAAK,CAAChK,EAAKK,KAChC,GAAI6/B,EAAAxC,SAASr9B,IAAU4J,MAAMC,QAAQ7J,GAAQ,CAC5C,IAA6B,IAAzBkK,EAAKrH,QAAQ7C,GAChB,MAAO,aAEPkK,EAAK7R,KAAK2H,GAGZ,OAAOA,KAITF,EAAAwgC,aAAA,SAAmC32B,EAAQlI,EAA+Bye,GACzE,MAAM3oB,EAASkK,EAAGkI,GAClB,YAAyB,IAAXpS,EAAyB2oB,EAAe3oB,GAcvDuI,EAAAiK,SAAA,SAAyB0hB,EAAW1yB,GACnC,MAAMxB,EAASwH,OAAOK,OAAO,MAE7B,OAAKqsB,GAAS1yB,GAIKgG,OAAOC,KAAKjG,GACpB0H,QAAQwT,IAClB,MAAMssB,EAAY9U,EAAKxX,GACjBusB,EAAcznC,EAAOkb,GAEtBjM,EAAOu4B,EAAWC,KACtBjpC,EAAO0c,GAAKusB,KAIPjpC,GAbCA,6HClNT,MAAMkpC,EAAiB,iBACjBC,EAAoB,MACpBC,EAAoB,QAiE1B,MAAMtzB,EAAS,GACTuzB,EAAS,IACTC,EAAU,+DAkBhB,MAAaC,EA2DZ7/B,YAAsB8/B,EAAsCC,EAAoBznC,EAAek/B,EAAgBwI,EAAmBC,GAAmB,GAExH,iBAAjBH,GACV7/B,KAAKigC,OAASJ,EAAaI,QAAU9zB,EACrCnM,KAAK8/B,UAAYD,EAAaC,WAAa3zB;AAC3CnM,KAAK3H,KAAOwnC,EAAaxnC,MAAQ8T,EACjCnM,KAAKu3B,MAAQsI,EAAatI,OAASprB,EACnCnM,KAAK+/B,SAAWF,EAAaE,UAAY5zB,IAKzCnM,KAAKigC,OAvHR,SAAoBA,EAAgBD,GACnC,OAAKC,GAAWD,EAGTC,EAFC,OAqHQC,CAAWL,EAAcG,GACvChgC,KAAK8/B,UAAYA,GAAa3zB,EAC9BnM,KAAK3H,KAjHR,SAA8B4nC,EAAgB5nC,GAM7C,OAAQ4nC,GACP,IAAK,QACL,IAAK,OACL,IAAK,OACC5nC,EAEMA,EAAK,KAAOqnC,IACtBrnC,EAAOqnC,EAASrnC,GAFhBA,EAAOqnC,EAMV,OAAOrnC,EAgGO8nC,CAAqBngC,KAAKigC,OAAQ5nC,GAAQ8T,GACtDnM,KAAKu3B,MAAQA,GAASprB,EACtBnM,KAAK+/B,SAAWA,GAAY5zB,EA9J/B,SAAsBygB,EAAUoT,GAG/B,IAAKpT,EAAIqT,QAAUD,EAClB,MAAM,IAAIhhC,MAAM,2DAA2D4tB,EAAIkT,sBAAsBlT,EAAIv0B,kBAAkBu0B,EAAI2K,sBAAsB3K,EAAImT,cAK1J,GAAInT,EAAIqT,SAAWV,EAAehX,KAAKqE,EAAIqT,QAC1C,MAAM,IAAIjhC,MAAM,mDAQjB,GAAI4tB,EAAIv0B,KACP,GAAIu0B,EAAIkT,WACP,IAAKN,EAAkBjX,KAAKqE,EAAIv0B,MAC/B,MAAM,IAAI2G,MAAM,iJAGjB,GAAIygC,EAAkBlX,KAAKqE,EAAIv0B,MAC9B,MAAM,IAAI2G,MAAM,6HAuIjBohC,CAAapgC,KAAMggC,IA3ErBjgC,aAAaoV;AACZ,OAAIA,aAAiByqB,KAGhBzqB,IAGoC,iBAArBA,EAAO2qB,WACU,iBAApB3qB,EAAO4qB,UACS,iBAAhB5qB,EAAO9c,MACU,iBAAjB8c,EAAOoiB,OACW,iBAAlBpiB,EAAO8qB,QACW,mBAAlB9qB,EAAOkrB,QACS,mBAAhBlrB,EAAOmrB,MACa,mBAApBnrB,EAAOwF,UA2FzB0lB,aAIC,OAAOE,EAAYvgC,MAAM,GAK1BD,KAAKygC,GAEJ,IAAKA,EACJ,OAAOxgC,KAGR,IAAIigC,OAAEA,EAAMH,UAAEA,EAASznC,KAAEA,EAAIk/B,MAAEA,EAAKwI,SAAEA,GAAaS,EA2BnD,YA1BezmC,IAAXkmC,EACHA,EAASjgC,KAAKigC,OACO,OAAXA,IACVA,EAAS9zB,QAEQpS,IAAd+lC,EACHA,EAAY9/B,KAAK8/B,UACO,OAAdA,IACVA,EAAY3zB,QAEApS,IAAT1B,EACHA,EAAO2H,KAAK3H,KACO,OAATA,IACVA,EAAO8T,QAEMpS,IAAVw9B,EACHA,EAAQv3B,KAAKu3B,MACO,OAAVA,IACVA,EAAQprB,QAEQpS,IAAbgmC,EACHA,EAAW//B,KAAK+/B,SACO,OAAbA,IACVA,EAAW5zB,GAGR8zB,IAAWjgC,KAAKigC,QAChBH,IAAc9/B,KAAK8/B,WACnBznC,IAAS2H,KAAK3H,MACdk/B,IAAUv3B,KAAKu3B,OACfwI,IAAa//B,KAAK+/B,SAEd//B,KAGD,IAAIygC,EAAKR,EAAQH,EAAWznC,EAAMk/B,EAAOwI,GAWjDhgC,aAAajB,EAAekhC,GAAmB,GAC9C,MAAM1N,EAAQqN,EAAQ/L,KAAK90B,GAC3B,OAAKwzB,EAGE,IAAImO,EACVnO,EAAM,IAAMnmB,EACZu0B,EAAcpO,EAAM,IAAMnmB,GAC1Bu0B,EAAcpO,EAAM,IAAMnmB,GAC1Bu0B,EAAcpO,EAAM,IAAMnmB,GAC1Bu0B,EAAcpO,EAAM,IAAMnmB,GAC1B6zB,GARO,IAAIS,EAAKt0B,EAAQA,EAAQA,EAAQA,EAAQA,GAiClDpM,YAAY1H,GAEX,IAAIynC,EAAY3zB,EAWhB,GANI0c,EAAA/B,YACHzuB,EAAOA,EAAKqG,QAAQ,MAAOghC,IAKxBrnC,EAAK,KAAOqnC,GAAUrnC,EAAK,KAAOqnC,EAAQ,CAC7C,MAAMxiB,EAAM7kB,EAAKsJ,QAAQ+9B,EAAQ,IACpB,IAATxiB,GACH4iB,EAAYznC,EAAKuD,UAAU,GAC3BvD,EAAOqnC,IAEPI,EAAYznC,EAAKuD,UAAU,EAAGshB,GAC9B7kB,EAAOA,EAAKuD,UAAUshB,IAAQwiB,GAIhC,OAAO,IAAIe,EAAK,OAAQX,EAAWznC,EAAM8T,EAAQA;AAGlDpM,YAAY4gC,GACX,OAAO,IAAIF,EACVE,EAAWV,OACXU,EAAWb,UACXa,EAAWtoC,KACXsoC,EAAWpJ,MACXoJ,EAAWZ,UAWbhgC,gBAAgB6gC,KAAaC,GAC5B,IAAKD,EAAIvoC,KACR,MAAM,IAAI2G,MAAM,yDAEjB,IAAI8hC,EAMJ,OAJCA,EADGjY,EAAA/B,WAA4B,SAAf8Z,EAAIX,OACVL,EAAInnC,KAAK0yB,EAAMV,MAAM5wB,KAAK0mC,EAAYK,GAAK,MAAUC,IAAexoC,KAEpE8yB,EAAM2B,MAAMjzB,KAAK+mC,EAAIvoC,QAASwoC,GAElCD,EAAIN,KAAK,CAAEjoC,KAAMyoC,IAgBzB/gC,SAASghC,GAAwB,GAChC,OAAOC,EAAahhC,KAAM+gC,GAG3BhhC,SACC,OAAOC,KAORD,cAAc1F,GACb,GAAKA,EAEE,CAAA,GAAIA,aAAgBulC,EAC1B,OAAOvlC,EACD,CACN,MAAMhE,EAAS,IAAIoqC,EAAKpmC,GAGxB,OAFAhE,EAAO4qC,WAAwB5mC,EAAM6mC,SACrC7qC,EAAO8qC,QAAqB9mC,EAAM+mC,OAASC,EAA4BhnC,EAAMgmC,OAAS,KAC/EhqC,GAPP,OAAOgE,GAjSVuE,EAAAghC,IAAAA,EA4TA,MAAMyB,EAAiBxY,EAAA/B,UAAY,OAAI/sB,EAGvC,MAAM0mC,UAAab,EAAnB7/B,kCAECC,KAAAihC,WAA4B,KAC5BjhC,KAAAmhC,QAAyB,KAEzBd,aAIC,OAHKrgC,KAAKmhC,UACTnhC,KAAKmhC,QAAUZ,EAAYvgC,MAAM,IAE3BA,KAAKmhC,QAGbphC,SAASghC,GAAwB,GAChC,OAAKA,EAOGC,EAAahhC,MAAM,IANrBA,KAAKihC,aACTjhC,KAAKihC,WAAaD,EAAahhC,MAAM,IAE/BA,KAAKihC,YAOdlhC,SACC,MAAMqX,EAAgB,CACrBkqB,KAAM,GA0BP,OAvBIthC,KAAKmhC,UACR/pB,EAAIipB,OAASrgC,KAAKmhC,QAClB/pB,EAAIgqB,KAAOC,GAERrhC,KAAKihC,aACR7pB,EAAI8pB,SAAWlhC,KAAKihC,YAGjBjhC,KAAK3H,OACR+e,EAAI/e,KAAO2H,KAAK3H,MAEb2H,KAAKigC,SACR7oB,EAAI6oB,OAASjgC,KAAKigC;AAEfjgC,KAAK8/B,YACR1oB,EAAI0oB,UAAY9/B,KAAK8/B,WAElB9/B,KAAKu3B,QACRngB,EAAImgB,MAAQv3B,KAAKu3B,OAEdv3B,KAAK+/B,WACR3oB,EAAI2oB,SAAW//B,KAAK+/B,UAEd3oB,GAKT,MAAMmqB,EAAwC,CAC7CC,GAAkB,MAClBC,GAAkB,MAClBC,GAAyB,MACzBC,GAAiB,MACjBC,GAA8B,MAC9BC,GAA+B,MAC/BC,GAAmB,MAEnBC,GAA4B,MAC5BC,GAAuB,MACvBC,GAAsB,MACtBC,GAAwB,MACxBC,GAAsB,MACtBC,GAAuB,MACvBC,GAAqB,MACrBC,GAAiB,MACjBC,GAAkB,MAClBC,GAAsB,MACtBC,GAAmB,MAEnBC,GAAkB,OAGnB,SAASC,EAAuBC,EAAsBC,GACrD,IAAIzrB,OAA0Brd,EAC1B+oC,GAAmB,EAEvB,IAAK,IAAI70B,EAAM,EAAGA,EAAM20B,EAAapsC,OAAQyX,IAAO,CACnD,MAAMhU,EAAO2oC,EAAap0B,WAAWP,GAGrC,GACEhU,GAAI,IAAkBA,GAAI,KACvBA,GAAI,IAAkBA,GAAI,IAC1BA,GAAI,IAAuBA,GAAI,IAC5B,KAAJA,GACI,KAAJA,GACI,KAAJA,GACI,MAAJA,GACC4oC,GAAkB,KAAJ5oC,GAGO,IAArB6oC,IACH1rB,GAAO+f,mBAAmByL,EAAahnC,UAAUknC,EAAiB70B,IAClE60B,GAAmB,QAGR/oC,IAARqd,IACHA,GAAOwrB,EAAaxP,OAAOnlB,QAGtB,MAEMlU,IAARqd,IACHA,EAAMwrB,EAAa5L,OAAO,EAAG/oB,IAI9B,MAAM80B,EAAUxB,EAAYtnC,QACZF,IAAZgpC,IAGsB,IAArBD,IACH1rB,GAAO+f,mBAAmByL,EAAahnC,UAAUknC,EAAiB70B,IAClE60B,GAAmB,GAIpB1rB,GAAO2rB,IAEwB,IAArBD,IAEVA,EAAkB70B,IASrB,OAJyB,IAArB60B,IACH1rB,GAAO+f,mBAAmByL,EAAahnC,UAAUknC,UAGnC/oC,IAARqd,EAAoBA,EAAMwrB,EAGlC,SAASI,EAA0B3qC,GAClC,IAAI+e,OAA0Brd,EAC9B,IAAK,IAAIkU,EAAM,EAAGA,EAAM5V,EAAK7B,OAAQyX,IAAO,CAC3C,MAAMhU,EAAO5B,EAAKmW,WAAWP,GACrB,KAAJhU,GAA8B,KAAJA,QACjBF,IAARqd,IACHA,EAAM/e,EAAK2+B,OAAO,EAAG/oB,IAEtBmJ,GAAOmqB,EAAYtnC,SAEPF,IAARqd,IACHA,GAAO/e,EAAK4V,IAIf,YAAelU,IAARqd,EAAoBA,EAAM/e,EAMlC,SAASkoC,EAAYK,EAAUqC,GAE9B,IAAInkC;CAsBJ,OAnBCA,EAFG8hC,EAAId,WAAac,EAAIvoC,KAAK7B,OAAS,GAAoB,SAAfoqC,EAAIX,OAEvC,KAAKW,EAAId,YAAYc,EAAIvoC,OAEX,KAAtBuoC,EAAIvoC,KAAKmW,WAAW,KAChBoyB,EAAIvoC,KAAKmW,WAAW,IAAE,IAAkBoyB,EAAIvoC,KAAKmW,WAAW,IAAE,IAAkBoyB,EAAIvoC,KAAKmW,WAAW,IAAE,IAAkBoyB,EAAIvoC,KAAKmW,WAAW,IAAE,MACzH,KAAtBoyB,EAAIvoC,KAAKmW,WAAW,GAElBy0B,EAIIrC,EAAIvoC,KAAK2+B,OAAO,GAFhB4J,EAAIvoC,KAAK,GAAGyyB,cAAgB8V,EAAIvoC,KAAK2+B,OAAO,GAM7C4J,EAAIvoC,KAETwwB,EAAA/B,YACHhoB,EAAQA,EAAMJ,QAAQ,MAAO,OAEvBI,EAMR,SAASkiC,EAAaJ,EAAUG,GAE/B,MAAMmC,EAAWnC,EAEdiC,EADAL,EAGH,IAAIvrB,EAAM,IACN6oB,OAAEA,EAAMH,UAAEA,EAASznC,KAAEA,EAAIk/B,MAAEA,EAAKwI,SAAEA,GAAaa,EASnD,GARIX,IACH7oB,GAAO6oB,EACP7oB,GAAO,MAEJ0oB,GAAwB,SAAXG,KAChB7oB,GAAOsoB,EACPtoB,GAAOsoB,GAEJI,EAAW,CACd,IAAI5iB,EAAM4iB,EAAUn+B,QAAQ,KAC5B,IAAa,IAATub,EAAY,CAEf,MAAMimB,EAAWrD,EAAU9I,OAAO,EAAG9Z,GACrC4iB,EAAYA,EAAU9I,OAAO9Z,EAAM,IAEtB,KADbA,EAAMimB,EAASxhC,QAAQ,MAEtByV,GAAO8rB,EAAQC,GAAU,IAGzB/rB,GAAO8rB,EAAQC,EAASnM,OAAO,EAAG9Z,IAAM,GACxC9F,GAAO,IACPA,GAAO8rB,EAAQC,EAASnM,OAAO9Z,EAAM,IAAI,IAE1C9F,GAAO,KAIK,KADb8F,GADA4iB,EAAYA,EAAUhV,eACNnpB,QAAQ,MAEvByV,GAAO8rB,EAAQpD,GAAW,IAG1B1oB,GAAO8rB,EAAQpD,EAAU9I,OAAO,EAAG9Z,IAAM,GACzC9F,GAAO0oB,EAAU9I,OAAO9Z,IAG1B,GAAI7kB,EAAM,CAET,GAAIA,EAAK7B,QAAU,GAAuB,KAAlB6B,EAAKmW,WAAW,IAA2C,KAAlBnW,EAAKmW,WAAW,GAAuB,CACvG,MAAMvU,EAAO5B,EAAKmW,WAAW,GACzBvU,GAAI,IAAkBA,GAAI,KAC7B5B,EAAO,IAAI+L,OAAOuK,aAAa1U,EAAO,OAAO5B,EAAK2+B,OAAO,WAEpD,GAAI3+B,EAAK7B,QAAU,GAAuB,KAAlB6B,EAAKmW,WAAW,GAAuB,CACrE,MAAMvU,EAAO5B,EAAKmW,WAAW;CACzBvU,GAAI,IAAkBA,GAAI,KAC7B5B,EAAO,GAAG+L,OAAOuK,aAAa1U,EAAO,OAAO5B,EAAK2+B,OAAO,MAI1D5f,GAAO8rB,EAAQ7qC,GAAM,GAUtB,OARIk/B,IACHngB,GAAO,IACPA,GAAO8rB,EAAQ3L,GAAO,IAEnBwI,IACH3oB,GAAO,IACPA,GAAQ2pB,EAAyDhB,EAA1C4C,EAAuB5C,GAAU,IAElD3oB,EAiBR,MAAMgsB,EAAiB,8BAEvB,SAAS1C,EAAcnR,GACtB,OAAKA,EAAI+C,MAAM8Q,GAGR7T,EAAI7wB,QAAQ0kC,EAAiB9Q,IAlBrC,SAAS+Q,EAA2B9T,GACnC,IACC,OAAO+T,mBAAmB/T,GACzB,MAAA1a,GACD,OAAI0a,EAAI/4B,OAAS,EACT+4B,EAAIyH,OAAO,EAAG,GAAKqM,EAA2B9T,EAAIyH,OAAO,IAEzDzH,IAWqC8T,CAA2B/Q,IAFjE/C,4DC7qBT,SAAgBgU,EAAoBC,EAA2BC,GAC9D,OAAOC,EAAA9D,IAAItkC,MAAMkoC,EAAUG,MAAMF,yGALlC7kC,EAAAglC,qBAAA,SAAqCJ,EAA2BC,GAC/D,OAAOF,EAAoBC,EAAWC,GAAcpD,QAGrDzhC,EAAA2kC,oBAAAA,2DCkBA,SAAgBjoC,EAAMuoC,GACrB,MAAM3iC,EAAc,GACpB,IAAI4B,EAGJ,IACC,MAAMghC,EAAyBzoC,KAAKC,MAAMuoC,EAAMp4B,WAG1Cs4B,EAAgBD,EAAgBA,EAAgBttC,OAAS,GAC3DutC,GAAiBA,EAAcC,WAClCF,EAAgBt9B,MAChB1D,EAAQihC,EAAcC,UAGvB9iC,EAAK/J,QAAQ2sC,GACZ,MAAOjoC,GACRqF,EAAK/J,KAAK,yCAA0C0sC,EAAMp4B,WAG3D,MAAO,CAAEvK,KAAAA,EAAM4B,MAAAA,GAuChB,SAASmhC,EAAenhC,GACvB,IAAKA,EACJ,OAAOA,EAGR,MAAMohC,EAAephC,EAAMnB,QAAQ,MACnC,OAAsB,IAAlBuiC,EACIphC,EAGDA,EAAMlH,UAAU,EAAGsoC,GAyC3B,SAASC,EAAMA;AACd,MAAO,UAAUA,+GArHlBvlC,EAAAwlC,mBAAA,SAAmC37B,GAClC,MAAMo7B,EAAQp7B,EAEd,OAAOo7B,GAA+B,iBAAfA,EAAMrxB,MAA+C,iBAAnBqxB,EAAMQ,UAGhEzlC,EAAAtD,MAAAA,EAyBAsD,EAAA0lC,cAAA,SAAgBA,EAAcC,GAC7B,GAAoB,iBAATA,EACV,OAAOD,EAAchpC,EAAMipC,GAAOzhC,OAYnC,GADcyhC,EACH,CACV,MAAMC,EAAWP,EAFJM,GAQP1xB,EAAU,oEAAoE+gB,KAAK4Q,GAAY,IACrG,GAAI3xB,GAA8B,IAAnBA,EAAQrc,OACtB,MAAO,CACNoqC,IAAK8C,EAAA9D,IAAInnC,KAAKoa,EAAQ,IACtB4xB,KAAMjiC,OAAOqQ,EAAQ,IACrB6xB,OAAQliC,OAAOqQ,EAAQ,OAqB3BjU,EAAAmW,IAAA,SAAoB8uB,EAA0Bc,GAC7C,MAAMzjC,KAAEA,EAAI4B,MAAEA,GAAUxH,EAAMuoC,GAExBe,EAAoC,iBAAZ1jC,EAAK,IAAmC,IAAhBA,EAAK1K,OAE3D,IAAIguC,EAAWP,EAAenhC,GAC1B0hC,IACHA,EAAW,IAAIA,EAAShV,WAGzB,IAAIqV,EAAwB,GAsB5B,GAjBEA,EAFqB,iBAAZ3jC,EAAK,GACXsjC,GAAYI,EACD,CAAC,MAAMD,QAAYzjC,EAAK,QAAQsjC,IAAYL,EAAM,QAASA,EAAM,IAAKA,EAAM,SAE5E,CAAC,MAAMQ,QAAYzjC,EAAK,KAAMijC,EAAM,QAASA,EAAM,OAAQjjC,EAAKhJ,MAAM,IAMvE,CAAC,MAAMysC,MAAWR,EAAM,WAAYjjC,GAI/CsjC,IAAaI,GAChBC,EAAY1tC,KAAKqtC,GAI8B,mBAApC1tC,QAAgB+sC,EAAMQ,UACjC,MAAM,IAAIrlC,MAAM,0BAEhBlI,QAAgB+sC,EAAMQ,UAAU9iC,MAAMzK,QAAS+tC,kEC1HjD,SAAgBrnC,EAAUsnC;AACzB,MAAMzuC,EAAc,GAEpB,OADAyuC,EAAYvlC,QAAQT,GAASzI,EAAOc,KAAK2H,IAClCzI,EAMR,SAAgByH,EAAWnE,GAC1B,MAAMtD,EAAc,GAGpB,OAFAsD,EAAI4F,QAAQ,CAACsW,EAAQpX,IAAQpI,EAAOc,KAAKsH,IAElCpI,kNAbRuI,EAAApB,OAAAA,EASAoB,EAAAd,KAAAA,EAOAc,EAAAmmC,SAAA,SAA+BprC,EAAgB8E,EAAQK,GACtD,IAAIzI,EAASsD,EAAIuG,IAAIzB,GAMrB,YALe1E,IAAX1D,IACHA,EAASyI,EACTnF,EAAIyG,IAAI3B,EAAKpI,IAGPA,GAGRuI,EAAAomC,YAAA,SAAkCrrC,GACjC,MAAMpC,EAAoB,GAK1B,OAJAoC,EAAI4F,QAAQ,CAACT,EAAOL,KACnBlH,EAAQJ,KAAK,GAAGsH,QAAUK,OAGpB,OAAOnF,EAAIyF,UAAU7H,EAAQsC,KAAK,UAG1C+E,EAAAqmC,YAAA,SAA+B7kC,GAC9B,MAAM7I,EAAe,GAKrB,OAJA6I,EAAIb,QAAQT,IACXvH,EAAQJ,KAAK2H,KAGP,OAAOsB,EAAIhB,UAAU7H,EAAQsC,KAAK,UAY1C,MAAaqrC,EAAbnlC,cAESC,KAAA6V,OAAiB,GACjB7V,KAAAmlC,KAAe,EAEvBplC,MAAMtB,GAGL,OAFAuB,KAAK6V,OAASpX,EACduB,KAAKmlC,KAAO,EACLnlC,KAGRD,OAEC,OADAC,KAAKmlC,MAAQ,EACNnlC,KAGRD,UACC,OAAOC,KAAKmlC,KAAOnlC,KAAK6V,OAAOrf,OAAS,EAGzCuJ,IAAImF,GAGH,OAFcA,EAAEsJ,WAAW,GACVxO,KAAK6V,OAAOrH,WAAWxO,KAAKmlC,MAI9CplC,QACC,OAAOC,KAAK6V,OAAO7V,KAAKmlC,OA3B1BvmC,EAAAsmC,eAAAA,EA+BA,MAAaE,EAMZrlC,YAAoBslC,GAA6B,GAA7BrlC,KAAAqlC,kBAAAA,EAEpBtlC,MAAMtB;AAIL,OAHAuB,KAAK6V,OAASpX,EAAIC,QAAQ,UAAW,IACrCsB,KAAKslC,MAAQ,EACbtlC,KAAKulC,IAAM,EACJvlC,KAAKiM,OAGblM,UACC,OAAOC,KAAKulC,IAAMvlC,KAAK6V,OAAOrf,OAG/BuJ,OAECC,KAAKslC,MAAQtlC,KAAKulC,IAClB,IAAIC,GAAW,EACf,KAAOxlC,KAAKulC,IAAMvlC,KAAK6V,OAAOrf,OAAQwJ,KAAKulC,MAAO,CACjD,MAAMh3B,EAAKvO,KAAK6V,OAAOrH,WAAWxO,KAAKulC,KACvC,GAAM,KAAFh3B,GAAyBvO,KAAKqlC,mBAAuB,KAAF92B,EAA2B,CACjF,IAAIi3B,EAGH,MAFAxlC,KAAKslC,aAKNE,GAAW,EAGb,OAAOxlC,KAGRD,IAAImF,GAEH,IAAIugC,EAAO,EACX,MAAMC,EAAOxgC,EAAE1O,OACf,IAAImvC,EAAU3lC,KAAKslC,MAEnB,KAAOG,EAAOC,GAAQC,EAAU3lC,KAAKulC,KAAK,CACzC,MAAMK,EAAM1gC,EAAEsJ,WAAWi3B,GAAQzlC,KAAK6V,OAAOrH,WAAWm3B,GACxD,GAAY,IAARC,EACH,OAAOA,EAERH,GAAQ,EACRE,GAAW,EAGZ,OAAID,IAAS1lC,KAAKulC,IAAMvlC,KAAKslC,MACrB,EACGG,EAAOC,GACT,EAED,EAIT3lC,QACC,OAAOC,KAAK6V,OAAOja,UAAUoE,KAAKslC,MAAOtlC,KAAKulC,MA/DhD3mC,EAAAwmC,aAAAA,EAmEA,MAAMS,EAQL9lC,UACC,QAAQC,KAAK8lC,MAAS9lC,KAAK4E,KAAQ5E,KAAK+lC,OAAU/lC,KAAKlB,QAIzD,MAAaknC,EAaZjmC,YAAYqS,GACXpS,KAAKimC,MAAQ7zB,EAZdrS,kBACC,OAAO,IAAIimC,EAAqB,IAAIZ,GAGrCrlC,oBACC,OAAO,IAAIimC,EAAqB,IAAId,GAUrCnlC,QACCC,KAAKkmC,WAAQnsC,EAGdgG,IAAItB,EAAakB,GAChB,MAAMwmC,EAAOnmC,KAAKimC,MAAMG,MAAM3nC,GAC9B,IAAIqR,EAQJ,IANK9P,KAAKkmC,QACTlmC,KAAKkmC,MAAQ,IAAIL,EACjB7lC,KAAKkmC,MAAMtyB,QAAUuyB,EAAKrnC,SAG3BgR,EAAO9P,KAAKkmC,QACC,CACZ,MAAMG,EAAMF,EAAKP,IAAI91B,EAAK8D,SAC1B,GAAIyyB,EAAM,EAEJv2B,EAAKg2B,OACTh2B,EAAKg2B,KAAO,IAAID,EAChB/1B,EAAKg2B,KAAKlyB,QAAUuyB,EAAKrnC;AAE1BgR,EAAOA,EAAKg2B,UAEN,GAAIO,EAAM,EAEXv2B,EAAKi2B,QACTj2B,EAAKi2B,MAAQ,IAAIF,EACjB/1B,EAAKi2B,MAAMnyB,QAAUuyB,EAAKrnC,SAE3BgR,EAAOA,EAAKi2B,UAEN,CAAA,IAAII,EAAKG,UASf,MAPAH,EAAKl6B,OACA6D,EAAKlL,MACTkL,EAAKlL,IAAM,IAAIihC,EACf/1B,EAAKlL,IAAIgP,QAAUuyB,EAAKrnC,SAEzBgR,EAAOA,EAAKlL,KAKd,MAAM2hC,EAAaz2B,EAAKhR,MAGxB,OAFAgR,EAAKhR,MAAQa,EACbmQ,EAAKrR,IAAMA,EACJ8nC,EAGRxmC,IAAItB,GACH,MAAM0nC,EAAOnmC,KAAKimC,MAAMG,MAAM3nC,GAC9B,IAAIqR,EAAO9P,KAAKkmC,MAChB,KAAOp2B,GAAM,CACZ,MAAMu2B,EAAMF,EAAKP,IAAI91B,EAAK8D,SAC1B,GAAIyyB,EAAM,EAETv2B,EAAOA,EAAKg2B,UACN,GAAIO,EAAM,EAEhBv2B,EAAOA,EAAKi2B,UACN,CAAA,IAAII,EAAKG,UAKf,MAHAH,EAAKl6B,OACL6D,EAAOA,EAAKlL,KAKd,OAAOkL,EAAOA,EAAKhR,WAAQ/E,EAG5BgG,OAAOtB,GAEN,MAAM0nC,EAAOnmC,KAAKimC,MAAMG,MAAM3nC,GACxBqE,EAAkD,GACxD,IAAIgN,EAAO9P,KAAKkmC,MAGhB,KAAOp2B,GAAM,CACZ,MAAMu2B,EAAMF,EAAKP,IAAI91B,EAAK8D,SAC1B,GAAIyyB,EAAM,EAETvjC,EAAM3L,KAAK,CAAC,EAAG2Y,IACfA,EAAOA,EAAKg2B,UACN,GAAIO,EAAM,EAEhBvjC,EAAM3L,KAAK,EAAE,EAAG2Y,IAChBA,EAAOA,EAAKi2B,UACN,CAAA,IAAII,EAAKG,UAKT,CAKN,IAHAx2B,EAAKhR,WAAQ/E,EAGN+I,EAAMtM,OAAS,GAAKsZ,EAAK2L,WAAW,CAC1C,IAAKniB,EAAKoU,GAAU5K,EAAM0D,MAC1B,OAAQlN,GACP,KAAK,EAAGoU,EAAOo4B,UAAO/rC,EAAW,MACjC,KAAK,EAAG2T,EAAO9I,SAAM7K,EAAW,MAChC,KAAM,EAAG2T,EAAOq4B,WAAQhsC,EAEzB+V,EAAOpC,EAER,MAjBAy4B,EAAKl6B,OACLnJ,EAAM3L,KAAK,CAAC,EAAG2Y,IACfA,EAAOA,EAAKlL,MAoBf7E,WAAWtB,GACV,MAAM0nC,EAAOnmC,KAAKimC,MAAMG,MAAM3nC,GAC9B,IAAIqR,EAAO9P,KAAKkmC,MACZne,OAA2BhuB,EAC/B,KAAO+V,GAAM,CACZ,MAAMu2B,EAAMF,EAAKP,IAAI91B,EAAK8D,SAC1B,GAAIyyB,EAAM,EAETv2B,EAAOA,EAAKg2B,UACN,GAAIO,EAAM,EAEhBv2B,EAAOA,EAAKi2B,UACN,CAAA,IAAII,EAAKG,UAMf,MAJAH,EAAKl6B,OACL8b,EAAYjY,EAAKhR,OAASipB,EAC1BjY,EAAOA,EAAKlL,KAKd,OAAOkL,GAAQA,EAAKhR,OAASipB,EAG9BhoB,aAAatB;AACZ,MAAM0nC,EAAOnmC,KAAKimC,MAAMG,MAAM3nC,GAC9B,IAAIqR,EAAO9P,KAAKkmC,MAChB,KAAOp2B,GAAM,CACZ,MAAMu2B,EAAMF,EAAKP,IAAI91B,EAAK8D,SAC1B,GAAIyyB,EAAM,EAETv2B,EAAOA,EAAKg2B,UACN,GAAIO,EAAM,EAEhBv2B,EAAOA,EAAKi2B,UACN,CAAA,IAAII,EAAKG,UAMf,OAAKx2B,EAAKlL,IAGF5E,KAAKwmC,cAAc12B,EAAKlL,UAF/B,EALDuhC,EAAKl6B,OACL6D,EAAOA,EAAKlL,MAaP7E,cAAc+P,GACrB,IAAIsH,EACA8F,EACA7iB,EAmBJ,MAAO,CAAE4R,KAlBI,KACP5R,IAEJA,EAAO,GACP6iB,EAAM,EACNld,KAAKymC,SAAS32B,EAAMhR,GAASzE,EAAKlD,KAAK2H,KAEpCoe,GAAO7iB,EAAK7D,OACRkwC,EAAA/6B,KAGHyL,EAGJA,EAAItY,MAAQzE,EAAK6iB,KAFjB9F,EAAM,CAAExL,MAAM,EAAO9M,MAAOzE,EAAK6iB,MAI3B9F,KAKTrX,QAAQP,GACPQ,KAAKymC,SAASzmC,KAAKkmC,MAAO1mC,GAGnBO,SAAS+P,EAA4CtQ,GACxDsQ,IAEH9P,KAAKymC,SAAS32B,EAAKg2B,KAAMtmC,GAGrBsQ,EAAKhR,OAERU,EAASsQ,EAAKhR,MAAOgR,EAAKrR,KAG3BuB,KAAKymC,SAAS32B,EAAKlL,IAAKpF,GAGxBQ,KAAKymC,SAAS32B,EAAKi2B,MAAOvmC,KAhO7BZ,EAAAonC,kBAAAA,EAqOA,MAAaW,EAKZ5mC,cACCC,KAAKrG,IAAM,IAAIsG,IACfD,KAAKg0B,YAAa,EAGnBj0B,IAAIwiB,EAAezjB,GAClBkB,KAAKrG,IAAIyG,IAAIJ,KAAK4mC,MAAMrkB,GAAWzjB,GAGpCiB,IAAIwiB,GACH,OAAOviB,KAAKrG,IAAIuG,IAAIF,KAAK4mC,MAAMrkB,IAGhCxiB,IAAIwiB,GACH,OAAOviB,KAAKrG,IAAIuP,IAAIlJ,KAAK4mC,MAAMrkB,IAGhCnjB,WACC,OAAOY,KAAKrG,IAAIyF,KAGjBW,QACCC,KAAKrG,IAAI6H,QAGVzB,OAAOwiB,GACN,OAAOviB,KAAKrG,IAAI2G,OAAON,KAAK4mC,MAAMrkB,IAGnCxiB,QAAQ8mC,GACP7mC,KAAKrG,IAAI4F,QAAQ,CAACT,EAAOpD,IAAUmrC,EAAI/nC,EAAO4kC,EAAA9D,IAAItkC,MAAMI,KAGzDqE,SACC,OAAOvC,EAAOwC,KAAKrG,KAGZoG,MAAMwiB,GACb,IAAI9jB,EAAM8jB,EAAS5H,WAKnB,OAJI3a,KAAKg0B,aACRv1B,EAAMA,EAAIqsB,eAGJrsB,EAGRsB;AACC,OAAOjC,EAAKkC,KAAKrG,KAAKA,IAAIoZ,GAAK2wB,EAAA9D,IAAItkC,MAAMyX,IAG1ChT,QACC,MAAM+mC,EAAc,IAAIH,EAIxB,OAFA3mC,KAAKrG,IAAI4F,QAAQ,CAACT,EAAOL,IAAQqoC,EAAYntC,IAAIyG,IAAI3B,EAAKK,IAEnDgoC,GA5DTloC,EAAA+nC,YAAAA,EAuEA,SAAkBI,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,MAAA,GAAA,QAHD,CAAkBnoC,EAAAmoC,QAAAnoC,EAAAmoC,MAAK,KAMvB,MAAaC,EAOZjnC,cACCC,KAAKinC,KAAO,IAAIhnC,IAChBD,KAAKknC,WAAQntC,EACbiG,KAAKmnC,WAAQptC,EACbiG,KAAK4W,MAAQ,EAGd7W,QACCC,KAAKinC,KAAKzlC,QACVxB,KAAKknC,WAAQntC,EACbiG,KAAKmnC,WAAQptC,EACbiG,KAAK4W,MAAQ,EAGd7W,UACC,OAAQC,KAAKknC,QAAUlnC,KAAKmnC,MAG7B/nC,WACC,OAAOY,KAAK4W,MAGbtX,kBACC,OAAiB,QAAjBuV,EAAO7U,KAAKknC,aAAK,IAAAryB,OAAA,EAAAA,EAAE/V,MAGpB6O,iBACC,OAAiB,QAAjBkH,EAAO7U,KAAKmnC,aAAK,IAAAtyB,OAAA,EAAAA,EAAE/V,MAGpBiB,IAAItB,GACH,OAAOuB,KAAKinC,KAAK/9B,IAAIzK,GAGtBsB,IAAItB,EAAQtB,EAAA,GACX,MAAMgX,EAAOnU,KAAKinC,KAAK/mC,IAAIzB,GAC3B,GAAK0V,EAML,OAHS,IAALhX,GACH6C,KAAK7C,MAAMgX,EAAMhX,GAEXgX,EAAKrV,MAGbiB,IAAItB,EAAQK,EAAU3B,EAAA,GACrB,IAAIgX,EAAOnU,KAAKinC,KAAK/mC,IAAIzB,GACzB,GAAI0V,EACHA,EAAKrV,MAAQA,EACJ,IAAL3B,GACH6C,KAAK7C,MAAMgX,EAAMhX,OAEZ,CAEN,OADAgX,EAAO,CAAE1V,IAAAA,EAAKK,MAAAA,EAAOmN,UAAMlS,EAAW0T,cAAU1T,GACxCoD,GACP,KAAA,EACC6C,KAAKonC,YAAYjzB,GACjB,MACD,KAAA,EACCnU,KAAKqnC,aAAalzB,GAClB,MACD,KAAA,EAGA,QACCnU,KAAKonC,YAAYjzB,GAGnBnU,KAAKinC,KAAK7mC,IAAI3B,EAAK0V,GACnBnU,KAAK4W,SAIP7W,OAAOtB,GACN,QAASuB,KAAK0b,OAAOjd;AAGtBsB,OAAOtB,GACN,MAAM0V,EAAOnU,KAAKinC,KAAK/mC,IAAIzB,GAC3B,GAAK0V,EAML,OAHAnU,KAAKinC,KAAK3mC,OAAO7B,GACjBuB,KAAKsnC,WAAWnzB,GAChBnU,KAAK4W,QACEzC,EAAKrV,MAGbiB,QACC,IAAKC,KAAKknC,QAAUlnC,KAAKmnC,MACxB,OAED,IAAKnnC,KAAKknC,QAAUlnC,KAAKmnC,MACxB,MAAM,IAAInoC,MAAM,gBAEjB,MAAMmV,EAAOnU,KAAKknC,MAIlB,OAHAlnC,KAAKinC,KAAK3mC,OAAO6T,EAAK1V,KACtBuB,KAAKsnC,WAAWnzB,GAChBnU,KAAK4W,QACEzC,EAAKrV,MAGbiB,QAAQwnC,EAA8DC,GACrE,IAAIr6B,EAAUnN,KAAKknC,MACnB,KAAO/5B,GACFq6B,EACHD,EAAWvwC,KAAKwwC,EAAhBD,CAAyBp6B,EAAQrO,MAAOqO,EAAQ1O,IAAKuB,MAErDunC,EAAWp6B,EAAQrO,MAAOqO,EAAQ1O,IAAKuB,MAExCmN,EAAUA,EAAQlB,KAIpBlM,SACC,MAAM1J,EAAc,GACpB,IAAI8W,EAAUnN,KAAKknC,MACnB,KAAO/5B,GACN9W,EAAOc,KAAKgW,EAAQrO,OACpBqO,EAAUA,EAAQlB,KAEnB,OAAO5V,EAGR0J,OACC,MAAM1J,EAAc,GACpB,IAAI8W,EAAUnN,KAAKknC,MACnB,KAAO/5B,GACN9W,EAAOc,KAAKgW,EAAQ1O,KACpB0O,EAAUA,EAAQlB,KAEnB,OAAO5V,EA2CE0J,QAAQ0nC,GACjB,GAAIA,GAAWznC,KAAKZ,KACnB,OAED,GAAgB,IAAZqoC,EAEH,YADAznC,KAAKwB,QAGN,IAAI2L,EAAUnN,KAAKknC,MACfQ,EAAc1nC,KAAKZ,KACvB,KAAO+N,GAAWu6B,EAAcD,GAC/BznC,KAAKinC,KAAK3mC,OAAO6M,EAAQ1O,KACzB0O,EAAUA,EAAQlB,KAClBy7B,IAED1nC,KAAKknC,MAAQ/5B,EACbnN,KAAK4W,MAAQ8wB,EACTv6B,IACHA,EAAQM,cAAW1T,GAIbgG,aAAaoU,GAEpB,GAAKnU,KAAKknC,OAAUlnC,KAAKmnC,MAElB,CAAA,IAAKnnC,KAAKknC,MAChB,MAAM,IAAIloC,MAAM,gBAEhBmV,EAAKlI,KAAOjM,KAAKknC,MACjBlnC,KAAKknC,MAAMz5B,SAAW0G,OALtBnU,KAAKmnC,MAAQhzB,EAOdnU,KAAKknC,MAAQ/yB,EAGNpU,YAAYoU,GAEnB,GAAKnU,KAAKknC,OAAUlnC,KAAKmnC,MAElB,CAAA,IAAKnnC,KAAKmnC,MAChB,MAAM,IAAInoC,MAAM,gBAEhBmV,EAAK1G,SAAWzN,KAAKmnC;AACrBnnC,KAAKmnC,MAAMl7B,KAAOkI,OALlBnU,KAAKknC,MAAQ/yB,EAOdnU,KAAKmnC,MAAQhzB,EAGNpU,WAAWoU,GAClB,GAAIA,IAASnU,KAAKknC,OAAS/yB,IAASnU,KAAKmnC,MACxCnnC,KAAKknC,WAAQntC,EACbiG,KAAKmnC,WAAQptC,OAET,GAAIoa,IAASnU,KAAKknC,MAAO,CAG7B,IAAK/yB,EAAKlI,KACT,MAAM,IAAIjN,MAAM,gBAEjBmV,EAAKlI,KAAKwB,cAAW1T,EACrBiG,KAAKknC,MAAQ/yB,EAAKlI,UAEd,GAAIkI,IAASnU,KAAKmnC,MAAO,CAG7B,IAAKhzB,EAAK1G,SACT,MAAM,IAAIzO,MAAM,gBAEjBmV,EAAK1G,SAASxB,UAAOlS,EACrBiG,KAAKmnC,MAAQhzB,EAAK1G,aAEd,CACJ,MAAMxB,EAAOkI,EAAKlI,KACZwB,EAAW0G,EAAK1G,SACtB,IAAKxB,IAASwB,EACb,MAAM,IAAIzO,MAAM,gBAEjBiN,EAAKwB,SAAWA,EAChBA,EAASxB,KAAOA,EAEjBkI,EAAKlI,UAAOlS,EACZoa,EAAK1G,cAAW1T,EAGTgG,MAAMoU,EAAkBhX,GAC/B,IAAK6C,KAAKknC,QAAUlnC,KAAKmnC,MACxB,MAAM,IAAInoC,MAAM,gBAEjB,GAAU,IAAL7B,GAA8B,IAALA,EAI9B,GAAS,IAALA,EAAuB,CAC1B,GAAIgX,IAASnU,KAAKknC,MACjB,OAGD,MAAMj7B,EAAOkI,EAAKlI,KACZwB,EAAW0G,EAAK1G,SAGlB0G,IAASnU,KAAKmnC,OAGjB15B,EAAUxB,UAAOlS,EACjBiG,KAAKmnC,MAAQ15B,IAIbxB,EAAMwB,SAAWA,EACjBA,EAAUxB,KAAOA,GAIlBkI,EAAK1G,cAAW1T,EAChBoa,EAAKlI,KAAOjM,KAAKknC,MACjBlnC,KAAKknC,MAAMz5B,SAAW0G,EACtBnU,KAAKknC,MAAQ/yB,OACP,GAAS,IAALhX,EAAuB,CACjC,GAAIgX,IAASnU,KAAKmnC,MACjB,OAGD,MAAMl7B,EAAOkI,EAAKlI,KACZwB,EAAW0G,EAAK1G,SAGlB0G,IAASnU,KAAKknC,OAGjBj7B,EAAMwB,cAAW1T,EACjBiG,KAAKknC,MAAQj7B,IAGbA,EAAMwB,SAAWA,EACjBA,EAAUxB,KAAOA,GAElBkI,EAAKlI,UAAOlS,EACZoa,EAAK1G,SAAWzN,KAAKmnC,MACrBnnC,KAAKmnC,MAAMl7B,KAAOkI,EAClBnU,KAAKmnC,MAAQhzB,GAIfpU,SACC,MAAM1F,EAAiB;CAMvB,OAJA2F,KAAKT,QAAQ,CAACT,EAAOL,KACpBpE,EAAKlD,KAAK,CAACsH,EAAKK,MAGVzE,EAGR0F,SAAS1F,GACR2F,KAAKwB,QAEL,IAAK,MAAO/C,EAAKK,KAAUzE,EAC1B2F,KAAKI,IAAI3B,EAAKK,IAnVjBF,EAAAooC,UAAAA,EAwVApoC,EAAA+oC,SAAA,cAAoCX,EAKnCjnC,YAAY6nC,EAAeC,EAAgB,GAC1CvjC,QACAtE,KAAK8nC,OAASF,EACd5nC,KAAK+nC,OAASljC,KAAKoD,IAAIpD,KAAKwI,IAAI,EAAGw6B,GAAQ,GAG5CD,YACC,OAAO5nC,KAAK8nC,OAGbF,UAAUA,GACT5nC,KAAK8nC,OAASF,EACd5nC,KAAKgoC,YAGNH,YACC,OAAO7nC,KAAK+nC,OAGbF,UAAUA,GACT7nC,KAAK+nC,OAASljC,KAAKoD,IAAIpD,KAAKwI,IAAI,EAAGw6B,GAAQ,GAC3C7nC,KAAKgoC,YAGNjoC,IAAItB,GACH,OAAO6F,MAAMpE,IAAIzB,EAAG,GAGrBsB,KAAKtB,GACJ,OAAO6F,MAAMpE,IAAIzB,EAAG,GAGrBsB,IAAItB,EAAQK,GACXwF,MAAMlE,IAAI3B,EAAKK,EAAK,GACpBkB,KAAKgoC,YAGEjoC,YACHC,KAAKZ,KAAOY,KAAK8nC,QACpB9nC,KAAKioC,QAAQpjC,KAAKqjC,MAAMloC,KAAK8nC,OAAS9nC,KAAK+nC,sSCl1B9CnpC,EAAAupC,mBAAA,WACC,OAAOtqC,OAAOK,OAAO,OAOtB,MAAMkqC,EAAW,KACXC,EAAa,IACbC,EAAa,UACbC,EAAgB,WAChBC,EAAsB,MAE5B,SAASC,EAAcC,GACtB,OAAQA,GACP,KAAK,EACJ,MAAO;CACR,KAAK,EACJ,MAAO,GAAGH,MACX,QAIC,MAAO,MAAMD,KAAcC,KAAiBD,KAAcA,IAAaC,SAI1E,SAAgBI,EAAe71B,EAAiB81B,GAC/C,IAAK91B,EACJ,MAAO,GAGR,MAAMV,EAAqB,GAE3B,IAAIy2B,GAAW,EACXC,GAAa,EAEbC,EAAS,GACb,IAAK,MAAMpZ,KAAQ7c,EAAS,CAC3B,OAAQ6c,GACP,KAAKiZ,EACJ,IAAKC,IAAaC,EAAY,CAC7B12B,EAASjb,KAAK4xC,GACdA,EAAS,GAET,SAED,MACD,IAAK,IACJF,GAAW,EACX,MACD,IAAK,IACJA,GAAW,EACX,MACD,IAAK,IACJC,GAAa,EACb,MACD,IAAK,IACJA,GAAa,EAIfC,GAAUpZ,EAQX,OAJIoZ,GACH32B,EAASjb,KAAK4xC,GAGR32B,EA3CRxT,EAAA+pC,eAAAA,EAuLA,MAAMK,EAAK,uBACLC,EAAK,wBACLC,EAAK,2DACLC,EAAO,6EACPC,EAAK,2BACLC,EAAK,+BA4BLC,EAAQ,IAAIC,EAAA5B,SAAsC,KAElD6B,EAAQ,WACb,OAAO,GAGFC,EAAO,WACZ,OAAO,MAGR,SAASC,EAAaC,EAAiCx5B,GACtD,IAAKw5B,EACJ,OAAOF,EAIR,IAAI32B,EAWJ,MAAM82B,EAAa,GAHnB92B,GANCA,EADmB,iBAAT62B,EACAA,EAAK72B,QAEL62B,GAIOna,YAGiBrf,EAAQ05B,oBAC3C,IAMIvX,EANAwX,EAAgBR,EAAMppC,IAAI0pC,GAC9B,GAAIE,EACH,OAAOC,EAAoBD,EAAeH,GAK3C,GAAIX,EAAGzgB,KAAKzV,GAAU,CACrB,MAAMyX,EAAOzX,EAAQkkB,OAAO,GAC5B8S,EAAgB,SAAUzxC,EAAM+0B,GAC/B,MAAuB,iBAAT/0B,GAAqBA,EAAK06B,SAASxI,GAAQzX,EAAU,WAGpEg3B,GADUxX,EAAQ2W,EAAGrV,KAAKiW,EAAkB/2B,EAAS3C,KAuCvD,SAAiBoa,EAAcyf,GAC9B,MAAMC,EAAY,IAAI1f,IAChB2f,EAAgB,KAAK3f,IACrBuf,EAAqC,SAAUzxC,EAAM+0B;AAC1D,MAAoB,iBAAT/0B,EACH,KAEJ+0B,EACIA,IAAa7C,EAAOyf,EAAkB,KAEvC3xC,IAASkyB,GAAQlyB,EAAK06B,SAASkX,IAAc5xC,EAAK06B,SAASmX,GAAiBF,EAAkB,MAEhGG,EAAY,CAAC5f,GAInB,OAHAuf,EAAcK,UAAYA,EAC1BL,EAAcM,SAAW,CAACJ,GAC1BF,EAAcO,aAAeF,EACtBL,EAtDUQ,CAAQhY,EAAM,GAAIxf,IACvB3C,EAAQ05B,kBAAoBV,EAAOD,GAAI3gB,KAAKzV,GAyDzD,SAAiBA,EAAiB3C,GACjC,MAAMo6B,EAAiBC,EAAyB13B,EAAQ5a,MAAM,GAAI,GAAGiM,MAAM,KACzExK,IAAImZ,GAAW42B,EAAa52B,EAAS3C,IACrC9H,OAAOyK,GAAWA,IAAY22B,GAAO32B,GACjCzM,EAAIkkC,EAAe/zC,OACzB,IAAK6P,EACJ,OAAOojC,EAER,GAAU,IAANpjC,EACH,OAA4BkkC,EAAe,GAE5C,MAAMT,EAAqC,SAAUzxC,EAAc+0B,GAClE,IAAK,IAAI92B,EAAI,EAAG+P,EAAIkkC,EAAe/zC,OAAQF,EAAI+P,EAAG/P,IACjD,GAA0Bi0C,EAAej0C,GAAI+B,EAAM+0B,GAClD,OAAOta,EAGT,OAAO,MAEF23B,EAAgBC,EAAOprC,MAAMirC,EAAgBz3B,KAAmCA,EAASu3B,cAC3FI,IACHX,EAAcO,aAAqCI,EAAeJ,cAEnE,MAAMM,EAAWJ,EAAexgC,OAAO,CAACrQ,EAAKyT,IAAYA,EAAQw9B,SAAWjxC,EAAI+P,OAAO0D,EAAQw9B,UAAYjxC,EAAe,IACtHixC,EAASn0C,SACZszC,EAAca,SAAWA,GAE1B,OAAOb,EAnFUc,CAAQ93B,EAAS3C,IACvBmiB,EAAQ8W,EAAGxV,KAAKiW,EAAkB/2B,EAAS3C,KACrC06B,EAAYvY,EAAM,GAAG0E,OAAO,GAAIlkB,GAAS,IAC/Cwf,EAAQ+W,EAAGzV,KAAKiW,EAAkB/2B,EAAS3C,KACrC06B,EAAYvY,EAAM,GAAIxf,GAAS,GA+FjD,SAAkBA,GACjB,IACC,MAAMg4B,EAAS,IAAIrX,OAAO,IA1T5B,SAASsX,EAAYj4B,GACpB,IAAKA,EACJ,MAAO,GAGR,IAAIk4B,EAAQ,GAGZ,MAAM54B,EAAWu2B,EAAe71B,EAASu1B,GAGzC,GAAIj2B,EAASwb,MAAMyJ,GAAKA,IAAM+Q,GAC7B4C,EAAQ,SAIJ,CACJ,IAAIC,GAA6B,EACjC74B,EAAS7S,QAAQ,CAACqU,EAASlY,KAG1B,GAAIkY,IAAYw0B,EAQf,YALK6C,IACJD,GAASvC,EAAc,GACvBwC,GAA6B,IAO/B,IAAIpC,GAAW,EACXqC,EAAW,GAEXpC,GAAa,EACbqC,EAAa,GAEjB,IAAK,MAAMxb,KAAQ/b,EAElB,GAAa,MAAT+b,GAAgBkZ,EACnBqC,GAAYvb,OAKb,IAAImZ,GAAwB,MAATnZ,GAAiBwb,EA4BpC,OAAQxb,GACP,IAAK,IACJkZ,GAAW,EACX,SAED,IAAK,IACJC,GAAa,EACb,SAED,IAAK;AACJ,MAGMsC,EAAc,MAHJzC,EAAeuC,EAAU,KAGPvxC,IAAIhB,GAAKoyC,EAAYpyC,IAAIkB,KAAK,QAEhEmxC,GAASI,EAETvC,GAAW,EACXqC,EAAW,GAEX,MAED,IAAK,IACJF,GAAU,IAAMG,EAAa,IAE7BrC,GAAa,EACbqC,EAAa,GAEb,MAGD,IAAK,IACJH,GAASzC,EACT,SAED,IAAK,IACJyC,GAASvC,EAAc,GACvB,SAED,QACCuC,GAAS9R,EAAQpJ,uBAAuBH,OApE1C,CACC,IAAIvY,EAuBJ+zB,GAnBC/zB,EADY,MAATuY,EACGA,EAIY,MAATA,GAAyB,MAATA,GAAkBwb,EAMnCxb,IAAS0Y,EACX,GAKAnP,EAAQpJ,uBAAuBH,GAX/B,IAmELj0B,EAAQ0W,EAAS5b,OAAS,IAAM4b,EAAS1W,EAAQ,KAAO0sC,GAAY1sC,EAAQ,EAAI0W,EAAS5b,UAC5Fw0C,GAAS1C,GAIV2C,GAA6B,IAI/B,OAAOD,EAqLwBD,CAAYj4B,OAC1C,OAAO,SAAUza,GAEhB,OADAyyC,EAAO1hC,UAAY,EACI,iBAAT/Q,GAAqByyC,EAAOviB,KAAKlwB,GAAQya,EAAU,MAEjE,MAAOjX,GACR,OAAO4tC,GAlGS4B,CAASv4B,GAM1B,OAFAw2B,EAAMlpC,IAAIwpC,EAAYE,GAEfC,EAAoBD,EAAeH,GAG3C,SAASI,EAAoBD,EAAoCwB,GAChE,MAAoB,iBAATA,EACHxB,EAGD,SAAUzxC,EAAM+0B,GACtB,OAAKme,EAAQ3P,gBAAgBvjC,EAAMizC,EAAK/gB,MAGjCuf,EAAc3e,EAAM+B,SAASoe,EAAK/gB,KAAMlyB,GAAO+0B,GAF9C,MAMV,SAASyc,EAAkB/2B,EAAiB3C,GAC3C,OAAOA,EAAQ05B,mBAAqB/2B,EAAQigB,SAAS,OAASjgB,EAAQkkB,OAAO,EAAGlkB,EAAQtc,OAAS,GAAKsc,EAuDvG,SAAS+3B,EAAYxyC,EAAcya,EAAiB04B,GACnD,MAAMC,EAAatgB,EAAMvY,MAAQuY,EAAM2B,MAAMla,IAAMva,EAAKqG,QAAQ8pC,EAAqBrd,EAAMvY,KAAOva,EAC5FqzC,EAAgBvgB,EAAMvY,IAAM64B,EAC5B3B,EAAqC0B,EAAgB,SAAUnzC,EAAM+0B,GAC1E,MAAuB,iBAAT/0B,GAAsBA,IAASozC,IAAcpzC,EAAK06B,SAAS2Y,GAA4B,KAAV54B,GACxF,SAAUza,EAAM+0B,GACnB,MAAuB,iBAAT/0B,GAAqBA,IAASozC,EAAa34B,EAAU,MAGpE,OADAg3B,EAAca,SAAW,EAAEa,EAAgB,KAAO,MAAQnzC,GACnDyxC,EA2CR,SAAgBxuC,EAAMquC,EAA+Cx5B,EAAwB,IAC5F,IAAKw5B,EACJ,OAAOH,EAIR,GAAoB,iBAATG,GAAqBgC,EAAkBhC,GAAO,CACxD,MAAMG,EAAgBJ,EAAaC,EAAMx5B;CACzC,GAAI25B,IAAkBL,EACrB,OAAOD,EAER,MAAMoC,EAAmF,SAAUvzC,EAAc+0B,GAChH,QAAS0c,EAAczxC,EAAM+0B,IAQ9B,OANI0c,EAAcO,eACjBuB,EAAcvB,aAAeP,EAAcO,cAExCP,EAAca,WACjBiB,EAAcjB,SAAWb,EAAca,UAEjCiB,EAIR,OAuDD,SAA0BC,EAAyB17B,GAClD,MAAMo6B,EAAiBC,EAAyB3sC,OAAO4D,oBAAoBoqC,GACzElyC,IAAImZ,IA0EP,SAAgCA,EAAiBhU,EAAgCqR,GAChF,IAAc,IAAVrR,EACH,OAAO2qC,EAGR,MAAMK,EAAgBJ,EAAa52B,EAAS3C,GAC5C,GAAI25B,IAAkBL,EACrB,OAAOA,EAIR,GAAqB,kBAAV3qC,EACV,OAAOgrC,EAIR,GAAIhrC,EAAO,CACV,MAAMgtC,EAAuBhtC,EAAOgtC,KACpC,GAAoB,iBAATA,EAAmB,CAC7B,MAAMz1C,EAAkC,CAACgC,EAAc+0B,EAAmBl2B,EAAe60C,KACxF,IAAKA,IAAejC,EAAczxC,EAAM+0B,GACvC,OAAO,KAGR,MACM4e,EAAUD,EADMD,EAAKptC,QAAQ,cAAexH,IAElD,OAAO+0C,EAAAztB,WAAWwtB,GACjBA,EAAQ9yC,KAAKqN,GAAKA,EAAIuM,EAAU,MAChCk5B,EAAUl5B,EAAU,MAGtB,OADAzc,EAAO61C,kBAAmB,EACnB71C,GAKT,OAAOyzC,GA9GUqC,CAAuBr5B,EAAS+4B,EAAW/4B,GAAU3C,IACpE9H,OAAOyK,GAAWA,IAAY22B,IAE1BpjC,EAAIkkC,EAAe/zC,OACzB,IAAK6P,EACJ,OAAOojC,EAGR,IAAKc,EAAer+B,KAAK49B,KAA6CA,EAAeoC,kBAAmB,CACvG,GAAU,IAAN7lC,EACH,OAA4BkkC,EAAe,GAG5C,MAAM6B,EAAwC,SAAU/zC,EAAc+0B,GACrE,IAAK,IAAI92B,EAAI,EAAG+P,EAAIkkC,EAAe/zC,OAAQF,EAAI+P,EAAG/P,IAAK,CAEtD,MAAMD,EAA+Bk0C,EAAej0C,GAAI+B,EAAM+0B,GAC9D,GAAI/2B,EACH,OAAOA,EAIT,OAAO,MAGFo0C,EAAgBC,EAAOprC,MAAMirC,EAAgBz3B,KAAmCA,EAASu3B,cAC3FI,IACH2B,EAAiB/B,aAAqCI,EAAeJ,cAGtE,MAAMM,EAAWJ,EAAexgC,OAAO,CAACrQ,EAAKyT,IAAYA,EAAQw9B,SAAWjxC,EAAI+P,OAAO0D,EAAQw9B,UAAYjxC,EAAe,IAK1H,OAJIixC,EAASn0C,SACZ41C,EAAiBzB,SAAWA,GAGtByB,EAGR,MAAMA,EAAwC,SAAU/zC,EAAc+0B,EAAmB2e,GACxF,IAAI70C,OAA2B6C,EAE/B,IAAK,IAAIzD,EAAI,EAAG+P,EAAIkkC,EAAe/zC,OAAQF,EAAI+P,EAAG/P,IAAK,CAEtD,MAAMwzC,EAA0CS,EAAej0C;CAC3DwzC,EAAcoC,kBAAoBH,IAChC3e,IACJA,EAAWjC,EAAMiC,SAAS/0B,IAEtBnB,IACJA,EAAOk2B,EAAS4J,OAAO,EAAG5J,EAAS52B,OAAS20B,EAAMkC,QAAQh1B,GAAM7B,UAGlE,MAAMH,EAASyzC,EAAczxC,EAAM+0B,EAAUl2B,EAAM60C,GACnD,GAAI11C,EACH,OAAOA,EAIT,OAAO,MAGFo0C,EAAgBC,EAAOprC,MAAMirC,EAAgBz3B,KAAmCA,EAASu3B,cAC3FI,IACH2B,EAAiB/B,aAAqCI,EAAeJ,cAGtE,MAAMM,EAAWJ,EAAexgC,OAAO,CAACrQ,EAAKyT,IAAYA,EAAQw9B,SAAWjxC,EAAI+P,OAAO0D,EAAQw9B,UAAYjxC,EAAe,IACtHixC,EAASn0C,SACZ41C,EAAiBzB,SAAWA,GAG7B,OAAOyB,EAhIAC,CAA8B1C,EAAMx5B,GAiC5C,SAASm8B,EAAUC,GAClB,MAAM5yC,EAA4B,GAClC,IAAK,MAAM8E,KAAO8tC,EACjB5yC,EAAI8E,IAAO,EAEZ,OAAO9E,EAGR,SAAgBgyC,EAAkBljC,GACjC,MAAM+jC,EAAK/jC,EAEX,OAAO+jC,GAAyB,iBAAZA,EAAGjiB,MAA2C,iBAAfiiB,EAAG15B,QA8HvD,SAAS03B,EAAyBD,EAAsEl0C,GACvG,MAAMo2C,EAAmBlC,EAAeliC,OAAOyhC,KAAyCA,EAAeK,WACvG,GAAIsC,EAAiBj2C,OAAS,EAC7B,OAAO+zC,EAGR,MAAMJ,EAAYsC,EAAiB1iC,OAAiB,CAACrQ,EAAKyT,KACzD,MAAMg9B,EAAkCh9B,EAASg9B,UACjD,OAAOA,EAAYzwC,EAAI+P,OAAO0gC,GAAazwC,GAC/B,IACb,IAAI0wC,EACJ,GAAI/zC,EAAQ,CACX+zC,EAAW,GACX,IAAK,IAAI9zC,EAAI,EAAG+P,EAAI8jC,EAAU3zC,OAAQF,EAAI+P,EAAG/P,IAC5C8zC,EAASjzC,KAAKd,QAGf+zC,EAAWqC,EAAiB1iC,OAAO,CAACrQ,EAAKyT,KACxC,MAAMi9B,EAAiCj9B,EAASi9B,SAChD,OAAOA,EAAW1wC,EAAI+P,OAAO2gC,GAAY1wC,GAC7B,IAEd,MAAMgzC,EAAiC,SAAUr0C,EAAM+0B,GACtD,GAAoB,iBAAT/0B,EACV,OAAO,KAER,IAAK+0B,EAAU,CACd,IAAI92B,EACJ,IAAKA,EAAI+B,EAAK7B,OAAQF,EAAI,EAAGA,IAAK,CACjC,MAAMiY,EAAKlW,EAAKmW,WAAWlY,EAAI,GAC/B,GAAM,KAAFiY,GAA2B,KAAFA,EAC5B,MAGF6e,EAAW/0B,EAAK2+B,OAAO1gC,GAExB,MAAMoF,EAAQyuC,EAAUxoC,QAAQyrB,GAChC,OAAkB,IAAX1xB,EAAe0uC,EAAS1uC,GAAS,MAEzCgxC,EAAUvC,UAAYA,EACtBuC,EAAUtC,SAAWA,EACrBsC,EAAUrC,aAAeF,EAEzB,MAAMwC,EAAqBpC,EAAeliC,OAAOyhC,IAAwCA,EAAeK;CAExG,OADAwC,EAAmBx1C,KAAKu1C,GACjBC,EAjQR/tC,EAAA0zB,MAAA,SAAsBqX,EAA+CtxC,EAAc0zC,GAClF,SAAKpC,GAAwB,iBAATtxC,IAIbiD,EAAmBquC,EAAnBruC,CAAyBjD,OAAM0B,EAAWgyC,IAalDntC,EAAAtD,MAAAA,EA2BAsD,EAAAguC,oBAAA,SAAoCC,GACnC,IAAKA,EACJ,OAGD,IAAIC,EACJ,OAAQ51C,IACF41C,IACJA,GAAYD,KAAgBn0C,QAAQyB,QAAQ,KAC1CjB,KAAKqzC,GAAQA,EAAOD,EAAUC,GAAQ,KAElCO,EAAS5zC,KAAKS,KAASA,EAAIzC,MAIpC0H,EAAAmuC,aAAA,SAA6BF,GAC5B,IAAKA,EACJ,OAGD,IAAIC,EACJ,OAAQ51C,IACP,IAAK41C,EAAU,CACd,MAAMP,EAAOM,IACbC,EAAWP,EAAOD,EAAUC,GAAQ,GAErC,QAASO,EAAS51C,KAYpB0H,EAAA+sC,kBAAAA,EAMA/sC,EAAAouC,iBAAA,SAAiCC,GAChC,OAA6BA,EAAqB5C,cAAgB,IAGnEzrC,EAAAsuC,aAAA,SAA6BD,GAC5B,OAA6BA,EAAqBtC,UAAY,kECtf/D,SAASwC,EAAS1uC,EAAaK,GAE9B,OAAIA,aAAiB20B,OACb,CACN6N,KAAM,EACN5iB,OAAQ5f,EAAM4f,OACd0uB,MAAOzR,EAAA5H,YAAYj1B,IAGdA,EAGR,SAAgBuuC,EAAO5kC,EAAU6kC,EAAQ,GACxC,IAAK7kC,GAAO6kC,EAAQ,IACnB,OAAO7kC,EAGR,GAAmB,iBAARA,EAAkB,CAE5B,OAA2BA,EAAK64B,MAC/B,KAAK,EAAG,OAAOoC,EAAA9D,IAAIyN,OAAO5kC,GAC1B,KAAK,EAAG,OAAO,IAAIgrB,OAAOhrB,EAAIiW,OAAQjW,EAAI2kC,OAI3C,IAAK,IAAI3uC,KAAOgK,EACX5K,OAAOoB,eAAeE,KAAKsJ,EAAKhK,KACnCgK,EAAIhK,GAAO4uC,EAAO5kC,EAAIhK,GAAM6uC,EAAQ,IAKvC,OAAO7kC,uFA9CR7J,EAAAD,UAAA,SAA0B8J,GACzB,OAAOpN,KAAKsD,UAAU8J,EAAK0kC,IAG5BvuC,EAAAtD,MAAA,SAAsByS;AACrB,IAAI1T,EAAOgB,KAAKC,MAAMyS,GAEtB,OADA1T,EAAOgzC,EAAOhzC,IAoBfuE,EAAAyuC,OAAAA,+DC1BA,IAAiBE,wFAAjB,SAAiBA,GAMHA,EAAAC,SAAW,WAKXD,EAAAE,OAAS,SAKTF,EAAAG,SAAW,UAKXH,EAAAI,YAAc,cAKdJ,EAAAK,mBAAqB,qBAErBL,EAAAM,KAAO,OAEPN,EAAAO,MAAQ,QAERP,EAAA90C,KAAO,OAEP80C,EAAAQ,OAAS,SAETR,EAAAS,SAAW,WAEXT,EAAAlzC,KAAO,OAEPkzC,EAAAU,QAAU,UAEVV,EAAAW,aAAe,gBAEfX,EAAAY,qBAAuB,yBAEvBZ,EAAAa,SAAW,kBAEXb,EAAAc,mBAAqB,uBAErBd,EAAAe,eAAiB,kBAEjBf,EAAAgB,aAAe,gBApD7B,CAAiBhB,EAAA3uC,EAAA2uC,UAAA3uC,EAAA2uC,QAAO,KAwGX3uC,EAAA4vC,kBAAoB,IAjDjC,MAAAzuC,cACkBC,KAAAyuC,OAAuD5wC,OAAOK,OAAO,MACrE8B,KAAA0uC,OAAuD7wC,OAAOK,OAAO,MACrE8B,KAAA2uC,kBAAkE9wC,OAAOK,OAAO,MACzF8B,KAAA4uC,oBAAwC,OACxC5uC,KAAA6uC,UAAwC,KAEhD9uC,sBAAsB+uC,GACrB9uC,KAAK4uC,oBAAsBE,EAG5B/uC,YAAYgvC,GACX/uC,KAAK6uC,UAAYE,EAGlBhvC,IAAI+/B,EAAmBkP,EAAcC,GACpCjvC,KAAKyuC,OAAO3O,GAAakP;AACzBhvC,KAAK0uC,OAAO5O,GAAamP,EAG1BlvC,mBAAmB+/B,EAAmBoP,GACrClvC,KAAK2uC,kBAAkB7O,GAAaoP,EAGrCnvC,QAAQ6gC,GACP,GAAI5gC,KAAK6uC,UACR,OAAO7uC,KAAK6uC,UAAUjO,GAEvB,MAAMd,EAAYc,EAAId,UACtB,IAAIkP,EAAOhvC,KAAKyuC,OAAO3O,GACnBkP,IAA+B,IAAvBA,EAAKrtC,QAAQ,OACxBqtC,EAAO,IAAIA,MAGZ,MAAME,EAAkBlvC,KAAK2uC,kBAAkB7O,GAC/C,IAAIvI,EAAQ,QAAQJ,mBAAmByJ,EAAIvoC,QAK3C,MAJ+B,iBAApB62C,IACV3X,GAAS,QAAQJ,mBAAmB+X,MAG9BxL,EAAA9D,IAAIjoC,KAAK,CACfsoC,OAAQja,EAASkB,MAAQlnB,KAAK4uC,oBAAsBrB,EAAQY,qBAC5DrO,UAAWqP,OAAOt2C,SAASm2C,KAC3B32C,KAAM,GAAG82C,OAAOt2C,SAASu2C,SAAS1wC,QAAQ,OAAQ,6BAClD64B,MAAAA,qLC9FU34B,EAAAywC,aAAkG,mBAA3EjrC,OAAOlF,UAAsDssB,UAEjG,MAAM8jB,EAAW,IAAI/F,EAAA5B,SAAyB,KAC9C/oC,EAAA2wC,aAAA,SAA6BhgB,GAC5B,OAAO/D,EAAU+D,EAAK,MAAO+f,IAG9B,MAAME,EAAW,IAAIjG,EAAA5B,SAAyB,KAC9C,SAAgB8H,EAAalgB,GAC5B,OAAO/D,EAAU+D,EAAK,MAAOigB,GAD9B5wC,EAAA6wC,aAAAA,EAIA,MAAMC,EAA4B,mBAClC,SAASlkB,EAAU+D,EAAaogB,EAAcC,GAC7C,IAAKhxC,EAAAywC,eAAiB9f,EACrB,OAAOA,EAGR,MAAMsgB,EAASD,EAAgB1vC,IAAIqvB;CACnC,GAAIsgB,EACH,OAAOA,EAGR,IAAIz4B,EAUJ,OARCA,EADGs4B,EAA0BnnB,KAAKgH,GACtBA,EAAK/D,UAAUmkB,GAErBpgB,EAIPqgB,EAAgBxvC,IAAImvB,EAAKnY,GAElBA,EAGKxY,EAAAkxC,cAAyC,WACrD,GAAKlxC,EAAAywC,aAGE,CAGN,MAAMU,EAAQ,mBACd,OAAO,SAAUxgB,GAChB,OAAOkgB,EAAalgB,GAAK7wB,QAAQqxC,EAAO,KANzC,OAAO,SAAUxgB,GAAe,OAAOA,GAHa,6FClCtD,SAAgBygB,EAAepP,GAC9B,IAAI9hC,EACJ,MAAMmxC,EAAUrP,EAAIvoC,KAkBpB,OAfCyG,EAFG8hC,EAAId,WAAamQ,EAAQz5C,OAAS,GAAoB,SAAfoqC,EAAIX,OAEtC,KAAKW,EAAId,YAAYmQ,IAE7BpnB,EAAA/B,WACwB,KAArBmpB,EAAQzhC,WAAW,IACnB+8B,EAAQzQ,qBAAqBmV,EAAQzhC,WAAW,KAC3B,KAArByhC,EAAQzhC,WAAW,GAEdyhC,EAAQjZ,OAAO,GAGfiZ,EAELpnB,EAAA/B,YACHhoB,EAAQA,EAAMJ,QAAQ,MAAO,OAEvBI,EAeR,SAAgBoxC,EAAgB3tB,GAG/B,OAAOA,GAAYA,EAAS0d,SAAWkQ,EAAA5C,QAAQ90C,OAAQowB,EAAA7B,QAaxD,SAAgB4U,EAAgBrR,EAAW6lB,EAAsBpc,EAAakc,EAAgB3lB,IAC7F,GAAIA,EAAK0V,SAAWmQ,EAAgBnQ,OAAQ,CAC3C,GAAI1V,EAAK0V,SAAWkQ,EAAA5C,QAAQ90C,KAC3B,OAAO8yC,EAAQ3P,gBAAgBoU,EAAezlB,GAAOylB,EAAeI,GAAkBpc,IAAezJ,EAAKgN,QAAU6Y,EAAgB7Y,MAErI,GAAI8Y,EAAiB9lB,EAAKuV,UAAWsQ,EAAgBtQ,WACpD,OAAOyL,EAAQ3P,gBAAgBrR,EAAKlyB,MAAQ,IAAK+3C,EAAgB/3C,MAAQ,IAAK27B,EAAY,MAAQzJ,EAAKgN,QAAU6Y,EAAgB7Y,MAGnI,OAAO,EAMR,SAAgB8Y,EAAiBC,EAAYC,GAC5C,OAAOD,IAAOC,GAAM5U,EAAApH,iBAAiB+b,EAAIC,GAuB1C,SAAgBnjB,EAAS7K,GACxB,OAAO4I,EAAM2B,MAAMM,SAAS7K,EAASlqB,MAkFtC,SAAgBm4C,EAAyBjuB,EAAe3P,EAAcuY,EAAMvY;AAC3E,GAAI2P,EAAS0d,SAAWkQ,EAAA5C,QAAQ90C,KAAM,CACrC,MAAMg4C,EAAMT,EAAeztB,GAC3B,OAAOkuB,EAAIj6C,OAAS+0C,EAAQ3Q,QAAQ6V,GAAKj6C,QAAUi6C,EAAIA,EAAIj6C,OAAS,KAAOoc,EACrE,CACN,MAAMnO,EAAI8d,EAASlqB,KACnB,OAAQoM,EAAEjO,OAAS,GAA+B,KAA1BiO,EAAE+J,WAAW/J,EAAEjO,OAAS,KAA4B,sBAAsB+xB,KAAKhG,EAAS8d,SAwClH,SAAgBoD,EAAa9rC,EAAWC,EAAS84C,EAAsBR,EAAgBv4C,IACtF,GAAIA,EAAKsoC,SAAWroC,EAAGqoC,SAAWoQ,EAAiB14C,EAAKmoC,UAAWloC,EAAGkoC,WACrE,OAED,GAAInoC,EAAKsoC,SAAWkQ,EAAA5C,QAAQ90C,KAAM,CACjC,MAAMgrC,EAAetY,EAAM+B,SAAS8iB,EAAer4C,GAAOq4C,EAAep4C,IACzE,OAAOixB,EAAA/B,UAAYykB,EAAQ9Q,UAAUgJ,GAAgBA,EAEtD,IAAIkN,EAAWh5C,EAAKU,MAAQ,IAAKu4C,EAASh5C,EAAGS,MAAQ,IACrD,GAAIq4C,EAAqB,CAExB,IAAIp6C,EAAI,EACR,IAAK,MAAMC,EAAMsO,KAAKoD,IAAI0oC,EAASn6C,OAAQo6C,EAAOp6C,QAASF,EAAIC,IAC1Do6C,EAASniC,WAAWlY,KAAOs6C,EAAOpiC,WAAWlY,IAC5Cq6C,EAASvd,OAAO98B,GAAGw0B,gBAAkB8lB,EAAOxd,OAAO98B,GAAGw0B,eAFQx0B,KAOpEq6C,EAAWC,EAAO5Z,OAAO,EAAG1gC,GAAKq6C,EAAS3Z,OAAO1gC,GAElD,OAAO60B,EAAM2B,MAAMI,SAASyjB,EAAUC;kYAhPvChyC,EAAAoxC,eAAAA,EA2BApxC,EAAAiyC,iBAAA,SAAiCtuB,EAAemuB,EAAsBR,EAAgB3tB,IACrF,IAAIlqB,EAAOkqB,EAASlqB,MAAQ,IAI5B,OAHIq4C,IACHr4C,EAAOA,EAAKyyB,eAENvI,EAAS+d,KAAK,CAAER,UAAWvd,EAASud,UAAUhV,cAAezyB,KAAMA,EAAM0nC,SAAU,OAAQplB,YAGnG/b,EAAAsxC,gBAAAA,EAMAtxC,EAAAkyC,oBAAA,SAAoCvuB,GACnC,OAAO6K,EAAS7K,IAAaA,EAASud,WASvClhC,EAAAg9B,gBAAAA,EAeAh9B,EAAAyxC,iBAAAA,EAOAzxC,EAAA28B,QAAA,SAAwBj8B,EAAwByxC,EAAyBL,EAAsBR,EAAgB5wC,GAAQ0xC,GAAiB,GACvI,GAAI1xC,IAAUyxC,EACb,OAAO,EAGR,IAAKzxC,IAAUyxC,EACd,OAAO,EAGR,GAAIzxC,EAAM2gC,SAAW8Q,EAAO9Q,SAAWoQ,EAAiB/wC,EAAMwgC,UAAWiR,EAAOjR,WAC/E,OAAO,EAGR,MAAMmR,EAAK3xC,EAAMjH,MAAQ,IAAK64C,EAAKH,EAAO14C,MAAQ,IAClD,OAAQ44C,IAAOC,GAAMR,GAAuB/U,EAAApH,iBAAiB0c,EAAIC,KAAQ5xC,EAAMi4B,QAAUwZ,EAAOxZ,QAAUyZ,GAAkB1xC,EAAMygC,WAAagR,EAAOhR,WAGvJnhC,EAAAwuB,SAAAA,EAIAxuB,EAAAyuB,QAAA,SAAwB9K,GACvB,OAAO4I,EAAM2B,MAAMO,QAAQ9K,EAASlqB;AASrCuG,EAAAuuB,QAAA,SAAwB5K,GACvB,GAA6B,IAAzBA,EAASlqB,KAAK7B,OACjB,OAAO+rB,EAER,IAAI4K,EAUJ,OATI5K,EAAS0d,SAAWkQ,EAAA5C,QAAQ90C,KAC/B00B,EAAUuW,EAAA9D,IAAInnC,KAAK0yB,EAAMgC,QAAQ6iB,EAAeztB,KAAYlqB,MAE5D80B,EAAUhC,EAAM2B,MAAMK,QAAQ5K,EAASlqB,MACnCkqB,EAASud,WAAa3S,EAAQ32B,QAA+B,KAArB22B,EAAQ3e,WAAW,KAC9D1X,QAAQ+E,MAAM,YAAY0mB,EAAS5H,0CACnCwS,EAAU,MAGL5K,EAAS+d,KAAK,CACpBjoC,KAAM80B,KAWRvuB,EAAAuyC,SAAA,SAAyB5uB,KAAkBse,GAC1C,IAAIuQ,EAMJ,OAJCA,EADuB,SAApB7uB,EAAS0d,OACCyD,EAAA9D,IAAInnC,KAAK0yB,EAAMtxB,KAAKm2C,EAAeztB,MAAcse,IAAexoC,KAEhE8yB,EAAM2B,MAAMjzB,KAAK0oB,EAASlqB,MAAQ,OAAQwoC,GAEjDte,EAAS+d,KAAK,CACpBjoC,KAAM+4C,KAURxyC,EAAAyyC,cAAA,SAA8B9uB,GAC7B,IAAKA,EAASlqB,KAAK7B,OAClB,OAAO+rB,EAER,IAAI+uB,EAMJ,OAJCA,EADG/uB,EAAS0d,SAAWkQ,EAAA5C,QAAQ90C,KACdirC,EAAA9D,IAAInnC,KAAK0yB,EAAMK,UAAUwkB,EAAeztB,KAAYlqB,KAEpD8yB,EAAM2B,MAAMtB,UAAUjJ,EAASlqB,MAE1CkqB,EAAS+d,KAAK,CACpBjoC,KAAMi5C,KAOR1yC,EAAA2yC,eAAA,SAA+BhvB,GAC9B,QAASA,EAASlqB,MAA6B,MAArBkqB,EAASlqB,KAAK,IAMzCuG,EAAA4xC,yBAAAA,EAcA5xC,EAAA4yC,4BAAA,SAA4CjvB,EAAe3P,EAAcuY,EAAMvY,KAE9E,OAAI49B,EAAyBjuB,EAAU3P,GAC/B2P,EAAS+d,KAAK,CAAEjoC,KAAMkqB,EAASlqB,KAAK2+B,OAAO,EAAGzU,EAASlqB,KAAK7B,OAAS,KAEtE+rB,GAOR3jB,EAAA6yC,yBAAA,SAAyClvB,EAAe3P,EAAcuY,EAAMvY,KAC3E,IAAI8+B,GAAqB,EACzB,GAAInvB,EAAS0d,SAAWkQ,EAAA5C,QAAQ90C,KAAM,CACrC,MAAMg4C,EAAMT,EAAeztB,GAC3BmvB,OAAsB33C,IAAR02C,GAAuBA,EAAIj6C,SAAW+0C,EAAQ3Q,QAAQ6V,GAAKj6C,QAAYi6C,EAAIA,EAAIj6C,OAAS,KAAOoc,MACvG,CACNA,EAAM,IACN,MAAMnO,EAAI8d,EAASlqB;CACnBq5C,EAAyB,IAAbjtC,EAAEjO,QAA0C,KAA1BiO,EAAE+J,WAAW/J,EAAEjO,OAAS,GAEvD,OAAKk7C,GAAclB,EAAyBjuB,EAAU3P,GAG/C2P,EAFCA,EAAS+d,KAAK,CAAEjoC,KAAMkqB,EAASlqB,KAAO,OAS/CuG,EAAA6kC,aAAAA,EA4BA7kC,EAAA+yC,YAAA,SAA4BpnB,EAAWlyB,GACtC,GAAIkyB,EAAK0V,SAAWkQ,EAAA5C,QAAQ90C,KAAM,CACjC,MAAMm5C,EAASlO,EAAA9D,IAAInnC,KAAK0yB,EAAMhxB,QAAQ61C,EAAezlB,GAAOlyB,IAC5D,OAAOkyB,EAAK+V,KAAK,CAChBR,UAAW8R,EAAO9R,UAClBznC,KAAMu5C,EAAOv5C,OASf,OAN2B,IAAvBA,EAAKsJ,QAAQ,OAChBtJ,EAAOkzC,EAAQ9Q,UAAUpiC,GACrB,mBAAmBkwB,KAAKlwB,KAC3BA,EAAO,IAAMA,IAGRkyB,EAAK+V,KAAK,CAChBjoC,KAAM8yB,EAAM2B,MAAM3yB,QAAQowB,EAAKlyB,KAAMA,MAIvCuG,EAAAizC,gBAAA,SAAmC1mC,EAAY2mC,GAC9C,MAAMD,EAAuB,GAC7B,IAAK,IAAIv7C,EAAI,EAAGA,EAAI6U,EAAM3U,OAAQF,IAAK,CACtC,MAAMy7C,EAAoBD,EAAiB3mC,EAAM7U,IAC7C6U,EAAMe,KAAK,CAAC8lC,EAAWt2C,IACtBA,IAAUpF,GAIPslC,EAAgBmW,EAAmBD,EAAiBE,MAK5DH,EAAgB16C,KAAKgU,EAAM7U,IAG5B,OAAOu7C,GAMR,SAAiBI,GAEHA,EAAAC,gBAAkB,QAClBD,EAAAE,sBAAwB,cACxBF,EAAAG,eAAiB,OACjBH,EAAAI,eAAiB,OAEdJ,EAAAK,cAAhB,SAA8BC,GAC7B,MAAM90C,EAAW,IAAIwC,IAIRsyC,EAAQl6C,KAAKuD,UAAU22C,EAAQl6C,KAAKsJ,QAAQ,KAAO,EAAG4wC,EAAQl6C,KAAKsD,YAAY,MACvFwI,MAAM,KAAK5E,QAAQmC,IACvB,MAAOjD,EAAKK,GAAS4C,EAASyC,MAAM,KAChC1F,GAAOK,GACVrB,EAAS2C,IAAI3B,EAAKK,KAMpB,MAAM0zC,EAAOD,EAAQl6C,KAAKuD,UAAU,EAAG22C,EAAQl6C,KAAKsJ,QAAQ,MAK5D,OAJI6wC,GACH/0C,EAAS2C,IAAI6xC,EAAAI,eAAgBG,GAGvB/0C,GA3BT,CAAiBmB,EAAAqzC,UAAArzC,EAAAqzC,QAAO,KA+BxBrzC,EAAA6zC,oBAAA,MAKC1yC,YACC2yC,EACAC;AAJgB3yC,KAAA4yC,kBAAoFrJ,EAAAvD,kBAAkB6M,WAMtH7yC,KAAK0yC,iBAAmBI,EAAAx3C,MAAMo3C,GAC9B,IAAK,MAAM7G,KAAc8G,EACxB3yC,KAAK4yC,kBAAkBxyC,IAAIyrC,EAAWl4B,KAAKgH,WAAY,CAAEhH,KAAMk4B,EAAWl4B,KAAMk4B,WAAYiH,EAAAx3C,MAAMuwC,EAAWA,cAI/G9rC,QAAQwiB,GACP,MAAMwwB,EAAiB/yC,KAAK4yC,kBAAkBI,WAAWzwB,EAAS5H,YAClE,GAAIo4B,EAAgB,CACnB,MAAM16C,EAAOorC,EAAasP,EAAep/B,KAAM4O,GAC/C,GAAIlqB,GAAU06C,EAAelH,WAAWxzC,GACvC,OAAO,EAGT,QAAS2H,KAAK0yC,iBAAiBnwB,EAASlqB,QAI1CuG,EAAAq0C,gBAAA,SAAgC1wB,EAAeud,GAC9C,GAAIA,EAAW,CACd,IAAIznC,EAAOkqB,EAASlqB,KAKpB,OAJIA,GAAQA,EAAK,KAAO8yB,EAAM2B,MAAMla,MACnCva,EAAO8yB,EAAM2B,MAAMla,IAAMva,GAGnBkqB,EAAS+d,KAAK,CAAEL,OAAQkQ,EAAA5C,QAAQW,aAAcpO,UAAAA,EAAWznC,KAAAA,IAGjE,OAAOkqB,EAAS+d,KAAK,CAAEL,OAAQkQ,EAAA5C,QAAQ90C,wFCvRxC,SAASy6C,EAAe76C,GACvB,SAAUwwB,EAAA/B,YAAazuB,GAAoB,MAAZA,EAAK,IAGrC,SAAgB86C,EAAqB96C,GACpC,OAAI66C,EAAe76C,GACXA,EAAK+6B,OAAO,GAAGyE,cAAgBx/B,EAAKH,MAAM,GAG3CG,kOA5ERuG,EAAAw0C,aAAA,SAA6B7wB,EAAwB8wB,EAAsCC;AAM1F,GALwB,iBAAb/wB,IACVA,EAAWmhB,EAAA9D,IAAInnC,KAAK8pB,IAIjB+wB,EAAc,CACjB,MAAMC,EAAeD,EAAaE,mBAAmBjxB,GACrD,GAAIgxB,EAAc,CACjB,MAAME,EAAmBH,EAAaI,eAAeC,QAAQn9C,OAAS,EAEtE,IAAIo9C,EAOJ,GALCA,EADGC,EAAAtY,QAAQgY,EAAa3S,IAAKre,GACjB,GAEAsxB,EAAApQ,aAAa8P,EAAa3S,IAAKre,GAGxCkxB,EAAkB,CACrB,MAAMK,EAAWP,EAAar8C,KAAOq8C,EAAar8C,KAAO28C,EAAAzmB,SAASmmB,EAAa3S,KAC/EgT,EAAYA,EAAaE,EAAW,MAAQF,EAAaE,EAG1D,OAAOF,GAKT,GAAIrxB,EAAS0d,SAAWkQ,EAAA5C,QAAQ90C,MAAQ8pB,EAAS0d,SAAWkQ,EAAA5C,QAAQS,SACnE,OAAOzrB,EAAS+d,KAAK,CAAE/I,MAAO,KAAMwI,SAAU,OAAQplB,UAAS,GAIhE,GAAIu4B,EAAe3wB,EAAS8d,QAC3B,OAAO1F,EAAAnP,UAAU2nB,EAAqB5wB,EAAS8d,SAIhD,IAAIjpB,EAAMujB,EAAAnP,UAAUjJ,EAAS8d,QAK7B,OAJKxX,EAAA/B,WAAausB,IACjBj8B,EAAM28B,EAAQ38B,EAAKi8B,EAAiBW,WAG9B58B,GAKRxY,EAAAq1C,aAAA,SAA6B1xB,GAC5B,IAAKA,EACJ,OAGuB,iBAAbA,IACVA,EAAWmhB,EAAA9D,IAAInnC,KAAK8pB,IAGrB,MAAMgI,EAAOspB,EAAAzmB,SAAS7K,KAAcA,EAAS0d,SAAWkQ,EAAA5C,QAAQ90C,KAAO8pB,EAAS8d,OAAS9d,EAASlqB,MAGlG,OAAI66C,EAAe3oB,GACX4oB,EAAqB5oB,GAGtBA,GAOR3rB,EAAAu0C,qBAAAA,EAQA,IAAIe,EAAqEr2C,OAAOK,OAAO,MACvF,SAAgB61C,EAAQ17C,EAAc27C,GACrC,GAAInrB,EAAA/B,YAAczuB,IAAS27C,EAC1B,OAAO37C,EAIR,IAAI87C,EAAqBD,EAAyBr0C,WAAam0C,EAAWE,EAAyBE,gBAAar6C,EAWhH,OAVKo6C,IACJA,EAAqB,GAAGxY,EAAAxL,MAAM6jB,EAAUrZ,EAAA7N,MAAMla,OAAO+nB,EAAA7N,MAAMla,MAC3DshC,EAA2B,CAAEr0C,SAAUm0C,EAAUI,WAAYD,KAI1DtrB,EAAA7B,QAAU3uB,EAAKy6B,WAAWqhB,GAAsBxY,EAAAnH,qBAAqBn8B,EAAM87C,MAC9E97C,EAAO,KAAKA,EAAK2+B,OAAOmd,EAAmB39C,WAGrC6B,EAjBRuG,EAAAm1C,QAAAA,EAoBAn1C,EAAAy1C,UAAA,SAA0Bh8C,EAAc27C;AACvC,OAAO37C,EAAKqG,QAAQ,cAAe,GAAGs1C,QAgCvC,MAAMM,EAAW,IACXC,EAAM,OACNC,EAAO,IA0Gb,IAAKC,EAzGL71C,EAAA81C,QAAA,SAAwBvpB,EAAiBwpB,EAAwBha,EAAA/nB,KAChE,MAAMgiC,EAA2B,IAAIlsC,MAAMyiB,EAAM30B,QAGjD,IAAI87B,GAAQ,EACZ,IAAK,IAAIuiB,EAAY,EAAGA,EAAY1pB,EAAM30B,OAAQq+C,IAAa,CAC9D,IAAIx8C,EAAO8yB,EAAM0pB,GAEjB,GAAa,KAATx8C,EAAa,CAChBu8C,EAAeC,GAAa,IAAIF,IAChC,SAGD,IAAKt8C,EAAM,CACVu8C,EAAeC,GAAax8C,EAC5B,SAGDi6B,GAAQ,EAGR,IAAIwiB,EAAS,GACa,IAAtBz8C,EAAKsJ,QAAQ4yC,IAChBO,EAASz8C,EAAK2+B,OAAO,EAAG3+B,EAAKsJ,QAAQ4yC,GAAOA,EAAI/9C,QAChD6B,EAAOA,EAAK2+B,OAAO3+B,EAAKsJ,QAAQ4yC,GAAOA,EAAI/9C,SACD,IAAhC6B,EAAKsJ,QAAQgzC,IACvBG,EAASz8C,EAAK2+B,OAAO,EAAG3+B,EAAKsJ,QAAQgzC,GAAiBA,EAAcn+C,QACpE6B,EAAOA,EAAK2+B,OAAO3+B,EAAKsJ,QAAQgzC,GAAiBA,EAAcn+C,SAC9B,IAAvB6B,EAAKsJ,QAAQ6yC,KACvBM,EAASz8C,EAAK2+B,OAAO,EAAG3+B,EAAKsJ,QAAQ6yC,GAAQA,EAAKh+C,QAClD6B,EAAOA,EAAK2+B,OAAO3+B,EAAKsJ,QAAQ6yC,GAAQA,EAAKh+C,SAI9C,MAAM4b,EAAqB/Z,EAAK8L,MAAMwwC,GACtC,IAAK,IAAII,EAAgB,EAAGziB,GAASyiB,GAAiB3iC,EAAS5b,OAAQu+C,IACtE,IAAK,IAAIlvC,EAAQuM,EAAS5b,OAASu+C,EAAeziB,GAASzsB,GAAS,EAAGA,IAAS,CAC/EysB,GAAQ,EACR,IAAI0iB,EAAU5iC,EAASla,MAAM2N,EAAOA,EAAQkvC,GAAel7C,KAAK86C,GAGhE,IAAK,IAAIM,EAAiB,GAAI3iB,GAAS2iB,EAAiB9pB,EAAM30B,OAAQy+C,IAGrE,GAAIA,IAAmBJ,GAAa1pB,EAAM8pB,IAAmB9pB,EAAM8pB,GAAgBtzC,QAAQqzC,IAAY,EAAG,CACzG,MAAME,EAA4BrvC,EAAQkvC,IAAkB3iC,EAAS5b,OAI/D2+C,EAA0BtvC,EAAQ,GAAKslB,EAAM8pB,GAAgBtzC,QAAQgzC,IAAkB,EAAKA,EAAgBK,EAAUA,EACtHI,EAA6BjqB,EAAM8pB,GAAgBliB,SAASoiB,GAElE7iB,GAAS4iB,GAAmBE,EAK9B,IAAK9iB,EAAO,CACX,IAAIj8B,EAAS,IAGT+b,EAAS,GAAG2gB,SAAS,MAAmB,KAAX+hB,KAClB,IAAVjvC,IAEHA,EAAQ,EACRkvC,IACAC,EAAU5iC,EAAS,GAAKuiC,EAAgBK,GAGrCnvC,EAAQ,IACXxP,EAAS+b,EAAS,GAAKuiC,GAGxBt+C,EAASy+C,EAASz+C,GAIfwP,EAAQ,IACXxP,EAASA,EAASi+C,EAAWK,GAG9Bt+C,GAAkB2+C,EAGdnvC,EAAQkvC,EAAgB3iC,EAAS5b,SACpCH,EAASA,EAASs+C,EAAgBL,GAGnCM,EAAeC,GAAax+C,GAK3Bi8B,IACHsiB,EAAeC,GAAax8C,GAI9B,OAAOu8C,GAOR,SAAKH,GACJA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,SAAA,GAAA;AACAA,EAAAA,EAAA,UAAA,GAAA,YAHD,CAAKA,IAAAA,EAAI,KAiBT71C,EAAAy2C,SAAA,SAAyBA,EAAkB73C,EAAoEK,OAAOK,OAAO,OAC5H,MAAMkU,EAAuB,GAE7B,IAAIkjC,GAAa,EACbvM,EAAS,GACb,IAAK,MAAMpZ,KAAQ0lB,EAElB,GAAa,MAAT1lB,GAAiB2lB,GAAuB,MAAT3lB,EAC9BoZ,GACH32B,EAASjb,KAAK,CAAE2H,MAAOiqC,EAAQv2B,KAAMiiC,EAAKc,OAG3CxM,EAAS,GACTuM,GAAa,OAIT,GAAa,MAAT3lB,GAAgB2lB,EAAY,CACpC,MAAMnvB,EAAW3oB,EAAOurC,GAGxB,GAAwB,iBAAb5iB,EACNA,EAAS3vB,QACZ4b,EAASjb,KAAK,CAAE2H,MAAOqnB,EAAU3T,KAAMiiC,EAAKe,gBAKzC,GAAIrvB,EAAU,CAClB,MAAMsvB,EAAcrjC,EAASA,EAAS5b,OAAS,GAC1Ci/C,GAAeA,EAAYjjC,OAASiiC,EAAKiB,WAC7CtjC,EAASjb,KAAK,CAAE2H,MAAOqnB,EAASwe,MAAOnyB,KAAMiiC,EAAKiB,YAIpD3M,EAAS,GACTuM,GAAa,OAKbvM,GAAUpZ,EASZ,OAJIoZ,IAAWuM,GACdljC,EAASjb,KAAK,CAAE2H,MAAOiqC,EAAQv2B,KAAMiiC,EAAKc,OAGpCnjC,EAAS/J,OAAO,CAACuL,EAASlY,KAGhC,GAAIkY,EAAQpB,OAASiiC,EAAKiB,UAAW,CAIpC,MAAO,CAHMtjC,EAAS1W,EAAQ,GAChB0W,EAAS1W,EAAQ,IAEVkyB,MAAMha,GAAWA,IAAYA,EAAQpB,OAASiiC,EAAKe,UAAY5hC,EAAQpB,OAASiiC,EAAKc,OAAS3hC,EAAQ9U,MAAMtI,OAAS,GAI3I,OAAO,IACLmD,IAAIia,GAAWA,EAAQ9U,OAAOjF,KAAK,KASvC+E,EAAA+2C,kBAAA,SAAkChR,EAAeiR,GAChD,OAAI/sB,EAAA9B,aAAe6uB,EACXjR,EAAMjmC,QAAQ,eAAgB,IAAIA,QAAQ,KAAMmqB,EAAA9B,YAAc,IAAM,MAGrE4d,EAAMjmC,QAAQ,QAAS6H,GAAW,MAANA,EAAY,KAAO,MASvD3H,EAAAi3C,oBAAA,SAAoClR,EAAeiR,GAClD,OAAI/sB,EAAA9B,aAAe6uB,EACXjR,EAAMjmC,QAAQ,eAAgB,IAGlCmqB,EAAA/B,UACI6d,EAAMjmC,QAAQ,QAAS6H,GAAW,MAANA,EAAY,KAAO,KAGhDo+B,EAAMjmC,QAAQ,MAAO,MAG7BE,EAAAk3C,gBAAA,SAAgCnR,GAC/B,OAAOA,EAAMjmC,QAAQ,KAAM;AAM5BE,EAAAm3C,UAAA,SAA0BC,GACzB,MAAMvxC,GAA+B,IAA3BuxC,EAASr0C,QAAQ,KAAcg5B,EAAA7N,MAAQ6N,EAAAlQ,MAC3CvzB,EAAOuN,EAAE2oB,SAAS4oB,GAClBC,EAAaxxC,EAAE0oB,QAAQ6oB,GAC7B,OAAI9+C,EAAKV,OACD,CAAEU,KAAAA,EAAM++C,WAAAA,GAGT,CAAE/+C,KAAM++C,EAAYA,WAAY,mEChXxC,SAASC,EAAOtV,GACf,OAA2BA,EAAIsV,2LA0FhC,SAASC,EAAuB1tC,EAAU4mB,EAA8Bge,EAAiBC,GAExF,IAAK7kC,GAAO6kC,EAAQ,IACnB,OAAO,KAGR,GAAmB,iBAAR7kC,EAAkB,CAE5B,GAAqC,IAAdA,EAAK64B,KAC3B,OAAO+L,EAAS3J,EAAA9D,IAAIyN,OAAOhe,EAAY+mB,kBAAkB3tC,IAAQ4mB,EAAY+mB,kBAAkB3tC,GAIhG,IAAK,IAAIhK,KAAOgK,EACf,GAAI5K,OAAOoB,eAAeE,KAAKsJ,EAAKhK,GAAM,CACzC,MAAMuL,EAAImsC,EAAuB1tC,EAAIhK,GAAM4wB,EAAage,EAAQC,EAAQ,GAC9D,OAANtjC,IACHvB,EAAIhK,GAAOuL,IAMf,OAAO,KA9GRpL,EAAAy3C,eAAA,MAECt2C,YAA6Bu2C,GAAAt2C,KAAAs2C,gBAAAA,EAKtBv2C,kBAAkB6gC,GACxB,OAAOA,EAAIX,SAAWkQ,EAAA5C,QAAQW,aAC3BgI,EAAOxS,EAAA9D,IAAInnC,KAAKmoC,EAAIvoC,OACpBuoC,EAKG7gC,kBAAkB6gC,GACxB,OAAOA,EAAIX,SAAWkQ,EAAA5C,QAAQ90C,KAC3By9C,EAAOxS,EAAA9D,IAAIjoC,KAAK,CAAEmoC,UAAW9/B,KAAKs2C,gBAAiBrW,OAAQkQ,EAAA5C,QAAQW,aAAc71C,KAAMuoC,EAAIvoC,QAC3FuoC,EAGG7gC,qBAAqB6gC;AAC3B,OAAOA,EAAIX,SAAWkQ,EAAA5C,QAAQ90C,KAC3BirC,EAAA9D,IAAIjoC,KAAK,CAAEmoC,UAAW9/B,KAAKs2C,gBAAiBrW,OAAQkQ,EAAA5C,QAAQW,aAAc71C,KAAKuoC,EAAIvoC,OACnFuoC,EAGG7gC,wBAAwBkgC,GAC9B,OAAOA,IAAWkQ,EAAA5C,QAAQ90C,KACvB03C,EAAA5C,QAAQW,aACRjO,IAIQrhC,EAAA23C,sBAAyC,IAAI,MACzDx2C,kBAAkB6gC,GACjB,OAAOA,EAGR7gC,kBAAkB6gC,GACjB,OAAOA,EAGR7gC,qBAAqB6gC,GACpB,OAAOA,EAGR7gC,wBAAwBkgC,GACvB,OAAOA,IA6BTrhC,EAAA43C,sBAAA,SAAyC/tC,EAAQ4mB,GAChD,MAAMh5B,EA1BP,SAASogD,EAAuBhuC,EAAU4mB,EAA8Bie,GAEvE,IAAK7kC,GAAO6kC,EAAQ,IACnB,OAAO,KAGR,GAAmB,iBAAR7kC,EAAkB,CAC5B,GAAIA,aAAei7B,EAAA9D,IAClB,OAAOvQ,EAAYqnB,kBAAkBjuC,GAItC,IAAK,IAAIhK,KAAOgK,EACf,GAAI5K,OAAOoB,eAAeE,KAAKsJ,EAAKhK,GAAM,CACzC,MAAMuL,EAAIysC,EAAuBhuC,EAAIhK,GAAM4wB,EAAaie,EAAQ,GACtD,OAANtjC,IACHvB,EAAIhK,GAAOuL,IAMf,OAAO,KAIQysC,CAAuBhuC,EAAK4mB,EAAa,GACxD,OAAe,OAAXh5B,EAEIoS,EAEDpS,GA8BRuI,EAAA+3C,sBAAA,SAAyCluC,EAAQ4mB,GAChD,MAAMh5B,EAAS8/C,EAAuB1tC,EAAK4mB,GAAa,EAAO,GAC/D,OAAe,OAAXh5B,EAEIoS,EAEDpS,GAGRuI,EAAAg4C,+BAAA,SAAkDnuC,EAAQ4mB,GACzD,MAAMh5B,EAAS8/C,EAAuB1tC,EAAK4mB,GAAa,EAAM,GAC9D,OAAe,OAAXh5B,EAEIoS,EAEDpS;CC1JR,MAAMwgD,EAAe,kEAErBj4C,EAAAk4C,OAAA,SAAuBh4C,GACtB,OAAO+3C,EAAatuB,KAAKzpB,IAI1B,MAAMm5B,EAAQ,IAAIzP,WAAW,IACvBuuB,EAAiB,GACvB,IAAK,IAAIzgD,EAAI,EAAGA,EAAI,IAAKA,IACxBygD,EAAK5/C,KAAKb,EAAEqkB,SAAS,IAAIq8B,SAAS,EAAG,MAKtC,MAAMC,EAAoB,SAAUC,GACnC,IAAK,IAAI5gD,EAAI,EAAGA,EAAI4gD,EAAO1gD,OAAQF,IAClC4gD,EAAO5gD,GAAKuO,KAAKC,MAAsB,IAAhBD,KAAK8F,UAE7B,OAAOusC,GAGRt4C,EAAAu4C,aAAA,WAECF,EAAkBhf,GAGlBA,EAAM,GAAiB,GAAXA,EAAM,GAAa,GAC/BA,EAAM,GAAiB,GAAXA,EAAM,GAAa,IAG/B,IAAI3hC,EAAI,EACJD,EAAS,GAqBb,OApBAA,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU,IACVA,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU,IACVA,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU,IACVA,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU,IACVA,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,MACrBD,GAAU0gD,EAAK9e,EAAM3hC,wIC1CtBsI,EAAAw4C,YAAA,MAICr3C,YAAYs3C,EAAmB,QAC9Br3C,KAAKs3C,cAAgB,IAAIC,EAAGC,cAAcH,GAC1Cr3C,KAAKy3C,UAAY,KAGlB13C,MAAMqZ,GACL,MAAM/iB,EAAmB,GACnByI,EAAQkB,KAAKy3C,UAChBz3C,KAAKy3C,UAAYz3C,KAAKs3C,cAAclpB,MAAMhV,GAC1CpZ,KAAKs3C,cAAclpB,MAAMhV,GAE5B,GAAIta,EAAMtI,OAAS,EAClB,OAAOH,EAER,IACIkY,EADA1I,EAAQ,EAERqX,EAAMrX;CACV,KAAOqX,EAAMpe,EAAMtI,QAElB,GAAM,MADN+X,EAAKzP,EAAM0P,WAAW0O,KACkB,KAAF3O,EAA0B,CAG/D,GAFAlY,EAAOc,KAAK2H,EAAMlD,UAAUiK,EAAOqX,MACnCA,EACUpe,EAAMtI,OAAQ,CACvB,MAAMkhD,EAAWnpC,EACjBA,EAAKzP,EAAM0P,WAAW0O,IACT,KAARw6B,GAA0C,KAAFnpC,GAAsC,KAARmpC,GAAoC,KAAFnpC,IAC5G2O,IAGFrX,EAAQqX,OAERA,IAIF,OADAld,KAAKy3C,UAAY5xC,EAAQ/G,EAAMtI,OAASsI,EAAMk4B,OAAOnxB,GAAS,KACvDxP,EAGR0J,MACC,OAAOC,KAAKy3C,enCuPd,mBAAAtyB,OAEAA,OAAAjvB,EAAA,IAAAC,EAAA,CAAA,GAAA,GAAA,OAAA,SAAAkC,EAAAC,EAAAC,GAAA,OAAAJ,EAAAw/C,QAAAC,iBAAAv/C,EAAAC,EAAAC,UACA,CAAA,GAAA,iBAAA4F,QAAA,iBAAAA,OAAAS,QAMA,MAAA,IAAAI,MAAA,mBANA,CACA,MAAA3G,EAAAs/C,QAAA,QACAr/C,EAAAq/C,QAAA,MACAp/C,EAAAo/C,QAAA,yBACAx5C,OAAAS,QAAAzG,EAAAw/C,QAAAt/C,EAAAC,EAAAC,gIoCjTA,MAAMs/C,EAAU,CACfC,QAAS,aACTC,KAAM,sCAGDC,EAAsB,IAAI73C,IAAI,CACnC,oBACA,oBACA,sBAGD,SAAS83C,EAAmBlwB,GAC3B,MAAMmwB,EAAgBnwB,EAAUrpB,QAAQ,MAAO,KAAKosB,cACpD,OAAQktB,EAAoB9uC,IAAIgvC,GAGjCt5C,EAAAu5C,OAAA,WACC,OAAO,IAAIz/C,QAAQ2rB,MAAOlqB,EAASC;AAClC,MAAM+kB,EAAU/c,WAAW,IAAMhI,EAAO,sDAAuD,KAE/F,IACCD,QAUK,IAAIzB,QAAQ,CAACyB,EAASC,KAC5B,IACCg+C,EAAAxkB,KAAK/K,EAAA/B,UAAY+wB,EAAQC,QAAUD,EAAQE,KAAM,CAAE54B,QAAS,KAAS,CAACnmB,EAAKq/C,EAAQC,KAClF,GAAIt/C,EACH,OAAOoB,EAAO,mCAAmCpB,EAAI2hB,eAC/C,CACN,MAAMo1B,EAAQ,qCAEd,IAAIzd,EACJ,KAAwC,QAAhCA,EAAQyd,EAAMnc,KAAKykB,KAAmB,CAC7C,MAAME,EAAsBjmB,EAAM,GAClC,GAAI2lB,EAAmBM,GACtB,OAAOp+C,EAAQo+C,GAIjB,OAAOn+C,EAAO,yDAGf,MAAOpB,GACRoB,EAAOpB,OA7BN,MAAO6C,GACRzB,EAAOyB,WAEPsG,aAAagd,qFC6ChB,IAAIq5B,8FAzDS55C,EAAA65C,mBAA0C,IAAI,MAKlD14C,2BAA2B24C,GAsBlC,OArBK14C,KAAK24C,sBACT34C,KAAK24C,oBAAsBpP,EAAAvD,kBAAkB4S,aAG7C54C,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY;AACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GAGzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,GACzCJ,KAAK24C,oBAAoBv4C,IAAI,YAAY,MAEjCJ,KAAK24C,oBAAoB3F,WAAW0F,GAG9C34C,QACC,QAAoBhG,IAAhBiG,KAAK6V,OAAsB,CAC9B,IAAIgjC,EAAQ,EACRC,EAAiB,EAErB,MAAMC,EAAaC,EAAAC,oBACnB,IAAK,IAAI/hD,KAAQ6hD,EAChB,GAAIl7C,OAAOqB,UAAUD,eAAeE,KAAK45C,EAAY7hD,GACpD,IAAK,MAAMwhD,IAAEA,EAAGhL,SAAEA,KAAcqL,EAAW7hD,GACrCw2C,IACJoL,GAAkB,EACd94C,KAAKk5C,2BAA2BR,EAAI7gB,iBACvCghB,GAAS,IAMd74C,KAAK6V,OAASijC,EAAiB,EAC5BD,EAAQC,EACR,EAGJ,OAAO94C,KAAK6V,SAKdjX,EAAAu6C,aAAO90B,iBASN,OARKm0B,IACJA,EAAY,WAGX,aAOHn0B,iBACC,IACC,MAAM+0B,QAAS,IAAA1gD,QAAA,CAAA2gD,EAAAC,KAAA3B,EAAA,CAAa,UAAQ0B,EAAAC,KAC9BC,QAAmBC,EAAArB,SACzB,OAAOiB,EAAOK,WAAW,UAAUC,OAAOH,EAAY,QAAQI,OAAO,OACpE,MAAO3gD;AAER,YADAga,EAAO3P,kBAAkBrK,IAfP4gD,IAEJC,EAAK1C,gBAHP,IAONqB,+JC5ER,MAAMsB,EAAYC,EAAAnW,qBAAqB+T,EAAS,SAC1CxsB,EAAQwsB,EAAQC,iBAAyBkC,GAClCl7C,EAAAo7C,eAAiB7uB,EAAM6uB,eACvBp7C,EAAAq7C,uBAAyB9uB,EAAM8uB,ggBCY5C,IAAYC,EAeL71B,eAAezrB,EAAOP,EAAc8hD,EAAOD,EAAWE,QAC5D,GAAIC,EAAAte,oBAAoB1jC,GACvB,MAAM,IAAI2G,MAAM;CAIjB,OAAIm7C,IAASD,EAAWE,OAChBE,EAAajiD,GAwCtBgsB,eAA0BhsB,GACzB,IACC,MAAMkiD,EAAa5f,EAAA9gC,KAAK2gD,EAAGC,SAAUC,EAAAvD,gBACrC,UACOwD,EAAOtiD,EAAMkiD,GAClB,MAAO1+C,GACR,OAAOy+C,EAAajiD,GAIrBiiD,EAAaC,GACZ,MAAO1+C,GACR,GAAmB,WAAfA,EAAM5B,KACT,MAAM4B,GAjDD++C,CAAWviD,GAGnBgsB,eAAei2B,EAAajiD,GAC3B,IACC,MAAMc,QAAaJ,EAAMV,GAGzB,IAAIc,EAAKC,eAAkBD,EAAKE,iBAW3B,CAGJ,MAAM8gD,EAAOhhD,EAAKghD,KAKlB,OAJa,IAAPA,SACCU,EAAMxiD,EAAa,IAAP8hD,GAGZngD,EAAO3B,GAnBmC,CAGjD,MAAMoB,QAAiBF,EAAQlB,SACzBK,QAAQgB,IAAID,EAASE,IAAIC,GAAS0gD,EAAa3f,EAAA9gC,KAAKxB,EAAMuB,YAG1DkhD,EAAAC,UAAUziD,EAAGwB,MAAbghD,CAAoBziD,IAc1B,MAAOwD,GACR,GAAmB,WAAfA,EAAM5B,KACT,MAAM4B,GA4DFwoB,eAAe9qB,EAAQlB,GAC7B,OAAO2iD,QAA8BF,EAAAC,UAAUziD,EAAGiB,QAAbuhD,CAAsBziD,IAiB5D,SAAgB4iD,EAAY5iD,GAC3B,OAAO2iD,EAAwB1iD,EAAG2iD,YAAY5iD,IAG/C,SAAS2iD,EAAwBvhD,GAGhC,OAAIusB,EAASe,YACLttB,EAASE,IAAIC,GAASshD,EAAA3L,aAAa31C,IAGpCH,EAOR,SAAgBohD,EAAMxiD,EAAc8hD,GACnC,OAAOW,EAAAC,UAAUziD,EAAGuiD,MAAbC,CAAoBziD,EAAM8hD,GAGlC,SAAgBhhD,EAAKd,GACpB,OAAOyiD,EAAAC,UAAUziD,EAAGa,KAAb2hD,CAAmBziD,GAoD3B,SAAgBU,EAAMV,GACrB,OAAOyiD,EAAAC,UAAUziD,EAAGS,MAAb+hD,CAAoBziD,GAG5B,SAAgBsiD,EAAOQ,EAAiBra,GACvC,OAAOga,EAAAC,UAAUziD,EAAGqiD,OAAbG,CAAqBK,EAASra,GAOtC,SAAgB9mC,EAAO3B,GACtB,OAAOyiD,EAAAC,UAAUziD,EAAG0B,OAAb8gD,CAAqBziD,GAiBtBgsB,eAAe9mB,EAAOlF,EAAc8hD,GAC1C,OAAOW,EAAAC,UAAUziD,EAAG+E,MAAby9C,CAAoBziD,EAAM,CAAE8hD,KAAAA,EAAM78C,WAAW,IApPxCsB,EAAAw8C,cAAiC,SAAjBrgD,QAAQsgD,KAPT,UACE;AAOjBz8C,EAAA08C,cAAiC,SAAjBvgD,QAAQsgD,KAJT,UACE,WAK9B,SAAYnB,GAKXA,EAAAA,EAAA,OAAA,GAAA,SAOAA,EAAAA,EAAA,KAAA,GAAA,OAZD,CAAYA,EAAAt7C,EAAAs7C,aAAAt7C,EAAAs7C,WAAU,KAetBt7C,EAAAhG,OAAAA,EAiEAgG,EAAA28C,WAAA,SAAgBA,EAAWljD,GAC1B,GAAIgiD,EAAAte,oBAAoB1jC,GACvB,MAAM,IAAI2G,MAAM,mDAGjB,IACC,MAAM7F,EAAOb,EAAGkjD,UAAUnjD,GAG1B,IAAIc,EAAKC,eAAkBD,EAAKE,iBAW3B,CAGJ,MAAM8gD,EAAOhhD,EAAKghD,KAKlB,OAJa,IAAPA,GACL7hD,EAAGmjD,UAAUpjD,EAAa,IAAP8hD,GAGb7hD,EAAGojD,WAAWrjD,GAhBJ4iD,EAAY5iD,GACpBsB,IAAIC,GAAS2hD,EAAW5gB,EAAA9gC,KAAKxB,EAAMuB,KAG5CtB,EAAGqjD,UAAUtjD,GAcb,MAAOwD,GACR,GAAmB,WAAfA,EAAM5B,KACT,MAAM4B,IAKT+C,EAAArF,QAAAA,EAIAqF,EAAAg9C,qBAAOv3B,eAAoChsB,GAC1C,MAAMoB,QAAiBqhD,EAAAC,UAAUziD,EAAGiB,QAAbuhD,CAAsBziD,EAAM,CAAEwjD,eAAe,IAIpE,GAAI71B,EAASe,YACZ,IAAK,MAAMntB,KAASH,EACnBG,EAAM1C,KAAOgkD,EAAA3L,aAAa31C,EAAM1C,MAIlC,OAAOuC,GAGRmF,EAAAq8C,YAAAA,EAcAr8C,EAAApG,OAAA,SAAuBH,GACtB,OAAOyiD,EAAAC,UAAUziD,EAAGE,OAAbsiD,CAAqBziD,IAG7BuG,EAAAi8C,MAAAA,EAIAj8C,EAAAzF,KAAAA,EAoBAyF,EAAAk9C,SAAOz3B,eAAwBhsB,GAG9B,IAAI0jD,EACJ,IAIC,KAHAA,QAAehjD,EAAMV,IAGTgB,iBACX,MAAO,CAAEF,KAAM4iD,GAEf,MAAOlgD,IAMT,IAGC,MAAO,CAAE1C,WAFWA,EAAKd,GAEH2jD,cAAcD,MAAAA,OAAM,EAANA,EAAQ1iD,kBAAmB,CAAE4iD,UAAU,QAAUliD,GACpF,MAAO8B,GAIR,GAAmB,WAAfA,EAAM5B,MAAqB8hD,EAC9B,MAAO,CAAE5iD,KAAM4iD;AAAQC,aAAc,CAAEC,UAAU,IAGlD,MAAMpgD,IAIR+C,EAAA7F,MAAAA,EAIA6F,EAAA+7C,OAAAA,EAIA/7C,EAAAs9C,kBAAA,SAAkCf,EAAiBra,GAClD,OAAO,IAAIpoC,QAAQyB,GAAW7B,EAAGqiD,OAAOQ,EAASra,EAAS,IAAM3mC,OAGjEyE,EAAA5E,OAAAA,EAIA4E,EAAAu9C,QAAA,SAAwBtkD,EAAgBQ,EAAcma,GACrD,OAAOsoC,EAAAC,UAAUziD,EAAG6jD,QAAbrB,CAAsBjjD,EAAQQ,EAAMma,IAG5C5T,EAAAw9C,SAAA,SAAyB/jD,EAAc9B,GACtC,OAAOukD,EAAAC,UAAUziD,EAAG8jD,SAAbtB,CAAuBziD,EAAM9B,IAKrCqI,EAAA1E,SAAA,SAAyB7B,EAAcg/C,GACtC,OAAOyD,EAAAC,UAAUziD,EAAG4B,SAAb4gD,CAAuBziD,EAAMg/C,IAGrCz4C,EAAArB,OAAAA,EAOA,MAAM8+C,EAAgD,IAAIp8C,IAM1DrB,EAAAtE,UAAA,SAA0BjC,EAAcgC,EAAoC8V,GAG3E,OAgBD,SAA8BmsC,GAC7B,MAAMC,EAAyBF,EAAoBn8C,IAAIo8C,GACvD,GAAIC,EACH,OAAOA,EAGR,MAAMC,EAAiB,IAAIvQ,EAAA7pB,MAS3B,OARAi6B,EAAoBj8C,IAAIk8C,EAAUE,GAEjBv+B,EAAA3G,MAAMhM,KAAKkxC,EAAex6B,WAC3Cy6B,CAAS,KACRJ,EAAoB/7C,OAAOg8C,GAC3BE,EAAexnC,YAGTwnC,EA/BAE,CAOR,SAAoBrkD,GACnB,IAAIikD,EAAWjkD,GACX2tB,EAASc,WAAad,EAASe,eAClCu1B,EAAWA,EAASxxB,eAGrB,OAAOwxB,EAfUK,CAAWtkD,IAEUynB,MAAM,KAC3C,MAAM88B,EAAiBC,EAAmB1sC,GAE1C,OAAO,IAAIzX,QAAQ,CAACyB,EAASC,KAgD/B,SAA6B/B,EAAcgC,EAAoC8V,EAAmC3Q,GACjH,IAAKs9C,EACJ,OAAOxkD,EAAGgC,UAAUjC,EAAMgC,EAAM,CAAE8/C,KAAMhqC,EAAQgqC,KAAM4C,KAAM5sC,EAAQ4sC,MAAQv9C,GAI7ElH,EAAG0kD,KAAK3kD,EAAM8X,EAAQ4sC,KAAM5sC,EAAQgqC,KAAM,CAAC8C,EAAWC,KACrD,GAAID,EACH,OAAOz9C,EAASy9C,GAIjB3kD,EAAGgC,UAAU4iD,EAAI7iD,EAAM8iD,IACtB,GAAIA,EACH,OAAO7kD,EAAG8kD,MAAMF,EAAI,IAAM19C,EAAS29C,IAIpC7kD,EAAG+kD,UAAUH,EAAKI,IAIbA,IACHxmD,QAAQkK,KAAK,8EAA+Es8C,GAC5FR,GAAW,GAGLxkD,EAAG8kD,MAAMF,EAAIK,GAAc/9C,EAAS+9C,WA3ELC,CAAoBnlD,EAAMgC,EAAMuiD,EAAgB/gD,GAASA,EAAQzB,EAAOyB,GAAS1B;IAyC3H,IAAI2iD,GAAW,EAmEf,SAASD,EAAmB1sC,GAC3B,OAAKA,EAIE,CACNgqC,KAA8B,iBAAjBhqC,EAAQgqC,KAAoBhqC,EAAQgqC,KAAO,IACxD4C,KAA8B,iBAAjB5sC,EAAQ4sC,KAAoB5sC,EAAQ4sC,KAAO,KALjD,CAAE5C,KAAM,IAAO4C,KAAM,KAsBvB14B,eAAeo5B,EAAUplD,GAC/B,IAGC,aAFuBc,EAAKd,IAEZe,cACf,MAAOyC,GACR,OAAO,GA+EFwoB,eAAeq5B,EAAKh/B,EAAgB7mB,EAAgB8lD,GAC1D,MAAMC,EAAgBD,GAAoC9/C,OAAOK,OAAO,MAElE2/C,QAAiB1kD,EAAKulB,GAC5B,IAAKm/B,EAASzkD,cACb,OAoBFirB,eAA0B3F,EAAgB7mB,EAAgBsiD,GACzD,OAAO,IAAIzhD,QAAQ,CAACyB,EAASC,KAC5B,MAAM0jD,EAASxlD,EAAGylD,iBAAiBr/B,GAC7Bs/B,EAAS1lD,EAAG2lD,kBAAkBpmD,EAAQ,CAAEsiD,KAAAA,IAE9C,IAAI+D,GAAW,EACf,MAAMC,EAAUtiD,IACf,IAAKqiD,EAAU,CAId,GAHAA,GAAW,EAGPriD,EACH,OAAOzB,EAAOyB,GAIfvD,EAAGuiD,MAAMhjD,EAAQsiD,EAAMt+C,GAASA,EAAQzB,EAAOyB,GAAS1B,OAK1D2jD,EAAOxyC,KAAK,QAASzP,GAASsiD,EAAOtiD,IACrCmiD,EAAO1yC,KAAK,QAASzP,GAASsiD,EAAOtiD,IAGrCmiD,EAAO1yC,KAAK,QAAS,IAAM6yC,KAG3BL,EAAOM,KAAKJ,KAhDLK,CAAW3/B,EAAQ7mB,EAAwB,IAAhBgmD,EAAS1D,MAG5C,GAAIyD,EAAcl/B,GACjB,OAAOhmB,QAAQyB,UAGhByjD,EAAcl/B,IAAU,QAGlBnhB,EAAO1F,EAAwB,IAAhBgmD,EAAS1D,MAG9B,MAAM3gD,QAAcD,EAAQmlB,GAC5B,IAAK,IAAIpoB,EAAI,EAAGA,EAAIkD,EAAMhD,OAAQF,IAAK,CACtC,MAAMmC,EAAOe,EAAMlD,SACbonD,EAAK/iB,EAAA9gC,KAAK6kB,EAAQjmB,GAAOkiC,EAAA9gC,KAAKhC,EAAQY,GAAOmlD,IA7JrDh/C,EAAA0/C,cAAA,SAA8BjmD,EAAcgC,EAAuB8V,GAClE,MAAMysC,EAAiBC,EAAmB1sC,GAE1C,IAAK2sC,EACJ,OAAOxkD,EAAGgmD,cAAcjmD,EAAMgC,EAAM,CAAE8/C,KAAMyC,EAAezC,KAAM4C,KAAMH,EAAeG,OAIvF,MAAMG,EAAK5kD,EAAGimD,SAASlmD,EAAMukD,EAAeG,KAAMH,EAAezC,MAEjE,IAGC7hD,EAAGgmD,cAAcpB,EAAI7iD,GAGrB,IACC/B,EAAGkmD,cAActB,GAChB,MAAOI;AACRxmD,QAAQkK,KAAK,kFAAmFs8C,GAChGR,GAAW,WAGZxkD,EAAGmmD,UAAUvB,KAeft+C,EAAA8/C,cAAOr6B,eAA6Bs6B,GACnC,MAAMllD,QAAiBF,EAAQolD,GACzBC,EAAwB,GAE9B,IAAK,MAAMhlD,KAASH,QACTgkD,EAAU9iB,EAAA9gC,KAAK8kD,EAAS/kD,KACjCglD,EAAYznD,KAAKyC,GAInB,OAAOglD,GAGRhgD,EAAA6+C,UAAAA,EAUA7+C,EAAAzC,WAAOkoB,eAA0BhsB,GAChC,IAGC,aAFuBc,EAAKd,IAEZwmD,SACf,MAAOhjD,GACR,OAAO,IAIT+C,EAAAkgD,YAAA,SAA4BzmD,GAG3B,OAAO,IAAIK,QAAcyB,IACxB,IAAI4kD,GAAU,EACd,MAAMl8B,EAAWC,YAAY,KACvBi8B,IACJA,GAAU,EACVzmD,EAAGE,OAAOH,EAAMG,IACfumD,GAAU,EAELvmD,IACJoqB,cAAcC,GACd1oB,OAAQJ,QAIT,QAIL6E,EAAA2J,KAAO8b,eAAoB3F,EAAgB7mB,GAC1C,GAAI6mB,IAAW7mB,EACd,OAAOa,QAAQyB,UAGhBkqB,eAAe26B,EAAY3mD,GAC1B,MAAMc,QAAaJ,EAAMV,GACzB,GAAIc,EAAKC,eAAiBD,EAAKE,iBAC9B,OAAOX,QAAQyB,UAGhB,MAAM+iD,QAAWpC,EAAAC,UAAUziD,EAAG0kD,KAAblC,CAAmBziD,EAAM,KAC1C,UACOyiD,EAAAC,UAAUziD,EAAG2mD,QAAbnE,CAAsBoC,EAAI/jD,EAAK+lD,MAAO,IAAI9nD,MAC/C,MAAOyE,IAIT,OAAOi/C,EAAAC,UAAUziD,EAAG8kD,MAAbtC,CAAoBoC,GAG5B,UACOvC,EAAOj8B,EAAQ7mB,SACfmnD,EAAYnnD,GACjB,MAAOgE,GAUR,KAAI6iB,EAAOoM,gBAAkBjzB,EAAOizB,eAAgC,UAAfjvB,EAAM5B,MAAoBykB,EAAOqU,SAAS,MAK9F,MAAMl3B,QAJA6hD,EAAKh/B,EAAQ7mB,SACbe,EAAO8lB,EAAQw7B,EAAWiF,YAC1BH,EAAYnnD,KAOrB+G,EAAA8+C,KAAAA;0EC/ZA,SAASrM,EAAch5C,GACtB,OAAOsjC,EAAAxL,MAAMwK,EAAAnP,UAAUnzB,GAAOsiC,EAAA/nB,sGArE/BhU,EAAAwgD,aAAA,SAAgBA,EAAa/mD,GAC5B,MAAMiB,EAAMqhC,EAAAxN,QAAQ90B,GACpB,GAAIA,IAASiB,EACZ,OAAOjB,EAGR,MAAMnB,GAAQyjC,EAAAvN,SAAS/0B,IAAmDA,GAAMyyB,cAChF,IACC,MACMjX,EADUwrC,EAAApE,YAAY3hD,GACN+O,OAAOvP,GAAKA,EAAEgyB,gBAAkB5zB,GACtD,GAAqB,IAAjB2c,EAAMrd,OAAc,CAEvB,MAAMs+C,EAASsK,EAAa9lD,GAC5B,GAAIw7C,EACH,OAAOna,EAAA9gC,KAAKi7C,EAAQjhC,EAAM,SAErB,GAAIA,EAAMrd,OAAS,EAAG,CAE5B,MAAM8oD,EAAKzrC,EAAMlS,QAAQzK,GACzB,GAAIooD,GAAM,EAAG,CACZ,MAAMxK,EAASsK,EAAa9lD,GAC5B,GAAIw7C,EACH,OAAOna,EAAA9gC,KAAKi7C,EAAQjhC,EAAMyrC,MAI5B,MAAOzjD,IAIT,OAAO,MAGR+C,EAAA2gD,SAAOl7B,eAAwBhsB,GAC9B,IACC,aAAayiD,EAAAC,UAAUziD,EAAGinD,SAAbzE,CAAuBziD,GACnC,MAAOwD,GAOR,MAAMy1C,EAAiBD,EAAch5C,GAIrC,aAFMyiD,EAAAC,UAAUziD,EAAGknD,OAAb1E,CAAqBxJ,EAAgBh5C,EAAGmnD,UAAUC,MAEjDpO,IAIT1yC,EAAA+gD,aAAA,SAA6BtnD,GAC5B,IACC,OAAOC,EAAGqnD,aAAatnD,GACtB,MAAOwD,GAOR,MAAMy1C,EAAiBD,EAAch5C,GAGrC,OAFAC,EAAGsnD,WAAWtO,EAAgBh5C,EAAGmnD,UAAUC,MAEpCpO,oFC9DT,SAASuO,EAAoBpnD,EAA8CqnD,EAAyE7uC,GACnJ,MAAM8uC,EAAmBplB,EAAAvN,SAAS30B,EAAKJ,MACjC2nD,EAA0B,IAAI//C,IAEpC,IAAI+D,GAAW,EACXi8C,EAAoC,CAACpnC,EAAAxD,aAAa;AACrD2qC,EAAwBzgD,QAAQ2gD,GAAcrnC,EAAA7D,QAAQkrC,IACtDF,EAAwBx+C,WAGzB,IAGC,MAAM2+C,EAAUC,EAAAC,MAAM5nD,EAAKJ,MAC3B4nD,EAAmB9oD,KAAK0hB,EAAAxD,aAAa,KACpC8qC,EAAQG,qBACRH,EAAQ/C,WAIT,MAAMmD,EAA8B,IAAIpgD,IACpC1H,EAAKW,aACRimD,EAAA9lD,QAAQd,EAAKJ,MAAMa,KAAKO,GAAYA,EAAS8F,QAAQ3F,GAAS2mD,EAAelgD,IAAIzG,KAGlFumD,EAAQtmC,GAAG,QAAS,CAAC5f,EAAc6e,KAC7B9U,GACJiN,EAAQ,mBAAmBxY,EAAKJ,sCAAsC4B,MAAS6e,QAIjFqnC,EAAQtmC,GAAG,SAAU,CAACrH,EAAMguC,KAC3B,GAAIx8C,EACH,OAID,IAAIy8C,EAA0B,GAU9B,GATID,IACHC,EAAkBD,EAAI7lC,WAClBkO,EAAA9B,cAGH05B,EAAkBvF,EAAA3L,aAAakR,MAI5BA,GAA6B,WAATjuC,GAA8B,WAATA,EAC7C,OAID,MAAMkuC,EAAkBjoD,EAAKW,YAAcuhC,EAAA9gC,KAAKpB,EAAKJ,KAAMooD,GAAmBhoD,EAAKJ,KAGnF,GAAKI,EAAKW,YA4CT,GAAa,WAAToZ,EAAmB,CAGtB,MAAMmuC,EAAiBX,EAAwB9/C,IAAIwgD,GAC/CC,GACH9nC,EAAA7D,QAAQ2rC,GAIT,MAAMC,EAAgBx+C,WAAWiiB,UAChC27B,EAAwB1/C,OAAOogD,GAE/B,MAAMvkD,QAAmBkjD,EAAA7mD,OAAOkoD,GAEhC,GAAI18C,EACH,OAMD,IAAIwO,EACArW,EACCokD,EAAer3C,IAAIu3C,GACtBjuC,EAAO,WAEPA,EAAO,QACP+tC,EAAelgD,IAAIogD,KAGpBF,EAAejgD,OAAOmgD,GACtBjuC,EAAO,WAGRstC,EAASttC,EAAMkuC,IACb9hD,EAAAiiD,qBAEHb,EAAwB5/C,IAAIsgD,EAAiB7nC,EAAAxD,aAAa,IAAMlT,aAAay+C,SAIzE,CAIJ,IAAIpuC,EACA+tC,EAAer3C,IAAIu3C,GACtBjuC,EAAO,WAEPA,EAAO,QACP+tC,EAAelgD,IAAIogD,IAGpBX,EAASttC,EAAMkuC,QAhGhB,GAAa,WAATluC,GAAqBiuC,IAAoBV,EAAkB,CAU9D,MAAMa,EAAgBx+C,WAAWiiB,UAChC,MAAMloB,QAAmBkjD,EAAA7mD,OAAOkoD,GAE5B18C,IAKA7H,GACH2jD,EAAS,UAAWY,GAEpBT,EAAqB,CAACJ,EAAoBpnD,EAAMqnD,EAAU7uC,KAK1D6uC,EAAS,UAAWY,KAEnB9hD,EAAAiiD;CAIHhoC,EAAA7D,QAAQirC,GACRA,EAAqB,CAACpnC,EAAAxD,aAAa,IAAMlT,aAAay+C,UAEtDd,EAAS,UAAWY,KAiEtB,MAAO7kD,GACRwjD,EAAA7mD,OAAOC,EAAKJ,MAAMa,KAAKV,IAClBA,IAAWwL,GACdiN,EAAQ,mBAAmBxY,EAAKJ,sCAAsCwD,EAAM8e,iBAK/E,OAAO9B,EAAAxD,aAAa,KACnBrR,GAAW,EAEXi8C,EAAqBpnC,EAAA7D,QAAQirC,6GAjL/BrhD,EAAAkiD,UAAA,SAA0BzoD,EAAcynD,EAAyE7uC,GAChH,OAAO4uC,EAAoB,CAAExnD,KAAAA,EAAMe,aAAa,GAAS0mD,EAAU7uC,IAGpErS,EAAAmiD,YAAA,SAA4B1oD,EAAcynD,EAAyE7uC,GAClH,OAAO4uC,EAAoB,CAAExnD,KAAAA,EAAMe,aAAa,GAAQ0mD,EAAU7uC,IAGtDrS,EAAAiiD,oBAAsB,+FCenC,IAqCKG,EAsFAC,uMA3HL,SAAkBC,GACjBA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,cAAA,KAAA,gBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,aAAA,KAAA,eAJD,CAAkBtiD,EAAAsiD,cAAAtiD,EAAAsiD,YAAW,KAa7B,SAAkBC;AACjBA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,eAAA,KAAA,iBACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,UAAA,KAAA,YALD,CAAkBviD,EAAAuiD,eAAAviD,EAAAuiD,aAAY,KAwB9B,SAAKH,GACJA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,KAAA,GAAA,OAFD,CAAKA,IAAAA,EAAK,KA4DV,MAAMI,EAILrhD,YAAoBqZ,GAAApZ,KAAAoZ,OAAAA,EAFZpZ,KAAAiO,IAAM,EAIdlO,KAAKshD,GACJ,MAAMhrD,EAAS2J,KAAKoZ,OAAOlhB,MAAM8H,KAAKiO,IAAKjO,KAAKiO,IAAMozC,GAEtD,OADArhD,KAAKiO,KAAO5X,EAAOk/B,WACZl/B,GAIT,MAAMirD,EAANvhD,cAESC,KAAAod,QAAsB,GAE9BhE,aACC,OAAOmoC,EAAA1oB,SAASpvB,OAAOzJ,KAAKod,SAG7Brd,MAAMqZ,GACLpZ,KAAKod,QAAQjmB,KAAKiiB,IAapB,SAASooC,EAAiBpiD,GACzB,MAAM/I,EAASkrD,EAAA1oB,SAASO,MAAM,GAE9B,OADA/iC,EAAOmjC,cAAcp6B,EAAM,GACpB/I,EAGR,SAASorD,EAAe3D,GACvB,OAAOA,EAAOpvB,KAAK,GAAG6K,aAAa,GAGpC,SAASmoB,EAAoB5iD,GAC5B,MAAMzI,EAASkrD,EAAA1oB,SAASO,MAAM,GAE9B,OADA/iC,EAAOujC,WAAW96B,EAAO,GAClBzI,GAtBR,SAAK4qD,GACJA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SAND,CAAKA,IAAAA,EAAQ,KAyBb,MAAMU,EAAgB,CACrBprC,UAAWmrC,EAAoBT,EAAS1qC,WACxCnS,OAAQs9C,EAAoBT,EAAS78C,QACrCk0B,OAAQopB,EAAoBT,EAAS3oB,QACrCO,SAAU6oB,EAAoBT,EAASpoB;AACvCnwB,MAAOg5C,EAAoBT,EAASv4C,OACpC7K,OAAQ6jD,EAAoBT,EAASpjD,SAIhCw6B,EAA+B,oBAAXC,OAE1B,SAASspB,EAAU5D,EAAiB3jD,GACnC,QAAoB,IAATA,EACV2jD,EAAO5vB,MAAMuzB,EAAcprC,gBACrB,GAAoB,iBAATlc,EAAmB,CACpC,MAAM+e,EAASmoC,EAAA1oB,SAASyB,WAAWjgC,GACnC2jD,EAAO5vB,MAAMuzB,EAAcv9C,QAC3B45C,EAAO5vB,MAAMozB,EAAiBpoC,EAAOmc,aACrCyoB,EAAO5vB,MAAMhV,QACP,GAAIif,GAAaC,OAAOS,SAAS1+B,GAAO,CAC9C,MAAM+e,EAASmoC,EAAA1oB,SAAS0B,KAAKlgC,GAC7B2jD,EAAO5vB,MAAMuzB,EAAcrpB,QAC3B0lB,EAAO5vB,MAAMozB,EAAiBpoC,EAAOmc,aACrCyoB,EAAO5vB,MAAMhV,QACP,GAAI/e,aAAgBknD,EAAA1oB,SAC1BmlB,EAAO5vB,MAAMuzB,EAAc9oB,UAC3BmlB,EAAO5vB,MAAMozB,EAAiBnnD,EAAKk7B,aACnCyoB,EAAO5vB,MAAM/zB,QACP,GAAIqO,MAAMC,QAAQtO,GAAO,CAC/B2jD,EAAO5vB,MAAMuzB,EAAcj5C,OAC3Bs1C,EAAO5vB,MAAMozB,EAAiBnnD,EAAK7D,SAEnC,IAAK,MAAM+vB,KAAMlsB,EAChBunD,EAAU5D,EAAQz3B,OAEb,CACN,MAAMnN,EAASmoC,EAAA1oB,SAASyB,WAAWj/B,KAAKsD,UAAUtE,IAClD2jD,EAAO5vB,MAAMuzB,EAAc9jD,QAC3BmgD,EAAO5vB,MAAMozB,EAAiBpoC,EAAOmc,aACrCyoB,EAAO5vB,MAAMhV,IAIf,SAASyoC,EAAY/D,GAGpB,OAFaA,EAAOpvB,KAAK,GAAGiL,UAAU,IAGrC,KAAKsnB,EAAS1qC,UAAW,OACzB,KAAK0qC,EAAS78C,OAAQ,OAAO05C,EAAOpvB,KAAK+yB,EAAe3D,IAASnjC,WACjE,KAAKsmC,EAAS3oB,OAAQ,OAAOwlB,EAAOpvB,KAAK+yB,EAAe3D,IAAS1kC,OACjE,KAAK6nC,EAASpoB,SAAU,OAAOilB,EAAOpvB,KAAK+yB,EAAe3D,IAC1D,KAAKmD,EAASv4C,MAAO,CACpB,MAAMlS,EAASirD,EAAe3D,GACxBznD,EAAgB,GAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAIE,EAAQF,IAC3BD,EAAOc,KAAK0qD,EAAY/D,IAGzB,OAAOznD,EAER,KAAK4qD,EAASpjD,OAAQ,OAAOxC,KAAKC,MAAMwiD,EAAOpvB,KAAK+yB,EAAe3D,IAASnjC,aAS9E,MAAamnC,EAUZ/hD,YAAoBgiD,EAA2CC,EAAuBC,EAAuB,KAAzFjiD,KAAA+hD,SAAAA,EAA2C/hD,KAAAgiD,IAAAA;AAAuBhiD,KAAAiiD,aAAAA,EAR9EjiD,KAAAkiD,SAAW,IAAIjiD,IACfD,KAAAmiD,eAAiB,IAAIliD,IAKrBD,KAAAoiD,gBAAkB,IAAIniD,IAG7BD,KAAKqiD,iBAAmBriD,KAAK+hD,SAASO,UAAU74B,GAAOzpB,KAAKuiD,aAAa94B,IACzEzpB,KAAKwiD,aAAa,CAAEhwC,KAAI,MAGzBzS,gBAAgB0iD,EAAqBC,GACpC1iD,KAAKkiD,SAAS9hD,IAAIqiD,EAAaC,GAG/BtgD,WAAW,IAAMpC,KAAK2iD,qBAAqBF,GAAc,GAGlD1iD,aAAa6iD,GACpB,OAAQA,EAASpwC,MAChB,KAAA,IACC,OAAOxS,KAAK6iD,KAAK,CAACD,EAASpwC,OAE5B,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACC,OAAOxS,KAAK6iD,KAAK,CAACD,EAASpwC,KAAMowC,EAASjpC,IAAKipC,EAASvoD,OAInD0F,KAAK+iD,EAAaC,GACzB,MAAM/E,EAAS,IAAIsD,EACnBM,EAAU5D,EAAQ8E,GAClBlB,EAAU5D,EAAQ+E,GAClB/iD,KAAKgjD,WAAWhF,EAAO5kC,QAGhBrZ,WAAWhB,GAClB,IACCiB,KAAK+hD,SAASc,KAAK9jD,GAClB,MAAO/F,KAKF+G,aAAahB,GACpB,MAAM++C,EAAS,IAAIsD,EAAariD,GAC1B+jD,EAASjB,EAAY/D,GACrBiF,EAAOlB,EAAY/D,GACnBtrC,EAAOswC,EAAO,GAEpB,OAAQtwC,GACP,KAAA,IACC,OAAOxS,KAAKijD,UAAU,CAAEzwC,KAAAA,EAAMmH,GAAImpC,EAAO,GAAIL,YAAaK,EAAO,GAAI5rD,KAAM4rD,EAAO,GAAIn5C,IAAKo5C,IAC5F,KAAA,IACC,OAAO/iD,KAAKkjD,cAAc,CAAE1wC,KAAAA,EAAMmH,GAAImpC,EAAO,GAAIL,YAAaK,EAAO,GAAI5rD,KAAM4rD,EAAO,GAAIn5C,IAAKo5C,IAChG,KAAA,IAEA,KAAA,IACC,OAAO/iD,KAAKmjD,qBAAqB,CAAE3wC,KAAAA,EAAMmH,GAAImpC,EAAO,MAI/C/iD,UAAUqjD,GACjB,MAAMV,EAAU1iD,KAAKkiD,SAAShiD,IAAIkjD,EAAQX,aAE1C,IAAKC,EAEJ,YADA1iD,KAAKqjD,sBAAsBD,GAI5B,MAAME,EAA0B,IAAI3kC,EAAAP,wBACpC,IAAIhE,EAEJ;AACCA,EAAUsoC,EAAQvjD,KAAKa,KAAKgiD,IAAKoB,EAAQlsD,KAAMksD,EAAQz5C,IAAK25C,EAAwBv7C,OACnF,MAAO/O,GACRohB,EAAU1hB,QAAQ0B,OAAOpB,GAG1B,MAAM2gB,EAAKypC,EAAQzpC,GAEnBS,EAAQlhB,KAAKmB,IACZ2F,KAAKwiD,aAA2B,CAAE7oC,GAAAA,EAAItf,KAAAA,EAAMmY,KAAI,MAChDxS,KAAKmiD,eAAe7hD,OAAO8iD,EAAQzpC,KACjC3gB,IACEA,aAAegG,MAClBgB,KAAKwiD,aAA2B,CAC/B7oC,GAAAA,EAAItf,KAAM,CACT0E,QAAS/F,EAAI+F,QACb7H,KAAM8B,EAAI9B,KACV4L,MAAO9J,EAAI8J,MAAS9J,EAAI8J,MAAMqB,MAAQnL,EAAI8J,MAAMqB,MAAM,MAAQnL,EAAI8J,WAAS/I,GACzEyY,KAAI,MAGRxS,KAAKwiD,aAA2B,CAAE7oC,GAAAA,EAAItf,KAAMrB,EAAKwZ,KAAI,MAGtDxS,KAAKmiD,eAAe7hD,OAAO8iD,EAAQzpC,MAGpC,MAAMumC,EAAarnC,EAAAxD,aAAa,IAAMiuC,EAAwB/kC,UAC9Dve,KAAKmiD,eAAe/hD,IAAIgjD,EAAQzpC,GAAIumC,GAG7BngD,cAAcqjD,GACrB,MAAMV,EAAU1iD,KAAKkiD,SAAShiD,IAAIkjD,EAAQX,aAE1C,IAAKC,EAEJ,YADA1iD,KAAKqjD,sBAAsBD,GAI5B,MAAMzpC,EAAKypC,EAAQzpC,GAEbumC,EADQwC,EAAQa,OAAOvjD,KAAKgiD,IAAKoB,EAAQlsD,KAAMksD,EAAQz5C,IAC1C4N,CAAMld,GAAQ2F,KAAKwiD,aAA2B,CAAE7oC,GAAAA,EAAItf,KAAAA,EAAMmY,KAAI,OAEjFxS,KAAKmiD,eAAe/hD,IAAIgjD,EAAQzpC,GAAIumC,GAG7BngD,qBAAqBqjD,GAC5B,MAAMlD,EAAalgD,KAAKmiD,eAAejiD,IAAIkjD,EAAQzpC,IAE/CumC,IACHA,EAAWlrC,UACXhV,KAAKmiD,eAAe7hD,OAAO8iD,EAAQzpC,KAI7B5Z,sBAAsBqjD,GAC7B,IAAIhB,EAAkBpiD,KAAKoiD,gBAAgBliD,IAAIkjD,EAAQX,aAElDL,IACJA,EAAkB,GAClBpiD,KAAKoiD,gBAAgBhiD,IAAIgjD,EAAQX,YAAaL,IAG/C,MAAM9iC,EAAQld,WAAW,KACxBtL,QAAQ+E,MAAM,oBAAoBunD,EAAQX;AAE1B,MAAZW,EAAQ5wC,MACXxS,KAAKwiD,aAA2B,CAC/B7oC,GAAIypC,EAAQzpC,GACZtf,KAAM,CAAEnD,KAAM,kBAAmB6H,QAAS,iBAAiBqkD,EAAQX,gCAAgCziD,KAAKiiD,iBAAkBn/C,WAAO/I,GACjIyY,KAAI,OAGJxS,KAAKiiD,cAERG,EAAgBjrD,KAAK,CAAEisD,QAAAA,EAASI,aAAclkC,IAGvCvf,qBAAqB0iD,GAC5B,MAAMgB,EAAWzjD,KAAKoiD,gBAAgBliD,IAAIuiD,GAE1C,GAAIgB,EAAU,CACb,IAAK,MAAML,KAAWK,EAGrB,OAFAthD,aAAaihD,EAAQI,cAEbJ,EAAQA,QAAQ5wC,MACvB,KAAA,IAA0BxS,KAAKijD,UAAUG,EAAQA,SAAU,MAC3D,KAAA,IAA8BpjD,KAAKkjD,cAAcE,EAAQA,SAI3DpjD,KAAKoiD,gBAAgB9hD,OAAOmiD,IAIvB1iD,UACFC,KAAKqiD,mBACRriD,KAAKqiD,iBAAiBrtC,UACtBhV,KAAKqiD,iBAAmB,MAEzBriD,KAAKmiD,eAAe5iD,QAAQtC,GAAKA,EAAE+X,WACnChV,KAAKmiD,eAAe3gD,SApLtB5C,EAAAkjD,cAAAA,EAwLA,MAAa4B,EAWZ3jD,YAAoBgiD,GAAA/hD,KAAA+hD,SAAAA,EATZ/hD,KAAA6tB,MAAemzB,EAAM2C,cACrB3jD,KAAAmiD,eAAiB,IAAIhiD,IACrBH,KAAA4jD,SAAW,IAAI3jD,IACfD,KAAA6jD,cAAwB,EAGf7jD,KAAA8jD,iBAAmB,IAAI7lC,EAAAjG,QAC/BhY,KAAA+jD,gBAAkB/jD,KAAK8jD,iBAAiBvsC,MAGhDvX,KAAKqiD,iBAAmBriD,KAAK+hD,SAASO,UAAU74B,GAAOzpB,KAAKgkD,SAASv6B,IAGtE1pB,WAA+B0iD,GAC9B,MAAMwB,EAAOjkD,KAEb,MAAO;AACNb,KAAI,CAAC8uC,EAAiBtkC,EAAWu6C,IACzBD,EAAKE,eAAe1B,EAAaxU,EAAStkC,EAAKu6C,GAEvDX,OAAM,CAAChsC,EAAe5N,IACds6C,EAAKG,aAAa3B,EAAalrC,EAAO5N,IAKxC5J,eAAe0iD,EAAqBvrD,EAAcyS,EAAWu6C,EAAoBvlC,EAAAf,kBAAkBhJ,MAC1G,MAAM+E,EAAK3Z,KAAK6jD,gBAEVT,EAAuB,CAAEzpC,GAAAA,EAAInH,KADzB,IAC+BiwC,YAAAA,EAAavrD,KAAAA,EAAMyS,IAAAA,GAE5D,GAAIu6C,EAAkBh8C,wBACrB,OAAOxP,QAAQ0B,OAAO4Y,EAAOpP,YAG9B,IAAIs8C,EAqDJ,OAnDe,IAAIxnD,QAAQ,CAACC,EAAGG,KAC9B,GAAIorD,EAAkBh8C,wBACrB,OAAOpP,EAAEka,EAAOpP,YAGjB,IAAIygD,EAAuDpY,EAAAxtB,wBAAwBtF,GAAKnZ,KAAKskD,mBAC7FD,EAAqBnrD,KAAK,KACzBmrD,EAAuB,KAwBvBrkD,KAAK4jD,SAASxjD,IAAIuZ,EAtBQipC,IACzB,OAAQA,EAASpwC,MAChB,KAAA,IACCxS,KAAK4jD,SAAStjD,OAAOqZ,GACrBhhB,EAAEiqD,EAASvoD,MACX,MAED,KAAA,IACC2F,KAAK4jD,SAAStjD,OAAOqZ,GACrB,MAAM9d,EAAQ,IAAImD,MAAM4jD,EAASvoD,KAAK0E,SAChClD,EAAOiH,MAAQ8/C,EAASvoD,KAAKyI,MACnCjH,EAAM3E,KAAO0rD,EAASvoD,KAAKnD,KAC3B4B,EAAE+C,GACF,MAED,KAAA,IACCmE,KAAK4jD,SAAStjD,OAAOqZ,GACrB7gB,EAAE8pD,EAASvoD,SAMd2F,KAAKukD,YAAYnB,KAGlB,MAAM7kC,EAAS,KACV8lC,GACHA,EAAqB9lC,SACrB8lC,EAAuB,MAEvBrkD,KAAKukD,YAAY,CAAE5qC,GAAAA,EAAInH,KAAI,MAG5B1Z,EAAEka,EAAOpP,aAGJ4gD,EAA4BN,EAAkBlmC,wBAAwBO,GAC5E2hC,EAAarnC,EAAAzD,mBAAmByD,EAAAxD,aAAakJ,GAASimC,GACtDxkD,KAAKmiD,eAAe9hD,IAAI6/C,KAGXphC,QAAQ,KAAQ9e,KAAKmiD,eAAe7hD,OAAO4/C,KAGlDngD,aAAa0iD,EAAqBvrD,EAAcyS,GACvD,MAAMgQ,EAAK3Z,KAAK6jD,gBAEVT,EAAuB,CAAEzpC,GAAAA,EAAInH,KADzB,IAC+BiwC,YAAAA,EAAavrD,KAAAA;AAAMyS,IAAAA,GAE5D,IAAI06C,EAAuD,KAE3D,MAAMtsC,EAAU,IAAIkG,EAAAjG,QAAa,CAChC4B,mBAAoB,MACnByqC,EAAuBpY,EAAAxtB,wBAAwBtF,GAAKnZ,KAAKskD,oBACpCprD,KAAK,KACzBmrD,EAAuB,KACvBrkD,KAAKmiD,eAAe9hD,IAAI0X,GACxB/X,KAAKukD,YAAYnB,MAGnBtpC,qBAAsB,KACjBuqC,GACHA,EAAqB9lC,SACrB8lC,EAAuB,OAEvBrkD,KAAKmiD,eAAe7hD,OAAOyX,GAC3B/X,KAAKukD,YAAY,CAAE5qC,GAAAA,EAAInH,KAAI,UAQ9B,OAFAxS,KAAK4jD,SAASxjD,IAAIuZ,EADSvC,GAAsBW,EAAQE,KAAMb,EAA8B/c,OAGtF0d,EAAQR,MAGRxX,YAAYqjD,GACnB,OAAQA,EAAQ5wC,MACf,KAAA,IACA,KAAA,IACC,OAAOxS,KAAK6iD,KAAK,CAACO,EAAQ5wC,KAAM4wC,EAAQzpC,GAAIypC,EAAQX,YAAaW,EAAQlsD,MAAOksD,EAAQz5C,KAEzF,KAAA,IACA,KAAA,IACC,OAAO3J,KAAK6iD,KAAK,CAACO,EAAQ5wC,KAAM4wC,EAAQzpC,MAInC5Z,KAAK+iD,EAAaC,GACzB,MAAM/E,EAAS,IAAIsD,EACnBM,EAAU5D,EAAQ8E,GAClBlB,EAAU5D,EAAQ+E,GAClB/iD,KAAKgjD,WAAWhF,EAAO5kC,QAGhBrZ,WAAWhB,GAClB,IACCiB,KAAK+hD,SAASc,KAAK9jD,GAClB,MAAO/F,KAKF+G,SAAShB,GAChB,MAAM++C,EAAS,IAAIsD,EAAariD,GAC1B+jD,EAASjB,EAAY/D,GACrBiF,EAAOlB,EAAY/D,GAGzB,OAF2BgF,EAAO,IAGjC,KAAA,IACC,OAAO9iD,KAAKykD,WAAW,CAAEjyC,KAAMswC,EAAO,KAEvC,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACC,OAAO9iD,KAAKykD,WAAW,CAAEjyC,KAAMswC,EAAO,GAAInpC,GAAImpC,EAAO,GAAIzoD,KAAM0oD,KAI1DhjD,WAAW6iD,GAClB,GAAiB,MAAbA,EAASpwC,KAGZ,OAFAxS,KAAK6tB,MAAQmzB,EAAM0D,UACnB1kD,KAAK8jD,iBAAiB7rC,OAIvB,MAAMkJ,EAAUnhB,KAAK4jD,SAAS1jD,IAAI0iD,EAASjpC,IAEvCwH,GACHA,EAAQyhC,GAIF7iD;AACP,OAAIC,KAAK6tB,QAAUmzB,EAAM0D,KACjBhsD,QAAQyB,UAER8jB,EAAA3G,MAAM+C,UAAUra,KAAK+jD,iBAI9BhkD,UACKC,KAAKqiD,mBACRriD,KAAKqiD,iBAAiBrtC,UACtBhV,KAAKqiD,iBAAmB,MAEzBriD,KAAKmiD,eAAe5iD,QAAQkF,GAAKA,EAAEuQ,WACnChV,KAAKmiD,eAAe3gD,SAvMtB5C,EAAA8kD,cAAAA,EA6NA9kD,EAAA+lD,UAAA,MAiBC5kD,YAAY6kD,GAfJ5kD,KAAAkiD,SAAW,IAAIjiD,IACfD,KAAA6kD,aAAe,IAAI1kD,IAEVH,KAAA8kD,oBAAsB,IAAI7mC,EAAAjG,QAClChY,KAAA+kD,mBAAkD/kD,KAAK8kD,oBAAoBvtC,MAEnEvX,KAAAglD,uBAAyB,IAAI/mC,EAAAjG,QACrChY,KAAAilD,sBAAqDjlD,KAAKglD,uBAAuBztC,MASzFqtC,EAAmB,EAAG7C,SAAAA,EAAUmD,sBAAAA,MACRjnC,EAAA3G,MAAMhM,KAAKy2C,EAASO,UAE3C6C,CAAe17B,IACd,MACMu4B,EAAMH,EADG,IAAIT,EAAa33B,IAG1B27B,EAAgB,IAAItD,EAAcC,EAAUC,GAC5CqD,EAAgB,IAAI3B,EAAc3B,GAExC/hD,KAAKkiD,SAAS3iD,QAAQ,CAACmjD,EAASxrD,IAASkuD,EAAcE,gBAAgBpuD,EAAMwrD,IAE7E,MAAM6C,EAAmC,CAAEH,cAAAA,EAAeC,cAAAA,EAAerD,IAAAA,GACzEhiD,KAAK6kD,aAAaxkD,IAAIklD,GACtBvlD,KAAK8kD,oBAAoB7sC,KAAKstC,GAE9BL,EAAsB,KACrBE,EAAcpwC,UACdqwC,EAAcrwC,UACdhV,KAAK6kD,aAAavkD,OAAOilD,GACzBvlD,KAAKglD,uBAAuB/sC,KAAKstC,SA3BrCC,kBACC,MAAMnvD,EAAiC,GAEvC,OADA2J,KAAK6kD,aAAatlD,QAAQyiD,GAAO3rD,EAAOc,KAAK6qD,IACtC3rD,EAuCR0J,WAA+B0iD,EAAqBgD;AACnD,MAAMxB,EAAOjkD,KAEb,MAAO,CACND,KAAKkuC,EAAiBtkC,EAAWu6C,GAChC,IAAIwB,EAEJ,GAAI/mB,EAAA9B,WAAW4oB,GAAuB,CAErC,IAAIF,EAAaI,EAAAt6C,iBAAiB44C,EAAKuB,YAAYn9C,OAAOo9C,IAE1DC,EAAoBH,EAEjB7sD,QAAQyB,QAAQorD,GAEhBtnC,EAAA3G,MAAM+C,UAAU4D,EAAA3G,MAAMjP,OAAO47C,EAAKc,mBAAoBU,SAEzDC,EAAoBD,EAAqBG,UAAU3B,EAAMhW,EAAStkC,GAMnE,OAAOk8C,EAHgBH,EACrBxsD,KAAKqsD,GAAeA,EAAoCF,cAAcS,WAAWrD,KAGjFtjD,KAAK8uC,EAAStkC,EAAKu6C,IAEtBnkD,OAAOwX,EAAe5N,GACrB,GAAIg1B,EAAA9B,WAAW4oB,GACd,OAAOxB,EAAK8B,kBAAkBtD,EAAagD,EAAsBluC,EAAO5N,GAMzE,OAAOk8C,EAHgBJ,EAAqBO,WAAW/B,EAAM1sC,EAAO5N,GAClEzQ,KAAKqsD,GAAeA,EAAoCF,cAAcS,WAAWrD,KAGjFc,OAAOhsC,EAAO5N,KAKX5J,kBAAsC0iD,EAAqBwD,EAAqDvsC,EAAmB/P,GAC1I,MAAMs6C,EAAOjkD,KACb,IAAIiV,EAAc,IAAI4D,EAAAvD,gBAMtB,MAAMyC,EAAU,IAAIkG,EAAAjG,QAAW,CAC9B4B,mBAAoB,KACnB3E,EAAc,IAAI4D,EAAAvD,gBAKlB,MAAM4wC,EAAmB,IAAIjoC,EAAAnB,iBACvBnjB,EAAM,IAAIsG,IAEV8kD,EAAsBQ,IAC3B,MACMhuC,EADUguC,EAAWF,cAAcS,WAAWrD,GAC9Bc,OAAU7pC,EAAW/P,GACrCu2C,EAAagG,EAAiB7lD,IAAIkX,GAExC5d,EAAIyG,IAAImlD,EAAYrF,IAcrB+D,EAAKuB,YAAYn9C,OAAO49C,GAAc1mD,QAAQwlD,GAC9C9mC,EAAA3G,MAAMjP,OAAO47C,EAAKc,mBAAoBkB,EAAtChoC,CAAoD8mC,OAAoBhrD,EAAWkb,GACnFgvC,EAAKgB,sBAb0BM,IAC9B,MAAMrF,EAAavmD,EAAIuG,IAAIqlD,GAEtBrF,IAILA,EAAWlrC,UACXrb,EAAI2G,OAAOilD,UAKsCxrD,EAAWkb,GAC7DixC,EAAiB3uC,MAAMQ,EAAQE,KAAMF,EAAS9C,GAE9CA,EAAY5U,IAAI6lD,IAEjBpsC,qBAAsB,KACrB7E,EAAYD,aAId,OAAO+C,EAAQR,MAGhBxX,gBAAgB0iD,EAAqBC,GACpC1iD,KAAKkiD,SAAS9hD,IAAIqiD,EAAaC,GAE/B1iD,KAAK6kD,aAAatlD,QAAQgmD;AACzBA,EAAWH,cAAcE,gBAAgB7C,EAAaC,KAIxD3iD,UACCC,KAAKkiD,SAAS1gD,QACdxB,KAAK6kD,aAAarjD,QAClBxB,KAAK8kD,oBAAoB9vC,UACzBhV,KAAKglD,uBAAuBhwC,YAuC9B,SAAgB6wC,EAAsCzrC,GACrD,MAAO,CACNjb,KAAI,CAAC8uC,EAAiBtkC,EAAWu6C,IACzB9pC,EAAQlhB,KAAKP,GAAKA,EAAEwG,KAAQ8uC,EAAStkC,EAAKu6C,IAGlDnkD,OAAUwX,EAAe5N,GACxB,MAAMw8C,EAAQ,IAAIloC,EAAAZ,MAElB,OADAjD,EAAQlhB,KAAKP,GAAKwtD,EAAM1oC,MAAQ9kB,EAAE4qD,OAAOhsC,EAAO5N,IACzCw8C,EAAM5uC,QArChB3Y,EAAAwnD,UAAA,MAKCrmD,YAAYgiD,EAAmCC,GAC9C,MAAMhE,EAAS,IAAIsD,EACnBM,EAAU5D,EAAQgE,GAClBD,EAASc,KAAK7E,EAAO5kC,QAErBpZ,KAAKqlD,cAAgB,IAAI3B,EAAc3B,GACvC/hD,KAAKolD,cAAgB,IAAItD,EAAcC,EAAUC,GAGlDjiD,WAA+B0iD,GAC9B,OAAOziD,KAAKqlD,cAAcS,WAAWrD,GAGtC1iD,gBAAgB0iD,EAAqBC,GACpC1iD,KAAKolD,cAAcE,gBAAgB7C,EAAaC,GAGjD3iD,UACCC,KAAKqlD,cAAcrwC,UACnBhV,KAAKolD,cAAcpwC,YAIrBpW,EAAAinD,kBAAAA,EAcAjnD,EAAAynD,mBAAA,SAAuD3D,GACtD,IAAI4D,GAAU,EAEd,MAAO,CACNnnD,KAAI,CAAI8uC,EAAiBtkC,EAAWu6C,IAC/BoC,EACI5D,EAAQvjD,KAAK8uC,EAAStkC,EAAKu6C,GAG5BjY,EAAA9sB,QAAQ,GACbjmB,KAAK,IAAMotD,GAAU,GACrBptD,KAAK,IAAMwpD,EAAQvjD,KAAQ8uC,EAAStkC,EAAKu6C,IAE5CnkD,OAAUwX,EAAe5N,GACxB,GAAI28C,EACH,OAAO5D,EAAQa,OAAUhsC,EAAO5N,GAGjC,MAAMw8C,EAAQ,IAAIloC,EAAAZ,MAMlB,OAJA4uB,EAAA9sB,QAAQ,GACNjmB,KAAK,IAAMotD,GAAU,GACrBptD,KAAK,IAAMitD,EAAM1oC,MAAQilC,EAAQa,OAAUhsC,EAAO5N,IAE7Cw8C,EAAM5uC,SAKhB3Y,EAAA2nD,aAAA,MAECxmD,YAAoBQ,GAAAP,KAAAO,GAAAA,EAEpBR,UAAUymD,GACT,OAAOxmD,KAAKymD,MAAMD,GAGnBzmD,WAAWymD;AACV,OAAOxmD,KAAKymD,MAAMD,GAGXzmD,YAAYymD,GACnB,IAAK,MAAMjB,KAAciB,EAAIhB,YAC5B,SAAU9sD,QAAQyB,QAAQ6F,KAAKO,GAAGglD,EAAWvD,MAC5C,OAAOtpD,QAAQyB,QAAQorD,GAKzB,aADMtnC,EAAA3G,MAAM+C,UAAUmsC,EAAIzB,0BACb/kD,KAAKymD,MAAMD,0OCl4B1B,IAAIE,EAA+B,KACnC,SAASC,IAIR,OAHKD,IACJA,EAAcnF,EAAA1oB,SAASO,MAAM,IAEvBstB,EAGR,MAAaE,EASZ7mD,cACCC,KAAK6mD,QAAU,GACf7mD,KAAK8mD,aAAe,EANrBvxB,iBACC,OAAOv1B,KAAK8mD,aAQN/mD,YAAYgnD,GAClB/mD,KAAK6mD,QAAQ1vD,KAAK4vD,GAClB/mD,KAAK8mD,cAAgBC,EAAKxxB,WAGpBx1B,KAAKinD,GACX,OAAOhnD,KAAKinD,MAAMD,GAAW,GAGvBjnD,KAAKinD,GACX,OAAOhnD,KAAKinD,MAAMD,GAAW,GAGtBjnD,MAAMinD,EAAmBE,GAEhC,GAAkB,IAAdF,EACH,OAAOL,IAGR,GAAIK,EAAYhnD,KAAK8mD,aACpB,MAAM,IAAI9nD,MAAM,8BAGjB,GAAIgB,KAAK6mD,QAAQ,GAAGtxB,aAAeyxB,EAAW,CAE7C,MAAM3wD,EAAS2J,KAAK6mD,QAAQ,GAK5B,OAJIK,IACHlnD,KAAK6mD,QAAQ5qC,QACbjc,KAAK8mD,cAAgBE,GAEf3wD,EAGR,GAAI2J,KAAK6mD,QAAQ,GAAGtxB,WAAayxB,EAAW,CAE3C,MAAM3wD,EAAS2J,KAAK6mD,QAAQ,GAAG3uD,MAAM,EAAG8uD;CAKxC,OAJIE,IACHlnD,KAAK6mD,QAAQ,GAAK7mD,KAAK6mD,QAAQ,GAAG3uD,MAAM8uD,GACxChnD,KAAK8mD,cAAgBE,GAEf3wD,EAGR,IAAIA,EAASkrD,EAAA1oB,SAASO,MAAM4tB,GACxBG,EAAe,EACfC,EAAa,EACjB,KAAOJ,EAAY,GAAG,CACrB,MAAMv4B,EAAQzuB,KAAK6mD,QAAQO,GAC3B,GAAI34B,EAAM8G,WAAayxB,EAAW,CAEjC,MAAMK,EAAY54B,EAAMv2B,MAAM,EAAG8uD,GACjC3wD,EAAO+J,IAAIinD,EAAWF,GACtBA,GAAgBH,EAEZE,IACHlnD,KAAK6mD,QAAQO,GAAc34B,EAAMv2B,MAAM8uD,GACvChnD,KAAK8mD,cAAgBE,GAGtBA,GAAaA,OAGb3wD,EAAO+J,IAAIquB,EAAO04B,GAClBA,GAAgB14B,EAAM8G,WAElB2xB,GACHlnD,KAAK6mD,QAAQ5qC,QACbjc,KAAK8mD,cAAgBr4B,EAAM8G,YAE3B6xB,IAGDJ,GAAav4B,EAAM8G,WAGrB,OAAOl/B,GAIT,IAAWixD,EA7FX1oD,EAAAgoD,YAAAA,EA6FA,SAAWU,GACVA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aAND,CAAWA,IAAAA,EAAmB,KAS9B,SAAkBC,GACjBA,EAAAA,EAAA,aAAA,IAAA,eAIAA,EAAAA,EAAA,gBAAA,KAAA,kBAIAA,EAAAA,EAAA,uBAAA,KAAA,yBAIAA,EAAAA,EAAA,cAAA,KAAA,gBAIAA,EAAAA,EAAA,qBAAA,KAAA,uBAIAA,EAAAA,EAAA,sBAAA,OAAA,wBAIAA,EAAAA,EAAA,2BAAA,KAAA,6BAzBD,CAAkB3oD,EAAA2oD,oBAAA3oD,EAAA2oD,kBAAiB,KA4BnC,MAAMC,EAILznD,YACiByS,EACAmH,EACA8tC,EACAptD,GAHA2F,KAAAwS,KAAAA;AACAxS,KAAA2Z,GAAAA,EACA3Z,KAAAynD,IAAAA,EACAznD,KAAA3F,KAAAA,EAEhB2F,KAAK0nD,YAAc,EAGpBtoD,WACC,OAAOY,KAAK3F,KAAKk7B,YAInB,MAAMoyB,UAAuB9uC,EAAAlE,WAkB5B5U,YAAY6nD,GACXtjD,QAZgBtE,KAAA6nD,WAAa7nD,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACjChY,KAAAsiD,UAAoCtiD,KAAK6nD,WAAWtwC,MAEnDvX,KAAA+nD,OAAS,CACzBC,UAAU,EACVC,QAAO,GACPC,YAAW,EACXvuC,GAAI,EACJ8tC,IAAK,GAKLznD,KAAKmoD,QAAUP,EACf5nD,KAAKwV,aAAc,EACnBxV,KAAKooD,cAAgB,IAAIxB,EACzB5mD,KAAK8nD,UAAU9nD,KAAKmoD,QAAQE,OAAOhuD,GAAQ2F,KAAKsoD,YAAYjuD,KAC5D2F,KAAKuoD,aAAenxD,KAAKC,MAGnB0I,YAAY1F,GAClB,GAAKA,GAA4B,IAApBA,EAAKk7B,WAQlB,IAJAv1B,KAAKuoD,aAAenxD,KAAKC,MAEzB2I,KAAKooD,cAAcE,YAAYjuD,GAExB2F,KAAKooD,cAAc7yB,YAAcv1B,KAAK+nD,OAAOE,SAAS,CAE5D,MAAMlB,EAAO/mD,KAAKooD,cAAc15B,KAAK1uB,KAAK+nD,OAAOE,SAEjD,GAAIjoD,KAAK+nD,OAAOC,SAIfhoD,KAAK+nD,OAAOC,UAAW,EACvBhoD,KAAK+nD,OAAOE,QAAUlB,EAAKxtB,aAAa,GACxCv5B,KAAK+nD,OAAOG,YAAcnB,EAAKptB,UAAU,GACzC35B,KAAK+nD,OAAOpuC,GAAKotC,EAAKxtB,aAAa,GACnCv5B,KAAK+nD,OAAON,IAAMV,EAAKxtB,aAAa,OAC9B,CAEN,MAAM2uB,EAAcloD,KAAK+nD,OAAOG,YAC1BvuC,EAAK3Z,KAAK+nD,OAAOpuC,GACjB8tC,EAAMznD,KAAK+nD,OAAON,IAWxB,GARAznD,KAAK+nD,OAAOC,UAAW,EACvBhoD,KAAK+nD,OAAOE,QAAO,GACnBjoD,KAAK+nD,OAAOG,YAAW,EACvBloD,KAAK+nD,OAAOpuC,GAAK,EACjB3Z,KAAK+nD,OAAON,IAAM;AAElBznD,KAAK6nD,WAAW5vC,KAAK,IAAIuvC,EAAgBU,EAAavuC,EAAI8tC,EAAKV,IAE3D/mD,KAAKwV,YAER,QAMGzV,mBACN,OAAOC,KAAKooD,cAAc15B,KAAK1uB,KAAKooD,cAAc7yB,YAG5Cx1B,UACNC,KAAKwV,aAAc,EACnBlR,MAAM0Q,WAIR,MAAMwzC,EAQLzoD,YAAY6nD,GACX5nD,KAAKwV,aAAc,EACnBxV,KAAKmoD,QAAUP,EACf5nD,KAAKi4B,MAAQ,GACbj4B,KAAK8mD,aAAe,EACpB9mD,KAAKyoD,cAAgB,EAGf1oD,UACNC,KAAKuZ,QACLvZ,KAAKwV,aAAc,EAGbzV,QAENC,KAAK0oD,YAGC3oD,MAAM0pB,GACZ,GAAIzpB,KAAKwV,YAGR,OAEDiU,EAAIi+B,YAActwD,KAAKC,MACvB2I,KAAKyoD,cAAgBrxD,KAAKC,MAC1B,MAAMyrD,EAASvB,EAAA1oB,SAASO,MAAK,IAC7B0pB,EAAOlpB,WAAWnQ,EAAIjX,KAAM,GAC5BswC,EAAOtpB,cAAc/P,EAAI9P,GAAI,GAC7BmpC,EAAOtpB,cAAc/P,EAAIg+B,IAAK,GAC9B3E,EAAOtpB,cAAc/P,EAAIpvB,KAAKk7B,WAAY,GAC1Cv1B,KAAK2oD,WAAW7F,EAAQr5B,EAAIpvB,MAGrB0F,WAAW6oD,EAAgB7F,GAClC,MAAM8F,EAAiC,IAAtB7oD,KAAK8mD,aAGtB,OAFA9mD,KAAKi4B,MAAM9gC,KAAKyxD,EAAM7F,GACtB/iD,KAAK8mD,cAAgB8B,EAAKrzB,WAAawtB,EAAKxtB,WACrCszB,EAGA9oD,cACP,MAAM6sB,EAAM20B,EAAA1oB,SAASpvB,OAAOzJ,KAAKi4B,MAAOj4B,KAAK8mD,cAG7C,OAFA9mD,KAAKi4B,MAAMzhC,OAAS,EACpBwJ,KAAK8mD,aAAe,EACbl6B,EAGA7sB,WAAW+iD,EAAkBzoD,GAChC2F,KAAK8oD,WAAWhG,EAAQzoD,IAC3B2rB,EAAS2B,aAAa,KACrB3nB,KAAK0oD,cAKA3oD,YACmB,IAAtBC,KAAK8mD,cAGT9mD,KAAKmoD,QAAQ/5B,MAAMpuB,KAAK+oD;AAqB1B,MAAaC,UAAiBnwC,EAAAlE,WAY7B5U,YAAY6nD,GACXtjD,QAPgBtE,KAAA6nD,WAAa,IAAI5pC,EAAAjG,QACzBhY,KAAAsiD,UAA6BtiD,KAAK6nD,WAAWtwC,MAErCvX,KAAAipD,SAAW,IAAIhrC,EAAAjG,QACvBhY,KAAAkpD,QAAuBlpD,KAAKipD,SAAS1xC,MAI7CvX,KAAKmoD,QAAUP,EACf5nD,KAAKmpD,cAAgBnpD,KAAK8nD,UAAU,IAAIU,EAAexoD,KAAKmoD,UAC5DnoD,KAAKopD,cAAgBppD,KAAK8nD,UAAU,IAAIH,EAAe3nD,KAAKmoD,UAE5DnoD,KAAK8nD,UAAU9nD,KAAKopD,cAAc9G,UAAW74B,IAChC,IAARA,EAAIjX,MACPxS,KAAK6nD,WAAW5vC,KAAKwR,EAAIpvB,SAI3B2F,KAAK8nD,UAAU9nD,KAAKmoD,QAAQe,QAAQ,IAAMlpD,KAAKipD,SAAShxC,SAGzDlY,YACC,OAAOC,KAAKmoD,QAGbpoD,kBAIAA,KAAKqZ,GACJpZ,KAAKmpD,cAAc/6B,MAAM,IAAIo5B,EAAe,EAA8B,EAAG,EAAGpuC,KApClFxa,EAAAoqD,SAAAA,EAwCA,MAAaK,UAAkCC,EAAAlD,UAQ9CrmD,YAAoBgiD,EAAyCpoC,GAC5DrV,MAAMy9C,EAAUpoC,GADG3Z,KAAA+hD,SAAAA,EANpBhiD,kBAAqC6nD,EAAiBjuC,GACrD,OAAO,IAAI0vC,EAAO,IAAIL,EAASpB,GAASjuC,GAGzCuvC,cAA6B,OAAOlpD,KAAK+hD,SAASmH,QAMlDnpD,UACCuE,MAAM0Q,UACN,MAAM4yC,EAAS5nD,KAAK+hD,SAASwH,YAC7BvpD,KAAK+hD,SAASyH,iBACdxpD,KAAK+hD,SAAS/sC,UACd4yC,EAAO16C,OAjBTtO,EAAAyqD,OAAAA,EAwBA,MAAaI,EAQZ1pD,cAJQC,KAAA0pD,eAAgB,EAChB1pD,KAAA2pD,uBAAwB,EACxB3pD,KAAA4pD,kBAAyB,GAGhC5pD,KAAKme,SAAW,IAAIF,EAAAjG,QAAW,CAC9B4B,mBAAoB;AACnB5Z,KAAK0pD,eAAgB,EAIrB3uD,EAAQse,SAAS,IAAMrZ,KAAK6pD,qBAE7B/vC,qBAAsB,KACrB9Z,KAAK0pD,eAAgB,KAIvB1pD,KAAKuX,MAAQvX,KAAKme,SAAS5G,MAGpBxX,mBACP,IAAIC,KAAK2pD,sBAAT,CAIA,IADA3pD,KAAK2pD,uBAAwB,EACtB3pD,KAAK0pD,eAAiB1pD,KAAK4pD,kBAAkBpzD,OAAS,GAC5DwJ,KAAKme,SAASlG,KAAKjY,KAAK4pD,kBAAkB3tC,SAE3Cjc,KAAK2pD,uBAAwB,GAGvB5pD,KAAKwX,GACPvX,KAAK0pD,cACJ1pD,KAAK4pD,kBAAkBpzD,OAAS,EACnCwJ,KAAK4pD,kBAAkBzyD,KAAKogB,GAE5BvX,KAAKme,SAASlG,KAAKV,GAGpBvX,KAAK4pD,kBAAkBzyD,KAAKogB,GAIvBxX,cACNC,KAAK4pD,kBAAoB,IAjD3BhrD,EAAA6qD,gBAAAA,EAqDA,MAAMK,EAIL/pD,YAAY1F,GACX2F,KAAK3F,KAAOA,EACZ2F,KAAKiM,KAAO,MAId,MAAMmW,EAKLriB,cACCC,KAAK0W,OAAS,KACd1W,KAAK2W,MAAQ,KAGP5W,OACN,OAAKC,KAAK0W,OAGH1W,KAAK0W,OAAOrc,KAFX,KAKF0F,UACN,IAAI1J,EAAc,GAAI0zD,EAAY,EAC9Bv9C,EAAKxM,KAAK0W,OACd,KAAOlK,GACNnW,EAAO0zD,KAAev9C,EAAGnS,KACzBmS,EAAKA,EAAGP,KAET,OAAO5V,EAGD0J,MACN,GAAKC,KAAK0W,OAGV,OAAI1W,KAAK0W,SAAW1W,KAAK2W,OACxB3W,KAAK0W,OAAS,UACd1W,KAAK2W,MAAQ,YAGd3W,KAAK0W,OAAS1W,KAAK0W,OAAOzK,MAGpBlM,KAAKoU,GACX,MAAMxU,EAAU,IAAImqD,EAAa31C,GACjC,IAAKnU,KAAK0W,OAGT,OAFA1W,KAAK0W,OAAS/W,OACdK,KAAK2W,MAAQhX;CAGdK,KAAK2W,MAAO1K,KAAOtM,EACnBK,KAAK2W,MAAQhX,GAQff,EAAAorD,mBAAA,MAyCCjqD,YAAY6nD,EAAiBqC,EAAgC,MAnB5CjqD,KAAAkqD,kBAAoB,IAAIT,EAChCzpD,KAAAmqD,iBAAoCnqD,KAAKkqD,kBAAkB3yC,MAEnDvX,KAAA6nD,WAAa,IAAI4B,EACzBzpD,KAAAsiD,UAA6BtiD,KAAK6nD,WAAWtwC,MAErCvX,KAAAipD,SAAW,IAAIQ,EACvBzpD,KAAAkpD,QAAuBlpD,KAAKipD,SAAS1xC,MAE7BvX,KAAAoqD,eAAiB,IAAIX,EAC7BzpD,KAAAqqD,cAA6BrqD,KAAKoqD,eAAe7yC,MAEzCvX,KAAAsqD,iBAAmB,IAAIb,EAC/BzpD,KAAAuqD,gBAA+BvqD,KAAKsqD,iBAAiB/yC,MAO7DvX,KAAKwqD,iBAAkB,EACvBxqD,KAAKyqD,kBAAoB,IAAIroC,EAC7BpiB,KAAK0qD,eAAiB,EACtB1qD,KAAK2qD,eAAiB,EACtB3qD,KAAK4qD,oBAAsB,KAE3B5qD,KAAK6qD,eAAiB,EACtB7qD,KAAK8qD,eAAiB,EACtB9qD,KAAK+qD,qBAAuB,EAC5B/qD,KAAKgrD,oBAAsB,KAE3BhrD,KAAKirD,0BAA4B,KACjCjrD,KAAKkrD,0BAA4B,KAEjClrD,KAAKmrD,mBAAqB,GAC1BnrD,KAAKmoD,QAAUP,EACf5nD,KAAKmpD,cAAgB,IAAIX,EAAexoD,KAAKmoD,SAC7CnoD,KAAKmrD,mBAAmBh0D,KAAK6I,KAAKmpD,eAClCnpD,KAAKopD,cAAgB,IAAIzB,EAAe3nD,KAAKmoD,SAC7CnoD,KAAKmrD,mBAAmBh0D,KAAK6I,KAAKopD;AAClCppD,KAAKmrD,mBAAmBh0D,KAAK6I,KAAKopD,cAAc9G,UAAU74B,GAAOzpB,KAAKorD,gBAAgB3hC,KACtFzpB,KAAKmrD,mBAAmBh0D,KAAK6I,KAAKmoD,QAAQe,QAAQ,IAAMlpD,KAAKoqD,eAAenyC,SACxEgyC,GACHjqD,KAAKopD,cAAcd,YAAY2B,GAGhCjqD,KAAKqrD,sBACLrrD,KAAKsrD,sBAhCNC,0BACC,OAAOvrD,KAAK0qD,eAAiB1qD,KAAK2qD,eAkCnC5qD,UACKC,KAAK4qD,sBACRzoD,aAAanC,KAAK4qD,qBAClB5qD,KAAK4qD,oBAAsB,MAExB5qD,KAAKgrD,sBACR7oD,aAAanC,KAAKgrD,qBAClBhrD,KAAKgrD,oBAAsB,MAExBhrD,KAAKirD,4BACR9oD,aAAanC,KAAKirD,2BAClBjrD,KAAKirD,0BAA4B,MAE9BjrD,KAAKkrD,4BACR/oD,aAAanC,KAAKkrD,2BAClBlrD,KAAKkrD,0BAA4B,MAElClrD,KAAKmrD,mBAAqBtyC,EAAA7D,QAAQhV,KAAKmrD,oBAGxCprD,iBACC,MAAM0pB,EAAM,IAAI+9B,EAAe,EAAiC,EAAG,EAAGb,KACtE3mD,KAAKmpD,cAAc/6B,MAAM3E,GACzBzpB,KAAKmpD,cAAc5vC,QAGZxZ,sBACP,GAAIC,KAAKirD,0BAER;CAGD,MAAMO,EAA2Bp0D,KAAKC,MAAQ2I,KAAKmpD,cAAcV,cACjE,GAAI+C,GAAwB,IAAqC,CAIhE,MAAM/hC,EAAM,IAAI+9B,EAAe,EAAgC,EAAG,EAAGb,KAGrE,OAFA3mD,KAAKmpD,cAAc/6B,MAAM3E,QACzBzpB,KAAKqrD,sBAINrrD,KAAKirD,0BAA4B7oD,WAAW,KAC3CpC,KAAKirD,0BAA4B,KACjCjrD,KAAKqrD,uBACH,IAAkCG,EAA2B,GAGzDzrD,sBACP,GAAIC,KAAKkrD,0BAER,OAGD,MAAMO,EAA2Br0D,KAAKC,MAAQ2I,KAAKopD,cAAcb,aAC7DkD,GAAwB,IAE3BzrD,KAAKsqD,iBAAiBryC,UAAKle,GAI5BiG,KAAKkrD,0BAA4B9oD,WAAW,KAC3CpC,KAAKkrD,0BAA4B,KACjClrD,KAAKsrD,uBACH,IAAyCG,EAA2B,GAGjE1rD,YACN,OAAOC,KAAKmoD,QAGNpoD,wBAAwB6nD,EAAiB8D,GAC/C1rD,KAAKwqD,iBAAkB,EAEvBxqD,KAAKmrD,mBAAqBtyC,EAAA7D,QAAQhV,KAAKmrD,oBACvCnrD,KAAKkqD,kBAAkByB,cACvB3rD,KAAKoqD,eAAeuB,cACpB3rD,KAAKsqD,iBAAiBqB,cACtB3rD,KAAKmoD,QAAQnzC,UAEbhV,KAAKmoD,QAAUP,EACf5nD,KAAKmpD,cAAgB,IAAIX,EAAexoD,KAAKmoD,SAC7CnoD,KAAKmrD,mBAAmBh0D,KAAK6I,KAAKmpD,eAClCnpD,KAAKopD,cAAgB,IAAIzB,EAAe3nD,KAAKmoD,SAC7CnoD,KAAKmrD,mBAAmBh0D,KAAK6I,KAAKopD;AAClCppD,KAAKmrD,mBAAmBh0D,KAAK6I,KAAKopD,cAAc9G,UAAU74B,GAAOzpB,KAAKorD,gBAAgB3hC,KACtFzpB,KAAKmrD,mBAAmBh0D,KAAK6I,KAAKmoD,QAAQe,QAAQ,IAAMlpD,KAAKoqD,eAAenyC,SAC5EjY,KAAKopD,cAAcd,YAAYoD,GAGzB3rD,wBACNC,KAAKwqD,iBAAkB,EAGvB,MAAMoB,EAAS5rD,KAAKyqD,kBAAkBnuC,UACtC,IAAK,IAAIhmB,EAAI,EAAGC,EAAMq1D,EAAOp1D,OAAQF,EAAIC,EAAKD,IAC7C0J,KAAKmpD,cAAc/6B,MAAMw9B,EAAOt1D,IAEjC0J,KAAK6rD,gBAEL7rD,KAAKqrD,sBACLrrD,KAAKsrD,sBAGCvrD,mBACNC,KAAKipD,SAAShxC,OAGPlY,gBAAgB0pB,GACvB,GAAIA,EAAIg+B,IAAMznD,KAAK2qD,eAElB,IADA3qD,KAAK2qD,eAAiBlhC,EAAIg+B,MACvB,CACF,MAAMnoD,EAAQU,KAAKyqD,kBAAkBqB,OACrC,KAAIxsD,GAASA,EAAMqa,IAAM8P,EAAIg+B,KAI5B,MAFAznD,KAAKyqD,kBAAkBjkD,MAOd,IAARijB,EAAIjX,KACHiX,EAAI9P,GAAK3Z,KAAK6qD,iBACbphC,EAAI9P,KAAO3Z,KAAK6qD,eAAiB,GACpC/zD,QAAQ+E,MAAM,qCAAqCmE,KAAK6qD,4CAA4CphC,EAAI9P,MAEzG3Z,KAAK6qD,eAAiBphC,EAAI9P,GAC1B3Z,KAAK+qD,qBAAuB3zD,KAAKC,MACjC2I,KAAK+rD,gBACL/rD,KAAK6nD,WAAW5vC,KAAKwR,EAAIpvB,OAER,IAARovB,EAAIjX,KACdxS,KAAKkqD,kBAAkBjyC,KAAKwR,EAAIpvB,MACd,IAARovB,EAAIjX,MACdxS,KAAKipD,SAAShxC;AAIhBlY,mBACC,OAAOC,KAAKopD,cAAc4C,mBAG3BjsD,QACCC,KAAKmpD,cAAc5vC,QAGpBxZ,KAAKqZ,GACJ,MAAM6O,IAASjoB,KAAK0qD,eACpB1qD,KAAK8qD,eAAiB9qD,KAAK6qD,eAC3B,MAAMphC,EAAM,IAAI+9B,EAAe,EAA8Bv/B,EAAMjoB,KAAK8qD,eAAgB1xC,GACxFpZ,KAAKyqD,kBAAkBtzD,KAAKsyB,GACvBzpB,KAAKwqD,kBACTxqD,KAAKmpD,cAAc/6B,MAAM3E,GACzBzpB,KAAK6rD,iBAQP9rD,YAAYqZ,GACX,MAAMqQ,EAAM,IAAI+9B,EAAe,EAA8B,EAAG,EAAGpuC,GACnEpZ,KAAKmpD,cAAc/6B,MAAM3E,GAGlB1pB,gBACP,GAAIC,KAAK6qD,gBAAkB7qD,KAAK8qD,eAE/B,OAGD,GAAI9qD,KAAKgrD,oBAER,OAGD,MAAMS,EAA2Br0D,KAAKC,MAAQ2I,KAAK+qD,qBAC/CU,GAAwB,IAI3BzrD,KAAKisD,WAINjsD,KAAKgrD,oBAAsB5oD,WAAW,KACrCpC,KAAKgrD,oBAAsB,KAC3BhrD,KAAK+rD,iBACH,IAAoCN,EAA2B,GAG3D1rD,gBACP,GAAIC,KAAK0qD,gBAAkB1qD,KAAK2qD,eAE/B,OAGD,GAAI3qD,KAAK4qD,oBAER,OAGD,MAAMsB,EAA0BlsD,KAAKyqD,kBAAkBqB,OACjDK,EAAmC/0D,KAAKC,MAAQ60D,EAAwBxE,YAC1EyE,GAAgC,IAEnCnsD,KAAKsqD,iBAAiBryC,UAAKle,GAI5BiG,KAAK4qD,oBAAsBxoD,WAAW,KACrCpC,KAAK4qD,oBAAsB,KAC3B5qD,KAAK6rD,iBACH,IAA2CM,EAAmC,GAG1EpsD;AACP,GAAIC,KAAK6qD,gBAAkB7qD,KAAK8qD,eAE/B,OAGD9qD,KAAK8qD,eAAiB9qD,KAAK6qD,eAC3B,MAAMphC,EAAM,IAAI+9B,EAAe,EAA0B,EAAGxnD,KAAK8qD,eAAgBnE,KACjF3mD,KAAKmpD,cAAc/6B,MAAM3E,6EC3rB3B,SAAS2iC,EAAgBl1D,GAExB,MAAmB,MAAZA,EAAK,IAA0B,MAAZA,EAAK,IAAcykC,EAAArL,mBAAmBp5B,EAAKsX,WAAW,0GA7FjF5P,EAAAytD,sBAAA,SAAsCC,EAAkBn8C,GACvD,MAAMgR,EAAUmrC,EACVC,EAAqBp8C,GAAWA,EAAQo8C,mBAIxCC,EAAsB,IAAIvsD,IAChC,IAAK,MAAMxB,KAAO0iB,EACbirC,EAAgB3tD,IACnB+tD,EAAoBpsD,IAAI3B,EAAKwf,EAAA3G,MAAM8B,OAAO+H,EAAQ1iB,IAAwB,IAI5E,OAAO,IAAI,MAEVsB,OAAUoZ,EAAY5B,GACrB,MAAMk1C,EAAYD,EAAoBtsD,IAAIqX,GAC1C,GAAIk1C,EACH,OAAOA,EAGR,MAAM,IAAIztD,MAAM,oBAAoBuY,KAGrCxX,KAAKoZ,EAAY80B,EAAiB/sC,GACjC,MAAMrJ,EAASspB,EAAQ8sB,GACvB,GAAsB,mBAAXp2C,EAAuB,CAGjC,IAAK00D,GAAsB7jD,MAAMC,QAAQzH,GACxC,IAAK,IAAI5K,EAAI,EAAGA,EAAI4K,EAAK1K,OAAQF,IAChC4K,EAAK5K,GAAKo2D,EAAArf,OAAOnsC,EAAK5K,IAIxB,OAAOuB,EAAO0J,MAAM4f,EAASjgB,GAG9B,MAAM,IAAIlC,MAAM,qBAAqBivC,QAcxCrvC,EAAA+tD,oBAAA,SAAuCjK,EAAmBvyC,GACzD,MAAMo8C,EAAqBp8C,GAAWA,EAAQo8C,mBAE9C,OAAO,IAAIK,MAAM,GAAI,CACpB7sD,IAAI8sD,EAAYC,GACf,GAAuB,iBAAZA,EAGV,OAAIV,EAAgBU,GACZpK,EAAQa,OAAOuJ,GAIhBzoC,kBAAmBnjB,GAGzB,IAAI6rD;CAEHA,EADG58C,IAAYwuB,EAAAtC,kBAAkBlsB,EAAQwN,SAC5B,CAACxN,EAAQwN,WAAYzc,GAErBA,EAGd,MAAM7K,QAAeqsD,EAAQvjD,KAAK2tD,EAASC,GAG3C,OAAKR,EAIEl2D,EAHCq2D,EAAArf,OAAOh3C,IAOjB,MAAM,IAAI2I,MAAM,uBAAuBoF,OAAO0oD,yPC7GjD,MAAaE,EAGZjtD,YAAY6nD,GACX5nD,KAAK4nD,OAASA,EAGR7nD,UACNC,KAAK4nD,OAAOj6B,UAGN5tB,OAAOktD,GACb,MAAMlqD,EAAYgkD,GAAiBkG,EAAU1L,EAAA1oB,SAAS0B,KAAKwsB,IAE3D,OADA/mD,KAAK4nD,OAAO/tC,GAAG,OAAQ9W,GAChB,CACNiS,QAAS,IAAMhV,KAAK4nD,OAAOsF,IAAI,OAAQnqD,IAIlChD,QAAQgD,GAEd,OADA/C,KAAK4nD,OAAO/tC,GAAG,QAAS9W,GACjB,CACNiS,QAAS,IAAMhV,KAAK4nD,OAAOsF,IAAI,QAASnqD,IAInChD,MAAMgD,GAEZ,OADA/C,KAAK4nD,OAAO/tC,GAAG,MAAO9W,GACf,CACNiS,QAAS,IAAMhV,KAAK4nD,OAAOsF,IAAI,MAAOnqD,IAIjChD,MAAMqZ,GAERpZ,KAAK4nD,OAAO55B,WAShBhuB,KAAK4nD,OAAOx5B,MAAchV,EAAOA,QAG3BrZ,MACNC,KAAK4nD,OAAO16C,OAId,IAAWigD,EAIAC,EAxDXxuD,EAAAouD,WAAAA,EAoDA,SAAWG,GACVA,EAAAA,EAAA,kBAAA,GAAA,oBADD,CAAWA,IAAAA,EAAS,KAIpB,SAAWC,GACVA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,WAAA,GAAA;AACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,IAAA,GAAA,MAJD,CAAWA,IAAAA,EAAS,KAUpB,MAAaC,UAA4Bx0C,EAAAlE,WAYxC5U,YAAY6nD,GACXtjD,QATgBtE,KAAAstD,QAAUttD,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAE7BhY,KAAA+nD,OAAS,CACzBl6B,MAAK,EACLo6B,QAAO,EACPsF,KAAM,GAKNvtD,KAAK4nD,OAASA,EACd5nD,KAAKooD,cAAgB,IAAIoF,EAAA5G,YACzB5mD,KAAK8nD,UAAU9nD,KAAK4nD,OAAOS,OAAOhuD,GAAQ2F,KAAKytD,aAAapzD,KAGtD0F,UACNC,KAAK4nD,OAAO5yC,UAGNjV,OAAOgD,GACb,OAAO/C,KAAKstD,QAAQ/1C,MAAMxU,GAGpBhD,QAAQgD,GACd,OAAO/C,KAAK4nD,OAAOsB,QAAQnmD,GAGrBhD,MAAMgD,GACZ,OAAO/C,KAAK4nD,OAAO8F,MAAM3qD,GAGnBhD,MAAMqZ,GACZ,IAAIu0C,EAAS,EACTv0C,EAAOmc,WAAa,IACvBo4B,GAAa,EACHv0C,EAAOmc,WAAa,MAC9Bo4B,GAAa,EAEbA,GAAa,EAEd,MAAM7K,EAASvB,EAAA1oB,SAASO,MAAMu0B,GAG9B,GADA7K,EAAOlpB,WAAW,IAAY,GAC1BxgB,EAAOmc,WAAa,IACvButB,EAAOlpB,WAAWxgB,EAAOmc,WAAY,QAC/B,GAAInc,EAAOmc,WAAa,MAAS,CACvCutB,EAAOlpB,WAAW,IAAK,GACvB,IAAI7pB,EAAS,EACb+yC,EAAOlpB,WAAYxgB,EAAOmc,aAAe,EAAK,MAAcxlB,GAC5D+yC,EAAOlpB,WAAYxgB,EAAOmc,aAAe,EAAK,MAAcxlB,OACtD,CACN+yC,EAAOlpB,WAAW,IAAK,GACvB,IAAI7pB,EAAS,EACb+yC,EAAOlpB,WAAW,IAAK7pB,GACvB+yC,EAAOlpB,WAAW,IAAK7pB,GACvB+yC,EAAOlpB,WAAW,IAAK7pB,GACvB+yC,EAAOlpB,WAAW,IAAK7pB,GACvB+yC,EAAOlpB,WAAYxgB,EAAOmc,aAAe,GAAM,MAAcxlB,GAC7D+yC,EAAOlpB,WAAYxgB,EAAOmc,aAAe,GAAM,MAAcxlB,GAC7D+yC,EAAOlpB,WAAYxgB,EAAOmc,aAAe,EAAK,MAAcxlB,GAC5D+yC,EAAOlpB,WAAYxgB,EAAOmc,aAAe,EAAK,MAAcxlB;AAG7D/P,KAAK4nD,OAAOx5B,MAAMmzB,EAAA1oB,SAASpvB,OAAO,CAACq5C,EAAQ1pC,KAGrCrZ,MACNC,KAAK4nD,OAAO16C,MAGLnN,aAAa1F,GACpB,GAAwB,IAApBA,EAAKk7B,WAMT,IAFAv1B,KAAKooD,cAAcE,YAAYjuD,GAExB2F,KAAKooD,cAAc7yB,YAAcv1B,KAAK+nD,OAAOE,SAEnD,GAAqB,IAAjBjoD,KAAK+nD,OAAOl6B,MAAgC,CAE/C,MAGM+/B,EAHa5tD,KAAKooD,cAAc0D,KAAK9rD,KAAK+nD,OAAOE,SAGzBtuB,UAAU,GAClCk0B,GAAwB,IAAbD,KAA6B,EACxCr3D,EAAoB,IAAbq3D,EAEb5tD,KAAK+nD,OAAOl6B,MAAK,EACjB7tB,KAAK+nD,OAAOE,QAAU,GAA+B4F,EAAU,EAAI,IAAc,MAARt3D,EAAc,EAAI,IAAc,MAARA,EAAc,EAAI,GACnHyJ,KAAK+nD,OAAOwF,KAAO,OAEb,GAAqB,IAAjBvtD,KAAK+nD,OAAOl6B,MAAgC,CAEtD,MAAMi1B,EAAS9iD,KAAKooD,cAAc15B,KAAK1uB,KAAK+nD,OAAOE,SAC7C2F,EAAa9K,EAAOnpB,UAAU,GAC9Bk0B,GAAwB,IAAbD,KAA6B,EAC9C,IAAIr3D,EAAoB,IAAbq3D,EAEP79C,EAAS,EACD,MAARxZ,EACHA,EAC8B,IAA7BusD,EAAOnpB,YAAY5pB,GACjB+yC,EAAOnpB,YAAY5pB,GAEJ,MAARxZ,IACVA,EAC8B,EAA7BusD,EAAOnpB,YAAY5pB,GACY,EAA7B+yC,EAAOnpB,YAAY5pB,GACU,EAA7B+yC,EAAOnpB,YAAY5pB,GACU,EAA7B+yC,EAAOnpB,YAAY5pB,GACnB+yC,EAAOnpB,YAAY5pB,GAAU,GAAK,GACL,MAA7B+yC,EAAOnpB,YAAY5pB,GACU,IAA7B+yC,EAAOnpB,YAAY5pB,GACnB+yC,EAAOnpB,YAAY5pB,IAIvB,IAAIw9C,EAAO,EACPM,IACHN,EACCzK,EAAOnpB,YAAY5pB,GAAU,GAAK,GACH,MAA7B+yC,EAAOnpB,YAAY5pB,GACU,IAA7B+yC,EAAOnpB,YAAY5pB,GACnB+yC,EAAOnpB,YAAY5pB,IAIvB/P,KAAK+nD,OAAOl6B,MAAK,EACjB7tB,KAAK+nD,OAAOE,QAAU1xD,EACtByJ,KAAK+nD,OAAOwF,KAAOA,OAEb,GAAqB,IAAjBvtD,KAAK+nD,OAAOl6B,MAA8B,CAGpD,MAAMk1B,EAAO/iD,KAAKooD,cAAc15B,KAAK1uB,KAAK+nD,OAAOE,SACjD6F,EAAO/K,EAAM/iD,KAAK+nD,OAAOwF;AAEzBvtD,KAAK+nD,OAAOl6B,MAAK,EACjB7tB,KAAK+nD,OAAOE,QAAO,EACnBjoD,KAAK+nD,OAAOwF,KAAO,EAEnBvtD,KAAKstD,QAAQr1C,KAAK8qC,KAMtB,SAAS+K,EAAO10C,EAAkBm0C,GACjC,GAAa,IAATA,EACH,OAED,IAAIQ,EAAM30C,EAAOmc,aAAe,EAChC,IAAK,IAAIj/B,EAAI,EAAGA,EAAIy3D,EAAKz3D,IAAK,CAC7B,MAAM03D,EAAI50C,EAAOmgB,aAAiB,EAAJjjC,GAC9B8iB,EAAOogB,cAAcw0B,EAAIT,EAAU,EAAJj3D,GAEhC,IAAIyZ,EAAe,EAANg+C,EACTE,EAAY70C,EAAOmc,WAAaxlB,EACpC,MAAMm+C,EAAMX,IAAS,GAAM,IACrBY,EAAMZ,IAAS,GAAM,IACrBa,EAAMb,IAAS,EAAK,IACtBU,GAAa,GAChB70C,EAAOwgB,WAAWxgB,EAAOugB,UAAU5pB,GAAUm+C,EAAIn+C,GAE9Ck+C,GAAa,GAChB70C,EAAOwgB,WAAWxgB,EAAOugB,UAAU5pB,EAAS,GAAKo+C,EAAIp+C,EAAS,GAE3Dk+C,GAAa,GAChB70C,EAAOwgB,WAAWxgB,EAAOugB,UAAU5pB,EAAS,GAAKq+C,EAAIr+C,EAAS,GA7KhEnR,EAAAyuD,oBAAAA,EAiLAzuD,EAAAyvD,uBAAA,WACC,MAAMC,EAAe5T,EAAAvD,eACrB,MAAyB,UAArBp8C,QAAQirB,SACJ,2BAA2BsoC,SAG3B3zB,EAAA9gC,KAAKm/C,EAAAyB,SAAU,cAAc6T,WAItC,MAAaC,UAAejF,EAAA3E,UAa3B5kD,YAAYyuD,GACXlqD,MAAMiqD,EAAOE,wBAAwBD,IACrCxuD,KAAKwuD,OAASA,EAbPzuD,+BAA+ByuD,GACtC,MAAME,EAAezwC,EAAA3G,MAAMmC,qBAA6B+0C,EAAQ,cAEhE,OAAOvwC,EAAA3G,MAAM3d,IAAI+0D,EAAc9G,IAAU,CACxC7F,SAAU,IAAIyL,EAAAxE,SAAS,IAAIgE,EAAWpF,IACtC1C,sBAAuBjnC,EAAA3G,MAAMhM,KAAK2S,EAAA3G,MAAMmC,qBAA2BmuC,EAAQ,aAW7E7nD,UACCuE,MAAM0Q,UACFhV,KAAKwuD,SACRxuD,KAAKwuD,OAAOpR,QACZp9C,KAAKwuD,OAAS,OAtBjB5vD,EAAA2vD,OAAAA;AA6BA3vD,EAAA+vD,MAAA,SAAsB3xC,GACrB,OAAO,IAAItkB,QAAgB,CAACC,EAAGG,KAC9B,MAAM01D,EAASI,EAAAC,eAEfL,EAAO30C,GAAG,QAAS/gB,GACnB01D,EAAOjL,OAAOvmC,EAAM,KACnBwxC,EAAOz0C,eAAe,QAASjhB,GAC/BH,EAAE,IAAI41D,EAAOC,SAQhB5vD,EAAAkwD,QAAA,SAAwB9xC,EAAW+xC,GAClC,OAAO,IAAIr2D,QAAgB,CAACC,EAAGG,KAC9B,MAAM8uD,EAASgH,EAAAI,iBAAiBhyC,EAAM,KACrC4qC,EAAO7tC,eAAe,QAASjhB,GAC/BH,EAAE60D,EAAAnE,OAAO4F,WAAW,IAAIjC,EAAWpF,GAASmH,MAG7CnH,EAAOt8C,KAAK,QAASxS,S/C/TvBqsB,OAAAjvB,EAAA,IAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,sBAAA7D,uJgDQA,MAAM80D,EAAS,GACTC,EAAgB,GAATD,EACPE,EAAa,GAAPD,EACNE,EAAa,EAAND,EACPE,EAAc,GAANF,EACRG,EAAa,IAANH,EAEbzwD,EAAA6wD,QAAA,SAAwBC,EAAqBC,GACxB,iBAATD,IACVA,EAAOA,EAAKx2C,WAGb,MAAM02C,EAAU/qD,KAAKqjC,QAAO,IAAI9wC,MAAO8hB,UAAYw2C,GAAQ,KAC3D,GAAIE,EAAU,GACb,OAAOC,EAAAC,SAAS,EAAoB,MAGrC,IAAIhxD,EACJ,OAAI8wD,EAAUT,GACbrwD,EAAQ8wD,EAEJD,EACc,IAAV7wD,EACJ+wD,EAAAC,SAAS,EAAqC,KAAehxD,GAC7D+wD,EAAAC,SAAS,EAAmC,KAAgBhxD,GAE9C,IAAVA,EACJ+wD,EAAAC,SAAS,EAAiC,KAAWhxD,GACrD+wD,EAAAC,SAAS,EAA+B,KAAYhxD,IAIrD8wD,EAAUR,GACbtwD,EAAQ+F,KAAKC,MAAM8qD,EAAUT,GACzBQ,EACc,IAAV7wD,EACJ+wD,EAAAC,SAAS,EAAqC,KAAehxD,GAC7D+wD,EAAAC,SAAS,EAAmC,KAAgBhxD,GAE9C,IAAVA,EACJ+wD,EAAAC,SAAS,EAAiC,KAAWhxD,GACrD+wD,EAAAC,SAAS,EAA+B,KAAYhxD,IAIrD8wD,EAAUP,GACbvwD,EAAQ+F,KAAKC,MAAM8qD,EAAUR;AACzBO,EACc,IAAV7wD,EACJ+wD,EAAAC,SAAS,EAAmC,KAAchxD,GAC1D+wD,EAAAC,SAAS,GAAiC,KAAehxD,GAE3C,IAAVA,EACJ+wD,EAAAC,SAAS,GAA+B,KAAUhxD,GAClD+wD,EAAAC,SAAS,GAA6B,KAAWhxD,IAIlD8wD,EAAUN,GACbxwD,EAAQ+F,KAAKC,MAAM8qD,EAAUP,GACzBM,EACc,IAAV7wD,EACJ+wD,EAAAC,SAAS,GAAkC,KAAehxD,GAC1D+wD,EAAAC,SAAS,GAAgC,KAAgBhxD,GAE3C,IAAVA,EACJ+wD,EAAAC,SAAS,GAA8B,KAAWhxD,GAClD+wD,EAAAC,SAAS,GAA4B,KAAYhxD,IAIlD8wD,EAAUL,GACbzwD,EAAQ+F,KAAKC,MAAM8qD,EAAUN,GACzBK,EACc,IAAV7wD,EACJ+wD,EAAAC,SAAS,GAAmC,KAAchxD,GAC1D+wD,EAAAC,SAAS,GAAiC,KAAehxD,GAE3C,IAAVA,EACJ+wD,EAAAC,SAAS,GAA+B,KAAUhxD,GAClD+wD,EAAAC,SAAS,GAA6B,KAAWhxD,IAIlD8wD,EAAUJ,GACb1wD,EAAQ+F,KAAKC,MAAM8qD,EAAUL,GACzBI,EACc,IAAV7wD,EACJ+wD,EAAAC,SAAS,GAAoC,KAAchxD,GAC3D+wD,EAAAC,SAAS,GAAkC,KAAehxD,GAE5C,IAAVA,EACJ+wD,EAAAC,SAAS,GAAgC,KAAUhxD,GACnD+wD,EAAAC,SAAS,GAA8B,KAAWhxD,KAIvDA,EAAQ+F,KAAKC,MAAM8qD,EAAUJ,GACzBG,EACc,IAAV7wD,EACJ+wD,EAAAC,SAAS,GAAmC,KAAchxD,GAC1D+wD,EAAAC,SAAS,GAAiC,KAAehxD,GAE3C,IAAVA,EACJ+wD,EAAAC,SAAS,GAA+B,KAAUhxD,GAClD+wD,EAAAC,SAAS,GAA6B,KAAWhxD,KAItDF,EAAAmxD,iBAAA,SAAiCL,GAChC,OAAOA,EAAKM,cACX,IAAMr0B,EAAAlM,IAAIigC,EAAKO,WAAa,EAAG,GAC/B,IAAMt0B,EAAAlM,IAAIigC,EAAKQ,UAAW,GAC1B,IAAMv0B,EAAAlM,IAAIigC,EAAKS,WAAY,GAC3B,IAAMx0B,EAAAlM,IAAIigC,EAAKU,aAAc,GAC7B,IAAMz0B,EAAAlM,IAAIigC,EAAKW,aAAc,GAC7B,KAAOX,EAAKY,kBAAoB,KAAMC,QAAQ,GAAGr4D,MAAM,EAAG,GAC1D,QhD7HFitB,OAAAjvB,EAAA,IAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,8BAAA7D,uEiDSA,SAASm2D,EAAwBC,EAAgBC;AAChD,OAAIA,IAAYD,EAAU3tD,OAAS2tD,EAAU/sD,YACrCwrD,EAAIY,SAAS,EAAqB,KAAYa,EAAyBF,GAAYG,EAAcH,EAAU3tD,QAAU8tD,EAAcH,EAAU/sD,aAG9IitD,EAAyBF,GAGjC,SAASG,EAAc9tD,GACtB,OAAI4F,MAAMC,QAAQ7F,GACVA,EAAMjJ,KAAK,MAGZiJ,EAGR,SAAS6tD,EAAyBF,GAGjC,MAA8B,iBAAnBA,EAAUx2D,MAAgD,iBAApBw2D,EAAUI,OAAmD,iBAAtBJ,EAAUK,QAC1F5B,EAAIY,SAAS,EAAwB,KAAiCW,EAAU1xD,SAGjF0xD,EAAU1xD,SAAWmwD,EAAIY,SAAS,EAAwB,+EASlElxD,EAAAmyD,eAAA,SAAgBA,EAAel1D,EAAa,KAAM60D,GAAmB,GACpE,IAAK70D,EACJ,OAAOqzD,EAAIY,SAAS,EAAwB,MAG7C,GAAIpnD,MAAMC,QAAQ9M,GAAQ,CACzB,MAAMmX,EAAgB03B,EAAOtiC,SAASvM,GAChC4tB,EAAMsnC,EAAe/9C,EAAO,GAAI09C,GAEtC,OAAI19C,EAAOxc,OAAS,EACZ04D,EAAIY,SAAS,EAAoB,KAA6BrmC,EAAKzW,EAAOxc,QAG3EizB,EAGR,GAAIunC,EAAM90B,SAASrgC,GAClB,OAAOA,EAGR,GAAIA,EAAMo1D,OAAQ,CACjB,MAAMA,EAASp1D,EAAMo1D,OAErB,GAAIA,EAAOp1D,MACV,OAAO20D,EAAwBS,EAAOp1D,MAAO60D,GAG9C,GAAIO,EAAOR,UACV,OAAOD,EAAwBS,EAAOR,UAAWC,GAInD,OAAI70D,EAAMiH,MACF0tD,EAAwB30D,EAAO60D,GAGnC70D,EAAMkD,QACFlD,EAAMkD,QAGPmwD,EAAIY,SAAS,EAAwB,UjDjF7C3qC,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,mCAAA7D,8IkDWAuE,EAAAsyD,qBAAA,SAAqCC,GACpC,OAAQA;AACP,KAAA,EAAmC,OAAOtB,EAAAC,SAAS,EAAuB,MAC1E,KAAA,EAAyC,OAAOD,EAAAC,SAAS,EAA6B,MACtF,KAAA,EAA0C,OAAOD,EAAAC,SAAS,EAA8B,MACxF,KAAA,EAAmC,OAAOD,EAAAC,SAAS,EAAuB,MAC1E,KAAA,EAAmC,OAAOD,EAAAC,SAAS,EAAuB,MAC1E,KAAA,EAAmC,OAAOD,EAAAC,SAAS,EAAuB,MAC1E,KAAA,EAAwC,OAAOD,EAAAC,SAAS,EAA4B,MACpF,KAAA,EAA0C,OAAOD,EAAAC,SAAS,EAA8B,MACxF,KAAA,EAAuC,OAAOD,EAAAC,SAAS,EAA2B,MAClF,QACC,MAAO,QlDvBV3qC,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,0BAAA7D,oEmDQA,IAAK+2D,mDAAL,SAAKA,GACJA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QAJD,CAAKA,IAAAA,EAAQ,KAOb,SAAUA,GAET,MAAMltC,EAAS,QACTmtC,EAAW,UACXC,EAAQ,OACRC,EAAQ,OAERC,EAAgD3zD,OAAOK,OAAO,MACpEszD,EAAgBJ,EAASpyD,OAASkwD,EAAIY,SAAS,EAAa,MAC5D0B,EAAgBJ,EAASK,SAAWvC,EAAIY,SAAS,EAAe,MAChE0B,EAAgBJ,EAASM,MAAQxC,EAAIY,SAAS,EAAY,MAM1CsB,EAAAO,UAAhB,SAA0B7yD,GACzB,OAAKA,EAIDo6B,EAAQ3E,iBAAiBrQ,EAAQplB,GAC7BsyD,EAASpyD,MAGbk6B,EAAQ3E,iBAAiB88B,EAAUvyD,IAAUo6B,EAAQ3E,iBAAiB+8B,EAAOxyD,GACzEsyD,EAASK,QAGbv4B,EAAQ3E,iBAAiBg9B,EAAOzyD,GAC5BsyD,EAASM,KAEVN,EAASQ,OAdRR,EAASQ,QAlBnB,CAAUR,IAAAA,EAAQ,KAoClBxyD,EAAAizD,QAAeT;AnDnDfjsC,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,yBAAA7D,+GoD6BA,SAASy3D,EAAeC,GACvB,OAAQA,GACP,KAAK,EACJ,OAAA,EACD,KAAK,EACJ,OAAA,EACD,KAAK,IACJ,OAAA,EACD,QACC,OAAA,GAkDH,SAAgBC,IACf,OAAOj3D,QAAQC,IAAa,SAAK,kLADlC4D,EAAAozD,gBAAAA,EAIA,IAAAC,EAAA,MAAA,MAAsBA,EAkCrBlyD,YAAmB4pC,EAA2B2B,EAAiB4mB,EAAgBC,GAC9E,QAAap4D,IAATuxC,QAA+BvxC,IAATm4D,QAA+Bn4D,IAATo4D,EAC/CnyD,KAAKoyD,IAAczoB,EACnB3pC,KAAKkB,KAAOoqC,EACZtrC,KAAKqyD,MAAQH,EACblyD,KAAKmQ,QAAUgiD,MACT,CACN,MAAMG,EAAyB3oB,EAC/B3pC,KAAKoyD,IAAME,EAAWrkB,QACtBjuC,KAAKqyD,MAAQC,EAAWC,eACxBvyD,KAAKkB,KAAOoxD,EAAWpxD,KAAKhJ,MAAM,GAClC8H,KAAKmQ,QAAUmiD,EAAWniD,SAAW,GAOtC,GAJAnQ,KAAKwyD,aAAe,KACpBxyD,KAAKyyD,oBAAsB,KAC3BzyD,KAAK0yD,oBAAqB,EAEtB1yD,KAAKmQ,QAAQnV,IAAK,CACrB,MAAM23D,EAAoC90D,OAAOK,OAAO,MACxDL,OAAOC,KAAK/C,QAAQC,KAAKuE,QAASd,IACjCk0D,EAAOl0D,GAAO1D,QAAQC,IAAIyD,KAE3BZ,OAAOC,KAAKkC,KAAKmQ,QAAQnV,KAAKuE,QAASd,IACtCk0D,EAAOl0D,GAAOuB,KAAKmQ,QAAQnV,IAAKyD;AAEjCuB,KAAKmQ,QAAQnV,IAAM23D,GAId5yD,sBACN,IAAI1J,EAAS2J,KAAKoyD,IAAItnC,cACtB,MAAMpvB,EAAQrF,EAAOsF,YAAYtD,EAAKua,KAItC,OAHe,IAAXlX,IACHrF,EAASA,EAAOuF,UAAUF,EAAQ,IAE/Bu2D,EAAgBW,iBAAiBv8D,GAC7BA,EAED,QAGD0J,MAAM8yD,GACZ,OAAIlsC,EAASG,YAAe9mB,KAAKmQ,SAAWnQ,KAAKmQ,QAAQyY,KAAO2iB,EAAQxQ,MAAM/6B,KAAKmQ,QAAQyY,OAAU5oB,KAAKmQ,SAAWo7B,EAAQxQ,MAAMhgC,QAAQ6tB,QACnIlwB,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAAkB,QAEzD9vD,KAAK8yD,UAAU55D,KAAM45D,IAC3B,IAAIC,EACAC,EACJ,MAAM38D,EAAS,IAAIqC,QAAa,CAACC,EAAGG,KACnCi6D,EAAKp6D,EACLq6D,EAAKl6D,IAGN,GAAIg6D,EAAS,CACZ,IAAIV,EAAcpyD,KAAKoyD,IACnBpyD,KAAKkB,OACRkxD,EAAMA,EAAM,IAAMpyD,KAAKkB,KAAKrH,KAAK,MAElCmG,KAAKwyD,aAAeS,EAAGr/B,KAAKw+B,EAAKpyD,KAAKmQ,QAAS,CAACtU,EAAOw8C,EAAQ6a,KAC9DlzD,KAAKwyD,aAAe,KACH32D,GAAAA,EAIFs3D,OACdH,EAAG,CAAEG,OAAQnzD,KAAK0yD,mBAAoBra,OAAQA,EAAO19B,WAAYu4C,OAAQA,EAAOv4C,aAEhF3a,KAAKozD,WAAWL,EAAIF,EAAIh3D,EAAOw8C,EAAe6a,SAG1C,CACN,IAAIV,EAAuC,KAC3C,MAAMa,EAAgBh5D,IACrB2F,KAAKwyD,aAAe,KACpBxyD,KAAKyyD,oBAAsB,KAC3BzyD,KAAKszD,YAAYj5D,EAAM04D,EAAIF,EAAIG,GAC/B,MAAM38D,EAAsB,CAC3Bk9D,WAAYvzD,KAAK0yD,oBAEdc,EAAMj3B,SAASliC,KAClBhE,EAAOo9D,QAAkBp5D,GAE1B04D,EAAG18D,IAEJ,GAAI2J,KAAKqyD,OAAS1rC,EAASG,UAAW,CACrC,MAAM3W,EAAeujD,EAAQv1B,UAAUn+B,KAAKmQ,SAC5CA,EAAQwjD,0BAA2B,EACnCxjD,EAAQyjD,UAAW,EACnB,IAAIC,GAAyB,EACzBC,GAAqB,EACzB,MAAMC,EAAwB,GAC9B,IAAIC,EAASh0D,KAAKi0D,aAAaj0D,KAAKoyD;CACpC2B,EAAY58D,KAAK68D,EAAOl1D,OACxB+0D,EAAgBG,EAAOA,OACnBh0D,KAAKkB,MACRlB,KAAKkB,KAAK3B,QAAShB,IAClBy1D,EAASh0D,KAAKi0D,aAAa11D,GAC3Bw1D,EAAY58D,KAAK68D,EAAOl1D,OACxBg1D,EAAYA,GAAaE,EAAOA,SAGlC,MAAM9yD,EAAiB,CACtB,KACA,MAEG2yD,EACCC,EACH5yD,EAAK/J,KAAK,IAAM48D,EAAYl6D,KAAK,KAAO,KAC9Bk6D,EAAYv9D,OAAS,EAC/B0K,EAAK/J,KAAK,IAAM48D,EAAY,GAAK,KAAYA,EAAY77D,MAAM,GAAG2B,KAAK,MAEvEqH,EAAK/J,KAAK,IAAM48D,EAAY,GAAK,KAGlC7yD,EAAK/J,KAAK48D,EAAYl6D,KAAK,MAE5B24D,EAAeS,EAAGiB,MAAMlC,IAAmB9wD,EAAMiP,QAE7CnQ,KAAKoyD,MACRI,EAAeS,EAAGiB,MAAMl0D,KAAKoyD,IAAKpyD,KAAKkB,KAAMlB,KAAKmQ,UAGhDqiD,IACHxyD,KAAKwyD,aAAeA,EACpBxyD,KAAKyyD,oBAAsB/5D,QAAQyB,QAAQq4D,GACvCxyD,KAAKm0D,aACRn0D,KAAKm0D,WAAWX,EAAMj3B,SAASi2B,EAAa4B,KAAO5B,EAAa4B,KAAO,GACvEp0D,KAAKm0D,gBAAap6D,GAEnBy4D,EAAa34C,GAAG,QAAUhe,IACzBmE,KAAKwyD,aAAe,KACpBQ,EAAG,CAAEO,WAAYvzD,KAAK0yD,mBAAoB72D,MAAOA,MAE9C22D,EAAa4B,MAChBp0D,KAAKwyD,aAAa34C,GAAG,QAASw5C,GAC9BrzD,KAAKq0D,YAAY7B,EAAcO,EAAKF,EAAIG,GAAK,KAIhD,OAAO38D,IAOC0J,YAAY1F,EAAW04D,EAAgCF,EAAqCG,IAK9FjzD,aAAajB,GACpB,OAAImzD,EAAgBt+B,OAAOpL,KAAKzpB,GACxB,CACNA,MAAO,IAAMA,EAAQ,IACrBk1D,QAAQ,GAGF,CACNl1D,MAAOA,EACPk1D,OAAQl1D,EAAMtI,OAAS,GAAkB,MAAbsI,EAAM,IAA0C,MAA5BA,EAAMA,EAAMtI,OAAS,IAKxE49D,UACC,OAAIp0D,KAAKyyD,oBACDzyD,KAAKyyD,oBAAoBv5D,KAAKs5D,GAAgBA,EAAa4B,IAAKp7D,IAAQ,GAExE,IAAIN,QAAiByB,IAC3B6F,KAAKm0D,WAAah6D,IAKd4F;AACN,OAAKC,KAAKyyD,oBAGHzyD,KAAKyyD,oBAAoBv5D,KAAMs5D,IACrCxyD,KAAK0yD,oBAAqB,EAzQ7B,SAA0B33D,EAA0B6tB,GACnD,GAAIjC,EAASG,UACZ,IACC,MAAM3W,EAAe,CACpBmkD,MAAO,CAAC,OAAQ,OAAQ,WAErB1rC,IACHzY,EAAQyY,IAAMA,GAEf,MAAM2rC,EAActB,EAAGuB,SAAS,WAAY,CAAC,KAAM,KAAM,OAAQz5D,EAAQq5D,IAAIz5C,YAAaxK,GAC1F,OAAO,IAAIzX,QAAQ,CAACyB,EAASC,KAC5Bm6D,EAAYjpD,KAAK,QAAUtS,IAC1BmB,EAAQ,CAAEs6D,SAAS,EAAO54D,MAAO7C,MAElCu7D,EAAYjpD,KAAK,OAAQ,CAACrR,EAAM6e,KAE9B3e,EADY,IAATF,EACK,CAAEw6D,SAAS,GAEX,CAAEA,SAAS,EAAOx6D,KAAe,OAATA,EAAgBA,EAAM,QAIxD,MAAOjB,GACR,OAAON,QAAQyB,QAAQ,CAAEs6D,SAAS,EAAO54D,MAAO7C,EAAKiB,KAAMjB,EAAI+4D,OAASD,EAAe94D,EAAI+4D,QAAS,SAE/F,GAAIprC,EAASK,SAAWL,EAASI,YACvC,IACC,MAAMqrC,EAAMrY,EAAAnW,qBAAqB+T,EAAS,oCAC1C,OAAO,IAAIj/C,QAAQ,CAACyB,EAASC,KAC5B64D,EAAGuB,SAASpC,EAAK,CAACr3D,EAAQq5D,IAAIz5C,YAAa,CAAE08B,SAAU,OAAQgb,OAAO,GAA8B,CAACr5D,EAAKq/C,EAAQ6a,KAEhH/4D,EADGnB,EACK,CAAEy7D,SAAS,EAAO54D,MAAO7C,GAEzB,CAAEy7D,SAAS,QAIrB,MAAOz7D,GACR,OAAON,QAAQyB,QAAQ,CAAEs6D,SAAS,EAAO54D,MAAO7C,SAGjD+B,EAAQ25D,KAAK,WAEd,OAAOh8D,QAAQyB,QAAQ,CAAEs6D,SAAS,IA+NzBE,CAAiBnC,EAAcxyD,KAAKmQ,QAAQyY,KAAK1vB,KAAK0pD,IACxDA,EAAS6R,UACZz0D,KAAKwyD,aAAe,MAEd5P,KAEL5pD,IACI,CAAEy7D,SAAS,KAXX/7D,QAAQyB,QAA2B,CAAEs6D,SAAS,IAe/C10D,UACP,OAAO,IAAIrH,QAAiB,CAACC,EAAGG;AAC/B,IAAKkH,KAAKqyD,QAAU1rC,EAASG,UAC5B,OAAOnuB,GAAE,GAEV,MAAMi8D,EAAW3B,EAAGiB,MAAMlC,IAAmB,CAAC,KAAM,OACpD4C,EAAS/6C,GAAG,QAAUhe,GACdlD,GAAE,IAEVi8D,EAAS/6C,GAAG,OAASxf,GACb1B,GAAE,OAIb,OAtOgBs5D,EAAAW,iBAA+C,CAC7DiC,KAAO,EACPC,OAAS,EACTC,QAAU,EACVC,QAAU,EACVC,OAAS,EACTC,MAAQ,EACRC,MAAQ,EACRC,SAAW,EACXC,QAAU,EACVC,MAAQ,EACRC,OAAS,EACTC,SAAW,EACXC,KAAO,EACPC,OAAS,EACTC,KAAO,EACPC,MAAQ,EACRC,KAAO,EACPC,QAAU,GA4Ja7D,EAAAt+B,OAAS,iBAwDlCs+B,GAjPA,GAAsBrzD,EAAAqzD,gBAAAA,EAmPtBrzD,EAAAm3D,YAAA,cAAiC9D,EAOhClyD,YAAmB4pC,EAA2B2B,EAAiB4mB,EAA8BC,GAC5F7tD,MAAWqlC,EAAM2B,EAAW4mB,EAAMC,GAElCnyD,KAAKg2D,kBAAoB,KACzBh2D,KAAKi2D,kBAAoB,KAGhBl2D,WAAWgzD,EAAgCF,EAAgCh3D,EAAcw8C,EAAgB6a,GAClH,CAAC7a,EAAQ6a,GAAQ3zD,QAAQ,CAAC6Z,EAAgB1d,KACzC,MAAMw6D,EAAc,IAAIC,EAAA/e,YACV8e,EAAY9nC,MAAMhV,GAC1B7Z,QAASklC,IACdouB,EAAG,CAAEpuB,KAAMA,EAAM/lB,OAAkB,IAAVhjB,EAAa,EAAgB,MAEvD,MAAM+oC,EAAOyxB,EAAYhpD,MACrBu3B,GACHouB,EAAG,CAAEpuB,KAAMA,EAAM/lB,OAAkB,IAAVhjB,EAAa,EAAgB,MAGxDq3D,EAAG,CAAEQ,WAAYvzD,KAAK0yD,mBAAoB72D,MAAOA,IAGxCkE,YAAYyyD,EAA+BO,EAAgCF,EAAgCG,EAAmBoD,GACvI,MAAMJ,EAAoB,IAAIG,EAAA/e,YACxB6e,EAAoB,IAAIE,EAAA/e,YAC9Bob,EAAana,OAAQx+B,GAAG,OAASxf,IAClB27D,EAAkB5nC,MAAM/zB,GAChCkF,QAAQklC,GAAQouB,EAAG,CAAEpuB,KAAMA,EAAM/lB,OAAM,OAE9C8zC,EAAaU,OAAQr5C,GAAG,OAASxf,IAClB47D,EAAkB7nC,MAAM/zB,GAChCkF,QAAQklC,GAAQouB,EAAG,CAAEpuB,KAAMA,EAAM/lB,OAAM,OAG9C1e,KAAKg2D,kBAAoBA,EACzBh2D,KAAKi2D,kBAAoBA,EAGhBl2D,YAAY1F,EAAW04D,EAAgCF,EAAgCG;AAChG,MAAMqD,EAAar2D,KAAKg2D,kBAAoBh2D,KAAKg2D,kBAAkB9oD,MAAQ,KACvEmpD,GACHxD,EAAG,CAAEpuB,KAAM4xB,EAAY33C,OAAM,IAE9B,MAAM43C,EAAat2D,KAAKi2D,kBAAoBj2D,KAAKi2D,kBAAkB/oD,MAAQ,KACvEopD,GACHzD,EAAG,CAAEpuB,KAAM6xB,EAAY53C,OAAM,MAchC9f,EAAA23D,mBAAA,SAAmC/D,GAClC,IAAIgE,EAAqB,GACrBC,GAAW,EAEf,MAAM5T,EAAO,SAAUp5B,GACtB,GAAIgtC,EAEH,YADAD,EAASr/D,KAAKsyB,GAIA+oC,EAAa3P,KAAKp5B,EAAM5tB,IAQtC,GAPIA,GACH/E,QAAQ+E,MAAMA,GAGf46D,GAAW,EAGPD,EAAShgE,OAAS,EAAG,CACxB,MAAMkgE,EAAeF,EAASt+D,MAAM,GACpCs+D,EAAW,GACXE,EAAan3D,QAAQskC,GAASgf,EAAKhf,SAItBld,EAASG,YACvB2vC,GAAW,IAIb,MAAO,CAAE5T,KAAAA,IAGV,SAAiBp4B,GACMA,EAAAksC,eAAftyC,eAA8B4pB,EAAiBrlB,EAAcuC,GAEnE,GAAI9yB,EAAK4yB,WAAWgjB,GACnB,OAAOA,EAMR,QAJYl0C,IAAR6uB,IACHA,EAAM7tB,QAAQ6tB,OAGH,MADAvwB,EAAK80B,QAAQ8gB,GAIxB,OAAO51C,EAAKwB,KAAK+uB,EAAKqlB,GAMvB,QAJcl0C,IAAVoxB,GAAuBqoC,EAAMt3B,SAASnhC,QAAQC,IAAI47D,QACrDzrC,EAAQpwB,QAAQC,IAAI47D,KAAKzyD,MAAM9L,EAAKw0B,iBAGvB9yB,IAAVoxB,GAAwC,IAAjBA,EAAM30B,OAChC,OAAO6B,EAAKwB,KAAK+uB,EAAKqlB,GAGvB5pB,eAAeloB,EAAW9D,GACzB,cAAUyiD,EAAAC,UAAUziD,EAAGE,OAAbsiD,CAAqBziD,YACdyiD,EAAAC,UAAUziD,EAAGa,KAAb2hD,CAAmBziD,IAAkB,YAOvD,IAAK,IAAIw+D,KAAa1rC,EAAO,CAE5B,IAAI6qB,EAMJ,GAJCA,EADG39C,EAAK4yB,WAAW4rC,GACRx+D,EAAKwB,KAAKg9D,EAAW5oB,GAErB51C,EAAKwB,KAAK+uB,EAAKiuC,EAAW5oB,SAE5B9xC,EAAW65C,GACpB,OAAOA,EAER,IAAI8gB,EAAgB9gB,EAAW,OAC/B,SAAU75C,EAAW26D,GACpB,OAAOA,EAGR,GADAA,EAAgB9gB,EAAW,aACjB75C,EAAW26D,GACpB,OAAOA,EAGT,OAAOz+D,EAAKwB,KAAK+uB,EAAKqlB,IApDxB,CAAiBrvC,EAAA6rB,QAAA7rB,EAAA6rB,MAAK;kLC5ZtB,MAAa8jC,UAAwCjF,EAAAxH,cACpD/hD,YAAYiiD,GACX19C,MAAM,CACLu+C,KAAM74C,IACL,IACKjP,QAAQ8nD,MACX9nD,QAAQ8nD,KAAc74C,EAAEoP,OAAQuB,SAAS,WAEzC,MAAO7hB,MAEVwpD,UAAWrkC,EAAA3G,MAAMmC,qBAAqB1e,QAAS,UAAW0uB,GAAO83B,EAAA1oB,SAAS0B,KAAKjC,OAAO3gC,KAAK8xB,EAAK,aAC9Fu4B,GAEHjnD,QAAQuQ,KAAK,aAAc,IAAMtL,KAAKgV,YAbxCpW,EAAA2vD,OAAAA,EAgEA3vD,EAAAyqD,OAAA,MAWCtpD,YAAoBg3D,EAA4B5mD,GAA5BnQ,KAAA+2D,WAAAA,EAA4B/2D,KAAAmQ,QAAAA,EARxCnQ,KAAAmiD,eAAiB,IAAIhiD,IAGrBH,KAAAkiD,SAAW,IAAIjiD,IAEND,KAAAg3D,kBAAoB,IAAI/4C,EAAAjG,QAChChY,KAAAi3D,iBAAmBj3D,KAAKg3D,kBAAkBz/C,MAGlD,MAAM4H,EAAUhP,GAAWA,EAAQgP,QAAUhP,EAAQgP,QAAU,IAC/Dnf,KAAKk3D,eAAiB,IAAIjrB,EAAAhsB,QAAcd,GACxCnf,KAAKpG,MAAQ,KACboG,KAAKm3D,QAAU,KAGhBp3D,WAA+B0iD,GAC9B,MAAMwB,EAAOjkD,KAEb,MAAO,CACNb,KAAI,CAAI8uC,EAAiBtkC,EAAWu6C,IAC5BD,EAAKE,eAAkB1B,EAAaxU,EAAStkC,EAAKu6C,GAE1DX,OAAM,CAAChsC,EAAe5N,IACds6C,EAAKG,aAAa3B,EAAalrC,EAAO5N,IAKtC5J,eAAkB0iD,EAAqBvrD,EAAcyS,EAAWu6C,EAAoBvlC,EAAAf,kBAAkBhJ,MAC/G,IAAK5U,KAAKk3D,eACT,OAAOx+D,QAAQ0B,OAAO,IAAI4E,MAAM;CAGjC,GAAIklD,EAAkBh8C,wBACrB,OAAOxP,QAAQ0B,OAAO4Y,EAAOpP,YAG9B5D,KAAKk3D,eAAe34C,SAEpB,MAAMmkC,EAAU1iD,KAAKo3D,iBAAiB3U,GAChCpsD,EAAS41C,EAAAxtB,wBAAwB1W,GAAS26C,EAAQvjD,KAAQjI,EAAMyS,EAAK5B,IACrEy8C,EAA4BN,EAAkBlmC,wBAAwB,IAAM3nB,EAAOkoB,UAEnF2hC,EAAarnC,EAAAxD,aAAa,IAAMhf,EAAOkoB,UAY7C,OAXAve,KAAKmiD,eAAe9hD,IAAI6/C,GAExB7pD,EAAOyoB,QAAQ,KACd0lC,EAA0BxvC,UAC1BhV,KAAKmiD,eAAe7hD,OAAO4/C,GAEM,IAA7BlgD,KAAKmiD,eAAe/iD,MAAcY,KAAKk3D,gBAC1Cl3D,KAAKk3D,eAAev2C,QAAQ,IAAM3gB,KAAKq3D,mBAIlChhE,EAGE0J,aAAgB0iD,EAAqBvrD,EAAcyS,GAC5D,IAAK3J,KAAKk3D,eACT,OAAOj5C,EAAA3G,MAAM1C,KAKd,IAAI7R,EAFJ/C,KAAKk3D,eAAe34C,SAGpB,MAAMxG,EAAU,IAAIkG,EAAAjG,QAAa,CAChC4B,mBAAoB,KACnB,MACMrC,EADUvX,KAAKo3D,iBAAiB3U,GACNc,OAAOrsD,EAAMyS,GAE7C5G,EAAWwU,EAAMQ,EAAQE,KAAMF,GAC/B/X,KAAKmiD,eAAe9hD,IAAI0C,IAEzB+W,qBAAsB,KACrB9Z,KAAKmiD,eAAe7hD,OAAOyC,GAC3BA,EAASiS,UAEwB,IAA7BhV,KAAKmiD,eAAe/iD,MAAcY,KAAKk3D,gBAC1Cl3D,KAAKk3D,eAAev2C,QAAQ,IAAM3gB,KAAKq3D,oBAK1C,OAAOt/C,EAAQR,MAGhB+/C,aACC,IAAKt3D,KAAKm3D,QAAS,CAClB,MAAMj2D,EAAOlB,KAAKmQ,SAAWnQ,KAAKmQ,QAAQjP,KAAOlB,KAAKmQ,QAAQjP,KAAO,GAC/Dq2D,EAAwB15D,OAAOK,OAAO;CAE5Cq5D,EAASv8D,IAAMw8D,EAAA76C,OAAO66C,EAAAr5B,UAAUpjC,QAAQC,KAAM,CAAEy8D,kBAAqBrzD,OAAOrJ,QAAQq5D,OAEhFp0D,KAAKmQ,SAAWnQ,KAAKmQ,QAAQnV,MAChCu8D,EAASv8D,IAAMw8D,EAAA76C,OAAO46C,EAASv8D,IAAKgF,KAAKmQ,QAAQnV,MAG9CgF,KAAKmQ,SAAWnQ,KAAKmQ,QAAQunD,gBAChCH,EAASI,SAAW,IAGjB33D,KAAKmQ,SAAyC,iBAAvBnQ,KAAKmQ,QAAQynD,QACvCL,EAASI,SAAW,CAAC,WAAY,aAAe33D,KAAKmQ,QAAQynD,QAG1D53D,KAAKmQ,SAA4C,iBAA1BnQ,KAAKmQ,QAAQ0nD,WACvCN,EAASI,SAAW,CAAC,WAAY,iBAAmB33D,KAAKmQ,QAAQ0nD,WAGlE73D,KAAKpG,MAAQw+C,EAAA0f,KAAK93D,KAAK+2D,WAAY71D,EAAMq2D,GAEzC,MAAMQ,EAAmB,IAAI95C,EAAAjG,QACRiG,EAAA3G,MAAMmC,qBAAqBzZ,KAAKpG,MAAO,UAAW6vB,GAAOA,EAE9E84B,CAAa94B,IAGRuuC,EAAA5zB,mBAAmB3a,GACtBuuC,EAAAjjD,IAAI0U,EAAK,gBAAgBzpB,KAAKmQ,QAAQ8nD,cAKvCF,EAAiB9/C,KAAKspC,EAAA1oB,SAAS0B,KAAKjC,OAAO3gC,KAAK8xB,EAAK,cAGtD,MAAMyuC,EAASl4D,KAAKmQ,QAAQsmD,SAAW0B,EAAA5B,mBAAmBv2D,KAAKpG,OAASoG,KAAKpG,MAGvEmoD,EAAW,CAAEc,KAFL74C,GAAgBhK,KAAKpG,OAASoG,KAAKpG,MAAMw+D,WAAaF,EAAOrV,KAAc74C,EAAEoP,OAAQuB,SAAS,WAEnF2nC,UADPyV,EAAiBxgD,OAGnCvX,KAAKm3D,QAAU,IAAI7N,EAAA5F,cAAU3B,GAE7B,MAAMsW,EAAS,IAAMr4D,KAAKq3D,gBAC1Bt8D,QAAQuQ,KAAK,OAAQ+sD;AAErBr4D,KAAKpG,MAAMigB,GAAG,QAAS7gB,GAAOlC,QAAQkK,KAAK,QAAUhB,KAAKmQ,QAAQ8nD,WAAa,kBAAoBj/D,IAEnGgH,KAAKpG,MAAMigB,GAAG,OAAQ,CAAC5f,EAAW6e,KACjC/d,QAAQgf,eAAe,OAAoBs+C,GAE3Cr4D,KAAKmiD,eAAe5iD,QAAQyK,GAAK6O,EAAA7D,QAAQhL,IACzChK,KAAKmiD,eAAe3gD,QAEP,IAATvH,GAAyB,YAAX6e,GACjBhiB,QAAQkK,KAAK,QAAUhB,KAAKmQ,QAAQ8nD,WAAa,4BAA8Bh+D,EAAO,eAAiB6e,GAGpG9Y,KAAKk3D,gBACRl3D,KAAKk3D,eAAe34C,SAErBve,KAAKq3D,gBACLr3D,KAAKg3D,kBAAkB/+C,KAAK,CAAEhe,KAAAA,EAAM6e,OAAAA,MAItC,OAAO9Y,KAAKm3D,QAGLp3D,iBAAiB7I,GACxB,IAAIwrD,EAAU1iD,KAAKkiD,SAAShiD,IAAIhJ,GAOhC,OALKwrD,IACJA,EAAU1iD,KAAKs3D,OAAOxR,WAAW5uD,GACjC8I,KAAKkiD,SAAS9hD,IAAIlJ,EAAMwrD,IAGlBA,EAGA3iD,gBACHC,KAAKm3D,UACJn3D,KAAKpG,QACRoG,KAAKpG,MAAM86D,OACX10D,KAAKpG,MAAQ,MAEdoG,KAAKm3D,QAAU,KACfn3D,KAAKkiD,SAAS1gD,SAIhBzB,UACCC,KAAKg3D,kBAAkBhiD,UACnBhV,KAAKk3D,iBACRl3D,KAAKk3D,eAAe34C,SACpBve,KAAKk3D,oBAAiBn9D,GAEvBiG,KAAKq3D,gBACLr3D,KAAKmiD,eAAe3gD,arDtRtB2jB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,mBAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D;AAAA,OAAA60D,EAAAhxD,OAAA,8BAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,yDAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,6DAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,kEAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,+DAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,mDAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,uCAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,iCAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,8BAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D;AAAA,OAAA60D,EAAAhxD,OAAA,gDAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,qCAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,gDAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,6BAAA7D,MAAA8qB,OAAAjvB,EAAA,KAAAC,EAAA,CAAA,EAAA,KAAA,SAAA+4D,EAAA70D,GAAA,OAAA60D,EAAAhxD,OAAA,wDAAA7D,gMsDYA,IAAAi+D,EAAA,MAAA,MAAaA,EAAbv4D,cAIkBC,KAAAu4D,gBAAkB,IAAIt6C,EAAAjG,QACtBhY,KAAAw4D,iBAAmB,IAAIv6C,EAAAjG,QACvBhY,KAAAy4D,oBAAsB,IAAIx6C,EAAAjG,QAC1BhY,KAAA04D,gBAAkB,IAAIz6C,EAAAjG,QACtBhY,KAAA24D,iBAAmB,IAAI16C,EAAAjG,QAExCjY,KAAKiiD,EAAe/T,EAAiBtkC,GACpC,OAAQskC,GACP,IAAK,QACJ,OAAOv1C,QAAQyB,QAAQ6F,KAAKu4D,gBAAgBtgD,KAAK,CAAE2gD,UAAWjvD,EAAI,MACnE,IAAK;AACJ,OAAOjR,QAAQyB,QAAQ6F,KAAKw4D,iBAAiBvgD,KAAK,CAAE2gD,UAAWjvD,EAAI,MACpE,IAAK,YACJ,OAAOjR,QAAQyB,QAAQ6F,KAAKy4D,oBAAoBxgD,KAAK,CAAE2gD,UAAWjvD,EAAI,MACvE,IAAK,MACJ,OAAOjR,QAAQyB,QAAQ6F,KAAK04D,gBAAgBzgD,KAAK,CAAE2gD,UAAWjvD,EAAI,GAAIoL,IAAKpL,EAAI,MAChF,IAAK,SACJ,OAAOjR,QAAQyB,QAAQ6F,KAAK24D,iBAAiB1gD,KAAK,CAAE2gD,UAAWjvD,EAAI,GAAIslC,KAAMtlC,EAAI,GAAIkvD,MAAOlvD,EAAI,MAElG,MAAM,IAAI3K,MAAM,2BAGjBe,OAAOiiD,EAAezqC,EAAe5N,GACpC,OAAQ4N,GACP,IAAK,QACJ,OAAOvX,KAAKu4D,gBAAgBhhD,MAC7B,IAAK,SACJ,OAAOvX,KAAKw4D,iBAAiBjhD,MAC9B,IAAK,YACJ,OAAOvX,KAAKy4D,oBAAoBlhD,MACjC,IAAK,MACJ,OAAOvX,KAAK04D,gBAAgBnhD,MAC7B,IAAK,SACJ,OAAOvX,KAAK24D,iBAAiBphD,MAE/B,MAAM,IAAIvY,MAAM,4BAElB,OAvCiBs5D,EAAAQ,YAAc,4BAuC/BR,GAzCA,GAAa15D,EAAA05D,mCAAAA,EA2Cb,MAAaS,UAAwClgD,EAAAlE,WAIpD5U,YAAoB2iD,GACnBp+C,QADmBtE,KAAA0iD,QAAAA,EAIpB3iD,OAAO64D,GACN54D,KAAK0iD,QAAQvjD,KAAK,SAAU,CAACy5D,IAG9BI,eACC,OAAOh5D,KAAK0iD,QAAQa,OAAO,UAG5BxjD,MAAM64D,GACL54D,KAAK0iD,QAAQvjD,KAAK,QAAS,CAACy5D,IAG7B1P;AACC,OAAOlpD,KAAK0iD,QAAQa,OAAO,SAG5BxjD,cAAc64D,EAAmB3pB,EAAc4pB,GAC9C74D,KAAK0iD,QAAQvjD,KAAK,SAAU,CAACy5D,EAAW3pB,EAAM4pB,IAG/CI,sBACC,OAAOj5D,KAAK0iD,QAAQa,OAAO,UAG5BxjD,aAAa64D,EAAmB7jD,GAC/B/U,KAAK0iD,QAAQvjD,KAAK,MAAO,CAACy5D,EAAW7jD,IAGtCmkD,qBACC,OAAOl5D,KAAK0iD,QAAQa,OAAO,OAG5BxjD,iBAAiB64D,EAAmBC,GACnC74D,KAAK0iD,QAAQvjD,KAAK,YAAa,CAACy5D,EAAWC,IAG5CM,yBACC,OAAOn5D,KAAK0iD,QAAQa,OAAO,aAG5BxjD,mCAAmCmB,EAAgBlG,GAClD,OAAOgF,KAAK0iD,QAAQvjD,KAAK,qCAAsC,CAAC+B,EAAMlG,KAjDxE4D,EAAAm6D,gCAAAA,0EC1CA,SAASK,EAAqBx4B,EAAoBvR,GACjD,OAAOqU,EAAA9D,IAAIyN,OAAOhe,EAAcA,EAAY+mB,kBAAkBxV,GAAOA,GAOtE,SAASy4B,EAA2BC,EAA4BjqC,GAC/DA,EAAcA,GAA4BkqC,EAAAhjB,sBAC1C,MAAMijB,EAAWF,EAAUE,SACrBC,EAAcF,EAAA3iB,+BAA8B/4C,OAAA8e,OAAA9e,OAAA8e,OAAA,GAAM28C,GAAc,CAAEE,cAAUz/D,IAAes1B,GACjG,OAAAxxB,OAAA8e,OAAA9e,OAAA8e,OAAA,GAAY88C,GAAgB,CAAED,SAAAA,IAG/B,SAASE,EAA2BJ,EAA4BjqC,GAC/D,OAAOA,EAAcmoC,EAAAh5B,eAAe86B,EAAWx6D,GAASA,aAAiB4kC,EAAA9D,IAAMvQ,EAAYsqC,qBAAqB76D,QAAS/E,GAAau/D;uEAGvI16D,EAAAg7D,2BAAA,MAOC75D,YAAoBusD,EAA8CuN,GAA9C75D,KAAAssD,QAAAA,EAA8CtsD,KAAA65D,kBAAAA,EACjE75D,KAAK85D,mBAAqB77C,EAAA3G,MAAM8B,OAAOkzC,EAAQwN,oBAAoB,GACnE95D,KAAK+5D,sBAAwB97C,EAAA3G,MAAM8B,OAAOkzC,EAAQyN,uBAAuB,GACzE/5D,KAAKg6D,qBAAuB/7C,EAAA3G,MAAM8B,OAAOkzC,EAAQ0N,sBAAsB,GACvEh6D,KAAKi6D,wBAA0Bh8C,EAAA3G,MAAM8B,OAAOkzC,EAAQ2N,yBAAyB,GAG9El6D,OAAO4d,EAAcpG,GACpB,MAAM2iD,EAAiBl6D,KAAK65D,kBAAkBl8C,GAC9C,OAAQpG,GACP,IAAK,qBAAsB,OAAOvX,KAAK85D,mBACvC,IAAK,wBAAyB,OAAO77C,EAAA3G,MAAM3d,IAAIqG,KAAK+5D,sBAAuBzjE,GAAKuH,OAAA8e,OAAA9e,OAAA8e,OAAA,GAAMrmB,GAAC,CAAE6jE,MAAO7jE,EAAE6jE,MAAQT,EAA2BpjE,EAAE6jE,MAAOD,GAAkB5jE,EAAE6jE,SAClK,IAAK,uBAAwB,OAAOn6D,KAAKg6D,qBACzC,IAAK,0BAA2B,OAAOh6D,KAAKi6D,wBAG7C,MAAM,IAAIj7D,MAAM,kBAGjBe,KAAK4d,EAAcswB,EAAiB/sC,GACnC,MAAMg5D,EAAyCl6D,KAAK65D,kBAAkBl8C,GACtE,OAAQswB,GACP,IAAK,MAAO,OAAOjuC,KAAKssD,QAAQ8N,IAAIf,EAA2Bn4D,EAAK,GAAIg5D,IAAiBhhE,KAAK0nC,IA5CjG,SAA8BA,EAAUvR,GACvC,OAAOA,EAAcA,EAAYsqC,qBAAqB/4B,GAAOA;EA2C0C+4B,CAAqB/4B,EAAKs5B,IAC/H,IAAK,QAAS,OAAOl6D,KAAKssD,QAAQ+N,MAAMjB,EAAqBl4D,EAAK,GAAIg5D,GAAiBh5D,EAAK,IAC5F,IAAK,UAAW,OAAOlB,KAAKssD,QAAQgO,QAAQlB,EAAqBl4D,EAAK,GAAIg5D,IAC1E,IAAK,cAAe,OAAOl6D,KAAKssD,QAAQiO,YAAYnB,EAAqBl4D,EAAK,GAAIg5D,IAClF,IAAK,qBAAsB,OAAOl6D,KAAKssD,QAAQkO,mBAAmBt5D,EAAK,IACvE,IAAK,YAAa,OAAOlB,KAAKssD,QAAQmO,UAAUpB,EAA2Bn4D,EAAK,GAAIg5D,GAAiBh5D,EAAK,IAC1G,IAAK,uBAAwB,OAAOlB,KAAKssD,QAAQoO,qBAAqBrB,EAA2Bn4D,EAAK,GAAIg5D,IAC1G,IAAK,eAAgB,OAAOl6D,KAAKssD,QAAQqO,aAAaz5D,EAAK,IAAIhI,KAAK0hE,GAAcA,EAAWjhE,IAAIb,GAAK4gE,EAA2B5gE,EAAGohE,KACpI,IAAK,iBAAkB,OAAOl6D,KAAKssD,QAAQuO,eAAexB,EAA2Bn4D,EAAK,GAAIg5D,GAAiBh5D,EAAK,IAAIhI,KAAKJ,GAAK4gE,EAA2B5gE,EAAGohE,IAChK,IAAK,sBAAuB,OAAOl6D,KAAKssD,QAAQwO,sBAGjD,MAAM,IAAI97D,MAAM,kBAIlBJ,EAAAm8D,iCAAA,MAICh7D,YACkB2iD,GAAA1iD,KAAA0iD,QAAAA,EAGlBoX,yBAAyD,OAAO95D,KAAK0iD,QAAQa,OAAO,sBACpFwW,4BAA+D,OAAO97C,EAAA3G,MAAM3d,IAAIqG,KAAK0iD,QAAQa,OAAiC,yBAA0BjtD,GAAKuH,OAAA8e,OAAA9e,OAAA8e,OAAA,GAAMrmB,GAAC,CAAE6jE,MAAO7jE,EAAE6jE,MAAQd,EAA2B/iE,EAAE6jE,MAAO,MAAQ7jE,EAAE6jE,SACrOH;AAA0D,OAAOh6D,KAAK0iD,QAAQa,OAAO,wBACrF0W,8BAAmE,OAAOj6D,KAAK0iD,QAAQa,OAAO,2BAE9FxjD,IAAIu5D,GACH,OAAO5gE,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAK,MAAO,CAACm6D,IAAYpgE,KAAK7C,GAAUqtC,EAAA9D,IAAIyN,OAAsBh3C,KAGvG0J,MAAMi7D,EAAkBxoD,GACvB,OAAO9Z,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAK,QAAS,CAAC67D,EAAaxoD,KAGjEzS,QAAQk7D,GACP,OAAOviE,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAsB,UAAW,CAAC87D,KAAQ/hE,KAAKihE,GAASd,EAA2Bc,EAAO,OAG/Hp6D,YAAYk7D,GACX,OAAOviE,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAyB,cAAe,CAAC87D,KAG9El7D,mBAAmBu5D,GAClB,OAAO5gE,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAsB,qBAAsB,CAACm6D,KAAapgE,KAAKihE,GAASd,EAA2Bc,EAAO,OAG/Ip6D,UAAUu5D,EAA4B4B,GAAQ,GAC7C,OAAOxiE,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAK,YAAa,CAACm6D,EAAY4B,KAGpEn7D,qBAAqBu5D,GACpB,OAAO5gE,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAK,uBAAwB,CAACm6D,KAGnEv5D,aAAayS,EAA6B,MACzC,OAAO9Z,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAwB,eAAgB,CAACqT,KAC3EtZ,KAAK0hE,GAAcA,EAAWjhE,IAAI2/D,GAAaD,EAA2BC,EAAW,QAGxFv5D,eAAeo6D,EAAwB18D,GACtC,OAAO/E,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAsB,iBAAkB,CAACg7D,EAAO18D,KAClFvE,KAAKogE,GAAaD,EAA2BC,EAAW,OAG3Dv5D;AACC,OAAOrH,QAAQyB,QAAQ6F,KAAK0iD,QAAQvjD,KAAK,gKCzH3C,MAAMg8D,EAAW,mBAMjBv8D,EAAAw8D,iBAAA,SAAiC5B,EAA8Bt9D,GAe9D,OAAOs7D,EAAAh5B,eAAeg7B,EAdL16D,IAChB,GAAqB,iBAAVA,EACV,OAGD,MAAMwzB,EAAQ6oC,EAASvnC,KAAK90B,GAE5B,OAAKwzB,EAIEp2B,EAAao2B,EAAM,KAAOxzB,OAJjC,8KCLF,MAAau8D,UAA4BxiD,EAAAlE,WAIxC5U,YACSu7D,EACAC,GAERj3D,QAHQtE,KAAAs7D,mBAAAA,EACAt7D,KAAAu7D,WAAAA,EAJDv7D,KAAAw7D,iBAAkC,IAAIvvB,EAAAtqB,QAAQ,GAStD5hB,oBAAoBu5D,GACnB,MAAMmC,EAASz7D,KAAK07D,YAAYpC,EAAW,aAO3C,OANImC,IACHz7D,KAAKu7D,WAAWI,KAAKrC,EAAUsC,WAAWjiD,GAAI2/C,EAAUE,SAASqC,QAAS;MACpE77D,KAAKw7D,iBAAiB17C,MAAM,IACjC9f,KAAK87D,iBAAiBL,EAAOA,OAAQ,YAAaA,EAAOv6D,MAAM,EAAMo4D,GACnEpgE,KAAK,IAAM8G,KAAKu7D,WAAWI,KAAKrC,EAAUsC,WAAWjiD,GAAI2/C,EAAUE,SAASqC,QAAS,0CAA2C7iE,GAAOgH,KAAKu7D,WAAW1/D,MAAMy9D,EAAUsC,WAAWjiD,GAAI2/C,EAAUE,SAASqC,QAAS,wCAAwC7iE,QAEvPqmD,EAAAzmD,OAAOoH,KAAK+7D,wBAAwBzC,IAAYpgE,UAAKa,EAAWjB,GAAKkH,KAAKu7D,WAAW1/D,MAAM,8CAA+C/C,IAG1IiH,YAAYu5D,EAA4B9mD,GAC/C,MAAMwpD,EAAY,UAAUxpD,IAC5B,GAAI8mD,EAAUzgE,SAASonC,SAAWkQ,EAAA5C,QAAQ90C,MAAQ6gE,EAAUE,UAAYF,EAAUE,SAAkB,SAAyD,iBAA7CF,EAAUE,SAAkB,QAAEwC,GAAyB,CACtK,MAAMP,EAAkBnC,EAAUE,SAAkB,QAAEwC,GAAY73D,MAAM,KACxE,OAAIs3D,EAAOjlE,OAAS,GAAmB,SAAdilE,EAAO,KAAkBA,EAAO,IACxDz7D,KAAKu7D,WAAWv6D,KAAKs4D,EAAUsC,WAAWjiD,GAAI2/C,EAAUE,SAASqC,QAAS,GAAGG,6BACtE,MAED,CAAEP,OAAQ9gC,EAAA9gC,KAAKy/D,EAAUzgE,SAASwnC,OAAQo7B,EAAO,IAAKv6D,KAAMu6D,EAAOvjE,MAAM,IAAM,IAEvF,OAAO,KAGA6H,iBAAiBk8D,EAAuBC,EAAuBh7D,EAAgBie,EAAkBm6C,GACxG,OAAO,IAAI5gE,QAAc,CAACC,EAAGG,KAE5B,MAAMqjE,EAA4Bn8D,KAAK6F,MAAMo2D,EAAeC,EAAeh7D,EAAMo4D,GACjF,IAAIr2C,EAEJ,MAAMm5C,EAAUvgE,IACXonB,IACH9gB,aAAa8gB,GACbA,EAAiB,MAEdpnB,EACH/C,EAAE+C,GAEFlD,OAAEoB,IAKJoiE,EAA0BtiD,GAAG,QAAU7gB;AACtCojE,EAAOC,EAAAtL,eAAe/3D,IAAQ,aAI/BmjE,EAA0BtiD,GAAG,OAAQ,CAAC5f,EAAc6e,KACnDsjD,EAAOniE,EAAO,QAAQiiE,8BAA0CjiE,SAASF,KAGtEolB,IAEH8D,EAAiB7gB,WAAW,KAC3B6gB,EAAiB,KACjBk5C,EAA0BzH,OAC1B57D,EAAE,cACA,QAKEiH,MAAMu8D,EAAuBJ,EAAuBh7D,EAAgBo4D,GAC3E,MAAMiD,EAAO,CACZC,QAAQ,EACR7E,cAAU59D,GAEL0iE,EAA4BrkB,EAAA0f,KAAKwE,EAAe,CAAC,yBAAyBJ,OAAoBh7D,GAAOq7D,GAI3GE,EAA0BpkB,OAAQqkB,YAAY,QAC9CD,EAA0BvJ,OAAQwJ,YAAY,QAE9C,MAAMC,EAAW1+C,EAAA3G,MAAMmC,qBAA6BgjD,EAA0BpkB,OAAS,QACjFukB,EAAW3+C,EAAA3G,MAAMmC,qBAA6BgjD,EAA0BvJ,OAAS,QAGvFyJ,EAAStiE,GAAQ2F,KAAKu7D,WAAWI,KAAKrC,EAAUsC,WAAWjiD,GAAI2/C,EAAUE,SAASqC,QAAS,QAAQK,IAAiB7hE,IACpHuiE,EAASviE,GAAQ2F,KAAKu7D,WAAW1/D,MAAMy9D,EAAUsC,WAAWjiD,GAAI2/C,EAAUE,SAASqC,QAAS,QAAQK,IAAiB7hE,IAErH,MAAMwiE,EAAW5+C,EAAA3G,MAAMyB,IACtBkF,EAAA3G,MAAM3d,IAAIgjE,EAAU30D,IAAK,CAAG3N,KAAM,KAAK2N,IAAK2kB,OAAQ,CAAC,OACrD1O,EAAA3G,MAAM3d,IAAIijE,EAAU50D,IAAK,CAAG3N,KAAM,KAAK2N,IAAK2kB,OAAQ,CAAC,kBAgBtD,OAb0B1O,EAAA3G,MAAMzV,SAAiBg7D,EAAU,CAAC7yD,EAAGhC,IACvDgC,EACJ,CAAE3P,KAAM2P,EAAE3P,KAAO2N,EAAE3N,KAAMsyB,OAAQ,IAAI3iB,EAAE2iB,UAAW3kB,EAAE2kB,SACpD,CAAEtyB,KAAM2N,EAAE3N,KAAMsyB,OAAQ3kB,EAAE2kB,QAC3B,IAGHmwC,CAAkBziE,IACjBvD,QAAQy7B,MAAM+mC,EAAUsC,WAAWjiD,IACnC7iB,QAAQie,IAAI1a,EAAKA,QAASA,EAAKsyB,QAC/B71B,QAAQimE,aAGFN,EAGA18D,wBAAwBu5D;AAC/B,OAAO3+B,EAAA9gC,KAAKmG,KAAKs7D,mBAAmB0B,kBAAmB1D,EAAUsC,WAAWjiD,GAAGmR,gBAnHjFlsB,EAAAy8D,oBAAAA,uPCYA,MAAM4B,EAAiB,mDAEvB,SAAgBC,EAAkBrB,GAEjC,MAAoB,OADpBA,EAAUA,EAAQrsC,SACSytC,EAAe10C,KAAKszC,GAGhD,SAAgBsB,EAAatB,GAC5B,IAAKqB,EAAkBrB,GACtB,OAAO,KAKR,GAAgB,OAFhBA,EAAUA,EAAQrsC,QAGjB,MAAO,CACN4tC,UAAU,EACVC,kBAAkB,EAClBC,UAAW,EACXC,gBAAgB,EAChBC,UAAW,EACXC,gBAAgB,EAChBC,UAAW,EACXC,gBAAgB,EAChBC,WAAY,MAId,IAAIr3D,EAAIs1D,EAAQvpC,MAAM2qC,GACtB,OAAK12D,EAGE,CACN62D,SAAmB,MAAT72D,EAAE,GACZ82D,iBAA2B,OAAT92D,EAAE,GACpB+2D,UAAoB,MAAT/2D,EAAE,GAAa,EAAIisB,SAASjsB,EAAE,GAAI,IAC7Cg3D,eAA0B,MAATh3D,EAAE,GACnBi3D,UAAoB,MAATj3D,EAAE,GAAa,EAAIisB,SAASjsB,EAAE,GAAI,IAC7Ck3D,eAA0B,MAATl3D,EAAE,GACnBm3D,UAAoB,MAATn3D,EAAE,GAAa,EAAIisB,SAASjsB,EAAE,GAAI,IAC7Co3D,eAA0B,MAATp3D,EAAE,GACnBq3D,WAAYr3D,EAAE,IAAM,MAXb,KAeT,SAAgBs3D,EAAiBhC,GAChC,IAAKA,EACJ,OAAO;CAGR,IAAIyB,EAAYzB,EAAQyB,UACvBC,EAAiB1B,EAAQ0B,eACzBC,EAAY3B,EAAQ2B,UACpBC,EAAiB5B,EAAQ4B,eACzBC,EAAY7B,EAAQ6B,UACpBC,EAAiB9B,EAAQ8B,eAW1B,OATI9B,EAAQuB,WACO,IAAdE,EACHK,GAAiB,GAEjBF,GAAiB,EACjBE,GAAiB,IAIZ,CACNL,UAAWA,EACXC,eAAgBA,EAChBC,UAAWA,EACXC,eAAgBA,EAChBC,UAAWA,EACXC,eAAgBA,EAChBG,UAAWjC,EAAQwB,kBAIrB,SAAgBU,EAAeC,EAAuCC,GACrE,IAAIpC,EAOAqC,EAOJ,GAZCrC,EADuB,iBAAbmC,EACAH,EAAiBV,EAAaa,IAE9BA,EAKVE,EAD8B,iBAApBD,EACOJ,EAAiBV,EAAac,IAE9BA,GAGbpC,IAAYqC,EAChB,OAAO,EAGR,IAAIZ,EAAYzB,EAAQyB,UACpBE,EAAY3B,EAAQ2B,UACpBE,EAAY7B,EAAQ6B,UAEpBS,EAAmBD,EAAeZ,UAClCc,EAAmBF,EAAeV,UAClCa,EAAmBH,EAAeR,UAElCH,EAAiBW,EAAeX,eAChCE,EAAiBS,EAAeT,eAChCE,EAAiBO,EAAeP,eAEpC,OAAIO,EAAeJ,UACdR,EAAYa,KAIZb,EAAYa,KAIZX,EAAYY,KAIZZ,EAAYY,IAITV,GAAaW,IAIH,IAAdf,GAAwC,IAArBa,GAA4BZ,GAAmBE,GAAmBE,IACxFQ,EAAmB,EACnBC,EAAmB,EACnBC,EAAmB,EACnBd,GAAiB,EACjBE,GAAiB,EACjBE,GAAiB,KAGdL,EAAYa,KAKZb,EAAYa,GAENZ,IAKNC,EAAYY,KAKZZ,EAAYY,GAENX,IAKNC,EAAYW,OAKZX,EAAYW,KAENV,MA8BX,SAAgBW,EAAeC,EAAwBC,EAA0BC,EAAoB,IAEpG,IAAIP,EAAiBL,EAAiBV,EAAaqB,IACnD,IAAKN,EAEJ,OADAO,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAAiB,KAA+F0O,KACnI,EAMR,GAAiC,IAA7BN,EAAeZ,WAElB,IAAKY,EAAeX,iBAAmBW,EAAeT,eAErD,OADAgB,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAAuB,KAA4M0O,KACtP,OAIR,IAAKN,EAAeX,eAEnB,OADAkB,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAAuB,KAAuM0O,KACjP,EAIT,QAAKT,EAAeQ,EAAgBL,KACnCO,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAAmB,KAAuEyO,EAAgBC,KAC7H,GAhOT5/D,EAAAs+D,kBAAAA,EAKAt+D,EAAAu+D,aAAAA;AAsCAv+D,EAAAi/D,iBAAAA,EAgCAj/D,EAAAm/D,eAAAA,EA2GAn/D,EAAA8/D,wBAAA,SAAwC7C,EAAiB8C,EAA6CF,GAErG,SAAIE,EAAcC,gBAA2C,IAAvBD,EAAcE,OAK7CP,EAAezC,EAAS8C,EAAcG,QAAQrxB,OAAQgxB,IAG9D7/D,EAAAmgE,cAAA,SAA8BC,EAAgBnD,GAE7C,MAAkB,MAAXmD,GAAkBV,EAAezC,EAASmD,IAGlDpgE,EAAA0/D,eAAAA,8RC3Na1/D,EAAAqgE,sBAAwB,mBACxBrgE,EAAAsgE,yBAA2B,OAC3BtgE,EAAAugE,4BAA8B,UAwH3CvgE,EAAAwgE,uBAAA,SAAuCjqD,GACtC,OAAOA,GACc,iBAAVA,GACa,iBAAbA,EAAMwE,MACXxE,EAAM0kC,MAA8B,iBAAf1kC,EAAM0kC,OA+BlC,SAAkBwlB,GACjBA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,GAAA,OAFD,CAAkBzgE,EAAAygE,gBAAAzgE,EAAAygE,cAAa,KA4B/BzgE,EAAA0gE,oBAAA,MAICv/D,YAAYjB,GACXkB,KAAKlB,MAAQA,EACbkB,KAAKu/D,OAASzgE,EAAMgsB,cAGd/qB,cAAcmF,EAAoDgC,GACxE,GAAI,MAAOhC,EACV,OAAO,MAAQgC,EAEhB,GAAI,MAAOA,EACV,OAAO;CAER,GAAiB,iBAANhC,GAA+B,iBAANgC,EAAgB,CAGnD,IAAIs4D,EAAuB,iBAANt6D,EAAiBA,EAAIA,EAAEpG,MACxC2gE,EAAuB,iBAANv4D,EAAiBA,EAAIA,EAAEpI,MAC5C,OAAOo6B,EAAQ3E,iBAAiBirC,EAAQC,GAIzC,OAAQv6D,EAAEq6D,SAAWr4D,EAAEq4D,OAMjBx/D,aAAa4Z,GACnB,MAAkB,iBAAPA,EACHA,EAAGmR,cAEJnR,EAAG4lD,SAaZ3gE,EAAA8gE,wBAAA,SAAwClG,GACvC,SAAOA,EAASmG,cAAenG,EAASmG,YAAYC,gBAAgBpG,EAASmG,YAAYC,cAAcppE,OAAS,kEC1OjH,SAAgBqpE,EAAkB36D,EAAyBgC,GAC1D,OAAIhC,EAAE20C,MAAQ3yC,EAAE2yC,KACR30C,EAAE20C,OAAS3yC,EAAE2yC,KAEjB30C,EAAEyU,KAAOzS,EAAEyS,IAG0B,IAAlCgiB,EAAArH,kBAAkBpvB,EAAEyU,GAAIzS,EAAEyS,iUAPlC/a,EAAAihE,kBAAAA,EAUA,MAAaC,EACZ//D,YACU67D,EACAC,GADA77D,KAAA47D,WAAAA,EACA57D,KAAA67D,QAAAA,EAGV97D,MACC,MAAO,GAAGC,KAAK47D,WAAWjiD,MAAM3Z,KAAK67D,UAGtC97D,OAAOiI;AACN,OAAMA,aAAa83D,IAGZD,EAAkB7/D,KAAK47D,WAAY5zD,EAAE4zD,aAAe57D,KAAK67D,UAAY7zD,EAAE6zD,UAdhFj9D,EAAAkhE,+BAAAA,EAkBAlhE,EAAAmhE,0BAAA,SAA0CpmD,GACzC,OAAOA,EAAGqmD,qBAGXphE,EAAAqhE,sBAAA,SAAsCC,EAAmBhpE,GACxD,MAAO,GAAGgpE,EAAUF,uBAAuB9oE,EAAK8oE,uBAGjDphE,EAAAuhE,iBAAA,SAAoCvF,EAAiBwF,GACpD,MAAMC,EAAqB,GACrBC,EAAahH,IAClB,IAAK,MAAM/mC,KAAS8tC,EACnB,GAAI9tC,EAAMrmB,KAAKpT,GAAK+mE,EAAkBO,EAAuBtnE,GAAIsnE,EAAuB9G,KACvF,OAAO/mC,EAGT,OAAO,MAER,IAAK,MAAM+mC,KAAasB,EAAY,CACnC,MAAMroC,EAAQ+tC,EAAUhH,GACpB/mC,EACHA,EAAMp7B,KAAKmiE,GAEX+G,EAAYlpE,KAAK,CAACmiE,IAGpB,OAAO+G,GAGRzhE,EAAA2hE,+BAAA,SAA+CjH,GAC9C,MAAO,CACN3/C,GAAI2/C,EAAUsC,WAAWjiD,GACzBziB,KAAMoiE,EAAUE,SAAStiE,KACzBspE,UAAW,KACXC,YAAanH,EAAU77D,SAAW67D,EAAU77D,SAASgjE,YAAc,KACnEC,cAAepH,EAAUE,SAAS0G,UAClCS,qBAAsBrH,EAAU77D,SAAW67D,EAAU77D,SAASkjE,qBAAuB,KACrFC,aAActH,EAAUE,SAASqH,uBAAyBvH,EAAUE,SAASqH,sBAAsBrqE,OAAS,IAmB9GoI,EAAAkiE,iCAAA,SAAiDxH,GAChD,OAAAz7D,OAAA8e,OAAA,CACChD,GAAI2/C,EAAUsC,WAAWjiD,GACzBziB,KAAMoiE,EAAUpiE,KAChBspE,UAAWlH,EAAUsC,WAAW/hB,KAChC4mB,YAAanH,EAAUmH,YACvBC,cAAepH,EAAU4G;AACzBS,qBAAsBrH,EAAUqH,qBAChCC,gBAAiBtH,EAAUyH,WAAWH,cAAgBtH,EAAUyH,WAAWH,aAAapqE,OAAS,IAC9F8iE,EAAU0H,gBAIFpiE,EAAAqiE,cAAgB,IAAIC,EAAA5B,oBAAoB,uBAErD1gE,EAAAuiE,0BAAA,SAA0CC,GACzC,MAAM/qE,EAAS,IAAI8J,IAEnB,IAAK,MAAMm5D,KAAa8H,EACnB9H,EAAU+H,WACbhrE,EAAOgK,IAAIi5D,EAAU3/C,GAAGA,IAI1B,OAAOtjB,GAeRuI,EAAA0iE,uBAAA,SAAuCC,EAAiBC,GACvD,MAAMC,EAA8BpmE,KAAKC,MAAMimE,GAC/C,OAAKC,EAIEC,EAAOp5D,OAAOmiB,IAAM,IAAA3V,EAAA6sD,EAAC,OAAiD,KAAxB,QAAzBA,EAAgB,QAAhB7sD,EAAA2V,EAAIm3C,oBAAY,IAAA9sD,OAAA,EAAAA,EAAElT,eAAO,IAAA+/D,OAAA,EAAAA,EAAAviE,KAAA0V,EAAG2sD,MAHhDC,6JC3HT,MAAaG,UAAgC/oD,EAAAlE,WAI5C5U,YACkBu7D,EACjBuG,GAEAv9D,QAHiBtE,KAAAs7D,mBAAAA,EAHVt7D,KAAA8hE,wBAA0BnnC,EAAA9gC,KAAKmG,KAAKs7D,mBAAmB5gE,aAAcwmE,EAAAjC,sBAAuBiC,EAAAhC,0BAOnGl/D,KAAK8nD,UAAU+Z,EAA4B9H,sBAAsBjhE,GAAKkH,KAAK+5D,sBAAsBjhE;AACjGkH,KAAK8nD,UAAU+Z,EAA4B5H,wBAAwBnhE,GAAKkH,KAAK+hE,wBAAwBjpE,KAG9FiH,sBAAsBjH,GACxBA,EAAE+C,OACNmE,KAAKgiE,aAICjiE,wBAAwBjH,GAC1BA,EAAE+C,OACNmE,KAAKgiE,aAIPjiE,aACCkiE,EAAIrpE,OAAOoH,KAAK8hE,wBAAyBG,EAAI/nB,WAAWiF,MAAMjmD,KAAK,OAAW,SA1BhF0F,EAAAgjE,wBAAAA,wJCFAhjE,EAAAsjE,eAAA,MAECniE,YAAoBusD,GAAAtsD,KAAAssD,QAAAA,EAEpBvsD,OAAOoZ,EAAY5B,EAAe5N,GACjC,OAAQ4N,GACP,IAAK,QAAS,OAAOvX,KAAKssD,QAAQjM,MAAM12C,GACxC,IAAK,eAAgB,OAAO3J,KAAKssD,QAAQ6V,aAG1C,MAAM,IAAInjE,MAAM,oBAAoBuY,KAGrCxX,KAAKoZ,EAAY80B,EAAiBtkC,GACjC,OAAQskC,GACP,IAAK,WAAY,OAAOjuC,KAAKssD,QAAQ8V,SAASz4D,GAC9C,IAAK,oBAAqB,OAAO3J,KAAKssD,QAAQ+V,kBAAkB14D,GAChE,IAAK,OAAQ,OAAO3J,KAAKssD,QAAQgW,OAGlC,MAAM,IAAItjE,MAAM,mBAAmBivC,OAIrCrvC,EAAA2jE,qBAAA,MAECxiE,YAAoB2iD,GAAA1iD,KAAA0iD,QAAAA,EAEpB3iD,MAAMoQ,GACL,OAAOnQ,KAAK0iD,QAAQa,OAAO,QAASpzC,GAGrCpQ,kBAAkByiE;AACjB,OAAOxiE,KAAK0iD,QAAQvjD,KAAK,oBAAqBqjE,GAG/CziE,SAAS0iE,GACR,OAAOziE,KAAK0iD,QAAQvjD,KAAK,WAAYsjE,GAGtCN,mBACC,OAAOniE,KAAK0iD,QAAQa,OAAO,gBAG5BxjD,OACC,OAAOC,KAAK0iD,QAAQvjD,KAAK,+JC1C3B,IAAAujE,EAAA,MAAA,MAAaA,UAAoB7pD,EAAAlE,WAQhC5U,YACS4zC,EACAgvB,EACAR,EACAS,GAERt+D,QALQtE,KAAA2zC,QAAAA,EACA3zC,KAAA2iE,iBAAAA,EACA3iE,KAAAmiE,aAAAA,EACAniE,KAAA4iE,eAAAA,EAIR5iE,KAAK6iE,YAAa,EAClB7iE,KAAK8iE,eAAiB,EAEtB9iE,KAAK+iE,gBAGEhjE,gBACP,MAAMu3D,EAASt3D,KAAK8nD,UAAU,IAAIkb,EAAA3Z,OACjCtP,EAAAnW,qBAAqB+T,EAAS,kBAC9B,CACCsgB,WAAY,sBACZ/2D,KAAM,CAAC,yBACPlG,IAAK,CACJioE,eAAgB,iDAChBC,aAAc,OACdC,gBAAiB,WAKpBnjE,KAAK8nD,UAAUwP,EAAOL,iBAAiB,KAGjCj3D,KAAK6iE,aACL7iE,KAAK8iE,gBAAkBJ,EAAYU,cACtCpjE,KAAKnE,MAAM,qDACXmE,KAAK8iE;AACL9iE,KAAK+iE,iBAEL/iE,KAAKnE,MAAM,oGAMd,MAAM6mD,EAAU4G,EAAAjD,mBAAmBiR,EAAOxR,WAAW,YACrD9lD,KAAKssD,QAAU,IAAI+W,EAAAd,qBAAqB7f,GAExC1iD,KAAKssD,QAAQ+V,kBAAkBriE,KAAK4iE,gBAGpC5iE,KAAK8nD,UAAU9nD,KAAKssD,QAAQjM,MADZ,GACDrgD,CAA4BlH,IAAMkH,KAAK6iE,YAAc7iE,KAAK2iE,iBAAiB7pE,KAE1FkH,KAAK8nD,UAAU9nD,KAAKssD,QAAQ6V,aAAa57D,GAAKvG,KAAKmiE,aAAa57D,KAGhEvG,KAAKsjE,WAAWtjE,KAAK2zC,SAGtB5zC,kBAAkB6iE,GACjB5iE,KAAK4iE,eAAiBA,GACjB5iE,KAAK6iE,YAAc7iE,KAAKssD,SAC5BtsD,KAAKssD,QAAQ+V,kBAAkBO,GAIjC7iE,MAAMhB,GACLiB,KAAKmiE,aAAa,CAAE3vD,KAAM,QAASzT,QAAS,yBAAyBA,MAGtEgB,WAAW4zC,GACV3zC,KAAK2zC,QAAUA,EAEX3zC,KAAKssD,SACRtsD,KAAKssD,QAAQ8V,SAASzuB,GAIxB5zC,UACCC,KAAK6iE,YAAa,EAElBv+D,MAAM0Q,WAER,OAvFyB0tD,EAAAU,aAAe,EAuFxCV,GAzFA,GAAa9jE,EAAA8jE,YAAAA,wJCHb9jE,EAAAsjE,eAAA,MAECniE,YAAoBusD,GAAAtsD,KAAAssD,QAAAA;AAEpBvsD,OAAOoZ,EAAY5B,EAAe5N,GACjC,OAAQ4N,GACP,IAAK,QAAS,OAAOvX,KAAKssD,QAAQjM,MAAM12C,GACxC,IAAK,eAAgB,OAAO3J,KAAKssD,QAAQ6V,aAG1C,MAAM,IAAInjE,MAAM,oBAAoBuY,KAGrCxX,KAAKoZ,EAAY80B,EAAiBtkC,GACjC,OAAQskC,GACP,IAAK,WAAY,OAAOjuC,KAAKssD,QAAQ8V,SAASz4D,GAC9C,IAAK,oBAAqB,OAAO3J,KAAKssD,QAAQ+V,kBAAkB14D,GAChE,IAAK,OAAQ,OAAO3J,KAAKssD,QAAQgW,OAGlC,MAAM,IAAItjE,MAAM,mBAAmBivC,OAIrCrvC,EAAA2jE,qBAAA,MAECxiE,YAAoB2iD,GAAA1iD,KAAA0iD,QAAAA,EAEpB3iD,MAAMoQ,GACL,OAAOnQ,KAAK0iD,QAAQa,OAAO,QAASpzC,GAGrCpQ,kBAAkByiE,GACjB,OAAOxiE,KAAK0iD,QAAQvjD,KAAK,oBAAqBqjE,GAG/CL,mBACC,OAAOniE,KAAK0iD,QAAQa,OAAO,gBAG5BxjD,SAAS0iE,GACR,OAAOziE,KAAK0iD,QAAQvjD,KAAK,WAAYsjE,GAGtC1iE,OACC,OAAOC,KAAK0iD,QAAQvjD,KAAK,+JC1C3B,IAAAujE,EAAA,MAAA,MAAaA,UAAoB7pD,EAAAlE,WAOhC5U,YACS4zC,EACAgvB,EACAR,EACAS,EACAW,EAAkC,IAE1Cj/D,QANQtE,KAAA2zC,QAAAA,EACA3zC,KAAA2iE,iBAAAA,EACA3iE,KAAAmiE,aAAAA,EACAniE,KAAA4iE,eAAAA;AACA5iE,KAAAujE,eAAAA,EAIRvjE,KAAK6iE,YAAa,EAClB7iE,KAAK8iE,eAAiB,EAEtB9iE,KAAK+iE,gBAGEhjE,gBACP,MAAMu3D,EAASt3D,KAAK8nD,UAAU,IAAIkb,EAAA3Z,OACjCtP,EAAAnW,qBAAqB+T,EAAS,kBAC9B,CACCsgB,WAAY,0BACZ/2D,KAAM,CAAC,yBACPlG,IAAK,CACJioE,eAAgB,iDAChBC,aAAc,OACdC,gBAAiB,WAKpBnjE,KAAK8nD,UAAUwP,EAAOL,iBAAiB,KAGjCj3D,KAAK6iE,aACL7iE,KAAK8iE,gBAAkBJ,EAAYU,cACtCpjE,KAAKnE,MAAM,qDACXmE,KAAK8iE,iBACL9iE,KAAK+iE,iBAEL/iE,KAAKnE,MAAM,oGAMd,MAAM6mD,EAAU4G,EAAAjD,mBAAmBiR,EAAOxR,WAAW,YACrD9lD,KAAKssD,QAAU,IAAI+W,EAAAd,qBAAqB7f,GAExC1iD,KAAKssD,QAAQ+V,kBAAkBriE,KAAK4iE,gBAEpC5iE,KAAK8nD,UAAU9nD,KAAKssD,QAAQjM,MAAMrgD,KAAKujE,eAAxBvjE,CAAwClH,IAAMkH,KAAK6iE,YAAc7iE,KAAK2iE,iBAAiB7pE,KAEtGkH,KAAK8nD,UAAU9nD,KAAKssD,QAAQ6V,aAAa57D,GAAKvG,KAAKmiE,aAAa57D;AAGhEvG,KAAKssD,QAAQ8V,SAASpiE,KAAK2zC,SAG5B5zC,MAAMhB,GACLiB,KAAKmiE,aAAa,CAAE3vD,KAAM,QAASzT,QAAS,6BAA6BA,MAG1EgB,kBAAkB6iE,GACjB5iE,KAAK4iE,eAAiBA,EAElB5iE,KAAKssD,SACRtsD,KAAKssD,QAAQ+V,kBAAkBO,GAIjC7iE,WAAW4zC,GACV3zC,KAAK2zC,QAAUA,EAEX3zC,KAAKssD,SACRtsD,KAAKssD,QAAQ8V,SAASzuB,GAIxB5zC,UACCC,KAAK6iE,YAAa,EAElBv+D,MAAM0Q,WAER,OAxFyB0tD,EAAAU,aAAe,EAwFxCV,GAzFA,GAAa9jE,EAAA8jE,YAAAA,qKCDb,IAAAc,EAAA,MAAA,MAAaA,EAWZzjE,YACS0jE,EACRC,EACQC,EACAC,EACAhB,GAJA5iE,KAAAyjE,cAAAA,EAEAzjE,KAAA2jE,cAAAA,EACA3jE,KAAA4jE,YAAAA,EACA5jE,KAAA4iE,eAAAA,EAER5iE,KAAK8iE,eAAiB,EAElBp6D,MAAMC,QAAQ+6D,GACjB1jE,KAAK0jE,QAAUA,EAAQ/pE,IAAIrD,GAAKutE,EAAKvoE,MAAMhF,IAE3C0J,KAAK0jE,QAAU,GAIZ1jE,KAAK4iE,gBACR5iE,KAAK+U,IAAI,mBAAmB0uD,KAG7BzjE,KAAK8jE,eAGE/jE,eACP,MAAMmB,EAAO,CAAClB,KAAKyjE,eACfzjE,KAAK4iE,gBACR1hE,EAAK/J,KAAK,YAGX6I,KAAKqY,OAAS46C,EAAGiB,MAAMna,EAAAnW,qBAAqB+T,EAAS,uDAAwDz2C;CAE7G,MAAM80D,EAAoB,IAAI+N,EAAQ3sB,YAGtCp3C,KAAKqY,OAAOggC,OAAQx+B,GAAG,OAASxf,IAG/B,MAAM2pE,EAA+B,GACrChO,EAAkB5nC,MAAM/zB,GAAMkF,QAASklC,IACtC,MAAMw/B,EAAax/B,EAAKtgC,MAAM,KAC9B,GAA0B,IAAtB8/D,EAAWztE,OAAc,CAC5B,MAAM0tE,EAAa1hE,OAAOyhE,EAAW,IAC/BE,EAAeF,EAAW,GAGhC,GAAIC,GAAc,GAAKA,EAAa,EAAG,CAGtC,GAAIlkE,KAAK0jE,SAAW1jE,KAAK0jE,QAAQx3D,KAAKk4D,GAAUA,EAAOD,IAKtD,YAJInkE,KAAK4iE,gBACR5iE,KAAK+U,IAAIovD,IAOXH,EAAU7sE,KAAK,CACdqb,KAAMgxD,EAA+Ba,cAAcH,GACnD7rE,KAAM8rE,SAMPnkE,KAAK+U,IAAIkvD,EAAW,OAMnBD,EAAUxtE,OAAS,GACtBwJ,KAAK2jE,cAAcK,KAKrBhkE,KAAKqY,OAAOwB,GAAG,QAAUhe,GAAiBmE,KAAKiR,QAAQpV,IACvDmE,KAAKqY,OAAO66C,OAAQr5C,GAAG,OAASxf,GAAiB2F,KAAKiR,QAAQ5W,IAG9D2F,KAAKqY,OAAOwB,GAAG,OAAQ,CAAC5f,EAAc6e,IAAmB9Y,KAAKq4D,OAAOp+D,EAAM6e,IAGpE/Y,QAAQlE,GACfmE,KAAKnE,MAAM,kBAAoBA,EAAM8e,YAG9B5a,OAAO9F,EAAc6e,GACxB9Y,KAAKqY,SACRrY,KAAKnE,MAAM,kCAAkC5B,cAAiB6e,MAE1D9Y,KAAK8iE,gBAAkBU,EAA+BJ,cACzDpjE,KAAKnE,MAAM,yBACXmE,KAAK8iE,iBACL9iE,KAAK8jE,gBAEL9jE,KAAKnE,MAAM,yGAKNkE,MAAMhB,GACbiB,KAAK4jE,YAAY,CAAEpxD,KAAM,QAASzT,QAAS,uBAAuBA,MAG3DgB,IAAIhB,GACXiB,KAAK4jE,YAAY,CAAEpxD,KAAM;AAASzT,QAAS,uBAAuBA,MAG5DgB,UACFC,KAAKqY,SACRrY,KAAKqY,OAAOq8C,OACZ10D,KAAKqY,YAASte,IAGjB,OA7HyBypE,EAAAJ,aAAe,EAExBI,EAAAa,cAAkC,CAAA,EAAA,EAAA,GA2HlDb,GA/HA,GAAa5kE,EAAA4kE,+BAAAA,6ICDb5kE,EAAA8jE,YAAA,MAKC3iE,YACC4zC,EACQgvB,EACAR,EACAS,GAFA5iE,KAAA2iE,iBAAAA,EACA3iE,KAAAmiE,aAAAA,EACAniE,KAAA4iE,eAAAA,EAND5iE,KAAAssD,aAAsDvyD,EAQ7DiG,KAAKskE,OAAS3wB,EAAQ,GAEmB,IAArC3zC,KAAKskE,OAAOjsE,KAAKsJ,QAAQ,SAAiB3B,KAAKskE,OAAOjsE,KAAK06B,SAAS4H,EAAA7N,MAAMla,OAK7E5S,KAAKskE,OAAOjsE,KAAOsjC,EAAAxL,MAAMnwB,KAAKskE,OAAOjsE,KAAMsiC,EAAA7N,MAAMla,MAGlD5S,KAAKssD,QAAUtsD,KAAK+iE,gBAGrBF,iBACC,OAAQ7iE,KAAKssD,QAGNvsD,gBACP,OAAO,IAAIwkE,EAAAf,+BACVxjE,KAAKskE,OAAOjsE,KACZ2H,KAAKskE,OAAOE,SACZxrD,GAAUhZ,KAAKykE,aAAazrD,GAC5Bja,GAAWiB,KAAKmiE,aAAapjE,GAC7BiB,KAAK4iE,gBAIP7iE,kBAAkB6iE,GACjB5iE,KAAK4iE,eAAiBA,EAClB5iE,KAAKssD,UACRtsD,KAAKssD,QAAQt3C,UACbhV,KAAKssD,QAAUtsD,KAAK+iE,iBAIdhjE,aAAaiZ;AAChBhZ,KAAK6iE,YAKL7pD,EAAOxiB,OAAS,GACnBwJ,KAAK2iE,iBAAiB3pD,GAIxBjZ,UACKC,KAAKssD,UACRtsD,KAAKssD,QAAQt3C,UACbhV,KAAKssD,aAAUvyD,0JChElB,MAAa2qE,EAMZ3kE,YAAY4kE,EAAiCC,EAAyB,GAAIC,GAAwC,GACjH7kE,KAAK2kE,KAAOA,EACZ3kE,KAAK4kE,gBAAkBA,EACvB5kE,KAAK6kE,6BAA+BA,GATtCjmE,EAAA8lE,eAAAA,EAqEa9lE,EAAAkmE,qBAAuC,CAAIH,KAAcC,IAC9D,IAAIF,EAAkBC,EAAMC,mICvDpChmE,EAAAmmE,MAAA,MAIChlE,YAAoBilE,GAAAhlE,KAAAglE,QAAAA,EAFZhlE,KAAAilE,OAAqCpnE,OAAOK,OAAO,MAM3D6B,QACC,MAAM6sB,EAAiB,GAMvB,OALAs4C,EAAA3lE,QAAQS,KAAKilE,OAAQphC,IAChBlF,EAAAvB,cAAcyG,EAAM/kC,MAAMqmE,WAC7Bv4C,EAAIz1B,KAAK0sC,EAAM/kC,SAGV8tB,EAGR7sB,WAAWpI,EAASC,GACnB,MAAMwtE,EAAWplE,KAAKqlE,mBAAmB1tE,GACxC2tE,EAAStlE,KAAKqlE,mBAAmBztE,GAElCwtE,EAASD,SAASnlE,KAAKglE,QAAQptE,IAAO0tE,EACtCA,EAAOC,SAASvlE,KAAKglE,QAAQrtE,IAASytE,EAGvCrlE,WAAW1F,GACV,MAAMoE,EAAMuB,KAAKglE,QAAQ3qE,UAClB2F,KAAKilE,OAAOxmE,GACnBymE,EAAA3lE,QAAQS,KAAKilE,OAASphC,WACdA,EAAM/kC,MAAMqmE,SAAS1mE;OACrBolC,EAAM/kC,MAAMymE,SAAS9mE,KAI9BsB,mBAAmB1F,GAClB,MAAMoE,EAAMuB,KAAKglE,QAAQ3qE,GACzB,IAAIyV,EAAO9P,KAAKilE,OAAOxmE,GAOvB,OALKqR,IACJA,EAhDH,SAAoBzV,GACnB,MAAO,CACNA,KAAMA,EACNkrE,SAAU1nE,OAAOK,OAAO,MACxBinE,SAAUtnE,OAAOK,OAAO,OA4ChB6Y,CAAQ1c,GACf2F,KAAKilE,OAAOxmE,GAAOqR,GAGbA,EAGR/P,OAAO1F,GACN,OAAO2F,KAAKilE,OAAOjlE,KAAKglE,QAAQ3qE,IAGjC0F,UACC,IAAK,MAAMylE,KAAQxlE,KAAKilE,OACvB,OAAO,EAER,OAAO,EAGRllE,WACC,IAAI1F,EAAiB,GAIrB,OAHA6qE,EAAA3lE,QAAQS,KAAKilE,OAAQphC,IACpBxpC,EAAKlD,KAAK,GAAG0sC,EAAMplC,mBAAmBZ,OAAOC,KAAK+lC,EAAM/kC,MAAMymE,UAAU1rE,KAAK,sBAAsBgE,OAAOC,KAAK+lC,EAAM/kC,MAAMqmE,UAAUtrE,KAAK,WAEpIQ,EAAKR,KAAK,4DC3EnB,IAAiB4rE,EAoHjB,SAASC,EAAuB/rD,EAAc9hB,EAAkB6D,EAAeiqE,GACzE9tE,EAAe4tE,EAAMG,aAAe/tE,EACvCA,EAAe4tE,EAAMI,iBAAiB1uE,KAAK,CAAEwiB,GAAAA,EAAIje,MAAAA,EAAOiqE,SAAAA,KAExD9tE,EAAe4tE,EAAMI,iBAAmB,CAAC,CAAElsD,GAAAA,EAAIje,MAAAA,EAAOiqE,SAAAA,IACtD9tE,EAAe4tE,EAAMG,WAAa/tE,GAOrC,SAAgB2I,EAAmBslE,GAElC,GAAIL,EAAMM,WAAW78D,IAAI48D,GACxB,OAAOL,EAAMM,WAAW7lE,IAAI4lE,GAG7B,MAAMnsD,EAAU,SAAU9hB,EAAkB4G,EAAa/C,GACxD,GAAyB,IAArB+P,UAAUjV,OACb,MAAM,IAAIwI,MAAM,oEAEjB0mE,EAAuB/rD,EAAI9hB,EAAQ6D,GAAO,IAM3C,OAHAie,EAAGgB,SAAW,IAAMmrD,EAEpBL,EAAMM,WAAW3lE,IAAI0lE,EAAWnsD,GACzBA;qHAhJR,SAAiB8rD,GAEHA,EAAAM,WAAa,IAAI9lE,IAEjBwlE,EAAAG,UAAY,aACZH,EAAAI,gBAAkB,mBAEfJ,EAAAO,uBAAhB,SAAuCrB,GACtC,OAAOA,EAAKc,EAAAI,kBAAoB,IARlC,CAAiBJ,EAAA7mE,EAAA6mE,QAAA7mE,EAAA6mE,MAAK,KAyDT7mE,EAAAqnE,sBAAwBzlE,EAAuC,wBAuE5E5B,EAAA4B,gBAAAA,EAsBA5B,EAAA+mE,SAAA,SAA4BO,GAE3B,OAAO,SAAUruE,EAAkB4G,EAAa/C,GAC/C,GAAyB,IAArB+P,UAAUjV,OACb,MAAM,IAAIwI,MAAM,gEAEjB0mE,EAAuBQ,EAAmBruE,EAAQ6D,GAAO,0IC7J9CkD,EAAAunE,iBAAmBC,EAAA5lE,gBAAkC,oKCsFrD5B,EAAAynE,oBAAsBD,EAAA5lE,gBAAqC,sBAW3D5B,EAAA0nE,QAAU;0gBC/FvB,IAAAC,EAAA,MAAA,IAAaA,EAAb,cAAqC1tD,EAAAlE,WAEpC5U,YACuCu7D,GAEtCh3D,QAFsCtE,KAAAs7D,mBAAAA,EAItCt7D,KAAKwmE,qBAGEzmE,qBACP,IAAIsY,EAAqCjW,WAAW,KACnDiW,OAASte,EAET,MAAM0sE,EAAa9rC,EAAAvN,SAASptB,KAAKs7D,mBAAmBoL,UAC9CC,EAAWhsC,EAAAxN,QAAQntB,KAAKs7D,mBAAmBoL,UAEjDrnB,EAAA9lD,QAAQotE,GAAUztE,KAAKO,IACtB,MACMmtE,EADcntE,EAAS4O,OAAOnR,GAAQ,gBAAgBqxB,KAAKrxB,IACjC0Q,OAAOS,OAAO,CAACpL,EAAG3G,IAAM2G,IAAMwpE,GACxDzpE,EAAW4pE,EAAY1uE,MAAM,EAAG2M,KAAKwI,IAAI,EAAGu5D,EAAYpwE,OAAS,IAEvE,OAAOkC,QAAQgB,IAAIsD,EAASrD,IAAIzC,GAAQmoD,EAAAzmD,OAAO+hC,EAAA9gC,KAAK8sE,EAAUzvE,QAC5DgC,KAAK,KAAMiP,EAAA9E,oBACZ;CAEHrD,KAAK8nD,UAAUjvC,EAAAxD,aAAa,KACvBgD,IACHlW,aAAakW,GACbA,OAASte,QAIb,OAjCawsE,EAAeM,EAAA,CAGzBC,EAAA,EAAAC,EAAAV,sBAHUE,IAAb,GAAa3nE,EAAA2nE,gBAAAA,wjBCEA3nE,EAAAooE,6BAA+B,4DAC/BpoE,EAAAqoE,2BAA6B,IAAIxzC,OAAO70B,EAAAooE,8BAyBrDpoE,EAAAwgE,uBAAA,SAAuCjqD,GACtC,OAAOA,GACc,iBAAVA,GACa,iBAAbA,EAAMwE,MACXxE,EAAM0kC,MAA8B,iBAAf1kC,EAAM0kC;AAuDrBj7C,EAAAsoE,4BAA8Bd,EAAA5lE,gBAA6C,8BAC3E5B,EAAAuoE,yBAA2Bf,EAAA5lE,gBAA0C,2BAElF,SAAkB4mE,GACjBA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,eAAA,IAAA,iBARD,CAAkBxoE,EAAAwoE,SAAAxoE,EAAAwoE,OAAM,KAWxB,SAAkBC,GACjBA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aAHD,CAAkBzoE,EAAAyoE,YAAAzoE,EAAAyoE,UAAS,KAgB3B,SAAkBC,GACjBA,EAAA,UAAA,YADD,CAAkB1oE,EAAA0oE,gBAAA1oE,EAAA0oE,cAAa,KAS/B,SAAkBC,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SAHD,CAAkB3oE,EAAA2oE,mBAAA3oE,EAAA2oE,iBAAgB,KA+CrB3oE,EAAA4oE,4BAA8B,eAC9B5oE,EAAA6oE,wBAA0B,YAC1B7oE,EAAA8oE,2BAA6B,eAuB7B9oE,EAAA+oE,iCAAmC;AACnC/oE,EAAAgpE,gCAAkC,gCAClChpE,EAAAipE,kCAAoCzB,EAAA5lE,gBAAmD,qCAYvF5B,EAAAkpE,gBAAkBjY,EAAAC,SAAS,EAAc,MACzClxD,EAAAmpE,oBAAsB,aACtBnpE,EAAAopE,iBAAmBnY,EAAAC,SAAS,EAAe,4FCpBxD,IA0GYmY;qqBApSCrpE,EAAAspE,aAAe9B,EAAA5lE,gBAA8B,eA0L1D,SAAY2nE,GACXA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,aAAA,IAAA,eAJD,CAAYvpE,EAAAupE,WAAAvpE,EAAAupE,SAAQ,KA4BpB,SAAkBC,GACjBA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,eAAA,IAAA;AAEAA,EAAAA,EAAA,eAAA,GAAA,iBAEAA,EAAAA,EAAA,kBAAA,MAAA,oBACAA,EAAAA,EAAA,SAAA,MAAA,WAEAA,EAAAA,EAAA,MAAA,MAAA,QAVD,CAAkBxpE,EAAAwpE,iCAAAxpE,EAAAwpE,+BAA8B,KA+ChDxpE,EAAAypE,uBAAA,SAAuCC,GACtC,SAA+B,EAArBA,EAASC,eAOpB3pE,EAAA4pE,4BAAA,SAA4CF,GAC3C,SAA+B,EAArBA,EAASC,eAUpB3pE,EAAA6pE,gCAAA,SAAgDH,GAC/C,SAA+B,EAArBA,EAASC,eAOpB3pE,EAAA8pE,4BAAA,SAA4CJ,GAC3C,SAA+B,GAArBA,EAASC,eAGpB,SAAYN,GACXA,EAAA,WAAA,cACAA,EAAA,aAAA,gBACAA,EAAA,kBAAA,qBACAA,EAAA,iBAAA,oBACAA,EAAA,uBAAA,0BACAA,EAAA,aAAA,gBACAA,EAAA,cAAA,gBACAA,EAAA,YAAA,cACAA,EAAA,QAAA,UATD,CAAYA,EAAArpE,EAAAqpE,8BAAArpE,EAAAqpE,4BAA2B,KAYvC,MAAaU,UAAgC3pE,MAE5Ce,YAAYhB,EAAiC9E,GAC5CqK,MAAMvF,GADsCiB,KAAA/F,KAAAA,GAK9C,SAAgB2uE,EAA8B/sE,EAAuB5B,GACpE,MAAM4uE,EAAgB,IAAIF,EAAwB9sE,EAAM8e,WAAY1gB,GAGpE,OAFA6uE,EAA8BD,EAAe5uE,GAEtC4uE,EAWR,SAAgBC,EAA8BjtE,EAAc5B;AAG3D,OAFA4B,EAAM3E,KAAO+C,EAAO,GAAGA,sBAA2B,kBAE3C4B,EAGR,SAAgBktE,EAA8BltE,GAG7C,IAAKA,EACJ,OAAOosE,EAA4Be,QAIpC,GAAIntE,aAAiB8sE,EACpB,OAAO9sE,EAAM5B,KAKd,MAAMq4B,EAAQ,6BAA6BsB,KAAK/3B,EAAM3E,MACtD,IAAKo7B,EACJ,OAAO21C,EAA4Be,QAGpC,OAAQ12C,EAAM,IACb,KAAK21C,EAA4BgB,WAAY,OAAOhB,EAA4BgB,WAChF,KAAKhB,EAA4BiB,iBAAkB,OAAOjB,EAA4BiB,iBACtF,KAAKjB,EAA4BkB,kBAAmB,OAAOlB,EAA4BkB,kBACvF,KAAKlB,EAA4BmB,aAAc,OAAOnB,EAA4BmB,aAClF,KAAKnB,EAA4BoB,uBAAwB,OAAOpB,EAA4BoB,uBAC5F,KAAKpB,EAA4BqB,aAAc,OAAOrB,EAA4BqB,aAClF,KAAKrB,EAA4BsB,cAAe,OAAOtB,EAA4BsB,cACnF,KAAKtB,EAA4BuB,YAAa,OAAOvB,EAA4BuB,YAGlF,OAAOvB,EAA4Be,QA1DpCpqE,EAAA+pE,wBAAAA,EAOA/pE,EAAAgqE,8BAAAA,EAOAhqE,EAAA6qE,8BAAA,SAA8C5tE,GAC7C,OAAKA,GACG+sE,EAA8B/Y,EAAAC,SAAS,EAAgB,MAAkBmY,EAA4Be,UAM9GpqE,EAAAkqE,8BAAAA,EAMAlqE,EAAAmqE,8BAAAA,EAiCAnqE,EAAA8qE,sBAAA,SAAsC7tE,GAGrC,GAAIA,aAAiB8tE,EACpB,OAAO9tE,EAAM+tE,oBAId,OAAQb,EAA8BltE,IACrC,KAAKosE,EAA4BmB,aAChC,OAAA,EACD,KAAKnB,EAA4BiB,iBAChC,OAAA,EACD,KAAKjB,EAA4BkB,kBAChC,OAAA;CACD,KAAKlB,EAA4BsB,cAChC,OAAA,EACD,KAAKtB,EAA4BgB,WAChC,OAAA,EACD,KAAKhB,EAA4BoB,uBAChC,OAAA,EACD,KAAKpB,EAA4BqB,aAChC,OAAA,EACD,QACC,OAAA,KAoBH,SAAkBO,GACjBA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OAJD,CAAkBjrE,EAAAirE,gBAAAjrE,EAAAirE,cAAa,KAO/BjrE,EAAAkrE,mBAAA,MAIC/pE,YAA4BwiB,EAA+BwnD,EAA0ClyE,GAAzEmI,KAAAuiB,SAAAA,EAA+BviB,KAAA+pE,UAAAA,EAA0C/pE,KAAAnI,OAAAA,EAIrGkI,YAAYgqE,GACX,OAAO/pE,KAAK+pE,YAAcA,IAO5B,SAAkBC,GACjBA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UAHD,CAAkBprE,EAAAorE,iBAAAprE,EAAAorE,eAAc,KAsBhCprE,EAAAqrE,iBAAA,MAEClqE,YAA4BmqE,GAAAlqE,KAAAkqE,QAAAA,EAO5BnqE,SAASwiB,EAAe/P,GACvB,IAAK+P,EACJ,OAAO,EAGR,MAAM4nD,GAAsBxrC,EAAAtC,kBAAkB7pB,GAE9C,OAAOxS,KAAKkqE,QAAQh+D,KAAKs0B,KACpB2pC,GAAsB3pC,EAAOhuB,OAASA,KAK3B,IAAXguB,EAAOhuB,KACHqhC,EAAAjY,gBAAgBrZ,EAAUie,EAAOje,UAGlCsxB,EAAAtY,QAAQhZ,EAAUie,EAAOje,YAOlCxiB,WACC,OAAOC,KAAKoqE,UAAS,GAMtBrqE,WACC,OAAOC,KAAKqqE,QAAO,GAMpBtqE,aACC,OAAOC,KAAKoqE,UAAS,GAMtBrqE,aACC,OAAOC,KAAKqqE,QAAO,GAMpBtqE,aACC,OAAOC,KAAKoqE,UAAS,GAMtBrqE,aACC,OAAOC,KAAKqqE,QAAO,GAGZtqE,UAAUyS;AACjB,OAAOxS,KAAKkqE,QAAQ7hE,OAAOm4B,GAAUA,EAAOhuB,OAASA,GAG9CzS,QAAQyS,GACf,OAAOxS,KAAKkqE,QAAQh+D,KAAKs0B,GACjBA,EAAOhuB,OAASA,KAK1B5T,EAAA0rE,SAAA,SAAyBjyE,EAAc0vB,EAAmBiM,GACzD,SAAK37B,IAAS0vB,GAAa1vB,IAAS0vB,OAIhCA,EAAUvxB,OAAS6B,EAAK7B,UAIxBuxB,EAAUqL,OAAOrL,EAAUvxB,OAAS,KAAOmkC,EAAA/nB,MAC9CmV,GAAa4S,EAAA/nB,KAGVohB,EACI2H,EAAAnH,qBAAqBn8B,EAAM0vB,GAGA,IAA5B1vB,EAAKsJ,QAAQomB,MA6KrB,MAAa4hD,UAA2B3qE,MACvCe,YAAYhB,EAAwB6qE,EAAiDz5D,GACpF7L,MAAMvF,GAD6BiB,KAAA4pE,oBAAAA,EAAiD5pE,KAAAmQ,QAAAA,EAIrFpQ,4BAA4B0I,GAC3B,OAAOA,aAAezJ,QAAU2/B,EAAAtC,kBAAmB5zB,EAA2BmhE,sBANhFhrE,EAAA+qE,mBAAAA,EAUA,SAAkBY,GACjBA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,wBAAA,GAAA,0BACAA,EAAAA,EAAA,oBAAA,GAAA,sBACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,0BAAA,GAAA,4BACAA,EAAAA,EAAA,mBAAA,IAAA;AACAA,EAAAA,EAAA,iBAAA,IAAA,mBAZD,CAAkB3rE,EAAA2rE,sBAAA3rE,EAAA2rE,oBAAmB,KAexB3rE,EAAA4rE,sBAAwB,CACpCC,IAAK,MACLC,YAAa,aACbC,gBAAiB,gBACjBC,iBAAkB,kBAGNhsE,EAAAisE,qBAAuB,CACnCJ,IAAK,MACLK,QAAS,SACTC,yBAA0B,wBAGdnsE,EAAAosE,0BAA4B,qBAC5BpsE,EAAAqsE,qBAAuB,gBAoBpC,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,YAAA,GAAA,cAHD,CAAYtsE,EAAAssE,WAAAtsE,EAAAssE,SAAQ,KASPtsE,EAAAusE,cAAgB,GAI7BvsE,EAAAwsE,KAAA,SAAqBjyE,GACpB,GAAyB,iBAAdA,EAAKiG,MAA2C,iBAAfjG,EAAKkyE,MAIjD,OAAOlyE,EAAKkyE,MAAM1wD,SAAS,IAAMxhB,EAAKiG,KAAKub,SAAS,KAIrD/b,EAAA0sE,uBAAA,SAAuC7yE,EAAW8yE,GACjD,OAAIA,EAAYC,kBAAkB9nC,EAAA9D,IAAIjoC,KAAK,CAAEsoC,OAAQxnC,EAAKwnC,UAClDvnC,QAAQyB,UAET,IAAIzB,QAAQ,CAACC,EAAGG,KACtB,MAAMonD,EAAaqrB,EAAYE,2CAA2C3yE,IACrEA,EAAEmnC,SAAWxnC,EAAKwnC,QAAUnnC,EAAE4O,QACjCw4C,EAAWlrC,UACXrc,oFCxuBJ,SAAS+yE,EAAiB3jE;AACzB,GAAIA,GAASA,EAAMG,wBAClB,MAAMC,EAAAvE,WAGP,OAAO,EAGR,SAAS+nE,EAAgBC,EAAwBz7D,GAGhD,GAAIA,MAAAA,OAAO,EAAPA,EAAS07D,OAAQ,CACpB,GAAqC,iBAA1B17D,EAAQ07D,OAAOC,QAAuBF,EAAiBz7D,EAAQ07D,OAAOC,OAChF,MAAMC,EAAAnD,8BAA8B/Y,EAAAC,SAAS,EAA4B,MAAqFic,EAAA9D,4BAA4BoB,wBAG3L,GAAmC,iBAAxBl5D,EAAQ07D,OAAOzsE,MAAqBwsE,EAAiBz7D,EAAQ07D,OAAOzsE,KAC9E,MAAM2sE,EAAAnD,8BAA8B/Y,EAAAC,SAAS,EAAqB,MAA8Bic,EAAA9D,4BAA4BqB,cAI9H,OAAO,6EA5FR1qE,EAAAm/C,iBAAA,SAAiCuqB,EAA+D/lD,EAAepS,EAAmCpI,GACjJ,MAAMgnB,EAASwyB,EAAA/mB,2BAIf,IAAI3+B,OAA2B9B,EAI/B,OAGDsqB,eAAoCikD,EAA+D/lD,EAAewM,EAAiC5e,EAAmCpI,GAGrL2jE,EAAiB3jE,GAGjB,MAAMsQ,QAAeiwD,EAAStrB,KAAKz6B,EAAU,CAAErkB,QAAQ,IAGvDwtE,EAAiB3jE,GAEjB,IACC,IAAI6jE,EAAiB,EACjBI,EAAY,EACZC,EAAyB97D,GAAqC,iBAAnBA,EAAQ3Z,OAAuB2Z,EAAQ3Z,YAASuD,EAE3Fqf,EAASmoC,EAAA1oB,SAASO,MAAMv0B,KAAKoD,IAAIkI,EAAQ+7D,WAA6C,iBAA1BD,EAAqCA,EAAwB97D,EAAQ+7D,aAEjIC,EAAYh8D,GAAuC,iBAArBA,EAAQpH,SAAwBoH,EAAQpH,SAAW,EACjFqjE,EAAc,EAClB,GAGCJ,QAAkB1D,EAAS55C,KAAKrW,EAAQ8zD,EAAW/yD,EAAOA,OAAQgzD,EAAahzD,EAAOmc,WAAa62C,GAEnGD,GAAaH,EAEbJ,GAAkBI,EAEmB,iBAA1BC,IACVA,GAAyBD,IAJ1BI,GAAeJ,KAQK5yD,EAAOmc,aAC1BxG,EAAOX,MAAMhV;AAEbA,EAASmoC,EAAA1oB,SAASO,MAAMv0B,KAAKoD,IAAIkI,EAAQ+7D,WAA6C,iBAA1BD,EAAqCA,EAAwB97D,EAAQ+7D,aAEjIE,EAAc,SAEPJ,EAAY,IAAuC,iBAA1BC,GAAsCA,EAAwB,IAAMP,EAAiB3jE,IAAU4jE,EAAgBC,EAAgBz7D,IAGjK,GAAIi8D,EAAc,EAAG,CACpB,IAAIC,EAAkBD,EACe,iBAA1BH,IACVI,EAAkBxnE,KAAKoD,IAAImkE,EAAaH,IAGzCl9C,EAAOX,MAAMhV,EAAOlhB,MAAM,EAAGm0E,KAE7B,MAAOxwE,GACR,MAAMkwE,EAAAtC,8BAA8B5tE,iBAE9BysE,EAASlrB,MAAM/kC,IA5DtBi0D,CAAqBhE,EAAU/lD,EAAUwM,EAAQ5e,EAASpI,GAAO7O,UAAKa,EAAWf,GAAO6C,EAAQ7C,GAAK8lB,QAAQ,IAAMiQ,EAAO7hB,IAAIrR,IAEvHkzB,oKCVRnwB,EAAA2tE,cAAA,SAA8BrC,GAC7B,OAAOA,EAAQvwE,IAAI6mC,IAAU,CAC5BhuB,KAAMguB,EAAOhuB,KACb+P,SAAUmhB,EAAA9D,IAAInnC,KAAK+nC,EAAOnoC,UAI5BuG,EAAA4tE,qBAAA,SAAqCtC,GAGpC,MAAMuC,EAAa,IAAIC,EACvB,IAAK,MAAMn1D,KAAS2yD,EACnBuC,EAAWE,aAAap1D,GAGzB,OAAOk1D,EAAWjhD,aAGnB,MAAMkhD,EAAN3sE,cACSC,KAAAo0C,WAAgC,GAChCp0C,KAAA4sE,gBAAgD,IAAI3sE,IAE5DF,aAAawX,GACZ,MAAMs1D,EAAgB7sE,KAAK4sE,gBAAgB1sE,IAAIqX,EAAMlf,MAGrD,GAAIw0E,EAAe,CAClB,MAAMC,EAAoBD,EAAcr6D,KAClCu6D,EAAgBx1D,EAAM/E,KAGP,IAAjBs6D,GAA2D,IAAbC,GACjD/sE,KAAK4sE,gBAAgBtsE,OAAOiX,EAAMlf,MAClC2H,KAAKo0C,WAAWp8C,OAAOgI,KAAKo0C,WAAWzyC,QAAQkrE,GAAgB,IAItC,IAAjBC,GAA6D,IAAbC,EACxDF,EAAcr6D,KAAI,EAIO,IAAjBs6D,GAA2D,IAAbC,IAItDF,EAAcr6D,KAAOu6D;MAMtB/sE,KAAKo0C,WAAWj9C,KAAKogB,GACrBvX,KAAK4sE,gBAAgBxsE,IAAImX,EAAMlf,KAAMkf,GAIvCxX,YACC,MAAMitE,EAAuC,GACvCC,EAAyB,GAS/B,OAAOjtE,KAAKo0C,WAAW/rC,OAAOvP,GACnB,IAANA,EAAE0Z,OACLw6D,EAAkB71E,KAAK2B,IAEhB,IAIN8O,KAAK,CAACslE,EAAIC,IACLD,EAAG70E,KAAK7B,OAAS22E,EAAG90E,KAAK7B,QAC9B6R,OAAOvP,IACLm0E,EAAa/gE,KAAKjP,GAAK8uE,EAAAzB,SAASxxE,EAAET,KAAM4E,GAAI4rB,EAAA7B,YAKhDimD,EAAa91E,KAAK2B,EAAET,OAEb,IACLoR,OAAOujE,kKC5FZ,MAAatK,UAAoB7pD,EAAAlE,WAMhC5U,YACS1H,EACAsqE,EACAR,EACAS,GAERt+D,QALQtE,KAAA3H,KAAAA,EACA2H,KAAA2iE,iBAAAA,EACA3iE,KAAAmiE,aAAAA,EACAniE,KAAA4iE,eAAAA,EAPD5iE,KAAAotE,mBAA6CptE,KAAK8nD,UAAU,IAAI7b,EAAAzrB,iBAA6C,EAAtB6sD,EAAAxsB,sBACvF7gD,KAAAstE,kBAAuC,GAU9CttE,KAAK+iE,gBAGNhjE,kBAAkB6iE,GACjB5iE,KAAK4iE,eAAiBA,EAGf7iE,sBACP,IACC,MAAM5G,KAAEA,EAAI6iD,aAAEA,SAAuBqD,EAAAvD,SAAS97C,KAAK3H,MAEnD,GAAI2H,KAAK6iE,WACR,OAGD,IAAI0K,EAAcvtE,KAAK3H,KACvB,GAAI2jD,EACH,IACCuxB,QAAoBlzB,EAAAkF,SAASguB,GAC5B,MAAO1xE,GACRmE,KAAKiR,QAAQpV,GAKX1C,EAAKC,cACR4G,KAAK8nD,UAAUulB,EAAAtsB,YAAYwsB,EAAa,CAACC,EAAWn1E,KACnD2H,KAAKytE,aAAa;AACjBj7D,KAAoB,YAAdg7D,EAAyB,EAAwC,UAAdA,EAAuB,EAAuB,EACvGn1E,KAAMsiC,EAAA9gC,KAAKmG,KAAK3H,KAAMsiC,EAAAvN,SAAS/0B,OAE9BwD,GAASmE,KAAKiR,QAAQpV,KAKzBmE,KAAK8nD,UAAUulB,EAAAvsB,UAAUysB,EAAaC,IACrCxtE,KAAKytE,aAAa,CACjBj7D,KAAoB,YAAdg7D,EAAyB,EAAyB,EACxDn1E,KAAM2H,KAAK3H,QAEVwD,GAASmE,KAAKiR,QAAQpV,KAEzB,MAAOA,GACRmE,KAAKiR,QAAQpV,IAIPkE,aAAawX,GAGpBvX,KAAKstE,kBAAkBn2E,KAAKogB,GAGxBvX,KAAK4iE,gBACR5iE,KAAK0tE,UAAU,GAAa,IAAVn2D,EAAM/E,KAAgC,UAAsB,IAAV+E,EAAM/E,KAAkC,YAAc,eAAe+E,EAAMlf,QAIhJ2H,KAAKotE,mBAAmBzsD,QAAQ,KAC/B,MAAMgtD,EAAc3tE,KAAKstE,kBACzBttE,KAAKstE,kBAAoB,GAGzB,MAAMM,EAAwBC,EAAArB,qBAAqBmB,GAcnD,OAXI3tE,KAAK4iE,gBACRgL,EAAsBruE,QAAQgY,IAC7BvX,KAAK0tE,UAAU,iBAA2B,IAAVn2D,EAAM/E,KAAgC,UAAsB,IAAV+E,EAAM/E,KAAkC,YAAc,eAAe+E,EAAMlf,UAK3Ju1E,EAAsBp3E,OAAS,GAClCwJ,KAAK2iE,iBAAiBiL,GAGhBl1E,QAAQyB,YAIT4F,QAAQlE,GACVmE,KAAK6iE,YACT7iE,KAAKmiE,aAAa,CAAE3vD,KAAM,QAASzT,QAAS,4BAA4BlD,MAIlEkE,UAAUhB,GACZiB,KAAK6iE,YACT7iE,KAAKmiE,aAAa,CAAE3vD,KAAM,QAASzT,QAAS,4BAA4BA,MAI1EgB,UACCC,KAAK6iE,YAAa,EAElBv+D,MAAM0Q,WA/GRpW,EAAA8jE,YAAAA;8HCNA9jE,EAAAkvE,kBAAA,MAIC/tE,eAAexI,GAFPyI,KAAA+tE,SAAW,IAAI9tE,IAGtB,IAAK,IAAK0Z,EAAI2yC,KAAY/0D,EACzByI,KAAKI,IAAIuZ,EAAI2yC,GAIfvsD,IAAO4Z,EAA0Bq0D,GAChC,MAAM33E,EAAS2J,KAAK+tE,SAAS7tE,IAAIyZ,GAEjC,OADA3Z,KAAK+tE,SAAS3tE,IAAIuZ,EAAIq0D,GACf33E,EAGR0J,QAAQP,GACPQ,KAAK+tE,SAASxuE,QAAQ,CAACT,EAAOL,IAAQe,EAASf,EAAKK,IAGrDiB,IAAI4Z,GACH,OAAO3Z,KAAK+tE,SAAS7kE,IAAIyQ,GAG1B5Z,IAAO4Z,GACN,OAAO3Z,KAAK+tE,SAAS7tE,IAAIyZ,uKCpB3B,MAAMs0D,GAAiB,EAEvB,MAAMC,UAA8BlvE,MACnCe,YAAYouE,GACX7pE,MAAM,sCACNtE,KAAKjB,QAAUovE,EAAMxzD,YAIvB,MAAayzD,EAQZruE,YAAYsuE,EAA8B,IAAIC,EAAAR,kBAAqBS,GAAkB,EAAO7gE,GAC3F1N,KAAKwuE,UAAYH,EACjBruE,KAAKggC,QAAUuuC,EACfvuE,KAAKyuE,QAAU/gE,EAEf1N,KAAKwuE,UAAUpuE,IAAIgmE,EAAAH,sBAAuBjmE,MAG3CD,YAAYsuE,GACX,OAAO,IAAID,EAAqBC,EAAUruE,KAAKggC,QAAShgC,MAGzDD,eAAyCQ,KAAuDW,GAC/F,IAAIwtE,EAASC,EAAMC,gBAAgBruE,GAC/BsuE,GAAQ,EACZ,IAeC,OAAOtuE,EAd4B,CAClCL,IAAK,CAAIyZ,EAA0Bm1D;AAElC,GAAID,EACH,MAAM1mE,EAAArE,aAAa,6EAGpB,MAAMzN,EAAS2J,KAAK+uE,4BAA4Bp1D,EAAI+0D,GACpD,IAAKr4E,GAAUy4E,IAAe1I,EAAAT,SAC7B,MAAM,IAAI3mE,MAAM,qCAAqC2a,MAEtD,OAAOtjB,OAGc6K,WAEvB2tE,GAAQ,EACRH,EAAOpM,QAITviE,eAAeivE,KAAgDC,GAC9D,IAAIP,EACAr4E,EASJ,OARI24E,aAA4BE,EAAAxK,gBAC/BgK,EAASC,EAAMQ,cAAcH,EAAiBrK,MAC9CtuE,EAAS2J,KAAKovE,gBAAgBJ,EAAiBrK,KAAMqK,EAAiBpK,gBAAgBn7D,OAAOwlE,GAAOP,KAEpGA,EAASC,EAAMQ,cAAcH,GAC7B34E,EAAS2J,KAAKovE,gBAAgBJ,EAAkBC,EAAMP,IAEvDA,EAAOpM,OACAjsE,EAGA0J,gBAAmB4kE,EAAWzjE,EAAc,GAAIwtE,GAGvD,IAAIW,EAAsBjJ,EAAAX,MAAMO,uBAAuBrB,GAAM/8D,KAAK,CAAC1C,EAAGgC,IAAMhC,EAAExJ,MAAQwL,EAAExL,OACpF4zE,EAAqB,GACzB,IAAK,MAAMC,KAAcF,EAAqB,CAC7C,IAAI/iB,EAAUtsD,KAAK+uE,4BAA4BQ,EAAW51D,GAAI+0D,GAC9D,IAAKpiB,GAAWtsD,KAAKggC,UAAYuvC,EAAW5J,SAC3C,MAAM,IAAI3mE,MAAM,oBAAoB2lE,EAAKztE,mCAAmCq4E,EAAW51D,OAExF21D,EAAYn4E,KAAKm1D,GAGlB,IAAIkjB,EAAqBH,EAAoB74E,OAAS,EAAI64E,EAAoB,GAAG3zE,MAAQwF,EAAK1K,OAG9F,GAAI0K,EAAK1K,SAAWg5E,EAAoB,CACvC14E,QAAQkK,KAAK,gDAAgD2jE,EAAKztE,oBACjEs4E,EAAqB,oBAAoBtuE,EAAK1K,2BAE/C,IAAI+Q,EAAQioE,EAAqBtuE,EAAK1K;CAErC0K,EADGqG,EAAQ,EACJrG,EAAKuI,OAAO,IAAIf,MAAMnB,IAEtBrG,EAAKhJ,MAAM,EAAGs3E,GAKvB,OAAU,IAAI7K,KAAQ,IAAIzjE,KAASouE,IAG5BvvE,oBAAuB4Z,EAA0B81D,GACxD,GAAIzvE,KAAKwuE,UAAUtuE,IAAIyZ,aAAeu1D,EAAAxK,eACrC1kE,KAAKwuE,UAAUpuE,IAAIuZ,EAAI81D,OACjB,CAAA,IAAIzvE,KAAKyuE,QAGf,MAAM,IAAIzvE,MAAM,mDAFhBgB,KAAKyuE,QAAQiB,oBAAoB/1D,EAAI81D,IAM/B1vE,gCAAmC4Z,GAC1C,IAAIg2D,EAAiB3vE,KAAKwuE,UAAUtuE,IAAIyZ,GACxC,OAAKg2D,GAAkB3vE,KAAKyuE,QACpBzuE,KAAKyuE,QAAQmB,gCAAgCj2D,GAE7Cg2D,EAID5vE,4BAA+B4Z,EAA0B+0D,GAChE,IAAIv5D,EAAQnV,KAAK4vE,gCAAgCj2D,GACjD,OAAIxE,aAAiB+5D,EAAAxK,eACb1kE,KAAK6vE,+BAA+Bl2D,EAAIxE,EAAOu5D,EAAOoB,OAAOn2D,GAAI,KAExE+0D,EAAOoB,OAAOn2D,GAAI,GACXxE,GAIDpV,+BAAkC4Z,EAA0Bo2D,EAAyBrB,GAE5F,MAAMP,EAAQ,IAAI6B,EAAAjL,MAAc1qE,GAAQA,EAAKsf,GAAGgB,YAEhD,IAAIs1D,EAAa,EACjB,MAAMntE,EAAQ,CAAC,CAAE6W,GAAAA,EAAIo2D,KAAAA,EAAMrB,OAAAA,IAC3B,KAAO5rE,EAAMtM,QAAQ,CACpB,MAAM2d,EAAOrR,EAAM0D,MAInB,GAHA2nE,EAAM9I,mBAAmBlxD,GAGrB87D,IAAe,IAClB,MAAM,IAAI/B,EAAsBC,GAIjC,IAAK,IAAIoB,KAAcnJ,EAAAX,MAAMO,uBAAuB7xD,EAAK47D,KAAKpL,MAAO,CAEpE,IAAIgL,EAAiB3vE,KAAK4vE,gCAAgCL,EAAW51D;CAKrE,GAJKg2D,GAAmBJ,EAAW5J,UAClC7uE,QAAQkK,KAAK,oBAAoB2Y,gBAAiB41D,EAAW51D,+BAG1Dg2D,aAA0BT,EAAAxK,eAAgB,CAC7C,MAAMznE,EAAI,CAAE0c,GAAI41D,EAAW51D,GAAIo2D,KAAMJ,EAAgBjB,OAAQv6D,EAAKu6D,OAAOoB,OAAOP,EAAW51D,IAAI,IAC/Fw0D,EAAM+B,WAAW/7D,EAAMlX,GACvB6F,EAAM3L,KAAK8F,KAKd,OAAa,CACZ,MAAMwlE,EAAQ0L,EAAM1L,QAIpB,GAAqB,IAAjBA,EAAMjsE,OAAc,CACvB,IAAK23E,EAAM1yD,UACV,MAAM,IAAIyyD,EAAsBC,GAEjC,MAGD,IAAK,MAAM9zE,KAAEA,KAAUooE,EAAO,CAE7B,MAAMgN,EAAWzvE,KAAKmwE,gCAAgC91E,EAAKsf,GAAItf,EAAK01E,KAAKpL,KAAMtqE,EAAK01E,KAAKnL,gBAAiBvqE,EAAK01E,KAAKlL,6BAA8BxqE,EAAKq0E,QACvJ1uE,KAAK0vE,oBAAoBr1E,EAAKsf,GAAI81D,GAClCtB,EAAMiC,WAAW/1E,IAInB,OAAU2F,KAAK4vE,gCAAgCj2D,GAGxC5Z,gCAAmC4Z,EAA0BgrD,EAAWzjE,EAAc,GAAI2jE,EAAuC6J,GACxI,GAAI1uE,KAAKwuE,UAAUtuE,IAAIyZ,aAAeu1D,EAAAxK,eACrC,OAAO1kE,KAAKqwE,uBAAuB1L,EAAMzjE,EAAM2jE,EAA8B6J,GACvE,GAAI1uE,KAAKyuE,QACf,OAAOzuE,KAAKyuE,QAAQ0B,gCAAgCx2D,EAAIgrD,EAAMzjE,EAAM2jE,EAA8B6J,GAElG,MAAM,IAAI1vE,MAAM,oDAAoD2lE,EAAKztE,QAInE6I,uBAA0B4kE,EAAWzjE,EAAc,GAAIovE,EAAwC5B,GACtG,GAAK4B,EAIE,CAIN,MAAMC,EAAO,IAAItkC,EAAAnoB,UAAe,IAAM9jB,KAAKovE,gBAAmBzK,EAAMzjE,EAAMwtE,IAC1E,OAAU,IAAI9hB,MAAM/uD,OAAOK,OAAO,MAAO,CACxC6B,IAAIlI,EAAa4G,GAChB,GAAIA,KAAO5G,EACV,OAAOA,EAAO4G;CAEf,IAAIgK,EAAM8nE,EAAKC,WACXv8D,EAAOxL,EAAIhK,GACf,MAAoB,mBAATwV,EACHA,GAERA,EAAOA,EAAKjd,KAAKyR,GACjB5Q,EAAO4G,GAAOwV,EACPA,IAER7T,IAAG,CAACysD,EAAYpoD,EAAgB3F,KAC/ByxE,EAAKC,WAAW/rE,GAAK3F,GACd,KAvBT,OAAOkB,KAAKovE,gBAAgBzK,EAAMzjE,EAAMwtE,IAgC3C,IAAW+B,EA3NX7xE,EAAAwvE,qBAAAA,EA2NA,SAAWqC,GACVA,EAAAA,EAAA,SAAA,GAAA,WAAUA,EAAAA,EAAA,WAAA,GAAA,aAAYA,EAAAA,EAAA,OAAA,GAAA,SADvB,CAAWA,IAAAA,EAAS,KAIpB,IAAA9B,EAAA,MAAA,MAAMA,EAoBL5uE,YACUyS,EACAtb,GADA8I,KAAAwS,KAAAA,EACAxS,KAAA9I,KAAAA,EALO8I,KAAA0wE,OAAiBt5E,KAAKC,MACtB2I,KAAA2wE,KAAoD,GAVrE5wE,uBAAuB4kE,GACtB,OAAQsJ,EAA+B,IAAIU,EAAK,EAAuBhK,EAAKztE,MAASytE,EAAKhqD,WAAsB/e,UAAU,EAAG,IAAI8C,QAAQ,MAAO,KAAvHiwE,EAAMiC,MAGhC7wE,qBAAqB4kE,GACpB,OAAQsJ,EAA+B,IAAIU,EAAK,EAAqBhK,EAAKztE,MAAjDy3E,EAAMiC,MAYhC7wE,OAAO4Z,EAA4Bra,GAClC,IAAI1F,EAAQ,IAAI+0E,EAAK,EAAmBh1D,EAAGgB,YAE3C,OADA3a,KAAK2wE,KAAKx5E,KAAK,CAACwiB,EAAIra,EAAO1F,IACpBA,EAGRmG,OACC,IAAI8wE,EAAMz5E,KAAKC,MAAQ2I,KAAK0wE,OAC5B/B,EAAMmC,SAAWD,EAEjB,IAAIE,GAAiB,EAoBrB,IAAIC,EAAQ,CACX,GAAY,IAAThxE,KAAKwS,KAA8B,SAAW,UAAUxS,KAAK9I,OAChE,GApBD,SAAS+5E,EAAW5qE,EAAW6qE,GAC9B,IAAI95D,EAAgB,GAChB09B,EAAS,IAAIpsC,MAAMrC,EAAI,GAAGxM,KAAK,MACnC,IAAK,MAAO8f,EAAIra,EAAO1F,KAAUs3E,EAAMP,KACtC,GAAIrxE,GAAS1F,EAAO,CACnBm3E,GAAiB,EACjB35D,EAAIjgB,KAAK,GAAG29C,eAAoBn7B,KAChC,IAAIw3D,EAASF,EAAW5qE,EAAI,EAAGzM,GAC3Bu3E,GACH/5D,EAAIjgB,KAAKg6E,QAGV/5D,EAAIjgB,KAAK,GAAG29C,YAAiBn7B,KAG/B,OAAOvC,EAAIvd,KAAK;CAKbo3E,CAAW,EAAGjxE,QACjB,cAAc6wE,EAAItgB,QAAQ,qBAAqBoe,EAAMmC,QAAQvgB,QAAQ,UAGlEsgB,EAAM,GAAKE,IACdj6E,QAAQie,IAAIi8D,EAAMn3E,KAAK,QAG1B,OA/DyB80E,EAAAiC,MAAQ,IAAI,cAAcjC,EACjD5uE,cAAgBuE,OAAO,EAAG,MAC1BvE,QACAA,SAAW,OAAOC,OAWJ2uE,EAAAmC,QAAkB,EAiDlCnC,GAjEA,iLChOA,SAAkByC,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,YAAA,GAAA,cAFD,CAAkBxyE,EAAAwyE,eAAAxyE,EAAAwyE,aAAY,KAKjBxyE,EAAAyyE,sBAAwBjL,EAAA5lE,gBAAuC,wBAQ5E5B,EAAA0yE,oBAAA,SAAoCC,GACnC,GAAuC,iBAA5BA,EAAaC,WACvB,OAAO,EAER,IAAK9oE,MAAMC,QAAQ4oE,EAAar1E,eAAsD,IAArCq1E,EAAar1E,aAAa1F,OAC1E,OAAO,EAER,IAAK,MAAMi7E,KAAeF,EAAar1E,aAAc,CACpD,GAA8B,iBAAnBu1E,EAAY93D,GACtB,OAAO,EAER,GAAgC,iBAArB83D,EAAYp5E,KACtB,OAAO,EAGT,QAAIk5E,EAAaG,cAAqD,iBAA9BH,EAAaG,iBAGjDH,EAAaI,uBAAuE,iBAAvCJ,EAAaI;CCnC/D,SAASt6E,IACR,OAAO,IAAID,MAAOw6E,cAGnB,IAAYC,kTAPCjzE,EAAAkzE,YAAc1L,EAAA5lE,gBAAoC,cAClD5B,EAAAmzE,eAAiB3L,EAAA5lE,gBAAuC,iBAMrE,SAAYqxE,GACXA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,IAAA,GAAA,MAPD,CAAYA,EAAAjzE,EAAAizE,WAAAjzE,EAAAizE,SAAQ,KAUPjzE,EAAAozE,kBAA8BH,EAASngB,KA8BpD,MAAsBugB,UAA2Bp5D,EAAAlE,WAAjD5U,kCAESC,KAAAkyE,MAAkBtzE,EAAAozE,kBACThyE,KAAAmyE,qBAA0CnyE,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACrEhY,KAAAoyE,oBAAuCpyE,KAAKmyE,qBAAqB56D,MAE1ExX,SAASmyE,GACJlyE,KAAKkyE,QAAUA,IAClBlyE,KAAKkyE,MAAQA,EACblyE,KAAKmyE,qBAAqBl6D,KAAKjY,KAAKkyE,QAItCnyE,WACC,OAAOC,KAAKkyE,OAddtzE,EAAAqzE,mBAAAA;CAmBArzE,EAAAyzE,sBAAA,cAA2CJ,EAK1ClyE,YAAYuyE,EAAqB1zE,EAAAozE,mBAChC1tE,QACAtE,KAAKuyE,SAASD,GACdtyE,KAAKwyE,WAAa3pD,EAAA/B,UAGnB/mB,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcZ,EAASlD,QAC3B3uE,KAAKwyE,UACR17E,QAAQie,IAAI,cAAiB1d,WAAiB0H,KAAYmC,GAE1DpK,QAAQie,IAAI,SAAS1d,OAAU0H,KAAYmC,IAK9CnB,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcZ,EAASa,QAC3B1yE,KAAKwyE,UACR17E,QAAQie,IAAI,cAAiB1d,WAAiB0H,KAAYmC,GAE1DpK,QAAQie,IAAI,SAAS1d,OAAU0H,KAAYmC,IAK9CnB,KAAKhB,KAAoBmC,GACpBlB,KAAKyyE,YAAcZ,EAASngB,OAC3B1xD,KAAKwyE,UACR17E,QAAQie,IAAI,cAAiB1d,WAAiB0H,KAAYmC,GAE1DpK,QAAQie,IAAI,SAAS1d,OAAU0H,KAAYmC,IAK9CnB,KAAKhB,KAA4BmC,GAC5BlB,KAAKyyE,YAAcZ,EAASpgB,UAC3BzxD,KAAKwyE,UACR17E,QAAQkK,KAAK,cAAiB3J,WAAiB0H,KAAYmC,GAE3DpK,QAAQkK,KAAK,SAAS3J,OAAU0H,KAAYmC,IAK/CnB,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcZ,EAAS7yE,QAC3BgB,KAAKwyE,UACR17E,QAAQ+E,MAAM,cAAiBxE,WAAiB0H,KAAYmC,GAE5DpK,QAAQ+E,MAAM,SAASxE,OAAU0H,KAAYmC,IAKhDnB,SAAShB,KAAoBmC,GACxBlB,KAAKyyE,YAAcZ,EAASc,WAC3B3yE,KAAKwyE,UACR17E,QAAQ+E,MAAM,cAAiBxE,WAAiB0H,KAAYmC,GAE5DpK,QAAQ+E,MAAM,SAASxE,OAAU0H,KAAYmC,IAKhDnB,WAIAA;CAMDnB,EAAAg0E,kBAAA,cAAuCX,EAItClyE,YAAYuyE,EAAqB1zE,EAAAozE,mBAChC1tE,QACAtE,KAAKuyE,SAASD,GAGfvyE,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcZ,EAASlD,OAC/B73E,QAAQie,IAAI,UAAW,cAAehW,KAAYmC,GAIpDnB,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcZ,EAASa,OAC/B57E,QAAQie,IAAI,UAAW,gCAAiChW,KAAYmC,GAItEnB,KAAKhB,KAAoBmC,GACpBlB,KAAKyyE,YAAcZ,EAASngB,MAC/B56D,QAAQie,IAAI,UAAW,cAAehW,KAAYmC,GAIpDnB,KAAKhB,KAA4BmC,GAC5BlB,KAAKyyE,YAAcZ,EAASpgB,SAC/B36D,QAAQie,IAAI,UAAW,cAAehW,KAAYmC,GAIpDnB,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcZ,EAAS7yE,OAC/BlI,QAAQie,IAAI,UAAW,cAAehW,KAAYmC,GAIpDnB,SAAShB,KAAoBmC,GACxBlB,KAAKyyE,YAAcZ,EAASc,UAC/B77E,QAAQie,IAAI,UAAW,iCAAkChW,KAAYmC,GAIvEnB,WAIAA,WAKD,MAAa8yE,UAA0BZ,EAItClyE,YAA6B+yE,EAA8DR,EAAqB1zE,EAAAozE,mBAC/G1tE,QAD4BtE,KAAA8yE,QAAAA,EAE5B9yE,KAAKuyE,SAASD,GAGfvyE,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcZ,EAASlD,OAC/B3uE,KAAK8yE,QAAQC,WAAW,QAAS,CAAC/yE,KAAKgzE,eAAej0E,MAAamC,IAIrEnB,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcZ,EAASa,OAC/B1yE,KAAK8yE,QAAQC,WAAW,QAAS,CAAC/yE,KAAKgzE,eAAej0E,MAAamC,IAIrEnB,KAAKhB,KAAoBmC;AACpBlB,KAAKyyE,YAAcZ,EAASngB,MAC/B1xD,KAAK8yE,QAAQC,WAAW,OAAQ,CAAC/yE,KAAKgzE,eAAej0E,MAAamC,IAIpEnB,KAAKhB,KAA4BmC,GAC5BlB,KAAKyyE,YAAcZ,EAASpgB,SAC/BzxD,KAAK8yE,QAAQC,WAAW,OAAQ,CAAC/yE,KAAKgzE,eAAej0E,MAAamC,IAIpEnB,MAAMhB,KAA4BmC,GAC7BlB,KAAKyyE,YAAcZ,EAAS7yE,OAC/BgB,KAAK8yE,QAAQC,WAAW,QAAS,CAAC/yE,KAAKgzE,eAAej0E,MAAamC,IAIrEnB,SAAShB,KAA4BmC,GAChClB,KAAKyyE,YAAcZ,EAASc,UAC/B3yE,KAAK8yE,QAAQC,WAAW,WAAY,CAAC/yE,KAAKgzE,eAAej0E,MAAamC,IAIhEnB,eAAe0pB,GACtB,MAAmB,iBAARA,EACHA,EAGD4yC,EAAAtL,eAAetnC,EAAKzpB,KAAKyyE,YAAcZ,EAASlD,OAGxD5uE,WAIAA,UAzDDnB,EAAAi0E,kBAAAA,EA8DAj0E,EAAAq0E,wBAAA,cAA6CJ,EAI5C9yE,YAAYu3D,EAA6Bgb,EAAqB1zE,EAAAozE,mBAC7D1tE,MAAM,CAAEyuE,WAAY,CAACvgE,EAAMtR,IAASo2D,EAAOyb,WAAWvgE,EAAMtR,IAASoxE,KAIvE1zE,EAAAs0E,oBAAA,cAAyCjB,EAGxClyE,YAA6BozE,GAC5B7uE,QAD4BtE,KAAAmzE,YAAAA,EAExBA,EAAY38E,QACfwJ,KAAKuyE,SAASY,EAAY,GAAGV,YAI/B1yE,SAASmyE,GACR,IAAK,MAAM3W,KAAcv7D,KAAKmzE,YAC7B5X,EAAWgX,SAASL,GAErB5tE,MAAMiuE,SAASL,GAGhBnyE,MAAMhB,KAAoBmC,GACzB,IAAK,MAAMq6D,KAAcv7D,KAAKmzE,YAC7B5X,EAAW2V,MAAMnyE,KAAYmC,GAI/BnB,MAAMhB,KAAoBmC,GACzB,IAAK,MAAMq6D,KAAcv7D,KAAKmzE,YAC7B5X,EAAW3D,MAAM74D,KAAYmC,GAI/BnB,KAAKhB,KAAoBmC;AACxB,IAAK,MAAMq6D,KAAcv7D,KAAKmzE,YAC7B5X,EAAWI,KAAK58D,KAAYmC,GAI9BnB,KAAKhB,KAAoBmC,GACxB,IAAK,MAAMq6D,KAAcv7D,KAAKmzE,YAC7B5X,EAAWv6D,KAAKjC,KAAYmC,GAI9BnB,MAAMhB,KAA4BmC,GACjC,IAAK,MAAMq6D,KAAcv7D,KAAKmzE,YAC7B5X,EAAW1/D,MAAMkD,KAAYmC,GAI/BnB,SAAShB,KAA4BmC,GACpC,IAAK,MAAMq6D,KAAcv7D,KAAKmzE,YAC7B5X,EAAW6X,SAASr0E,KAAYmC,GAIlCnB,QACC,IAAK,MAAMw7D,KAAcv7D,KAAKmzE,YAC7B5X,EAAWhiD,QAIbxZ,UACC,IAAK,MAAMw7D,KAAcv7D,KAAKmzE,YAC7B5X,EAAWvmD,YAKd,MAAaq+D,UAA4Bx6D,EAAAlE,WAGxC5U,YAAoBw7D,GACnBj3D,QADmBtE,KAAAu7D,WAAAA,EAEnBv7D,KAAK8nD,UAAUyT,GAGhB6W,0BACC,OAAOpyE,KAAKu7D,WAAW6W,oBAGxBryE,SAASmyE,GACRlyE,KAAKu7D,WAAWgX,SAASL,GAG1BnyE,WACC,OAAOC,KAAKu7D,WAAWkX,WAGxB1yE,MAAMhB,KAAoBmC,GACzBlB,KAAKu7D,WAAW2V,MAAMnyE,KAAYmC,GAGnCnB,MAAMhB,KAAoBmC,GACzBlB,KAAKu7D,WAAW3D,MAAM74D,KAAYmC,GAGnCnB,KAAKhB,KAAoBmC,GACxBlB,KAAKu7D,WAAWI,KAAK58D,KAAYmC,GAGlCnB,KAAKhB,KAAoBmC,GACxBlB,KAAKu7D,WAAWv6D,KAAKjC,KAAYmC,GAGlCnB,MAAMhB,KAA4BmC,GACjClB,KAAKu7D,WAAW1/D,MAAMkD,KAAYmC,GAGnCnB,SAAShB,KAA4BmC,GACpClB,KAAKu7D,WAAW6X,SAASr0E,KAAYmC,GAGtCnB,QACCC,KAAKu7D,WAAWhiD,SA7ClB3a,EAAAy0E,oBAAAA,EAiDAz0E,EAAA00E,eAAA,MAAAvzE,cAEUC,KAAAoyE,qBAAuC,IAAIn0D,EAAAjG,SAAoBT,MACxExX,SAASmyE,IACTnyE;AAAuB,OAAO8xE,EAASngB,KACvC3xD,MAAMhB,KAAoBmC,IAC1BnB,MAAMhB,KAAoBmC,IAC1BnB,KAAKhB,KAAoBmC,IACzBnB,KAAKhB,KAAoBmC,IACzBnB,MAAMhB,KAA4BmC,IAClCnB,SAAShB,KAA4BmC,IACrCnB,WACAA,WAGDnB,EAAA20E,YAAA,SAA4BjY,GAC3B,GAAIA,EAAmB5K,QACtB,OAAOmhB,EAASlD,MAEjB,GAA2C,iBAAhCrT,EAAmBp6D,KAAK6T,IAAkB,CAEpD,OADiBumD,EAAmBp6D,KAAK6T,IAAI+V,eAE5C,IAAK,QACJ,OAAO+mD,EAASlD,MACjB,IAAK,QACJ,OAAOkD,EAASa,MACjB,IAAK,OACJ,OAAOb,EAASngB,KACjB,IAAK,OACJ,OAAOmgB,EAASpgB,QACjB,IAAK,QACJ,OAAOogB,EAAS7yE,MACjB,IAAK,WACJ,OAAO6yE,EAASc,SACjB,IAAK,MACJ,OAAOd,EAAS2B,KAGnB,OAAO50E,EAAAozE,6NChaR,IAAAyB,EAAA,MAAA,IAAaA,EAAb,cAAiC56D,EAAAlE,WAMhC5U,YAAiCw7D,GAChCj3D,QADgCtE,KAAAu7D,WAAAA,EAFhBv7D,KAAA0zE,YAAc,MAQvB1zE,KAAA2zE,4CAA8C3zE,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAChEhY,KAAAyrE,2CAA6CzrE,KAAK2zE,4CAA4Cp8D;AAE/FvX,KAAA4zE,kCAAoC5zE,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACtDhY,KAAA6zE,iCAAmC7zE,KAAK4zE,kCAAkCr8D,MAE3EvX,KAAA8zE,2CAA6C9zE,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAC/DhY,KAAA+zE,0CAA4C/zE,KAAK8zE,2CAA2Cv8D,MAEpFvX,KAAAsoE,SAAW,IAAIroE,IAyGxBD,KAAAg0E,mBAAqBh0E,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACvChY,KAAAi0E,kBAAoBj0E,KAAKg0E,mBAAmBz8D,MAE7CvX,KAAAk0E,SAAWl0E,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAC7BhY,KAAAiR,QAAUjR,KAAKk0E,SAAS38D,MA+oBzBvX,KAAAm0E,kBAAoBn0E,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACtChY,KAAA2iE,iBAAmB3iE,KAAKm0E,kBAAkB58D,MAE3CvX,KAAAo0E,eAAiB,IAAIn0E,IAgErBD,KAAAq0E,YAAwC,IAAIp0E,IA7zBpDF,iBAAiBkgC,EAAgBqoC,GAChC,GAAItoE,KAAKsoE,SAASp/D,IAAI+2B,GACrB,MAAM,IAAIjhC,MAAM,yCAAyCihC,6BAI1DjgC,KAAKsoE,SAASloE,IAAI6/B,EAAQqoC,GAC1BtoE,KAAK2zE,4CAA4C17D,KAAK,CAAEvQ,OAAO,EAAMu4B,OAAAA,EAAQqoC,SAAAA,IAG7E,MAAMgM,EAAsB,IAAIz7D,EAAAvD;CAOhC,OANAg/D,EAAoBj0E,IAAIioE,EAASiM,gBAAgBrK,GAAWlqE,KAAKm0E,kBAAkBl8D,KAAK,IAAI8zD,EAAA9B,iBAAiBC,MAC7GoK,EAAoBj0E,IAAIioE,EAASkM,wBAAwB,IAAMx0E,KAAK8zE,2CAA2C77D,KAAK,CAAEqwD,SAAAA,EAAUroC,OAAAA,MACxF,mBAA7BqoC,EAASmM,iBACnBH,EAAoBj0E,IAAIioE,EAASmM,gBAAgB54E,GAASmE,KAAKk0E,SAASj8D,KAAK,IAAIjZ,MAAMnD,MAGjFgd,EAAAxD,aAAa,KACnBrV,KAAK2zE,4CAA4C17D,KAAK,CAAEvQ,OAAO,EAAOu4B,OAAAA,EAAQqoC,SAAAA,IAC9EtoE,KAAKsoE,SAAShoE,OAAO2/B,GAErBpnB,EAAA7D,QAAQs/D,KAIVv0E,uBAAuBkgC,GAItB,MAAMy0C,EAA2B,GACjC10E,KAAK4zE,kCAAkC37D,KAAK,CAC3CgoB,OAAAA,EACAlgC,KAAKqa,GACAA,GACHs6D,EAAQv9E,KAAKijB,MAKZpa,KAAKsoE,SAASp/D,IAAI+2B,UAMhBvnC,QAAQgB,IAAIg7E,GAGnB30E,kBAAkBwiB,GACjB,OAAOviB,KAAKsoE,SAASp/D,IAAIqZ,EAAS0d,QAGnClgC,cAAcwiB,EAAeoyD,GAC5B,MAAMrM,EAAWtoE,KAAKsoE,SAASpoE,IAAIqiB,EAAS0d,QAE5C,SAAUqoC,GAAaA,EAASC,aAAeoM,GAGtC50E,mBAAmBwiB,GAG5B,IAAKsxB,EAAAtC,eAAehvB,GACnB,MAAM,IAAIwpD,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAAe,KAAuE9vD,KAAK40E,iBAAiBryD,IAAU,SAIvJviB,KAAK60E,iBAAiBtyD,EAAS0d,QAGrC,MAAMqoC,EAAWtoE,KAAKsoE,SAASpoE,IAAIqiB,EAAS0d,QAC5C,IAAKqoC,EAAU,CACd,MAAMzsE,EAAQ,IAAImD,MAIlB,MAHAnD,EAAM3E,KAAO;AACb2E,EAAMkD,QAAU8wD,EAAAC,SAAS,EAAmB,KAAoDvtC,EAAS5H,YAEnG9e,EAGP,OAAOysE,EAGAvoE,uBAAuBwiB,GAC9B,MAAM+lD,QAAiBtoE,KAAK80E,aAAavyD,GAEzC,GAAIwpD,EAAAtD,gCAAgCH,IAAayD,EAAA1D,uBAAuBC,IAAayD,EAAArD,4BAA4BJ,GAChH,OAAOA,EAGR,MAAM,IAAItpE,MAAM,mCAAmCujB,EAAS0d,mIAGrDlgC,wBAAwBwiB,GAC/B,MAAM+lD,QAAiBtoE,KAAK80E,aAAavyD,GAEzC,GAAIwpD,EAAAtD,gCAAgCH,IAAayD,EAAA1D,uBAAuBC,GACvE,OAAOA,EAGR,MAAM,IAAItpE,MAAM,mCAAmCujB,EAAS0d,oHAe7DlgC,cAAcwiB,EAAepS,GAC5B,IACC,aAAanQ,KAAK+0E,cAAcxyD,EAAUpS,GACzC,MAAOtU,GAGR,GAAIkwE,EAAAhD,8BAA8BltE,KAAWkwE,EAAA9D,4BAA4BmB,aACxE,MAAM,IAAI2C,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAAqB,KAA6C9vD,KAAK40E,iBAAiBryD,IAAU,GAIzI,MAAMwpD,EAAAtC,8BAA8B5tE,IAM9BkE,oBAAoBwiB,EAAepS;AAC1C,MAAMm4D,QAAiBtoE,KAAK80E,aAAavyD,GAEnCyyD,EAAY7kE,MAAAA,OAAO,EAAPA,EAAS6kE,UACrBC,EAAgC9kE,MAAAA,OAAO,EAAPA,EAAS8kE,8BACzCC,EAAkB/kE,MAAAA,OAAO,EAAPA,EAAS+kE,gBAE3B/7E,QAAamvE,EAASnvE,KAAKopB,GAEjC,IAAI4yD,EAEJ,OAAOn1E,KAAKo1E,WAAW9M,EAAU/lD,EAAUppB,OAAMY,IAAam7E,EAAiB,CAAC/7E,EAAM2zC,KAGhFqoC,KACJA,EAAO5rC,EAAAvD,kBAAkB6M,YACpBzyC,IAAImiB,EAAS5H,YAAY,GAC1BgrC,EAAA/8C,gBAAgBosE,IACnBA,EAAUz1E,QAAQqhC,GAAOu0C,EAAM/0E,IAAIwgC,EAAIjmB,YAAY,OAKjD06D,QAAQF,EAAKG,aAAan8E,EAAKopB,SAAS5H,aAAew6D,EAAKj1E,IAAI/G,EAAKopB,SAAS5H,iBAK9ExhB,EAAKC,cAAe67E,IACH,IAAbnoC,IASF/sC,iBAAiBuoE,EAA+B/lD,EAAeppB,EAAmD2zC,EAA8BooC,EAA0BK,GAGjL,MAAM13B,EAAsB,CAC3Bt7B,SAAAA,EACArrB,KAAMs+E,EAAAvhC,aAAa1xB,GACnBs8B,OAAwC,IAA/B1lD,EAAKqZ,KAAOu5D,EAAA5D,SAASsN,MAC9Br8E,YAAkD,IAApCD,EAAKqZ,KAAOu5D,EAAA5D,SAASuN,WACnCr8E,eAAwD,IAAvCF,EAAKqZ,KAAOu5D,EAAA5D,SAASwN,cACtCtK,MAAOlyE,EAAKkyE,MACZuK,MAAOz8E,EAAKy8E,MACZx2E,KAAMjG,EAAKiG,KACXgsE,KAAMW,EAAAX,KAAK,CAAEC,MAAOlyE,EAAKkyE,MAAOjsE,KAAMjG,EAAKiG,QAI5C,GAAIy+C,EAASzkD,aAAem8E,EAAQ13B,EAAU/Q,GAAW,CACxD,IACC,MAAMv1C,QAAgB+wE,EAAS/uE,QAAQgpB,GACjCszD,QAAwBn9E,QAAQgB,IAAInC,EAAQoC,IAAI0qB,OAAQntB,EAAMsb,MACnE,IACC,MAAMsjE,EAAgBjiC,EAAA1C,SAAS5uB,EAAUrrB,GACnC6+E,EAAYb,QAAwB5M,EAASnvE,KAAK28E,GAAiB,CAAEtjE,KAAAA,GAE3E,aAAaxS,KAAKo1E,WAAW9M,EAAUwN,EAAeC,EAAWx+E,EAAQf,OAAQ0+E,EAAiBK,GACjG,MAAO15E,GAGR,OAFAmE,KAAKu7D,WAAW2V,MAAMr1E,GAEf,SAKTgiD,EAASpkD,SAAWksD,EAAAv9C,SAASytE;CAC5B,MAAOh6E,GACRmE,KAAKu7D,WAAW2V,MAAMr1E,GAEtBgiD,EAASpkD,SAAW,GAGrB,OAAOokD,EAGR,OAAOA,EAKR99C,iBAAiBi2E,GAChB,OAAOt9E,QAAQgB,IAAIs8E,EAAUr8E,IAAI0qB,MAAMwf,IACtC,IACC,MAAO,CAAE1qC,WAAY6G,KAAK+0E,cAAclxC,EAAMthB,SAAUshB,EAAM1zB,SAAUskD,SAAS,GAChF,MAAO54D,GAGR,OAFAmE,KAAKu7D,WAAW2V,MAAMr1E,GAEf,CAAE1C,UAAMY,EAAW06D,SAAS,OAKtC10D,aAAawiB,GACZ,MAAM+lD,QAAiBtoE,KAAK80E,aAAavyD,GAEzC,IAGC,cAFmB+lD,EAASnvE,KAAKopB,GAGhC,MAAO1mB,GACR,OAAO,GAQTkE,iBAAiBwiB,EAAe0zD,EAAiF10B,EAAA1oB,SAASyB,WAAW,IAAKnqB,GAGzI,KAAKA,MAAAA,OAAO,EAAPA,EAAS8uB,kBAAmBj/B,KAAKxH,OAAO+pB,GAC5C,MAAM,IAAIwpD,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAAc,KAAkF9vD,KAAK40E,iBAAiBryD,IAAU,EAA2CpS,GAIlN,MAAM0tC,QAAiB79C,KAAK1F,UAAUioB,EAAU0zD,GAKhD,OAFAj2E,KAAKg0E,mBAAmB/7D,KAAK,IAAI8zD,EAAAjC,mBAAmBvnD,EAAQ,EAAwBs7B,IAE7EA,EAGR99C,gBAAgBwiB,EAAe0zD,EAAgF9lE,GAC9G,MAAMm4D,EAAWtoE,KAAKk2E,kCAAkCl2E,KAAKm2E,kBAAkB5zD,GAAWA,GAE1F,UAGoBviB,KAAKo2E,kBAAkB9N,EAAU/lD,EAAUpS,UAIvDnQ,KAAKzC,OAAO+qE,EAAUz0B,EAAA1mB,QAAQ5K;CAOjCwpD,EAAA1D,uBAAuBC,IAAe2N,aAAoC10B,EAAA1oB,WAE5Eo9C,EADGI,EAAA7oD,iBAAiByoD,SACaI,EAAArnD,uBAAuBinD,EAA0B57E,GAAQknD,EAAA1oB,SAASpvB,OAAOpP,GAAO,GAEtFg8E,EAAA1nD,yBAAyBsnD,EAA0B57E,GAAQknD,EAAA1oB,SAASpvB,OAAOpP,GAAO,KAK1G0xE,EAAAtD,gCAAgCH,IAAcyD,EAAA1D,uBAAuBC,IAAa2N,aAAoC10B,EAAA1oB,eACpH74B,KAAKs2E,kBAAkBhO,EAAU/lD,EAAU0zD,SAK3Cj2E,KAAKu2E,gBAAgBjO,EAAU/lD,EAAU0zD,aAAoC10B,EAAA1oB,SAAW0oB,EAAArnB,iBAAiB+7C,GAA4BA,GAE3I,MAAOp6E,GACR,MAAM,IAAIkwE,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAAa,KAAoC9vD,KAAK40E,iBAAiBryD,GAAWwpD,EAAAtC,8BAA8B5tE,GAAO8e,YAAaoxD,EAAArC,sBAAsB7tE,GAAQsU,GAGzM,OAAOnQ,KAAK7F,QAAQooB,EAAU,CAAE2yD,iBAAiB,IAG1Cn1E,wBAAwBuoE,EAA+B/lD,EAAepS,GAC7E,IAAIhX,OAA0BY,EAC9B,IACCZ,QAAamvE,EAASnvE,KAAKopB,GAC1B,MAAO1mB,GACR,OAID,GAAyC,IAApC1C,EAAKqZ,KAAOu5D,EAAA5D,SAASuN,WACzB,MAAM,IAAI3J,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAA6B,KAA2D9vD,KAAK40E,iBAAiBryD,IAAU,EAAyCpS,GAexM,GACCA,GAAoC,iBAAlBA,EAAQk7D,OAA8C,iBAAjBl7D,EAAQi7D,MAAqBj7D,EAAQi7D,OAASW,EAAAZ,eAC/E,iBAAfhyE,EAAKkyE,OAA2C,iBAAdlyE,EAAKiG,MAC9C+Q,EAAQk7D,MAAQlyE,EAAKkyE,OAASl7D,EAAQi7D,OAASW,EAAAX,KAAK,CAAEC,MAAOl7D,EAAQk7D,MAA0DjsE,KAAMjG,EAAKiG;GAE1I,MAAM,IAAI2sE,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAAqB,MAAsB,EAA2C3/C,GAG7H,OAAOhX,EAGR4G,eAAewiB,EAAepS,GAC7B,MAAMm4D,QAAiBtoE,KAAKw2E,iBAAiBj0D,GAEvCwM,QAAe/uB,KAAKy2E,mBAAmBnO,EAAU/lD,EAAUi1C,EAAA76C,OAAO,CAMvE+5D,kBAAkB,GAChBvmE,GAAWtS,OAAOK,OAAO,QAE5B,OAAAL,OAAA8e,OAAA9e,OAAA8e,OAAA,GACIoS,GAAM,CACTjwB,YAAayiD,EAAApnB,eAAepL,EAAOjwB,SAIrCiB,qBAAqBwiB,EAAepS,GACnC,MAAMm4D,QAAiBtoE,KAAKw2E,iBAAiBj0D,GAE7C,OAAOviB,KAAKy2E,mBAAmBnO,EAAU/lD,EAAUpS,GAG5CpQ,yBAAyBuoE,EAAkK/lD,EAAepS,GAMjN,MAAMwmE,EAAoB,IAAIh4D,EAAAP,wBAGxBw4D,EAAc52E,KAAK62E,iBAAiBt0D,EAAUpS,GAASjX,KAAKC,GAAQA,EAAM0C,IAG/E,MAFA86E,EAAkBp4D,SAEZ1iB,IAGP,IAUC,IAAIi7E,EAJA3mE,GAAmC,iBAAjBA,EAAQi7D,MAAqBj7D,EAAQi7D,OAASW,EAAAZ,qBAC7DyL,EAONE,GADK/K,EAAAtD,gCAAgCH,KAAayD,EAAArD,4BAA4BJ,IAAeyD,EAAA1D,uBAAuBC,KAAan4D,MAAAA,OAAO,EAAPA,EAASumE,kBACtH12E,KAAK+2E,mBAAmBzO,EAAU/lD,EAAUpS,GAIxD47D,EAAArD,4BAA4BJ,GAChB5vE,QAAQyB,QAAQ6F,KAAKg3E,iBAAiB1O,EAAU/lD,EAAUo0D,EAAkB5uE,MAAOoI,IAKnFzX,QAAQyB,QAAQ6F,KAAKi3E,iBAAiB3O,EAAU/lD,EAAUo0D,EAAkB5uE,MAAOoI,IAGxG,MAAO0tC,EAAUq5B,SAAoBx+E,QAAQgB,IAAI,CAACk9E,EAAaE,IAE/D,OAAAj5E,OAAA8e,OAAA9e,OAAA8e,OAAA,GACIkhC,GAAQ,CACX/+C,MAAOo4E,IAEP,MAAOr7E;AACR,MAAM,IAAIkwE,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAAY,KAAmC9vD,KAAK40E,iBAAiBryD,GAAWwpD,EAAAtC,8BAA8B5tE,GAAO8e,YAAaoxD,EAAArC,sBAAsB7tE,GAAQsU,IAIhMpQ,iBAAiBuoE,EAA2D/lD,EAAexa,EAA0BoI,EAA4BtS,OAAOK,OAAO,OACtK,MAAMg5E,EAAa5O,EAAS6O,eAAe50D,EAAUpS,EAASpI,GAE9D,OAAO/H,KAAKo3E,wBAAwB70D,EAAU20D,EAAY/mE,GAGnDpQ,iBAAiBuoE,EAA+D/lD,EAAexa,EAA0BoI,EAA4BtS,OAAOK,OAAO,OAC1K,MAAMg5E,EAAaG,EAAAt5B,iBAAiBuqB,EAAU/lD,EAAQ1kB,OAAA8e,OAAA9e,OAAA8e,OAAA,GAClDxM,GAAO,CACV+7D,WAAYlsE,KAAK0zE,cACf3rE,GAEH,OAAO/H,KAAKo3E,wBAAwB70D,EAAU20D,EAAY/mE,GAGnDpQ,wBAAwBwiB,EAAewM,EAAqD5e,GACnG,OAAOkmE,EAAAjnD,UAAUL,EAAQ,CACxB10B,KAAMA,GAAQA,aAAgBknD,EAAA1oB,SAAWx+B,EAAOknD,EAAA1oB,SAAS0B,KAAKlgC,GAC9DwB,MAAOA,GAAS,IAAIkwE,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAAY,KAAmC9vD,KAAK40E,iBAAiBryD,GAAWwpD,EAAAtC,8BAA8B5tE,GAAO8e,YAAaoxD,EAAArC,sBAAsB7tE,GAAQsU,IAC9M9V,GAAQknD,EAAA1oB,SAASpvB,OAAOpP,IAGpB0F,yBAAyBuoE,EAA0D/lD,EAAepS,GACzG,IAAIiJ,QAAekvD,EAASpuE,SAASqoB,GAerC,OAZIpS,GAAuC,iBAArBA,EAAQpH,WAC7BqQ,EAASA,EAAOlhB,MAAMiY,EAAQpH,WAI3BoH,GAAqC,iBAAnBA,EAAQ3Z,SAC7B4iB,EAASA,EAAOlhB,MAAM,EAAGiY,EAAQ3Z,SAIlCwJ,KAAKs3E,uBAAuB/0D,EAAUnJ,EAAOmc,WAAYplB,GAElDoxC,EAAAnnB,eAAemnB,EAAA1oB,SAAS0B,KAAKnhB;AAG7BrZ,uBAAuBwiB,EAAepS,GAC7C,MAAMhX,QAAa6G,KAAK7F,QAAQooB,EAAU,CAAE2yD,iBAAiB,IAG7D,GAAI/7E,EAAKC,YACR,MAAM,IAAI2yE,EAAApC,mBAAmB9Z,EAAAC,SAAS,EAA4B,KAA0D9vD,KAAK40E,iBAAiBryD,IAAU,EAAyCpS,GAItM,GAAIA,GAAmC,iBAAjBA,EAAQi7D,MAAqBj7D,EAAQi7D,OAASW,EAAAZ,eAAiBh7D,EAAQi7D,OAASjyE,EAAKiyE,KAC1G,MAAM,IAAIW,EAAApC,mBAAmB9Z,EAAAC,SAAS,GAAwB,MAA0B,EAA+C3/C,GAMxI,OAFAnQ,KAAKs3E,uBAAuB/0D,EAAUppB,EAAKiG,KAAM+Q,GAE1ChX,EAGA4G,uBAAuBwiB,EAAenjB,EAAc+Q,GAC3D,GAAIA,MAAAA,OAAO,EAAPA,EAAS07D,OAAQ,CACpB,IAAI0L,OAAuDx9E,EAU3D,GARqC,iBAA1BoW,EAAQ07D,OAAOC,QAAuB1sE,EAAO+Q,EAAQ07D,OAAOC,SACtEyL,EAAmB,GAGe,iBAAxBpnE,EAAQ07D,OAAOzsE,MAAqBA,EAAO+Q,EAAQ07D,OAAOzsE,OACpEm4E,EAAmB,GAGe,iBAAxBA,EACV,MAAM,IAAIxL,EAAApC,mBAAmB9Z,EAAAC,SAAS,GAAqB,KAAuD9vD,KAAK40E,iBAAiBryD,IAAYg1D,IASvJx3E,WAAW2e,EAAa7mB,EAAaonC,GACpC,MAAMu4C,EAAiBx3E,KAAKk2E,kCAAkCl2E,KAAKm2E,kBAAkBz3D,GAASA,GACxF+4D,EAAiBz3E,KAAKk2E,kCAAkCl2E,KAAKm2E,kBAAkBt+E,GAASA,GAGxFsiD,QAAan6C,KAAK03E,WAAWF,EAAgB94D,EAAQ+4D,EAAgB5/E,EAAQ,SAAUonC,GAGvF4e,QAAiB79C,KAAK7F,QAAQtC,EAAQ,CAAEq9E,iBAAiB,IAG/D,OAFAl1E,KAAKg0E,mBAAmB/7D,KAAK,IAAI8zD,EAAAjC,mBAAmBprD,EAAiB,SAATy7B,EAAiB,EAAqB,EAAqB0D,IAEhHA,EAGR99C,WAAW2e,EAAa7mB,EAAaonC;AACpC,MAAMu4C,QAAuBx3E,KAAKw2E,iBAAiB93D,GAC7C+4D,EAAiBz3E,KAAKk2E,kCAAkCl2E,KAAKm2E,kBAAkBt+E,GAASA,GAGxFsiD,QAAan6C,KAAK03E,WAAWF,EAAgB94D,EAAQ+4D,EAAgB5/E,EAAQ,SAAUonC,GAGvF4e,QAAiB79C,KAAK7F,QAAQtC,EAAQ,CAAEq9E,iBAAiB,IAG/D,OAFAl1E,KAAKg0E,mBAAmB/7D,KAAK,IAAI8zD,EAAAjC,mBAAmBprD,EAAiB,SAATy7B,EAAiB,EAAqB,EAAqB0D,IAEhHA,EAGA99C,iBAAiBy3E,EAAqC94D,EAAa+4D,EAAqC5/E,EAAasiD,EAAuBlb,GACnJ,GAAIvgB,EAAO/D,aAAe9iB,EAAO8iB,WAChC,OAAOw/B,EAIR,MAAM3hD,OAAEA,EAAMm/E,oCAAEA,SAA8C33E,KAAK43E,mBAAmBJ,EAAgB94D,EAAQ+4D,EAAgB5/E,EAAQsiD,EAAMlb,GAW5I,GARIzmC,IAAWm/E,GAAuC14C,SAC/Cj/B,KAAK63E,IAAIhgF,EAAQ,CAAEyF,WAAW,UAI/B0C,KAAKzC,OAAOk6E,EAAgB5jC,EAAA1mB,QAAQt1B,IAG7B,SAATsiD,EAAiB,CAGpB,GAAIq9B,IAAmBC,GAAkB1L,EAAAvD,4BAA4BgP,SAC9DA,EAAe95B,KAAKh/B,EAAQ7mB,EAAQ,CAAEonC,UAAAA,QAKxC,CACJ,MAAM64C,QAAmB93E,KAAK7F,QAAQukB,GAClCo5D,EAAW1+E,kBACR4G,KAAK+3E,aAAaP,EAAgBM,EAAYL,EAAgB5/E,SAE9DmI,KAAKq+C,WAAWm5B,EAAgB94D,EAAQ+4D,EAAgB5/E,GAIhE,OAAOsiD,EAOP,OAAIq9B,IAAmBC,SAChBD,EAAe78B,OAAOj8B,EAAQ7mB,EAAQ,CAAEonC,UAAAA,IAEvCkb,UAKDn6C,KAAK03E,WAAWF,EAAgB94D,EAAQ+4D,EAAgB5/E,EAAQ,OAAQonC,SAExEj/B,KAAK63E,IAAIn5D,EAAQ,CAAEphB,WAAW,IAE7B,QAKFyC,iBAAiBy3E,EAAqC94D,EAAa+4D,EAAqC5/E;AAG/G,OAAIk0E,EAAAtD,gCAAgC+O,IAAmBzL,EAAAtD,gCAAgCgP,GAC/Ez3E,KAAKg4E,eAAeR,EAAgB94D,EAAQ+4D,EAAgB5/E,GAIhEk0E,EAAAtD,gCAAgC+O,IAAmBzL,EAAA1D,uBAAuBoP,GACtEz3E,KAAKi4E,2BAA2BT,EAAgB94D,EAAQ+4D,EAAgB5/E,GAI5Ek0E,EAAA1D,uBAAuBmP,IAAmBzL,EAAAtD,gCAAgCgP,GACtEz3E,KAAKk4E,2BAA2BV,EAAgB94D,EAAQ+4D,EAAgB5/E,GAI5Ek0E,EAAA1D,uBAAuBmP,IAAmBzL,EAAA1D,uBAAuBoP,GAC7Dz3E,KAAKm4E,iBAAiBX,EAAgB94D,EAAQ+4D,EAAgB5/E,QADtE,EAKOkI,mBAAmBy3E,EAAqCY,EAAyBX,EAAqCY,SAGvHZ,EAAep6E,MAAMg7E,GAGvB3vE,MAAMC,QAAQyvE,EAAa3+E,iBACxBf,QAAQgB,IAAI0+E,EAAa3+E,SAASE,IAAI0qB,MAAMi0D,IACjD,MAAMC,EAAc1kC,EAAA1C,SAASknC,EAAcC,EAAYphF,MACvD,OAAIohF,EAAYl/E,YACR4G,KAAK+3E,aAAaP,QAAsBx3E,KAAK7F,QAAQm+E,EAAY/1D,UAAWk1D,EAAgBc,GAE5Fv4E,KAAKq+C,WAAWm5B,EAAgBc,EAAY/1D,SAAUk1D,EAAgBc,MAMzEx4E,yBAAyBy3E,EAAqC94D,EAAa+4D,EAAqC5/E,EAAasiD,EAAuBlb,GAC3J,IAAI04C,GAAsC,EAG1C,GAAIH,IAAmBC,EAAgB,CACtC,MAAMe,KAAoD,KAA3BhB,EAAejP,cAK9C,GAJKiQ,IACJb,EAAsC9jC,EAAAtY,QAAQ7c,EAAQ7mB,GAAQ,IAG3D8/E,GAAgD,SAATx9B,EAC1C,MAAM,IAAIn7C,MAAM6wD,EAAAC,SAAS,GAA0B,KAAuH9vD,KAAK40E,iBAAiBl2D,GAAS1e,KAAK40E,iBAAiB/8E,KAGhO,IAAK8/E,GAAuC9jC,EAAAjY,gBAAgB/jC,EAAQ6mB,GAAS85D,GAC5E,MAAM,IAAIx5E,MAAM6wD,EAAAC,SAAS,GAA0B,KAAoE9vD,KAAK40E,iBAAiBl2D,GAAS1e,KAAK40E,iBAAiB/8E;AAK9K,MAAMW,QAAewH,KAAKxH,OAAOX,GACjC,GAAIW,IAAWm/E,EAAqC,CAGnD,IAAK14C,EACJ,MAAM,IAAI8sC,EAAApC,mBAAmB9Z,EAAAC,SAAS,GAA0B,KAAiF9vD,KAAK40E,iBAAiBl2D,GAAS1e,KAAK40E,iBAAiB/8E,IAAQ,GAK/M,GAAI2/E,IAAmBC,EAAgB,CACtC,MAAMe,KAAoD,KAA3BhB,EAAejP,cAC9C,GAAI10B,EAAAjY,gBAAgBld,EAAQ7mB,GAAS2gF,GACpC,MAAM,IAAIx5E,MAAM6wD,EAAAC,SAAS,GAA0B,KAAkG9vD,KAAK40E,iBAAiBl2D,GAAS1e,KAAK40E,iBAAiB/8E,MAK7M,MAAO,CAAEW,OAAAA,EAAQm/E,oCAAAA,GAGlB53E,mBAAmBwiB,GAClB,MAAM+lD,EAAWtoE,KAAKk2E,kCAAkCl2E,KAAK80E,aAAavyD,GAAWA,SAG/EviB,KAAKzC,OAAO+qE,EAAU/lD,GAG5B,MAAMs7B,QAAiB79C,KAAK7F,QAAQooB,EAAU,CAAE2yD,iBAAiB,IAGjE,OAFAl1E,KAAKg0E,mBAAmB/7D,KAAK,IAAI8zD,EAAAjC,mBAAmBvnD,EAAQ,EAAwBs7B,IAE7EA,EAGA99C,aAAauoE,EAA+BmQ,GACnD,MAAMC,EAAgC,GAGtC,MAAQ7kC,EAAAtY,QAAQk9C,EAAW5kC,EAAA1mB,QAAQsrD,KAClC,IAEC,GAAyC,WADtBnQ,EAASnvE,KAAKs/E,IACvBjmE,KAAOu5D,EAAA5D,SAASuN,WACzB,MAAM,IAAI12E,MAAM6wD,EAAAC,SAAS,GAAoB,KAA4E9vD,KAAK40E,iBAAiB6D,KAGhJ,MACC,MAAO58E,GAGR,GAAIkwE,EAAAhD,8BAA8BltE,KAAWkwE,EAAA9D,4BAA4BmB,aACxE,MAAMvtE,EAIP68E,EAAoBvhF,KAAK08C,EAAAzmB,SAASqrD,IAGlCA,EAAY5kC,EAAA1mB,QAAQsrD,GAKtB,IAAK,IAAIniF,EAAIoiF,EAAoBliF,OAAS,EAAGF,GAAK,EAAGA,IAAK,CACzDmiF,EAAY5kC,EAAA1C,SAASsnC,EAAWC,EAAoBpiF,IAEpD,UACOgyE,EAASjrE,MAAMo7E,GACpB,MAAO58E;AACR,GAAIkwE,EAAAhD,8BAA8BltE,KAAWkwE,EAAA9D,4BAA4BgB,WASxE,MAAMptE,IAMVkE,UAAUwiB,EAAepS,GACxB,MAAMm4D,EAAWtoE,KAAKk2E,kCAAkCl2E,KAAK80E,aAAavyD,GAAWA,GAG/Eo2D,KAAaxoE,MAAAA,OAAO,EAAPA,EAASwoE,UAC5B,GAAIA,KAAmC,KAArBrQ,EAASC,cAC1B,MAAM,IAAIvpE,MAAM6wD,EAAAC,SAAS,GAAgC,KAA+E9vD,KAAK40E,iBAAiBryD,KAI/J,MAAM/pB,QAAewH,KAAKxH,OAAO+pB,GACjC,IAAK/pB,EACJ,MAAM,IAAIuzE,EAAApC,mBAAmB9Z,EAAAC,SAAS,GAAwB,KAA4C9vD,KAAK40E,iBAAiBryD,IAAU,GAI3I,MAAMjlB,KAAc6S,MAAAA,OAAO,EAAPA,EAAS7S,WAC7B,IAAKA,GAAa9E,EAAQ,CACzB,MAAMW,QAAa6G,KAAK7F,QAAQooB,GAChC,GAAIppB,EAAKC,aAAesP,MAAMC,QAAQxP,EAAKM,WAAaN,EAAKM,SAASjD,OAAS,EAC9E,MAAM,IAAIwI,MAAM6wD,EAAAC,SAAS,GAA8B,KAA4C9vD,KAAK40E,iBAAiBryD,WAKrH+lD,EAAShoE,OAAOiiB,EAAU,CAAEjlB,UAAAA,EAAWq7E,SAAAA,IAG7C34E,KAAKg0E,mBAAmB/7D,KAAK,IAAI8zD,EAAAjC,mBAAmBvnD,EAAQ,IAY7DxiB,MAAMwiB,EAAepS,EAAyB,CAAE7S,WAAW,EAAOknE,SAAU,KAC3E,IAAIoU,GAAgB,EAChBC,EAAkBhgE,EAAAxD,aAAa,IAAMujE,GAAgB,GAYzD,OARA54E,KAAK84E,QAAQv2D,EAAUpS,GAASjX,KAAKgnD,IAChC04B,EACH//D,EAAA7D,QAAQkrC,GAER24B,EAAkB34B,GAEjBrkD,GAASmE,KAAKu7D,WAAW1/D,MAAMA,IAE3Bgd,EAAAxD,aAAa,IAAMwD,EAAA7D,QAAQ6jE,IAGnC94E,cAAcwiB,EAAepS,GAC5B,MAAMm4D,QAAiBtoE,KAAK80E,aAAavyD,GACnC9jB,EAAMuB,KAAK+4E,WAAWzQ,EAAU/lD,EAAUpS,GAG1CgwC,EAAUngD,KAAKo0E,eAAel0E,IAAIzB,IAAQ;AAAEY,MAAO,EAAG6gD,WAAYooB,EAASjoB,MAAM99B,EAAUpS,IAQjG,OAPKnQ,KAAKo0E,eAAelrE,IAAIzK,IAC5BuB,KAAKo0E,eAAeh0E,IAAI3B,EAAK0hD,GAI9BA,EAAQ9gD,OAAS,EAEVwZ,EAAAxD,aAAa,KAGnB8qC,EAAQ9gD,QAGc,IAAlB8gD,EAAQ9gD,QACXwZ,EAAA7D,QAAQmrC,EAAQD,YAChBlgD,KAAKo0E,eAAe9zE,OAAO7B,MAKtBsB,WAAWuoE,EAA+B/lD,EAAepS,GAChE,MAAO,CACNnQ,KAAKg5E,SAAS1Q,EAAU/lD,GACxBne,OAAO+L,EAAQ7S,WACf6S,EAAQq0D,SAAS3qE,QAChBA,OAGHkG,UACCuE,MAAM0Q,UAENhV,KAAKo0E,eAAe70E,QAAQ4gD,GAAWtnC,EAAA7D,QAAQmrC,EAAQD,aACvDlgD,KAAKo0E,eAAe5yE,QASbzB,iBAAiBuoE,EAA+B/lD,GAIvD,MAAM+5B,EAAWt8C,KAAKg5E,SAAS1Q,EAAU/lD,GACzC,IAAI02D,EAAaj5E,KAAKq0E,YAAYn0E,IAAIo8C,GACtC,IAAK28B,EAAY,CAChBA,EAAa,IAAIhtC,EAAA7pB,MACjBpiB,KAAKq0E,YAAYj0E,IAAIk8C,EAAU28B,GAEdh7D,EAAA3G,MAAMhM,KAAK2tE,EAAWj3D,WACvCy6B,CAAS,KACRz8C,KAAKq0E,YAAY/zE,OAAOg8C,GACxBzjC,EAAA7D,QAAQikE,KAIV,OAAOA,EAGAl5E,SAASuoE,EAA+B/lD,GAG/C,SAFoD,KAArB+lD,EAASC,cAEXhmD,EAAS5H,WAAa4H,EAAS5H,WAAWmQ,cAGhE/qB,sBAAsBuoE,EAA+D/lD,EAAe22D,GAC3G,OAAOl5E,KAAKm5E,iBAAiB7Q,EAAU/lD,GAAUzC,MAAMuE,UAGtD,MAAMhM,QAAeiwD,EAAStrB,KAAKz6B,EAAU,CAAErkB,QAAQ,IAGvD,IACKm4E,EAAA7oD,iBAAiB0rD,SACdl5E,KAAKo5E,4BAA4B9Q,EAAUjwD,EAAQ6gE,SAEnDl5E,KAAKq5E,8BAA8B/Q,EAAUjwD,EAAQ6gE,GAE3D,MAAOr9E,GACR,MAAMkwE,EAAAtC,8BAA8B5tE,iBAI9BysE,EAASlrB,MAAM/kC;AAKhBtY,4BAA4BuoE,EAA+DjwD,EAAgB0W,GAClH,OAAO,IAAIr2B,QAAQ,CAACyB,EAASC,KAC5B,IAAI+xE,EAAY,EAEhBp9C,EAAOlV,GAAG,OAAQwK,MAAMoK,IAGvBM,EAAOtB,QAEP,UACOztB,KAAKs5E,cAAchR,EAAUjwD,EAAQoW,EAAOA,EAAM8G,WAAY42C,EAAW,GAC9E,MAAOtwE,GACR,OAAOzB,EAAOyB,GAGfswE,GAAa19C,EAAM8G,WAMnBnzB,WAAW,IAAM2sB,EAAOrB,YAGzBqB,EAAOlV,GAAG,QAAShe,GAASzB,EAAOyB,IACnCkzB,EAAOlV,GAAG,MAAO,IAAM1f,OAIjB4F,oCAAoCuoE,EAA+DjwD,EAAgBkW,GAC1H,IAEIE,EAFA09C,EAAY,EAGhB,KAAqC,QAA7B19C,EAAQF,EAASG,eAClB1uB,KAAKs5E,cAAchR,EAAUjwD,EAAQoW,EAAOA,EAAM8G,WAAY42C,EAAW,GAE/EA,GAAa19C,EAAM8G,WAIbx1B,oBAAoBuoE,EAA+DjwD,EAAgBe,EAAkB5iB,EAAgB21E,EAAmBC,GAC/J,IAAImN,EAAoB,EACxB,KAAOA,EAAoB/iF,GAAQ,CAElC+iF,SAD2BjR,EAASl6C,MAAM/V,EAAQ8zD,EAAYoN,EAAmBngE,EAAOA,OAAQgzD,EAAcmN,EAAmB/iF,EAAS+iF,IAKpIx5E,wBAAwBuoE,EAA0D/lD,EAAe0zD,GACxG,OAAOj2E,KAAKm5E,iBAAiB7Q,EAAU/lD,GAAUzC,MAAM,IAAM9f,KAAKw5E,wBAAwBlR,EAAU/lD,EAAU0zD,IAGvGl2E,8BAA8BuoE,EAA0D/lD,EAAe0zD,GAC9G,IAAI78D,EASJ,OAPCA,EADG68D,aAAoC10B,EAAA1oB,SAC9Bo9C,EACCI,EAAA7oD,iBAAiByoD,SACZ10B,EAAApnB,eAAe87C,GAErB10B,EAAAvnB,iBAAiBi8C,GAGpB3N,EAAShuE,UAAUioB,EAAUnJ,EAAOA,OAAQ,CAAElb,QAAQ,EAAM+gC,WAAW,IAGvEl/B,qBAAqBy3E,EAAqE94D,EAAa+4D,EAAqE5/E,GACnL,OAAOmI,KAAKm5E,iBAAiB1B,EAAgB5/E,GAAQioB,MAAM,IAAM9f,KAAKy5E,qBAAqBjC,EAAgB94D,EAAQ+4D,EAAgB5/E,IAG5HkI,2BAA2By3E,EAAqE94D,EAAa+4D,EAAqE5/E,GACzL,IAAI6hF,OAAmC3/E,EACnC4/E,OAAmC5/E,EAEvC,IAGC2/E,QAAqBlC,EAAex6B,KAAKt+B,EAAQ,CAAExgB,QAAQ;AAC3Dy7E,QAAqBlC,EAAez6B,KAAKnlD,EAAQ,CAAEqG,QAAQ,IAE3D,MAAMkb,EAASmoC,EAAA1oB,SAASO,MAAMp5B,KAAK0zE,aAEnC,IAAIvH,EAAY,EACZC,EAAc,EACdJ,EAAY,EAChB,GAGCA,QAAkBwL,EAAe9oD,KAAKgrD,EAAcvN,EAAW/yD,EAAOA,OAAQgzD,EAAahzD,EAAOmc,WAAa62C,SAIzGpsE,KAAKs5E,cAAc7B,EAAgBkC,EAAcvgE,EAAQ4yD,EAAWG,EAAWC,GAErFD,GAAaH,GACbI,GAAeJ,KAGK5yD,EAAOmc,aAC1B62C,EAAc,SAEPJ,EAAY,GACpB,MAAOnwE,GACR,MAAMkwE,EAAAtC,8BAA8B5tE,iBAE9BnD,QAAQgB,IAAI,CACO,iBAAjBggF,EAA4BlC,EAAep6B,MAAMs8B,GAAgBhhF,QAAQyB,UACxD,iBAAjBw/E,EAA4BlC,EAAer6B,MAAMu8B,GAAgBjhF,QAAQyB,aAK3E4F,uBAAuBy3E,EAAgE94D,EAAa+4D,EAAgE5/E,GAC3K,OAAOmI,KAAKm5E,iBAAiB1B,EAAgB5/E,GAAQioB,MAAM,IAAM9f,KAAK45E,uBAAuBpC,EAAgB94D,EAAQ+4D,EAAgB5/E,IAG9HkI,6BAA6By3E,EAAgE94D,EAAa+4D,EAAgE5/E,GACjL,OAAO4/E,EAAen9E,UAAUzC,QAAc2/E,EAAet9E,SAASwkB,GAAS,CAAExgB,QAAQ,EAAM+gC,WAAW,IAGnGl/B,iCAAiCy3E,EAAgE94D,EAAa+4D,EAAqE5/E,GAC1L,OAAOmI,KAAKm5E,iBAAiB1B,EAAgB5/E,GAAQioB,MAAM,IAAM9f,KAAK65E,iCAAiCrC,EAAgB94D,EAAQ+4D,EAAgB5/E,IAGxIkI,uCAAuCy3E,EAAgE94D,EAAa+4D,EAAqE5/E,GAGhM,MAAM8hF,QAAqBlC,EAAez6B,KAAKnlD,EAAQ,CAAEqG,QAAQ,IAGjE,IACC,MAAMkb,QAAeo+D,EAAet9E,SAASwkB,SACvC1e,KAAKs5E,cAAc7B,EAAgBkC,EAAcp4B,EAAA1oB,SAAS0B,KAAKnhB,GAASA,EAAOmc,WAAY,EAAG,GACnG,MAAO15B,GACR,MAAMkwE,EAAAtC,8BAA8B5tE,iBAE9B47E,EAAer6B,MAAMu8B;AAIrB55E,iCAAiCy3E,EAAqE94D,EAAa+4D,EAAgE5/E,GAG1L,MAAMuhB,QAAemoC,EAAApnB,eAAen6B,KAAKi3E,iBAAiBO,EAAgB94D,EAAQC,EAAAf,kBAAkBhJ,aAG9F5U,KAAKs2E,kBAAkBmB,EAAgB5/E,EAAQuhB,GAG5CrZ,4BAA2DuoE,EAAa/lD,GACjF,GAAyB,KAArB+lD,EAASC,aACZ,MAAM,IAAIwD,EAAApC,mBAAmB9Z,EAAAC,SAAS,GAAgB,KAAwC9vD,KAAK40E,iBAAiBryD,IAAU,GAG/H,OAAO+lD,EAGAvoE,iBAAiBwiB,GACxB,OAAIA,EAAS0d,SAAWkQ,EAAA5C,QAAQ90C,KACxB8pB,EAAS8d,OAGV9d,EAAS5H,UAAS,KAI3B,OA5iCa84D,EAAW5M,EAAA,CAMVC,EAAA,EAAAgT,EAAAhI,cAND2B,IAAb,GAAa70E,EAAA60E,YAAAA,uPCiBb,MAAasG,UAA+BlhE,EAAAlE,WAQ3C5U,YAAoBw7D,EAAiCprD,SACpD7L,QADmBtE,KAAAu7D,WAAAA,EAAiCv7D,KAAAmQ,QAAAA,EAFpCnQ,KAAA0zE,aAA0B,QAAZ7+D,EAAA7U,KAAKmQ,eAAO,IAAA0E,OAAA,EAAAA,EAAEq3D,aAAc,MAQ3DlsE,KAAAw0E,wBAAuCv2D,EAAA3G,MAAM1C,KAgJrC5U,KAAAg6E,eAAsC,IAAI/5E,IAE1CD,KAAAi6E,aAA4B,IAAI95E,IAChCH,KAAA88C,UAAoB;AA8SpB98C,KAAAk6E,sBAAwBl6E,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAC1ChY,KAAAy0E,gBAAkBz0E,KAAKk6E,sBAAsB3iE,MAE9CvX,KAAAm6E,iBAAmBn6E,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACrChY,KAAAu0E,gBAAkBv0E,KAAKm6E,iBAAiB5iE,MAGzCvX,KAAAo6E,wBAAkE,GAClEp6E,KAAAq6E,6BAA+Br6E,KAAK8nD,UAAU,IAAI7b,EAAAzrB,iBAAuB,IAtcjF+nD,mBAaC,OAZKvoE,KAAKs6E,gBACTt6E,KAAKs6E,cACJ,GAKGzxD,EAAA7B,UACHhnB,KAAKs6E,eAAa,OAIbt6E,KAAKs6E,cAObv6E,WAAWwiB,GACV,IACC,MAAMppB,KAAEA,EAAI6iD,aAAEA,SAAuBqD,EAAAvD,SAAS97C,KAAKu6E,WAAWh4D,IAE9D,MAAO,CACN/P,KAAMxS,KAAKw6E,OAAOrhF,EAAM6iD,GACxB45B,MAAOz8E,EAAKshF,UAAUvhE,UACtBmyD,MAAOlyE,EAAKkyE,MAAMnyD,UAClB9Z,KAAMjG,EAAKiG,MAEX,MAAOvD,GACR,MAAMmE,KAAK06E,0BAA0B7+E,IAIvCkE,cAAcwiB,GACb,IACC,MAAM9oB,QAAiB4lD,EAAAzD,qBAAqB57C,KAAKu6E,WAAWh4D,IAEtDlsB,EAA+B,GAgBrC,aAfMqC,QAAQgB,IAAID,EAASE,IAAI0qB,MAAMzqB,IACpC,IACC,IAAI4Y,EAEHA,EADG5Y,EAAMP,wBACK2G,KAAK7G,KAAK06C,EAAA1C,SAAS5uB,EAAU3oB,EAAM1C,QAAQsb,KAElDxS,KAAKw6E,OAAO5gF,GAGpBvD,EAAOc,KAAK,CAACyC,EAAM1C,KAAMsb,IACxB,MAAO3W,GACRmE,KAAKu7D,WAAW2V,MAAMr1E,OAIjBxF,EACN,MAAOwF,GACR,MAAMmE,KAAK06E,0BAA0B7+E,IAI/BkE,OAAO8jC,EAAuBmY,GAKrC,IAAIxpC;CAgBJ,OAdCA,GADGwpC,MAAAA,OAAY,EAAZA,EAAcC,UACV8vB,EAAA5D,SAASa,QACNnlC,EAAMgb,SACTktB,EAAA5D,SAASsN,KACN5xC,EAAMzqC,cACT2yE,EAAA5D,SAASuN,UAET3J,EAAA5D,SAASa,QAIbhtB,IACHxpC,GAAQu5D,EAAA5D,SAASwN,cAGXnjE,EAORzS,eAAewiB,GACd,IACC,MAAMo4D,EAAW36E,KAAKu6E,WAAWh4D,GAEjC,aAAa88B,EAAAnlD,SAASygF,GACrB,MAAO9+E,GACR,MAAMmE,KAAK06E,0BAA0B7+E,IAIvCkE,eAAewiB,EAAeg6C,EAA6Bx0D,GAC1D,MAAMmvE,EAAaG,EAAAt5B,iBAAiB/9C,KAAMuiB,EAAQ1kB,OAAA8e,OAAA9e,OAAA8e,OAAA,GAC9C4/C,GAAI,CACP2P,WAAYlsE,KAAK0zE,cACf3rE,GAEH,OAAOsuE,EAAAjnD,UAAU8nD,EAAY,CAAE78E,KAAMA,GAAQA,EAAK+e,QAAU/e,GAAQknD,EAAA1oB,SAASpvB,OAAOpP,EAAKV,IAAIU,GAAQknD,EAAA1oB,SAAS0B,KAAKlgC,KAAQ+e,QAG5HrZ,gBAAgBwiB,EAAehoB,EAAqBgiE,GACnD,IAAIlkD,OAA6Bte,EACjC,IACC,MAAM4gF,EAAW36E,KAAKu6E,WAAWh4D,GAGjC,IAAKg6C,EAAKr+D,SAAWq+D,EAAKt9B,UAAW,CAEpC,SADyBogB,EAAA7mD,OAAOmiF,IAE/B,IAAKpe,EAAKt9B,UACT,MAAM8sC,EAAAnD,8BAA8B/Y,EAAAC,SAAS,EAAc,MAAwBic,EAAA9D,4BAA4BgB,iBAGhH,IAAK1M,EAAKr+D,OACT,MAAM6tE,EAAAnD,8BAA8B/Y,EAAAC,SAAS,EAAiB,MAAwBic,EAAA9D,4BAA4BmB,cAMrH/wD,QAAerY,KAAKg9C,KAAKz6B,EAAU,CAAErkB,QAAQ,UAGvC8B,KAAKouB,MAAM/V,EAAQ,EAAG9d,EAAS,EAAGA,EAAQg7B,YAC/C,MAAO15B,GACR,MAAMmE,KAAK06E,0BAA0B7+E;AAEf,iBAAXwc,SACJrY,KAAKo9C,MAAM/kC,IAUpBtY,WAAWwiB,EAAeg6C,GACzB,IACC,MAAMoe,EAAW36E,KAAKu6E,WAAWh4D,GAEjC,IAAI6qB,OAA4BrzC,EAChC,GAAIwiE,EAAKr+D,OAAQ,CAChB,GAAI2qB,EAAA/B,iBAAmBu4B,EAAA7mD,OAAOmiF,GAC7B,UAKOt7B,EAAAjD,SAASu+B,EAAU,GAGzBvtC,EAAQ,KACP,MAAOvxC,GACRmE,KAAKu7D,WAAW2V,MAAMr1E,GAOnBuxC,IACJA,EAAQ,UAMTA,EAAQ,IAGT,MAAM/0B,QAAeyiC,EAAAC,UAAUqF,EAAApD,KAAVlC,CAAgB6/B,EAAUvtC,GAc/C,OAPAptC,KAAKg6E,eAAe55E,IAAIiY,EAAQ,GAG5BkkD,EAAKr+D,QACR8B,KAAKi6E,aAAa55E,IAAIgY,GAGhBA,EACN,MAAOxc,GACR,MAAMmE,KAAK06E,0BAA0B7+E,IAIvCkE,YAAYm9C,GACX,IAOC,GAJAl9C,KAAKg6E,eAAe15E,OAAO48C,GAIvBl9C,KAAKi6E,aAAa35E,OAAO48C,IAAOl9C,KAAK88C,SACxC,UACOhC,EAAAC,UAAUqF,EAAA/C,UAAVvC,CAAqBoC,GAC1B,MAAOrhD,GAGRmE,KAAK88C,UAAW,EAChB98C,KAAKu7D,WAAW1/D,MAAMA,GAIxB,aAAai/C,EAAAC,UAAUqF,EAAAhD,MAAVtC,CAAiBoC,GAC7B,MAAOrhD,GACR,MAAMmE,KAAK06E,0BAA0B7+E,IAIvCkE,WAAWm9C,EAAYjvC,EAAa5T,EAAkB0V,EAAgBvZ,GACrE,MAAMokF,EAAgB56E,KAAK66E,aAAa39B,EAAIjvC,GAE5C,IAAI+9D,EAA2B,KAC/B,IACC,MAAM31E,QAAeykD,EAAAC,UAAUqF,EAAA1xB,KAAVosB,CAAgBoC,EAAI7iD,EAAM0V,EAAQvZ,EAAQokF,GAQ/D,OALC5O,EADqB,iBAAX31E,EACEA,EAEAA,EAAO21E,UAInB,MAAOnwE,GACR,MAAMmE,KAAK06E,0BAA0B7+E,WAErCmE,KAAK86E,UAAU59B,EAAI09B,EAAe5O,IAI5BjsE,aAAam9C,EAAYjvC,GAShC,OAAIA,IAAQjO,KAAKg6E,eAAe95E,IAAIg9C,GAC5B,KAGDjvC,EAGAlO,UAAUm9C,EAAYjvC,EAAoB8sE,GACjD,MAAMC,EAAeh7E,KAAKg6E,eAAe95E,IAAIg9C;CACjB,iBAAjB89B,IAUS,iBAAR/sE,IAiBqB,iBAAhB8sE,EACf/6E,KAAKg6E,eAAe55E,IAAI88C,EAAI89B,EAAeD,GAO3C/6E,KAAKg6E,eAAe15E,OAAO48C,KAK9Bn9C,YAAYm9C,EAAYjvC,EAAa5T,EAAkB0V,EAAgBvZ,GAItE,OAAOy1C,EAAA7nB,MAAM,IAAMpkB,KAAKi7E,QAAQ/9B,EAAIjvC,EAAK5T,EAAM0V,EAAQvZ,GAAS,IAAoB,GAG7EuJ,cAAcm9C,EAAYjvC,EAAa5T,EAAkB0V,EAAgBvZ,GAChF,MAAMokF,EAAgB56E,KAAK66E,aAAa39B,EAAIjvC,GAE5C,IAAIitE,EAA8B,KAClC,IACC,MAAM7kF,QAAeykD,EAAAC,UAAUqF,EAAAhyB,MAAV0sB,CAAiBoC,EAAI7iD,EAAM0V,EAAQvZ,EAAQokF,GAQhE,OALCM,EADqB,iBAAX7kF,EACKA,EAEAA,EAAO6kF,aAItB,MAAOr/E,GACR,MAAMmE,KAAK06E,0BAA0B7+E,WAErCmE,KAAK86E,UAAU59B,EAAI09B,EAAeM,IAQpCn7E,YAAYwiB,GACX,UACOu4B,EAAAC,UAAUqF,EAAA/iD,MAAVy9C,CAAiB96C,KAAKu6E,WAAWh4D,IACtC,MAAO1mB,GACR,MAAMmE,KAAK06E,0BAA0B7+E,IAIvCkE,aAAawiB,EAAeg6C,GAC3B,IACC,MAAMoe,EAAW36E,KAAKu6E,WAAWh4D,SAE3BviB,KAAKm7E,SAASR,EAAUpe,GAC7B,MAAO1gE,GACR,MAAMmE,KAAK06E,0BAA0B7+E,IAI7BkE,eAAe46E,EAAkBpe,GACtCA,EAAKj/D,gBACF+hD,EAAAzmD,OAAO+hF,EAAUt7B,EAAAnF,WAAWiF,YAE5BE,EAAArlD,OAAO2gF,GAIf56E,aAAapI,EAAWC,EAAS2kE,GAChC,MAAM6e,EAAep7E,KAAKu6E,WAAW5iF,GAC/B4iF,EAAav6E,KAAKu6E,WAAW3iF,GAEnC,GAAIwjF,IAAiBb,EAIrB,UAGOv6E,KAAKq7E,sBAAsB1jF,EAAMC,EAAI,OAAQ2kE,EAAKt9B,iBAGlDogB,EAAA92C,KAAK6yE,EAAcb,GACxB,MAAO1+E;AAQR,KAJmB,WAAfA,EAAM5B,MAAoC,UAAf4B,EAAM5B,MAAmC,iBAAf4B,EAAM5B,OAC9D4B,EAAQ,IAAImD,MAAM6wD,EAAAC,SAAS,EAAa,KAA0Cn1B,EAAAvN,SAASguD,GAAezgD,EAAAvN,SAASuN,EAAAxN,QAAQotD,IAAc1+E,EAAM8e,cAG1I3a,KAAK06E,0BAA0B7+E,IAIvCkE,WAAWpI,EAAWC,EAAS2kE,GAC9B,MAAM6e,EAAep7E,KAAKu6E,WAAW5iF,GAC/B4iF,EAAav6E,KAAKu6E,WAAW3iF,GAEnC,GAAIwjF,IAAiBb,EAIrB,UAGOv6E,KAAKq7E,sBAAsB1jF,EAAMC,EAAI,OAAQ2kE,EAAKt9B,iBAGlDogB,EAAA3B,KAAK09B,EAAcb,GACxB,MAAO1+E,GAQR,KAJmB,WAAfA,EAAM5B,MAAoC,UAAf4B,EAAM5B,MAAmC,iBAAf4B,EAAM5B,OAC9D4B,EAAQ,IAAImD,MAAM6wD,EAAAC,SAAS,EAAa,KAA0Cn1B,EAAAvN,SAASguD,GAAezgD,EAAAvN,SAASuN,EAAAxN,QAAQotD,IAAc1+E,EAAM8e,cAG1I3a,KAAK06E,0BAA0B7+E,IAI/BkE,4BAA4BpI,EAAWC,EAASuiD,EAAuBlb,GAC9E,MAAMu5C,KAA0C,KAAjBx4E,KAAKuoE,cAE9B6S,EAAep7E,KAAKu6E,WAAW5iF,GAC/B4iF,EAAav6E,KAAKu6E,WAAW3iF,GAEnC,IAAI+/E,GAAsC,EAK1C,GAJKa,IACJb,EAAsCt9B,EAAA9e,QAAQ6/C,EAAcb,GAAY,IAGrE5C,GAAgD,SAATx9B,EAC1C,MAAM4xB,EAAAnD,8BAA8B/Y,EAAAC,SAAS,EAAyB,MAAiEic,EAAA9D,4BAA4BgB,YAIpK,IAAK0O,SAA6Ct4B,EAAA7mD,OAAO+hF,GAAa,CACrE,IAAKt7C,EACJ,MAAM8sC,EAAAnD,8BAA8B/Y,EAAAC,SAAS,EAAuB,MAAkCic,EAAA9D,4BAA4BgB,kBAI7HjpE,KAAKM,OAAO1I,EAAI,CAAE0F,WAAW,EAAMq7E,UAAU,KAoBrD54E,MAAMwiB,EAAeg6C;AACpB,OAAIA,EAAKj/D,UACD0C,KAAKs7E,eAAe/4D,EAAUg6C,EAAKiI,UAGpCxkE,KAAKu7E,kBAAkBh5D,GAGvBxiB,eAAewiB,EAAeiiD,GAGrC,MAAMgX,EAAgB,CAAEnjF,KAAM2H,KAAKu6E,WAAWh4D,GAAWiiD,SAAAA,GACnD9oD,EAASiqC,EAAA17C,OAAOjK,KAAKo6E,wBAAyBoB,GAKpD,OAFAx7E,KAAKy7E,2BAEE5iE,EAAAxD,aAAa,KAGnBqG,IAGA1b,KAAKy7E,6BAIC17E,2BAIPC,KAAKq6E,6BAA6B15D,QAAQ0D,UACzCrkB,KAAK07E,+BAIC37E,uCAGP,GAAIC,KAAK27E,4BAA4BC,EAAAlZ,YACpC1iE,KAAK27E,iBAAiBrY,WAAWtjE,KAAKo6E,8BAWtC,GAJAvhE,EAAA7D,QAAQhV,KAAK27E,kBACb37E,KAAK27E,sBAAmB5hF,EAGpBiG,KAAKo6E,wBAAwB5jF,OAAS,EAAG,CAC5C,IAAIqlF,EAUAtY,OAA8CxpE,GAGzB,QAAzB2nE,EAAgB,QAAhB7sD,EAAI7U,KAAKmQ,eAAO,IAAA0E,OAAA,EAAAA,EAAEsrC,eAAO,IAAAuhB,OAAA,EAAAA,EAAEoa,aAC1BD,EAAcE,EAAArZ,YACda,EAA6B,QAAfyY,EAAGh8E,KAAKmQ,eAAO,IAAA6rE,OAAA,EAAAA,EAAE77B,SAO7B07B,EAF0C,IAAxC77E,KAAKo6E,wBAAwB5jF,OAC5BqyB,EAAA/B,UACWm1D,EAAAvZ,YAEAqZ,EAAArZ,YAMDkZ,EAAAlZ;AAKhB1iE,KAAK27E,iBAAmB,IAAIE,EAC3B77E,KAAKo6E,wBACL7iE,GAASvX,KAAKm6E,iBAAiBliE,KAAK41D,EAAAtB,cAAch1D,IAClDkS,IACkB,UAAbA,EAAIjX,MACPxS,KAAKk6E,sBAAsBjiE,KAAKwR,EAAI1qB,SAGrCiB,KAAKu7D,WAAW9xC,EAAIjX,MAAMiX,EAAI1qB,UAE/BiB,KAAKu7D,WAAWkX,aAAeqH,EAAAjI,SAASlD,MACxCpL,GAGIvjE,KAAKk8E,mCACTl8E,KAAKk8E,iCAAmCl8E,KAAKu7D,WAAW6W,oBAAoB,KACvEpyE,KAAK27E,kBACR37E,KAAK27E,iBAAiBtZ,kBAAkBriE,KAAKu7D,WAAWkX,aAAeqH,EAAAjI,SAASlD,WAQ9E5uE,kBAAkBwiB,GACzB,MAAM45D,EAAiB,IAAIC,EAAA1Z,YAC1B1iE,KAAKu6E,WAAWh4D,GAChB2nD,GAAWlqE,KAAKm6E,iBAAiBliE,KAAK41D,EAAAtB,cAAcrC,IACpDzgD,IACkB,UAAbA,EAAIjX,MACPxS,KAAKk6E,sBAAsBjiE,KAAKwR,EAAI1qB,SAGrCiB,KAAKu7D,WAAW9xC,EAAIjX,MAAMiX,EAAI1qB,UAE/BiB,KAAKu7D,WAAWkX,aAAeqH,EAAAjI,SAASlD,OAGnC0N,EAAmBr8E,KAAKu7D,WAAW6W,oBAAoB,KAC5D+J,EAAe9Z,kBAAkBriE,KAAKu7D,WAAWkX,aAAeqH,EAAAjI,SAASlD,SAG1E,OAAO91D,EAAAzD,mBAAmB+mE,EAAgBE,GAOjCt8E,WAAWwiB,GACpB,OAAOoY,EAAAnP,UAAUjJ,EAAS8d,QAGnBtgC,0BAA0BlE,GACjC,GAAIA,aAAiBkwE,EAAApD,wBACpB,OAAO9sE;CAGR,IAAI5B,EACJ,OAAQ4B,EAAM5B,MACb,IAAK,SACJA,EAAO8xE,EAAA9D,4BAA4BmB,aACnC,MACD,IAAK,SACJnvE,EAAO8xE,EAAA9D,4BAA4BiB,iBACnC,MACD,IAAK,UACJjvE,EAAO8xE,EAAA9D,4BAA4BkB,kBACnC,MACD,IAAK,SACJlvE,EAAO8xE,EAAA9D,4BAA4BgB,WACnC,MACD,IAAK,QACL,IAAK,SACJhvE,EAAO8xE,EAAA9D,4BAA4BsB,cACnC,MACD,QACCtvE,EAAO8xE,EAAA9D,4BAA4Be,QAGrC,OAAO+C,EAAAnD,8BAA8B/sE,EAAO5B,GAK7C8F,UACCuE,MAAM0Q,UAEN6D,EAAA7D,QAAQhV,KAAK27E,kBACb37E,KAAK27E,sBAAmB5hF,EAExB8e,EAAA7D,QAAQhV,KAAKk8E,kCACbl8E,KAAKk8E,sCAAmCniF,GA/oB1C6E,EAAAm7E,uBAAAA,oLC/BAn7E,EAAA09E,cAAA,MAICv8E,YAAoBusD,GAAAtsD,KAAAssD,QAAAA,EACnBtsD,KAAKoyE,oBAAsBn0D,EAAA3G,MAAM8B,OAAOkzC,EAAQ8lB,qBAAqB,GAGtEryE,OAAOoZ,EAAY5B,GAClB,OAAQA,GACP,IAAK;AAAuB,OAAOvX,KAAKoyE,oBAGzC,MAAM,IAAIpzE,MAAM,oBAAoBuY,KAGrCxX,KAAKoZ,EAAY80B,EAAiBtkC,GACjC,OAAQskC,GACP,IAAK,WAAwC,OAA5BjuC,KAAKssD,QAAQimB,SAAS5oE,GAAajR,QAAQyB,UAC5D,IAAK,aAA+C,OAAjC6F,KAAK+yE,WAAWppE,EAAI,GAAIA,EAAI,IAAYjR,QAAQyB,UAGpE,MAAM,IAAI6E,MAAM,mBAAmBivC,KAG5BluC,WAAWskC,EAAkBnjC,GACpC,IAAIq7E,EAAYzlF,QAAQie,IAExB,OAAQsvB,GACP,IAAK,QACJk4C,EAAYzlF,QAAQ+E,MACpB,MACD,IAAK,OACJ0gF,EAAYzlF,QAAQkK,KACpB,MACD,IAAK,OACJu7E,EAAYzlF,QAAQ6kE,KAItB4gB,EAAUp9E,KAAKrI,WAAYoK,KAI7B,MAAas7E,EAEZz8E,YAAoB2iD,GAAA1iD,KAAA0iD,QAAAA,EAEpB0vB,0BACC,OAAOpyE,KAAK0iD,QAAQa,OAAO,uBAG5BxjD,SAASmyE,GACRsK,EAAoBjK,SAASvyE,KAAK0iD,QAASwvB,GAGrCnyE,gBAAgB2iD,EAAmBwvB,GACzC,OAAOxvB,EAAQvjD,KAAK,WAAY+yE,GAGjCnyE,WAAWskC,EAAkBnjC,GAC5BlB,KAAK0iD,QAAQvjD,KAAK,aAAc,CAACklC,EAAUnjC,KAjB7CtC,EAAA49E,oBAAAA,EAqBA,MAAaC,UAA2B3C,EAAAzG,oBAGvCtzE,YAAoB28E,EAA6BnhB,GAChDj3D,MAAMi3D,GADav7D,KAAA08E,OAAAA,EAEnB18E,KAAK8nD,UAAU40B,EAAOtK,oBAAoBF,GAAS3W,EAAWgX,SAASL,KAGxEnyE,SAASmyE,GACR5tE,MAAMiuE,SAASL,GAEflyE,KAAK08E,OAAOnK,SAASL,IAXvBtzE,EAAA69E,mBAAAA,gEC1CA,SAAS1nE,EAAI4nE,EAA+BzK,EAAiBnzE,GAC5D,OAAQmzE;AACP,KAAK4H,EAAAjI,SAASlD,MAAOgO,EAAOzL,MAAMnyE,GAAU,MAC5C,KAAK+6E,EAAAjI,SAASa,MAAOiK,EAAO/kB,MAAM74D,GAAU,MAC5C,KAAK+6E,EAAAjI,SAASngB,KAAMirB,EAAOhhB,KAAK58D,GAAU,MAC1C,KAAK+6E,EAAAjI,SAASpgB,QAASkrB,EAAO37E,KAAKjC,GAAU,MAC7C,KAAK+6E,EAAAjI,SAAS7yE,MAAO29E,EAAO9gF,MAAMkD,GAAU,MAC5C,KAAK+6E,EAAAjI,SAASc,SAAUgK,EAAOvJ,SAASr0E,GAAU,MAClD,QAAS,MAAM,IAAIC,MAAM,qHAlB3BJ,EAAAg+E,qBAAA,SAAqC1lF,EAAc2lF,EAAkBC,EAAkBC,GAEtF,OAD+BplC,EAAQC,iBAAiB,UACzCglC,qBAAqB1lF,EAAM2lF,EAAUC,EAAUC,IAoB/D,MAAaC,UAAsBlD,EAAA7H,mBAQlClyE,YAA6B7I,EAA+B+lF,EAAoB/K,GAC/E5tE,QAD4BtE,KAAA9I,KAAAA,EAA+B8I,KAAAi9E,WAAAA,EAJpDj9E,KAAAoZ,OAAiB,GACjBpZ,KAAAk9E,4BAAoDnjF,EAK3DiG,KAAKuyE,SAASL,GACdlyE,KAAKm9E,sBACLn9E,KAAK8nD,UAAU9nD,KAAKoyE,oBAAoBF,IACnClyE,KAAKo9E,SACRp9E,KAAKo9E,QAAQ7K,SAASL,MAKjBnyE,sBAcP,OAbKC,KAAKk9E,yBACTl9E,KAAKk9E,uBAxDR74D,eAAkCg5D,EAAqBJ,GAEtD,IACC,MAAMK,QAAU,IAAA5kF,QAAA,CAAA2gD,EAAAC,KAAA3B,EAAA,CAAa,UAAQ0B,EAAAC,KACrCgkC,EAAQC,aAAa,KAAM,KAC3B,MAAMC,EAAcnlF,EAAKwB,KAAKojF,EAAY,GAAGI;CAC7C,OAAOC,EAAQG,0BAA0BJ,EAAaG,EAAa,QAAiB,GACnF,MAAO1kF,GACRhC,QAAQ+E,MAAM/C,GAEf,OAAO,KA8CyB4kF,CAAmB19E,KAAK9I,KAAM8I,KAAKi9E,YAC/D/jF,KAAKyjF,IACL,GAAIA,EAAQ,CACX38E,KAAKo9E,QAAUT,EACf38E,KAAKo9E,QAAQ7K,SAASvyE,KAAKyyE,YAC3B,IAAK,MAAMP,MAAEA,EAAKnzE,QAAEA,KAAaiB,KAAKoZ,OACrCrE,EAAI/U,KAAKo9E,QAASlL,EAAOnzE,GAE1BiB,KAAKoZ,OAAS,OAIXpZ,KAAKk9E,uBAGLn9E,KAAKmyE,EAAiBnzE,GACzBiB,KAAKo9E,QACRroE,EAAI/U,KAAKo9E,QAASlL,EAAOnzE,GACfiB,KAAKyyE,YAAcP,GAC7BlyE,KAAKoZ,OAAOjiB,KAAK,CAAE+6E,MAAAA,EAAOnzE,QAAAA,IAI5BgB,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcqH,EAAAjI,SAASlD,OAC/B3uE,KAAK29E,KAAK7D,EAAAjI,SAASlD,MAAO3uE,KAAK2sB,OAAO,CAAC5tB,KAAYmC,KAIrDnB,MAAMhB,KAAoBmC,GACrBlB,KAAKyyE,YAAcqH,EAAAjI,SAASa,OAC/B1yE,KAAK29E,KAAK7D,EAAAjI,SAASa,MAAO1yE,KAAK2sB,OAAO,CAAC5tB,KAAYmC,KAIrDnB,KAAKhB,KAAoBmC,GACpBlB,KAAKyyE,YAAcqH,EAAAjI,SAASngB,MAC/B1xD,KAAK29E,KAAK7D,EAAAjI,SAASngB,KAAM1xD,KAAK2sB,OAAO,CAAC5tB,KAAYmC,KAIpDnB,KAAKhB,KAAoBmC,GACpBlB,KAAKyyE,YAAcqH,EAAAjI,SAASpgB,SAC/BzxD,KAAK29E,KAAK7D,EAAAjI,SAASpgB,QAASzxD,KAAK2sB,OAAO,CAAC5tB,KAAYmC,KAIvDnB,MAAMhB,KAA4BmC,GACjC,GAAIlB,KAAKyyE,YAAcqH,EAAAjI,SAAS7yE,MAE/B,GAAID,aAAmBC,MAAO,CAC7B,MAAMwF,EAAQkE,MAAMxJ,UAAUhH,MAAMiH,KAAKsM,WACzCjH,EAAM,GAAKzF,EAAQ+D,MACnB9C,KAAK29E,KAAK7D,EAAAjI,SAAS7yE,MAAOgB,KAAK2sB,OAAOnoB,SAEtCxE,KAAK29E,KAAK7D,EAAAjI,SAAS7yE,MAAOgB,KAAK2sB,OAAO,CAAC5tB,KAAYmC;AAKtDnB,SAAShB,KAA4BmC,GAChClB,KAAKyyE,YAAcqH,EAAAjI,SAASc,UAC/B3yE,KAAK29E,KAAK7D,EAAAjI,SAASc,SAAU3yE,KAAK2sB,OAAO,CAAC5tB,KAAYmC,KAIxDnB,QACKC,KAAKo9E,QACRp9E,KAAKo9E,QAAQ7jE,QACHvZ,KAAKk9E,wBACfl9E,KAAKk9E,uBAAuBhkF,KAAK,IAAM8G,KAAKuZ,SAI9CxZ,UACKC,KAAKo9E,QACRp9E,KAAK49E,gBACK59E,KAAKk9E,wBACfl9E,KAAKk9E,uBAAuBhkF,KAAK,IAAM8G,KAAK49E,iBAE7C59E,KAAKk9E,4BAAyBnjF,EAGvBgG,gBACHC,KAAKo9E,UACRp9E,KAAKo9E,QAAQS,OACb79E,KAAKo9E,aAAUrjF,GAITgG,OAAOmB,GACd,IAAI7K,EAAS,GAEb,IAAK,IAAIC,EAAI,EAAGA,EAAI4K,EAAK1K,OAAQF,IAAK,CACrC,IAAI4O,EAAIhE,EAAK5K,GAEb,GAAiB,iBAAN4O,EACV,IACCA,EAAI7J,KAAKsD,UAAUuG,GAClB,MAAOpM,IAGVzC,IAAWC,EAAI,EAAI,IAAM,IAAM4O,EAGhC,OAAO7O,GA9HTuI,EAAAo+E,cAAAA,8OCjCcp+E,EAAAwyD,SAAW0sB,EAAAjsB,QAEZjzD,EAAAm/E,qBAAuB3X,EAAA5lE,gBAAsC,uBA0B1E,SAAYw9E,GAKXA,EAAAA,EAAA,UAAA,GAAA,YAKAA,EAAAA,EAAA,OAAA,GAAA;CAVD,CAAYp/E,EAAAo/E,sBAAAp/E,EAAAo/E,oBAAmB,KA6N/B,SAAYC,GAKXA,EAAAA,EAAA,IAAA,GAAA,MAMAA,EAAAA,EAAA,OAAA,GAAA,SAKAA,EAAAA,EAAA,MAAA,GAAA,QAhBD,CAAYr/E,EAAAq/E,sBAAAr/E,EAAAq/E,oBAAmB,KAuF/Br/E,EAAAs/E,iBAAA,MAAAn+E,cAEUC,KAAAm+E,SAAW,IAAIC,EAEfp+E,KAAAq+E,WAAapgE,EAAA3G,MAAM1C,KACnB5U,KAAAs+E,sBAAwBrgE,EAAA3G,MAAM1C,KAEvC7U,eAAeskC,IACftkC,cAAchB,IACdgB,cAAcw+E,IAEdx+E,WAGD,MAAaq+E,EACZr+E,YACAA,QACAA,MAAMjB,IACNiB,OAAOjB,KAJRF,EAAAw/E,aAAAA,8EC7VA,IAAII,EAGJ,oDAAI31D,EAAA3B,MAAO,CAGVs3D,EAAU,GAG0B,IAAhC3gF,OAAOC,KAAK0gF,GAAShoF,QACxBghE,EAAA76C,OAAO6hE,EAAS,CACf3iB,QAAS,aACT4iB,SAAU,6BACVC,UAAW,iBACXC,YAAa,aAIf,MAAMp4D,EAAKC,SAASC,eAAe,uCAC7Bm4D,EAA0Br4D,GAAMA,EAAGG,aAAa,iBAClDk4D,GACHpnB,EAAA76C,OAAO6hE,EAASnjF,KAAKC,MAAMsjF,QAKxB,CAAA,QAAuB,IAAZjnC,GAA+D,mBAA7BA,EAAQC,iBAwBzD,MAAM,IAAI54C,MAAM,2CAxB0E;AAG1F,MAAM6/E,EAAWxmF,EAAK80B,QAAQ4sB,EAAAnW,qBAAqB+T,EAAS,KAE5D6mC,EAAUhnB,EAAA76C,OAAO,GAAIg7B,EAAQC,iBAAiBv/C,EAAKwB,KAAKglF,EAAU,kBAClE,MAAMC,EAAMnnC,EAAQC,iBAAiBv/C,EAAKwB,KAAKglF,EAAU,iBAGrDE,EAAA/jF,IAAgB,YACnBw8D,EAAA76C,OAAO6hE,EAAS,CACfE,UAAW,GAAGF,EAAQE,gBACtBD,SAAU,GAAGD,EAAQC,eACrBO,eAAgB,GAAGR,EAAQQ,uBAI7BxnB,EAAA76C,OAAO6hE,EAAS,CACf3iB,QAASijB,EAAIjjB,WASfj9D,EAAAizD,QAAe2sB,iHC1Bf,SAASS,EAAavkF,EAAsB8X,GAC3C,OAAIqW,EAAA/B,UAPL,SAA2BpsB,EAAsB8X,GAGhD,MAAO,gBAFO4mC,EAAOK,WAAW,OAAOC,OAAOh/C,GAAci/C,OAAO,UAEnCulC,EAAArtB,QAAQgK,WAAWrpD,SAK3C2sE,CAAkBzkF,EAAc8X,GAnBzC,SAAyB9X,EAAsB8X,GAC9C,MAAM4sE,EAAiBrkF,QAAQC,IAAqB,gBAEpD,GAAI4D,EAAAygF,gBAAkBD,EAAgB,CACrC,MAAME,EAAQlmC,EAAOK,WAAW,OAAOC,OAAOh/C,GAAci/C,OAAO,OAAO3iB,OAAO,EAAG,GACpF,OAAO3+B,EAAKwB,KAAK+E,EAAAygF,cAAe,UAAUC,KAASJ,EAAArtB,QAAQgK,WAAWrpD,UAGvE,OAAOna,EAAKwB,KAAKa,EAAc,GAAGwkF,EAAArtB,QAAQgK,WAAWrpD,UAc9C+sE,CAAgB7kF,EAAc8X;yHAxBzB5T,EAAAygF,cAAgBtkF,QAAQC,IAAqB,gBAuD1D,IAAAwkF,EAAA,MAAA,MAAaA,EA8MZz/E,YAAoB0/E,EAA2BC,GAC9C,GADmB1/E,KAAAy/E,MAAAA,EAA2Bz/E,KAAA0/E,UAAAA,GACzC3kF,QAAQC,IAAiB,YAAG,CAChC,MAAMyD,EAAMkhF,EAAA5vB,iBAAiB,IAAI34D,MAAQsH,QAAQ,eAAgB,IACjE3D,QAAQC,IAAiB,YAAI3C,EAAKwB,KAAKmG,KAAKtF,aAAc,OAAQ+D,GAGnEuB,KAAK0mE,SAAW3rE,QAAQC,IAAiB,YAhN1CkG,WAAyB,OAAOlB,KAAKy/E,MAGrCG,cAAwB,OAAOvnF,EAAK80B,QAAQ4sB,EAAAnW,qBAAqB+T,EAAS,KAE1EkoC,eAAyB,OAAO7/E,KAAK0/E,UAGrCI,cAAwB,OAxCLD,EAwCuB7/E,KAAK6/E,SAxCVD,EAwCoB5/E,KAAK4/E,QAxCRG,EAwCiB//E,KAAK+/E,QArCxEl3D,EAAA/B,UACCi5D,EACI1nF,EAAKwB,KAAKxB,EAAK80B,QAAQ0yD,GAAW,MAAO,GAAGX,EAAArtB,QAAQmuB,uBAGrD3nF,EAAKwB,KAAK+lF,EAAS,UAAW,gBAIlC/2D,EAAA7B,QACC+4D,EACI1nF,EAAKwB,KAAKxB,EAAK80B,QAAQ0yD,GAAW,MAAO,GAAGX,EAAArtB,QAAQmuB,mBAGrD3nF,EAAKwB,KAAK+lF,EAAS,UAAW,eAIlCG,EACI1nF,EAAKwB,KAAK+lF,EAAS,MAAO,QAG3BvnF,EAAKwB,KAAK+lF,EAAS,UAAW,eAzBtC,IAAoBC,EAAkBD,EAAiBG,EA6CtD/rC,eAAyB,OAAOwG,EAAGylC,UAGnCvlF,mBACC,MAAM0kF,EAAiBrkF,QAAQC,IAAqB;CACpD,OAAIokF,EACI/mF,EAAKwB,KAAKulF,EAAgB,aAG3Bc,EAAiBlgF,KAAKy/E,MAAO1kF,SAIrColF,sBAA6B,OAAOz8C,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAKmG,KAAKtF,aAAc,SAG1E0lF,0BAAiC,OAAOpgF,KAAKmgF,gBAG7CE,uBAA8B,OAAOC,EAAUnvC,SAASnxC,KAAKogF,oBAAqB,iBAGlFG,uBAA8B,OAAOD,EAAUnvC,SAASnxC,KAAKogF,oBAAqB,QAGlFI,8BAAqC,OAAO98C,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAKmG,KAAK0mE,SAAU,qBAG9E+Z,8BAAqC,OAAOH,EAAUnvC,SAASzN,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAKmG,KAAKtF,aAAc,YAAa,iBAGlHsiE,wBAAkC,OAAO3kE,EAAKwB,KAAKmG,KAAKmgF,gBAAgB9/C,OAAQ,iBAGhFqgD,2BAAqC,OAAOroF,EAAKwB,KAAKmG,KAAKmgF,gBAAgB9/C,OAAQ,oBAGnFsgD,0BAAiC,OAAOL,EAAUnvC,SAASnxC,KAAKogF,oBAAqB,oBAGrFQ,6BAAoC,OAAON,EAAUnvC,SAASnxC,KAAKogF,oBAAqB,uBAGxFS,mBACC,MAAMzB,EAAiBrkF,QAAQC,IAAqB;CACpD,OAAIokF,EACI17C,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAKulF,EAAgB,cAGpC17C,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAKmG,KAAKg0C,SAAUkrC,EAAArtB,QAAQmtB,eAAgB,cAIlE8B,mBAA0B,OAAOR,EAAUnvC,SAASnxC,KAAKogF,oBAAqB,YAG9EW,6BAAwC,QAAS/gF,KAAKy/E,MAAMuB,yBAG5DC,iBAAwB,OAAOv9C,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAKmG,KAAKtF,aAAcqsE,EAAAT,UAGrE4a,2BAAqC,OAAO7oF,EAAKwB,KAAKmG,KAAKihF,WAAW5gD,OAAQ,mBAG9E8gD,6BAAoC,OAAOz9C,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAKmG,KAAKtF,aAAc,eAGjF0mF,wBAAkC,OAAO/oF,EAAKwB,KAAKmG,KAAKtF,aAAc,iBAGtE2mF,4BACC,MAAMC,EAAWC,EAAavhF,KAAKy/E,MAAM,0BAA2B1kF,SACpE,OAAIumF,GAGIjpF,EAAKmzB,UAAUnzB,EAAKwB,KAAKkgD,EAAAnW,qBAAqB+T,EAAS,IAAK,KAAM,eAK3E6pC,qBACC,MAAMF,EAAWC,EAAavhF,KAAKy/E,MAAM,kBAAmB1kF,SAE5D,GAAIumF,EACH,OAAOA,EAGR,MAAMG,EAAmB1mF,QAAQC,IAAuB,kBACxD,GAAIymF,EACH,OAAOA,EAGR,MAAMrC,EAAiBrkF,QAAQC,IAAqB,gBACpD,OAAIokF,EACI/mF,EAAKwB,KAAKulF,EAAgB,cAG3B/mF,EAAKwB,KAAKmG,KAAKg0C,SAAUkrC,EAAArtB,QAAQmtB,eAAgB;AAGhD0C,0BACR,OAAQ1hF,KAAKy/E,MAAM,yBAA2B,IAAI9lF,IAAK8K,GAAc88E,EAAa98E,EAAG1J,UAE7E4mF,iCACR,OAAQ3hF,KAAKy/E,MAAM,iCAAmC,IAAI9lF,IAAK8K,GAAc88E,EAAa98E,EAAG1J,UAI9F6mF,sCACC,MAAMvqD,EAAIr3B,KAAKy/E,MAAMuB,yBACrB,GAAIt4E,MAAMC,QAAQ0uB,GACjB,OAAOA,EAAE19B,IAAI8K,GACR,kBAAkB8jB,KAAK9jB,GACnBi/B,EAAA9D,IAAItkC,MAAMmJ,GAEXi/B,EAAA9D,IAAInnC,KAAKJ,EAAKmzB,UAAU/mB,KAOlCo9E,gCACC,MAAMxqD,EAAIr3B,KAAKy/E,MAAMqC,mBACrB,GAAIzqD,EACH,MAAI,kBAAkB9O,KAAK8O,GACnBqM,EAAA9D,IAAItkC,MAAM+7B,GAEXqM,EAAA9D,IAAInnC,KAAKJ,EAAKmzB,UAAU6L,IAKjC0qD,wBACC,GAAI/hF,KAAKy/E,MAAM,sBACd,OAAO,EAER,MAAMsC,EAAoB/hF,KAAKy/E,MAAM,qBACrC,GAAIsC,EAAmB,CACtB,GAAiC,iBAAtBA,EACV,MAAO,CAACA,GAET,GAAIr5E,MAAMC,QAAQo5E,IAAsBA,EAAkBvrF,OAAS,EAClE,OAAOurF,EAGT,OAAO,EAGRC,kCACC,OAAIt5E,MAAMC,QAAQ3I,KAAKkB,KAAK,wBACpBlB,KAAKkB,KAAK,uBAGd,wBAAyBlB,KAAKkB,KAC1B,QADR,EAQD+gF,yBAAsD,OAAOC,EAAuBliF,KAAKy/E,MAAOz/E,KAAK+/E,SAErGoC;AAA+C,QAASniF,KAAKkB,KAAKihF,8BAElEpC,cAAyB,OAAQhlF,QAAQC,IAAgB,WACzD01D,cAAyB,QAAS1wD,KAAKy/E,MAAM/uB,QAC7C37C,UAAgC,OAAO/U,KAAKy/E,MAAM1qE,IAGlDqtE,oBAA8B,OAAOnD,EAAaj/E,KAAKtF,aAAc,QAGrE2nF,sBAAgC,OAAOpD,EAAaj/E,KAAKtF,aAAc,UAGvE4nF,wBAA8C,OAAOvnF,QAAQC,IAAiC,kCAAKjB,EAGnGwoF,+BAAsC,OAAOjC,EAAUnvC,SAASzN,EAAA9D,IAAInnC,KAAKuH,KAAKtF,cAAe,aAE7F8nF,qBAAgC,QAASxiF,KAAKy/E,MAAM,mBACpDgD,2BAAsC,QAASziF,KAAKy/E,MAAM,0BAE1DiD,mBAAyC,OAAO1iF,KAAKy/E,MAAc,OACnEkD,oBAA+B,QAAS3iF,KAAKy/E,MAAM,mBAUpD,OA/MC5Y,EAAA,CADC+b,EAAAhhF,qCAMDilE,EAAA,CADC+b,EAAAhhF,qCAMDilE,EAAA,CADC+b,EAAAhhF,sCAIDilE,EAAA,CADC+b,EAAAhhF,0CAWDilE,EAAA,CADC+b,EAAAhhF,6CAIDilE,EAAA,CADC+b,EAAAhhF,iDAIDilE,EAAA,CADC+b,EAAAhhF;AAIDilE,EAAA,CADC+b,EAAAhhF,8CAIDilE,EAAA,CADC+b,EAAAhhF,qDAIDilE,EAAA,CADC+b,EAAAhhF,qDAIDilE,EAAA,CADC+b,EAAAhhF,+CAIDilE,EAAA,CADC+b,EAAAhhF,kDAIDilE,EAAA,CADC+b,EAAAhhF,iDAIDilE,EAAA,CADC+b,EAAAhhF,oDAIDilE,EAAA,CADC+b,EAAAhhF,0CAWDilE,EAAA,CADC+b,EAAAhhF,0CAIDilE,EAAA,CADC+b,EAAAhhF,oDAIDilE,EAAA,CADC+b,EAAAhhF,wCAIDilE,EAAA,CADC+b,EAAAhhF,kDAIDilE,EAAA,CADC+b,EAAAhhF,oDAIDilE,EAAA,CADC+b,EAAAhhF,+CAIDilE,EAAA,CADC+b,EAAAhhF,mDAWDilE,EAAA,CADC+b,EAAAhhF,4CAqBQilE,EAAA,CAAR+b,EAAAhhF,iDAGQilE,EAAA,CAAR+b,EAAAhhF;AAKDilE,EAAA,CADC+b,EAAAhhF,6DAeDilE,EAAA,CADC+b,EAAAhhF,uDAyCDilE,EAAA,CADC+b,EAAAhhF,gDAGDilE,EAAA,CADC+b,EAAAhhF,2DAQDilE,EAAA,CADC+b,EAAAhhF,2CAIDilE,EAAA,CADC+b,EAAAhhF,6CAIDilE,EAAA,CADC+b,EAAAhhF,+CAIDilE,EAAA,CADC+b,EAAAhhF,sDAiBF49E,GAtNA,GAwNA,SAAgB0C,EAAuBhhF,EAAkB2hF,GACxD,OAAOC,EAAe5hF,EAAK,sBAAuBA,EAAK,0BAA2B,KAAM2hF,EAAS3hF,EAAK6hF,SAOvG,SAASD,EAAeE,EAA8BC,EAAiCC,EAA0BL,EAAkBE,GAClI,MACM9zC,EAAOzsC,OADGygF,GAAeD,KACGH,EAA6B,KAAnBK,GAG5C,MAAO,CAAEj0C,KAAAA,EAAMk0C,QAFHl0C,GAAOomC,UAAU4N,GAEFF,QAAAA,GAG5B,SAAgBxB,EAAa53E,EAAyB5O,GACrD,IAAK4O,EACJ,OAKD,MAAMwc,EAAW9tB,EAAK8B,QAAQwP,GAE9B,OAAItR,EAAKmzB,UAAU7hB,KAASwc,EACpBA,EAGD9tB,EAAK8B,QAAQY,EAAQC,IAAgB,YAAKD,EAAQ6tB,MAAOjf,GAGjE,SAAgBu2E,EAAiBh/E,EAAkBnG,GAClD,OAAOwmF,EAAargF,EAAK,iBAAkBnG,IAAY1C,EAAK8B,QAAQgxB,EAAM8uB,uBAAuBl/C,EAAQirB,WAzP7FpnB,EAAA4gF,mBAAAA,EAwNb5gF,EAAAsjF,uBAAAA,EAIAtjF,EAAAwkF,gBAAA,SAAgCliF,EAAkB2hF,GACjD,OAAOC,EAAe5hF,EAAK,kBAAmBA,EAAK,sBAAuB,KAAM2hF;AAWjFjkF,EAAA2iF,aAAAA,EAgBA3iF,EAAAshF,iBAAAA,0MCtSA,MAAMmD,EAA4B,CAAC,KAAM,KAAM,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAS,SAC7E,WAApBnE,EAAArtB,QAAQyxB,SACXD,EAAgBlsF,KAAK,MAGtB,IAAAosF,EAAA,MAAA,IAAaA,EAAb,cAA0C1qE,EAAAlE,WASzC5U,YAC+CyjF,EACzBloB,EACSC,GAE9Bj3D,QAJ8CtE,KAAAwjF,2BAAAA,EAEhBxjF,KAAAu7D,WAAAA,EANdv7D,KAAAyjF,sBAAuCzjF,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAClEhY,KAAA0jF,qBAAoC1jF,KAAKyjF,sBAAsBlsE,MAQvEvX,KAAK0Y,MAAQ1Y,KAAK8nD,UAAU,IAAI67B,EAAmBroB,EAAoBC,IAEvEv7D,KAAK8nD,UAAU07B,EAA2BzpB,sBAAsB,EAAGI,MAAAA,KAAYn6D,KAAK+5D,sBAAsBI,KAC1Gn6D,KAAK8nD,UAAU07B,EAA2BvpB,wBAAwB,EAAG2B,WAAAA,KAAiB57D,KAAKi6D,wBAAwB2B,KAGpH77D,eAAeyS,GACd,OAAQ,IAAJA,EACI9Z,QAAQyB,QAAQ,IAAIkpF,IAErBrjF,KAAK0Y,MAAMkrE,mBAChB1qF,KAAK2qF,IACL,MAAMC,EAAgB,IAAJtxE,EAAoC3U,OAAOC,KAAK+lF,GAAiB,IAAIR,KAAoBxlF,OAAOC,KAAK+lF,IACvH,OAAOl+B,EAAA98C,SAASi7E,KAIX/jF,sBAAsBu5D;AACzBA,GAAaA,EAAUE,UAAYF,EAAUE,SAASmG,aAAerG,EAAUE,SAASmG,YAAYC,eAAiBtG,EAAUE,SAASmG,YAAYC,cAAcppE,SACrKwJ,KAAKu7D,WAAW3D,MAAM,2CAA4C0B,EAAUsC,WAAWjiD,IACvF3Z,KAAK05C,SAASxgD,KAAK0lC,IAAiBA,GAAW5+B,KAAKyjF,sBAAsBxrE,UAIpElY,wBAAwB67D,GAC/B57D,KAAK0Y,MAAMkrE,mBACT1qF,KAAK2qF,IACDhmF,OAAOC,KAAK+lF,GAAe33E,KAAKoa,GAAYu9D,EAAcv9D,IAAau9D,EAAcv9D,GAAUs0C,WAAW1uD,KAAKpT,GAAKirF,EAAAlkB,kBAAkB/mE,EAAEkrF,oBAAqBpoB,OAChK57D,KAAKu7D,WAAW3D,MAAM,6CAA8CgE,EAAWjiD,IAC/E3Z,KAAK05C,SAASxgD,KAAK0lC,IAAiBA,GAAW5+B,KAAKyjF,sBAAsBxrE,YAK9ElY,SACC,OAAOrH,QAAQgB,IAAI,CAACsG,KAAK0Y,MAAMkrE,mBAAoB5jF,KAAKwjF,2BAA2B7oB,iBACjFzhE,KAAK,EAAEiU,EAAS82E,KAAejkF,KAAK0Y,MAAMghC,OAAOuqC,GAChD/qF,KAAKgrF,IAAYv+B,EAAA7+C,OAAOjJ,OAAOC,KAAKqP,GAAUtP,OAAOC,KAAKomF,QAE/D,OAtDaX,EAAoB1c,EAAA,CAU9BC,EAAA,EAAAqd,EAAAjd,6BACAJ,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAAgT,EAAAhI,cAZUyR,IAAb,GAAa3kF,EAAA2kF,qBAAAA,EAwDb,IAAAI,EAAA,MAAA,IAAMA,EAAN,cAAiC9qE,EAAAlE,WAOhC5U,YACsBu7D,EACSC,GAE9Bj3D,QAF8BtE,KAAAu7D,WAAAA,EAPvBv7D,KAAA6jF,cAAuD;AAU9D7jF,KAAKokF,sBAAwBzpD,EAAA9gC,KAAKyhE,EAAmB5gE,aAAc,sBACnEsF,KAAKqkF,yBAA2B,IAAIp4C,EAAA7pB,MAGrCriB,mBAEC,OAAIC,KAAKqkF,yBAAyBjlF,OAASY,KAAKskF,iBACxCtkF,KAAKukF,oBACVrrF,KAAK,IAAM8G,KAAK6jF,eAEZnrF,QAAQyB,QAAQ6F,KAAK6jF,eAG7B9jF,OAAO66D,GACN,OAAO56D,KAAKukF,kBAAkBV,IAC7BhmF,OAAOC,KAAK+lF,GAAetkF,QAAQ+mB,UAAmBu9D,EAAcv9D,IACpEtmB,KAAKwkF,kCAAkCX,KAAkBjpB,KACvD1hE,KAAK,IAAM8G,KAAK6jF,eAGZ9jF,kCAAkC8jF,KAAyDjpB,GAClG,IAAK,MAAMtB,KAAasB,EACnBtB,GAAaA,EAAUE,UAAYF,EAAUE,SAASmG,aAAerG,EAAUE,SAASmG,YAAYC,eAAiBtG,EAAUE,SAASmG,YAAYC,cAAcppE,QACrKwJ,KAAKykF,iCAAiCZ,EAAevqB,GAGvDz7D,OAAOC,KAAK+lF,GAAetkF,QAAQiyE,GAAcxxE,KAAK0kF,WAAWb,EAAcrS,KAGxEzxE,iCAAiC8jF,EAAsDvqB,GAC9F,MAAM0qB,EAAsB1qB,EAAUsC,WAChCgE,EAAgBtG,EAAUE,SAASmG,aAAerG,EAAUE,SAASmG,YAAYC,cAAgBtG,EAAUE,SAASmG,YAAYC,cAAgB,GACtJ,IAAK,MAAM+kB,KAA4B/kB,EACtC,GAAItG,EAAUzgE,SAASonC,SAAWkQ,EAAA5C,QAAQ90C,MAAQmsF,EAAAtT,oBAAoBqT,GAA2B,CAChG,IAAIE,EAAehB,EAAcc,EAAyBnT,YACrDqT,IACJA,EAAe,CAAE5oF,KAAM,GAAI2+D,WAAY;AAAI1+D,aAAc,IACzD2nF,EAAcc,EAAyBnT,YAAcqT,GAEtD,IAAIC,EAA0BD,EAAajqB,WAAWvyD,OAAOvP,GAAKirF,EAAAlkB,kBAAkB/mE,EAAEkrF,oBAAqBA,IAAsB,GAC7Hc,EACHA,EAAwBjpB,QAAUvC,EAAUE,SAASqC,QAErDgpB,EAAajqB,WAAWzjE,KAAK,CAAE6sF,oBAAAA,EAAqBnoB,QAASvC,EAAUE,SAASqC,UAEjF,IAAK,MAAM4V,KAAekT,EAAyBzoF,aAClD2oF,EAAa3oF,aAAau1E,EAAY93D,IAAMghB,EAAA9gC,KAAKy/D,EAAUzgE,SAASwnC,OAAQoxC,EAAYp5E,OAMpF0H,WAAW8kF,GAClB,GAAIA,EAAc,CACjB,MAAME,EAAMC,EAAAvrC,WAAW,OACvB,IAAK,MAAM6f,KAAaurB,EAAajqB,WACpCmqB,EAAIrrC,OAAO4f,EAAU0qB,oBAAoBnqC,MAAQyf,EAAU0qB,oBAAoBrqE,IAAI+/B,OAAO4f,EAAUuC,SAErGgpB,EAAa5oF,KAAO8oF,EAAIprC,OAAO,QAIzB55C,kBAAqBQ,EAAyE,KAAM,OAC3G,OAAOP,KAAKqkF,yBAAyBvkE,MAAM,KAC1C,IAAIzpB,EAAmB,KACvB,OAAO4rE,EAAI/nE,SAAS8F,KAAKokF,sBAAuB,QAC9ClrF,UAAKa,EAAWf,GAAoB,WAAbA,EAAIiB,KAAoBvB,QAAQyB,QAAQ,MAAQzB,QAAQ0B,OAAOpB,IACtFE,KAA4CsnD,IAAS,IAAM,OAAOnlD,KAAKC,MAAMklD,GAAQ,MAAO1nD,GAAK,MAAO,MACxGI,KAAK2qF,IAAmBxtF,EAASkK,EAAGsjF,GAAuBA,IAC3D3qF,KAAK2qF,IACL,IAAK,MAAMv9D,KAAYzoB,OAAOC,KAAK+lF,GAC7BA,EAAcv9D,WACXu9D,EAAcv9D,GAGvBtmB,KAAK6jF,cAAgBA,EACrB7jF,KAAKskF,kBAAmB,EACxB,MAAM9jC,EAAMnlD,KAAKsD,UAAUqB,KAAK6jF,eAEhC,OADA7jF,KAAKu7D,WAAW3D,MAAM,yBAA0BpX,GACzCyhB,EAAI3nE,UAAU0F,KAAKokF,sBAAuB5jC;GAEjDtnD,KAAK,IAAM7C,EAAQwF,GAASmE,KAAKu7D,WAAW1/D,MAAMA,QAGvD,OAhGM8nF,EAAkB9c,EAAA,CAQrBC,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAAgT,EAAAhI,cATG6R,IAAN,sIClFa/kF,EAAAqmF,gBAAkB7e,EAAA5lE,gBAAiC,oJC4CnD5B,EAAAsmF,SAAsB,IArBnC,MAAAnlF,cAEkBC,KAAA3F,KAAO,IAAI4F,IAErBF,IAAI4Z,EAAYtf,GACtB8qF,EAAOtmF,GAAG20D,EAAMt3B,SAASviB,IACzBwrE,EAAOtmF,GAAG20D,EAAMr3B,SAAS9hC,IACzB8qF,EAAOtmF,IAAImB,KAAK3F,KAAK6O,IAAIyQ,GAAK,8CAE9B3Z,KAAK3F,KAAK+F,IAAIuZ,EAAItf,GAGZ0F,MAAM4Z,GACZ,OAAO3Z,KAAK3F,KAAK6O,IAAIyQ,GAGf5Z,GAAG4Z,GACT,OAAO3Z,KAAK3F,KAAK6F,IAAIyZ,IAAO,2ICvCjB/a,EAAAwmF,WAAa,CACzBC,iBAAkB,2BAoEnB,MAAMC,EAA2B,IA5BjC,MAOCvlF,cAHiBC,KAAAulF,mBAAqB,IAAItnE,EAAAjG,QACjChY,KAAAwlF,kBAAmCxlF,KAAKulF,mBAAmBhuE,MAGnEvX,KAAKylF,YAAc;AAGb1lF,eAAe6gC,EAAa8kD,GApBpC,IAAqB/rE,EAqBnB3Z,KAAKylF,aArBc9rE,EAqBUinB,EApB1BjnB,EAAGnjB,OAAS,GAAkC,MAA7BmjB,EAAGyZ,OAAOzZ,EAAGnjB,OAAS,GACnCmjB,EAAG/d,UAAU,EAAG+d,EAAGnjB,OAAS,GAE7BmjB,IAiB+B+rE,EACrC1lF,KAAKulF,mBAAmBttE,KAAK2oB,GAGvB7gC,oBAAoB6gC,GAC1B5gC,KAAKulF,mBAAmBttE,KAAK2oB,GAGvB7gC,yBACN,MAAO,CACN4lF,QAAS3lF,KAAKylF,eAOjBz/D,EAASk/D,SAAS7kF,IAAIzB,EAAAwmF,WAAWC,iBAAkBC,wZCjEtC1mF,EAAAwmF,WAAa,CACzBQ,cAAe,oCAqEhB,SAAkBC,GAIjBA,EAAAA,EAAA,YAAA,GAAA,cAIAA,EAAAA,EAAA,QAAA,GAAA,UAIAA,EAAAA,EAAA,OAAA,GAAA,SAIAA,EAAAA,EAAA,SAAA,GAAA,WAIAA,EAAAA,EAAA,qBAAA,GAAA,uBAIAA,EAAAA,EAAA,oBAAA,GAAA;CAxBD,CAAkBjnF,EAAAinF,qBAAAjnF,EAAAinF,mBAAkB,KA0DvBjnF,EAAAknF,YAAuF,CAAE/kB,WAAY,GAAIglB,kBAAmB,IAC5HnnF,EAAAonF,oBAA+F,CAAEjlB,WAAY,GAAIglB,kBAAmB,IACpInnF,EAAAqnF,gBAA2F,CAAEllB,WAAY,GAAIglB,kBAAmB,IAChInnF,EAAAsnF,2BAAsG,CAAEnlB,WAAY,GAAIglB,kBAAmB,IAC3InnF,EAAAunF,eAA0F,CAAEplB,WAAY,GAAIglB,kBAAmB,IAC/HnnF,EAAAwnF,iBAA4F,CAAErlB,WAAY,GAAIglB,kBAAmB,IAEjInnF,EAAAynF,iCAAmC,6CAEhD,MAAMC,EAAuBz9D,EAAAq8D,SAASqB,GAA8BC,EAAApB,WAAeC,kBAwQnF,SAAgBoB,EAAgBj0E,GAE/B,OADU9J,MAAMC,QAAQ6J,GAAmBA,EAAM,GAAaA,GAE7D,IAAK,UACJ,OAAO,EACR,IAAK,UACL,IAAK,SACJ,OAAO,EACR,IAAK,SACJ,MAAO,GACR,IAAK,QACJ,MAAO,GACR,IAAK,SACJ,MAAO,GACR,QACC,OAAO,MAjBG5T,EAAA8nF,0BAA4B,IAAIjzD,OADnB,aAG1B70B,EAAA6nF,gBAAAA,EAoBA,MAAME,EAAwB,IA1R9B,MAeC5mF,cARiBC,KAAA4mF,oBAAsB,IAAIzmF,IAE1BH,KAAA6mF,mBAAqB,IAAI5oE,EAAAjG,QACjChY,KAAA8mF,kBAAiC9mF,KAAK6mF,mBAAmBtvE,MAEjDvX,KAAA+mF,0BAA+C,IAAI9oE,EAAAjG;AAC3DhY,KAAAgnF,yBAA4ChnF,KAAK+mF,0BAA0BxvE,MAGnFvX,KAAKinF,kCAAoC,CACxCttE,GAAI,mBACJutE,MAAOh4B,EAAIY,SAAS,EAA+B,MACnDiR,WAAY,IAEb/gE,KAAKmnF,0BAA4B,CAACnnF,KAAKinF,mCACvCjnF,KAAKonF,+BAAiC,CAAErmB,WAAY,GAAIglB,kBAAmB,GAAIsB,sBAAsB,EAAOC,aAAc,uCAAwCC,qBAAqB,EAAMC,eAAe,GAC5MxnF,KAAKynF,wBAA0B,GAC/BznF,KAAK0nF,gCAAkC,GAEvCpB,EAAqBqB,eAAe/oF,EAAAynF,iCAAkCrmF,KAAKonF,gCAGrErnF,sBAAsB6nF,EAAmCC,GAAoB,GACnF7nF,KAAK8nF,uBAAuB,CAACF,GAAgBC,GAGvC9nF,uBAAuBgoF,EAAsCF,GAAoB,GACvF,MAAM9mB,EAAuB,GAC7BgnB,EAAexoF,QAAQqoF,IACtB7mB,EAAW5pE,QAAQ6I,KAAKgoF,8BAA8BJ,EAAeC,IACrE7nF,KAAKmnF,0BAA0BhwF,KAAKywF,GACpC5nF,KAAKioF,0BAA0BL,KAGhCtB,EAAqBqB,eAAe/oF,EAAAynF,iCAAkCrmF,KAAKonF,gCAC3EpnF,KAAK6mF,mBAAmB5uE,OACxBjY,KAAK+mF,0BAA0B9uE,KAAK8oD;AAG9BhhE,yBAAyBgoF,GAC/B,MAAMhnB,EAAuB,GACvBmnB,EAA2BN,IAChC,GAAIA,EAAc7mB,WACjB,IAAK,MAAMtiE,KAAOmpF,EAAc7mB,WAO/B,OANAA,EAAW5pE,KAAKsH,UAETuB,KAAKynF,wBAAwBhpF,UAG7BG,EAAAknF,YAAY/kB,WAAWtiE,GACtBmpF,EAAc7mB,WAAWtiE,GAAK6gF,OACrC,KAAA,SACQ1gF,EAAAonF,oBAAoBjlB,WAAWtiE,GACtC,MACD,KAAA,SACQG,EAAAqnF,gBAAgBllB,WAAWtiE,GAClC,MACD,KAAA,SACQG,EAAAsnF,2BAA2BnlB,WAAWtiE,GAC7C,MACD,KAAA,SACQG,EAAAunF,eAAeplB,WAAWtiE,GACjC,MACD,KAAA,EACA,KAAA,SACQG,EAAAwnF,iBAAiBrlB,WAAWtiE,GAKnCmpF,EAAcO,OACjBP,EAAcO,MAAM5oF,QAAQuQ,GAAQo4E,EAAwBp4E,KAG9D,IAAK,MAAM83E,KAAiBG,EAAgB,CAC3CG,EAAwBN,GACxB,MAAMlsF,EAAQsE,KAAKmnF,0BAA0BxlF,QAAQimF,IACtC,IAAXlsF,GACHsE,KAAKmnF,0BAA0BnvF,OAAO0D,EAAO,GAI/C4qF,EAAqBqB,eAAe/oF,EAAAynF,iCAAkCrmF,KAAKonF,gCAC3EpnF,KAAK6mF,mBAAmB5uE,OACxBjY,KAAK+mF,0BAA0B9uE,KAAK8oD,GAG9BhhE,8BAA8BqoF,GACpC,MAAMrnB,EAAuB,GAE7B,IAAK,MAAMsnB,KAAwBD,EAClC,IAAK,MAAM3pF,KAAO4pF,EAAqBC,SAAU,CAChD,MAAMtpE,EAAeqpE,EAAqBC,SAAS7pF,GACnD,GAAIG,EAAA8nF,0BAA0Bn+D,KAAK9pB,IAAgC,iBAAjBugB,EAA2B,CAC5E,MAAMupE,EAA+C,CACpD/1E,KAAM,SACNq/C,QAAS7yC;AACTwpE,YAAat5B,EAAIY,SAAS,EAAgC,KAAgErxD,GAC1HgqF,KAAM7pF,EAAAynF,kCAEPznF,EAAAknF,YAAY/kB,WAAWtiE,GAAO8pF,EAC9BvoF,KAAKinF,kCAAkClmB,WAAYtiE,GAAO8pF,EAC1DvoF,KAAKynF,wBAAwBhpF,GAAO8pF,EACpCxnB,EAAW5pE,KAAKsH,IAKnBuB,KAAK6mF,mBAAmB5uE,OACxBjY,KAAK+mF,0BAA0B9uE,KAAK8oD,GAG9BhhE,gCAAgCqoF,GACtC,MAAMrnB,EAAuB,GAC7B,IAAK,MAAMsnB,KAAwBD,EAClC,IAAK,MAAM3pF,KAAO4pF,EAAqBC,SACtCvnB,EAAW5pE,KAAKsH,UACTG,EAAAknF,YAAY/kB,WAAWtiE,UACvBuB,KAAKinF,kCAAkClmB,WAAYtiE,UACnDuB,KAAKynF,wBAAwBhpF,GAGtCuB,KAAK6mF,mBAAmB5uE,OACxBjY,KAAK+mF,0BAA0B9uE,KAAK8oD,GAG9BhhE,oCAAoCgoF,GAC1C/nF,KAAK6mF,mBAAmB5uE,OAGlBlY,4BAA4B6mF,GAClC,IAAK,MAAM8B,KAAsB9B,EAChC5mF,KAAK4mF,oBAAoBvmF,IAAIqoF,GAG9B1oF,KAAK2oF,mCAGE5oF,8BAA8B6nF,EAAmCC,GAAoB,EAAMvI,EAAA,GAClGA,EAAQtuB,EAAM30B,kBAAkBurD,EAActI,OAASA,EAAQsI,EAActI,MAC7E,IAAIsJ,EAAyB,GACzB7nB,EAAa6mB,EAAc7mB,WAC/B,GAAIA,EACH,IAAK,IAAItiE,KAAOsiE,EAAY,CAC3B,GAAI8mB,GAAYgB,EAAiBpqF,GAAM,QAC/BsiE,EAAWtiE,GAClB,SAGD,IAAIiD,EAAWq/D,EAAWtiE,GACtBugB,EAAetd,EAASmwD,QACxBb,EAAM50B,YAAYpd,KACrBtd,EAASmwD,QAAU40B,EAAgB/kF,EAAS8Q;AAEzC5T,EAAA8nF,0BAA0Bn+D,KAAK9pB,GAClCiD,EAAS49E,WAAQvlF,EAEjB2H,EAAS49E,MAAQtuB,EAAM30B,kBAAkB36B,EAAS49E,OAASA,EAAQ59E,EAAS49E,OAKzEve,EAAWtiE,GAAKQ,eAAe,aAAgB8hE,EAAWtiE,GAAKqqF,UAKlE9oF,KAAKynF,wBAAwBhpF,GAAOsiE,EAAWtiE,GAGhDmqF,EAAazxF,KAAKsH,KAPjBuB,KAAK0nF,gCAAgCjpF,GAAOsiE,EAAWtiE,UAChDsiE,EAAWtiE,IASrB,IAAIsqF,EAAWnB,EAAcO,MAC7B,GAAIY,EACH,IAAK,IAAIj5E,KAAQi5E,EAChBH,EAAazxF,QAAQ6I,KAAKgoF,8BAA8Bl4E,EAAM+3E,EAAUvI,IAG1E,OAAOsJ,EAGR7oF,oBACC,OAAOC,KAAKmnF,0BAGbpnF,6BACC,OAAOC,KAAKynF,wBAGb1nF,qCACC,OAAOC,KAAK0nF,gCAGL3nF,0BAA0B6nF,GACjC,MAAMoB,EAAYpB,IACjB,IAAI7mB,EAAa6mB,EAAc7mB,WAC/B,GAAIA,EACH,IAAK,MAAMtiE,KAAOsiE,EAEjB,OADAniE,EAAAknF,YAAY/kB,WAAWtiE,GAAOsiE,EAAWtiE,GACjCsiE,EAAWtiE,GAAK6gF,OACvB,KAAA,EACC1gF,EAAAonF,oBAAoBjlB,WAAWtiE,GAAOsiE,EAAWtiE,GACjD,MACD,KAAA,EACCG,EAAAqnF,gBAAgBllB,WAAWtiE,GAAOsiE,EAAWtiE,GAC7C,MACD,KAAA,EACCG,EAAAsnF,2BAA2BnlB,WAAWtiE,GAAOsiE,EAAWtiE,GACxD,MACD,KAAA,EACCG,EAAAunF,eAAeplB,WAAWtiE,GAAOsiE,EAAWtiE,GAC5C,MACD,KAAA,EACCG,EAAAwnF,iBAAiBrlB,WAAWtiE,GAAOsiE,EAAWtiE,GAC9C,MACD,KAAA,EACCG,EAAAwnF,iBAAiBrlB,WAAWtiE,GAAOsiE,EAAWtiE;AAC9CuB,KAAKonF,+BAA+BrmB,WAAYtiE,GAAOsiE,EAAWtiE,GAKtE,IAAIsqF,EAAWnB,EAAcO,MACzBY,GACHA,EAASxpF,QAAQypF,IAGnBA,EAASpB,GAGF7nF,yCACP,IAAK,MAAM2oF,KAAsBn/C,EAAA/rC,OAAOwC,KAAK4mF,qBAAsB,CAClE,MAAMqC,EAA6B,IAAIP,KACjCQ,EAAgD,CACrD12E,KAAM,SACNg2E,YAAat5B,EAAIY,SAAS,EAAuC,MACjEw3B,aAAcp4B,EAAIY,SAAS,EAAiC,MAC5D24B,KAAM7pF,EAAAynF,iCACNx0B,QAAuF,QAAhFh9C,EAAE7U,KAAKinF,kCAAkClmB,WAAYkoB,UAA2B,IAAAp0E,OAAA,EAAAA,EAAEg9C,SAE1FjzD,EAAAknF,YAAY/kB,WAAWkoB,GAA8BC,EACrDtqF,EAAAonF,oBAAoBjlB,WAAWkoB,GAA8BC,EAC7DtqF,EAAAqnF,gBAAgBllB,WAAWkoB,GAA8BC,EACzDtqF,EAAAsnF,2BAA2BnlB,WAAWkoB,GAA8BC,EACpEtqF,EAAAunF,eAAeplB,WAAWkoB,GAA8BC,EACxDtqF,EAAAwnF,iBAAiBrlB,WAAWkoB,GAA8BC,EAE3DlpF,KAAK6mF,mBAAmB5uE,SA8B1B,SAAgB4wE,EAAiBnnF,GAChC,OAAI9C,EAAA8nF,0BAA0Bn+D,KAAK7mB,GAC3BwtD,EAAIY,SAAS,EAAmC,KAAoKpuD,QAEvJ3H,IAAjE4sF,EAAsBwC,6BAA6BznF,GAC/CwtD,EAAIY,SAAS,EAA6B,KAA+DpuD,GAE1G,KATRmnB,EAAAq8D,SAAS7kF,IAAIzB,EAAAwmF,WAAWQ,cAAee,GAEvC/nF,EAAAiqF,iBAAAA,EAUAjqF,EAAAwqF,UAAA,WACC,MAAMC,EAAqD,GACrD5B,EAA0Bd,EAAsBwC,6BACtD,IAAK,MAAM1qF,KAAOZ,OAAOC,KAAK2pF,GAC7B4B,EAAOlyF,KAAK,CAACsH,EAAKgpF,EAAwBhpF,GAAK6gF;CAIhD,OAFA+J,EAAOlyF,KAAK,CAAC,SAAQ,IACrBkyF,EAAOlyF,KAAK,CAAC,OAAM,IACZkyF,oFC5NR,SAAgBC,EAAavoB,EAA6CwoB,GACzE,MAAM51E,EAAO9V,OAAOK,OAAO,MAE3B,IAAK,IAAIO,KAAOsiE,EACfyoB,EAAe71E,EAAMlV,EAAKsiE,EAAWtiE,GAAM8qF,GAG5C,OAAO51E,EAGR,SAAgB61E,EAAeC,EAAuBhrF,EAAaK,EAAYyqF,GAC9E,MAAMn3E,EAAW3T,EAAI0F,MAAM,KACrBwJ,EAAOyE,EAAS5L,MAEtB,IAAIkjF,EAAOD,EACX,IAAK,IAAInzF,EAAI,EAAGA,EAAI8b,EAAS5b,OAAQF,IAAK,CACzC,IAAI+gC,EAAIjlB,EAAS9b,GACbmS,EAAMihF,EAAKryD,GACf,cAAe5uB,GACd,IAAK,YACJA,EAAMihF,EAAKryD,GAAKx5B,OAAOK,OAAO,MAC9B,MACD,IAAK,SACJ,MACD,QAEC,YADAqrF,EAAiB,YAAY9qF,QAAU2T,EAASla,MAAM,EAAG5B,EAAI,GAAGuD,KAAK,WAAWwB,KAAKsD,UAAU8J,MAGjGihF,EAAOjhF,EAGR,GAAoB,iBAATihF,GAA8B,OAATA,EAC/B,IACCA,EAAK/7E,GAAQ7O,EACZ,MAAOhG,GACRywF,EAAiB,YAAY9qF,QAAU2T,EAASvY,KAAK,WAAWwB,KAAKsD,UAAU+qF,WAGhFH,EAAiB,YAAY9qF,QAAU2T,EAASvY,KAAK,WAAWwB,KAAKsD,UAAU+qF,MA+BjF,SAAgBC,EAAyBluF,EAAamuF,EAAqB5qE,GAY1E,MACM3oB,EAZN,SAAuBoF,EAAapD,GACnC,IAAI8U,EAAU1R,EACd,IAAK,MAAMouF,KAAaxxF,EAAM,CAC7B,GAAuB,iBAAZ8U,GAAoC,OAAZA,EAClC,OAEDA,EAAUA,EAAQ08E,GAEnB,OAAU18E,EAII28E,CAAcruF,EADhBmuF,EAAYzlF,MAAM,MAG/B,YAAyB,IAAX9N,EAAyB2oB,EAAe3oB,EAkCvD,SAAgB0zF,EAA0BtrF,GACzC,OAAOA,EAAI7C,UAAU,EAAG6C,EAAIjI,OAAS,GAGtC,SAAgBwzF,EAA0BtB,GACzC,MAAO,IAAIA;wVAxVC9pF,EAAAqrF,sBAAwB7jB,EAAA5lE,gBAAuC,wBAE5E5B,EAAAsrF,yBAAA,SAAyC/0E,GACxC,OAAOA,GACc,iBAAVA,KACLA,EAAMuzE,oBAA0D,iBAA7BvzE,EAAMuzE,uBACzCvzE,EAAMoN,UAAYpN,EAAMoN,oBAAoBmhB,EAAA9D,MAQnD,SAAkBuqD,GACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SAPD,CAAkBvrF,EAAAurF,sBAAAvrF,EAAAurF,oBAAmB,KASrCvrF,EAAAwrF,4BAAA,SAA4CC,GAC3C,OAAQA,GACP,KAAA,EAA+B,MAAO,OACtC,KAAA,EAAqC,MAAO,aAC5C,KAAA,EAAsC,MAAO,cAC7C,KAAA,EAAoC,MAAO,YAC3C,KAAA;AAA2C,MAAO,mBAClD,KAAA,EAAkC,MAAO,UACzC,KAAA,EAAiC,MAAO,WA2G1CzrF,EAAAoG,QAAA,SAAgBA,EAAQrN,EAAuCC,GAC9D,MAAM8P,EAAQ9P,EACXD,EAAOC,EAAGkG,KAAKuK,OAAO5J,IAAmC,IAA5B9G,EAAKmG,KAAK6D,QAAQlD,IAAe,IAAI7G,EAAGkG,MACrE,GACG2J,EAAU9P,EACbC,EAAKD,EAAKmG,KAAKuK,OAAO5J,IAAiC,IAA1B7G,EAAGkG,KAAK6D,QAAQlD,IAAe,IAAI9G,EAAKmG,MACrE,GACGomF,EAAoB,GAE1B,GAAItsF,GAAMD,EACT,IAAK,MAAM8G,KAAO9G,EAAKmG,KACtB,IAA8B,IAA1BlG,EAAGkG,KAAK6D,QAAQlD,GAAa,CAChC,MAAM6rF,EAASX,EAAsBhyF,EAAKgG,SAAUc,GAC9C8rF,EAASZ,EAAsB/xF,EAAG+F,SAAUc,GAC7C6+B,EAAQx2B,OAAOwjF,EAAQC,IAC3BrG,EAAQ/sF,KAAKsH,GAMjB,MAAM+rF,EAAkC,GAClCC,EAAwBD,IAC7B,MAAMn0F,EAAwC,GAC9C,IAAK,MAAMq0F,KAAYF,EACtB,IAAK,MAAM5uB,KAAc8uB,EAASC,YACjCt0F,EAAO2zF,EAA0BpuB,IAAe8uB,EAGlD,OAAOr0F,GAEFu0F,EAAyDhzF,EAAK6yF,EAAqB7yF,EAAG4yF,WAAa,GACnGK,EAA2DlzF,EAAO8yF,EAAqB9yF,EAAK6yF,WAAa,GAE/G,GAAI3sF,OAAOC,KAAK8sF,GAAyBp0F,OACxC,IAAK,MAAMiI,KAAOiJ,EAAO,CACxB,MAAMgjF,EAAWE,EAAwBnsF,GACrCisF,GACHF,EAAUrzF,KAAK,CAAC4yF,EAA0BtrF,GAAMisF,EAAS5sF,OAI5D,GAAID,OAAOC,KAAK+sF,GAA2Br0F,OAC1C,IAAK,MAAMiI,KAAOgJ,EAAS,CAC1B,MAAMijF,EAAWG,EAA0BpsF,GACvCisF,GACHF,EAAUrzF,KAAK,CAAC4yF,EAA0BtrF,GAAMisF,EAAS5sF,OAK5D,GAAID,OAAOC,KAAK8sF,GAAyBp0F,QAAUqH,OAAOC,KAAK+sF,GAA2Br0F,OACzF,IAAK,MAAMiI,KAAOylF,EAAS,CAC1B,MAAM4G,EAAeD,EAA0BpsF,GACzCssF,EAAaH,EAAwBnsF,GAC3C,GAAIqsF,GAAgBC,EAAY,CAC/B,MAAM10F,EAAS2O,EAAQ,CAAErH,SAAUmtF,EAAantF,SAAUG,KAAMgtF,EAAahtF,KAAM0sF,UAAW,IAAM,CAAE7sF,SAAUotF,EAAWptF,SAAUG,KAAMitF,EAAWjtF,KAAM0sF,UAAW,KACvKA,EAAUrzF,KAAK,CAAC4yF,EAA0BtrF,GAAM,IAAIpI,EAAOqR,SAAUrR,EAAOoR,WAAYpR,EAAO6tF,YAKlG,MAAO,CAAEx8E,MAAAA,EAAOD,QAAAA,EAASy8E,QAAAA,EAASsG,UAAAA,IAGnC5rF,EAAAosF,YAAA,SAA4BxqC,EAAU+oC,GACrC,MAAMiB,EAA0B;CAChC,IAAK,MAAM/rF,KAAOZ,OAAOC,KAAK0iD,GAC7B,GAAIyqC,EAAAvE,0BAA0Bn+D,KAAK9pB,GAAM,CACxC,MAAMysF,EAAmB,GACzB,IAAK,MAAMC,KAAoB3qC,EAAI/hD,GAClCysF,EAAYC,GAAoB3qC,EAAI/hD,GAAK0sF,GAE1CX,EAAUrzF,KAAK,CACdwzF,YAAa,CAACZ,EAA0BtrF,GAAK+wB,QAC7C1xB,KAAMD,OAAOC,KAAKotF,GAClBvtF,SAAU2rF,EAAa4B,EAAa3B,KAIvC,OAAOiB,GAGR5rF,EAAA0qF,aAAAA,EAUA1qF,EAAA4qF,eAAAA,EAgCA5qF,EAAAwsF,oBAAA,SAAoCC,EAAgB5sF,IAKpD,SAAS6sF,EAAsBD,EAAgBj5E,GAC9C,MAAM9S,EAAQ8S,EAAS6J,QACvB,GAAwB,IAApB7J,EAAS5b,OAGZ,mBADO60F,EAAU/rF,GAIlB,IAA+C,IAA3CzB,OAAOC,KAAKutF,GAAW1pF,QAAQrC,GAAe,CACjD,MAAMR,EAAQusF,EAAU/rF,GACH,iBAAVR,GAAuB4J,MAAMC,QAAQ7J,KAC/CwsF,EAAsBxsF,EAAOsT,GACK,IAA9BvU,OAAOC,KAAKgB,GAAOtI,eACf60F,EAAU/rF,KAhBpBgsF,CAAsBD,EADL5sF,EAAI0F,MAAM,OA0B5BvF,EAAA+qF,sBAAAA,EAkBA/qF,EAAAgZ,MAAA,SAAgBA,EAAM2S,EAAWlqB,EAAU4+B,GAC1CphC,OAAOC,KAAKuC,GAAKd,QAAQd,IACpBA,KAAO8rB,EACNymC,EAAM70B,SAAS5R,EAAK9rB,KAASuyD,EAAM70B,SAAS97B,EAAI5B,IACnDmZ,EAAM2S,EAAK9rB,GAAM4B,EAAI5B,GAAMwgC,GACjBA,IACV1U,EAAK9rB,GAAO4B,EAAI5B,IAGjB8rB,EAAK9rB,GAAO4B,EAAI5B,MAKnBG,EAAA2sF,qBAAA,WACC,MAAMxqB,EAAal4C,EAAAq8D,SAASqB,GAA2B0E,EAAA7F,WAAWQ,eAAeuD,6BACjF,OAAOtrF,OAAOC,KAAKijE,IAGpBniE,EAAA4sF,iBAAA,WACC,MAAMC,EAAqB5tF,OAAOK,OAAO,MACnC6iE,EAAal4C,EAAAq8D,SAASqB,GAA2B0E,EAAA7F,WAAWQ,eAAeuD,6BAEjF,IAAK,IAAI1qF,KAAOsiE,EAAY,CAE3ByoB,EAAeiC,EAAehtF,EADlBsiE,EAAWtiE,GAAKozD,QACc9yD,GAAWjI,QAAQ+E,MAAM,iCAAiCkD;AAGrG,OAAO0sF,GAGR7sF,EAAAmrF,0BAAAA,EAIAnrF,EAAAorF,0BAAAA,EAIAprF,EAAA8sF,wBAAA,SAA2CC,EAA6CC,EAA4BC,GACnH,MAAMC,EAAUH,EAAqBI,QAAWH,GAC1CI,EAAgBL,EAAqBI,QAAWF,GAEtD,YAAiC,IAAtBC,EAAQG,gBAA+D,IAA3BH,EAAQI,qBAA0E,IAAjCJ,EAAQK,qBACxGL,EAAQhtF,WAC8B,IAA5BktF,EAAcC,gBAAqE,IAAjCD,EAAcE,qBAAgF,IAAvCF,EAAcG,qBACjIH,EAAcltF,MAEdgtF,EAAQ9sE,4WC/VjB,MAAaotE,EAIZrsF,YACSssF,EAAiB,GACjBC,EAAkB,GAClBC,EAA2B,IAF3BvsF,KAAAqsF,UAAAA,EACArsF,KAAAssF,MAAAA,EACAtsF,KAAAusF,WAAAA,EALDvsF,KAAA6c,UAAoB,EAS5Blf,eACC,OAAOqC,KAAKwsF,eAAexsF,KAAKqsF,WAGjC7B,gBACC,OAAOxqF,KAAKwsF,eAAexsF,KAAKusF,YAGjCzuF,WACC,OAAOkC,KAAKwsF,eAAexsF,KAAKssF,OAGjCvsF;AACC,OAA6B,IAAtBC,KAAKssF,MAAM91F,QAAuD,IAAvCqH,OAAOC,KAAKkC,KAAKqsF,WAAW71F,QAA2C,IAA3BwJ,KAAKusF,WAAW/1F,OAG/FuJ,SAAY0sF,GACX,OAAOA,EAAUC,EAAA/C,sBAA2B3pF,KAAKrC,SAAU8uF,GAAWzsF,KAAKrC,SAG5EoC,iBAAoB0sF,EAA6B/D,GAChD,MAAMiE,EAAmB3sF,KAAK4sF,gCAAgClE,GAC9D,OAAOiE,EACJF,EAAUC,EAAA/C,sBAA2BgD,EAAkBF,GAAWE,OAClE5yF,EAGJgG,6BAA6B67D,GAC5B,IAAK,MAAM8uB,KAAY1qF,KAAKwqF,UAC3B,IAAkD,IAA9CE,EAASC,YAAYhpF,QAAQi6D,GAChC,OAAO8uB,EAAS5sF,KAGlB,MAAO,GAGRiC,SAAS67D,GACR,MAAM+wB,EAAmB3sF,KAAK4sF,gCAAgChxB,GAE9D,IAAK+wB,GAAgD,iBAArBA,IAAkC9uF,OAAOC,KAAK6uF,GAAkBn2F,OAE/F,OAAOwJ,KAGR,IAAIrC,EAAgB,GACpB,IAAK,MAAMc,KAAOisC,EAAO7hC,SAAS,IAAIhL,OAAOC,KAAKkC,KAAKrC,aAAcE,OAAOC,KAAK6uF,KAAqB,CAErG,IAAIE,EAAiB7sF,KAAKrC,SAASc,GAC/BquF,EAAyBH,EAAiBluF,GAG1CquF,IAE2B,iBAAnBD,GAAiE,iBAA3BC,GAChDD,EAAiBvvD,EAAQa,UAAU0uD,GACnC7sF,KAAK+sF,cAAcF,EAAgBC,IAEnCD,EAAiBC,GAInBnvF,EAASc,GAAOouF,EAGjB,OAAO,IAAIT,EAAmBzuF,EAAUqC,KAAKlC,KAAMkC,KAAKwqF,WAGzDzqF,SAASitF,GACR,MAAMrvF,EAAW2/B,EAAQa,UAAUn+B,KAAKrC,UAClC6sF,EAAYltD,EAAQa,UAAUn+B,KAAKwqF,WACnC1sF,EAAO,IAAIkC,KAAKlC,MAEtB,IAAK,MAAMkJ,KAASgmF,EAAQ,CAC3BhtF,KAAK+sF,cAAcpvF,EAAUqJ,EAAMrJ,UAEnC,IAAK,MAAMsvF,KAAiBjmF,EAAMwjF,UAAW,CAC5C,MAAOE,GAAYF,EAAUniF,OAAOL,GAAK0iC,EAAO5jC,OAAOkB,EAAE2iF,YAAasC,EAActC;CAChFD,EACH1qF,KAAK+sF,cAAcrC,EAAS/sF,SAAUsvF,EAActvF,UAEpD6sF,EAAUrzF,KAAKmmC,EAAQa,UAAU8uD,IAGnC,IAAK,MAAMxuF,KAAOuI,EAAMlJ,MACI,IAAvBA,EAAK6D,QAAQlD,IAChBX,EAAK3G,KAAKsH,GAIb,OAAO,IAAI2tF,EAAmBzuF,EAAUG,EAAM0sF,GAG/CzqF,SAEC,OADAC,KAAK6c,UAAW,EACT7c,KAGAD,cAAc2e,EAAa7mB,GAClC,IAAK,MAAM4G,KAAOZ,OAAOC,KAAKjG,GACzB4G,KAAOigB,GACNsyC,EAAM70B,SAASzd,EAAOjgB,KAASuyD,EAAM70B,SAAStkC,EAAO4G,IACxDuB,KAAK+sF,cAAcruE,EAAOjgB,GAAM5G,EAAO4G,IAIzCigB,EAAOjgB,GAAO6+B,EAAQa,UAAUtmC,EAAO4G,IAIjCsB,eAAkB1F,GACzB,OAAI2F,KAAK6c,WAAahf,OAAOgf,SAASxiB,GAC9BijC,EAAQc,WAAW/jC,GAEpBA,EAGA0F,gCAAgC67D,GACvC,IAAK,MAAM8uB,KAAY1qF,KAAKwqF,UAC3B,IAAkD,IAA9CE,EAASC,YAAYhpF,QAAQi6D,GAChC,OAAO8uB,EAAS/sF,SAGlB,OAAO,KAGRoC,SACC,MAAO,CACNpC,SAAUqC,KAAKrC,SACf6sF,UAAWxqF,KAAKwqF,UAChB1sF,KAAMkC,KAAKlC,MAMNiC,SAAStB,EAAaK,GAC5BkB,KAAKktF,OAAOzuF,GACZiuF,EAAAlD,eAAexpF,KAAKrC,SAAUc,EAAKK,EAAOhG,IAAO,MAAM,IAAIkG,MAAMlG,KAG3DiH,YAAYtB,GACduB,KAAKmtF,UAAU1uF,IAClBiuF,EAAAtB,oBAAoBprF,KAAKrC,SAAUc,GAI7BsB,OAAOtB,GACd,IAAI/C,EAAQsE,KAAKlC,KAAKtH,OACtB,IAAK,IAAIF,EAAI,EAAGA,EAAIoF,EAAOpF,IACQ,IAA9BmI,EAAIkD,QAAQ3B,KAAKlC,KAAKxH,MACzBoF,EAAQpF,GAGV0J,KAAKlC,KAAK9F,OAAO0D,EAAO,EAAG+C,GAGpBsB,UAAUtB,GACjB,IAAI/C,EAAQsE,KAAKlC,KAAK6D,QAAQlD,GAC9B,OAAe,IAAX/C,IACHsE,KAAKlC,KAAK9F,OAAO0D,EAAO,IACjB,IA3KVkD,EAAAwtF,mBAAAA;CAiLAxtF,EAAAwuF,0BAAA,cAA+ChB,EAE9CrsF,cACC,MAAMpC,EAAW+uF,EAAAlB,mBACX1tF,EAAO4uF,EAAAnB,uBACPf,EAA0B,GAChC,IAAK,MAAM/rF,KAAOZ,OAAOC,KAAKH,GACzBstF,EAAAvE,0BAA0Bn+D,KAAK9pB,IAClC+rF,EAAUrzF,KAAK,CACdwzF,YAAa,CAAC+B,EAAA3C,0BAA0BtrF,GAAK+wB,QAC7C1xB,KAAMD,OAAOC,KAAKH,EAASc,IAC3Bd,SAAU+uF,EAAApD,aAAa3rF,EAASc,GAAMM,GAAWjI,QAAQ+E,MAAM,sCAAsCkD,QAIxGuF,MAAM3G,EAAUG,EAAM0sF,KAIxB,MAAa6C,EAMZttF,YAA+ButF,EAAuBC,GAAvBvtF,KAAAstF,MAAAA,EAAuBttF,KAAAutF,QAAAA,EAJ9CvtF,KAAAwtF,KAAY,KACZxtF,KAAAytF,oBAAiD,KACjDztF,KAAA0tF,aAAsB,GAI9BC,yBACC,OAAO3tF,KAAKytF,qBAAuB,IAAIrB,EAGxCp5E,aACC,OAAOhT,KAAK0tF,aAGN3tF,aAAaxF,GACnB,GAAIA,EAAS,CACZ,MAAMimD,EAAMxgD,KAAK4tF,eAAerzF,GAChCyF,KAAK6tF,SAASrtC,IAITzgD,SAASygD,GACfxgD,KAAKwtF,KAAOhtC,EACZ,MAAMmtC,EAAqB3tF,KAAK8tF,WAAWttC,GAC3CxgD,KAAKytF,oBAAsB,IAAIrB,EAAmBuB,EAAmBhwF,SAAUgwF,EAAmB7vF,KAAM6vF,EAAmBnD,WAGrHzqF,QACFC,KAAKwtF,MACRxtF,KAAK6tF,SAAS7tF,KAAKwtF,MAIXztF,eAAexF,GACxB,IAAIimD,EAAW,GACXvtC,EAAiC,KACjCC,EAAqB,GACrBC,EAAyB,GACzB46E,EAAiC,GAErC,SAAS36E,EAAQtU,GACZ4J,MAAMC,QAAQuK,GACTA,EAAe/b,KAAK2H,GAClBmU,IACVC,EAAcD,GAAmBnU,GAInC,IAAIoR,EAA4B,CAC/BO,cAAe,KACd,IAAI4C,EAAS,GACbD,EAAQC,GACRF,EAAgBhc,KAAK+b,GACrBA,EAAgBG,EAChBJ,EAAkB,MAEnBvC,iBAAmBxZ,IAClB+b,EAAkB/b;AAEnByZ,YAAa,KACZuC,EAAgBC,EAAgB3M,OAEjCoK,aAAc,KACb,IAAIpM,EAAe,GACnB4O,EAAQ5O,GACR2O,EAAgBhc,KAAK+b,GACrBA,EAAgB1O,EAChByO,EAAkB,MAEnBpC,WAAY,KACXqC,EAAgBC,EAAgB3M,OAEjCsK,eAAgBsC,EAChBnC,QAAS,CAACpV,EAA4BkU,EAAgBvZ,KACrDu3F,EAAY52F,KAAK,CAAE0E,MAAAA,EAAOkU,OAAAA,EAAQvZ,OAAAA,MAGpC,GAAI+D,EACH,IACCyzF,EAAK/9E,MAAM1V,EAAS2V,GACpBswC,EAAMttC,EAAc,IAAM,GACzB,MAAOpa,GACRhC,QAAQ+E,MAAM,qCAAqCmE,KAAKstF,UAAUx0F,KAClEkH,KAAK0tF,aAAe,CAAC50F,GAIvB,OAAO0nD,EAGEzgD,WAAWygD,GACpB,GAAIxgD,KAAKutF,QAAS,CACjB,MAAM9F,EAA0B5+D,EAAAq8D,SAASqB,GAA2B0E,EAAA7F,WAAWQ,eAAeuD,6BAC9F3oC,EAAMxgD,KAAKiuF,cAAcztC,EAAKinC,GAAyB,EAAMznF,KAAKutF,SAKnE,MAAO,CAAE5vF,SAHQ+uF,EAAApD,aAAa9oC,EAAKzhD,GAAWjI,QAAQ+E,MAAM,6BAA6BmE,KAAKstF,UAAUvuF,MAGrFjB,KAFND,OAAOC,KAAK0iD,GAEAgqC,UADOkC,EAAA1B,YAAYxqC,EAAKzhD,GAAWjI,QAAQ+E,MAAM,6BAA6BmE,KAAKstF,UAAUvuF,OAI/GgB,cAAcghE,EAAiB0mB,EAAmFyG,EAAqC7E,GAC9J,MAAMhzF,EAAc,GACpB,IAAK,IAAIoI,KAAOsiE,EACf,GAAIkqB,EAAAvE,0BAA0Bn+D,KAAK9pB,IAAQyvF,EAC1C73F,EAAOoI,GAAOuB,KAAKiuF,cAAcltB,EAAWtiE,GAAMgpF,GAAyB,EAAO4B,OAC5E,CACN,MAAM/J,EAAQt/E,KAAKmuF,SAAS1vF,EAAKgpF,IACF,IAA3B4B,EAAO1nF,QAAQ29E,KAClBjpF,EAAOoI,GAAOsiE,EAAWtiE,IAI5B,OAAOpI,EAGA0J,SAAStB,EAAagpF,GAC7B,MAAMc,EAAiBd,EAAwBhpF,GAC/C,OAAO8pF,QAAkD,IAAzBA,EAAejJ,MAAwBiJ,EAAejJ,MAAO,GAxH/F1gF,EAAAyuF,yBAAAA,EA4HA,MAAae,UAAqBv1E,EAAAlE;AAMjC5U,YACkBsuF,EACAhF,EACA9d,GAEjBjnE,QAJiBtE,KAAAquF,qBAAAA,EACAruF,KAAAqpF,OAAAA,EACArpF,KAAAurE,YAAAA,EANCvrE,KAAAsuF,aAA8BtuF,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAC3DhY,KAAAuuF,YAA2BvuF,KAAKsuF,aAAa/2E,MAQrDvX,KAAKwuF,OAAS,IAAInB,EAAyBrtF,KAAKquF,qBAAqB1zE,WAAY3a,KAAKqpF,QACtFrpF,KAAK8nD,UAAU9nD,KAAKurE,YAAYlrB,MAAMxM,EAAA1mB,QAAQntB,KAAKquF,wBACnDruF,KAAK8nD,UAAU7pC,EAAA3G,MAAMjP,OAAOrI,KAAKurE,YAAY5I,iBAAkB7pE,GAAKA,EAAE+W,SAAS7P,KAAKquF,sBAArEpwE,CAA4F,IAAMje,KAAKsuF,aAAar2E,SAGpIlY,0BACC,IACC,MAAMxF,QAAgByF,KAAKurE,YAAYrxE,SAAS8F,KAAKquF,sBAErD,OADAruF,KAAKwuF,OAAOC,aAAal0F,EAAQuE,MAAM6b,YAAc,MAC9C3a,KAAKwuF,OAAOb,mBAClB,MAAO70F,GACR,OAAO,IAAIszF,GAIbrsF,YAEC,OADAC,KAAKwuF,OAAOlzF,QACL0E,KAAKwuF,OAAOb,oBA7BrB/uF,EAAAwvF,aAAAA,EAkCA,MAAaxI,EAKZ7lF,YACS2uF,EACAC,EACAC,EAA+C,IAAIxC,EACnDyC,EAA8C,IAAIzC,EAClD0C,EAAyD,IAAIvlD,EAAA5C,YAC7DooD,EAA2C,IAAI3C,EAC/C4C,EAAkE,IAAIzlD,EAAA5C,YACtEsoD,GAAmB,GAPnBjvF,KAAA0uF,sBAAAA,EACA1uF,KAAA2uF,wBAAAA,EACA3uF,KAAA4uF,yBAAAA,EACA5uF,KAAA6uF,wBAAAA,EACA7uF,KAAA8uF,sBAAAA;AACA9uF,KAAA+uF,qBAAAA,EACA/uF,KAAAgvF,+BAAAA,EACAhvF,KAAAivF,QAAAA,EAXDjvF,KAAAkvF,oCAAiE,KACjElvF,KAAAmvF,mCAAsE,IAAI5lD,EAAA5C,YAsM1E3mC,KAAAovF,mBAAgD,KAzLxDrvF,SAAS0sF,EAA6BjC,EAAoC6E,GAEzE,OADsCrvF,KAAKsvF,iCAAiC9E,EAAW6E,GAClD7e,SAASic,GAG/C1sF,YAAYtB,EAAaK,EAAY0rF,EAAqC,IACzE,IAAI+E,EACA/E,EAAUjoE,UACbgtE,EAAsBvvF,KAAKgvF,+BAA+B9uF,IAAIsqF,EAAUjoE,aAEvEgtE,EAAsB,IAAInD,EAC1BpsF,KAAKgvF,+BAA+B5uF,IAAIoqF,EAAUjoE,SAAUgtE,IAG7DA,EAAsBvvF,KAAK+uF,0BAGdh1F,IAAV+E,EACHywF,EAAoBC,YAAY/wF,GAEhC8wF,EAAoBE,SAAShxF,EAAKK,GAG9B0rF,EAAUjoE,WACdviB,KAAKkvF,oCAAsC,MAI7CnvF,QAAWtB,EAAa+rF,EAAoC6E;AAC3D,MAAMK,EAAgC1vF,KAAKsvF,iCAAiC9E,EAAW6E,GACjFM,EAA2B3vF,KAAK4vF,uCAAuCpF,EAAUjoE,SAAU8sE,GAC3FQ,EAA2BrF,EAAUjoE,UAAWviB,KAAKgvF,+BAA+B9uF,IAAIsqF,EAAUjoE,WAAyCviB,KAAK+uF,qBAEhJ/vE,EAAewrE,EAAU9B,mBAAqB1oF,KAAK0uF,sBAAsB/4E,SAAS+0E,SAASF,EAAU9B,oBAAoBlY,SAAY/xE,GAAOuB,KAAK0uF,sBAAsB/4E,SAAS66D,SAAY/xE,GAC5LwtF,EAAYzB,EAAU9B,mBAAqB1oF,KAAK8vF,kBAAkBn6E,SAAS+0E,SAASF,EAAU9B,oBAAoBlY,SAAY/xE,GAAOuB,KAAK8vF,kBAAkBn6E,SAAS66D,SAAY/xE,GACjLsxF,EAAiBvF,EAAU9B,mBAAqB1oF,KAAKgwF,uBAAuBr6E,SAAS+0E,SAASF,EAAU9B,oBAAoBlY,SAAY/xE,GAAOuB,KAAKgwF,uBAAuBr6E,SAAS66D,SAAY/xE,GAChMwxF,EAAkBzF,EAAU9B,mBAAqB1oF,KAAKkwF,wBAAwBv6E,SAAS+0E,SAASF,EAAU9B,oBAAoBlY,SAAY/xE,GAAOuB,KAAKkwF,wBAAwBv6E,SAAS66D,SAAY/xE,GACnMytF,EAAiBmD,EAAY7E,EAAU9B,mBAAqB1oF,KAAK6uF,wBAAwBl5E,SAAS+0E,SAASF,EAAU9B,oBAAoBlY,SAAY/xE,GAAOuB,KAAK6uF,wBAAwBl5E,SAAS66D,SAAY/xE,QAAO1E,EACrNoyF,EAAuBwD,EAA2BnF,EAAU9B,mBAAqBiH,EAAyBh6E,SAAS+0E,SAASF,EAAU9B,oBAAoBlY,SAAY/xE,GAAOkxF,EAAyBh6E,SAAS66D,SAAY/xE,QAAO1E,EAClOo2F,EAAc3F,EAAU9B,mBAAqBmH,EAAyBnF,SAASF,EAAU9B,oBAAoBlY,SAAY/xE,GAAOoxF,EAAyBrf,SAAY/xE,GACrKK,EAAQ4wF,EAA8Blf,SAAY/xE,GAClDmoF,EAAgCl8C,EAAO7hC,SAAS6hC,EAAOlhC,QAAQkmF,EAA8BlF,UAAU7wF,IAAI+wF,GAAYA,EAASC,eAAetiF,OAAOqgF,QAAkG3uF,IAA5E21F,EAA8BU,iBAAiB3xF,EAAKiqF;CAEtO,MAAO,CACN1pE,aAAcA,EACditE,UAAWA,EACX8D,eAAgBA,EAChBE,gBAAiBA,EACjB/D,eAAgBA,EAChBC,qBAAsBA,EACtBgE,YAAaA,EACbrxF,MAAAA,EAEA+yD,aAA0B93D,IAAjBilB,EAA6B,CAAElgB,MAAOkB,KAAK0uF,sBAAsB/4E,SAAS66D,SAAS/xE,GAAMisF,SAAUF,EAAU9B,mBAAqB1oF,KAAK0uF,sBAAsB/4E,SAASy6E,iBAAiB3xF,EAAK+rF,EAAU9B,yBAAsB3uF,QAAcA,EACnPs2F,UAAoBt2F,IAAdkyF,EAA0B,CAAEntF,MAAOkB,KAAK8vF,kBAAkBn6E,SAAS66D,SAAS/xE,GAAMisF,SAAUF,EAAU9B,mBAAqB1oF,KAAK8vF,kBAAkBn6E,SAASy6E,iBAAiB3xF,EAAK+rF,EAAU9B,yBAAsB3uF,QAAcA,EACrOu2F,eAA8Bv2F,IAAnBg2F,EAA+B,CAAEjxF,MAAOkB,KAAKgwF,uBAAuBr6E,SAAS66D,SAAS/xE,GAAMisF,SAAUF,EAAU9B,mBAAqB1oF,KAAKgwF,uBAAuBr6E,SAASy6E,iBAAiB3xF,EAAK+rF,EAAU9B,yBAAsB3uF,QAAcA,EACzPw2F,gBAAgCx2F,IAApBk2F,EAAgC,CAAEnxF,MAAOkB,KAAKkwF,wBAAwBv6E,SAAS66D,SAAS/xE,GAAMisF,SAAUF,EAAU9B,mBAAqB1oF,KAAKkwF,wBAAwBv6E,SAASy6E,iBAAiB3xF,EAAK+rF,EAAU9B,yBAAsB3uF,QAAcA,EAC7Ps1F,eAA8Bt1F,IAAnBmyF,EAA+B,CAAEptF,MAAOkB,KAAK6uF,wBAAwBl5E,SAAS66D,SAAS/xE;AAAMisF,SAAUF,EAAU9B,mBAAqB1oF,KAAK6uF,wBAAwBl5E,SAASy6E,iBAAiB3xF,EAAK+rF,EAAU9B,yBAAsB3uF,QAAcA,EAC3Py2F,qBAA0Cz2F,IAAzBoyF,EAAqC,CAAErtF,MAAO6wF,MAAAA,OAAwB,EAAxBA,EAA0Bh6E,SAAS66D,SAAS/xE,GAAMisF,SAAUF,EAAU9B,mBAAqBiH,MAAAA,OAAwB,EAAxBA,EAA0Bh6E,SAASy6E,iBAAiB3xF,EAAK+rF,EAAU9B,yBAAsB3uF,QAAcA,EACjQ+xE,YAAwB/xE,IAAhBo2F,EAA4B,CAAErxF,MAAO+wF,EAAyBrf,SAAS/xE,GAAMisF,SAAUF,EAAU9B,mBAAqBmH,EAAyBO,iBAAiB3xF,EAAK+rF,EAAU9B,yBAAsB3uF,QAAcA,EAE3N6sF,oBAAqBA,EAAoBpwF,OAASowF,OAAsB7sF,GAI1EgG,KAAKsvF,GAMJ,MAAMM,EAA2B3vF,KAAK4vF,4CAAuC71F,EAAWs1F,GACxF,MAAO,CACNx9B,QAAS7xD,KAAK0uF,sBAAsB/4E,SAAS7X,KAC7CuyF,KAAMrwF,KAAK8vF,kBAAkBn6E,SAAS7X,KACtCuxF,UAAWrvF,KAAK6uF,wBAAwBl5E,SAAS7X,KACjD0yF,gBAAiBb,EAA2BA,EAAyBh6E,SAAS7X,KAAO,IAIvFiC,2BAA2BsoF,GAC1BroF,KAAK0uF,sBAAwBrG,EAC7BroF,KAAKkvF,oCAAsC,KAC3ClvF,KAAKmvF,mCAAmC3tF,QAGzCzB,6BAA6BiwF,GAC5BhwF,KAAK2uF,wBAA0BqB,EAC/BhwF,KAAKovF,mBAAqB,KAC1BpvF,KAAKkvF,oCAAsC;AAC3ClvF,KAAKmvF,mCAAmC3tF,QAGzCzB,8BAA8BmwF,GAC7BlwF,KAAK4uF,yBAA2BsB,EAChClwF,KAAKovF,mBAAqB,KAC1BpvF,KAAKkvF,oCAAsC,KAC3ClvF,KAAKmvF,mCAAmC3tF,QAGzCzB,6BAA6B0wF,GAC5BzwF,KAAK6uF,wBAA0B4B,EAC/BzwF,KAAKkvF,oCAAsC,KAC3ClvF,KAAKmvF,mCAAmC3tF,QAGzCzB,0BAA0BwiB,EAAeqlE,GACxC5nF,KAAK8uF,sBAAsB1uF,IAAImiB,EAAUqlE,GACzC5nF,KAAKmvF,mCAAmC7uF,OAAOiiB,GAGhDxiB,0BAA0BwiB,GACzBviB,KAAK0wF,qBAAqBpwF,OAAOiiB,GACjCviB,KAAKmvF,mCAAmC7uF,OAAOiiB,GAGhDxiB,qCAAqCuoF,EAA8BxqF,GAClE,MAAM0sF,EAAkC1sF,EACtCuK,OAAO5J,GAAOwsF,EAAAvE,0BAA0Bn+D,KAAK9pB,IAC7C9E,IAAI8E;AACJ,MAAMiqF,EAAqBgE,EAAA3C,0BAA0BtrF,GAC/CkyF,EAAW3wF,KAAK0uF,sBAAsBkC,6BAA6BlI,GACnEmI,EAASvI,EAASsI,6BAA6BlI,GAC/C5qF,EAAO,IACT+yF,EAAOxoF,OAAO5J,IAAkC,IAA3BkyF,EAAShvF,QAAQlD,OACtCkyF,EAAStoF,OAAO5J,IAAgC,IAAzBoyF,EAAOlvF,QAAQlD,OACtCkyF,EAAStoF,OAAO5J,IAAQ6+B,EAAQx2B,OAAO9G,KAAK0uF,sBAAsBhE,SAAShC,GAAoBlY,SAAS/xE,GAAM6pF,EAASoC,SAAShC,GAAoBlY,SAAS/xE,MAEjK,MAAO,CAACiqF,EAAoB5qF,KAG9B,OADAkC,KAAK8wF,2BAA2BxI,GACzB,CAAExqF,KAAAA,EAAM0sF,UAAAA,GAGhBzqF,uCAAuCswF,GACtC,MAAM3oF,MAAEA,EAAKw8E,QAAEA,EAAOz8E,QAAEA,EAAO+iF,UAAEA,GAAckC,EAAA1nF,QAAQhF,KAAKgwF,uBAAwBK,GAC9EvyF,EAAO,IAAI4J,KAAUw8E,KAAYz8E,GAIvC,OAHI3J,EAAKtH,QACRwJ,KAAK+wF,6BAA6BV,GAE5B,CAAEvyF,KAAAA,EAAM0sF,UAAAA,GAGhBzqF,wCAAwCswF,GACvC,MAAM3oF,MAAEA,EAAKw8E,QAAEA,EAAOz8E,QAAEA,EAAO+iF,UAAEA,GAAckC,EAAA1nF,QAAQhF,KAAKkwF,wBAAyBG,GACrF,IAAIvyF,EAAO,IAAI4J,KAAUw8E,KAAYz8E,GAIrC,OAHI3J,EAAKtH,QACRwJ,KAAKgxF,8BAA8BX,GAE7B,CAAEvyF,KAAAA,EAAM0sF,UAAAA,GAGhBzqF,uCAAuC0wF,GACtC,MAAM/oF,MAAEA,EAAKw8E,QAAEA,EAAOz8E,QAAEA,EAAO+iF,UAAEA,GAAckC,EAAA1nF,QAAQhF,KAAKywF,uBAAwBA,GACpF,IAAI3yF,EAAO,IAAI4J,KAAUw8E,KAAYz8E;CAIrC,OAHI3J,EAAKtH,QACRwJ,KAAKixF,6BAA6BR,GAE5B,CAAE3yF,KAAAA,EAAM0sF,UAAAA,GAGhBzqF,oCAAoCwiB,EAAe2uE,GAClD,MAAMC,EAA6BnxF,KAAK0wF,qBAAqBxwF,IAAIqiB,IAC3D7a,MAAEA,EAAKw8E,QAAEA,EAAOz8E,QAAEA,EAAO+iF,UAAEA,GAAckC,EAAA1nF,QAAQmsF,EAA4BD,GACnF,IAAIpzF,EAAO,IAAI4J,KAAUw8E,KAAYz8E,GAIrC,OAHI3J,EAAKtH,QAAW26F,GACnBnxF,KAAKoxF,0BAA0B7uE,EAAU2uE,GAEnC,CAAEpzF,KAAAA,EAAM0sF,UAAAA,GAGhBzqF,oCAAoCukE,GACnC,MAAM+sB,EAAerxF,KAAK0wF,qBAAqBxwF,IAAIokE,GACnD,IAAK+sB,EACJ,MAAM,IAAIryF,MAAM,kBAEjBgB,KAAKsxF,0BAA0BhtB,GAC/B,MAAM58D,MAAEA,EAAKw8E,QAAEA,EAAOz8E,QAAEA,EAAO+iF,UAAEA,GAAckC,EAAA1nF,QAAQqsF,OAAct3F,GACrE,MAAO,CAAE+D,KAAM,IAAI4J,KAAUw8E,KAAYz8E,GAAU+iF,UAAAA,GAGpDlC,eACC,OAAOtoF,KAAK0uF,sBAIboB,wBAOC,OANK9vF,KAAKovF,qBACTpvF,KAAKovF,mBAAqBpvF,KAAK4uF,yBAAyBnzE,UAAYzb,KAAK2uF,wBAA0B3uF,KAAK2uF,wBAAwB/2E,MAAM5X,KAAK4uF,0BACvI5uF,KAAKivF,SACRjvF,KAAKovF,mBAAmBz5E,UAGnB3V,KAAKovF,mBAGbY,6BACC,OAAOhwF,KAAK2uF,wBAGbuB;AACC,OAAOlwF,KAAK4uF,yBAGb6B,6BACC,OAAOzwF,KAAK6uF,wBAGb6B,2BACC,OAAO1wF,KAAK8uF,sBAGL/uF,iCAAiCyqF,EAAoC6E,GAC5E,IAAI1B,EAAqB3tF,KAAKuxF,6CAA6C/G,EAAW6E,GACtF,OAAO7E,EAAU9B,mBAAqBiF,EAAmBjD,SAASF,EAAU9B,oBAAsBiF,EAG3F5tF,8CAA6CwiB,SAAEA,GAAqC8sE,GAC3F,IAAImC,EAA2BxxF,KAAKyxF,wCAEpC,GAAIpC,GAAa9sE,EAAU,CAC1B,MAAM5O,EAAO07E,EAAUqC,UAAUnvE,GAC7B5O,IACH69E,EAA2BxxF,KAAK2xF,mCAAmCh+E,EAAKitB,MAAQ4wD,GAEjF,MAAMI,EAAiC5xF,KAAKgvF,+BAA+B9uF,IAAIqiB,GAC3EqvE,IACHJ,EAA2BA,EAAyB55E,MAAMg6E,IAI5D,OAAOJ,EAGAzxF,wCAOP,OANKC,KAAKkvF,sCACTlvF,KAAKkvF,oCAAsClvF,KAAK0uF,sBAAsB92E,MAAM5X,KAAK8vF,kBAAmB9vF,KAAK6uF,wBAAyB7uF,KAAK+uF,sBACnI/uF,KAAKivF,UACRjvF,KAAK6uF,wBAA0B7uF,KAAK6uF,wBAAwBl5E,WAGvD3V,KAAKkvF,oCAGLnvF,mCAAmCukE;AAC1C,IAAIutB,EAAkC7xF,KAAKmvF,mCAAmCjvF,IAAIokE,GAClF,IAAKutB,EAAiC,CACrC,MAAMC,EAAoC9xF,KAAKyxF,wCACzCP,EAAsBlxF,KAAK8uF,sBAAsB5uF,IAAIokE,GACvD4sB,GACHW,EAAkCC,EAAkCl6E,MAAMs5E,GACtElxF,KAAKivF,UACR4C,EAAkCA,EAAgCl8E,UAEnE3V,KAAKmvF,mCAAmC/uF,IAAIkkE,EAAQutB,IAEpDA,EAAkCC,EAGpC,OAAOD,EAGA9xF,uCAAuCwiB,EAAkC8sE,GAChF,GAAIA,GAAa9sE,EAAU,CAC1B,MAAM5O,EAAO07E,EAAUqC,UAAUnvE,GACjC,GAAI5O,EACH,OAAO3T,KAAK8uF,sBAAsB5uF,IAAIyT,EAAKitB,MAM9C7gC,SACC,MAAO,CACNuoF,SAAU,CACT3qF,SAAUqC,KAAK0uF,sBAAsB/wF,SACrC6sF,UAAWxqF,KAAK0uF,sBAAsBlE,UACtC1sF,KAAMkC,KAAK0uF,sBAAsB5wF,MAElCuyF,KAAM,CACL1yF,SAAUqC,KAAK8vF,kBAAkBnyF,SACjC6sF,UAAWxqF,KAAK8vF,kBAAkBtF,UAClC1sF,KAAMkC,KAAK8vF,kBAAkBhyF,MAE9BuxF,UAAW,CACV1xF,SAAUqC,KAAK6uF,wBAAwBlxF,SACvC6sF,UAAWxqF,KAAK6uF,wBAAwBrE,UACxC1sF,KAAMkC,KAAK6uF,wBAAwB/wF,MAEpC61C,QAAS3zC,KAAK8uF,sBAAsBhxF,OAAOiM,OAA+C,CAAC1T,EAAQiuE,KAClG,MAAM3mE,SAAEA,EAAQ6sF,UAAEA,EAAS1sF,KAAEA,GAASkC,KAAK8uF,sBAAsB5uF,IAAIokE,GAErE,OADAjuE,EAAOc,KAAK,CAACmtE,EAAQ,CAAE3mE,SAAAA,EAAU6sF,UAAAA,EAAW1sF,KAAAA,KACrCzH,GACL,KAIL0J,UACC,MAAMjC,EAAoB,IAAIqC;CAK9B,OAJAH,KAAK0uF,sBAAsB/4E,SAAS7X,KAAKyB,QAAQd,GAAOX,EAAKuC,IAAI5B,IACjEuB,KAAK8vF,kBAAkBn6E,SAAS7X,KAAKyB,QAAQd,GAAOX,EAAKuC,IAAI5B,IAC7DuB,KAAK6uF,wBAAwBl5E,SAAS7X,KAAKyB,QAAQd,GAAOX,EAAKuC,IAAI5B,IACnEuB,KAAK8uF,sBAAsBvvF,QAAQwyF,GAAuBA,EAAoBp8E,SAAS7X,KAAKyB,QAAQd,GAAOX,EAAKuC,IAAI5B,KAC7G8qC,EAAA/rC,OAAOM,GAGLiC,gCAAgC2oF,GACzC,MAAM5qF,EAAoB,IAAIqC,IAK9B,OAJAH,KAAK0uF,sBAAsBkC,6BAA6BlI,GAAoBnpF,QAAQd,GAAOX,EAAKuC,IAAI5B,IACpGuB,KAAK8vF,kBAAkBc,6BAA6BlI,GAAoBnpF,QAAQd,GAAOX,EAAKuC,IAAI5B,IAChGuB,KAAK6uF,wBAAwB+B,6BAA6BlI,GAAoBnpF,QAAQd,GAAOX,EAAKuC,IAAI5B,IACtGuB,KAAK8uF,sBAAsBvvF,QAAQwyF,GAAuBA,EAAoBnB,6BAA6BlI,GAAoBnpF,QAAQd,GAAOX,EAAKuC,IAAI5B,KAChJ8qC,EAAA/rC,OAAOM,GAGfiC,aAAa1F,GACZ,MAAMguF,EAAuBroF,KAAKgyF,wBAAwB33F,EAAKiuF,UACzDwH,EAAoB9vF,KAAKgyF,wBAAwB33F,EAAKg2F,MACtDI,EAAyBzwF,KAAKgyF,wBAAwB33F,EAAKg1F,WAC3D17C,EAA2Ct5C,EAAKs5C,QAAQ5pC,OAAO,CAAC1T,EAAQyI,KAC7EzI,EAAO+J,IAAIsjC,EAAA9D,IAAIyN,OAAOvuC,EAAM,IAAKkB,KAAKgyF,wBAAwBlzF,EAAM,KAC7DzI,GACL,IAAIkzC,EAAA5C,aACP,OAAO,IAAIi/C,EAAcyC,EAAsByH,EAAmB,IAAI1D,EAAsBqE,EAAwB98C,EAAS,IAAIy4C,EAAsB,IAAI7iD,EAAA5C,aAAmC;AAGvL5mC,+BAA+BkyF,GACtC,OAAO,IAAI7F,EAAmB6F,EAAMt0F,SAAUs0F,EAAMn0F,KAAMm0F,EAAMzH,WAAW70E,UAvV7E/W,EAAAgnF,cAAAA,EA4VAhnF,EAAAszF,aAAA,YAAgChoB,GAC/B,GAAuB,IAAnBA,EAAQ1zE,OACX,MAAO,CAAEsH,KAAM,GAAI0sF,UAAW,IAE/B,GAAuB,IAAnBtgB,EAAQ1zE,OACX,OAAO0zE,EAAQ,GAEhB,MAAMioB,EAAU,IAAIhyF,IACdiyF,EAAe,IAAInyF,IACzB,IAAK,MAAMugC,KAAU0pC,EACpB1pC,EAAO1iC,KAAKyB,QAAQd,GAAO0zF,EAAQ9xF,IAAI5B,IACvC+hC,EAAOgqD,UAAUjrF,QAAQ,EAAEq8D,EAAY99D,MACtC,MAAMzH,EAASkzC,EAAAxE,SAASqtD,EAAcx2B,EAAY,IAAIz7D,KACtDrC,EAAKyB,QAAQd,GAAOpI,EAAOgK,IAAI5B,MAGjC,MAAM+rF,EAAkC,GAExC,OADA4H,EAAa7yF,QAAQ,CAACzB,EAAM89D,IAAe4uB,EAAUrzF,KAAK,CAACykE,EAAYryB,EAAA/rC,OAAOM,MACvE,CAAEA,KAAMyrC,EAAA/rC,OAAO20F,GAAU3H,UAAAA,IAGjC,MAAa6H,EAOZtyF,YAAqBygC,EAA+C/yB,EAA4F6kF,EAAsDC,GAAjMvyF,KAAAwgC,OAAAA,EAA+CxgC,KAAAyN,SAAAA,EAA4FzN,KAAAsyF,qBAAAA,EAAsDtyF,KAAAuyF,iBAAAA,EAW9MvyF,KAAAwyF,4BAAoDz4F,EAV3D,MAAMo4F,EAAU,IAAIhyF,IACpBqgC,EAAO1iC,KAAKyB,QAAQd,GAAO0zF,EAAQ9xF,IAAI5B,IACvC+hC,EAAOgqD,UAAUjrF,QAAQ,EAAE,CAAEzB,KAAUA,EAAKyB,QAAQd,GAAO0zF,EAAQ9xF,IAAI5B,KACvEuB,KAAKyyF,aAAelpD,EAAA/rC,OAAO20F,GAE3B,MAAMxE,EAAqB,IAAIvB,EAC/BpsF,KAAKyyF,aAAalzF,QAAQd,GAAOkvF,EAAmB8B,SAAShxF,EAAK,KAClEuB,KAAK0yF,iBAAmB/E,EAAmBhwF,SAI5Cg1F,4BAIC,OAHK3yF,KAAKwyF,wBAA0BxyF,KAAKyN,WACxCzN,KAAKwyF,uBAAyB5M,EAActqF,MAAM0E,KAAKyN,SAASpT,OAE1D2F,KAAKwyF,uBAGbzyF,qBAAqB0sF,EAAiBjC;CACrC,GAAIxqF,KAAK4yF,6BAA6B5yF,KAAK0yF,iBAAkBjG,GAAU,CACtE,GAAIjC,EAAW,CACd,MAAMF,EAAStqF,KAAK2yF,sBAAwB3yF,KAAK2yF,sBAAsBniB,SAASic,EAASjC,EAAwB,QAAf31E,EAAE7U,KAAKyN,gBAAQ,IAAAoH,OAAA,EAAAA,EAAEw6E,gBAAat1F,EAC1HwwF,EAASvqF,KAAKsyF,qBAAqB9hB,SAASic,EAASjC,EAAWxqF,KAAKuyF,kBAC3E,OAAQj1D,EAAQx2B,OAAOwjF,EAAQC,GAEhC,OAAO,EAER,OAAO,EAGAxqF,6BAA6B2yF,EAAuBjG,GAC3D,IAEIhuF,EAFAo0F,EAAgBnG,EAAApD,aAAa,CAAEvpF,CAAC0sF,IAAU,GAAQ,QAGtD,KAAgC,iBAAlBoG,IAA+Bp0F,EAAMZ,OAAOC,KAAK+0F,GAAe,KAAK,CAElF,KADAH,EAAmBA,EAAiBj0F,IAEnC,OAAO,EAERo0F,EAAgBA,EAAcp0F,GAE/B,OAAO,GAjDTG,EAAAyzF,yBAAAA,EAqDAzzF,EAAAk0F,gCAAA,cAAqDT,EACpDtyF,YAAY6nF,EAA8ByH,EAA6B3wE,EAAoCq0E,GAC1GzuF,MAAM,CAAExG,KAAM8pF,EAAcoL,UAAWxI,UAAW,SAAMzwF,EAAW6tF,EAAeyH,GADZrvF,KAAA0e,OAAAA,EAAoC1e,KAAA+yF,aAAAA,0KC9wB5G,MAAaE,UAA6Bp6E,EAAAlE,WAWzC5U,YACkBsgF,EACjB9U,GAEAjnE,QAHiBtE,KAAAqgF,iBAAAA,EAJDrgF,KAAAkzF,0BAAgElzF,KAAK8nD,UAAU,IAAI7pC,EAAAjG;AAC3FhY,KAAAmzF,yBAA6DnzF,KAAKkzF,0BAA0B37E,MAOpGvX,KAAK8vF,kBAAoB9vF,KAAK8nD,UAAU,IAAIsrC,EAAAhF,aAAapuF,KAAKqgF,sBAAkBtmF,EAAWwxE,IAC3FvrE,KAAK4nF,cAAgB,IAAIwL,EAAAxN,cAAc,IAAIwN,EAAAhG,0BAA6B,IAAIgG,EAAAhH,oBAE5EpsF,KAAKqzF,6BAA+BrzF,KAAK8nD,UAAU,IAAI7b,EAAAlpB,iBAAiB,IAAM/iB,KAAKszF,sBAAuB,KAC1GtzF,KAAK8nD,UAAUj/B,EAAAq8D,SAASqB,GAA2B0E,EAAA7F,WAAWQ,eAAeoB,yBAAyBS,GAA2BznF,KAAKuzF,gCAAgC9L,KACtKznF,KAAK8nD,UAAU9nD,KAAK8vF,kBAAkBvB,YAAY,IAAMvuF,KAAKqzF,6BAA6B9vE,aAG3FxjB,mBACC,MAAM+vF,QAA0B9vF,KAAK8vF,kBAAkB0D,oBACvDxzF,KAAK4nF,cAAgB,IAAIwL,EAAAxN,cAAc,IAAIwN,EAAAhG,0BAA6B0C,GAGzE/vF,uBACC,OAAOC,KAAK4nF,cAAc6L,SAO3B1zF,SAAS4pC,EAAY2B,GACpB,MAAMmhD,EAA0B,iBAAT9iD,EAAoBA,OAAO5vC,EAC5CywF,EAAYkC,EAAAxC,yBAAyBvgD,GAAQA,EAAO+iD,EAAAxC,yBAAyB5+C,GAAQA,EAAO,GAClG,OAAOtrC,KAAK4nF,cAAcpX,SAASic,EAASjC,OAAWzwF,GAOxDgG,YAAYtB,EAAaK,EAAYozD,EAAYC;AAChD,OAAOz5D,QAAQ0B,OAAO,IAAI4E,MAAM,kBAGjCe,QAAWtB,GACV,OAAOuB,KAAK4nF,cAAcmE,QAAWttF,EAAK,QAAI1E,GAG/CgG,OAMC,OAAOC,KAAK4nF,cAAc9pF,UAAK/D,GAGhCgG,4BACC,MAAM4tF,QAA2B3tF,KAAK8vF,kBAAkB0D,oBACxDxzF,KAAK0zF,6BAA6B/F,GAG3B5tF,6BAA6B4zF,GACpC,MAAMlmF,EAAWzN,KAAK4nF,cAAc6L,SAC9BjzD,EAASxgC,KAAK4nF,cAAcgM,uCAAuCD,GACzE3zF,KAAK2gB,QAAQ6f,EAAQ/yB,EAAQ,GAGtB1N,gCAAgCjC,GACvC,MAAM2P,EAAWzN,KAAK4nF,cAAc6L,SAC9BjzD,EAASxgC,KAAK4nF,cAAciM,qCAAqC,IAAIT,EAAAhG,0BAA6BtvF,GACxGkC,KAAK2gB,QAAQ6f,EAAQ/yB,EAAQ,GAGtB1N,QAAQ+zF,EAA2CrmF,EAA8BiR,GACxF,MAAMnH,EAAQ,IAAI67E,EAAAf,yBAAyByB,EAAqB,CAAEz5F,KAAMoT,GAAYzN,KAAK4nF,eACzFrwE,EAAMmH,OAASA,EACfnH,EAAMw7E,aAAe/yF,KAAK+zF,uBAAuBr1E,GACjD1e,KAAKkzF,0BAA0Bj7E,KAAKV,GAG7BxX,uBAAuBlI,GAC9B,OAAQA,GACP,KAAA,EACC,OAAOmI,KAAK4nF,cAAcU,SAAS3qF,SACpC,KAAA,EACC,OAAOqC,KAAK4nF,cAAcoI,uBAAuBryF,SAEnD,MAAO,IA/FTiB,EAAAq0F,qBAAAA;2ECQA,SAAgBe,EAAUr2E,GACzB,OAAQA,EAAQvG,IAAI68E,YAAct2E,EAAQvG,IAAI68E,YAAc,KAAOt2E,EAAQvG,IAAI68E,WAAa,KAAmC,OAA3Bt2E,EAAQvG,IAAI68E,WAGjH,SAASC,EAAav2E,GACrB,OAAkC,MAA3BA,EAAQvG,IAAI68E,mHAfPr1F,EAAAu1F,gBAAkB/tB,EAAA5lE,gBAAiC,kBAUhE5B,EAAAo1F,UAAAA,EAQAp1F,EAAAw1F,OAAO/vE,eAAsB1G,GAC5B,IAAKq2E,EAAUr2E,GACd,MAAM,IAAI3e,MAAM,mBAAqB2e,EAAQvG,IAAI68E,YAElD,OAAIC,EAAav2E,GACT,YAEa4jC,EAAApnB,eAAexc,EAAQoR,SAC9BpU,YAGf/b,EAAAy1F,OAAOhwE,eAA8B1G,GACpC,IAAKq2E,EAAUr2E,GACd,MAAM,IAAI3e,MAAM,mBAAqB2e,EAAQvG,IAAI68E,YAElD,GAAIC,EAAav2E,GAChB,OAAO,KAER,MAAMvE,QAAemoC,EAAApnB,eAAexc,EAAQoR,QAC5C,OAAO1zB,KAAKC,MAAM8d,EAAOuB,aAY1BkO,EAAAq8D,SAASqB,GAA2B0E,EAAA7F,WAAWQ,eAC7C0O,sBAAsB,CACtB36E,GAAI,OACJ46E,MAAO,GACPrN,MAAOr3B,EAAAC,SAAS,EAA0B,MAC1Ct9C,KAAM,SACNuuD,WAAY,CACXyzB,aAAc,CACbhiF,KAAM,SACNM,QAAS,wEACT2hF,oBAAqB5kC,EAAAC,SAAS,EAAS;AAExC4kC,sBAAuB,CACtBliF,KAAM,UACNq/C,SAAS,EACT22B,YAAa34B,EAAAC,SAAS,EAAa,OAEpC6kC,0BAA2B,CAC1BniF,KAAM,CAAC,OAAQ,UACfq/C,QAAS,KACT4iC,oBAAqB5kC,EAAAC,SAAS,EAAsB,OAErD8kC,oBAAqB,CACpBpiF,KAAM,SACNqiF,KAAM,CAAC,MAAO,KAAM,YACpBC,iBAAkB,CACjBjlC,EAAAC,SAAS,EAAmB,MAC5BD,EAAAC,SAAS,EAAkB,MAC3BD,EAAAC,SAAS,EAAwB,OAElC+B,QAAS,WACT22B,YAAa34B,EAAAC,SAAS,EAAgB,OAEvCilC,0BAA2B,CAC1BviF,KAAM,UACNq/C,SAAS,EACT22B,YAAa34B,EAAAC,SAAS,EAAsB,0KC9EhDlxD,EAAAo2F,eAAA,MAECj1F,YAA6BusD,GAAAtsD,KAAAssD,QAAAA,EAE7BvsD,OAAO4d,EAAcpG,GACpB,MAAM,IAAIvY,MAAM,kBAGjBe,KAAK4d,EAAcswB,EAAiB/sC,GACnC,OAAQ+sC,GACP,IAAK,UAAW,OAAOjuC,KAAKssD,QAAQlJ,QAAQliD,EAAK,GAAIyd,EAAAf,kBAAkBhJ,MACrE1b,KAAKmrB,OAASjN,IAAAA,EAAK2X,OAAAA,MACnB,MAAM3V,QAAemoC,EAAApnB,eAAepL,GACpC,MAAwB,CAAC,CAAEklE,WAAY78E,EAAI68E,WAAYgB,QAAS79E,EAAI69E,SAAW77E,KAGlF,MAAM,IAAIpa,MAAM,kBAIlB,MAAak2F,EAIZn1F,YAA6B2iD,GAAA1iD,KAAA0iD,QAAAA;AAE7B3iD,cAAcoQ,EAA0BpI,GACvC,OAAOmtF,EAAqB9xC,QAAQpjD,KAAK0iD,QAASvyC,EAASpI,GAG5DhI,qBAAqB2iD,EAAmBvyC,EAA0BpI,GACjE,MAAOqP,EAAKgC,SAAgBspC,EAAQvjD,KAAsB,UAAW,CAACgR,IACtE,MAAO,CAAEiH,IAAAA,EAAK2X,OAAQwyB,EAAAnnB,eAAehhB,KAZvCxa,EAAAs2F,qBAAAA,2ICfAt2F,EAAAu2F,cAAO9wE,eAA6B+wE,EAAuBjlF,EAAoB,IAC9E,MAAMklF,EAAaC,EAAAh6F,MAAS85F,GACtBG,EAAWplF,EAAQqlF,UAjB1B,SAA2BH,GAC1B,MAA4B,UAAxBA,EAAWtzC,SACPhnD,QAAQC,IAAIy6F,YAAc16F,QAAQC,IAAI06F,YAAc,KACzB,WAAxBL,EAAWtzC,WACdhnD,QAAQC,IAAI26F,aAAe56F,QAAQC,IAAI46F,aAAe76F,QAAQC,IAAIy6F,YAAc16F,QAAQC,IAAI06F,aAG7F,KAU8BG,CAAkBR,GAEvD,IAAKE,EACJ,OAAO,KAGR,MAAMO,EAAgBR,EAAAh6F,MAASi6F,GAE/B,IAAK,YAAYhtE,KAAKutE,EAAc/zC,UAAY,IAC/C,OAAO,KAGR,MAAMwa,EAAO,CACZvtB,KAAM8mD,EAAcC,UAAY,GAChC9mD,KAAM6mD,EAAc7mD,OAAoC,UAA3B6mD,EAAc/zC,SAAuB,MAAQ,MAC1Ei0C,KAAMF,EAAcE,KACpBC,oBAAoBt3D,EAAAnC,UAAUrsB,EAAQ+lF,YAAa/lF,EAAQ+lF,WAG5D,MAA+B,UAAxBb,EAAWtzC,SACf,UAAK,IAAArpD,QAAA,CAAA2gD,EAAAC,KAAA3B,EAAA,CAAa,oBAAkB0B,EAAAC,MAAGijB,GACvC,UAAK,IAAA7jE,QAAA,CAAAy9F,EAAAC,KAAAz+C,EAAA,CAAa,qBAAmBw+C,EAAAC,MAAG75B;2ICrC5C39D,EAAAy3F,oBAAOhyE,eAAmCi3C,EAAyCiQ,EAA2B+qB,GAI7G,IAAIz8C,EAAsBy8C,GAAiBA,EAAep2F,IAAI,2BAA0B,IAAiC,KACzH,GAAI25C,EACH,OAAOA,EAER,GAAIyhB,EAAmBinB,yBAA0B,CAChD,IACC,MACMzjF,SADiBysE,EAAYrxE,SAASohE,EAAmBinB,2BACxCzjF,MAAM6b,WAC7Bk/B,EAAOa,EAAA5D,OAAOh4C,GAASA,EAAQ,KAC9B,MAAOhG,GACR+gD,EAAO,KAGR,IAAKA,EAAM,CACVA,EAAOa,EAAAvD,eACP,UACOo0B,EAAYjxE,UAAUghE,EAAmBinB,yBAA0BhhC,EAAA1oB,SAASyB,WAAWuf,IAC5F,MAAOh+C,MAQX,OAHIg+C,GAAQy8C,GACXA,EAAeC,MAAM,2BAA4B18C,EAAI,GAE/CA,qICjCKj7C,EAAA43F,cAAgBpwB,EAAA5lE,gBAA+B,wLCQ5D,MAAai2F,EAKZ12F,YAAoB22F,EAAwBzlF,GAAxBjR,KAAA02F,OAAAA,EAAwB12F,KAAAiR,QAAAA,EAHpCjR,KAAA22F,UAAoC,KACpC32F,KAAA42F,8BAA+C;AAIvDC,eAKC,OAJK72F,KAAK22F,YACT32F,KAAK22F,UAAY32F,KAAK82F,YAGhB92F,KAAK22F,UAGb52F,aACC,GAAIC,KAAK22F,UACR,OAGD,MAAME,QAAiB72F,KAAK+2F,YAExB/2F,KAAK22F,YAIT32F,KAAK22F,UAAYE,GAGV92F,WACP,IAGC,OAFAC,KAAK42F,8BAAgCt+F,EAAGiD,aAAayE,KAAK02F,QAAQ/7E,WAE3Dtf,KAAKC,MAAM0E,KAAK42F,+BACtB,MAAO/6F,GAKR,MAJmB,WAAfA,EAAM5B,MACT+F,KAAKiR,QAAQpV,GAGP,IAIDkE,kBACP,IAGC,OAFAC,KAAK42F,qCAAuCv3C,EAAAnlD,SAAS8F,KAAK02F,SAAS/7E,WAE5Dtf,KAAKC,MAAM0E,KAAK42F,+BACtB,MAAO/6F,GAKR,MAJmB,WAAfA,EAAM5B,MACT+F,KAAKiR,QAAQpV,GAGP,IAMTkE,QAAWtB,EAAaugB,GACvB,MAAM5H,EAAMpX,KAAK62F,SAASp4F,GAC1B,OAAIkgC,EAAAtC,kBAAkBjlB,GACd4H,EAGD5H,EAGRrX,QAAQtB,EAAapE,GAGpB,GAAIskC,EAAAtC,kBAAkBhiC,GACrB,OAAO2F,KAAKsnC,WAAW7oC,IAIJ,iBAATpE,GAAqC,iBAATA,GAAqC,kBAATA,GAC9D2F,KAAK62F,SAASp4F,KAASpE,KAK5B2F,KAAK62F,SAASp4F,GAAOpE,EACrB2F,KAAKg3F,YAGNj3F,WAAWtB,GAGLkgC,EAAAvC,YAAYp8B,KAAK62F,SAASp4F,MAC9BuB,KAAK62F,SAASp4F,QAAO1E,EACrBiG,KAAKg3F,YAICj3F,WACP,MAAMk3F,EAAqB57F,KAAKsD,UAAUqB,KAAK62F,SAAU,KAAM;CAC/D,GAAII,IAAuBj3F,KAAK42F,8BAIhC,IACCv3C,EAAAf,cAAct+C,KAAK02F,OAAQO,GAC3Bj3F,KAAK42F,8BAAgCK,EACpC,MAAOp7F,GACRmE,KAAKiR,QAAQpV,KAzGhB+C,EAAA63F,YAAAA,EA8GA,IAAAS,EAAA,MAAA,IAAaA,EAAb,MAAaA,EAQZn3F,YACsBu7D,EACRC,GAEbv7D,KAAKm3F,YAAc,IAAIV,EAAYp+F,EAAKwB,KAAKyhE,EAAmB5gE,aAAcw8F,EAAaE,YAAav7F,GAAS0/D,EAAW1/D,MAAMA,IAGnIkE,OACC,OAAOC,KAAKm3F,YAAYE,OAKzBt3F,QAAWtB,EAAaugB,GACvB,OAAOhf,KAAKm3F,YAAYG,QAAQ74F,EAAKugB,GAGtCjf,QAAQtB,EAAapE,GACpB2F,KAAKm3F,YAAYI,QAAQ94F,EAAKpE,GAG/B0F,WAAWtB,GACVuB,KAAKm3F,YAAY7vD,WAAW7oC,KAE9B,OA5ByBy4F,EAAAE,WAAa,eAJzBF,EAAYrwB,EAAA,CAStBC,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAAgT,EAAAhI,cAVUolB,IAAb,GAAat4F,EAAAs4F,aAAAA,yEChHb,IAAYM,uJAFC54F,EAAA64F,gBAAkBrxB,EAAA5lE,gBAAiC,kBAEhE,SAAYg3F,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,SAAA,GAAA,WAFD,CAAYA,EAAA54F,EAAA44F,sBAAA54F,EAAA44F,oBAAmB,KAoG/B,SAAkBE,GAKjBA,EAAAA,EAAA,OAAA,GAAA,SAKAA,EAAAA,EAAA,UAAA,GAAA;CAVD,CAAkB94F,EAAA84F,eAAA94F,EAAA84F,aAAY,KAkB9B,MAAaC,UAA+B9+E,EAAAlE,WAA5C5U,kCAIkBC,KAAA43F,oBAAsB53F,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACjDhY,KAAA63F,mBAAqB73F,KAAK43F,oBAAoBrgF,MAEpCvX,KAAA83F,iBAAmB93F,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAChDhY,KAAA+3F,gBAAkB/3F,KAAK83F,iBAAiBvgF,MAEhCvX,KAAAg4F,YAAc,IAAI/3F,IAClBD,KAAAi4F,eAAiB,IAAIh4F,IAE9BF,SAASu/E,GAChB,OAAY,IAALA,EAAgCt/E,KAAKg4F,YAAch4F,KAAKi4F,eAIhEl4F,IAAItB,EAAa6gF,EAAqB4Y,GACrC,MAAMp5F,EAAQkB,KAAKm4F,SAAS7Y,GAAOp/E,IAAIzB,GAEvC,OAAIkgC,EAAAtC,kBAAkBv9B,GACdo5F,EAGDp5F,EAIRiB,WAAWtB,EAAa6gF,EAAqB4Y,GAC5C,MAAMp5F,EAAQkB,KAAKm4F,SAAS7Y,GAAOp/E,IAAIzB,GAEvC,OAAIkgC,EAAAtC,kBAAkBv9B,GACdo5F,EAGS,SAAVp5F,EAIRiB,UAAUtB,EAAa6gF,EAAqB4Y,GAC3C,MAAMp5F,EAAQkB,KAAKm4F,SAAS7Y,GAAOp/E,IAAIzB,GAEvC,OAAIkgC,EAAAtC,kBAAkBv9B,GACdo5F,EAGD1lE,SAAS1zB,EAAO,IAGxBiB,MAAMtB,EAAaK,EAAqDwgF,GAGvE,GAAI3gD,EAAAtC,kBAAkBv9B,GACrB,OAAOkB,KAAK0b,OAAOjd,EAAK6gF,GAIzB,MAAM8Y,EAAWh0F,OAAOtF,GAIxB,OADqBkB,KAAKm4F,SAAS7Y,GAAOp/E,IAAIzB,KACzB25F,EACb1/F,QAAQyB,WAIhB6F,KAAKm4F,SAAS7Y,GAAOl/E,IAAI3B,EAAK25F,GAG9Bp4F,KAAK43F,oBAAoB3/E,KAAK,CAAEqnE,MAAAA,EAAO7gF,IAAAA,IAEhC/F,QAAQyB,WAGhB4F,OAAOtB,EAAa6gF,GAEnB,OADmBt/E,KAAKm4F,SAAS7Y,GAAOh/E,OAAO7B,IAM/CuB,KAAK43F,oBAAoB3/E,KAAK,CAAEqnE,MAAAA,EAAO7gF,IAAAA;AAEhC/F,QAAQyB,WANPzB,QAAQyB,UASjB4F,aACCs4F,EAAWr4F,KAAKg4F,YAAah4F,KAAKi4F,eAAgB,WAAY,YAG/Dl4F,cAAcu4F,IAIdv4F,QACCC,KAAK83F,iBAAiB7/E,KAAK,CAAEsgF,OAAQf,EAAoBgB,QAIpDn0E,eAAeg0E,EAAWnzE,EAA6BmqE,EAAgCoJ,EAAoBC,GACjH,MAAMC,EAAa75F,IAClB,IACC,OAAOzD,KAAKC,MAAMwD,GACjB,MAAOjD,GACR,OAAOiD,IAIH85F,EAAc,IAAI34F,IAClB44F,EAAoB,IAAI54F,IAC9BilB,EAAO3lB,QAAQ,CAACT,EAAOL,KACtBm6F,EAAYx4F,IAAI3B,EAAKK,GACrB+5F,EAAkBz4F,IAAI3B,EAAKk6F,EAAU75F,MAGtC,MAAMg6F,EAAiB,IAAI74F,IACrB84F,EAAuB,IAAI94F,IACjCovF,EAAU9vF,QAAQ,CAACT,EAAOL,KACzBq6F,EAAe14F,IAAI3B,EAAKK,GACxBi6F,EAAqB34F,IAAI3B,EAAKk6F,EAAU75F,MAGzChI,QAAQy7B,MAAM,0BAA0BkmE,MACxC,IAAIO,EAAiD,GACrDJ,EAAYr5F,QAAQ,CAACT,EAAOL,KAC3Bu6F,EAAa7hG,KAAK,CAAEsH,IAAAA,EAAKK,MAAAA,MAE1BhI,QAAQmiG,MAAMD,GACdliG,QAAQimE,WAERjmE,QAAQie,IAAI8jF,GAEZ/hG,QAAQy7B,MAAM,6BAA6BmmE,MAC3C,IAAIQ,EAAoD,GACxDJ,EAAev5F,QAAQ,CAACT,EAAOL,KAC9By6F,EAAgB/hG,KAAK,CAAEsH,IAAAA,EAAKK,MAAAA,MAE7BhI,QAAQmiG,MAAMC,GACdpiG,QAAQimE,WAERjmE,QAAQie,IAAIgkF,GA7Ibn6F,EAAA+4F,uBAAAA,EAoGA/4F,EAAAy5F,WAAAA,2ECvMA,IAAiBc,uEAAjB,SAAiBA,GACAA,EAAAn0F,QAAhB,SAAwBE,EAAegC,GACtC,OAAIhC,EAAEk0F,UAAYlyF,EAAEkyF,WACX,EACEl0F,EAAEk0F,UAAYlyF,EAAEkyF,UACnB,EAED;CAPT,CAAiBD,EAAAv6F,EAAAu6F,aAAAv6F,EAAAu6F,WAAU,KAW3B,IAAAE,EAAA,MAAA,MAA8BA,EAU7Bt5F,YAAYu5F,EAAqCC,EAAaF,EAAmBG,qBAJzEx5F,KAAAy5F,cAAqB,EACrBz5F,KAAAsZ,QAAwB,GACbtZ,KAAA05F,aAAe,IAAI7gF,EAAAvD,gBAGrCtV,KAAK25F,kBAAoBL,EACzBt5F,KAAK45F,YAAcL,EAGnB,MAAMM,EAASC,EAAO32F,aAAa42F,YAAa/gG,GAAQgH,KAAKg6F,cAAchhG,IAC3EgH,KAAK05F,aAAar5F,IAAIwY,EAAAxD,aAAawkF,IAGnC75F,KAAKi6F,wBAGNl6F,UACCoC,aAAanC,KAAKy5F,cAClBz5F,KAAKk6F,eACLl6F,KAAK05F,aAAa1kF,UAGTjV,yBAIFA,cAAc/G,GAErB,IAAKA,EACJ,OAIGA,EAAIi4D,QAAUj4D,EAAIi4D,OAAOnuD,QAC5B9J,EAAMA,EAAIi4D,QAIX,IAAImoC,EAAY1wF,MAAMC,QAAQ3P,EAAI8J,OAAS9J,EAAI8J,MAAMjJ,KAAK,MAAQb,EAAI8J,MAClE2mB,EAAMzwB,EAAI+F,QAAU/F,EAAI+F,QAAUy4D,EAAAr4B,cAAcnmC,GAG/CogG,GAILp5F,KAAKm6F,SAAS,CAAE1wE,IAAAA,EAAK2vE,UAAAA,IAGZr5F,SAASjH,GAElB,MAAMokB,EAAMyoC,EAAAx+C,aAAanH,KAAKsZ,QAASxgB,EAAGqgG,EAAWn0F,SACjDkY,EAAM,GACTpkB,EAAEuG,MAAQ,EACVW,KAAKsZ,QAAQthB,QAAQklB,EAAK,EAAGpkB,KAExBkH,KAAKsZ,QAAQ4D,GAAK7d,QACtBW,KAAKsZ,QAAQ4D,GAAK7d,MAAQ,GAE3BW,KAAKsZ,QAAQ4D,GAAK7d,OAAU,IAGF,IAAvBW,KAAKy5F,eACRz5F,KAAKy5F,aAAer3F,WAAW,KAC9BpC,KAAKk6F,eACLl6F,KAAKy5F,cAAgB,GACnBz5F,KAAK45F,cAIF75F;AACP,IAAK,IAAIlE,KAASmE,KAAKsZ,QAEtBtZ,KAAK25F,kBAAkBS,WAAqD,iBAAkBv+F,GAAO,GAEtGmE,KAAKsZ,QAAQ9iB,OAAS,GAExB,OAjFe6iG,EAAAG,oBAA8B,IAiF7CH,GAnFA,aAA8BA,uHClC9B,MAAqBgB,UAAuBC,EAAAzoC,QACjC9xD,wBACT,IAAIw6F,EACAt2C,EAAOjkD,KACoB,mBAApB6oB,EAAAnB,QAAQ8yE,UAClBD,EAAa1xE,EAAAnB,QAAQ8yE,SAEtB3xE,EAAAnB,QAAQ8yE,QAAU,SAAUz7F,EAAiB89E,EAAkBp4C,EAAcC,EAAiB5rC,GAC7FmrD,EAAKw2C,iBAAiB17F,EAAS89E,EAAUp4C,EAAMC,EAAQ5rC,GACnDyhG,GACHA,EAAWh5F,MAAMvB,KAAMyL,YAGzBzL,KAAK05F,aAAar5F,IAAIwY,EAAAxD,aAAa,KAC9BklF,IACH1xE,EAAAnB,QAAQ8yE,QAAUD,MAKbx6F,iBAAiB0pB,EAAahxB,EAAcgsC,EAAcC,EAAiB1rC,GAClF,IAAIqB,EAAmB,CACtB++F,UAAW3vE,EACXA,IAAAA,EACAhxB,KAAAA,EACAgsC,KAAAA,EACAC,OAAAA,GAGD,GAAI1rC,EAAK,CACR,IAAI9B,KAAEA,EAAI6H,QAAEA,EAAO+D,MAAEA,GAAU9J,EAC/BqB,EAAKqgG,oBAAsBxjG,EACvB6H,IACH1E,EAAKsgG,mBAAqB57F,GAEvB+D,IACHzI,EAAK++F,UAAY1wF,MAAMC,QAAQ3P,EAAI8J,OAChC9J,EAAI8J,MAAQ9J,EAAI8J,MAAMjJ,KAAK,MAC3Bb,EAAI8J,OAIT9C,KAAKm6F,SAAS9/F,IA1ChBuE,EAAAizD,QAAAwoC;sMCDaz7F,EAAAg8F,kBAAoBx0B,EAAA5lE,gBAAmC,oBAmCvD5B,EAAAi8F,mBAAqB,uBACrBj8F,EAAAk8F,6BAA+B,+BAC/Bl8F,EAAAm8F,2BAA6B,6BAC7Bn8F,EAAAo8F,0BAA4B,4BAC5Bp8F,EAAAq8F,aAAe,sBACfr8F,EAAAs8F,iBAAmB,0BACnBt8F,EAAAu8F,0BAA4B,qKC2BzC,IAAKC,EAmBAC,EAJL,SAASC,KAAiBluD,GACzB,OAAOhpC,OAAOgpC,EAAMrjC,OAAO,CAACC,EAAGuxF,IAAMvxF,EAAIuxF,EAAG,kHAhB7C,SAAKH,GACJA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,gBAAA,GAAA;AACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,yBAAA,IAAA,2BACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,2BAAA,IAAA,6BACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,kBAAA,KAAA,oBACAA,EAAAA,EAAA,yBAAA,KAAA,2BACAA,EAAAA,EAAA,YAAA,MAAA,cAZD,CAAKA,IAAAA,EAAK,KAmBV,SAAKC,GACJA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,iBAAA,IAAA,mBARD,CAAKA,IAAAA,EAAU,KAWf,MAAMG,EAAY,CACjBC,KAAM,gDACNC,QAAS,kDACTC,UAAW,oDACXC,SAAU;AACVC,KAAM,8CACNC,QAAS,kDACTC,WAAY,gDAGPC,EAAe,CACpBC,WAAY,oDACZC,cAAe,4CACfC,OAAQ,qCACRC,mBAAoB,kDAoBfC,EAAiC,CACtCC,WAAY,EACZC,SAduB,GAevBC,OAAM,EACNC,UAAS,EACTrvD,MAAOguD,EAAMxmF,KACb8nF,SAAU,GACVC,WAAY,IAGb,MAAMC,EAEL78F,YAAoB8tB,EAAQwuE,GAARr8F,KAAA6tB,MAAAA,EAEpByuE,iBAA2B,OAAOt8F,KAAK6tB,MAAMyuE,WAC7CC,eAAyB,OAAOv8F,KAAK6tB,MAAM0uE,SAC3CC,aAAuB,OAAOx8F,KAAK6tB,MAAM2uE,OACzCC,gBAA0B,OAAOz8F,KAAK6tB,MAAM4uE,UAC5CrvD,YAAsB,OAAOptC,KAAK6tB,MAAMuf,MAExCrtC,SAASu8F,EAAoBC,EAAmBv8F,KAAK6tB,MAAM0uE,UAC1D,OAAO,IAAIK,EAAMplC,EAAA76C,OAAO,GAAI3c,KAAK6tB,MAAO,CAAEyuE,WAAAA,EAAYC,SAAAA,KAGvDx8F,WAAW88F,KAA2Br/F,GACrC,MAAMk/F,EAAW,IACb18F,KAAK6tB,MAAM6uE,YACXl/F,EAAO7D,IAAImF,IAAS,CAAG+9F,WAAAA,EAAY/9F,MAAAA,MAGvC,OAAO,IAAI89F,EAAMplC,EAAA76C,OAAO,GAAI3c,KAAK6tB,MAAO,CAAE6uE,SAAAA,KAG3C38F,WAAWy8F;AACV,OAAO,IAAII,EAAMplC,EAAA76C,OAAO,GAAI3c,KAAK6tB,MAAO,CAAE2uE,OAAAA,KAG3Cz8F,cAAc08F,GACb,OAAO,IAAIG,EAAMplC,EAAA76C,OAAO,GAAI3c,KAAK6tB,MAAO,CAAE4uE,UAAAA,KAG3C18F,aAAaqtC,GACZ,OAAO,IAAIwvD,EAAMplC,EAAA76C,OAAO,GAAI3c,KAAK6tB,MAAO,CAAEuf,MAAOA,EAAMrjC,OAAO,CAACC,EAAGuxF,IAAMvxF,EAAIuxF,EAAG,MAGhFx7F,kBAAkB48F,GACjB,OAAO,IAAIC,EAAMplC,EAAA76C,OAAO,GAAI3c,KAAK6tB,MAAO,CAAE8uE,WAAAA,KAG3Cn8C,UACC,MAAMk8C,SAAEA,EAAQJ,WAAEA,EAAUC,SAAEA,EAAQC,OAAEA,EAAMC,UAAEA,EAASrvD,MAAEA,EAAKuvD,WAAEA,GAAe38F,KAAK6tB,MAEtF,MAAO,CAAEivE,QADO,CAAC,CAAEJ,SAAAA,EAAUJ,WAAAA,EAAYC,SAAAA,EAAUC,OAAAA,EAAQC,UAAAA,IACzCE,WAAAA,EAAYvvD,MAAAA,GAG/B2vD,iBACC,MAAMC,EAAYh9F,KAAK6tB,MAAM6uE,SAASr0F,OAAO20F,GAAaA,EAAUH,aAAexB,EAAW4B,YAAY,GAC1G,OAAOD,GAAaA,EAAUl+F,MAAQk+F,EAAUl+F,MAAQ,IAI1D,SAASo+F,EAAaC,EAA8CjmG,GACnE,MAAMb,GAAU8mG,GAAc,IAAI90F,OAAOgvB,GAAKA,EAAE+lE,gBAAkBlmG,GAAM,GACxE,OAAOb,EAASA,EAAOyI,MAAQ,EAGhC,SAASu+F,EAAyBxhC,GAGjC,OADeA,EAAQriE,MAAM6O,OAAOkzF,GAAyD,IAApDA,EAAE+B,UAAU37F,QADlB,6CAErBoI,OAA2C,CAAC1T,EAAQoC,KACjE,MAAM8kG,EAAQC,EAAgB3hC,EAASpjE,EAAK6kG,WAI5C,OAHIC,GACHlnG,EAAOc,KAAK,CAACsB,EAAK6kG,UAAU1hG,UALK,2CAKgCpF,QAAS+mG,IAEpElnG,GACL,IAGJ,SAASonG,EAAmB5hC,GAC3B,GAAIA,EAAQkF,WAAY;AACvB,MAAMx/C,EAAUs6C,EAAQkF,WAAW14D,OAAO5D,GAAKA,EAAEhG,MAAQ+8F,EAAUO,YAC7D2B,EAAY,IAAIjqE,OAAO,kEAEvBmN,EAAMrf,EAAQlZ,OAAO2B,GAAK0zF,EAAUn1E,KAAKve,EAAElL,QAAQ,GACzD,OAAO8hC,EAAM,CAAEA,IAAKA,EAAI9hC,MAAO6+F,YAAa/8D,EAAI9hC,OAAU,KAE3D,OAAO0+F,EAAgB3hC,EAAS2/B,EAAUO,YAG3C,SAAS6B,EAAiB/hC,GACzB,MAAO,CACNj7B,IAAK,GAAGi7B,EAAQgiC,oBAAoBrC,EAAUK,qBAC9C8B,YAAa,GAAG9hC,EAAQgiC,oBAAoBrC,EAAUK,QAIxD,SAASiC,EAAajiC,GACrB,MAAM0hC,EAAQC,EAAgB3hC,EAAS2/B,EAAUC,MACjD,GAAI8B,EACH,OAAOA,EAER,MAAM38D,EAAM+W,EAAQhU,MAAM,2BAC1B,MAAO,CAAE/C,IAAAA,EAAK+8D,YAAa/8D,GAG5B,SAAS48D,EAAgB3hC,EAAsCrpD,GAE9D,OADeqpD,EAAQriE,MAAM6O,OAAOkzF,GAAKA,EAAE+B,YAAc9qF,GAAM,GAC/C,CAAEouB,IAAK,GAAGi7B,EAAQkiC,YAAYvrF,IAAQmrF,YAAa,GAAG9hC,EAAQgiC,oBAAoBrrF,KAAW,KAG9G,SAASwrF,EAAcniC,EAAsCn6D,GAC5D,MAAMlE,EAASq+D,EAAQkF,WAAalF,EAAQkF,WAAW14D,OAAO5D,GAAKA,EAAEhG,MAAQiD,GAAY,GACnF5C,EAAQtB,EAAOhH,OAAS,GAAKgH,EAAO,GAAGsB,MAC7C,OAAOA,EAAQA,EAAMqF,MAAM,KAAKxK,IAAIq0D,GAAK+1B,EAAAhkB,0BAA0B/R,IAAM,GAG1E,SAASiwC,EAAUpiC,GAClB,MAAMr+D,EAASq+D,EAAQkF,WAAalF,EAAQkF,WAAW14D,OAAO5D,GAAKA,EAAEhG,MAAQu9F,EAAaG,QAAU,GACpG,OAAQ3+F,EAAOhH,OAAS,GAAKgH,EAAO,GAAGsB,OAAU,GAGlD,SAASo/F,EAAsBriC,GAC9B,MAAMr+D,EAASq+D,EAAQkF,WAAalF,EAAQkF,WAAW14D,OAAO5D,GAAKA,EAAEhG,MAAQu9F,EAAaI,oBAAsB,GAC1Gt9F,EAAStB,EAAOhH,OAAS,GAAKgH,EAAO,GAAGsB,OAAU;CACxD,OAAOA,EAAQA,EAAMqF,MAAM,KAAO,GAOnC,SAASg6F,EAAYC,EAAwCviC,EAAsCngE,EAAe67B,EAAc8mE,GAC/H,MAAMC,EAAkC,CACvC9kC,SAAUgkC,EAAgB3hC,EAAS2/B,EAAUI,UAC7C2C,OAAQf,EAAgB3hC,EAAS2/B,EAAUE,SAC3C8C,UAAWhB,EAAgB3hC,EAAS2/B,EAAUG,WAC9C8C,QAASjB,EAAgB3hC,EAAS2/B,EAAUM,SAC5C4C,WAAYjB,EAAmB5hC,GAC/B8iC,SAAUf,EAAiB/hC,GAC3B+iC,KAAMd,EAAajiC,GACnBgjC,iBAAkBxB,EAAyBxhC,IAG5C,MAAO,CACND,WAAY,CACXjiD,GAAIoqE,EAAA9jB,sBAAsBm+B,EAAiBl+B,UAAUQ,cAAe09B,EAAiBU,eACrFjlD,KAAMukD,EAAiBW,aAExB7nG,KAAMknG,EAAiBU,cACvBjjC,QAASA,EAAQA,QACjBnM,KAAMmM,EAAQmjC,YACdC,YAAab,EAAiBa,YAC9Bx+B,YAAa29B,EAAiBl+B,UAAUO,YACxCP,UAAWk+B,EAAiBl+B,UAAUQ,cACtCC,qBAAsBy9B,EAAiBl+B,UAAU++B,YACjDzW,YAAa4V,EAAiBc,kBAAoB,GAClDC,aAAcjC,EAAakB,EAAiBjB,WAAY,WACxDiC,OAAQlC,EAAakB,EAAiBjB,WAAY,iBAClDkC,YAAanC,EAAakB,EAAiBjB,WAAY,eACvDmB,OAAAA,EACAv9B,WAAY,CACXH,aAAco9B,EAAcniC,EAASmgC,EAAaC,YAClDqD,cAAetB,EAAcniC,EAASmgC,EAAaE,eACnDl9B,OAAQi/B,EAAUpiC,GAClB0jC,mBAAoBrB,EAAsBriC,IAS3CmF,cAAe,CACdtlE,OAAS67B,EAAM+kE,WAAa,GAAK/kE,EAAMglE,SAAY7gG,EACnDqhG,WAAYxlE,EAAMwlE,WAClBsB,YAAAA,GAEDmB,SAnDoBpyD,EAmDEgxD,EAAiBhxD,OAlDH,IAA9BA,EAAMzrC,QAAQ,aADtB,IAAsByrC,EA4DtB,IAAAqyD,EAAA,MAAA,IAAaA,EAAb,MASC1/F,YACmC2/F,EACJnkC,EACQD,EACFg+B,EACL/tB,EACGo0B,EACPrJ,GANOt2F,KAAA0/F,eAAAA;AACJ1/F,KAAAu7D,WAAAA,EACQv7D,KAAAs7D,mBAAAA,EACFt7D,KAAAs5F,iBAAAA,EACLt5F,KAAAurE,YAAAA,EACGvrE,KAAA2/F,eAAAA,EAGlC,MAAMlkG,EAASkkG,EAAeC,kBAC9B5/F,KAAK6/F,qBAAuBpkG,GAAUA,EAAOqkG,WAC7C9/F,KAAK+/F,qBAAuBtkG,GAAUA,EAAOukG,WAC7ChgG,KAAKigG,qBAAuBC,EAA0BP,EAAe9jC,QAAS77D,KAAKs7D,mBAAoBt7D,KAAKurE,YAAa+qB,GAGlHv2F,IAAI1H,EAAO,IAClB,MAAO,GAAG2H,KAAK6/F,uBAAuBxnG,IAGvC0H,YACC,QAASC,KAAK6/F,qBAGf9/F,uBAAuB4pC,EAAgDkyB,GACtE,MAAMvC,EAAsC6qB,EAAA/kB,uBAAuBz1B,GAAQ,KAAOA,EAClF,GAAI2vB,GAAaA,EAAUyH,WAAW/B,QAAUmhC,EAAAphC,cAAczF,EAAUyH,WAAW/B,OAAQh/D,KAAK2/F,eAAe9jC,SAC9G,OAAOnjE,QAAQyB,QAAQm/D,GAExB,MAAM3/C,GAAEA,EAAEkgC,KAAEA,GAASyf,EAAYA,EAAUsC,WAAmCjyB,EAC9E,IAAIpS,GAAQ,IAAIqlE,GACdwD,UAAUhF,EAAMiF,gBAAiBjF,EAAMkF,kBAAmBlF,EAAMmF,aAAcnF,EAAMoF,yBAA0BpF,EAAMqF,qBACpHC,SAAS,EAAG,GACZC,WAAWtF,EAAWuF,OAAQ,+BAC9BD,WAAWtF,EAAWwF,iBAAkBvF,EAAcF,EAAM0F,cAQ9D,OALCvpE,EADGsiB,EACKtiB,EAAMopE,WAAWtF,EAAW0F,YAAalnD,GAEzCtiB,EAAMopE,WAAWtF,EAAW2F,cAAernF,GAG7C3Z,KAAKihG,aAAa1pE,EAAO5Y,EAAAf,kBAAkBhJ,MAChD1b,KAAK,EAAGgoG,kBAAAA;AACR,MAAOC,GAAgBD,EACvB,IAAKC,IAAiBA,EAAar7E,SAAStvB,OAC3C,OAAO,KAER,GAAIqlE,EAAS,CACZ,MAAMulC,EAAeD,EAAar7E,SAASzd,OAAO2lD,GAAKA,EAAE6N,UAAYA,GAAS,GAC9E,GAAIulC,EAAc,CACjB,MAAM9nC,EAAY6kC,EAAYgD,EAAcC,EAAc,EAAG7pE,GAC7D,GAAI+hC,EAAUyH,WAAW/B,QAAUmhC,EAAAphC,cAAczF,EAAUyH,WAAW/B,OAAQh/D,KAAK2/F,eAAe9jC,SACjG,OAAOvC,EAGT,OAAO,KAER,OAAOt5D,KAAKqhG,6BAA6BF,EAAcA,EAAar7E,UAClE5sB,KAAKooG,GACDA,EACInD,EAAYgD,EAAcG,EAAY,EAAG/pE,GAE1C,QAOZx3B,MAAM4pC,EAAW2B,GAChB,MAAMn7B,EAAyBwO,EAAAf,kBAAkBC,oBAAoB8rB,GAAQ,GAAKA,EAC5E5hC,EAA2B4W,EAAAf,kBAAkBC,oBAAoB8rB,GAAQA,EAAO2B,EAEtF,IAAKtrC,KAAKuhG,YACT,OAAO7oG,QAAQ0B,OAAO,IAAI4E,MAAM,6CAGjC,MAAMwT,EAAOrC,EAAQqxF,MAAQ,MAASrxF,EAAQpC,KAAO,OAAS,MAC9D,IAAIA,EAAOoC,EAAQpC,MAAQ,GAC3B,MAAMwuF,EAAW/kC,EAAAp4B,aAAajvB,EAASnI,GAAKA,EAAEu0F,SAAU,IAUxDv8F,KAAKs5F,iBAAiBc,WAAwE,uBAAwB,CAAE5nF,KAAAA,EAAMzE,KAAAA,IAE9H,IAAIwpB,GAAQ,IAAIqlE,GACdwD,UAAUhF,EAAMqG,yBAA0BrG,EAAMiF,gBAAiBjF,EAAMkF,kBAAmBlF,EAAMmF,aAAcnF,EAAMoF,0BACpHE,SAAS,EAAGnE,GACZoE,WAAWtF,EAAWuF,OAAQ,+BAC9BD,WAAWtF,EAAWwF,iBAAkBvF,EAAcF,EAAM0F;CAuC9D,OArCI/yF,IAaHA,GALAA,GANAA,EAAOA,EAAKrP,QAAQ,8CAA+C,CAACya,EAAGuoF,EAAgBC,KACtFpqE,EAAQA,EAAMopE,WAAWtF,EAAWuG,SAAUD,GAAYD,GACnD,MAIIhjG,QAAQ,yCAA0C,CAACya,EAAG0oF,EAAWC,KAC5EvqE,EAAQA,EAAMopE,WAAWtF,EAAW0G,IAAKD,GAAOD,GACzC,MAGIryE,UAGXzhB,EAAOA,EAAKvX,OAAS,IAAMuX,EAAOA,EAAKnS,UAAU,EAAG,KACpD27B,EAAQA,EAAMopE,WAAWtF,EAAW4B,WAAYlvF,IAGjDwpB,EAAQA,EAAMyqE,WAAU,IAExBzqE,EADUpnB,EAAQ8xF,IACV1qE,EAAMopE,WAAWtF,EAAW0F,eAAgB5wF,EAAQ8xF,KAClD9xF,EAAQqxF,MACVjqE,EAAMopE,WAAWtF,EAAW2F,iBAAkB7wF,EAAQqxF,OAEtDjqE,EAAMyqE,WAAU,GAGK,iBAAnB7xF,EAAQqsF,SAClBjlE,EAAQA,EAAMyqE,WAAW7xF,EAAQqsF,SAGD,iBAAtBrsF,EAAQssF,YAClBllE,EAAQA,EAAM2qE,cAAc/xF,EAAQssF,YAG9Bz8F,KAAKihG,aAAa1pE,EAAOxvB,GAAO7O,KAAK,EAAGgoG,kBAAAA,EAAmBiB,MAAAA,MAajE,MAAO,CAAEC,UAZUlB,EAAkBvnG,IAAI,CAACb,EAAG4C,IAAUyiG,EAAYrlG,EAAGA,EAAEgtB,SAAS,GAAIpqB,EAAO67B,EAAOpnB,EAAQuO,SAY3EyjF,MAAAA,EAAO5F,SAXtBhlE,EAAMglE,SAW0B8F,QAVjC,CAACC,EAAmBC,KACnC,GAAIA,EAAGr6F,wBACN,OAAOxP,QAAQ0B,OAAO+N,EAAAvE,YAGvB,MAAM4+F,EAAgBjrE,EAAMmpE,SAAS4B,EAAY,GACjD,OAAOtiG,KAAKihG,aAAauB,EAAeD,GACtCrpG,KAAK,EAAGgoG,kBAAAA,KAAwBA,EAAkBvnG,IAAI,CAACb,EAAG4C,IAAUyiG,EAAYrlG,EAAGA,EAAEgtB,SAAS,GAAIpqB,EAAO8mG,EAAeryF,EAAQuO,cAO7H3e,aAAaw3B,EAAcxvB,GAClC,OAAK/H,KAAKuhG,YAGHvhG,KAAKigG,qBAAqB/mG,KAAKupG;AACrC,MAAMpoG,EAAOgB,KAAKsD,UAAU44B,EAAMipB,KAC5By0C,EAAUz9B,EAAA76C,OAAO,GAAI8lF,EAAe,CACzCC,eAAgB,mBAChBC,OAAU,6CACVC,kBAAmB,OACnBC,iBAAkBxoG,EAAK7D,SAGxB,OAAOwJ,KAAK0/F,eAAet8C,QAAQ,CAClC5wC,KAAM,OACNswF,IAAK9iG,KAAK+iG,IAAI,mBACd1oG,KAAAA,EACA46F,QAAAA,GACEltF,GAAO7O,KAAKykB,GAEVA,EAAQvG,IAAI68E,YAAct2E,EAAQvG,IAAI68E,YAAc,KAAOt2E,EAAQvG,IAAI68E,WAAa,IAChF,CAAEiN,kBAAmB,GAAIiB,MAAO,GAGjCa,EAAA3O,OAA+B12E,GAASzkB,KAAK7C,IACnD,GAAIA,EAAQ,CACX,MAAM2T,EAAI3T,EAAOkrB,QAAQ,GACnB2/E,EAAoBl3F,EAAE4wD,WACtBqoC,EAAcj5F,EAAEk5F,gBAAkBl5F,EAAEk5F,eAAe76F,OAAO9B,GAAwB,gBAAnBA,EAAE48F,cAAgC,GAGvG,MAAO,CAAEjC,kBAAAA,EAAmBiB,MAFdc,GAAeA,EAAYG,cAAc/6F,OAAO/R,GAAgB,eAAXA,EAAEY,MAAuB,GAAGmI,OAAS,GAIzG,MAAO,CAAE6hG,kBAAmB,GAAIiB,MAAO,QA/BlCzpG,QAAQ0B,OAAO,IAAI4E,MAAM,6CAqClCe,gBAAgBmgE,EAAmBhpE,EAAc2kE,EAAiBrpD,GACjE,OAAKxS,KAAKuhG,YAIHvhG,KAAKigG,qBAAqB/mG,KAAKupG,IACrC,MAAMxN,EAAOp3F,OAAA8e,OAAA9e,OAAA8e,OAAA,GAAQ8lF,GAAa,CAAEE,OAAQ,kCAE5C,OAAO3iG,KAAK0/F,eAAet8C,QAAQ,CAClC5wC,KAAM;AACNswF,IAAK9iG,KAAK+iG,IAAI,eAAe7iC,gBAAwBhpE,KAAQ2kE,oBAA0BrpD,KACvFyiF,QAAAA,GACEt2E,EAAAf,kBAAkBhJ,MAAM1b,UAAKa,EAAW,SAAMA,KAV1CrB,QAAQyB,aAAQJ,GAczBgG,SAASu5D,EAA8BzgE,EAAekxE,GACrD/pE,KAAKu7D,WAAW2V,MAAM,mCAAoC5X,EAAUsC,WAAWjiD,IAC/E,MAAMygD,EAAMvmB,EAAA1C,SAASt4C,EAAU6hD,EAAAvD,gBACzB98C,EAAO0pF,EAAAjjB,iCAAiCxH,GACxC+pC,GAAY,IAAIjsG,MAAO8hB,UASvBnE,EAAOuuF,GAAqBtjG,KAAKs5F,iBAAiBiK,UAAU,8BAA+B/rC,EAAA76C,OAAOtiB,EAAM,CAAEipG,SAAAA,KAE1GE,EAA0B,IAATz5B,EAAyC,UAAqB,IAATA,EAAwC,SAAW,GACzH05B,EAAgBD,EAAiB,CACtC5iE,IAAK,GAAG04B,EAAUglC,OAAOK,SAAS/9D,OAAO4iE,SACzC7F,YAAa,GAAGrkC,EAAUglC,OAAOK,SAAShB,eAAe6F,UACtDlqC,EAAUglC,OAAOK,SAErB,OAAO3+F,KAAK0jG,SAASD,GACnBvqG,KAAKykB,GAAW3d,KAAKurE,YAAYjxE,UAAU8/D,EAAKz8C,EAAQoR,SACxD71B,KAAK,IAAM6b,GAAI,IAAI3d,MAAO8hB,UAAYmqF,IACtCnqG,KAAK,IAAMkhE,GAGdr6D,UAAUu5D,EAA8BvxD,GACvC,OAAIuxD,EAAUglC,OAAOC,OACbv+F,KAAK0jG,SAASpqC,EAAUglC,OAAOC,OAAQ,GAAIx2F,GAChD7O,KAAKykB,GAAWqlF,EAAA5O,OAAOz2E,IACvBzkB,KAAKqB,GAAWA,GAAW,IAEvB7B,QAAQyB,QAAQ,IAGxB4F,YAAYu5D,EAA8BvxD,GACzC,OAAIuxD,EAAUglC,OAAO9kC,SACbx5D,KAAK0jG,SAASpqC,EAAUglC,OAAO9kC,SAAU,GAAIzxD,GAClD7O,KAAK8pG,EAAA5O,QACLl7F,KAAK6U,GAAQA,EAAO1S,KAAKC,MAAMyS,GAAQ,MAEnCrV,QAAQyB,QAAQ;AAGxB4F,mBAAmBu5D,EAA8BkY,GAChD,MAAM+rB,EAAQjkC,EAAUglC,OAAOO,iBAAiBx2F,OAAOyB,GAAKA,EAAE,KAAO0nE,EAAW35C,eAAe,GAC/F,OAAI0lE,EACIv9F,KAAK0jG,SAASnG,EAAM,IACzBrkG,KAAK8pG,EAAA5O,QACLl7F,KAAK6U,GAAQA,EAAO1S,KAAKC,MAAMyS,GAAQ,MAEnCrV,QAAQyB,QAAQ,MAGxB4F,aAAau5D,EAA8BvxD,GAC1C,OAAIuxD,EAAUglC,OAAOE,UACbx+F,KAAK0jG,SAASpqC,EAAUglC,OAAOE,UAAW,GAAIz2F,GACnD7O,KAAKykB,GAAWqlF,EAAA5O,OAAOz2E,IACvBzkB,KAAKqB,GAAWA,GAAW,IAEvB7B,QAAQyB,QAAQ,IAGxB4F,eAAeu5D,EAA8BqqC,GAC5C,IAAIpsE,GAAQ,IAAIqlE,GACdwD,UAAUhF,EAAMwI,gBAAiBxI,EAAMmF,aAAcnF,EAAMoF,yBAA0BpF,EAAMqF,qBAC3FC,SAAS,EAAG,GACZC,WAAWtF,EAAWuF,OAAQ,+BAC9BD,WAAWtF,EAAWwF,iBAAkBvF,EAAcF,EAAM0F,cAQ9D,OALCvpE,EADG+hC,EAAUsC,WAAW/hB,KAChBtiB,EAAMopE,WAAWtF,EAAW0F,YAAaznC,EAAUsC,WAAW/hB,MAE9DtiB,EAAMopE,WAAWtF,EAAW2F,cAAe1nC,EAAUsC,WAAWjiD,IAGlE3Z,KAAKihG,aAAa1pE,EAAO5Y,EAAAf,kBAAkBhJ,MAAM1b,KAAK,EAAGgoG,kBAAAA,KAC3DA,EAAkB1qG,OACjBmtG,EACIjrG,QAAQgB,IAAIwnG,EAAkB,GAAGp7E,SAASnsB,IAAIq0D,GAAKhuD,KAAKi+F,UAAUjwC,GAAG90D,KAAK8lE,GAAUmhC,EAAAphC,cAAcC,EAAQh/D,KAAK2/F,eAAe9jC,SAAW7N,EAAI,QAClJ90D,KAAK4sB,GAAYA,EAChBzd,OAAO2lD,KAAOA,GACdr0D,IAAIq0D,IAAK,CAAG6N,QAAS7N,EAAG6N,QAASnM,KAAM1B,EAAGgxC,gBAEtCkC,EAAkB,GAAGp7E,SAASnsB,IAAIq0D,IAAK,CAAG6N,QAAS7N,EAAE6N;AAASnM,KAAM1B,EAAEgxC,eAGxE,IAIDj/F,SAASw9F,EAA+BptF,EAA2B,GAAIpI,EAA2B4W,EAAAf,kBAAkBhJ,MAC3H,OAAO5U,KAAKigG,qBAAqB/mG,KAAKupG,IACrC,MACMxN,EAAUz9B,EAAA76C,OAAO,GAAI8lF,EAAetyF,EAAQ8kF,SAAW,IAC7D9kF,EAAUqnD,EAAA76C,OAAO,GAAIxM,EAFD,CAAEqC,KAAM,OAEe,CAAEyiF,QAAAA,IAE7C,MAAM6N,EAAMvF,EAAM38D,IACZijE,EAActG,EAAMI,YACpBmG,EAAetsC,EAAA76C,OAAO,GAAIxM,EAAS,CAAE2yF,IAAAA,IAE3C,OAAO9iG,KAAK0/F,eAAet8C,QAAQ0gD,EAAc/7F,GAC/C7O,KAAKykB,GAC0B,MAA3BA,EAAQvG,IAAI68E,WACRv7F,QAAQyB,QAAQwjB,GAGjBqlF,EAAA5O,OAAOz2E,GACZzkB,KAAK6F,GAAWrG,QAAQ0B,OAAO,IAAI4E,MAAM,0BAA0B2e,EAAQvG,IAAI68E,0BAA0Bl1F,QAE3G7F,UAAKa,EAAWf,IAChB,GAAImP,EAAA7E,uBAAuBtK,GAC1B,OAAON,QAAQ0B,OAAOpB,GAGvB,MAAM+F,EAAUoJ,EAAAjE,gBAAgBlL,GAShCgH,KAAKs5F,iBAAiBc,WAAoF,6BAA8B,CAAE0I,IAAAA,EAAK/jG,QAAAA,IAE/I,MAAMglG,EAAkBvsC,EAAA76C,OAAO,GAAIxM,EAAS,CAAE2yF,IAAKe,IACnD,OAAO7jG,KAAK0/F,eAAet8C,QAAQ2gD,EAAiBh8F,OAKhDhI,6BAA6Bu5D,EAAiCxzC,GACrE,MAAM+1C,EAAU77D,KAAKgkG,2CAA2C1qC,EAAWxzC,GAC3E,OAAI+1C,GAGG77D,KAAKikG,wCAAwC3qC,EAAWxzC,GAGxD/lB,2CAA2Cu5D,EAAiCxzC,GACnF,IAAK,MAAM+1C,KAAW/1C,EAAU,CAC/B,MAAMk5C,EAASi/B,EAAUpiC,GACzB,IAAKmD,EACJ,OAAO;CAER,GAAImhC,EAAAphC,cAAcC,EAAQh/D,KAAK2/F,eAAe9jC,SAC7C,OAAOnjE,QAAQyB,QAAQ0hE,GAGzB,OAAO,KAGA97D,UAAU87D,GACjB,MAAMmD,EAASi/B,EAAUpiC,GACzB,GAAImD,EACH,OAAOtmE,QAAQyB,QAAQ6kE,GAGxB,MAAMxF,EAAWgkC,EAAgB3hC,EAAS2/B,EAAUI,UACpD,IAAKpiC,EACJ,OAAO9gE,QAAQ0B,OAAO,0BAIvB,OAAO4F,KAAK0jG,SAASlqC,EAAU,CAAEy7B,QADjB,CAAE2N,kBAAmB,UAEnC1pG,KAAKykB,GAAWqlF,EAAA3O,OAA2B12E,IAC3CzkB,KAAKsgE,GAAYA,EAAWA,EAASsF,QAAQrxB,OAAS/0C,QAAQ0B,OAAe,iCAGxE2F,wCAAwCu5D,EAAiCxzC,GAChF,IAAKA,EAAStvB,OACb,OAAOkC,QAAQyB,QAAQ,MAGxB,MAAM0hE,EAAU/1C,EAAS,GACzB,OAAO9lB,KAAKi+F,UAAUpiC,GACpB3iE,KAAK8lE,GACAmhC,EAAAphC,cAAcC,EAAQh/D,KAAK2/F,eAAe9jC,UAI/CA,EAAQkF,WAAalF,EAAQkF,YAAc,GAC3ClF,EAAQkF,WAAW5pE,KAAK,CAAEsH,IAAKu9F,EAAaG,OAAQr9F,MAAOkgE,IACpDnD,GALC77D,KAAKikG,wCAAwC3qC,EAAWxzC,EAAS5tB,MAAM,KASlF6H,sBACC,OAAKC,KAAKuhG,YAILvhG,KAAK+/F,qBAIH//F,KAAK0/F,eAAet8C,QAAQ,CAAE5wC,KAAM,MAAOswF,IAAK9iG,KAAK+/F,sBAAwBphF,EAAAf,kBAAkBhJ,MAAM1b,KAAKykB,GACjF,MAA3BA,EAAQvG,IAAI68E,WACRv7F,QAAQ0B,OAAO,IAAI4E,MAAM,qCAG1BgkG,EAAA3O,OAA6B12E,GAASzkB,KAAK7C,IACjD,MAAMsD,EAAM,IAAIsG;CAEhB,GAAI5J,EACH,IAAK,MAAMsjB,KAAMtjB,EAAOgrE,UAAW,CAClC,MAAM72C,EAAM7wB,EAAIuG,IAAIyZ,IAAO,CAAEA,GAAI,CAAEA,GAAAA,GAAM0nD,WAAW,EAAM6iC,MAAM,GAChE15E,EAAI62C,WAAY,EAChB1nE,EAAIyG,IAAIuZ,EAAI6Q,GAId,OAAO9xB,QAAQyB,QAAQovC,EAAA/rC,OAAO7D,OAnBxBjB,QAAQyB,QAAQ,IAJhBzB,QAAQ0B,OAAO,IAAI4E,MAAM,+CA2BnC,OAjbaygG,EAAuB54B,EAAA,CAUjCC,EAAA,EAAAk8B,EAAA7O,iBACArtB,EAAA,EAAAgT,EAAAhI,aACAhL,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAAq9B,EAAAvJ,mBACA9zB,EAAA,EAAAiF,EAAA7D,cACApB,EAAA,EAAAs9B,EAAAnf,iBACAne,EAAA,EAAAV,EAAAT,SAAS0+B,EAAA5M,mBAhBCgI,IAAb,GAmbOp7E,eAAe67E,EAA0BrkC,EAAiBP,EAAyCiQ,EAA2B+qB,GAIpI,MAAMrB,EAAoB,CACzBqP,qBAAsB,UAAUzoC,IAChC0oC,aAAc,UAAU1oC,KAEnBhiB,QAAa2qD,EAAAnO,oBAAoB/6B,EAAoBiQ,EAAa+qB,GAIxE,OAHIz8C,IACHo7C,EAAQ,oBAAsBp7C,GAExBo7C,EA/bKr2F,EAAA6gG,wBAAAA,EAmbb7gG,EAAAshG,0BAAAA,yKCluBA,IAAAuE,EAAA,MAAA,IAAaA,EAAb,MAgBC1kG,YACCtE,EACyCipG,GAAA1kG,KAAA0kG,sBAAAA,EALzB1kG,KAAA05F,aAAe,IAAI7gF,EAAAvD,gBAC5BtV,KAAA2kG,iBAA6B,GAMpC3kG,KAAK4kG,UAAYnpG,EAAOopG;AACxB7kG,KAAK8kG,kBAAoBrpG,EAAOspG,kBAAoBrsG,QAAQyB,QAAQ,IACpE6F,KAAKglG,UAAYvpG,EAAOwpG,UAAY,GACpCjlG,KAAKklG,YAAa,EAClBllG,KAAKmlG,UAAW,EAGhBnlG,KAAK2kG,iBAAmB,CAAC,sCAEzB,IAAK,IAAIS,KAAWplG,KAAKglG,UACxBhlG,KAAK2kG,iBAAiBxtG,KAAK,IAAIs8B,OAAOkI,EAAA7L,uBAAuBs1E,GAAU,OAGpEplG,KAAK0kG,wBACR1kG,KAAKqlG,mBACLrlG,KAAK0kG,sBAAsBvR,yBAAyBnzF,KAAKqlG,iBAAkBrlG,KAAMA,KAAK05F,cAOtF15F,KAAKo6F,WAA4C,cAAe,CAAEkL,MAAOtlG,KAAKklG,aAE9EllG,KAAK8kG,kBAAkB5rG,KAAKsE,IAC3B,MAAM+nG,EAAa,eAAeh9E,KAAK/qB,EAAO,qBAK9CwC,KAAKo6F,WAA4E,oBAAqB,CAAEoL,mBAAoBD,IAExH9pG,EAAOgqG,eAIVzlG,KAAKo6F,WAAkF,0BAA2B,CAAEsL,mBAAoBjqG,EAAOgqG,mBAMnJ1lG,WAAWjB,GACVkB,KAAKmlG,SAAWrmG,EAGTiB,mBACP,MAAMtE,EAASuE,KAAK0kG,sBAAsBl0B,SAAcm1B,GACxD3lG,KAAKklG,WAAazpG,EAASA,EAAOmqG,gBAAkB5lG,KAAKklG,WAG1DW,gBACC,OAAO7lG,KAAKklG,YAAcllG,KAAKmlG,SAGhCplG,yBACC,MAAMvC,QAAewC,KAAK8kG,kBAQ1B,MAAO;AAAElsC,UALOp7D,EAAkB,UAKdsoG,WAJHtoG,EAAO,qBAIQg7C,UAHhBh7C,EAAO,oBAGoBuoG,aAFxBvoG,EAAO,wBAK3BuC,UACCC,KAAK05F,aAAa1kF,UAGnBjV,UAAU2Z,EAAmBrf,EAAuB2rG,GAEnD,OAAKhmG,KAAK6lG,UAIH7lG,KAAK8kG,kBAAkB5rG,KAAKsE,IAGlCnD,EAAOm9D,EAAAx4B,MAAM3kC,EAAMmD,GAGnBnD,EAAOm9D,EAAAh5B,eAAenkC,EAAMyE,IAC3B,GAAqB,iBAAVA,EACV,OAAOkB,KAAKimG,aAAannG,EAAOknG,KAKlChmG,KAAK4kG,UAAU7vF,IAAI2E,EAAWrf,IAE5BrB,IAEFlC,QAAQ+E,MAAM7C,KApBPN,QAAQyB,aAAQJ,GAwBzBgG,WAA0F2Z,EAAmBrf,EAAkC2rG,GAC9I,OAAOhmG,KAAKujG,UAAU7pF,EAAWrf,EAAwB2rG,GAGlDjmG,aAAa+C,EAAekjG,GACnC,IAAIE,EAAepjG,EAEnB,GAAIkjG,EAAoB,CACvB,MAAMG,EAAqC,GAC3C,IAAK,IAAIxyE,KAAU3zB,KAAK2kG,iBACvB,OAAa,CACZ,MAAMtuG,EAASs9B,EAAOC,KAAK9wB,GAC3B,IAAKzM,EACJ,MAED8vG,EAAehvG,KAAK,CAACd,EAAOqF,MAAOi4B,EAAOvqB,YAI5C,MAAMg9F,EAAmB,kDACnBC,EAAY,sFAClB,IAAIj9F,EAAY,EAGhB,IAFA88F,EAAe,KAEF,CACZ,MAAM7vG,EAASgwG,EAAUzyE,KAAK9wB,GAC9B,IAAKzM,EACJ,OAGI+vG,EAAiB79E,KAAKlyB,EAAO,KAAO8vG,EAAev4E,MAAM,EAAEnjB,EAAG67F,KAAOjwG,EAAOqF,MAAQ+O,GAAKpU,EAAOqF,OAAS4qG,KAC7GJ,GAAgBpjG,EAAMlH,UAAUwN,EAAW/S,EAAOqF,OAAS,6BAC3D0N,EAAYi9F,EAAUj9F,WAGpBA,EAAYtG,EAAMtM,SACrB0vG,GAAgBpjG,EAAMk0B,OAAO5tB,IAK/B,IAAK,IAAIuqB,KAAU3zB,KAAK2kG,iBACvBuB,EAAeA,EAAaxnG,QAAQi1B,EAAQ,IAE7C,OAAOuyE;CAET,OAlKiBzB,EAAA8B,sBAAwB,gBACxB9B,EAAA+B,qBAAuB,eAH3B/B,EAAgB59B,EAAA,CAkB1BC,EAAA,EAAAV,EAAAT,SAAS+mB,EAAAzC,yBAlBCwa,IAAb,GAAa7lG,EAAA6lG,iBAAAA,EAuKb,MAAMkB,EAAuB,YAE7B98E,EAAAq8D,SAASqB,GAA2B0E,EAAA7F,WAAWQ,eAAe0O,sBAAsB,CACnF36E,GAAMgsF,EACNpR,MAAS,IACT/hF,KAAQ,SACR00E,MAASr3B,EAAAC,SAAS,EAA+B,MACjDiR,WAAc,CACb0lC,4BAA6B,CAC5Bj0F,KAAQ,UACRg2E,YAAe34B,EAAAC,SAAS,EAA6B,MACrD+B,SAAW,EACX60C,KAAQ,CAAC,0SC9LC9nG,EAAA+nG,qBAAuB,IAAI,MAAA5mG,cASvCC,KAAA6lG,WAAY,EAPZ9lG,UAAU2Z,EAAmBrf,GAC5B,OAAO3B,QAAQyB,aAAQJ,GAExBgG,WAA0F2Z,EAAmBrf,GAC5G,OAAO2F,KAAKujG,UAAU7pF,EAAWrf,GAElC0F,cAEAA,mBACC,OAAOrH,QAAQyB,QAAQ,CACtB2rG,WAAY,uBACZltC,UAAW,sBACXpgB,UAAW;AAUd55C,EAAAgoG,iBAAA,YAAoCC,GACnC,MAAO,CACN9xF,IAAK,CAACjc,EAAGmE,IAAM4pG,EAAUtnG,QAAQ2F,GAAKA,EAAE6P,IAAIjc,EAAGmE,IAC/Csc,MAAO,IAAM7gB,QAAQgB,IAAImtG,EAAUltG,IAAIuL,GAAKA,EAAEqU,YAInC3a,EAAAkoG,aAAmC,CAAE/xF,IAAK,IAAM,KAAMwE,MAAO,IAAM7gB,QAAQyB,QAAQ,OAGhG,IAAA4sG,EAAA,MAAA,IAAaA,EAAb,MAGChnG,YAA0CinG,GAAAhnG,KAAAgnG,YAAAA,EADlChnG,KAAAinG,sBAAwB,2DAGhClnG,QACC,OAAOrH,QAAQyB,aAAQJ,GAGxBgG,IAAI2Z,EAAmBrf,GACtB,MAAM6sG,EAAuC,GAC7CrpG,OAAOC,KAAKzD,GAAMkF,QAAQd,IACpBuB,KAAKinG,sBAAsB1+E,KAAK9pB,KACpCyoG,EAAazoG,GAAOpE,EAAKoE,MAG3BuB,KAAKgnG,YAAY91B,MAAM,aAAax3D,IAAawtF,KAEnD,OAlBaH,EAAWlgC,EAAA,CAGVC,EAAA,EAAAgT,EAAAhI,cAHDi1B,IAAb,GA4IA,SAASI,EAAYroG,GACpB,IAAKA,EACJ,MAAO,GAER,MAAMzI,EAAmB,GAEzB,OAGD,SAAS+wG,EAAS/wG,EAAkBy+C,EAAgBh2C,GAC/CA,GAA0B,iBAAVA,IAAuB4J,MAAMC,QAAQ7J,GACxDjB,OAAOC,KAAKgB,GACVS,QAAQd,GAAO2oG,EAAS/wG,EAAQy+C,EAAS,GAAGA,KAAUr2C,IAAQA,EAAKK,EAAML,KAE3EpI,EAAOc,KAAK29C,GATbsyD,CAAS/wG,EAAQ,GAAIyI,GACdzI,EAlJKuI,EAAAmoG,YAAAA,EAmCbnoG,EAAAyoG,uBAAA,SAAuC/N,EAAqC3N,GAC3E,OAAOA,EAAqBwH,yBAAyB57E,IACpC,IAAZA,EAAMmH,QAST46E,EAAiBc,WAAwE,sBAAuB,CAC/GkN,oBAAqB5a,EAAAtC,4BAA4B7yE,EAAMmH,QACvD6oF,kBAAmBJ,EAAY5vF,EAAMw7E,mBAczCn0F,EAAA4oG,sBAAA,SAAsCntG;AAErC,MAAM0mE,EAAyBljE,OAAOK,OAAO,MACvCupG,EAA6B5pG,OAAOK,OAAO,MAE3CwpG,EAAO7pG,OAAOK,OAAO,OA6C5B,SAASsL,EAAQf,EAAUpS,EAAgCk+F,EAAgB,EAAGz/C,GAC7E,IAAKrsC,EACJ,OAGD,IAAK,IAAI0L,KAAQtW,OAAO4D,oBAAoBgH,GAAM,CACjD,MAAM3J,EAAQ2J,EAAI0L,GACZzY,EAAQo5C,EAASA,EAAS3gC,EAAOA,EAEnCzL,MAAMC,QAAQ7J,GACjBzI,EAAOqF,GAAS87D,EAAAr4B,cAAcrgC,GAEpBA,aAAiB1H,KAE3Bf,EAAOqF,GAASoD,EAAM8yE,cAEZjzC,EAAAxC,SAASr9B,GACfy1F,EAAQ,EACX/qF,EAAQ1K,EAAOzI,EAAQk+F,EAAQ,EAAG74F,EAAQ,KAE1CrF,EAAOqF,GAAS87D,EAAAr4B,cAAcrgC,GAG/BzI,EAAOqF,GAASoD,GAnElB0K,CAAQnP,EAAMqtG,GAEd,IAAK,IAAIzzF,KAAQyzF,EAAM,CAGtB,MAAM5oG,EAAQ4oG,EADdzzF,EAAOA,EAAKzd,OAAS,IAAMyd,EAAK+iB,OAAO/iB,EAAKzd,OAAS,KAAOyd,GAGvC,iBAAVnV,EACV2oG,EAAaxzF,GAAQnV,EAEM,kBAAVA,EACjB2oG,EAAaxzF,GAAQnV,EAAQ,EAAI,EAEN,iBAAVA,EAEjBiiE,EAAW9sD,GAAQnV,EAAMlD,UAAU,EAAG,MAE5B,MAAOkD,IACjBiiE,EAAW9sD,GAAQnV,GAIrB,MAAO,CACNiiE,WAAAA,EACA0mC,aAAAA,IAIF7oG,EAAA+oG,qBAAA,SAAqCrxD,GACpC,IAAKA,EACJ,MAAO,OAGR,IAAI1pB,EAAM,QAQV,MANA,CAAC,aAAc,gBAAiB,qBAAsB,OAAOrtB,QAAS6X,IACzB,IAAxCk/B,EAAiB30C,QAAQ,GAAGyV,QAC/BwV,EAAMxV,KAIDwV,2JCvHR,IAAAg7E,EAAA,MAAA,IAAaA,EAAb,MAIC7nG,YACS8nG,EACAC,EACRC,EACqBf,GAHbhnG,KAAA6nG,aAAAA,EACA7nG,KAAA8nG,aAAAA,EAEa9nG,KAAAgnG,YAAAA;AAEhBhnG,KAAK8nG,eACT9nG,KAAK8nG,aAAejqG,OAAOK,OAAO,OAGC,iBAAzB6pG,EACV/nG,KAAKgoG,UA1CR,SAAmBC,GAElB,IAAI3wC,EAqBJ,OApBI4wC,EAAYC,eACf7wC,EAAS,IAAI4wC,EAAYE,gBAAgBH,IAClCvlD,QAAQ2lD,wBAAuB,IAEtCH,EAAYI,MAAML,GAChBM,wBAAuB,GACvBC,2BAA0B,GAC1BC,0BAAyB,GACzBC,4BAA2B,GAC3BC,8BAA6B,GAC7BC,uBAAsB,GACtBC,oBAAmB,GAAO,GAC1BR,wBAAuB,GACvBxiG,QACFyxD,EAAS4wC,EAAYC,eAGQ,IAA1BF,EAAMtmG,QAAQ,UACjB21D,EAAO77D,OAAOqtG,YAAc,gDAEtBxxC,EAmBYyxC,CAAUhB,GACe,mBAAzBA,IACjB/nG,KAAKgoG,UAAYD,KAInBhoG,IAAI2Z,EAAmBrf,GACjB2F,KAAKgoG,YAGV3tG,EAAOm9D,EAAAx4B,MAAM3kC,EAAM2F,KAAK8nG,cACxBztG,EAAO2uG,EAAAxB,sBAAsBntG,GAEzB2F,KAAKgnG,aACRhnG,KAAKgnG,YAAY91B,MAAM,aAAax3D,IAAarf,GAElD2F,KAAKgoG,UAAUiB,WAAW,CACzB/xG,KAAM8I,KAAK6nG,aAAe,IAAMnuF,EAChCqnD,WAAY1mE,EAAK0mE,WACjB0mC,aAAcptG,EAAKotG,gBAIrB1nG,QACC,OAAIC,KAAKgoG,UACD,IAAItvG,QAAQyB,IAClB6F,KAAKgoG,UAAWzuF,MAAM,CACrB/Z,SAAU,KAETQ,KAAKgoG,eAAYjuG,EACjBI,OAAQJ,QAKLrB,QAAQyB,aAAQJ;CAEzB,OApDa6tG,EAAmB/gC,EAAA,CAQ7BC,EAAA,EAAAgT,EAAAhI,cARU81B,IAAb,GAAahpG,EAAAgpG,oBAAAA,4JC3BbhpG,EAAAsqG,wBAAO7kF,eACN5pB,EACAohE,EACArjB,EACA2wD,EACA/nB,EACA5C,GAEA,MAAMnoF,EAA4DwH,OAAOK,OAAO,MAGhF7H,EAAO,oBAAsBmiD,EAE7BniD,EAAkB,UAAIwjD,EAAK1C,eAAiB//C,KAAKC,MAEjDhB,EAAmB,WAAIoE,EAEvBpE,EAAgB,QAAIwlE,EAEpBxlE,EAAO,2BAA6BmkD,EAAG4uD,WAAa,IAAI1qG,QAAQ,6BAA8B,UAE9FrI,EAAO,mBAAqBswB,EAASC,iBAAiBD,EAASX,UAE/D3vB,EAAO,uBAAyB0E,QAAQirB,SAExC3vB,EAAO,mBAAqB0E,QAAQsgD,KAEpChlD,EAAO,kBAAoBmoF,GAAW,UAEtC,MAAMunB,EA4CP,SAAuCsD,GACtC,IAAKtuG,UAAYA,QAAQC,MAAQD,QAAQC,IAAmB,cAC3D,OAAO,EAGR,MAAMsuG,EAASvuG,QAAQC,IAAmB,cAAG8vB,cAC7C,OAAOu+E,EAAWn9F,KAAKq9F,GAAcD,IAAWC,GAlD3BC,CAA8BL,GAAuB,IACtEpD,IAEH1vG,EAAO,uBAAyB0vG,GAIjC,IAAI0D,EAAM,EACV,MAAMpG,EAAYjsG,KAAKC,MACvBwG,OAAO6rG,iBAAiBrzG,EAAQ,CAE/BmB,UAAa,CACZ0I,IAAK,IAAM,IAAI9I,KACfiK,YAAY,GAGbsoG,+BAAgC,CAC/BzpG,IAAK,IAAM9I,KAAKC,MAAQgsG,EACxBhiG,YAAY,GAGbuoG,kBAAmB;AAClB1pG,IAAK,IAAMupG,IACXpoG,YAAY,KAIW,UAArBtG,QAAQirB,UAAwBjrB,QAAQC,IAAI6uG,MAAQ9uG,QAAQC,IAAI8uG,gBAEnEzzG,EAAO,eAAiB,QAGzB,IACC,MAAMsH,QAAiB0hD,EAAAnlD,SAASknF,EAAmB,QAGnD/qF,EAAO,iBAAmBsH,EAASzF,MAAM,EAAG,IAC3C,MAAO2D,IAIT,OAAOxF,uJCtERuI,EAAAmrG,sBAAA,SAAsCnqB,EAAiB4B,GACtD,MAAMwoB,EAAkBnsG,OAAOK,OAAO,MAEhC+rG,EAAiB,CAACtsG,EAAkBusG,KACzC,MAAMlpC,EAAgB3lE,KAAKC,MAAMqC,GACjCqsG,EAAgBE,GAAWlpC,GAE5B,GAAIwgB,EAAgB,CAEnB,MAAM2oB,EAAO9qD,EAAApE,YAAYumC,GAAgBn5E,OAAO7O,IAE/C,IACC,OAAO4mD,EAAAgqD,SAASzvE,EAAA9gC,KAAK2nF,EAAgBhoF,IAAQJ,cAC5C,MAAAyb,GACD,OAAO,KAGHw1F,EAAiC,GACvCF,EAAK5qG,QAASjG,IAGQ,IAFP+lD,EAAApE,YAAYtgB,EAAA9gC,KAAK2nF,EAAgBloF,IAAM+O,OAAO5P,GAAiB,mBAATA,GAE1DjC,QACT6zG,EAAqBlzG,KAAKmC,KAG5B+wG,EAAqB9qG,QAAS+kE,IAC7B,MAAM3mE,EAAWyiD,EAAA7kD,aAAao/B,EAAA9gC,KAAK2nF,EAAgBld,EAAQ,mBAAmB3pD,WAC9EsvF,EAAetsG,EAAU2mE,KAG3B,IAAI3mE,EAAWyiD,EAAA7kD,aAAao/B,EAAA9gC,KAAK+lF,EAAS,wBAAwBjlE,WAIlE,OAHAsvF,EAAetsG,EAAU,eACzBA,EAAWyiD,EAAA7kD,aAAao/B,EAAA9gC,KAAK+lF,EAAS,8BAA8BjlE,WACpEsvF,EAAetsG,EAAU,qBAClBtC,KAAKsD,UAAUqrG,EAAiB,KAAM;+KCvCjCprG,EAAA0rG,kBAAoBlkC,EAAA5lE,gBAAmC,oBAWpE5B,EAAA2rG,iBAAA,MACCxqG,YAAoBusD,GAAAtsD,KAAAssD,QAAAA,EAEpBvsD,OAAOoZ,EAAY5B,GAClB,OAAQA,GACP,IAAK,YAAa,OAAOvX,KAAKssD,QAAQhK,UAEvC,MAAM,IAAItjD,MAAM,kBAAkBuY,KAGnCxX,WAAWoZ,EAAY80B,EAAiB/sC,GACvC,OAAQ+sC,GACP,IAAK,OAAQ,OAAOjuC,KAAKssD,QAAQzJ,KAAK3hD,EAAK,IAE5C,MAAM,IAAIlC,MAAM,gBAAgBivC,OAIlCrvC,EAAA4rG,uBAAA,MAKCzqG,YAA6B2iD,GAAA1iD,KAAA0iD,QAAAA,EAC5B1iD,KAAKsiD,UAAYtiD,KAAK0iD,QAAQa,OAAe,aAGvCxjD,KAAK1F,GACX2F,KAAK0iD,QAAQvjD,KAAK,OAAQ,CAAC9E,gKCtC7BuE,EAAA6rG,iBAAA,MACC1qG,YAAoBusD,GAAAtsD,KAAAssD,QAAAA,EAEpBvsD,OAAOoZ,EAAY5B,GAClB,MAAM,IAAIvY,MAAM,kBAAkBuY,KAGnCxX,KAAKoZ,EAAY80B,EAAiB/sC,GACjC,OAAQ+sC,GACP,IAAK,YAAa,OAAOjuC,KAAKssD,QAAQi3C,UAAUriG,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACvE,IAAK;AAAc,OAAOlB,KAAKssD,QAAQ8tC,WAAWl5F,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,IAAK,aAAc,OAAOxI,QAAQyB,QAAQ6F,KAAKssD,QAAQo+C,WAAWxpG,EAAK,KACvE,IAAK,mBAAoB,OAAOlB,KAAKssD,QAAQq+C,mBAE9C,MAAM,IAAI3rG,MAAM,gBAAgBivC,OAIlCrvC,EAAAgsG,uBAAA,MAGC7qG,YAA6B2iD,GAAA1iD,KAAA0iD,QAAAA,EAEtB3iD,UAAU2Z,EAAmBrf,EAAuB2rG,GAC1D,OAAOhmG,KAAK0iD,QAAQvjD,KAAK,YAAa,CAACua,EAAWrf,EAAM2rG,IAGlDjmG,WAA0F2Z,EAAmBrf,EAAkC2rG,GACrJ,OAAOhmG,KAAK0iD,QAAQvjD,KAAK,aAAc,CAACua,EAAWrf,EAAM2rG,IAGnDjmG,WAAWjB,GACjBkB,KAAK0iD,QAAQvjD,KAAK,YAAa,CAACL,IAG1BiB,mBACN,OAAOC,KAAK0iD,QAAQvjD,KAAK,oBAG1B0mG,gBACC,OAAO,qJCzCT,MAAMgF,EACLC,cACC,MAAM,IAAI9rG,MAAM,iBAEjBsa,cACC,MAAM,IAAIta,MAAM,iBAGVe,yBACN,MAAM,IAAIf,MAAM,iBAEVe,OACN,MAAM,IAAIf,MAAM,iBAEVe,cACN,MAAM,IAAIf,MAAM,kBAIlBJ,EAAAwpG,gBAAA,MAAAroG,cACQC,KAAA2d,aAAe5jB;AACfiG,KAAA+kG,sBAAwBhrG,EACxBiG,KAAAvE,OAAc,GAEduE,KAAA0iD,QAAe,IAAImoD,EAEnB9qG,wBACN,MAAM,IAAIf,MAAM,iBAGVe,2BACN,MAAM,IAAIf,MAAM,iBAGVe,yBACN,MAAM,IAAIf,MAAM,iBAGVe,aACN,MAAM,IAAIf,MAAM,iBAGVe,cACN,MAAM,IAAIf,MAAM,iBAGVe,iBACN,MAAM,IAAIf,MAAM,iBAGVe,eACN,MAAM,IAAIf,MAAM,iBAGVe,kBACN,MAAM,IAAIf,MAAM,iBAGVe,QACN,MAAM,IAAIf,MAAM,iBAGVe,2BACN,MAAM,IAAIf,MAAM,iBAGVe,uBACN,MAAM,IAAIf,MAAM,iBAGVe,0BACN,MAAM,IAAIf,MAAM,iBAGVe,WAAWoQ,GACZA,EAAQ4wD,aACZ5wD,EAAQ4wD,WAAa,IAEjB5wD,EAAQs3F,eACZt3F,EAAQs3F,aAAe,IAGxB,IACC,MAAMsD,EAAOvwD,EAAGuwD,OAChB56F,EAAQs3F,aAAauD,MAAQD,EAAKv0G,OAClC2Z,EAAQ4wD,WAAW,mBAAqBgqC,EAAK,GAAG9Y,MAC/C,MAAOp2F,IAET,IACCsU,EAAQs3F,aAAawD,WAAazwD,EAAG0wD,UACrC/6F,EAAQs3F,aAAa0D,YAAc3wD,EAAG4wD,WACrC,MAAOvvG,IAET;AACCsU,EAAQ4wD,WAAW,gBAAkBvmB,EAAG6wD,WAAWh5C,MACnDliD,EAAQ4wD,WAAW,kBAAoBvmB,EAAG4uD,UAC1Cj5F,EAAQ4wD,WAAW,eAAiBvmB,EAAGa,OACtC,MAAOx/C,IAET,IACC,MAAMinG,EAAM/nG,QAAQC,IAAIswG,eAAiB,uCACnCloD,GAAW,SAAS76B,KAAKu6E,GAAOj1D,EAAOC,GAAOsV,QAAQ0/C,EAAK,CAChE/kE,OAAQ,OACRk3D,QAAS,CACRyN,eAAgB,sBAGlBt/C,EAAQvpC,GAAG,QAAS,QACpBupC,EAAQh1B,MAAM/yB,KAAKsD,UAAUwR,IAC7BizC,EAAQl2C,MACP,MAAOrR,KAGHkE,MAAMoQ,GACRA,EAAQ3Q,UACX2Q,EAAQ3Q,SAAS,kICvHPZ,EAAA+9E,OAAS4uB,EAAA5uB,OAAW6uB,MAAM,6OCOvC,MAAMzjB,EAAiB,IAAI9nF,IACrBwrG,EAAepzG,EAAKwB,KAAKkgD,EAAAnW,qBAAqB+T,EAAS,IAAK,qBAErD/4C,EAAA8sG,wBAA2BjwG,GAChCA,KAA0CA,EAAQiB,gBAG1D,MAAMivG,EAAuB,CAC5B/wG,OAAQ,KACRC,mBAAoB,IAGR+D,EAAAgtG,oBAAsBvnF,MAAOzpB,EAAgBF;AACzD,MAAMif,EAAK,GAAG/e,MAAWF,IAkBzB,OAjBKqtF,EAAe7+E,IAAIyQ,IACvBouE,EAAe3nF,IAAIuZ,EAAI,IAAIjhB,QAAQ2rB,MAAOlqB,IACzC,MAAMsB,EAASyjF,EAAArtB,QAAQp3D,cAAgBoxG,EAAK9wD,UAAUziD,EAAGE,OAAlBqzG,CAA0BJ,SACxDK,EAAGtxG,oBAAoB0kF,EAAArtB,QAAQp3D,OAAQC,EAAc+wG,EAAc7wG,GACzE+wG,EACC/sG,EAAA8sG,wBAAwBjwG,KAC3BA,EAAOswG,sBAAuB,GAKT,OAAlBtwG,EAAOb,QAAqC,UAAlBa,EAAOb,QAAwE,IAAlDiD,OAAOC,KAAKrC,EAAOZ,oBAAoBrE,QACjGuxF,EAAeznF,OAAOqZ,GAEvBxf,EAAQsB,MAGHssF,EAAe7nF,IAAIyZ,IAGd/a,EAAAotG,gBAAkB3nF,MAAOzpB,EAAgBF,KACrD,MAAMe,QAAemD,EAAAgtG,oBAAoBhxG,EAAQF,GACjD,GAAIkE,EAAA8sG,wBAAwBjwG,GAC3B,IACC,OAAOJ,KAAKC,YAAYuwG,EAAK9wD,UAAUziD,EAAG4B,SAAlB2xG,CAA4BpwG,EAAOkB,wBAAyB,SACnF,MAAOd,IAEV,MAAO,IAGK+C,EAAAqtG,oBAAsB5nF,MAAO3pB,IACzC,MAAMlB,EAAQ,CAAC,cAAe,aAC9B,IAAK,IAAIlD,EAAI,EAAGA,EAAIkD,EAAMhD,SAAUF,EACnC,IACC,MAAM41G,EAAkB7zG,EAAKwB,KAAKa,EAAc,OAAQlB,EAAMlD,IACxDiE,EAAU6Z,QAAoBy3F,EAAK9wD,UAAUziD,EAAG4B,SAAlB2xG,CAA4BK,EAAiB,SACjF,OAAO7wG,KAAKC,MAAMf,GAASK,OAC1B,MAAOiB,IAEV,MAAO,MAIR,MAAMuY,EAAiB7Z,IAGtB,OAAOA,EAAQmE,QAFA,wGAEgB,CAAC4zB,EAAO65E,EAAKC,EAAKl+C,EAAIm+C,KAEpD,GAAIn+C,EAEH,MAAO,GACD,GAAIm+C,EAAI,CAEd,MAAMC,EAAWD,EAAG71G,OACpB,OAAI81G,EAAW,GAA0B,OAArBD,EAAGC,EAAW,GACL,OAArBD,EAAGC,EAAW,GAAc,OAAS,KAGrC;AAIR,OAAOh6E,yMCxEV,MAAsBi6E,EAMrBxsG,YAA6BgiD,EAAoCh6C,GAApC/H,KAAA+hD,SAAAA,EAAoC/hD,KAAA+H,MAAAA,EALhD/H,KAAAipD,SAAW,IAAIhrC,EAAAjG,QAChBhY,KAAAkpD,QAAUlpD,KAAKipD,SAAS1xC,MAChCvX,KAAAgE,UAAW,EAKnBwoG,cACC,OAAOxsG,KAAKysG,SAGN1sG,UAAU6nD,EAAiBxuC,GACjCpZ,KAAKysG,cAAW1yG,EAChBiG,KAAK0sG,YAAY9kD,EAAQxuC,GAGnBrZ,UACDC,KAAKgE,WACThE,KAAKgE,UAAW,EAChBhE,KAAK2sG,YACL3sG,KAAKipD,SAAShxC,QAINlY,aACJC,KAAKysG,WACTzsG,KAAKysG,SAAWr1G,KAAKC,QA3BxBuH,EAAA2tG,WAAAA,EAyCA3tG,EAAAguG,qBAAA,cAA0CL,EACzCxsG,YAA6BgiD,EAAoBh6C,GAChDzD,MAAMy9C,EAAUh6C,GADY/H,KAAA+hD,SAAAA,EAE5BA,EAASmH,QAAQ,IAAMlpD,KAAKgV,WAC5B+sC,EAASsI,cAAc,IAAMrqD,KAAK6sG,cAGzB9sG,YACTC,KAAK+hD,SAASyH,iBACdxpD,KAAK+hD,SAAS/sC,UACdhV,KAAK+hD,SAASwH,YAAYr8C,MAGjBnN,YAAY6nD,EAAiBxuC,GACtCpZ,KAAK+hD,SAAS+qD,wBAAwBllD,EAAQxuC,GAC9CpZ,KAAK+hD,SAASgrD,0BAIhBnuG,EAAAouG,wBAAA,cAA6CT,EAG5CxsG,YACCnF,EAAemnD,EAAoB3oC,EAAkBrR,EACpCgN,EACAk4F,GAEjB3oG,MAAMy9C,EAAUh6C;AAHC/H,KAAA+U,IAAAA,EACA/U,KAAAitG,YAAAA,EAGjBjtG,KAAK+hD,SAAS/sC,UACdhV,KAAKk0D,MAAMt5D,EAAQwe,GAAQlgB,KAAMuL,GAAMzE,KAAKjF,QAAU0J,GACtDzE,KAAK+hD,SAASmrD,sBAAsBz/E,QAG3B1tB,YACLC,KAAKjF,SACRiF,KAAKjF,QAAQ25D,OAEd10D,KAAK+hD,SAASwH,YAAYr8C,MAGjBnN,YAAY6nD,EAAiBxuC,GAEtCpZ,KAAK+hD,SAAS+qD,wBAAwBllD,EAAQ,MAC9C5nD,KAAK+hD,SAAS/sC,UACdhV,KAAKmtG,gBAAgB/zF,GAGdrZ,gBAAgBqZ,GACvB,MAAMwuC,EAAS5nD,KAAK+hD,SAASmrD,sBAC7BtlD,EAAOn6B,QACPztB,KAAKjF,QAAS8nD,KAAK,CAClBrwC,KAAM,4BACNk5C,iBAAmBtyC,EAAOA,OAAkBuB,SAAS,UACrDyyF,oBAAqBptG,KAAK+hD,SAASwH,sBAAuBiE,EAAAR,YACxDpF,GAGI7nD,YAAYnF,EAAgBwe,GACnC,MAAM3d,QAAeo0D,EAAA+7C,oBAAoBhxG,EAAQoF,KAAKitG,YAAYvyG,cAC5D2yG,EAAOp6C,EAAG6E,KACf/d,EAAAnW,qBAAqB+T,EAAS,kBAC9B,CAAE,wBACF,CACC38C,IAAG6C,OAAA8e,OAAA9e,OAAA8e,OAAA,GACC5hB,QAAQC,KAAG,CACdioE,eAAgB,6DAChBC,aAAc,OACdC,gBAAiB,OACjBmqC,gCAAiC,OACjCC,+BAAgC,OAChCC,iBAAkB;AAClBC,iBAAkB1yG,QAAQC,IAAI0yG,UAC9BC,kBAAmBtyG,KAAKsD,UAAUlD,KAEnC+gE,QAAQ,IAIV6wC,EAAKxzF,GAAG,QAAS,IAAM7Z,KAAKgV,WAC5Bq4F,EAAKxzF,GAAG,OAAQ,IAAM7Z,KAAKgV,WACvBq4F,EAAKh1D,QAAUg1D,EAAKn6C,SACvBm6C,EAAKh1D,OAAOqkB,YAAY,QAAQ7iD,GAAG,OAAS5c,GAAM+C,KAAK+U,IAAI4mD,KAAK,wBAAyB1+D,IACzFowG,EAAKn6C,OAAOwJ,YAAY,QAAQ7iD,GAAG,OAAS5c,GAAM+C,KAAK+U,IAAIlZ,MAAM,wBAAyBoB,KAE3FowG,EAAKxzF,GAAG,UAAYtC,IACnB,GAAIA,GAAwB,eAAfA,EAAM/E,KAAuB,CACzC,MAAM6xB,EAAiBrkC,KAAK+U,IAAKwC,EAAM8sB,UAAY9sB,EAAM8sB,SAAW,OAC9DrkC,KAAK+U,IAAKsvB,GAAU,iBAAkB9sB,EAAM9L,WAE/C8L,GAAwB,gCAAfA,EAAM/E,MAClBxS,KAAK6sG,eAIP,MAAMtpD,EAAUxkD,IACM,6BAAjBA,EAAQyT,OACX66F,EAAKtzF,eAAe,UAAWwpC,GAC/BvjD,KAAKmtG,gBAAgB/zF,KAIvB,OAAOi0F,EAAKxzF,GAAG,UAAW0pC,6IC9I5B,MAAayF,UAAiBwE,EAAAxD,mBAC7BjqD,YAAmB6nD,EAAoCz3C,GACtD7L,MACC6L,EAAQi9F,oBACL,IAAIQ,EAAA5gD,WAAWpF,GACf,IAAIgmD,EAAAvgD,oBAAoB,IAAIugD,EAAA5gD,WAAWpF,KAJW5nD,KAAAmQ,QAAAA,EAQhDpQ;AACN,MAAM6nD,EAAS5nD,KAAKupD,YACpB,OAAO3B,aAAkBgmD,EAAA5gD,WACtBpF,EAAOA,OACNA,EAA+BA,OAAOA,OAMpC7nD,YACN,OAAO,IAAIrH,QAAQ,CAACyB,EAASC,KAC5B,MAAM+mB,EAAUnhB,KAAKmqD,iBAAkB0jD,IACtC,IACC,MAAM9uG,EAAU1D,KAAKC,MAAMuyG,EAAWlzF,YACtC,OAAQ5b,EAAQyT,MACf,IAAK,OAAQ,OAAOxS,KAAK8tG,aAAa/uG,GACtC,IAAK,iBAEJ,OADAoiB,EAAQnM,UACD7a,EAAQ4E,GAChB,QAAS,MAAM,IAAIC,MAAM,8BAEzB,MAAOnD,GACRslB,EAAQnM,UACR5a,EAAOyB,QASHkE,aAAaguG,GACpB/tG,KAAKguG,YAAY,CAAEx7F,KAAM,OAAQnY,KAAM,KAMjC0F,SACN,MAAM,IAAIf,MAAM,iCAOVe,YAAYhB,GAClBiB,KAAKiuG,YAAY1sD,EAAA1oB,SAASyB,WAAWj/B,KAAKsD,UAAUI,MA1DtDH,EAAAoqD,SAAAA,qJCVapqD,EAAAi7D,kBAAqBvjB,GAC1B,IAAIijB,EAAAljB,eAAeC,GAOd13C,EAAAsvG,WAAc71G,GACnBA,EAAK8L,MAAM,KAAKxK,IAAK8K,GAAM0yB,mBAAmB1yB,IAAI5K,KAAK,iJCA/D,SAAiBs0G,GACAA,EAAArnG,OAAhB,SAAuB5B,EAAiBgC;AACvC,GAAIhC,IAAMgC,EACT,OAAO,EAER,IAAIknG,EAAQvwG,OAAOC,KAAKoH,GACpBmpG,EAAqB,IAAIluG,IAC7B,IAAK,IAAI1B,KAAOZ,OAAOC,KAAKoJ,GAC3BmnG,EAAMhuG,IAAI5B,GAEX,GAAI2vG,EAAM53G,SAAW63G,EAAMjvG,KAC1B,OAAO,EAGR,IAAK,IAAIX,KAAO2vG,EAAO,CACtB,GAAIlpG,EAAEzG,KAASyI,EAAEzI,GAChB,OAAO,EAER4vG,EAAM/tG,OAAO7B,GAEd,OAAsB,IAAf4vG,EAAMjvG,MApBf,CAAiBR,EAAAuvG,eAAAvvG,EAAAuvG,aAAY,KA8B7BvvG,EAAA0vG,OAAA,MAICvuG,YACCwuG,GAEAvuG,KAAKwuG,gBAAkBD,EAGjBxuG,MAAM2e,EAAgB3f,GAC5BiB,KAAKwuG,gBAAgBC,EAAAr9C,SAASpyD,MAAO0f,EAAQ3f,GAGvCgB,KAAK2e,EAAgB3f,GAC3BiB,KAAKwuG,gBAAgBC,EAAAr9C,SAASK,QAAS/yC,EAAQ3f,GAGzCgB,KAAK2e,EAAgB3f,GAC3BiB,KAAKwuG,gBAAgBC,EAAAr9C,SAASM,KAAMhzC,EAAQ3f,gOCzC9C,MAAM2vG,EAAgB,eAStB,MAAeC,EASd5uG,YAAY6uG,EAAoB75F,EAAW85F,EAA4BjwC,EAAoBkwC,GAC1F9uG,KAAK+uG,YAAcH,EACnB5uG,KAAK29E,KAAO5oE,EACZ/U,KAAKgvG,oBAAsBH,EAC3B7uG,KAAKivG,WAAarwC,EAClB5+D,KAAKkvG,oBAAsBJ,EAC3B9uG,KAAKmvG,sBAAwB92G,EAAKwB,KAAKg1G,EAAoBH,IAI7D,MAAMU,UAAgCT,EAE9B5uG,QACN,OAAOkiE,EAAI/nE,SAAS8F,KAAKmvG,uBAAuBj2G,KAAMm2G,IACrD,MAAMr8F,EAA4B,GAC5BwmD,EAAWw0B,EAAK1yF,MAAM+zG,EAAiB10F,WAAY3H;CACzD,OAAsB,IAAlBA,EAAOxc,QAA+C,WAA/Bw3F,EAAKj8E,YAAYynD,IACvCA,EAAS81C,aACZ91C,EAAS3f,KAAO2f,EAAS81C,WAAW31F,WAE9B6/C,EAAS81C,WACT91C,IAEPxmD,EAAOzT,QAAQzG,IACdkH,KAAK29E,KAAK9hF,MAAMmE,KAAKgvG,oBAAqB9/C,EAAIY,SAAS,EAAiB,KAAwC9vD,KAAKmvG,sBAAuBr2G,EAAEiX,OAAQjX,EAAEtC,OAAQ+4G,EAAAr+C,qBAAqBp4D,EAAE+C,WAGlL,OACJ7C,GACc,WAAbA,EAAIiB,KACA,MAGR+F,KAAK29E,KAAK9hF,MAAMmE,KAAKgvG,oBAAqB9/C,EAAIY,SAAS,EAAgB,KAA8B9vD,KAAKmvG,sBAAuBn2G,EAAI+F,UAC9H,QAKV,MAAMywG,UAAqCb,EAI1C5uG,YAAY6uG,EAAoB75F,EAAW85F,EAA4BjwC,EAAoBkwC,EAA6B5oF,GACvH5hB,MAAMsqG,EAAY75F,EAAK85F,EAAoBjwC,EAAWkwC,GACtD9uG,KAAKyvG,WAAavpF,EAGZnmB,WAAW2vG,GAgBjB,MAAMC,EAAe,CAACC,EAA0B58F,KAC/CA,EAAOzT,QAAS1D,IACfmE,KAAK29E,KAAK9hF,MAAMmE,KAAKgvG,oBAAqB9/C,EAAIY,SAAS,EAA0B,KAA6B8/C,EAAWL,EAAAr+C,qBAAqBr1D,EAAMA,YAGhJg0G,EAAuBD,IAC5B5vG,KAAK29E,KAAK9hF,MAAMmE,KAAKgvG,oBAAqB9/C,EAAIY,SAAS,EAAqB,KAA6C8/C,KAG1H,IAAIt2C,EAAYjhE,EAAKg1B,QAAQrtB,KAAKmvG,uBAC9B/hF,EAAWptB,KAAKmvG,sBAAsBn4E,OAAO,EAAGh3B,KAAKmvG,sBAAsB34G,OAAS8iE,EAAU9iE,QAElG,MAAMs5G,EAAgB,GAAGJ,EAAqBxvC,aAAawvC,EAAqBx4G,OAChF,IACI64G,EADAC,EAAkBhwG,KAAKyvG,WAAWvzG,aAAa4zG,GAgDnD,OA7CCC,EADGC,EACiB/tC,EAAI/nE,SAAS81G,EAAiB,QAAQ92G,KAA4CqB,IACrG,IAAIyY,EAA4B,GAC5Bi9F,EAAuCjiB,EAAK1yF,MAAMf,EAASyY,GAC/D,GAAIA,EAAOxc,OAAS,EAEnB,OADAm5G,EAAaK,EAAiBh9F,GACvB,CAAExV,YAAQzD;AAAW83D,QAAS,GAAGzkC,cAClC,GAA4C,WAAxC4gE,EAAKj8E,YAAYk+F,GAE3B,OADAJ,EAAoBG,GACb,CAAExyG,YAAQzD,EAAW83D,QAAS,GAAGzkC,cAGxC,MAAO,CAAE5vB,OADIyyG,EAAkBtyG,SAAWsyG,EAAkBtyG,SAASuyG,aAAUn2G,EACtD83D,QAAS,GAAGzkC,eAEnCvxB,IACI,CAAE2B,YAAQzD,EAAW83D,QAAS,GAAGzkC,gBAGrB60C,EAAI9lE,WAAWixB,EAAW,OAASksC,GAAWpgE,KAAmEV,IACpI,GAAKA,EAGL,OAAOg3G,EAA6BW,mBAAmBnwG,KAAKyvG,WAAYriF,GAAUl0B,KAAMk3G,GAClFA,EAAcR,UAGZ3tC,EAAI/nE,SAASk2G,EAAcR,UAAW,QAAQ12G,KAAKm3G,IACzD,IAAIr9F,EAA4B,GAC5B3U,EAAuB2vF,EAAK1yF,MAAM+0G,EAAsBr9F,GAC5D,OAAIA,EAAOxc,OAAS,GACnBm5G,EAAaS,EAAcR,UAAW58F,GAC/B,CAAExV,YAAQzD,EAAW83D,QAASu+C,EAAcvwG,WACV,WAA/BmuF,EAAKj8E,YAAY1T,IAC3BwxG,EAAoBO,EAAcR,WAC3B,CAAEpyG,YAAQzD,EAAW83D,QAASu+C,EAAcvwG,WAE7C,CAAErC,OAAQa,EAAUwzD,QAASu+C,EAAcvwG,WAC/C7G,IACI,CAAEwE,YAAQzD,EAAW83D,QAASu+C,EAAcvwG,YAd5C,CAAErC,YAAQzD,EAAW83D,QAASu+C,EAAcvwG,UAgBjD7G,UAMmBE,KAAM62G,IAC9B,QAA0Bh2G,IAAtBg2G,EACH,OAAOL,EAER,IAAI18F,EAA4B,GAEhC,OAAOw8F,EAA6Bc,6BAA6BP,EAAkBl+C,QAAS7+C,GAAQ9Z,KAAMovF,IACzG,GAAIt1E,EAAOxc,OAAS,EAEnB,OADAm5G,EAAaI,EAAkBl+C,QAAS7+C,GACjC08F,EACD,GAA4C,WAAxC1hB,EAAKj8E,YAAYg+F,GAE3B,OADAF,EAAoBE,EAAkBl+C,SAC/B69C,EAER,MAAME,EAAYG,EAAkBvyG,QAAUK,OAAOK,OAAO,MAE5D,OADAsxG,EAA6Be,kBAAkBvwG,KAAKyvG,WAAYC,EAAsBE,EAAWtnB,EAAUtoF,KAAK29E,KAAM39E,KAAKgvG,qBACpHU,KAEL12G,GACI02G;AAOD3vG,oCAAoCywG,EAAsCx9F,GACjF,OAAO,IAAIta,QAA2C,CAACC,EAAGG,KACrD03G,EACHvuC,EAAI/nE,SAASs2G,GAAuBt3G,KAAKu3G,IACxC93G,EAAEq1F,EAAK1yF,MAAMm1G,EAAsB91F,WAAY3H,KAC5Cha,IACHL,EAAE,QAGHA,EAAE,QASGoH,0BAA0BmmB,EAA6BkH,GAC9D,OAAO,IAAI10B,QAAyD,CAACC,EAAGG,KAiBvE,GAAIotB,EAAUwqF,SAAWxqF,EAAUprB,SAAWorB,EAAUtrB,OACvD,OAAOjC,EAAE,CAAEi3G,UAAWxiF,EAAW,YAAavtB,SAAU,QAjBzD,SAAS6hB,EAAK0L,EAAkBxyB,GAC/B,IAAI+1G,EAAU,GAAGvjF,SAAgBxyB,SACjCqnE,EAAI9lE,WAAWw0G,GAASz3G,KAAKV,IACxBA,GACHG,EAAE,CAAEi3G,UAAWe,EAAS9wG,SAAU,GAAGutB,eAEtC,IAAI1xB,EAAQd,EAAOe,YAAY,MAChB,IAAXD,EACH/C,EAAE,CAAEi3G,UAAW,GAAGxiF,aAAqBvtB,SAAU,QAEjDjF,EAASA,EAAOgB,UAAU,EAAGF,GAC7BgmB,EAAK0L,EAAUxyB,MAQlB8mB,CAAK0L,EAAUlH,EAAUtrB,UAQnBmF,yBAA2CmmB,EAA6B0qF,EAAYvyG,EAAsCwyG,EAAoD97F,EAAW+7F,GAChM,SAASC,EAAatoG,EAAUhK,EAAsBwvC,GACrD,IAAInvC,EAAQ2J,EAAIhK,GAChB,GAAIuyD,EAAM90B,SAASp9B,GAAQ,CAC1B,IAAIywB,EAAczwB,EACdtI,EAAS+4B,EAAI/4B,OACjB,GAAIA,EAAS,GAAgB,MAAX+4B,EAAI,IAAkC,MAApBA,EAAI/4B,EAAS,GAAY,CAC5D,IAAIw6G,EAAazhF,EAAIyH,OAAO,EAAGxgC,EAAS,GACpCuI,EAAUV,EAAS2yG,QAGPj3G,IAAZgF,GAAyB8xG,IAC5B9xG,EAAU8xG,EAAiBG,IAExBjyG,GACCmnB,EAAUprB,SAEbiE,EAAU,IAAWA,EAAQL,QAAQ,WAAY,QAAU,KAE5D+J,EAAIhK,GAAOwvC,IAAoB,UAARxvC,GAA2B,aAARA,IAAuBoyG,EAAmB,CAAE/xG,MAAOC,EAASc,SAAUgxG,EAAiBG,IAAgBjyG,GAEjJgW,EAAI/T,KAAK8vG,EAAc5hD,EAAIY,SAAS,EAAiB,KAAsCkhD,UAGvF,GAAIhgD,EAAM70B,SAASr9B,GACzB,IAAK,IAAIiU,KAAKjU,EACTA,EAAMG,eAAe8T,IACLg+F,EAAajyG,EAAOiU,EAAjC,aAANA,GAAyEk7B,QAGrE,GAAI+iB,EAAMroD,QAAQ7J,GACxB,IAAK,IAAIxI,EAAI,EAAGA,EAAIwI,EAAMtI,OAAQF,IACjCy6G,EAAajyG,EAAOxI,EAAG23C;AAK1B,IAAK,IAAIxvC,KAAOmyG,EACXA,EAAQ3xG,eAAeR,IAC1BsyG,EAAaH,EAASnyG,IAwB1B,MAAMwyG,UAAmCtC,EACxC5uG,SAASmxG,GACR,IAAIxB,EAAqDwB,EACzDxB,EAAqB9wC,UAAY5+D,KAAKivG,WACtCS,EAAqBZ,mBAAqB9uG,KAAKkvG,oBAE/C,IAAIzwC,EAAoB,GACxB,OAAKwyC,EAA2BE,4BAA4BnxG,KAAK+uG,YAAa/uG,KAAKgvG,oBAAqBU,EAAsBjxC,IAQ9HA,EAAQl/D,QAAS1D,IAChBmE,KAAK29E,KAAK38E,KAAKhB,KAAKgvG,oBAAqBnzG,KAIrC6zG,EAAqBxvC,YACzBwvC,EAAqBxvC,UAAY,uBAIlCwvC,EAAqB/1F,GAAK,GAAG+1F,EAAqBxvC,aAAawvC,EAAqBx4G,OACpFw4G,EAAqB9zC,WAAa,IAAIsF,EAAA5B,oBAAoBowC,EAAqB/1F,IAE/E+1F,EAAqB0B,kBAAoB1tE,EAAA9D,IAAInnC,KAAKuH,KAAKgvG,qBAEhDU,IAtBNjxC,EAAQl/D,QAAS1D,IAChBmE,KAAK29E,KAAK9hF,MAAMmE,KAAKgvG,oBAAqBnzG,KAEpC,MAsBDkE,mCAAmC87D,EAAiBw1C,EAA6B3B,EAA6CjxC,GAErI,QAAKwyC,EAA2BK,gCAAgCD,EAAqB3B,EAAsBjxC,KAItG8yC,EAAOC,MAAM9B,EAAqB7zC,SAKhCskC,EAAAzhC,wBAAwB7C,EAAS6zC,EAAsBjxC,IAJ7DA,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAAa,QAChC,IAMD/vD,uCAAuCsxG,EAA6B3B,EAA6CjxC,GACxH,IAAKixC,EAEJ,OADAjxC,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAA8B,QACjD,EAER,QAA8C,IAAnC4/C,EAAqBxvC,WAAuE,iBAAnCwvC,EAAqBxvC,UAExF,OADAzB,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAAkC,QACrD,EAER,GAAyC,iBAA9B4/C,EAAqBx4G,KAE/B,OADAunE,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAA6B,KAA4D,UAC5G;CAER,GAA4C,iBAAjC4/C,EAAqB7zC,QAE/B,OADA4C,EAAQtnE,KAAK+3D,EAAIY,SAAS,EAAgC,KAA4D,aAC/G,EAER,IAAK4/C,EAAqB5wC,QAEzB,OADAL,EAAQtnE,KAAK+3D,EAAIY,SAAS,GAAgC,KAA4D,aAC/G,EAER,GAAmD,iBAAxC4/C,EAAqB5wC,QAAQrxB,OAEvC,OADAgxB,EAAQtnE,KAAK+3D,EAAIY,SAAS,GAAuC,KAA4D,oBACtH,EAER,QAA0D,IAA/C4/C,EAAqB7uC,wBAC1BowC,EAA2BQ,eAAe/B,EAAqB7uC,uBAEnE,OADApC,EAAQtnE,KAAK+3D,EAAIY,SAAS,GAA8C,KAA+D,2BAChI,EAGT,QAAqD,IAA1C4/C,EAAqBgC,iBAAkC,CACjE,IAAKT,EAA2BQ,eAAe/B,EAAqBgC,kBAEnE,OADAjzC,EAAQtnE,KAAK+3D,EAAIY,SAAS,GAA0C,KAA+D,sBAC5H,EAER,QAAyC,IAA9B4/C,EAAqB7wC,KAE/B,OADAJ,EAAQtnE,KAAK+3D,EAAIY,SAAS,GAA0C,KAA6E,mBAAoB,UAC9J,EAGT,QAAyC,IAA9B4/C,EAAqB7wC,KAAsB,CACrD,GAAyC,iBAA9B6wC,EAAqB7wC,KAE/B,OADAJ,EAAQtnE,KAAK+3D,EAAIY,SAAS,GAA8B,KAA6D,UAC9G,EACD,CACN,IAAI6hD,EAAyBt5G,EAAKwB,KAAKw3G,EAAqB3B,EAAqB7wC,MAE7E8yC,EAAuBhwG,QAAQ0vG,IAClC5yC,EAAQtnE,KAAK+3D,EAAIY,SAAS,GAA8B,KAAqH6hD,EAAwBN,IAIvM,QAAqD,IAA1C3B,EAAqBgC,iBAE/B,OADAjzC,EAAQtnE,KAAK+3D,EAAIY,SAAS,GAA8B,KAA6E,mBAAoB,UAClJ,EAGT,OAAO,EAGA/vD,sBAAsB8G,GAC7B,IAAK6B,MAAMC,QAAQ9B,GAClB,OAAO,EAER,IAAK,IAAIvQ,EAAI,EAAGC,EAAMsQ,EAAIrQ,OAAQF,EAAIC,EAAKD,IAC1C,GAAsB,iBAAXuQ,EAAIvQ,GACd,OAAO,EAGT,OAAO,GAIT,MAAas7G,EAIZ7xG,YACiB6uG,EACAn0G,EACAG,EACA81G,EACA7B,EACAjwC,EACAkwC,EACA+C;AAPA7xG,KAAA4uG,WAAAA,EACA5uG,KAAAvF,OAAAA,EACAuF,KAAApF,OAAAA,EACAoF,KAAA0wG,QAAAA,EACA1wG,KAAA6uG,mBAAAA,EACA7uG,KAAA4+D,UAAAA,EACA5+D,KAAA8uG,mBAAAA,EACA9uG,KAAA6xG,YAAAA,EAKV9xG,uBAAuB0d,GAC7B,MAAO,CACNizF,QAASjzF,EAAMizF,QACf91G,OAAQ6iB,EAAM7iB,OACdE,OAAyB,WAAjB2iB,EAAM7iB,OACdsB,aAAcuhB,EAAMo0F,aAIf9xG,cAAcmF,EAA0BgC,GAC9C,OACChC,EAAE0pG,aAAe1nG,EAAE0nG,YAChB1pG,EAAEzK,SAAWyM,EAAEzM,QACfyK,EAAEtK,SAAWsM,EAAEtM,QACfsK,EAAEwrG,UAAYxpG,EAAEwpG,SAChBxrG,EAAE2pG,qBAAuB3nG,EAAE2nG,oBAC3B3pG,EAAE05D,YAAc13D,EAAE03D,WAClB15D,EAAE4pG,qBAAuB5nG,EAAE4nG,oBAC3B5pG,EAAEmmE,QAAUnkE,EAAEmkE,OACdymC,EAAA3D,aAAarnG,OAAO5B,EAAE2sG,YAAa3qG,EAAE2qG,cApC3CjzG,EAAAgzG,sBAAAA,EAkDA,MAAMG,EAELhyG,YAAoB4T,GAAA3T,KAAA2T,KAAAA,EAEpB5T,oBACC,OAAOkiE,EAAIvjB,cAAc1+C,KAAK2T,MAC5Bza,KAAKy6C,GAAWA,EAAQh6C,IAAIzC,IAAQ,CAAGA,KAAAA,EAAMmB,KAAMA,EAAKwB,KAAKmG,KAAK2T,KAAMzc,QAI5E0H,EAAAozG,iBAAA,MAKSjyG,qBAAqB87D,EAAiB9mD,EAAW85F,EAA4BjwC,EAAoBkwC,EAA6B5oF,GAIrI,OAHA2oF,EAAqBx2G,EAAKmzB,UAAUqjF,GAEvB,IAAIO,EAAwBvzC,EAAS9mD,EAAK85F,EAAoBjwC,EAAWkwC,GACxExzG,QAAQpC,KAAoCw2G,IACzD,GAA6B,OAAzBA,EACH,OAAO,KAIR,OADkB,IAAIF,EAA6B3zC,EAAS9mD,EAAK85F,EAAoBjwC,EAAWkwC,EAAoB5oF,GACjG+rF,WAAWvC,KAC5Bx2G,KAAMw2G,IACR,GAA6B,OAAzBA,EACH,OAAO,KAIR,OADgB,IAAIuB,EAA2Bp1C,EAAS9mD,EAAK85F,EAAoBjwC,EAAWkwC,GAC3EjnB,SAAS6nB;AAOrB3vG,4BAA4B0d,EAA8B1I,EAAWm9F,EAAsC,MACjH,MAAMrD,EAAqBpxF,EAAMoxF,mBAC3BjwC,EAAYnhD,EAAMmhD,UAClBkwC,EAAqBrxF,EAAMqxF,mBAE5BoD,IACJA,EAAW,IAAIH,EAAyBlD,IAGzC,IACC,IAAIsD,EAA+C,GACnD,IAAKvzC,EACJ,IACC,MAAMwzC,QAA6BnwC,EAAI/nE,SAAS7B,EAAKwB,KAAKg1G,EAAoB,aAAc,QAC5FsD,EAAW92G,KAAKC,MAAM82G,GACrB,MAAOp5G,IAKV,IAAIq5G,QAAaH,EAASI,oBAG1BD,EAAKzqG,KAAK,CAAC1C,EAAGgC,IAAMhC,EAAEhO,KAAOgQ,EAAEhQ,MAAQ,EAAI,GAEtC0nE,IACJyzC,EAAOA,EAAKhqG,OAAOkqG,GAAiC,IAA1BA,EAAIr7G,KAAKyK,QAAQ,OAG5C,MAAMukB,EAAY0rF,EAAsBY,gBAAgB/0F,GACxD,IAAIg1F,QAA+B/5G,QAAQgB,IAAI24G,EAAK14G,IAAIqQ,GAAKhK,KAAK0yG,cAAcj1F,EAAMmxF,WAAY75F,EAAK/K,EAAE3R,KAAMumE,EAAWkwC,EAAoB5oF,KAC1IysF,EAAwBjoE,EAAOtiC,SAASqqG,GAG5C,GAFAE,EAAwBA,EAAsBtqG,OAAO8L,GAAiB,OAATA,IAAkBg+F,EAAS,IAAIpuB,EAAAjkB,+BAA+B,CAAEnmD,GAAIoqE,EAAA9jB,sBAAsB9rD,EAAK+rD,UAAW/rD,EAAKjd,OAASid,EAAK0nD,SAASp9D,SAE9LmgE,EAAW,CAGf+zC,EAD+C5uB,EAAA5jB,iBAAiBwyC,EAAuB75G,IAAK,CAAG6gB,GAAI7gB,EAAE8iE,WAAW98D,MAAO+6C,KAAM/gD,EAAE+gD,QAC3FlgD,IAAI8K,GAAKA,EAAEmD,KAAK,CAAC1C,EAAGgC,IAAMqqG,EAAOqB,SAAS1tG,EAAE22D,QAAS30D,EAAE20D,UAAU,IAStG,OANA82C,EAAsB/qG,KAAK,CAAC1C,EAAGgC,IAC1BhC,EAAEksG,kBAAkB/wE,OAASn5B,EAAEkqG,kBAAkB/wE,QAC5C,EAEF,GAEDsyE,EACN,MAAO35G,GAER,OADA+b,EAAIlZ,MAAMgzG,EAAoB71G,GACvB,IAQF+G,mCAAmC0d,EAA8B1I,GACvE,MAAM85F,EAAqBpxF,EAAMoxF,mBAC3BjwC,EAAYnhD,EAAMmhD,UAClBkwC,EAAqBrxF,EAAMqxF,mBAEjC,OAAO7sC,EAAI9lE,WAAW9D,EAAKwB,KAAKg1G,EAAoBH,IAAgBx1G,KAAMV,IACzE,GAAIA,EAAQ;AACX,MAAM0tB,EAAY0rF,EAAsBY,gBAAgB/0F,GACxD,OAAOzd,KAAK0yG,cAAcj1F,EAAMmxF,WAAY75F,EAAK85F,EAAoBjwC,EAAWkwC,EAAoB5oF,GAAWhtB,KAAMw2G,GACvF,OAAzBA,EACI,GAED,CAACA,IAGV,OAAO1vG,KAAK6yG,eAAep1F,EAAO1I,IAC/B/b,IACH+b,EAAIlZ,MAAMgzG,EAAoB71G,GACvB,KAIF+G,2BAA2B0d,EAA8B1I,GAC/D,MAAM85F,EAAqBpxF,EAAMoxF,mBAC3BjwC,EAAYnhD,EAAMmhD,UAClBkwC,EAAqBrxF,EAAMqxF,mBAC3B5oF,EAAY0rF,EAAsBY,gBAAgB/0F,GACxD,OAAOzd,KAAK0yG,cAAcj1F,EAAMmxF,WAAY75F,EAAK85F,EAAoBjwC,EAAWkwC,EAAoB5oF,GAG9FnmB,8BAA8B+yG,EAAqDC,GACzF,OAAOr6G,QAAQgB,IAAI,CAACo5G,EAAmBC,IAAyB75G,KAAK,EAAE45G,EAAmBC,MACzF,IAAIC,EAAsDn1G,OAAOK,OAAO,MACxE,IAAK,IAAI5H,EAAI,EAAGC,EAAMu8G,EAAkBt8G,OAAQF,EAAIC,EAAKD,IACxD08G,EAAU9xC,EAAA5B,oBAAoB14B,MAAMksE,EAAkBx8G,GAAGslE,aAAek3C,EAAkBx8G,GAG3F,IAAK,IAAIA,EAAI,EAAGC,EAAMw8G,EAAuBv8G,OAAQF,EAAIC,EAAKD,IAC7D08G,EAAU9xC,EAAA5B,oBAAoB14B,MAAMmsE,EAAuBz8G,GAAGslE,aAAem3C,EAAuBz8G,GAGrG,IAAI28G,EAAYp1G,OAAOC,KAAKk1G,GAAWr5G,IAAKggB,GAAOq5F,EAAUr5F,IAY7D,OAXAs5F,EAAUrrG,KAAK,CAAC1C,EAAGgC,KAClB,MAAMgsG,EAAe76G,EAAK+0B,SAASloB,EAAEksG,kBAAkB/wE,QACjD8yE,EAAe96G,EAAK+0B,SAASlmB,EAAEkqG,kBAAkB/wE,QACvD,OAAI6yE,EAAeC,GACV,EAELD,EAAeC,EACX,EAED,IAEDF;CC7kBV,MAAMG,UAAgBC,EAAAt5B,uBAAtBh6E,kCACiBC,KAAAszG,QAAU,IAAIrzG,IAEvBF,UACNC,KAAKszG,QAAQ/zG,QAASg0G,GAAMA,EAAEv+F,WAC9BhV,KAAKszG,QAAQ9xG,QACb8C,MAAM0Q,UAGAjV,OAAOyzG,EAAajxF,EAAeg6C,GACzCv8D,KAAKszG,QAAQlzG,IAAIozG,EAAKxzG,KAAKqgD,MAAM99B,EAAUg6C,IAGrCx8D,QAAQyzG,GACdxzG,KAAKszG,QAAQpzG,IAAIszG,GAAMx+F,UACvBhV,KAAKszG,QAAQhzG,OAAOkzG,IAItB50G,EAAA60G,oBAAA,MAIC1zG,YACkBu7D,EACAC,GADAv7D,KAAAs7D,mBAAAA,EACAt7D,KAAAu7D,WAAAA,EAJDv7D,KAAA0zG,SAAW,IAAIzzG,IAM/BD,KAAKsoE,SAAW,IAAI+qC,EAAAt5B,uBAAuB/5E,KAAKu7D,YAG1Cx7D,OAAO4d,EAAuCpG,EAAerW,GACnE,OAAQqW,GACP,IAAK,aAAc,OAAOvX,KAAK2zG,WAAWh2F,EAASzc,EAAK,IACxD,IAAK,iBAAkB,OAAOlB,KAAKm3E,eAAej2E,EAAK,GAAIA,EAAK,IAGjE,MAAM,IAAIlC,MAAM,mBAAmBuY,MAG5BxX,WAAW4d,EAAuCi2F,GACzD,MAAM77F,EAAU,IAAIkG,EAAAjG,QAA0B,CAC7C4B,mBAAoB,KACnB,MAAM0uD,EAAW,IAAI8qC,EAAQpzG,KAAKu7D,YAClCv7D,KAAK0zG,SAAStzG,IAAIwzG,EAAStrC,GAC3B,MAAMj5C,EAAcyrB,EAAA+e,kBAAkBl8C,EAAQ24B,iBAC9CgyB,EAASiM,gBAAiBv7D,IACzBjB,EAAQE,KAAKe,EAAOrf,IAAK4d,GAAU1Z,OAAA8e,OAAA9e,OAAA8e,OAAA,GAC/BpF,GAAK,CACRgL,SAAU8M,EAAYqnB,kBAAkBn/B,EAAMgL,gBAGhD+lD,EAASmM,gBAAiBl9D,GAAUvX,KAAKu7D,WAAW1/D,MAAM0b,KAE3DuC,qBAAsB;AACrB9Z,KAAK0zG,SAASxzG,IAAI0zG,GAAU5+F,UAC5BhV,KAAK0zG,SAASpzG,OAAOszG,MAIvB,OAAO77F,EAAQR,MAGRxX,eAAewiB,EAAyBg6C,GAC/C,IAAI2a,EACJ,MAAMn/D,EAAU,IAAIkG,EAAAjG,QAA8C,CACjE4B,mBAAoB,KACds9D,KACJA,EAAaG,EAAAt5B,iBAAiB/9C,KAAKsoE,SAAUtoE,KAAKovB,UAAU7M,GAAS1kB,OAAA8e,OAAA9e,OAAA8e,OAAA,GACjE4/C,GAAI,CACP2P,WAAY,UAEFryD,GAAG,OAASxf,GAAS0d,EAAQE,KAAK5d,IAC7C68E,EAAWr9D,GAAG,QAAUhe,GAAUkc,EAAQE,KAAKpc,IAC/Cq7E,EAAWr9D,GAAG,MAAO,IAAM9B,EAAQE,KAAK,UAG1C6B,qBAAsB,IAAMo9D,GAAcA,EAAWvpD,YAGtD,OAAO5V,EAAQR,MAGTxX,KAAKoZ,EAAY80B,EAAiB/sC,GACxC,OAAQ+sC,GACP,IAAK,OAAQ,OAAOjuC,KAAK7G,KAAK+H,EAAK,IACnC,IAAK,OAAQ,OAAOlB,KAAKg9C,KAAK97C,EAAK,GAAIA,EAAK,IAC5C,IAAK,QAAS,OAAOlB,KAAKo9C,MAAMl8C,EAAK,IACrC,IAAK,OAAQ,OAAOlB,KAAK0uB,KAAKxtB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACrD,IAAK,WAAY,OAAOlB,KAAK9F,SAASgH,EAAK,IAC3C,IAAK,QAAS,OAAOlB,KAAKouB,MAAMltB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,IAAK,YAAa,OAAOlB,KAAK1F,UAAU4G,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC/D,IAAK,SAAU,OAAOlB,KAAKM,OAAOY,EAAK,GAAIA,EAAK,IAChD,IAAK,QAAS,OAAOlB,KAAK3C,MAAM6D,EAAK,IACrC,IAAK,UAAW,OAAOlB,KAAKzG,QAAQ2H,EAAK,IACzC,IAAK,SAAU,OAAOlB,KAAK26C,OAAOz5C,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzD,IAAK,OAAQ,OAAOlB,KAAK09C,KAAKx8C,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACrD,IAAK,QAAS,OAAOlB,KAAKqgD,MAAMn/C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAChE,IAAK;AAAW,OAAOlB,KAAK6zG,QAAQ3yG,EAAK,GAAIA,EAAK,IAGnD,MAAM,IAAIlC,MAAM,iBAAiBivC,MAG3BluC,UACNC,KAAK0zG,SAASn0G,QAASg0G,GAAMA,EAAEv+F,WAC/BhV,KAAK0zG,SAASlyG,QAGPzB,WAAWwiB,GAClB,OAAOviB,KAAKsoE,SAASnvE,KAAK6G,KAAKovB,UAAU7M,IAGlCxiB,WAAWwiB,EAAyBg6C,GAC3C,OAAOv8D,KAAKsoE,SAAStrB,KAAKh9C,KAAKovB,UAAU7M,GAAWg6C,GAG7Cx8D,YAAYm9C,GACnB,OAAOl9C,KAAKsoE,SAASlrB,MAAMF,GAGpBn9C,WAAWm9C,EAAYjvC,EAAazX,GAC3C,MAAM4iB,EAASmoC,EAAA1oB,SAASO,MAAM5iC,GAE9B,MAAO,CAAC4iB,QADgBpZ,KAAKsoE,SAAS55C,KAAKwuB,EAAIjvC,EAAKmL,EAAOA,OAAQ,EAAG5iB,IAI/DuJ,eAAewiB,GACtB,OAAOg/B,EAAA1oB,SAAS0B,WAAWv6B,KAAKsoE,SAASpuE,SAAS8F,KAAKovB,UAAU7M,KAG1DxiB,MAAMm9C,EAAYjvC,EAAamL,EAAkBrJ,EAAgBvZ,GACxE,OAAOwJ,KAAKsoE,SAASl6C,MAAM8uB,EAAIjvC,EAAKmL,EAAOA,OAAQrJ,EAAQvZ,GAGpDuJ,UAAUwiB,EAAyBnJ,EAAkBmjD,GAC5D,OAAOv8D,KAAKsoE,SAAShuE,UAAU0F,KAAKovB,UAAU7M,GAAWnJ,EAAOA,OAAQmjD,GAGjEx8D,aAAawiB,EAAyBg6C,GAC7C,OAAOv8D,KAAKsoE,SAAShoE,OAAON,KAAKovB,UAAU7M,GAAWg6C,GAG/Cx8D,YAAYwiB,GACnB,OAAOviB,KAAKsoE,SAASjrE,MAAM2C,KAAKovB,UAAU7M,IAGnCxiB,cAAcwiB,GACrB,OAAOviB,KAAKsoE,SAAS/uE,QAAQyG,KAAKovB,UAAU7M,IAGrCxiB,aAAawiB,EAAyB1qB,EAAuB0kE,GACpE,OAAOv8D,KAAKsoE,SAAS3tB,OAAO36C,KAAKovB,UAAU7M,GAAWmhB,EAAA9D,IAAIjoC,KAAKE,GAAS0kE,GAGjEx8D,KAAKwiB,EAAyB1qB,EAAuB0kE,GAC5D,OAAOv8D,KAAKsoE,SAAS5qB,KAAK19C,KAAKovB,UAAU7M,GAAWmhB,EAAA9D,IAAIjoC,KAAKE,GAAS0kE,GAG/Dx8D,YAAY6zG,EAAiBJ,EAAajxF,EAAyBg6C;AAC1Ev8D,KAAK0zG,SAASxzG,IAAI0zG,GAAUE,OAAON,EAAKxzG,KAAKovB,UAAU7M,GAAWg6C,GAG3Dx8D,cAAc6zG,EAAiBJ,GACtCxzG,KAAK0zG,SAASxzG,IAAI0zG,GAAUC,QAAQL,GAG7BzzG,UAAUwiB,GAEjB,GAAI,mBAAmBgG,KAAKhG,EAASlqB,MACpC,OAAOqrC,EAAA9D,IAAInnC,KAAKuH,KAAKs7D,mBAAmBskB,QAAUr9D,EAASlqB,KAAKqG,QAAQ,mBAAoB,MAEtF,GAAsB,qBAAlB6jB,EAASlqB,MAA+BkqB,EAASgV,MAC3D,IACC,MAAMA,EAAQl8B,KAAKC,MAAMinB,EAASgV,OAClC,GAAIA,EAAMw8E,oBACT,OAAOrwE,EAAA9D,IAAInnC,KAAK8+B,EAAMw8E,qBAEtB,MAAOl4G,IAEV,OAAO6nC,EAAA9D,IAAIjoC,KAAK4qB,KAIlB3jB,EAAAo1G,4BAAA,MACCj0G,YACkBktG,EACAl4F,EACAk/F,EACA/kE,GAHAlvC,KAAAitG,YAAAA,EACAjtG,KAAA+U,IAAAA,EACA/U,KAAAi0G,UAAAA,EACAj0G,KAAAkvC,gBAAAA,EAGXnvC,OAAOoZ,EAAY5B,GACzB,MAAM,IAAIvY,MAAM,mBAAmBuY,MAG7BxX,WAAW4d,EAAcswB,EAAiB/sC,GAChD,OAAQ+sC,GACP,IAAK,qBACJ,OAAOsrB,EAAA/iB,4BACAx2C,KAAKk0G,mBAAmBhzG,EAAKolB,UACnCw0B,EAAA+e,kBAAkBl8C,EAAQ24B,kBAE5B,IAAK,oBAAqB,OAAOt2C,KAAKm0G,oBACtC,IAAK,mBAAoB,OAAOn0G,KAAKo0G,mBAEtC,MAAM,IAAIp1G,MAAM,iBAAiBivC,MAG1BluC,yBAAyBnF,GAChC,MAAO,CACNw5D,IAAKr5D,QAAQq5D,IACbllB,gBAAiBlvC,KAAKkvC;AACtB0wC,QAASl8C,EAAA9D,IAAInnC,KAAKuH,KAAKitG,YAAYrtB,SACnCO,gBAAiBngF,KAAKitG,YAAY9sB,gBAClCk0B,aAAcr0G,KAAKitG,YAAYxsB,wBAC/B/Z,SAAUhjC,EAAA9D,IAAInnC,KAAKuH,KAAKitG,YAAYvmC,UACpC8a,eAAgB99C,EAAA9D,IAAInnC,KAAKuH,KAAKitG,YAAYzrB,gBAC1C8yB,sBAAuB5wE,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAKmG,KAAKitG,YAAYvmC,SAAU,mBACrE1J,kBAAmBt5B,EAAA9D,IAAInnC,KAAKuH,KAAKitG,YAAYjwC,mBAC7ChpB,SAAUtQ,EAAA9D,IAAInnC,KAAKuH,KAAKitG,YAAYj5D,UACpC4mB,iBAAkB56D,KAAK6yG,eAAej4G,GACtC4/C,GAAI3xB,EAAAV,IAIEpoB,qBAAqBnF,GAC5B,MAAMsB,QAAqB2zD,EAAAm8C,gBAAgBpxG,EAAQoF,KAAKitG,YAAYvyG,cAE9D65G,EAAe,CAAC31C,EAAoBkwC,EAA6B3jF,IAC/DzyB,QAAQgB,IAAIyxB,EAAMxxB,IAAKtB,GACtBy5G,EAAAE,iBAAiBa,eAAe,IAAIf,EAAAF,sBAC1C1yB,EAAArtB,QAAQgK,QACRqjB,EAAArtB,QAAQp3D,OACRG,IACEG,QAAQC,IAAIw5G,WACdn8G,EACAumE,EACAkwC,EACA5yG,GACE8D,KAAK+U,OAYV,OAAOrc,QAAQgB,IAAI,CARC2qB,UACZkwF,GAAa,GAAM,EAAO,CAACv0G,KAAKitG,YAAY5rB,yBAA0BrhF,KAAKitG,YAAYtrB,6BAO3E8yB,GAJEpwF,UACdkwF,GAAa,GAAO,EAAM,CAACv0G,KAAKitG,YAAYzrB,kBAAoBxhF,KAAKitG,YAAYvrB,sBAGtDgzB,KAAkBx7G,KAAMy7G,IAC1D,MAAMC,EAAmB,IAAI30G;CAc7B,OAbA00G,EAAcp1G,QAASs1G,IACtBA,EAAmBt1G,QAASq7D,IAC3BA,EAAWr7D,QAAS+5D,IACnB,MAAM3/C,EAAKunD,EAAA5B,oBAAoB14B,MAAM0yB,EAAUsC,YAC/C,GAAIg5C,EAAiB1rG,IAAIyQ,GAAK,CAC7B,MAAMwhC,EAAUy5D,EAAiB10G,IAAIyZ,GAAKy3F,kBAAkB/wE,OACtDS,EAAUw4B,EAAU83C,kBAAkB/wE,OAC5CrgC,KAAK+U,IAAI/T,KAAK,GAAGm6C,yBAA+Bra,KAEjD8zE,EAAiBx0G,IAAIuZ,EAAI2/C,SAIrB5wD,MAAM/Q,KAAKi9G,EAAiBp3G,YAI7BuC,oBACP,MAAM,IAAIf,MAAM,mBAGTe,yBACPC,KAAKi0G,UAAUvJ,YAAW,KAI5B9rG,EAAAk2G,iBAAA,MAkBC/0G,cAjBOC,KAAA+0G,mBAAgBh7G,EAINiG,KAAA6nD,WAAa,IAAI5pC,EAAAjG,QAClBhY,KAAAsiD,UAAYtiD,KAAK6nD,WAAWtwC,MAC3BvX,KAAAg1G,YAAc,IAAI/2F,EAAAjG,QACnBhY,KAAAi1G,WAAaj1G,KAAKg1G,YAAYz9F,MAC9BvX,KAAAk1G,QAAU,IAAIj3F,EAAAjG,QACdhY,KAAAm1G,OAASn1G,KAAKk1G,QAAQ39F,MACtBvX,KAAAo1G,MAAQ,IAAIn3F,EAAAjG,QACZhY,KAAAq1G,KAAOr1G,KAAKo1G,MAAM79F,MAGjBvX,KAAAipD,SAAW,IAAIhrC,EAAAjG,QAChBhY,KAAAkpD,QAAUlpD,KAAKipD,SAAS1xC,MAIvCvX,KAAKwuD,OAAS,IAAI8mD,EAAA/mD,OAAO,CACxBjM,UAAWtiD,KAAKi1G,WAChB/rD,QAASlpD,KAAKkpD,QACdisD,OAAQn1G,KAAKm1G,OACbE,KAAMr1G,KAAKq1G,KACXxyD,KAAO9jD,IACNiB,KAAK6nD,WAAW5vC,KAAKlZ,MAKjBgB,KAAKhB,GACXiB,KAAKg1G,YAAY/8F,KAAKlZ;kICjUXH,EAAA22G,gCAAkC,mBAO/C,MAAaC,UAAiC38F,EAAAlE,WAqB7C5U,YAAY01G,GACXnxG,QAhBgBtE,KAAA4zG,QAAkBl5D,EAAAvD,eAGlBn3C,KAAAsuF,aAAetuF,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAC1ChY,KAAAu0E,gBAAkBv0E,KAAKsuF,aAAa/2E,MAErCvX,KAAAk6E,sBAAwBl6E,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SAC1ChY,KAAAy0E,gBAAkBz0E,KAAKk6E,sBAAsB3iE,MAErCvX,KAAA01G,yBAA2B11G,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACtDhY,KAAAw0E,wBAA0Bx0E,KAAK01G,yBAAyBn+F,MAQhE,MAAMguC,EAAakwD,EAAmBE,gBACtC31G,KAAK0iD,QAAU6C,EAAWO,WAAqBlnD,EAAA22G,iCAE/Cv1G,KAAK41G,kBAAiB,GACtBH,EAAmBI,iBAAiB38G,KAAK48G,GAA0B91G,KAAK41G,oBAAoBE,GAAmD,IAAzBA,EAAuBt7D,MAE7Ix6C,KAAK+1G,oBAXNxtC,mBAAqD,OAAOvoE,KAAKs6E,cAczDv6E,oBACPC,KAAK8nD,UAAU9nD,KAAK0iD,QAAQa,OAAkC,aAAc,CAACvjD,KAAK4zG,SAAnE5zG,CAA6Eg2G,IAC3F,GAAIttG,MAAMC,QAAQqtG,GAAgB,CACjC,MAAMh9F,EAASg9F,EACfh2G,KAAKsuF,aAAar2E,KAAKe,EAAOrf,IAAI4d,IAAS;AAAGgL,SAAUmhB,EAAA9D,IAAIyN,OAAO91B,EAAMgL,UAAW/P,KAAM+E,EAAM/E,aAC1F,CACN,MAAM3W,EAAQm6G,EACdh2G,KAAKk6E,sBAAsBjiE,KAAKpc,OAKnCkE,iBAAiBk2G,GAChB,IAAI1tC,EAAe,GAOf0tC,IACH1tC,GAAY,MAGbvoE,KAAKs6E,cAAgB/R,EACrBvoE,KAAK01G,yBAAyBz9F,UAAKle,GAKpCgG,KAAKwiB,GACJ,OAAOviB,KAAK0iD,QAAQvjD,KAAK,OAAQ,CAACojB,IAGnCxiB,KAAKwiB,EAAeg6C,GACnB,OAAOv8D,KAAK0iD,QAAQvjD,KAAK,OAAQ,CAACojB,EAAUg6C,IAG7Cx8D,MAAMm9C,GACL,OAAOl9C,KAAK0iD,QAAQvjD,KAAK,QAAS,CAAC+9C,IAGpCn9C,WAAWm9C,EAAYjvC,EAAa5T,EAAkB0V,EAAgBvZ,GACrE,MAAO6qD,EAAO2qB,SAAuChsE,KAAK0iD,QAAQvjD,KAAK,OAAQ,CAAC+9C,EAAIjvC,EAAKzX,IAQzF,OAFA6D,EAAK+F,IAAIihD,EAAMjoC,OAAOlhB,MAAM,EAAG8zE,GAAYj8D,GAEpCi8D,EAGRjsE,eAAewiB,GAGd,aAF6BviB,KAAK0iD,QAAQvjD,KAAK,WAAY,CAACojB,KAEhDnJ,OAGbrZ,eAAewiB,EAAeg6C,EAA6Bx0D,GAC1D,MAAMgnB,EAASsnD,EAAA/oD,mBAA+BjzB,GAAQknD,EAAA1oB,SAASpvB,OAAOpP,EAAKV,IAAIU,GAAQknD,EAAA1oB,SAAS0B,KAAKlgC,KAAQ+e,QAGvGrW,EAAW/C,KAAK0iD,QAAQa,OAA6C,iBAAkB,CAAChhC,EAAUg6C,GAAvFv8D,CAA8Fk2G,IAG9G,GAAIA,aAA4B30D,EAAA1oB,SAC/B9J,EAAOX,MAAM8nF,EAAiB98F,YAI1B,CACJ,GAAyB,QAArB88F,EACHnnF,EAAO7hB,UACD,CAMN,IAAIrR,EAAQq6G,EACNr6G,aAAiBmD,QACtBnD,EAAQ,IAAImD,MAAMq9D,EAAAtL,eAAel1D,KAGlCkzB,EAAO7hB,IAAIrR,GAIZkH,EAASiS,aAmBX,OAdIjN,GACHA,EAAMiW,wBAAwB,KAI7B+Q,EAAO7hB,IAAI/E,EAAAvE,YAKXb,EAASiS,YAIJ+Z,EAGRhvB,MAAMm9C,EAAYjvC,EAAa5T,EAAkB0V,EAAgBvZ,GAChE,OAAOwJ,KAAK0iD,QAAQvjD,KAAK,QAAS,CAAC+9C,EAAIjvC,EAAKszC,EAAA1oB,SAAS0B,KAAKlgC,GAAO0V,EAAQvZ;AAG1EuJ,UAAUwiB,EAAehoB,EAAqBgiE,GAC7C,OAAOv8D,KAAK0iD,QAAQvjD,KAAK,YAAa,CAACojB,EAAUg/B,EAAA1oB,SAAS0B,KAAKhgC,GAAUgiE,IAG1Ex8D,OAAOwiB,EAAeg6C,GACrB,OAAOv8D,KAAK0iD,QAAQvjD,KAAK,SAAU,CAACojB,EAAUg6C,IAG/Cx8D,MAAMwiB,GACL,OAAOviB,KAAK0iD,QAAQvjD,KAAK,QAAS,CAACojB,IAGpCxiB,QAAQwiB,GACP,OAAOviB,KAAK0iD,QAAQvjD,KAAK,UAAW,CAACojB,IAGtCxiB,OAAOwiB,EAAe1qB,EAAa0kE,GAClC,OAAOv8D,KAAK0iD,QAAQvjD,KAAK,SAAU,CAACojB,EAAU1qB,EAAQ0kE,IAGvDx8D,KAAKwiB,EAAe1qB,EAAa0kE,GAChC,OAAOv8D,KAAK0iD,QAAQvjD,KAAK,OAAQ,CAACojB,EAAU1qB,EAAQ0kE,IAGrDx8D,MAAMwiB,EAAeg6C,GACpB,MAAMi3C,EAAM3uG,KAAK8F,SAGjB,OAFA3K,KAAK0iD,QAAQvjD,KAAK,QAAS,CAACa,KAAK4zG,QAASJ,EAAKjxF,EAAUg6C,IAElD1jD,EAAAxD,aAAa,IAAMrV,KAAK0iD,QAAQvjD,KAAK,UAAW,CAACa,KAAK4zG,QAASJ,MAjLxE50G,EAAA42G,yBAAAA,uKCba52G,EAAAu3G,2BAA6B,cAE7Bv3G,EAAAw3G,oBAAsBhwC,EAAA5lE,gBAAqC,gNCgBxE,MAAa61G,UAAqBr3G,MAKjCe,YAAYyS,EAAoC8jG;AAC/C,IAAIv3G,EAAUu3G,EAAMv3G,QAEpB,OAAQyT,GACP,IAAK,aAAczT,EAAU,gBAAgBA,IAG9CuF,MAAMvF,GACNiB,KAAKwS,KAAOA,EACZxS,KAAKs2G,MAAQA,GAYf,SAASC,EAAev9G,GACvB,GAAIA,aAAeq9G,EAClB,OAAOr9G,EAGR,IAAIwZ,OAAqCzY,EAMzC,MAJI,sDAAsDwuB,KAAKvvB,EAAI+F,WAClEyT,EAAO,cAGD,IAAI6jG,EAAa7jG,EAAMxZ,GAoC/B,SAASw9G,EAAWC,EAAkBC,EAAoBvmG,EAAmBpI,GAC5E,IAAI4F,EAAOs+B,EAAAxtB,wBAA8B,IAAM/lB,QAAQyB,WACnDw8G,EAAwB,EAO5B,OALA5uG,EAAMiW,wBAAwB,KAC7BrQ,EAAK4Q,SACLk4F,EAAQr5D,UAGF,IAAI1kD,QAAQ,CAACC,EAAGG,KACtB,MAAM4nB,EAAY,IAAIurB,EAAAlsB,UAEhB62F,EAAiB7uG,IAClBA,EAAMG,0BAIVyuG,IACAF,EAAQI,cAGTJ,EAAQnrG,KAAK,QAASxS,GACtB29G,EAAQnrG,KAAK,QAAS,IAAMqC,EAAKzU,KAAK,KACjC6O,EAAMG,yBAA2BuuG,EAAQK,aAAeH,EAC3Dh+G,IAEAG,EAAE,IAAIu9G,EAAa,aAAc,IAAIr3G,MAAMkwD,EAAIY,SAAS,EAAqB,KAAwC6mD,EAAuBF,EAAQK,gBAEnJh+G,IACH29G,EAAQI,YACRJ,EAAQ58F,GAAG,QAAUgqB,IAEpB,GAAI97B,EAAMG,wBACT,OAGD,IAAKiI,EAAQ4mG,gBAAgBxuF,KAAKsb,EAAMmzE,UAEvC,YADAJ,EAAc7uG,GAIf,MAAMivG,EAAWnzE,EAAMmzE,SAASt4G,QAAQyR,EAAQ4mG,gBAAiB,IAGjE,GAAI,MAAMxuF,KAAKyuF,GAAW,CACzB,MAAMC,EAAiB5+G,EAAKwB,KAAK68G,EAAYM,GAE7C,YADArpG,EAAOs+B,EAAAxtB,wBAAwB1W,GAASs3C,EAAA9hD,OAAO05G,GAAgB/9G,KAAK,IAAM09G,EAAc7uG,IAAQ7O,UAAKa,EAAWjB,KAIjH,MAAMi2B,EAASmoF,EAAcT,EAAS5yE,GAChCsW,EA1GT,SAAuBtW;AACtB,MAAMszE,EAAOtzE,EAAMuzE,wBAA0B,IAAM,MAEnD,MAAO,CAAC,IAAmB,GAAkB,GAC3Cz9G,IAAI4zD,GAAQ4pD,EAAO5pD,GACnBxjD,OAAO,CAAC7E,EAAGgC,IAAMhC,EAAIgC,EAAU,MAAPiwG,GAqGXE,CAAcxzE,GAE3Bl2B,EAAOs+B,EAAAxtB,wBAAwB1W,GAAS2Y,EAAUZ,MAAM,IAAMiP,EAAO71B,KAAK61B,IAtF7E,SAAsBA,EAAkBioF,EAAkB78D,EAAcu8D,EAAoBvmG,EAAmBpI,GAC9G,MAAMmiG,EAAU7xG,EAAK80B,QAAQ6pF,GACvBM,EAAgBj/G,EAAKwB,KAAK68G,EAAYxM,GAC5C,GAA0C,IAAtCoN,EAAc31G,QAAQ+0G,GACzB,OAAOh+G,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAAgB,KAAuCknD,KAErG,MAAMC,EAAiB5+G,EAAKwB,KAAK68G,EAAYM,GAE7C,IAAIO,EAQJ,OANAxvG,EAAMiW,wBAAwB,KACzBu5F,GACHA,EAAQ5pF,YAIHj1B,QAAQyB,QAAQklD,EAAA9hD,OAAO+5G,IAAgBp+G,KAAK,IAAM,IAAIR,QAAc,CAACC,EAAGG,KAC9E,IAAIiP,EAAMG,wBAIV,KACCqvG,EAAUn3D,EAAAnC,kBAAkBg5D,EAAgB,CAAE98D,KAAAA,KACtC7uC,KAAK,QAAS,IAAM3S,KAC5B4+G,EAAQjsG,KAAK,QAASxS,GACtBi2B,EAAOzjB,KAAK,QAASxS,GACrBi2B,EAAOqvB,KAAKm5D,GACX,MAAO17G,GACR/C,EAAE+C,QA0DkF27G,CAAazoF,EAAQioF,EAAU78D,EAAMu8D,EAAYvmG,EAASpI,GAAO7O,KAAK,IAAM09G,EAAc7uG,MAAU7O,KAAK,KAAMJ,QAKtM,SAAS2+G,EAAQC,EAAiBC,GAAgB,GACjD,OAAO,IAAIj/G,QAAQ,CAACyB,EAASC,KAC5Bw9G,EAAA56D,KAAS06D,EAASC,EAAO,CAAEE,aAAa,QAAS99G,EAAY,CAAC8B,EAAe46G,KACxE56G,EACHzB,EAAOm8G,EAAe16G,IAEtB1B,EAAQs8G,OAMZ,SAASS,EAAcQ,EAAkB7zE,GACxC,OAAO,IAAInrC,QAAQ,CAACyB,EAASC,KAC5Bs9G,EAAQI,eAAej0E,EAAO,CAAChoC,EAAekzB,KACzClzB,EACHzB,EAAOm8G,EAAe16G,IAEtB1B,EAAQ40B,OArJZnwB,EAAAy3G,aAAAA,EAiKAz3G,EAAAw7D,IAAA,SAAoB29C,EAAiBv+G,GACpC,OAAO,IAAId,QAAgB,CAACC,EAAGG,KAC9B,MAAMshE,EAAM,IAAI49C,EAAKC,QACrBz+G,EAAM+F,QAAQg8F;AACTA,EAAE59F,SACLy8D,EAAI89C,UAAgC,iBAAf3c,EAAE59F,SAAwB26B,OAAO3gC,KAAK4jG,EAAE59F,SAAU,QAAU49F,EAAE59F,SAAU49F,EAAEljG,MACrFkjG,EAAE4c,WACZ/9C,EAAIg+C,QAAQ7c,EAAE4c,UAAW5c,EAAEljG,QAG7B+hE,EAAIltD,MAEJ,MAAMmrG,EAAYj4D,EAAAnC,kBAAkB85D,GACpC39C,EAAIk+C,aAAal6D,KAAKi6D,GAEtBj+C,EAAIk+C,aAAahtG,KAAK,QAASxS,GAC/Bu/G,EAAU/sG,KAAK,QAASxS,GACxBu/G,EAAU/sG,KAAK,SAAU,IAAM3S,EAAEo/G,OAInCn5G,EAAA25G,QAAA,SAAwBR,EAAiBrB,EAAoBvmG,EAA2B,GAAIpI,GAC3F,MAAMgvG,EAAkB,IAAItjF,OAAOtjB,EAAQqoG,WAAa,IAAIroG,EAAQqoG,aAAe,IAEnF,IAAIp+F,EAAUq9F,EAAQM,GAAS,GAM/B,OAJI5nG,EAAQ8uB,YACX7kB,EAAUA,EAAQlhB,KAAKu9G,GAAWp3D,EAAAzmD,OAAO89G,GAAYx9G,KAAK,IAAMu9G,KAG1Dr8F,EAAQlhB,KAAKu9G,GAAWD,EAAWC,EAASC,EAAY,CAAEK,gBAAAA,GAAmBhvG,KAiBrFnJ,EAAAwa,OAAA,SAAuB2+F,EAAiBp9B,GACvC,OAfD,SAAco9B,EAAiBp9B,GAC9B,OAAO88B,EAAQM,GAAS7+G,KAAKu9G,GACrB,IAAI/9G,QAAkB,CAACC,EAAGG,KAChC29G,EAAQ58F,GAAG,QAAUgqB,IAChBA,EAAMmzE,WAAar8B,GACtBu8B,EAAcT,EAAS5yE,GAAO3qC,KAAK61B,GAAUp2B,EAAEo2B,GAAS/1B,GAAOF,EAAEE,MAInEy9G,EAAQnrG,KAAK,QAAS,IAAMxS,EAAE,IAAIkG,MAAMkwD,EAAIY,SAAS,EAAY,KAA6B6qB,SAMzFjsD,CAAKqpF,EAASp9B,GAAUzhF,KAAK61B,GAC5B,IAAIr2B,QAAgB,CAACC,EAAGG,KAC9B,MAAMskB,EAAoB,GAC1B2R,EAAOzjB,KAAK,QAASxS,GACrBi2B,EAAOlV,GAAG,OAAS3S,GAAckW,EAAQjmB,KAAK+P,IAC9C6nB,EAAOlV,GAAG,MAAO,IAAMlhB,EAAE2/B,OAAO7uB,OAAO2T,+IC5O1Cxe,EAAA27D,YAAA,SAA4BU;AAC3B,OAAOw9C,EAAAr/F,OAAO6hD,EAAM,0BAClB/hE,KAAKkgB,IACL,IACC,OAAO/d,KAAKC,MAAM8d,EAAOuB,SAAS,SACjC,MAAO3hB,GACR,MAAM,IAAIgG,MAAM6wD,EAAAC,SAAS,EAAmB,+UC6ChD,MAAa4oD,UAAiC15G,MAC7Ce,YAAYhB,EAA0B9E,GACrCqK,MAAMvF,GAD+BiB,KAAA/F,KAAAA,GAKvC,SAAS0+G,EAAcn4D,GACtB,OAAO,IAAI9nD,QAAQ,CAACC,EAAGG,KACtB,IACC,MAAM0gE,EAAWn+D,KAAKC,MAAMklD,GACtB/iD,EAAW+7D,EAAS81C,YAAc,YACjC91C,EAAS81C,WAChB32G,EAAE,CAAE6gE,SAAAA,EAAU/7D,SAAAA,IACb,MAAOzE,GACRF,EAAE,IAAIkG,MAAMkwD,EAAIY,SAAS,EAAmB,WAd/ClxD,EAAA85G,yBAAAA,EA0CA,IAAAE,EAAA,MAAA,IAAaA,EAAb,cAAgD//F,EAAAlE,WA2B/C5U,YACuCu7D,EACKu9C,EACbt9C,EACMu9C,EACAxf,EACFqG,GAElCr7F,QAPsCtE,KAAAs7D,mBAAAA,EACKt7D,KAAA64G,eAAAA,EACb74G,KAAAu7D,WAAAA,EACMv7D,KAAA84G,gBAAAA,EACA94G,KAAAs5F,iBAAAA,EACFt5F,KAAA2/F,eAAAA,EAxB3B3/F,KAAA+4G,oBAAsB,EACb/4G,KAAAg5G,qBAAwE,IAAI/4G;AAC5ED,KAAAi5G,uBAA+D,IAAIh5G,IAInED,KAAAk5G,oBAAsBl5G,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACjDhY,KAAA85D,mBAAmD95D,KAAKk5G,oBAAoB3hG,MAEpEvX,KAAAm5G,uBAAyBn5G,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACpDhY,KAAA+5D,sBAAyD/5D,KAAKm5G,uBAAuB5hG,MAE7EvX,KAAAo5G,sBAAwBp5G,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACnDhY,KAAAg6D,qBAAoDh6D,KAAKo5G,sBAAsB7hG,MAEhFvX,KAAAq5G,yBAA2Br5G,KAAK8nD,UAAU,IAAI7pC,EAAAjG,SACtDhY,KAAAi6D,wBAA6Dj6D,KAAKq5G,yBAAyB9hG,MA8zBnFvX,KAAAs5G,yBAA0C,KAQ1Ct5G,KAAAu5G,6BAA8C,KA3zBrDv5G,KAAKw5G,qBAAuBl+C,EAAmB+lB,sBAC/CrhF,KAAKwhF,eAAiBlmB,EAAmBkmB,eACzCxhF,KAAKy5G,gBAAkBphH,EAAKwB,KAAKmG,KAAKwhF,eAAgB,aACtDxhF,KAAK05G,uBAAyB,IAAIztE,EAAA7pB,MAClCpiB,KAAK25G,cAAgB35G,KAAK8nD,UAAU,IAAI8xD,EAAAh4C,wBAAwBtG,EAAoBt7D,OACpFA,KAAK65G,mBAAqB75G,KAAK8nD,UAAU,IAAIgyD,EAAAz+C,oBAAoBC,EAAoBt7D,KAAKu7D,aAE1Fv7D,KAAK8nD,UAAUjvC,EAAAxD,aAAa,KAC3BrV,KAAKg5G,qBAAqBz5G,QAAQ6a,GAAWA,EAAQmE;AACrDve,KAAKi5G,uBAAuB15G,QAAQ6a,GAAWA,EAAQmE,UACvDve,KAAKg5G,qBAAqBx3G,QAC1BxB,KAAKi5G,uBAAuBz3G,WAI9BzB,IAAIu5D,GAEH,OADAt5D,KAAKu7D,WAAW2V,MAAM,iCAAkC5X,EAAUsC,WAAWjiD,IACtE3Z,KAAK+5G,aAAazgD,GACvBpgE,KAAKM,GAASi/G,EAAAr+C,IAAI/hE,EAAKwB,KAAKm/C,EAAAyB,SAAUC,EAAAvD,gBAAiB39C,IACvDN,KAAUb,GAAQqrC,EAAA9D,IAAInnC,KAAKJ,IAG9B0H,MAAMi7D,EAAkBxoD,GAEvB,OADAxS,KAAKu7D,WAAW2V,MAAM,mCAAoClW,EAAYrgD,YAC/D3a,KAAKs6D,QAAQU,EAAaxoD,GAAMtZ,KAAKihE,GAASA,EAAMyB,YAG5D77D,kBAAkBk7D,GACjB,MAAM++C,QAAyBh6G,KAAKi6G,aAAah/C,GAC3C88C,EAAU1/G,EAAK8B,QAAQ6/G,EAAiB35E,QAC9C,OAAO65E,EAAA3/C,YAAYw9C,GAGZh4G,aAAau5D,GAEpB,MAAM6gD,EAA4B91F,MAAO/qB,IACxC,IAAI/B,QAAgB0qE,EAAI1oE,QAAQD,GAChC/B,EAAUA,EAAQoC,IAAIb,GAAKT,EAAKwB,KAAKP,EAAKR,IAC1C,MAAMG,QAAcP,QAAQgB,IAAInC,EAAQoC,IAAIb,GAAKmpE,EAAI9oE,KAAKL,KAC1D,IAAIshB,EAA6B1hB,QAAQyB,QAAQ,IAYjD,OAXAlB,EAAMsG,QAAQ,CAACpG,EAAMuC,KACpB,MAAMmoC,EAAQtsC,EAAQmE,GAClBvC,EAAK0lD,WACRzkC,EAAUA,EAAQlhB,KAAK7C,GAAU,IAAKA,EAAQwtC,KAE3C1qC,EAAKC,gBACRghB,EAAUA,EACRlhB,KAAK7C,GAAU8jH,EAA0Bt2E,GACxC3qC,KAAKM,GAAS,IAAKnD,KAAWmD,QAG5B4gB,GAGR,OAAO+/F,EAA0B7gD,EAAUzgE,SAASwnC,QAClDnnC,KAAKM,GAASA,EAAMG,IAAI4hG,IAAK,CAAUljG,KAAM,aAAaA,EAAK60B,SAASosC,EAAUzgE,SAASwnC,OAAQk7D,KAAM4c,UAAW5c,MAIvHx7F,QAAQk7D,EAAWzoD,EAAA;AAElB,OADAxS,KAAKu7D,WAAW2V,MAAM,qCAAsCjW,EAAKtgD,YAC1DsxB,EAAAxtB,wBAAwB1W,GACvB/H,KAAKi6G,aAAah/C,GAAM/hE,KAAK8gH,IACnC,MAAMjC,EAAU1/G,EAAK8B,QAAQ6/G,EAAiB35E,QAE9C,OAAO65E,EAAA3/C,YAAYw9C,GACjB7+G,KAAKsgE,IACL,MAAMoC,EAAa,CAAEjiD,GAAIoqE,EAAA9jB,sBAAsBzG,EAAS0G,UAAW1G,EAAStiE,OAC5E,IAAI6yE,EAAS,EACb,GAAIvQ,EAASsF,SAAWtF,EAASsF,QAAQrxB,SAAW0yD,EAAAphC,cAAcvF,EAASsF,QAAQrxB,OAAQyxC,EAAArtB,QAAQgK,SAClG,OAAOnjE,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAAgB,KAAiF8L,EAAWjiD,GAAIulE,EAAArtB,QAAQgK,WAEtK,MAAMu+C,EAAwB,IAAIr2B,EAAAjkB,+BAA+BlE,EAAYpC,EAASqC,SACtF,OAAO77D,KAAK26D,aAAY,GACtBzhE,KAAKmhH,IACL,MAAMC,EAAWD,EAAoBhyG,OAAO/R,GAAKytF,EAAAlkB,kBAAkBjE,EAAYtlE,EAAEslE,aAAa,GAC9F,OAAI0+C,GACHvwC,EAAS,EACLqwC,EAAsBtzG,OAAO,IAAIi9E,EAAAjkB,+BAA+Bw6C,EAAS1+C,WAAY0+C,EAAS9gD,SAASqC,UACnG77D,KAAKu6G,gBAAgBD,EAAU,YAAYphH,KAAK,KAAMJ,GAAKJ,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAAe,KAAmD0J,EAASylC,aAAezlC,EAAStiE,SACjMq6G,EAAOiJ,GAAGF,EAAS9gD,SAASqC,QAASrC,EAASqC,SACjD77D,KAAKy6D,UAAU6/C,GAAU,QAD1B,GAMAt6G,KAAKy6G,4BAA4BL,GACtClhH,KAAKohH;AACL,GAAIA,EACH,OAAOt6G,KAAKu6G,gBAAgBD,EAAU,YAAYphH,KAAK,KAAMJ,GAAKJ,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAAe,KAAmD0J,EAASylC,aAAezlC,EAAStiE,aAO/MgC,KAAK,KACL8G,KAAKu7D,WAAWI,KAAK,4BAA6BC,EAAWjiD,IAC7D3Z,KAAKk5G,oBAAoBjhG,KAAK,CAAE2jD,WAAAA,EAAYm8C,QAAAA,IACrC/3G,KAAK06G,YAAY32B,EAAA9jB,sBAAsBzG,EAAS0G,UAAW1G,EAAStiE,OACzEgC,KACAuE,GAAYuC,KAAK26G,mBAAmBP,EAAuBrC,EAASt6G,EAAU+U,EAAMu3D,EAAWhiE,GAC/F,IAAM/H,KAAK26G,mBAAmBP,EAAuBrC,EAAS,KAAMvlG,EAAMu3D,EAAWhiE,IACrF7O,KACAihE,IAAWn6D,KAAKu7D,WAAWI,KAAK,wCAAyCC,EAAWjiD,IAAYwgD,GAChGrhE,IACCkH,KAAKu7D,WAAW1/D,MAAM,mCAAoC+/D,EAAWjiD,GAAI7gB,EAAEiG,SACpErG,QAAQ0B,OAAOtB,YAQxBiH,aAAak7D,GACpB,GAAIA,EAAKh7B,SAAWkQ,EAAA5C,QAAQ90C,KAC3B,OAAOC,QAAQyB,QAAQ8gE,GAExB,IAAKj7D,KAAK84G,gBACT,MAAM,IAAI95G,MAAM,qCAEjB,MAAM47G,EAAqBviH,EAAKwB,KAAKm/C,EAAAyB,SAAUC,EAAAvD,gBAC/C,OAAOn3C,KAAK84G,gBAAgBna,SAAS1jC,EAAMv3B,EAAA9D,IAAInnC,KAAKmiH,IAAqB1hH,KAAK,IAAMwqC,EAAA9D,IAAInnC,KAAKmiH,IAGtF76G,mBAAmBq6G,EAAuDrC,EAAiBt6G,EAAmC+U,EAAqBu3D,EAA6BhiE,GACvL,OAAO/H,KAAK66G,wBAAwB76G,KAAK86G,iBAAiB,CAAE/C,QAAAA,EAASqC,sBAAAA,EAAuB38G,SAAAA;EAAY+U,EAAMzK,GAC5G7O,KAAKihE,GAASn6D,KAAK+6G,qCAAqC5gD,EAAO,MAC9DjhE,KACA,IAAMihE,EACNt+D,IACK8pD,EAAA/8C,gBAAgBuxD,EAAMX,SAASqH,wBAClC7gE,KAAKu7D,WAAWv6D,KAAK,4CAA6Cm5D,EAAMyB,WAAWjiD,GAAI9d,EAAMkD,SAE1F4mD,EAAA/8C,gBAAgBuxD,EAAMX,SAAS8lC,gBAClCt/F,KAAKu7D,WAAWv6D,KAAK,iDAAkDm5D,EAAMyB,WAAWjiD,GAAI9d,EAAMkD,SAE5Fo7D,KAETjhE,KACAihE,IAAWn6D,KAAKm5G,uBAAuBlhG,KAAK,CAAE2jD,WAAYw+C,EAAsBx+C,WAAYm8C,QAAAA,EAAS59C,MAAAA,EAAO4P,UAAAA,IAAqB5P,GACjIt+D,IAAWmE,KAAKm5G,uBAAuBlhG,KAAK,CAAE2jD,WAAYw+C,EAAsBx+C,WAAYm8C,QAAAA,EAAShuC,UAAAA,EAAWluE,MAAAA,IAAiBnD,QAAQ0B,OAAOyB,MAInJkE,yBAAyBu5D,GACxB,IAAKt5D,KAAK64G,eAAetX,YACxB,OAAO7oG,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAAuB,QAErE,MAAMuzC,GAAY,IAAIjsG,MAAO8hB,UAEvB8hG,EAA+B,CAAC1hD,EAA8ByQ,EAA6B5P,KAChGn6D,KAAKu7D,WAAWI,KAAK,qCAAsCrC,EAAUsC,WAAWjiD,IAChF3Z,KAAKm5G,uBAAuBlhG,KAAK,CAAE2jD,WAAYtC,EAAUsC,WAAYq/C,QAAS3hD,EAAWa,MAAAA,EAAO4P,UAAAA;AAChG/pE,KAAKk7G,gBAAgBl7G,KAAKm7G,kBAAkBpxC,GAAYga,EAAAjjB,iCAAiCxH,IAAY,IAAIliE,MAAO8hB,UAAYmqF,OAAWtpG,IAGlIqhH,EAA+B,CAAC9hD,EAA8ByQ,EAA6BluE,KAChG,MAAMs1D,EAAYt1D,GAAoCA,EAAO5B,KAAkC4B,EAAO5B,KA/OnF,UAgPnB+F,KAAKu7D,WAAW1/D,MAAM,+BAAgCy9D,EAAUsC,WAAWjiD,GAAI9d,EAAQA,EAAMkD,QAAUoyD,GACvGnxD,KAAKm5G,uBAAuBlhG,KAAK,CAAE2jD,WAAYtC,EAAUsC,WAAYq/C,QAAS3hD,EAAWyQ,UAAAA,EAAWluE,MAAOs1D,IAC3GnxD,KAAKk7G,gBAAgBl7G,KAAKm7G,kBAAkBpxC,GAAYga,EAAAjjB,iCAAiCxH,IAAY,IAAIliE,MAAO8hB,UAAYmqF,EAAWxnG,GACnIA,aAAiBmD,QACpBnD,EAAM3E,KAAOi6D,IAIf,IACCmI,QAAkBt5D,KAAKq7G,6BAA6B/hD,GACnD,MAAOz9D,GAER,OADAu/G,EAA6B9hD,EAAS,EAA4Bz9D,GAC3DnD,QAAQ0B,OAAOyB,GAGvB,MAAM4C,EAAM,IAAIslF,EAAAjkB,+BAA+BxG,EAAUsC,WAAYtC,EAAUuC,SAASp9D,MACxF,IAAI68G,EAAqBt7G,KAAKg5G,qBAAqB94G,IAAIzB,GACvD,IAAK68G,EAAoB,CAExBt7G,KAAKu7D,WAAWI,KAAK,wBAAyBrC,EAAUsC,WAAWjiD,IACnE3Z,KAAKk5G,oBAAoBjhG,KAAK,CAAE2jD,WAAYtC,EAAUsC,WAAYq/C,QAAS3hD,IAE3E,IACIpV,EAAsCq3D,EAAmDC,EADzFzxC,EAAS,EAEbuxC,EAAqBrvE,EAAAxtB,wBAAwB1W,IAAWm8C,EAAoBn8C,EAAc,IAAIrP,QAAQ,CAACC,EAAGG,KAAQyiH,EAAkB5iH,EAAG6iH,EAAgB1iH,MACvJkH,KAAKg5G,qBAAqB54G,IAAI3B,EAAK68G,GACnC;AACC,MACMG,SADkBz7G,KAAK26D,aAAY,IACLtyD,OAAO/R,GAAKytF,EAAAlkB,kBAAkBvpE,EAAEslE,WAAYtC,EAAUsC,aAAa,GACnG6/C,IACH1xC,EAAS,GAGV/pE,KAAK07G,6BAA6BpiD,EAAWyQ,GAC3C7wE,KAAKyiH,GAAwB37G,KAAK86G,iBAAiBa,EAAoB,EAAsBz3D,GAC5FhrD,KAAKihE,GAAS8H,EAAIrpE,OAAO+iH,EAAqB5D,SAASj5F,QAAQ,QAAW5lB,KAAK,IAAMihE,KACtFjhE,KAAKihE,GAASn6D,KAAK+6G,qCAAqC5gD,EAAOshD,GAC9DviH,KAAK,IAAMihE,EAAOt+D,GAASmE,KAAKy6D,UAAUN,GAAO,GAAMjhE,KAAK,IAAMR,QAAQ0B,OAAOyB,GAAQ,IAAMnD,QAAQ0B,OAAOyB,MAC/G3C,KACAmrB,MAAM81C,IACDshD,GAAqBlK,EAAOqK,IAAIH,EAAkBjiD,SAASqC,QAASvC,EAAUuC,gBAC3E77D,KAAK67G,eAAeJ,GAE3Bz7G,KAAKg5G,qBAAqB14G,OAAO7B,GACjCu8G,EAA6B1hD,EAAWyQ,EAAW5P,GACnDohD,EAAgBphD,IAEjBt+D,IACCmE,KAAKg5G,qBAAqB14G,OAAO7B,GACjC28G,EAA6B9hD,EAAWyQ,EAAWluE,GACnD2/G,EAAc3/G,KAGhB,MAAOA,GAGR,OAFAmE,KAAKg5G,qBAAqB14G,OAAO7B,GACjC28G,EAA6B9hD,EAAWyQ,EAAWluE,GAC5CnD,QAAQ0B,OAAOyB,IAKxB,OAAOy/G,EAGAv7G,mCAAmCu5D,GAC1C,SAAUt5D,KAAK87G,YAAYxiD,GAC1B,OAAO5gE,QAAQ0B,OAAO,IAAIs+G,EAAyBxpD,EAAIY,SAAS,EAAuB,MAAqEq0B,EAAA1c,0BAG7J,MAAMs0C,QAA4B/7G,KAAK64G,eAAemD,uBAAuB1iD,GAE7E,OAAKyiD,GACGrjH,QAAQ0B,OAAO,IAAIs+G,EAAyBxpD,EAAIY,SAAS,EAAgC,KAAqHwJ,EAAUsC,WAAWjiD,GAAIulE,EAAArtB,QAAQgK,SAAUsoB,EAAAzc,6BAMlQ3nE,qBAAqBu5D;AAEpB,OADAt5D,KAAKu7D,WAAW2V,MAAM,kDAAmD5X,EAAUsC,WAAWjiD,IACzF3Z,KAAK64G,eAAetX,YAGlBvhG,KAAKi8G,qBAAqB3iD,GAC/BpgE,KAAKklG,GACDA,EACIp+F,KAAK67G,eAAeviD,GACzBpgE,KAAK,IAAM8G,KAAKk8G,2BAA2B5iD,GAC1CpgE,KACA,IAAM8G,KAAKw6D,mBAAmB4jC,GAAkBllG,OAChDJ,GAAKJ,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAAe,KAA+FuM,EAAAtL,eAAej4D,QAErKJ,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAA+B,SAXtEp3D,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,EAAuB,QAe9D/vD,kBAAkBgqE,GACzB,OAAgB,IAATA,EAAwC,0BAA4B,2BAGpEhqE,YAAYu5D,GACnB,OAAOt5D,KAAK86D,sBACV5hE,KAAKkoE,GAAU2iB,EAAA5iB,0BAA0BC,GAAQl4D,IAAIowD,EAAUsC,WAAWjiD,KAGrE5Z,6BAA6Bu5D,EAA8ByQ,GAClE,MAAMtsE,EAA6B,CAClCkc,GAAI2/C,EAAUsC,WAAW/hB,KACzB4mB,YAAanH,EAAUmH,YACvBE,qBAAsBrH,EAAUqH,sBAIjC,OADA3gE,KAAKu7D,WAAW2V,MAAM,iCAAkC5X,EAAUsC,WAAWjiD,IACtE3Z,KAAK64G,eAAela,SAASrlC,EAAW51B,EAAA9D,IAAInnC,KAAKugD,EAAAyB,UAAWsvB,GACjE7wE,KACAkhE,IACC,MAAM29C,EAAU39C,EAAI/5B,OAEpB,OADArgC,KAAKu7D,WAAWI,KAAK,wBAAyBrC,EAAUsC,WAAWjiD,GAAIo+F;AAChEmC,EAAA3/C,YAAYw9C,GACjB7+G,KACAsgE,IAAY,CAAyBu+C,QAAAA,EAASqC,sBAAuB,IAAIr2B,EAAAjkB,+BAA+BxG,EAAUsC,WAAYpC,EAASqC,SAAUp+D,SAAAA,IACjJ5B,GAASnD,QAAQ0B,OAAO,IAAIs+G,EAAyB14G,KAAKm8G,WAAWtgH,GAAOkD,QA9WlD,iBAiX7BlD,GAASnD,QAAQ0B,OAAO,IAAIs+G,EAAyB14G,KAAKm8G,WAAWtgH,GAAOkD,QAlX9C,iBAqXzBgB,iBAAiB47G,EAA4CnpG,EAAqBzK,GACzF,OAAO/H,KAAKy6G,4BAA4BkB,EAAqBvB,uBAC3DlhH,KACAihE,GACKA,GAGGn6D,KAAKo8G,kBAAkBT,EAAsBnpG,EAAMzK,GAE3DjP,GACK+vB,EAAA9B,YACIruB,QAAQ0B,OAAO,IAAIs+G,EAAyBxpD,EAAIY,SAAS,GAAY,MAjY1C,qBAmY5Bp3D,QAAQ0B,OAAO,IAAIs+G,EAAyBxpD,EAAIY,SAAS,GAAY,MAnYzC,sBAuY/B/vD,4BAA4Bq6G,GACnC,OAAOp6G,KAAKq8G,cAAcjC,GACxBlhH,KAA6BmjH,GACzBA,GACHr8G,KAAKu7D,WAAW2V,MAAM,gDAAiDkpC,EAAsBx+C,WAAWjiD,IAEjG3Z,KAAKs8G,iBAAiBlC,GAC3BlhH,KAAK,KACL8G,KAAKu7D,WAAWI,KAAK,+CAAgDy+C,EAAsBx+C,WAAWjiD,IAC/F3Z,KAAK26D,aAAY,KAExBzhE,KAAK+qF,GAAaA,EAAU57E,OAAO/R,GAAK,IAAIytF,EAAAjkB,+BAA+BxpE,EAAEslE,WAAYtlE,EAAEkjE,SAASqC,SAAS/0D,OAAOszG,IAAwB,KAExI,MAIFr6G,mBAAkBg4G,QAAEA,EAAOqC,sBAAEA,EAAqB38G,SAAEA,GAAkC+U,EAAqBzK;AAClH,MAAM6zD,WAAEA,GAAew+C,EACjBvhH,EAAe,IAAJ2Z,EAA8BxS,KAAKwhF,eAAiBxhF,KAAKw5G,qBACpE+C,EAAanC,EAAsB37G,MACnC+9G,EAAWnkH,EAAKwB,KAAKhB,EAAU,IAAI0jH,KACnCE,EAAgBpkH,EAAKwB,KAAKhB,EAAU0jH,GAC1C,OAAOt6C,EAAIrpE,OAAO6jH,GAChBvjH,KAAK,IAAM8G,KAAK08G,iBAAiB9gD,EAAYm8C,EAASyE,EAAUC,EAAe10G,GAAQjP,GAAKJ,QAAQ0B,OAAO,IAAIs+G,EAAyBxpD,EAAIY,SAAS,GAAiB,KAAoI2sD,EAAe7gD,EAAWjiD,IAzZzS,cA0Z3BzgB,KAAK,IAAM8G,KAAK0yG,cAAc6J,EAAY1jH,EAAU2Z,IACpDtZ,KAAKihE,GACAA,GAGLn6D,KAAKu7D,WAAWI,KAAK,0BAA2BC,EAAWjiD,IACvDlc,GACHuC,KAAK28G,YAAYxiD,EAAO18D,GACjBuC,KAAK48G,8BAA8BziD,IAEpCA,GAPCzhE,QAAQ0B,OAAO80D,EAAIY,SAAS,GAAe,KAAsCj3D,IAQvFgD,GAASomE,EAAIrpE,OAAO6jH,GAAevjH,KAAK,IAAMR,QAAQ0B,OAAOyB,GAAQ,IAAMnD,QAAQ0B,OAAOyB,KAGvFkE,iBAAiB67D,EAAkCm8C,EAAiB8E,EAAqBC,EAAoB/0G,GACpH,OAAO/H,KAAKu4G,QAAQ38C,EAAYm8C,EAAS8E,EAAa90G,GACpD7O,KAAK,IAAM8G,KAAK26C,OAAOihB,EAAYihD,EAAaC,EAAY1lH,KAAKC,MAAQ,MACxE6B,KACA,IAAM8G,KAAKu7D,WAAWI,KAAK,aAAcmhD,GACzChkH,IACCkH,KAAKu7D,WAAWI,KAAK,kDAAmDkhD,GACjE56C,EAAIrpE,OAAOikH,GAAa/9F,QAAQ,QAAW5lB,KAAK,IAAMR,QAAQ0B,OAAOtB,OAIzEiH,QAAQ67D,EAAkCm8C,EAAiB8E,EAAqB90G,GAEvF,OADA/H,KAAKu7D,WAAW2V,MAAM,yCAAyC6mC,QAAc8E,KACtE56C,EAAIrpE,OAAOikH,GAChB3jH,KACA,IAAMu/G,EAAAF,QAAQR,EAAS8E,EAAa,CAAErE,WAAY,YAAav5E,WAAW;EAAQl3B,GAChF7O,KACA,IAAM8G,KAAKu7D,WAAWI,KAAK,0BAA0BkhD,KAAgBjhD,EAAWjiD,IAChF7gB,GAAKmpE,EAAIrpE,OAAOikH,GAAa/9F,QAAQ,QACnC5lB,KAAK,IAAMR,QAAQ0B,OAAO,IAAIs+G,EAAyB5/G,EAAEiG,QAASjG,aAAa2/G,EAAApC,cAAgBv9G,EAAE0Z,KAAO1Z,EAAE0Z,KA7bjF,iBA8b7B1Z,GAAKJ,QAAQ0B,OAAO,IAAIs+G,EAAyB14G,KAAKm8G,WAAWrjH,GAAGiG,QA5bzC,cA+btBgB,OAAO67D,EAAkCihD,EAAqBC,EAAoBC,GACzF,OAAO96C,EAAItnB,OAAOkiE,EAAaC,GAC7B5jH,UAAKa,EAAW8B,GACZgtB,EAAA/B,WAAajrB,GAAwB,UAAfA,EAAM5B,MAAoB7C,KAAKC,MAAQ0lH,GAChE/8G,KAAKu7D,WAAWI,KAAK,mBAAmBkhD,QAAkBC,wCAAkDlhD,EAAWjiD,IAChH3Z,KAAK26C,OAAOihB,EAAYihD,EAAaC,EAAYC,IAElDrkH,QAAQ0B,OAAO,IAAIs+G,EAAyB78G,EAAMkD,SAAWmwD,EAAIY,SAAS,GAAe,KAA2C+sD,EAAaC,GAAajhH,EAAM5B,MAvchJ,cA2ctB8F,2CAA2CkkF,EAA4Bq2B,GAC9E,GAAIt6G,KAAK64G,eAAetX,YAAa,CACpC,MAAMyb,EAA0C/4B,EAAUzqB,SAASqH,uBAAyB,GAC5F,GAAIojB,EAAUzqB,SAAS8lC,cACtB,IAAK,MAAMhmC,KAAa2qB,EAAUzqB,SAAS8lC,cAEpCgb,GAAYA,EAAS9gD,SAAS8lC,eAAiBgb,EAAS9gD,SAAS8lC,cAAcpzF,KAAK+wG,GAAOl5B,EAAAlkB,kBAAkB,CAAElmD,GAAIsjG,GAAO,CAAEtjG,GAAI2/C,MACjI0jD,EAA8BpvF,MAAM90B,IAAMirF,EAAAlkB,kBAAkB,CAAElmD,GAAI7gB,GAAK,CAAE6gB,GAAI2/C,MAChF0jD,EAA8B7lH,KAAKmiE,GAKvC,GAAI0jD,EAA8BxmH,OACjC,OAAOwJ,KAAK26D,eACVzhE,KAAK+qF;AAEL,MAAMud,EAAQwb,EAA8B30G,OAAOsR,GAAMsqE,EAAUr2D,MAAM,EAAGguC,WAAYshD,MAAyBn5B,EAAAlkB,kBAAkBq9C,EAAmB,CAAEvjG,GAAAA,MACxJ,GAAI6nF,EAAMhrG,OACT,OAAOwJ,KAAK64G,eAAethF,MAAM,CAAEiqE,MAAAA,EAAOjF,SAAUygB,EAA8BxmH,QAAUmoB,EAAAf,kBAAkBhJ,MAC5G1b,KAAKikH,IACL,MAAMC,EAAsBD,EAAc/a,UAC1C,OAAO1pG,QAAQgB,IAAI0jH,EAAoBzjH,IAAIb,GAAKkH,KAAKw6D,mBAAmB1hE,KACtEI,UAAKa,EAAWiZ,GAAUhT,KAAKq9G,SAASD,GAAqBlkH,KAAK,IAAMR,QAAQ0B,OAAO4Y,GAAS,IAAMta,QAAQ0B,OAAO4Y,SAO9H,OAAOta,QAAQyB,aAAQJ,GAGhBgG,SAAS66D,GAChB,OAAO56D,KAAK26D,aAAY,GACtBzhE,KAAK+qF,GACLvrF,QAAQgB,IAAIuqF,EAAU57E,OAAO8xD,GAASS,EAAW1uD,KAAKkyF,GAAoB,IAAIra,EAAAjkB,+BAA+B3F,EAAMyB,WAAYzB,EAAMX,SAASqC,SAAS/0D,OAAO,IAAIi9E,EAAAjkB,+BAA+Bs+B,EAAiBxiC,WAAYwiC,EAAiBviC,YAC7OliE,IAAIwgE,GAASn6D,KAAKy6D,UAAUN,GAAO,MACrCjhE,KAAK,SAAMa,EAAW,SAAMA,GAG/BgG,UAAUu5D,EAA4B4B,GAAQ,GAE7C,OADAl7D,KAAKu7D,WAAW2V,MAAM,uCAAwC5X,EAAUsC,WAAWjiD,IAC5E3Z,KAAK66G,wBAAwB76G,KAAK26D,aAAY,GACnDzhE,KAAK+qF,IACL,MAAMq5B,EAAuBr5B,EAAU57E,OAAOvP,GAAKirF,EAAAlkB,kBAAkB/mE,EAAE8iE,WAAYtC,EAAUsC,aAAa;CAC1G,OAAI0hD,EACIt9G,KAAKu9G,iCAAiCD,EAAsBr5B,GAAW/qF,UAAKa,EAAW8B,GAASnD,QAAQ0B,OAAO4F,KAAKm8G,WAAWtgH,KAE/HnD,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,GAAgB,KAAqCwJ,EAAUE,SAASylC,aAAe3lC,EAAUE,SAAStiE,WAK3J6I,eAAeo6D,EAAwB18D,GAGtC,OAFAuC,KAAKu7D,WAAW2V,MAAM,4CAA6C/W,EAAMyB,WAAWjiD,IACpFwgD,EAAM18D,SAAWA,EACVuC,KAAK48G,8BAA8BziD,GACxCjhE,KAAKskH,IACLx9G,KAAK25G,cAAc33C,aACZw7C,IAIFz9G,8BAA8Bo6D,GACrC,IAAKA,EAAM18D,SACV,OAAO/E,QAAQyB,QAAQggE,GAExB,MAAMsjD,EAAeplH,EAAKwB,KAAKsgE,EAAMthE,SAASwnC,OAAQ,gBACtD,OAAO4hC,EAAI/nE,SAASujH,EAAc,QAChCvkH,KAAKsnD,GAAOm4D,EAAcn4D,IAC1BtnD,KAAK,EAAGsgE,SAAAA,KAAehC,EAAA76C,OAAO68C,EAAU,CAAE81C,WAAYn1C,EAAM18D,YAC5DvE,KAAKsgE,GAAYyI,EAAI3nE,UAAUmjH,EAAcpiH,KAAKsD,UAAU66D,EAAU,KAAM,QAC5EtgE,KAAK,IAAMihE,GAGNp6D,YAAY++F,GACnB,OAAO9+F,KAAK09G,2BAA2B5e,GACrC5lG,KAAKklG,GAAoBA,EAAqC,CAAEzkF,GAAIykF,EAAiBxiC,WAAW/hB,KAAM8mB,qBAAsBy9B,EAAiBz9B,qBAAsBF,YAAa29B,EAAiB39B,aAAgB,MAG5M1gE,qBAAqBo6D;AAC5B,OAAIA,EAAMyB,WAAW/hB,KACb75C,KAAK29G,yBAAyBxjD,EAAMyB,WAAW/hB,MACpD3gD,KAAKklG,GAAoBA,GAAsCp+F,KAAK09G,2BAA2BvjD,EAAMyB,WAAWjiD,KAE5G3Z,KAAK09G,2BAA2BvjD,EAAMyB,WAAWjiD,IAGjD5Z,yBAAyB85C,GAChC,OAAO75C,KAAK64G,eAAethF,MAAM,CAAE0qE,IAAK,CAACpoD,GAAO0iD,SAAU,GAAK59E,EAAAf,kBAAkBhJ,MAAM1b,KAAKikH,GAAiBA,EAAc/a,UAAU,IAG9HriG,2BAA2B7I,GAClC,OAAO8I,KAAK64G,eAAethF,MAAM,CAAEiqE,MAAO,CAACtqG,GAAOqlG,SAAU,GAAK59E,EAAAf,kBAAkBhJ,MAAM1b,KAAKikH,GAAiBA,EAAc/a,UAAU,IAGhIriG,WAAW69G,GAClB,MAAM5qG,EAAStK,MAAMC,QAAQi1G,GAAiBA,EAAgB,CAACA,GAC/D,OAAsB,IAAlB5qG,EAAOxc,OACHwc,EAAO,aAAchU,MAAegU,EAAO,GAAK,IAAIhU,MAAcgU,EAAO,IAE1EA,EAAOjJ,OAAc,CAAC8zG,EAAsBC,IAC3C,IAAI9+G,MAAM,GAAG6+G,EAAc9+G,UAAU8+G,EAAc9+G,QAAU,IAAM,KAAK++G,aAAwB9+G,MAAQ8+G,EAAa/+G,QAAU++G,KACpI,IAAI9+G,MAAM,KAGNe,iCAAiCu5D,EAA4B2qB,GACpE,OAAOjkF,KAAK+9G,sBAAsBzkD,GAChCpgE,KAAK,KACL,MAAM8kH,EAAmBh+G,KAAKi+G,gCAAgC3kD,EAAW2qB,GACzE,OAAI+5B,EAAiBxnH,OACbwJ,KAAKk+G,oBAAoB5kD,EAAW0kD,EAAkB/5B,GAEvDjkF,KAAKk+G,oBAAoB5kD,EAAW,GAAI2qB,KAE/C/qF,KAAK,IAAM8G,KAAKm+G,uBAAuB7kD,GACvCz9D,IACCmE,KAAKm+G,uBAAuB7kD,EAAW,IAAIo/C,EAAyB78G,aAAiBmD,MAAQnD,EAAMkD,QAAUlD,EAnkBtF;AAokBhBnD,QAAQ0B,OAAOyB,KAIlBkE,oBAAoBu5D,EAA4B8kD,EAA+Cn6B,GACtG,MAAMo6B,EAAar+G,KAAKs+G,cAAchlD,EAAW2qB,GACjD,GAAIo6B,EAAW7nH,OAAQ,CACtB,MAAM+nH,EAAsBF,EAAWh2G,OAAOm2G,GAAallD,IAAcklD,IAAgE,IAAnDJ,EAA2Bz8G,QAAQ68G,IACzH,GAAID,EAAoB/nH,OACvB,OAAOkC,QAAQ0B,OAAO,IAAI4E,MAAMgB,KAAKy+G,0BAA0BnlD,EAAWilD,KAG5E,OAAO7lH,QAAQgB,IAAI,CAACsG,KAAK0+G,mBAAmBplD,MAAe8kD,EAA2BzkH,IAAIsD,GAAK+C,KAAK2+G,YAAY1hH,MAAM/D,KAAK,SAAMa,GAG1HgG,0BAA0Bu5D,EAA4B+kD,GAC7D,OAA0B,IAAtBA,EAAW7nH,OACP04D,EAAIY,SAAS,GAAwB,KAC3CwJ,EAAUE,SAASylC,aAAe3lC,EAAUE,SAAStiE,KAAMmnH,EAAW,GAAG7kD,SAASylC,aAAeof,EAAW,GAAG7kD,SAAStiE,MAEhG,IAAtBmnH,EAAW7nH,OACP04D,EAAIY,SAAS,GAAsB,KACzCwJ,EAAUE,SAASylC,aAAe3lC,EAAUE,SAAStiE,KAAMmnH,EAAW,GAAG7kD,SAASylC,aAAeof,EAAW,GAAG7kD,SAAStiE,KAAMmnH,EAAW,GAAG7kD,SAASylC,aAAeof,EAAW,GAAG7kD,SAAStiE,MAEtLg4D,EAAIY,SAAS,GAA2B,KAC9CwJ,EAAUE,SAASylC,aAAe3lC,EAAUE,SAAStiE,KAAMmnH,EAAW,GAAG7kD,SAASylC,aAAeof,EAAW,GAAG7kD,SAAStiE,KAAMmnH,EAAW,GAAG7kD,SAASylC,aAAeof,EAAW,GAAG7kD,SAAStiE,MAGrL6I,gCAAgCu5D,EAA4B2qB,EAA8B26B,EAA6B,IAC9H,IAAoC,IAAhCA,EAAQj9G,QAAQ23D,GACnB,MAAO,GAERslD,EAAQznH,KAAKmiE,GACb,MAAMulD,EAAiBvlD,EAAUE,SAAS8lC,cAAgBhmC,EAAUE,SAAS8lC,cAAgB,GAC7F,GAAIuf,EAAeroH,OAAQ,CAC1B,MAAMwnH,EAAmB/5B,EAAU57E,OAAO/R,GAAKuoH,EAAe3yG,KAAKyN,GAAMoqE,EAAAlkB,kBAAkB,CAAElmD,GAAAA;EAAMrjB,EAAEslE,cAC/FkjD,EAA4C,GAClD,IAAK,MAAMC,KAAmBf,EAC7Bc,EAAuB3nH,QAAQ6I,KAAKi+G,gCAAgCc,EAAiB96B,EAAW26B,IAEjG,MAAO,IAAIZ,KAAqBc,GAEjC,MAAO,GAGA/+G,cAAcu5D,EAA4B2qB,GACjD,OAAOA,EAAU57E,OAAOvP,GAAKA,EAAE0gE,SAASqH,uBAAyB/nE,EAAE0gE,SAASqH,sBAAsB30D,KAAKyN,GAAMoqE,EAAAlkB,kBAAkB,CAAElmD,GAAAA,GAAM2/C,EAAUsC,cAG1I77D,YAAYu5D,GACnB,OAAOt5D,KAAK+9G,sBAAsBzkD,GAChCpgE,KAAK,IAAM8G,KAAK0+G,mBAAmBplD,IACnCpgE,KAAK,IAAM8G,KAAKm+G,uBAAuB7kD,GACvCz9D,IACCmE,KAAKm+G,uBAAuB7kD,EAAW,IAAIo/C,EAAyB78G,aAAiBmD,MAAQnD,EAAMkD,QAAUlD,EA1nBtF,UA2nBhBnD,QAAQ0B,OAAOyB,KAIlBkE,sBAAsBu5D,GAC7B,OAAO5gE,QAAQyB,QAAQ8nE,EAAIzpE,OAAO8gE,EAAUzgE,SAASwnC,SACnDnnC,KAAKV,GAAUA,EAAS,KAAOE,QAAQ0B,OAAO,IAAI4E,MAAMkwD,EAAIY,SAAS,GAAa,SAClF52D,KAAK,KACL8G,KAAKu7D,WAAWI,KAAK,0BAA2BrC,EAAUsC,WAAWjiD,IACrE3Z,KAAKo5G,sBAAsBnhG,KAAKqhD,EAAUsC,cAIrC77D,mBAAmBo6D,GAC1B,IAAI//C,EAAUpa,KAAKi5G,uBAAuB/4G,IAAIi6D,EAAMyB,WAAWjiD,IAQ/D,OAPKS,IAEJA,EAAU6xB,EAAAxtB,wBAAwB1W,GAAS/H,KAAKg/G,oBAAmB,GACjE9lH,KAAK+lH,GAAkBj/G,KAAK67G,kBAAkBoD,EAAe52G,OAAO62G,GAAKn7B,EAAAlkB,kBAAkBq/C,EAAEtjD,WAAYzB,EAAMyB,eAC/G1iE,KAAK;AAAQ8G,KAAKi5G,uBAAuB34G,OAAO65D,EAAMyB,WAAWjiD,OACnE3Z,KAAKi5G,uBAAuB74G,IAAI+5D,EAAMyB,WAAWjiD,GAAIS,IAE/CA,EAGAra,6BAA6Bu5D,EAA4Bz9D,GAC5DA,EACHmE,KAAKu7D,WAAW1/D,MAAM,iCAAkCy9D,EAAUsC,WAAWjiD,GAAI9d,EAAMkD,UAEvFiB,KAAKu7D,WAAWI,KAAK,sCAAuCrC,EAAUsC,WAAWjiD,IAE7E2/C,EAAUsC,WAAW/hB,YAClB75C,KAAK64G,eAAesG,gBAAgB7lD,EAAUE,SAAS0G,UAAW5G,EAAUE,SAAStiE,KAAMoiE,EAAUE,SAASqC,QAAO,cAG7H77D,KAAKk7G,gBAAgB,6BAA8Bn3B,EAAAxjB,+BAA+BjH,QAAYv/D,EAAW8B,GACzG,MAAMujH,EAAYvjH,EAAQA,aAAiB68G,EAA2B78G,EAAM5B,KA3pBxD,eA2pB+EF,EACnGiG,KAAKq5G,yBAAyBphG,KAAK,CAAE2jD,WAAYtC,EAAUsC,WAAY//D,MAAOujH,IAG/Er/G,aAAayS,EAA6B,MACzC,MAAM6sG,EAAyC,GAU/C,OARa,OAAT7sG,GAAqB,IAAJA,GACpB6sG,EAASloH,KAAK6I,KAAKs/G,uBAAuBpmH,KAAK,KAAMJ,GAAKJ,QAAQ0B,OAAO,IAAIs+G,EAAyB14G,KAAKm8G,WAAWrjH,GAAGiG,QA5qBtF,qBA+qBvB,OAATyT,GAAqB,IAAJA,GACpB6sG,EAASloH,KAAK6I,KAAKg/G,oBAAmB,GAAM9lH,KAAK,KAAMJ,GAAKJ,QAAQ0B,OAAO,IAAIs+G,EAAyB14G,KAAKm8G,WAAWrjH,GAAGiG,QA/qBvF,mBAkrB9BrG,QAAQgB,IAAuB2lH,GAAUnmH,KAAKysD,EAAAn8C,QAASwJ,GAAUta,QAAQ0B,OAAO4F,KAAKm8G,WAAWnpG;AAGhGjT,uBACPC,KAAKu7D,WAAW2V,MAAM,sCACtB,MAAMquC,EAA0B7mH,QAAQgB,IAAI,CAC3CsG,KAAK6yG,eAAe7yG,KAAKw5G,qBAAoB,MAC1Cx5G,KAAKs7D,mBAAmBqmB,2BACzBhoF,IAAKtB,GAAS2H,KAAK6yG,eAAex6G,EAAI,MACtCa,KAAMqoB,IACR,MAAMlrB,EAASkrB,EAAQxX,OAAO,CAAC29F,EAAMv6F,IAAYu6F,EAAKj+F,OAAO0D,GAAU,IAEvE,OADAnN,KAAKu7D,WAAW2V,MAAM,6BAA8B76E,EAAOG,QACpDH,IAER,GAAI2J,KAAKs7D,mBAAmBykB,QAC3B,OAAOw/B,EAIR,MAAMC,EAA6Bx/G,KAAKy/G,6BACtCvmH,KAAKwmH,GACDA,EAAwBlpH,OACpBwJ,KAAK6yG,eAAe7yG,KAAK2/G,wBAAuB,GACrDzmH,KAAK7C,IACL2J,KAAKu7D,WAAW2V,MAAM,iCAAkC76E,EAAOG,QACxDH,EAAOgS,OAAO2B,GAAK01G,EAAwBxzG,KAAKyN,GAAMoqE,EAAAlkB,kBAAkB71D,EAAE4xD,WAAY,CAAEjiD,GAAAA,QAG1F,IAGV,OAAOjhB,QAAQgB,IAAI,CAAC6lH,EAAyBC,IAC3CtmH,KAAK,EAAE0mH,EAAkBC,KAAyB,IAAID,KAAqBC,IAGtE9/G,sBAAsBw8G,EAAoB/pG,GACjD,OAAO9Z,QAAQgB,IAAI,CAClBsG,KAAK6yG,eAAe0J,EAAY/pG,MAC7BxS,KAAKs7D,mBAAmBomB,oBAAoB/nF,IAAK8K,GAAMzE,KAAK6yG,eAAepuG,EAAC,MAC7EvL,KAAMqoB,GAAYA,EAAQxX,OAAO,CAAC29F,EAAMv6F,IAAYu6F,EAAKj+F,OAAO0D,GAAU,KAGtEpN,mBAAmB+/G,GAE1B,OADA9/G,KAAKu7D,WAAW2V,MAAM;AACfx4E,QAAQgB,IAAI,CAACsG,KAAK+/G,2BAA4B//G,KAAKggH,sBAAsBhgH,KAAKwhF,eAAc,KACjGtoF,KAAK,EAAE+mH,EAAarlD,MAEpB,GADAA,EAAaA,EAAWvyD,OAAOvP,IAAMmnH,EAAY,IAAIl8B,EAAAjkB,+BAA+BhnE,EAAE8iE,WAAY9iE,EAAE0gE,SAASqC,SAASp9D,QAClHqhH,EAAiB,CAEpBllD,EADyCmpB,EAAA5jB,iBAAiBvF,EAAY9hE,GAAKA,EAAE8iE,YACpDjiE,IAAI8K,GAAKA,EAAEmD,KAAK,CAAC1C,EAAGgC,IAAMqqG,EAAOqB,SAAS1tG,EAAEs0D,SAASqC,QAAS30D,EAAEsyD,SAASqC,UAAU,IAG7G,OADA77D,KAAKu7D,WAAW2V,MAAM,2BAA4BtW,EAAWpkE,QACtDokE,IAIF76D,eAAe4T,EAAcnB,GACpC,MAAM0tG,EAAU,IAAIj0E,EAAAtqB,QAAa,IACjC,OAAOsgD,EAAI1oE,QAAQoa,GACjBvW,MAAOvB,IACP,GAAmB,WAAfA,EAAM5B,KACT,MAAM4B,EAEP,MAAiB,KAEjB3C,KAAKinH,GAAqBznH,QAAQgB,IAAqBymH,EAAkBxmH,IAAIymH,GAAmBF,EAAQpgG,MAAM,IAAM9f,KAAK0yG,cAAc0N,EAAiBzsG,EAAMnB,OAC9JtZ,KAAK0hE,GAAcA,EAAWvyD,OAAOvP,GAAKA,GAAKA,EAAE8iE,aAG5C77D,cAAcw8G,EAAoB5oG,EAAcnB,GACvD,GAAQ,IAAJA,GAA2D,IAA5B+pG,EAAW56G,QAAQ,KACrD,OAAOjJ,QAAQyB,QAAQ,MAExB,MAAMsiH,EAAgBpkH,EAAKwB,KAAK8Z,EAAM4oG,GACtC,OAAOt6C,EAAI1oE,QAAQkjH,GACjBvjH,KAAKO,IAhuBT,SAAsBgjH,GACrB,MAAM4C,EAAW,CAChBp9C,EAAI/nE,SAAS7B,EAAKwB,KAAK4iH,EAAe,gBAAiB,QACrDvjH,KAAKsnD,GAAOm4D,EAAcn4D,IAC5ByhB,EAAI/nE,SAAS7B,EAAKwB,KAAK4iH,EAAe,oBAAqB,QACzDvjH,UAAKa,EAAWf,GAAoB,WAAbA,EAAIiB,KAAoBvB,QAAQ0B,OAAepB,GAAO,MAC7EE,KAAKsnD,GAAOnlD,KAAKC,MAAMklD,KAG1B,OAAO9nD,QAAQgB,IAAI2lH,GAAUnmH,KAAK,GAAIsgE,SAAAA,EAAU/7D,SAAAA,GAAYvB,MACpD;AACNs9D,SAAU6mD,EAAAjlD,iBAAiB5B,EAAUt9D,GACrCuB,SAAAA,MAotBkB6iH,CAAa7D,GAC7BvjH,KAAK,EAAGsgE,SAAAA,EAAU/7D,SAAAA,MAClB,MAAM8gG,EAAS9kG,EAAS4O,OAAOzO,GAAS,yBAAyB2uB,KAAK3uB,IAAQ,GACxE2mH,EAAYhiB,EAAS76D,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAK4iH,EAAele,IAAW,KAClEC,EAAY/kG,EAAS4O,OAAOzO,GAAS,4BAA4B2uB,KAAK3uB,IAAQ,GAC9E4mH,EAAehiB,EAAY96D,EAAA9D,IAAInnC,KAAKJ,EAAKwB,KAAK4iH,EAAeje,IAAc,KAC3E5iC,EAAa,CAAEjiD,GAAIoqE,EAAA9jB,sBAAsBzG,EAAS0G,UAAW1G,EAAStiE,OACtEijE,EAAyB,CAAE3nD,KAAAA,EAAMopD,WAAAA,EAAYpC,SAAAA,EAAU/7D,SAAAA,EAAU5E,SAAU6qC,EAAA9D,IAAInnC,KAAKgkH,GAAgB8D,UAAAA,EAAWC,aAAAA,GAIrH,OAHI/iH,GACHuC,KAAK28G,YAAYxiD,EAAO18D,GAElB08D,KAERjhE,UAAKa,EAAW,IAAM,MAGjBgG,YAAYo6D,EAAwB18D,GAC3C08D,EAAM18D,SAAWA,EACjB08D,EAAMyB,WAAW/hB,KAAOp8C,EAASkc,GAGlC5Z,yCACOC,KAAKygH,oCACLzgH,KAAK0gH,2BAGJ3gH,oCACP,MAAMkgH,QAAoBjgH,KAAK+/G,2BACzBnlD,QAAmB56D,KAAKggH,sBAAsBhgH,KAAKwhF,eAAc,GACjEyC,EAAyB,IAAI9jF,IACnC,IAAK,MAAMrH,KAAK8hE,EACVqlD,EAAY,IAAIl8B,EAAAjkB,+BAA+BhnE,EAAE8iE,WAAY9iE,EAAE0gE,SAASqC,SAASp9D,QACrFwlF,EAAU5jF,IAAIvH,EAAE8iE,WAAWjiD,GAAGmR,eAGhC,MAAMu1C,EAAmC0jB,EAAA5jB,iBAAiBvF,EAAY9hE,GAAKA,EAAE8iE,kBACvEljE,QAAQgB,IAAI2mE,EAAY1mE,IAAI0qB,MAAMvrB;AACvC,MAAMkN,EAASlN,EAAE8O,KAAK,CAAC1C,EAAGgC,IAAMqqG,EAAOqB,SAAS1tG,EAAEs0D,SAASqC,QAAS30D,EAAEsyD,SAASqC,UAAU,GACpFooB,EAAU/6E,IAAIlD,EAAO41D,WAAWjiD,GAAGmR,sBACjC9qB,KAAK65G,mBAAmB8G,cAAc36G,MAG9C,MAAM46G,EAA8BhmD,EAAWvyD,OAAOvP,GAAKmnH,EAAY,IAAIl8B,EAAAjkB,+BAA+BhnE,EAAE8iE,WAAY9iE,EAAE0gE,SAASqC,SAASp9D,cACtI/F,QAAQgB,IAAIknH,EAASjnH,IAAIb,GAAKkH,KAAKk8G,2BAA2BpjH,KAG7DiH,2BACP,OAAOC,KAAKggH,sBAAsBhgH,KAAKwhF,eAAc,GACnDtoF,KAAK0hE,IACL,MAAMgmD,EAA8B,GAG9BvgD,EAAmC0jB,EAAA5jB,iBAAiBvF,EAAY9hE,GAAKA,EAAE8iE,YAG7E,OAFAglD,EAASzpH,QAAQwuD,EAAAn8C,QAAQ62D,EAAY1mE,IAAI8K,GAAKA,EAAEmD,KAAK,CAAC1C,EAAGgC,IAAMqqG,EAAOqB,SAAS1tG,EAAEs0D,SAASqC,QAAS30D,EAAEsyD,SAASqC,UAAU3jE,MAAM,MAEvHQ,QAAQgB,IAAIknH,EAASjnH,IAAI2/D,GAAat5D,KAAKu6G,gBAAgBjhD,EAAW,gBAC3EpgE,KAAK,SAAMa,GAGRgG,2BAA2Bu5D,GAClC,OAAOt5D,KAAKu6G,gBAAgBjhD,EAAW,eACrCpgE,KAAK,IAAM8G,KAAK6gH,0BAA0BZ,UAAsBA,EAAY,IAAIl8B,EAAAjkB,+BAA+BxG,EAAUsC,WAAYtC,EAAUE,SAASqC,SAASp9D,SACjKvF,KAAK,SAAMa,GAGNgG,gBAAgBu5D,EAA4B9mD,GAEnD,OADAxS,KAAKu7D,WAAW2V,MAAM,YAAY1+D,wBAA4B8mD,EAAUsC,WAAWjiD,GAAI2/C,EAAUzgE,SAASwnC;AACnG4hC,EAAIrpE,OAAO0gE,EAAUzgE,SAASwnC,QAAQnnC,KAAK,IAAM8G,KAAKu7D,WAAWI,KAAK,oBAAqBrC,EAAUsC,WAAWjiD,GAAI2/C,EAAUzgE,SAASwnC,SAGvItgC,cAAc67D,GACrB,OAAO57D,KAAK8gH,kBAAkBllD,GAAY1iE,KAAK+mH,GAAsC,IAAvBA,EAAYzpH,QAGnEuJ,qBAAqB4qF,GAC5B,OAAO3qF,KAAK6gH,0BAA0BE,IACrC,MAAMd,EAAwB,GAC9B,IAAK,MAAMrkD,KAAc+uB,EAClBo2B,EAAenlD,EAAWn9D,QAC/BwhH,EAAY9oH,KAAKykE,EAAWn9D,OAG9B,OAAOwhH,IAIDlgH,kBAAkB66D,GACzB,MAAMqnC,EAAwCrnC,EAAWjhE,IAAIb,GAAK,IAAIirF,EAAAjkB,+BAA+BhnE,EAAE8iE,WAAY9iE,EAAE0gE,SAASqC,UAC9H,OAAO77D,KAAK6gH,0BAA0BZ,GAAezoD,EAAA76C,OAAOsjG,EAAahe,EAAIl4F,OAAO,CAAC1T,EAAQsjB,KAAStjB,EAAOsjB,EAAGlb,QAAS,EAAapI,GAAW,MAG1I0J,iBAAiBikF,GACxB,OAAOhkF,KAAK6gH,0BAAgCZ,UAAsBA,EAAYj8B,EAAoBvlF,QAG3FsB,2BACP,OAAOC,KAAK6gH,0BAA0BZ,GAAeA,GAG9ClgH,gCAAmCQ,GAC1C,aAAaP,KAAK05G,uBAAuB55F,MAAM,KAC9C,IAAIzpB,EAAmB,KACvB,OAAO4rE,EAAI/nE,SAAS8F,KAAKy5G,gBAAiB,QACxCvgH,UAAKa,EAAWf,GAAoB,WAAbA,EAAIiB,KAAoBvB,QAAQyB,QAAQ,MAAQzB,QAAQ0B,OAAOpB,IACtFE,KAAgCsnD,IAAS,IAAM,OAAOnlD,KAAKC,MAAMklD,GAAQ,MAAO1nD,GAAK,MAAO,MAC5FI,KAAK+mH,IAAiB5pH,EAASkK,EAAG0/G,GAAqBA,IACvD/mH,KAAK+mH;AACL,GAAwC,IAApCpiH,OAAOC,KAAKmiH,GAAazpH,OAC5B,OAAOyrE,EAAIrpE,OAAOoH,KAAKy5G,iBACjB,CACN,MAAMj5D,EAAMnlD,KAAKsD,UAAUshH,GAC3B,OAAOh+C,EAAI3nE,UAAU0F,KAAKy5G,gBAAiBj5D,MAG5CtnD,KAAK,IAAM7C,KAIf0J,sBACC,MAAM1I,GAAM,IAAID,MAAO8hB,UAOvB,QALKlZ,KAAKghH,oBAAsB3pH,EAAM2I,KAAK+4G,oBAAsB,OAChE/4G,KAAKghH,mBAAqBhhH,KAAKihH,oBAC/BjhH,KAAK+4G,oBAAsB1hH,GAGrB2I,KAAKghH,mBAGLjhH,oBAGP,OAFAC,KAAKu7D,WAAW2V,MAAM,mDAEflxE,KAAK64G,eAAe/9C,sBACzB5hE,KAAK7C,IACL2J,KAAKu7D,WAAW2V,MAAM,yDAAyD76E,EAAOG,2CAC/EH,GACL2C,IACFgH,KAAKu7D,WAAW2V,MAAM,oFACf,KAKVyuC,8BAIC,OAHK3/G,KAAKs5G,2BACTt5G,KAAKs5G,yBAA2BjhH,EAAKmzB,UAAUnzB,EAAKwB,KAAKkgD,EAAAnW,qBAAqB+T,EAAS,IAAK,KAAM,SAAU,uBAEtG33C,KAAKs5G,yBAIb4H;AAIC,OAHKlhH,KAAKu5G,+BACTv5G,KAAKu5G,6BAA+BlhH,EAAKmzB,UAAUnzB,EAAKwB,KAAKkgD,EAAAnW,qBAAqB+T,EAAS,IAAK,KAAM,QAAS,4BAEzG33C,KAAKu5G,6BAGLx5G,6BACP,OAAOkiE,EAAI/nE,SAAS8F,KAAKkhH,4BAA6B,QACpDhoH,KAAKmB,GAAQ0pF,EAAAziB,uBAAuBjnE,EAAM2F,KAAK2/F,eAAerc,SAAS3pF,IAAI6wB,GAAOA,EAAItzB,OAGjF6I,wBAA2Bqa,GAClC,OAAO,IAAI1hB,QAAQ,CAACC,EAAGG,IAAMshB,EAAQlhB,KAAK7C,GAAUsC,EAAEtC,GAASwF,GAAS/C,EAAE+C,KAGnEkE,gBAAgB2Z,EAAmBynG,EAAoB7d,EAAmBznG,GACjF,MAAMujH,EAAYvjH,EAAQA,aAAiB68G,EAA2B78G,EAAM5B,KA75BxD,eA65B+EF,EAgCnGiG,KAAKs5F,iBAAiBiK,UAAU7pF,EAAW89C,EAAA76C,OAAOwkG,EAAe,CAAE1sD,SAAU54D,EAAOynG,SAAAA,EAAU8b,UAAAA,OAEhG,OAn5BaxG,EAA0B/xC,EAAA,CA4BpCC,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAAqd,EAAAhd,0BACAL,EAAA,EAAAgT,EAAAhI,aACAhL,EAAA,EAAAV,EAAAT,SAASy7C,EAAAj7C,mBACTW,EAAA,EAAAq9B,EAAAvJ,mBACA9zB,EAAA,EAAAs9B,EAAAnf,kBAjCU2zB,IAAb,GAAah6G,EAAAg6G,2BAAAA;CC3Fb,MAAMyI,EAAeC,EAAM/I,QACrBgJ,EAAcD,EAAMloG,OAiBbxa,EAAA4iH,IAAMn9F,MAAOo9F,EAAiBjoH,KAC1C,MAAMkoH,EAAOC,EAAUD,OACjBlzF,EAAmB,GACnBT,EAAQ,IAAIr1B,QAAiByB,IAClCunH,EAAK7nG,GAAG,MAAO,IAAM1f,EAAQm+B,OAAO7uB,OAAO+kB,OAE5CkzF,EAAK7nG,GAAG,OAAS4U,GAAkBD,EAAOr3B,KAAKs3B,IAC/C,IAAK,IAAIn4B,EAAI,EAAGA,EAAIkD,EAAMhD,OAAQF,IAAK,CACtC,MAAMmC,EAAOe,EAAMlD,GACnBorH,EAAK79E,MAAM,CAAE3sC,KAAMuB,EAAKJ,MAAQI,EAAKkF,UAItC,OAFA+jH,EAAKE,iBACC/V,EAAK9wD,UAAUziD,EAAGgC,UAAlBuxG,CAA6B4V,QAAe1zF,GAC3C0zF,GAGK7iH,EAAA25G,QAAUl0F,MAAOw9F,EAAqBhF,EAAqB1sG,EAA2B,GAAIpI,KACtG,UACO+5G,EAAWD,EAAahF,EAAa1sG,EAASpI,GACnD,MAAOlM,GACJA,EAAM8e,WAAWonG,SAAS,6BACvBV,EAAaQ,EAAahF,EAAa1sG,EAASpI,KAK5CnJ,EAAAwa,OAAS,CAACs9F,EAAoB/7B,IACnC,IAAIjiF,QAAgB2rB,MAAOlqB,EAASC,KAC1C,IACC,IAAIwR,GAAgB,EAOpB,SANMo2G,EAActL,EAAY,IAAIjjF,OAAOknD,GAAW,CAACsnC,EAAmB5nH,KACrEhC,EAAKmzB,UAAUy2F,KAAe5pH,EAAKmzB,UAAUmvD,KAChD/uE,GAAO,EACPzR,EAAQE,OAGLuR,EACJ,MAAM,IAAI5M,MAAM,uBAA0B27E,GAE1C,MAAO9+E,GACJA,EAAM8e,WAAWonG,SAAS,sBAC7BR,EAAY7K,EAAY/7B,GAAUzhF,KAAKiB,GAASiD,MAAMhD,GAEtDA,EAAOyB,MAMX,MAAMmmH,EAAgB39F,MAAOo9F,EAAiBnvF,EAAe9yB,IACrD,IAAI9G,QAAc,CAACyB,EAASC,KAClC,MAAM8nH,EAAYP,EAAUpJ,UACtB4J,EAAQtmH,IACbqmH,EAAUv0F,UACVvzB,EAAOyB,IAERqmH,EAAU52G,KAAK,QAAS62G,GACxBD,EAAUroG,GAAG,QAASwK,MAAOy+B,EAAQ/zB,EAAQ9iB,KAC5C,MAAM/U,EAAO4rD,EAAO5rD,KAChBo7B,EAAM/J,KAAKrxB,GACdkrH,EAAYrzF,GAAQ71B,KAAMmB,IACzBmF,EAAStI,EAAMmD,GACf4R,MACE7O,MAAM+kH,IAETpzF,EAAOlV,GAAG,MAAO,IAAM5N,KACvB8iB,EAAOrB,YAGTw0F,EAAUroG,GAAG,SAAU1f,GACvB7B,EAAGylD,iBAAiB0jE,GAASrjE,KAAK8jE,KAI9BE,EAAerzF,GACb,IAAIr2B,QAAQ,CAACyB,EAASC,KAC5B,MAAMioH,EAAqB,GAC3BtzF,EAAOlV,GAAG,QAASzf;AACnB20B,EAAOlV,GAAG,MAAO,IAAM1f,EAAQm+B,OAAO7uB,OAAO44G,KAC7CtzF,EAAOlV,GAAG,OAASxf,GAASgoH,EAASlrH,KAAKkD,MAItCynH,EAAaz9F,MAAOo9F,EAAiB/K,EAAoBvmG,EAA2B,GAAIpI,IACtF,IAAIrP,QAAc,CAACyB,EAASC,KAClC,MAAM28G,EAAkB,IAAItjF,OAAOtjB,EAAQqoG,WAAa,IAAIroG,EAAQqoG,aAAe,IAC7E0J,EAAYP,EAAUpJ,UACtB4J,EAAQtmH,IACbqmH,EAAUv0F,UACVvzB,EAAOyB,IAERqmH,EAAU52G,KAAK,QAAS62G,GACxBD,EAAUroG,GAAG,QAASwK,MAAOy+B,EAAQ/zB,EAAQ9iB,KAC5C,MAAMq2G,EAAY,KACjBvzF,EAAOlV,GAAG,MAAO,IAAM5N,KACvB8iB,EAAOrB,UAGF60F,EAAUlqH,EAAKmzB,UAAUs3B,EAAO5rD,MACtC,GAAI6Q,EAAMG,0BAA4B6uG,EAAgBxuF,KAAKg6F,GAC1D,OAAOD,IAGR,MAAMtL,EAAWuL,EAAQ7jH,QAAQq4G,EAAiB,IAC5CE,EAAiB5+G,EAAKwB,KAAK68G,EAAYM,GAC7C,GAAI,MAAMzuF,KAAKyuF,GACd,OAAO33D,EAAA9hD,OAAO05G,GAAgB/9G,KAAKopH,GAGpC,MAAMpY,EAAU7xG,EAAK80B,QAAQ6pF,GACvBM,EAAgBj/G,EAAKwB,KAAK68G,EAAYxM,GAC5C,GAA0C,IAAtCoN,EAAc31G,QAAQ+0G,GACzB,OAAOyL,EAAK,IAAInjH,MAAMkwD,EAAIY,SAAS,EAAgB,KAAuCknD,WAGrF33D,EAAA9hD,OAAO+5G,OAAev9G,GAE5B,MAAMyoH,EAAUlqH,EAAG2lD,kBAAkBg5D,EAAgB,CAAE98D,KAAM2I,EAAO3I,OACpEqoE,EAAQl3G,KAAK,QAAS,IAAMW,KAC5Bu2G,EAAQl3G,KAAK,QAAS62G,GACtBpzF,EAAOqvB,KAAKokE,KAEbN,EAAU52G,KAAK,SAAUnR,GACzB7B,EAAGylD,iBAAiB0jE,GAASrjE,KAAK8jE,KAQvBtjH,EAAA6jH,wBAA0B,KAChCvjC,EAAArtB,QAAS+tC,kBAAiB/hG,OAAA8e,OAAA,CAC/BmjF,WAAY/kG,QAAQC,IAAI0nH,aAAe,mCACvCC,QAAS5nH,QAAQC,IAAI4nH,UAAY,GACjC5iB,WAAY,GACZ6iB,mBAAoB,IAChB3jC,EAAArtB,QAAQ+tC,mBAAqB,IAGlC,MAAM/nG,EAASypH,EACfzpH,EAAOuiE,IAAMx7D,EAAA4iH,IACb3pH,EAAO0gH,QAAU35G,EAAA25G,QACjB1gH,EAAOuhB,OAASxa,EAAAwa;oLCxIjB,IAAA0pG,EAAA,MAAA,IAAaA,EAAb,cAAoCjqG,EAAAlE,WAQnC5U,YACwB4rF,EACOpwB,GAE9Bj3D,QAF8BtE,KAAAu7D,WAAAA,EAG9Bv7D,KAAK+iH,UAAUp3B,EAAqBnb,YACpCxwE,KAAK8nD,UAAU6jC,EAAqBwH,yBAAyB,IAAMnzF,KAAK+iH,UAAUp3B,EAAqBnb,YAAaxwE,OAG7GD,UAAUtE,GACjBuE,KAAKw1F,SAAW/5F,EAAOoyC,MAAQpyC,EAAOoyC,KAAKm1E,MAC3ChjH,KAAKk2F,aAAez6F,EAAOoyC,OAAQpyC,EAAOoyC,KAAKo1E,gBAC/CjjH,KAAKkjH,cAAgBznH,EAAOoyC,MAAQpyC,EAAOoyC,KAAKs1E,mBAGjDpjH,cAAcoQ,EAA6BpI,GAC1C/H,KAAKu7D,WAAW2V,MAAM,yBAA0B/gE,EAAQ2yF,KAExD,MAAMtN,SAAEA,EAAQU,UAAEA,GAAcl2F,KAC1BojH,EAAQjzG,EAAQizG,MAAQjzG,EAAQizG,YAAcC,EAAAluB,cAAchlF,EAAQ2yF,KAAO,GAAI,CAAEtN,SAAAA,EAAUU,UAAAA,IASjG,OAPA/lF,EAAQizG,MAAQA,EAChBjzG,EAAQ+lF,UAAYA,EAEhBl2F,KAAKkjH,gBACR/yG,EAAQ8kF,QAAUz9B,EAAA76C,OAAOxM,EAAQ8kF,SAAW,GAAI,CAAEquB,sBAAuBtjH,KAAKkjH,iBAGxEljH,KAAKujH,SAASpzG,EAASpI,GAGvBhI,qBAAqBoQ,GAG5B,OADqC,WADpBmlF,EAAAh6F,MAAS6U,EAAQ2yF,KACV/gD,eAAwB,IAAArpD,QAAA,CAAA2gD,EAAAC,KAAA3B,EAAA,CAAa,SAAO0B,EAAAC,WAAI,IAAA5gD,QAAA,CAAAy9F,EAAAC,KAAAz+C,EAAA,CAAa,QAAMw+C,EAAAC;IAC7EhzC,QAGPrjD,SAASoQ,EAA6BpI,GAE7C,OAAO,IAAIrP,QAAyB2rB,MAAO1rB,EAAGG,KAC7C,IAAI06G,EAEJ,MAAMgQ,EAAWluB,EAAAh6F,MAAS6U,EAAQ2yF,KAC5B2gB,EAAatzG,EAAQuzG,cACxBvzG,EAAQuzG,cAAcvzG,SAChBnQ,KAAK2jH,eAAexzG,GAEvBosD,EAA6B,CAClCw5B,SAAUytB,EAASztB,SACnB9mD,KAAMu0E,EAASv0E,KAAOzc,SAASgxF,EAASv0E,MAA+B,WAAtBu0E,EAASzhE,SAAwB,IAAM,GACxFA,SAAUyhE,EAASzhE,SACnB1pD,KAAMmrH,EAASnrH,KACf0lC,OAAQ5tB,EAAQqC,MAAQ,MACxByiF,QAAS9kF,EAAQ8kF,QACjBmuB,MAAOjzG,EAAQizG,MACfntB,oBAAoBt3D,EAAAnC,UAAUrsB,EAAQ+lF,YAAa/lF,EAAQ+lF,WAGxD/lF,EAAQkgF,MAAQlgF,EAAQyzG,WAC3BrnD,EAAKy5B,KAAO7lF,EAAQkgF,KAAO,IAAMlgF,EAAQyzG,WAG1CpQ,EAAMiQ,EAAWlnD,EAAOnlD,IACvB,MAAMysG,EAA0BllF,EAAApC,SAASpsB,EAAQ0zG,iBAAmB1zG,EAAQ0zG,gBAAkB,EAC9F,GAAIzsG,EAAI68E,YAAc78E,EAAI68E,YAAc,KAAO78E,EAAI68E,WAAa,KAAO4vB,EAAkB,GAAKzsG,EAAI69E,QAAkB,SACnHj1F,KAAKujH,SAAS/rD,EAAA76C,OAAO,GAAIxM,EAAS,CACjC2yF,IAAK1rF,EAAI69E,QAAkB,SAC3B4uB,gBAAiBA,EAAkB,IAChC97G,GAAO7O,KAAKP,EAAGG,OACb,CACN,IAAIi2B,EAA6C3X,EAET,SAApCA,EAAI69E,QAAQ,sBACflmE,EAAS3X,EAAIgnC,KAAK0lE,EAAAC,iBAGnBprH,EAAE,CAAEye,IAAAA,EAAK2X,OAAQwyB,EAAAlnB,6BAA6BtL,SAI5ClV,GAAG,QAAS/gB,GAEZqX,EAAQgP,SACXq0F,EAAIpxG,WAAW+N,EAAQgP,SAGpBhP,EAAQ9V,MACiB,iBAAjB8V,EAAQ9V,MAClBm5G,EAAIplF,MAAMje,EAAQ9V,MAIpBm5G,EAAItmG,MAEJnF,EAAMiW,wBAAwB,KAC7Bw1F,EAAIwQ,QACJlrH,EAAEqP,EAAAvE,gBAKL7D,mBAAmB+iG;CAGpB,OAhHaggB,EAAcj8C,EAAA,CASxBC,EAAA,EAAA4lB,EAAAzC,uBACAnjB,EAAA,EAAAgT,EAAAhI,cAVUgxC,IAAb,GAAalkH,EAAAkkH,eAAAA,kWCab,MACMmB,EAAgBtqG,GAAek2C,EAAAC,SAAS,EAAgB,KAAqCn2C,GAC7FuqG,EAAQr0D,EAAAC,SAAS,EAAS,KAA+E,oBAE/G,SAASq0D,EAAM3qD,EAA8B4qD,GAC5C,OAAIA,EACI,GAAG5qD,EAAS0G,aAAa1G,EAAStiE,QAAQsiE,EAASqC,UAEnD,GAAGrC,EAAS0G,aAAa1G,EAAStiE,OAI3C,MAAMmtH,EAAqB,sCAE3B,SAAgBC,EAAgB3qG,GAC/B,MAAM9G,EAAUwxG,EAAmBzwF,KAAKja,GACxC,OAAI9G,GAAWA,EAAQ,GACf,CAACkxE,EAAAhkB,0BAA0BltD,EAAQ,IAAKA,EAAQ,IAEjD,CAACkxE,EAAAhkB,0BAA0BpmD,QAAK5f,GALxC6E,EAAA0lH,gBAAAA,EASA,IAAAC,EAAA,MAAA,IAAaA,EAAb,MAECxkH,YACyCykH,EACFlpD,EACQkoB,EACHihC,GAHHzkH,KAAAwkH,qBAAAA,EACFxkH,KAAAs7D,mBAAAA,EACQt7D,KAAAwjF,2BAAAA,EACHxjF,KAAAykH,wBAAAA,EAG5C1kH,UAAU2kH;AACLA,EAAK,wBACF1kH,KAAK2kH,iBAAiBD,EAAK,mBACvBA,EAAK,yBACT1kH,KAAK4kH,iBAAiBF,EAAK,iBAAkBA,EAAe,UACxDA,EAAK,2BACT1kH,KAAK6kH,kBAAkBH,EAAK,uBAAwBA,EAAY,OAC5DA,EAAK,6BACT1kH,KAAK0+G,mBAAmBgG,EAAK,wBACzBA,EAAK,0BACT1kH,KAAK8kH,gBAAgBJ,EAAK,qBACtBA,EAAgB,WAC1B5tH,QAAQie,IAAIgwG,EAAAhb,sBAAsB/pG,KAAKs7D,mBAAmBskB,QAAS5/E,KAAKs7D,mBAAmBkmB,eAAiBxhF,KAAKs7D,mBAAmBkmB,oBAAiBznF,IAI/IgG,iBAAiBilH,GACxB,OAAO3lE,EAAA/kD,UAAU0F,KAAKs7D,mBAAmB8lB,kBAAmB4jC,EAAc9sH,MAAM,EAAG,KAG5E6H,qBAAqBklH,EAAuBtjB,GACnD,IAAI/mC,QAAmB56D,KAAKwjF,2BAA2B7oB,aAAY,GAEnE,MAAMuqD,EAAa,CAAC,0BAA2B,WAAY,UAAW,SAAU,YAAa,aAAc,UAAW,kBAAmB,QAAS,oBAAqB,oBACvK,GAAIvjB,GAAyB,KAAbA,EAAiB;AAChC,GAAIujB,EAAWvjH,QAAQggG,EAAS72E,eAAiB,EAEhD,YADAh0B,QAAQie,IAAI,wHAGb6lD,EAAaA,EAAWvyD,OAAOvP,IAC9B,GAAIA,EAAE0gE,SAAS0rD,WAAY,CAE1B,OADsCpsH,EAAE0gE,SAAS0rD,WAAWvrH,IAAIhB,GAAKA,EAAEmyB,eAC5CnpB,QAAQggG,EAAS72E,gBAAkB,EAE/D,OAAO,SAEF,GAAiB,KAAb62E,EAKV,OAJA7qG,QAAQie,IAAI,8BACZmwG,EAAW3lH,QAAQoiG,IAClB7qG,QAAQie,IAAI4sF,KAId/mC,EAAWr7D,QAAQzG,GAAKhC,QAAQie,IAAIovG,EAAMrrH,EAAE0gE,SAAUyrD,KAG/CllH,wBAAwB66D,EAAsBM,GACrD,MAAMiqD,EAAmB,GACnBC,EAAqD,GACvDxqD,EAAWpkE,QACdM,QAAQie,IAAI86C,EAAAC,SAAS,EAAwB,OAG9C,IAAK,MAAMwJ,KAAasB,EACvB,IACC,MAAMpB,QAAiBx5D,KAAK86G,iBAAiBxhD,EAAW4B,GACpD1B,GACH4rD,EAA6BjuH,KAAKqiE,GAElC,MAAOxgE,GACRlC,QAAQ+E,MAAM7C,EAAI+F,SAAW/F,EAAI8J,OAAS9J,GAC1CmsH,EAAOhuH,KAAKmiE,GAMd,OAHI8rD,EAA6Bl5G,KAAKstD,GAAY0H,EAAAxB,wBAAwBlG,WACnEx5D,KAAKqlH,2BAELF,EAAO3uH,OAASkC,QAAQ0B,OAAOy1D,EAAAC,SAAS,EAAuB,KAAqCq1D,EAAOtrH,KAAK,QAAUnB,QAAQyB,UAGlI4F,uBAAuBu5D,EAAmB4B,GACjD,GAAI,WAAW3yC,KAAK+wC,GAAY,CAC/BA,EAAYjhE,EAAK4yB,WAAWquC,GAAaA,EAAYjhE,EAAKwB,KAAKkB,QAAQ6tB,MAAO0wC,GAE9E,MAAME,QAAiB0gD,EAAA3/C,YAAYjB;CAGnC,aAFoBt5D,KAAK6nF,SAASruB,EAAU0B,GAGpCl7D,KAAKwjF,2BAA2BlpB,QAAQ52B,EAAA9D,IAAInnC,KAAK6gE,IAAYpgE,KAAKygB,IACxE7iB,QAAQie,IAAI86C,EAAAC,SAAS,EAAsB,KAA+C0lB,EAAAvhC,aAAaqlB,KAChGE,GACL39D,GACEsM,EAAA7E,uBAAuBzH,IAC1B/E,QAAQie,IAAI86C,EAAAC,SAAS,EAAqB,KAAyC0lB,EAAAvhC,aAAaqlB,KACzF,MAEA5gE,QAAQ0B,OAAOyB,IAIlB,KAGR,MAAO8d,EAAIkiD,GAAWyoD,EAAgBhrD,GACtC,OAAOt5D,KAAKwjF,2BAA2B7oB,aAAY,GACjDzhE,KAAK+qF,GAAajkF,KAAKykH,wBAAwBzI,uBAAuB,CAAEriG,GAAAA,GAAMkiD,GAC7E3iE,KAAwB,KAAMF,IAC9B,GAAIA,EAAIssH,aACP,IACC,MAAM1iE,EAAWvnD,KAAKC,MAAMtC,EAAIssH,cAChC,OAAO5sH,QAAQ0B,OAAOwoD,EAAS7jD,SAC9B,MAAOjG,IAIV,OAAOJ,QAAQ0B,OAAOpB,KAEtBE,KAAKmrB,MAAMi1C,IACX,IAAKA,EACJ,OAAO5gE,QAAQ0B,OAAO,IAAI4E,MAAM,GA7IrB,CAAC2a,GAAek2C,EAAAC,SAAS,EAAY,KAA8Bn2C,GA6I3C4rG,CAAS1pD,EAAU,GAAGliD,KAAMkiD,IAAYliD,OAAQuqG,MAGpF,MAAM1qD,QAAiBx5D,KAAKykH,wBAAwBlqD,YAAYjB,EAAW36C,EAAAf,kBAAkBhJ,OACtF4wG,GAAsBvhC,EAAU57E,OAAOvP,GAAKirF,EAAAlkB,kBAAkB/mE,EAAE8iE,WAAY,CAAEjiD,GAAAA,KACrF,GAAI6rG,EAAoB,CACvB,GAAIlsD,EAAUuC,UAAY2pD,EAAmBhsD,SAASqC,QAErD,OADA/kE,QAAQie,IAAI86C,EAAAC,SAAS,EAAoB,KAAyC+L,EAAU,GAAGliD,KAAMkiD,IAAYliD,IAC1GjhB,QAAQyB,QAAQ,MAExB,IAAK0hE,IAAYX,EAEhB,OADApkE,QAAQie,IAAI86C,EAAAC,SAAS,EAAe,KAAwJn2C,EAAI6rG,EAAmBhsD,SAASqC,QAASvC,EAAUuC,UACxOnjE,QAAQyB,QAAQ;CAExBrD,QAAQie,IAAI86C,EAAAC,SAAS,EAAiB,KAAmDn2C,EAAI2/C,EAAUuC,UAGxG,aADM77D,KAAKw6D,mBAAmB7gD,EAAI2/C,GAC3BE,KAIHz5D,eAAey5D,EAA8B0B,GACpD,IAAK1B,EACJ,MAAM,IAAIx6D,MAAM,gBAGjB,MAAMglF,EAAsB,CAAErqE,GAAIoqE,EAAA9jB,sBAAsBzG,EAAS0G,UAAW1G,EAAStiE,OAE/EuuH,SAD4BzlH,KAAKwjF,2BAA2B7oB,aAAY,IAC5CtyD,OAAO8xD,GAAS4pB,EAAAlkB,kBAAkBmkB,EAAqB7pB,EAAMyB,aAAe21C,EAAOiJ,GAAGrgD,EAAMX,SAASqC,QAASrC,EAASqC,UAAU,GAEnK,QAAI4pD,IAAUvqD,KACbpkE,QAAQie,IAAI86C,EAAAC,SAAS,GAAkB,KAAqH21D,EAAM7pD,WAAWjiD,GAAI8rG,EAAMjsD,SAASqC,QAASrC,EAASqC,WAC3M,GAMD97D,yBAAyB4Z,EAAY2/C,GAC5CxiE,QAAQie,IAAI86C,EAAAC,SAAS,GAAc,KAAsCn2C,EAAI2/C,EAAUuC,UAEvF,UACO77D,KAAKwjF,2BAA2BhpB,mBAAmBlB,GACzDxiE,QAAQie,IAAI86C,EAAAC,SAAS,GAAkB,KAAoDn2C,EAAI2/C,EAAUuC,UACxG,MAAOhgE,GACR,IAAIsM,EAAA7E,uBAAuBzH,GAG1B,MAAMA,EAFN/E,QAAQie,IAAI86C,EAAAC,SAAS,GAAqB,KAAyCn2C,KAO9E5Z,yBAAyB66D,GAChCv2C,eAAeqhG,EAAehW,GAC7B,IAAK,WAAWnnF,KAAKmnF,GACpB,OAAOA,EAGR,MAAMqI,EAAU1/G,EAAK4yB,WAAWykF,GAAwBA,EAAuBr3G,EAAKwB,KAAKkB,QAAQ6tB,MAAO8mF,GAExG,OAAOyU,QADgBjK,EAAA3/C,YAAYw9C,IAIpC,MAAM4N,EAA2C,GACjD,IAAK,MAAMrsD,KAAasB,EAAY;AACnC,MAAMjhD,QAAW+rG,EAAepsD,GAC1B2qB,QAAkBjkF,KAAKwjF,2BAA2B7oB,aAAY,IAC7D2iD,GAAwBr5B,EAAU57E,OAAOvP,GAAKirF,EAAAlkB,kBAAkB/mE,EAAE8iE,WAAY,CAAEjiD,GAAAA,KACvF,IAAK2jG,EACJ,OAAO5kH,QAAQ0B,OAAO,IAAI4E,MAAM,GAAGilH,EAAatqG,OAAQuqG,MAEzDptH,QAAQie,IAAI86C,EAAAC,SAAS,GAAgB,KAAuBn2C,UACtD3Z,KAAKwjF,2BAA2B/oB,UAAU6iD,GAAsB,GACtEqI,EAAsBxuH,KAAKmmH,GAC3BxmH,QAAQie,IAAI86C,EAAAC,SAAS,GAAoB,KAAiDn2C,IAGvFgsG,EAAsBz5G,KAAKpT,GAAKooE,EAAAxB,wBAAwB5mE,EAAE0gE,kBACvDx5D,KAAKqlH,2BAILtlH,sBAAsB66D,GAC7B,MAAMqpB,QAAkBjkF,KAAKwjF,2BAA2B7oB,eACxDC,EAAWr7D,QAAQzG,IAClBmrF,EAAU1kF,QAAQjJ,IACbA,EAAEslE,WAAWjiD,KAAO7gB,GACnBxC,EAAEuC,SAASonC,SAAWkQ,EAAA5C,QAAQ90C,MACjC3B,QAAQie,IAAIze,EAAEuC,SAASwnC,YAQpBtgC,iCACP,MAAM6lH,EAAsB5lH,KAAKwkH,qBAAqBqB,eAAejhC,EAAArB,4BAC/DqiC,EAAoBlsE,SAC1BksE,EAAoB5wG,YAEtB,OA5NauvG,EAAI19C,EAAA,CAGdC,EAAA,EAAAV,EAAAH,uBACAa,EAAA,EAAAC,EAAAV,qBACAS,EAAA,EAAAqd,EAAAjd,6BACAJ,EAAA,EAAAqd,EAAAhd,2BANUo9C,IAAb,GAAa3lH,EAAA2lH,KAAAA,EA8Nb,MAAMuB,EAAc,kBAEpBlnH,EAAAigE,KAAOx6C,eAAoBqgG;AAC1B,MAAMr2C,EAAW,IAAIC,EAAAR,kBACf74D,EAAc,IAAI4D,EAAAvD,gBAElBgmD,EAAqB,IAAIyqD,EAAAvmC,mBAAmBklC,EAAM3pH,QAAQ8kF,UAC1DtkB,EAA0B,IAAIyqD,EAAAhpC,cAAc,MAAO1hB,EAAmBoL,SAAUoT,EAAAvG,YAAYjY,IAClGvgE,QAAQuQ,KAAK,OAAQ,IAAMiwD,EAAWvmD,WACtCumD,EAAWI,KAAK,OAAQ+oD,SAElBhsH,QAAQgB,IAAsB,CAAC4hE,EAAmB6kB,gBAAgB9/C,OAAQi7B,EAAmBkmB,gBACjG7nF,IAAKtB,GAAoCA,EAAOgnD,EAAA9hD,OAAOlF,QAAQ0B,IAGjE,MAAMwxE,EAAc,IAAI06C,EAAAxyC,YAAYlY,GACpCtmD,EAAY5U,IAAIkrE,GAChB8C,EAASjuE,IAAI2rE,EAAA7D,aAAcqD,GAE3B,MAAM26C,EAAyB,IAAI7S,EAAAt5B,uBAAuBxe,GAC1DtmD,EAAY5U,IAAI6lH,GAChB36C,EAAY46C,iBAAiBh2E,EAAA5C,QAAQ90C,KAAMytH,GAE3C,MAAMv6B,EAAuB,IAAIy6B,EAAAnzB,qBAAqB33B,EAAmB+kB,iBAAkB9U,GAC3Ft2D,EAAY5U,IAAIsrF,SACVA,EAAqB06B,aAE3Bh4C,EAASjuE,IAAI2mE,EAAAV,oBAAqB/K,GAClC+S,EAASjuE,IAAI05E,EAAAhI,YAAavW,GAC1B8S,EAASjuE,IAAIssF,EAAAzC,sBAAuB0B,GACpCtd,EAASjuE,IAAIkmH,EAAA9vB,cAAe,IAAItnB,EAAAxK,eAAe6hD,EAAArvB,eAC/C7oB,EAASjuE,IAAIgkG,EAAAnf,gBAAepnF,OAAA8e,OAAA,CAAIo4F,mBAAeh7G,GAAcmlF,EAAArtB,UAE7D,MAAM2yD,EAA8C,IAAIgC,EAAAp4C,qBAAqBC,GAE7E,OAAOm2C,EAAqBiC,eAAepiG,MAAMqiG,IAChD,MAAMC,EAAaD,EAASxmH,IAAI6mE,EAAAV,qBAC1BugD,EAAeF,EAASxmH,IAAIomH,EAAA9vB,gBAE5B5W,QAAEA,EAAO4B,eAAEA,EAAcI,gCAAEA,EAA+B7B,QAAEA,EAAOqB,kBAAEA,GAAsBulC,EAE3Ft4C,EAAW,IAAIC,EAAAR;CAGrBO,EAASjuE,IAAI4iG,EAAA7O,gBAAiB,IAAIjlB,EAAAxK,eAAemiD,EAAA/D,iBACjDz0C,EAASjuE,IAAI+jF,EAAAjd,4BAA6B,IAAIgI,EAAAxK,eAAeoiD,EAAAlO,6BAC7DvqC,EAASjuE,IAAI+jF,EAAAhd,yBAA0B,IAAI+H,EAAAxK,eAAeqiD,EAAAtnB,0BAE1D,MAAMoH,EAAmC,GACzC,GAAI9mB,IAAY6B,IAAoC+kC,EAAWzlH,KAAK,sBAAwBg+E,EAAArtB,QAAQ+zC,gBAAiB,CAEhH1mB,EAAArtB,QAAQm1D,UAAY9nC,EAAArtB,QAAQm1D,SAASC,WACxCpgB,EAAU1vG,KAAK,IAAI+vH,EAAAtf,oBAAoBke,EAAa,KAAM5mC,EAAArtB,QAAQm1D,SAASC,UAAW1rD,IAGvF,MAAM9/D,EAAkC,CACvCopG,SAAUmE,EAAApC,oBAAoBC,GAC9B9B,iBAAkBoiB,EAAAje,wBAAwBhqB,EAAArtB,QAAQp3D,OAAQykF,EAAArtB,QAAQgK,QAAS+qD,EAAatvB,QAAQ,uBAAwBpY,EAAArtB,QAAQs3C,oBAAqB/nB,GACrJ6jB,SAAUzjB,EAAiB,CAAC5B,EAAS4B,GAAkB,CAAC5B,IAGzDvR,EAASjuE,IAAI+jG,EAAAvJ,kBAAmB,IAAI1rB,EAAAxK,eAAe0iD,EAAA3iB,iBAAkB,CAAChpG,UAGtE4yE,EAASjuE,IAAI+jG,EAAAvJ,kBAAmBoO,EAAArC,sBAGjC,MACM9nC,EADwB2lD,EAAqB6C,YAAYh5C,GAC5Bw3C,eAAetB,GAElD,UACO1lD,EAAK75C,IAAI0/F,SAET1b,EAAApC,oBAAoBC,GAAWttF,gBAErCtE,EAAYD;gYCzTfpW,EAAA0oH,OAAA,MAAAvnH,cACiBC,KAAAunH,oBAAsB,IAAItpG,EAAAjG,QAC1BhY,KAAA4kD,mBAAqB5kD,KAAKunH,oBAAoBhwG,MAC7CvX,KAAAwnH,IAAM,IAAIl+D,EAAA3E,UAAwC3kD,KAAK4kD,oBAEvD5kD,KAAAynH,2BAA6B,EAC7BznH,KAAAwlD,YAAc,IAAIvlD,IAElBD,KAAAquE,SAAW,IAAIC,EAAAR,kBAGzB/tE,UAAUmB,GAChB,OAAOwmH,EAAA7oD,KAAK39D,GAGNnB,iBAAiBoQ,GACvB,MAAMkf,EAAcyrB,EAAA+e,kBAAkB1pD,EAAQmmC,iBACzCt2C,KAAK2nH,kBACT3nH,KAAK2nH,gBAAkB3nH,KAAK4nH,mBAAmBz3G,EAAQjP,aAElDlB,KAAK2nH,gBACX,MAAM1a,EAAcjtG,KAAKquE,SAASnuE,IAAI6mE,EAAAV,qBAChCwhD,EAAY13G,EAAQ03G,UACpBC,EAAYhlB,IAEjB,IACC,OAAOp/D,EAAA9D,IAAItkC,MAAMwnG,GAAK,GACrB,MAAOjnG,GACR,OAAO6nC,EAAA9D,IAAIjoC,KAAK,CACfsoC,OAAQkQ,EAAA5C,QAAQW;AAChBpO,UAAW3vB,EAAQmmC,gBACnBj+C,KAAMyqG,MAIT,MAAO,CACNilB,0BAA2B,CAC1BC,aAAcH,GAAaA,EAAUx4B,UAAYy4B,EAASD,EAAU/kB,UAAO/oG,EAC3EkuH,UAAWJ,IAAcA,EAAUx4B,UAAYy4B,EAASD,EAAU/kB,UAAO/oG,EACzEu8C,gBAAiBnmC,EAAQmmC,gBACzBg8B,SAAUwH,EAAAvG,YAAY05B,GACtBib,kBAAmB,CAClBC,QAAS,CAAC,CAAC,eAAgBlb,EAAYvyG,iBAGzC0tH,kBAAmB/4F,EAAYqnB,kBAAkBhT,EAAA9D,IAAInnC,KAAKw0G,EAAYvyG,eACtE2tH,qBAAsBnpC,EAAArtB,QACtBy2D,uBAAwBz4D,EAAA+7C,oBAAoBqB,EAAY/rG,KAAKtG,cAAgBi1D,EAAAo8C,oBAAoBgB,EAAYvyG,cAAeuyG,EAAYvyG,cACxID,OAAQykF,EAAArtB,QAAQp3D,QAAU,eAIrBsF,sBAAsB6nD,EAAoBrwB,GAChD,IAAKA,EAAMgxF,kBACV,MAAM,IAAIvpH,MAAM,uDAEjB,MAAM+iD,EAAW,IAAIymE,EAAAx/D,SAASpB,EAAQ,CACrC2gE,kBAA2BhxF,EAAMgxF,kBACjCE,aAAqC,SAAvBlxF,EAAMkxF,aACpBrb,oBAAmD,SAA9B71E,EAAM61E,sBAE5B,UACOptG,KAAK8uD,cAAc/M,EAAS2mE,YAAa3mE,GAC9C,MAAOlmD,GACRkmD,EAASisD,YAAY,CAAEx7F,KAAM,QAAS+lF,OAAQ18F,EAAMkD,UACpDgjD,EAAS/sC,UACT+sC,EAASwH,YAAYv0C,UAEtB,OAAO,EAGAjV,cAAchB,EAAgCgjD;AAKrD,OAJIm9B,EAAArtB,QAAQp3D,QAAUsE,EAAQtE,SAAWykF,EAAArtB,QAAQp3D,QAChD8wG,EAAA5uB,OAAO37E,KAAK,qBAAqBjC,EAAQtE,qBAAqBykF,EAAArtB,QAAQp3D,WAG/DsE,EAAQ4pH,uBACf,KAAA,EACA,KAAA,EACM3oH,KAAKwlD,YAAYt8C,IAAInK,EAAQ4pH,wBACjC3oH,KAAKwlD,YAAYplD,IAAIrB,EAAQ4pH,sBAAuB,IAAI1oH,KAEzD,MAAMulD,EAAcxlD,KAAKwlD,YAAYtlD,IAAInB,EAAQ4pH,uBAE3C9pH,EAAKwlB,SAC0B,IAA7BtlB,EAAQ4pH,sBACZ,CAAEC,gBAAiB5oH,KAAK6oH,gBACxB,CAAEr2G,KAAM,MAGNzK,EAAQg6C,EAAS5xC,QAAQo4G,kBAC/B,GAAIxmE,EAAS5xC,QAAQs4G,cAAgBjjE,EAAYt8C,IAAInB,GAAQ,CAC5Dg6C,EAASisD,kBAAkBnvG,KAC3B,MAAMua,EAAS2oC,EAASiK,mBAExB,OADAjK,EAAS/sC,UACFwwC,EAAYtlD,IAAI6H,GAAQ+gH,UAAU/mE,EAASwH,YAAanwC,GACzD,GAAI2oC,EAAS5xC,QAAQs4G,cAAgBjjE,EAAYt8C,IAAInB,GAC3D,MAAM,IAAI/I,MAAM+iD,EAAS5xC,QAAQs4G,aAC9B,kCACA,gCAMJ,IAAIljE,EACJ,GAHAxD,EAASisD,kBAAkBnvG,KAGM,IAA7BE,EAAQ4pH,sBACXpjE,EAAa,IAAIwjE,EAAAnc,qBAAqB7qD,EAAUh6C,GAChD/H,KAAKunH,oBAAoBtvG,KAAK,CAC7B8pC,SAAAA,EAAUmD,sBAAuBK,EAAW2D,UAK5ClpD,KAAKquE,SAASnuE,IAAI8oH,EAAA1e,mBAAwC8K,MAAMn9F;AACjEstC,EAAW2D,QAAQ,IAAOlpD,KAAKquE,SAASnuE,IAAI8oH,EAAA1e,mBAAwC4K,QAAQj9F,YACtF,CACN,MAAMmB,EAAS2oC,EAASiK,mBACxBzG,EAAa,IAAIwjE,EAAA/b,wBAChBjuG,EAAQmC,KAAOnC,EAAQmC,KAAKolB,SAAW,KACvCy7B,EAAU3oC,EAAQrR,EAClB/H,KAAKquE,SAASnuE,IAAI45E,EAAAhI,aAClB9xE,KAAKquE,SAASnuE,IAAI6mE,EAAAV,sBAGpB7gB,EAAYplD,IAAI2H,EAAOw9C,GACvBA,EAAW2D,QAAQ,IAAM1D,EAAYllD,OAAOyH,IAC5C/H,KAAKipH,6BAA6BzjE,GAClC,MACD,KAAA,EAA4B,OAAOzD,EAASmnE,SAC5C,QAAS,MAAM,IAAIlqH,MAAM,iCAInBe,6BAA6BylD,GACpC,MAAMgnD,EAAU9jG,MAAM/Q,KAAK6tD,EAAYhoD,UACrC6K,OAAQk9C,QAA6C,IAAvBA,EAAWinD,SAC3C,IAAK,IAAIl2G,EAAI,EAAG+W,EAAMm/F,EAAQh2G,OAASwJ,KAAKynH,2BAA4BnxH,EAAI+W,IAAO/W,EAClFk2G,EAAQl2G,GAAG0e,UAILjV,yBAAyBmB,GAChC,MAAMo6D,EAAqB,IAAIyqD,EAAAvmC,mBAAmBt+E,EAAMnG,QAAQ8kF,UAC1DtkB,EAAa,IAAIyqD,EAAAhpC,cAAcmsC,EAAAhT,2BAA4B76C,EAAmBoL,SAAUoT,EAAAvG,YAAYjY,IACpGiQ,EAAc,IAAI06C,EAAAxyC,YAAYlY,GACpCgQ,EAAY46C,iBAAiBh2E,EAAA5C,QAAQ90C,KAAM,IAAI46G,EAAAt5B,uBAAuBxe,IAEtE,MAAM0pC,EAAW,CAChB5sG,EAAKwB,KAAKyhE,EAAmB5gE,aAAc,OAC3C4gE,EAAmBkmB,eACnBlmB,EAAmB+lB,yBAChB/lB,EAAmBomB,uBACnBpmB,EAAmBqmB,4BAGvB3hF,KAAKwnH,IAAIliE,gBAAgB,SAAU,IAAI8jE,EAAA9sC,cAAc/gB;AACrDv7D,KAAKwnH,IAAIliE,gBAAgB+jE,EAAA/wD,mCAAmCQ,YAAa,IAAIuwD,EAAA/wD,oCAE7Et4D,KAAKquE,SAASjuE,IAAI05E,EAAAhI,YAAavW,GAC/Bv7D,KAAKquE,SAASjuE,IAAI2mE,EAAAV,oBAAqB/K,GACvCt7D,KAAKquE,SAASjuE,IAAIssF,EAAAzC,sBAAuB,IAAI/a,EAAAxK,eAAe0hD,EAAAnzB,qBAAsB,CAAC33B,EAAmBmlB,wBAAyBlV,KAC/HvrE,KAAKquE,SAASjuE,IAAI4iG,EAAA7O,gBAAiB,IAAIjlB,EAAAxK,eAAemiD,EAAA/D,iBACtD9iH,KAAKquE,SAASjuE,IAAI2rE,EAAA7D,aAAcqD,GAChCvrE,KAAKquE,SAASjuE,IAAIgkG,EAAAnf,gBAAepnF,OAAA8e,OAAA,CAAIo4F,mBAAeh7G,GAAcmlF,EAAArtB,UAClE7xD,KAAKquE,SAASjuE,IAAI+jF,EAAAhd,yBAA0B,IAAI+H,EAAAxK,eAAeqiD,EAAAtnB,0BAC/Dz/F,KAAKquE,SAASjuE,IAAI+jF,EAAAjd,4BAA6B,IAAIgI,EAAAxK,eAAeoiD,EAAAlO,6BAE7Dt9C,EAAmBp6D,KAAK,qBAa5BlB,KAAKquE,SAASjuE,IAAI+jG,EAAAvJ,kBAAmBoO,EAAArC,sBAZrC3mG,KAAKquE,SAASjuE,IAAI+jG,EAAAvJ,kBAAmB,IAAI1rB,EAAAxK,eAAe0iD,EAAA3iB,iBAAkB,CAAC,CAC1EI,SAAUmE,EAAApC,iBACT,IAAIsgB,EAAAtf,oBAAoB,cAAe,KAAM,IAAM,IAAI0hB,EAAAlhB,gBAA0B7sC,GACjF,IAAIytC,EAAAjC,YAAYxrC;AAEjBwpC,iBAAkBoiB,EAAAje,wBACjBhqB,EAAArtB,QAAQp3D,OAAQykF,EAAArtB,QAAQgK,cAAe0tD,EAAApwE,eACvC,GAAImiB,EAAmB8lB,kBAAmB,eAE3C6jB,SAAAA,YAMI,IAAIvsG,QAASyB,IAClB,MAAMqqH,EAAuB,IAAIgC,EAAAp4C,qBAAqBpuE,KAAKquE,UAC3DruE,KAAKquE,SAASjuE,IAAIwkF,EAAAvT,sBAAuBmzC,EAAqBqB,eAAe2D,EAAAjmC,uBAC7EvjF,KAAKquE,SAASjuE,IAAI4oH,EAAA1e,kBAAmBka,EAAqBqB,eAAe4D,EAAA3U,mBAEzE0P,EAAqBiC,eAAe,KACnCjC,EAAqBqB,eAAe6D,EAAAnjD,iBACpC,MAAM+yB,EAAmBt5F,KAAKquE,SAASnuE,IAAIikG,EAAAvJ,mBAC3C56F,KAAKwnH,IAAIliE,gBAAgB,aAAc,IAAIqkE,EAAA/vD,2BAC1C55D,KAAKquE,SAASnuE,IAAIikF,EAAAjd,6BACjBvpD,GAAYm9B,EAAA+e,kBAAkBl8C,EAAQ24B,mBAExCt2C,KAAKwnH,IAAIliE,gBAAgB,8BAA+B,IAAImkE,EAAAzV,4BAC3D14C,EAAoBC,EAAY+9B,EAAkB,KAEnDt5F,KAAKwnH,IAAIliE,gBAAgB,UAAW,IAAIskE,EAAA50B,eAAeh1F,KAAKquE,SAASnuE,IAAI8iG,EAAA7O,mBACzEn0F,KAAKwnH,IAAIliE,gBAAgB,YAAa,IAAIy/D,EAAAta,iBAAiBnR,IAC3Dt5F,KAAKwnH,IAAIliE,gBAAgB,YAAa,IAAI0jE,EAAAze,iBAAiBvqG,KAAKquE,SAASnuE,IAAI8oH,EAAA1e;AAC7EtqG,KAAKwnH,IAAIliE,gBAAgB,gBAAsCukE,EAAAx9D,sBAAsBrsD,KAAKquE,SAASnuE,IAAI0kF,EAAAvT,yBACvGrxE,KAAKwnH,IAAIliE,gBAAgBwkE,EAAAvU,gCAAiC,IAAIkU,EAAAhW,oBAAoBn4C,EAAoBC,IACtGphE,EAAQ,IAAImgG,EAAAzoC,QAAeynC,QAQtBv5F,2JCrQToI,EAAA/E,0BAA2BvH,GAAUkuH,EAAAptC,OAAO37E,KAAKnF,aAAiBmD,MAAQnD,EAAMkD,QAAUlD,IAC1FmuH,EAAAvH,0BAKA,MAAMwH,EAAOlvH,QAAQkvH,KAMrB,GALAlvH,QAAQkvH,KAAO,SAAShwH,GACvB8vH,EAAAptC,OAAO37E,KAAK,iCAAiC/G,GAAQ,yBAIJ,IAAvCc,QAAQC,IAAIkvH,uBAAwC,CAC9D,MAAMC,EAAY33F,SAASz3B,QAAQC,IAAIkvH,uBAAwB,IAC/DpnG,YAAY,KACX,IACC/nB,QAAQ25D,KAAKy1D,EAAW,GACvB,MAAOrxH,GACRmxH,MAEC,UAEHF,EAAAptC,OAAO9gF,MAAM,qBACbouH,EAAK,GAGN,MAAMx8E,EAAS,IAAI28E,EAAA9C,OACbzkE,EAAQ9jD,IACb,IAAKhE,QAAQ8nD,KACZ,MAAM,IAAI7jD,MAAM,wBAEjBjE,QAAQ8nD,KAAK9jD,IAKdhE,QAAQ8e,GAAG,UAAWwK,MAAOtlB,EAA4B6oD,KAExD,OADAmiE,EAAAptC,OAAO/kB,MAAM,+BAAgC2zC,EAAA8e,MAAM,UAAWtrH;AACtDA,EAAQyT,MACf,IAAK,OACJ,IACC,MAAMrC,QAAgBs9B,EAAO44E,WAAWtnH,EAAQoR,SAChD0yC,EAAK,CAAErwC,KAAM,UAAWmH,GAAI5a,EAAQ4a,GAAIxJ,QAAAA,IACvC,MAAOtU,GACRkuH,EAAAptC,OAAO9gF,MAAMA,EAAMkD,SACnBgrH,EAAAptC,OAAO9gF,MAAMA,EAAMiH,OACnBmnH,EAAK,GAEN,MACD,IAAK,MACJ,UACOx8E,EAAO68E,IAAIvrH,EAAQmC,MACzB+oH,EAAK,GACJ,MAAOpuH,GACRkuH,EAAAptC,OAAO9gF,MAAMA,EAAMkD,SACnBgrH,EAAAptC,OAAO9gF,MAAMA,EAAMiH,OACnBmnH,EAAK,GAEN,MACD,IAAK,SACJx8E,EAAO88E,gBAAgB3iE,EAAQ7oD,EAAQw4B,UAIrCx8B,QAAQ8nD,KAKZA,EAAK,CAAErwC,KAAM,WAJbu3G,EAAAptC,OAAO9gF,MAAM,wBACbouH,EAAK,StIzEN9qH,KAAAa","file":"entry.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj._performanceEntries = sharedObj._performanceEntries || [];\n\n\tconst _dataLen = 2;\n\tconst _timeStamp = typeof console.timeStamp === 'function' ? console.timeStamp.bind(console) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj._performanceEntries.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj._performanceEntries.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getEntry(name) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tif (entries[i] === name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: entries[i],\n\t\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj._performanceEntries.push(name, Date.now());\n\t\t_timeStamp(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetEntry: getEntry,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\nlet sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\t// invalid context...\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n//@ts-check\n\n/**\n * @param {NodeRequire} nodeRequire\n * @param {typeof import('path')} path\n * @param {typeof import('fs')} fs\n * @param {typeof import('../common/performance')} perf\n */\nfunction factory(nodeRequire, path, fs, perf) {\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<boolean>}\n\t */\n\tfunction exists(file) {\n\t\treturn new Promise(c => fs.exists(file, c));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction touch(file) {\n\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<object>}\n\t */\n\tfunction lstat(file) {\n\t\treturn new Promise((c, e) => fs.lstat(file, (err, stats) => err ? e(err) : c(stats)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string[]>}\n\t */\n\tfunction readdir(dir) {\n\t\treturn new Promise((c, e) => fs.readdir(dir, (err, files) => err ? e(err) : c(files)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string>}\n\t */\n\tfunction mkdirp(dir) {\n\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<void>}\n\t */\n\tfunction rmdir(dir) {\n\t\treturn new Promise((c, e) => fs.rmdir(dir, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction unlink(file) {\n\t\treturn new Promise((c, e) => fs.unlink(file, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} location\n\t * @returns {Promise<void>}\n\t */\n\tfunction rimraf(location) {\n\t\treturn lstat(location).then(stat => {\n\t\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\t\treturn readdir(location)\n\t\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(path.join(location, child)))))\n\t\t\t\t\t.then(() => rmdir(location));\n\t\t\t} else {\n\t\t\t\treturn unlink(location);\n\t\t\t}\n\t\t}, err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tfunction readFile(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.readFile(file, 'utf8', function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @param {string} content\n\t * @returns {Promise<void>}\n\t */\n\tfunction writeFile(file, content) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.writeFile(file, content, 'utf8', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {string} userDataPath\n\t * @returns {object}\n\t */\n\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\ttry {\n\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t// language changes.\n\t\t\treturn JSON.parse(fs.readFileSync(configFile, \"utf8\"));\n\t\t} catch (err) {\n\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t// language pack config.\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {object} config\n\t * @param {string} locale\n\t */\n\tfunction resolveLanguagePackLocale(config, locale) {\n\t\ttry {\n\t\t\twhile (locale) {\n\t\t\t\tif (config[locale]) {\n\t\t\t\t\treturn locale;\n\t\t\t\t} else {\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {string} commit\n\t * @param {string} userDataPath\n\t * @param {string} metaDataFile\n\t * @param {string} locale\n\t */\n\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\tif (locale === 'pseudo') {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t}\n\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t// the right file to use.\n\n\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t// English translation (we don't ship *.nls.en.json files)\n\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\tconst initialLocale = locale;\n\n\t\tperf.mark('nlsGeneration:start');\n\n\t\tconst defaultResult = function (locale) {\n\t\t\tperf.mark('nlsGeneration:end');\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t};\n\t\ttry {\n\t\t\tif (!commit) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\tif (!configs) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\tif (!locale) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst packConfig = configs[locale];\n\t\t\tlet mainPack;\n\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\tif (!fileExists) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\tconst result = {\n\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t};\n\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\tlet toDelete;\n\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\treturn defaultResult(locale);\n\t\t}\n\t}\n\n\treturn {\n\t\tgetNLSConfiguration\n\t};\n}\n\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(__m[90/*vs/base/node/languagePacks*/], __M([41/*path*/,20/*fs*/,166/*vs/base/common/performance*/]), function (path, fs, perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\tconst path = require('path');\n\tconst fs = require('fs');\n\tconst perf = require('../common/performance');\n\tmodule.exports = factory(require, path, fs, perf);\n} else {\n\tthrow new Error('Unknown context');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport type IStringDictionary<V> = Record<string, V>;\n\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport type INumberDictionary<V> = Record<number, V>;\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given dictionary.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function size<T>(from: IStringDictionary<T> | INumberDictionary<T>): number {\n\tlet count = 0;\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nexport function first<T>(from: IStringDictionary<T> | INumberDictionary<T>): T | undefined {\n\tfor (const key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\treturn (from as any)[key];\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Iterates over each entry in the provided dictionary. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result: IStringDictionary<T[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}\n\n\nexport class SetMap<K, V> {\n\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * @deprecated ES6: use `Array.findIndex`\n */\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\ninterface NativeIteratorYieldResult<TYield> {\n\tdone?: false;\n\tvalue: TYield;\n}\n\ninterface NativeIteratorReturnResult<TReturn> {\n\tdone: true;\n\tvalue: TReturn;\n}\n\ntype NativeIteratorResult<T, TReturn = any> = NativeIteratorYieldResult<T> | NativeIteratorReturnResult<TReturn>;\n\nexport interface NativeIterator<T> {\n\tnext(): NativeIteratorResult<T>;\n}\n\nexport namespace Iterable {\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function single<T>(value: T): Iterator<T> {\n\t\tlet done = false;\n\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tdone = true;\n\t\t\t\treturn { done: false, value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromArray<T>(array: ReadonlyArray<T>, index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromNativeIterator<T>(it: NativeIterator<T>): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tconst result = it.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: result.value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function some<T>(iterator: Iterator<T> | NativeIterator<T>, fn: (t: T) => boolean): boolean {\n\t\twhile (true) {\n\t\t\tconst element = iterator.next();\n\t\t\tif (element.done) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (fn(element.value)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>, atMost: number = Number.POSITIVE_INFINITY): T[] {\n\t\tconst result: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\tlet i = 0;\n\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tresult.push(next.value);\n\n\t\t\tif (++i >= atMost) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\texport function concat<T>(...iterators: Iterator<T>[]): Iterator<T> {\n\t\tlet i = 0;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif (i >= iterators.length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tconst iterator = iterators[i];\n\t\t\t\tconst result = iterator.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\ti++;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\t}\n\n\texport function chain<T>(iterator: Iterator<T>): ChainableIterator<T> {\n\t\treturn new ChainableIterator(iterator);\n\t}\n}\n\nexport class ChainableIterator<T> implements Iterator<T> {\n\n\tconstructor(private it: Iterator<T>) { }\n\n\tnext(): IteratorResult<T> { return this.it.next(); }\n\tmap<R>(fn: (t: T) => R): ChainableIterator<R> { return new ChainableIterator(Iterator.map(this.it, fn)); }\n\tfilter(fn: (t: T) => boolean): ChainableIterator<T> { return new ChainableIterator(Iterator.filter(this.it, fn)); }\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: ISequence<T> | undefined): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else if (!arg) {\n\t\treturn Iterator.empty();\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate readonly items: readonly T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T | null) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T> {\n\tlet promiseResolve: (() => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.();\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t */\n\twrite(data: T): void;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer);\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tconstructor(private reducer: IReducer<T>) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: IReducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlet wrapperStream: WriteableStream<T> | undefined = undefined;\n\n\t\tstream.on('data', data => {\n\n\t\t\t// If we reach maxChunks, we start to return a stream\n\t\t\t// and make sure that any data we have already read\n\t\t\t// is in it as well\n\t\t\tif (!wrapperStream && chunks.length === maxChunks) {\n\t\t\t\twrapperStream = newWriteableStream(reducer);\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.write(data);\n\n\t\t\t\treturn resolve(wrapperStream);\n\t\t\t}\n\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.write(data);\n\t\t\t} else {\n\t\t\t\tchunks.push(data);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('error', error => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.error(error);\n\t\t\t} else {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('end', () => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.end();\n\t\t\t} else {\n\t\t\t\treturn resolve(reducer(chunks));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * @deprecated ES6: use `String.startsWith`\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated ES6: use `String.endsWith`\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n * todo@joh use toJSON-results\n */\nexport type Dto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: T[K] extends Function\n\t? never\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\n/**\n * @deprecated ES6\n */\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(_makeFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { FIN } from './iterator';\n\n/**\n * @deprecated ES6: use `[...SetOrMap.values()]`\n */\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\n/**\n * @deprecated ES6: use `[...map.keys()]`\n */\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(private _splitOnBackslash: boolean = true) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment!: string;\n\tvalue: E | undefined;\n\tkey!: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI) => void): void {\n\t\tthis.map.forEach((value, index) => clb(value, URI.parse(index)));\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { regExpFlags } from 'vs/base/common/strings';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\nexport function revive(obj: any, depth = 0): any {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return URI.revive(obj);\n\t\t\tcase 2: return new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function originalFSPath(uri: URI): string {\n\tlet value: string;\n\tconst uriPath = uri.path;\n\tif (uri.authority && uriPath.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uriPath}`;\n\t} else if (\n\t\tisWindows\n\t\t&& uriPath.charCodeAt(0) === CharCode.Slash\n\t\t&& extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\n\t\t&& uriPath.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tvalue = uriPath.substr(1);\n\t} else {\n\t\t// other path\n\t\tvalue = uriPath;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n * URI queries are included, fragments are ignored.\n */\nexport function getComparisonKey(resource: URI, caseInsensitivePath = hasToIgnoreCase(resource)): string {\n\tlet path = resource.path || '/';\n\tif (caseInsensitivePath) {\n\t\tpath = path.toLowerCase();\n\t}\n\treturn resource.with({ authority: resource.authority.toLowerCase(), path: path, fragment: null }).toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * URI queries must match, fragments are ignored.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase) && base.query === parentCandidate.query;\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path || '/', parentCandidate.path || '/', ignoreCase, '/') && base.query === parentCandidate.query;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests whether the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\n/**\n * Tests whether two resources are the same.  URI queries must match, fragments are ignored unless requested.\n */\nexport function isEqual(first: URI | undefined, second: URI | undefined, caseInsensitivePath = hasToIgnoreCase(first), ignoreFragment = true): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn (p1 === p2 || caseInsensitivePath && equalsIgnoreCase(p1, p2)) && first.query === second.query && (ignoreFragment || first.fragment === second.fragment);\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tlet dirname;\n\tif (resource.scheme === Schemas.file) {\n\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t} else {\n\t\tdirname = paths.posix.dirname(resource.path);\n\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t}\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === 'file') {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, caseInsensitivePath = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (caseInsensitivePath) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<{ root: URI, expression: ParsedExpression }> = TernarySearchTree.forPaths<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root.toString(), { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource.toString());\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { posix, normalize, win32, sep } from 'vs/base/common/path';\nimport { startsWithIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome: string;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider) {\n\t\tres = tildify(res, userHomeProvider.userHome);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { Schemas } from './network';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tconstructor(private readonly remoteAuthority: string) {\n\t}\n\n\t// NOTE@coder: Coming in from the browser it'll be vscode-remote so it needs\n\t// to be transformed into file.\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.vscodeRemote\n\t\t\t? toJSON(URI.file(uri.path))\n\t\t\t: uri;\n\t}\n\n\t// NOTE@coder: Going out to the browser it'll be file so it needs to be\n\t// transformed into vscode-remote.\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? toJSON(URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path: uri.path }))\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path:uri.path })\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn scheme === Schemas.file\n\t\t\t? Schemas.vscodeRemote\n\t\t\t: scheme;\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst cmdline = {\n\twindows: 'getmac.exe',\n\tunix: '/sbin/ifconfig -a || /sbin/ip link'\n};\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\texec(isWindows ? cmdline.windows : cmdline.unix, { timeout: 10000 }, (err, stdout, stdin) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(`Unable to retrieve mac address (${err.toString()})`);\n\t\t\t\t} else {\n\t\t\t\t\tconst regex = /(?:[a-f\\d]{2}[:\\-]){5}[a-f\\d]{2}/gi;\n\n\t\t\t\t\tlet match;\n\t\t\t\t\twhile ((match = regex.exec(stdout)) !== null) {\n\t\t\t\t\t\tconst macAddressCandidate = match[0];\n\t\t\t\t\t\tif (validateMacAddress(macAddressCandidate)) {\n\t\t\t\t\t\t\treturn resolve(macAddressCandidate);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn reject('Unable to retrieve mac address (unexpected format)');\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = getPathFromAmdModule(require, 'paths');\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accommodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/Microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.flush();\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext) {\n\t\tsuper(protocol, id);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new BufferedEmitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\tconsole.error(`PROTOCOL CORRUPTION, LAST SAW MSG ${this._incomingMsgId} AND HAVE NOW RECEIVED MSG ${msg.id}`);\n\t\t\t\t}\n\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\tthis._sendAckCheck();\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { revive } from 'vs/base/common/marshalling';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { isUpperAsciiLetter } from 'vs/base/common/strings';\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\n\nexport class NodeSocket implements ISocket {\n\tpublic readonly socket: Socket;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\tthis.socket.write(<Buffer>buffer.buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tmask: 0\n\t};\n\n\tconstructor(socket: NodeSocket) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.dispose();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this.socket.onClose(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\theader.writeUInt8(0b10000010, 0);\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\t// const firstByte = peekHeader.readUInt8(0);\n\t\t\t\t// const finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._onData.fire(body);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t} else {\n\t\t// Mac/Unix: use socket file\n\t\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\tconst _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone, assign } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/Microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = assign(deepClone(process.env), { 'VSCODE_PARENT_PID': String(process.pid) });\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = assign(forkOpts.env, this.options.env);\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ILogToSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onLogToEmitter = new Emitter<ILogToSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'log':\n\t\t\t\treturn Promise.resolve(this._onLogToEmitter.fire({ sessionId: arg[0], log: arg[1] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'log':\n\t\t\t\treturn this._onLogToEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tlogToSession(sessionId: string, log: IRemoteConsoleLog): void {\n\t\tthis.channel.call('log', [sessionId, log]);\n\t}\n\n\tget onLogToSession(): Event<ILogToSessionEvent> {\n\t\treturn this.channel.listen('log');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: IProcessEnvironment): Promise<void> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer), args[1]);\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) { }\n\n\tget onInstallExtension(): Event<InstallExtensionEvent> { return this.channel.listen('onInstallExtension'); }\n\tget onDidInstallExtension(): Event<DidInstallExtensionEvent> { return Event.map(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension'), i => ({ ...i, local: i.local ? transformIncomingExtension(i.local, null) : i.local })); }\n\tget onUninstallExtension(): Event<IExtensionIdentifier> { return this.channel.listen('onUninstallExtension'); }\n\tget onDidUninstallExtension(): Event<DidUninstallExtensionEvent> { return this.channel.listen('onDidUninstallExtension'); }\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation, type]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, force]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { rimraf } from 'vs/base/node/pfs';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\tprivate environmentService: IEnvironmentService,\n\t\tprivate logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.metadata ? extension.metadata.publisherId : null,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.metadata ? extension.metadata.publisherDisplayName : null,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface IBuiltInExtension {\n\tname: string;\n\tversion: string;\n\trepo: string;\n\tforQualities?: ReadonlyArray<string>;\n\tmetadata: any;\n}\n\n/**\n * Parses the built-in extension JSON data and filters it down to the\n * extensions built into this product quality.\n */\nexport function parseBuiltInExtensions(rawJson: string, productQuality: string | undefined) {\n\tconst parsed: IBuiltInExtension[] = JSON.parse(rawJson);\n\tif (!productQuality) {\n\t\treturn parsed;\n\t}\n\n\treturn parsed.filter(ext => ext.forQualities?.indexOf?.(productQuality) !== -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/nsfw/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: WatcherChannelClient | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tconst options = {};\n\t\tthis._register(this.service.watch(options)(e => !this.isDisposed && this.onDidFilesChange(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/unix/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: WatcherChannelClient | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.watch(this.watcherOptions)(e => !this.isDisposed && this.onDidFilesChange(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(getPathFromAmdModule(require, 'vs/platform/files/node/watcher/win32/CodeHelper.exe'), args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && this.folder.path.endsWith(posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onDidFilesChange(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { forEach } from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes[key];\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn this._nodes[this._hashFn(data)];\n\t}\n\n\tisEmpty(): boolean {\n\t\tfor (const _key in this._nodes) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\t_serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { IUserHomeProvider } from 'vs/base/common/labels';\n\nexport interface ParsedArgs {\n\t_: string[];\n\t'folder-uri'?: string[]; // undefined or array of 1 or more\n\t'file-uri'?: string[]; // undefined or array of 1 or more\n\t_urls?: string[];\n\thelp?: boolean;\n\tversion?: boolean;\n\ttelemetry?: boolean;\n\tstatus?: boolean;\n\twait?: boolean;\n\twaitMarkerFilePath?: string;\n\tdiff?: boolean;\n\tadd?: boolean;\n\tgoto?: boolean;\n\t'new-window'?: boolean;\n\t'unity-launch'?: boolean; // Always open a new window, except if opening the first window or opening a file or folder as part of the launch.\n\t'reuse-window'?: boolean;\n\tlocale?: string;\n\t'user-data-dir'?: string;\n\t'prof-startup'?: boolean;\n\t'prof-startup-prefix'?: string;\n\t'prof-append-timers'?: string;\n\tverbose?: boolean;\n\ttrace?: boolean;\n\t'trace-category-filter'?: string;\n\t'trace-options'?: string;\n\tlog?: string;\n\tlogExtensionHostCommunication?: boolean;\n\t'extensions-dir'?: string;\n\t'builtin-extensions-dir'?: string;\n\t'extra-extensions-dir'?: string[];\n\t'extra-builtin-extensions-dir'?: string[];\n\textensionDevelopmentPath?: string[]; // // undefined or array of 1 or more local paths or URIs\n\textensionTestsPath?: string; // either a local path or a URI\n\t'inspect-extensions'?: string;\n\t'inspect-brk-extensions'?: string;\n\tdebugId?: string;\n\t'inspect-search'?: string;\n\t'inspect-brk-search'?: string;\n\t'disable-extensions'?: boolean;\n\t'disable-extension'?: string[]; // undefined or array of 1 or more\n\t'list-extensions'?: boolean;\n\t'show-versions'?: boolean;\n\t'category'?: string;\n\t'install-extension'?: string[]; // undefined or array of 1 or more\n\t'uninstall-extension'?: string[]; // undefined or array of 1 or more\n\t'locate-extension'?: string[]; // undefined or array of 1 or more\n\t'enable-proposed-api'?: string[]; // undefined or array of 1 or more\n\t'open-url'?: boolean;\n\t'skip-getting-started'?: boolean;\n\t'skip-release-notes'?: boolean;\n\t'sticky-quickinput'?: boolean;\n\t'disable-restore-windows'?: boolean;\n\t'disable-telemetry'?: boolean;\n\t'export-default-configuration'?: string;\n\t'install-source'?: string;\n\t'disable-updates'?: boolean;\n\t'disable-crash-reporter'?: boolean;\n\t'skip-add-to-recently-opened'?: boolean;\n\t'max-memory'?: string;\n\t'file-write'?: boolean;\n\t'file-chmod'?: boolean;\n\t'driver'?: string;\n\t'driver-verbose'?: boolean;\n\tremote?: string;\n\t'disable-user-env-probe'?: boolean;\n\t'force'?: boolean;\n\t'force-user-env'?: boolean;\n\t'sync'?: 'on' | 'off';\n\n\t// chromium command line args: https://electronjs.org/docs/all#supported-chrome-command-line-switches\n\t'no-proxy-server'?: boolean;\n\t'proxy-server'?: string;\n\t'proxy-bypass-list'?: string;\n\t'proxy-pac-url'?: string;\n\t'inspect'?: string;\n\t'inspect-brk'?: string;\n\t'js-flags'?: string;\n\t'disable-gpu'?: boolean;\n\t'nolazy'?: boolean;\n\t'force-device-scale-factor'?: string;\n\t'force-renderer-accessibility'?: boolean;\n\t'ignore-certificate-errors'?: boolean;\n\t'allow-insecure-localhost'?: boolean;\n}\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport const BACKUPS = 'Backups';\n\nexport interface IEnvironmentService extends IUserHomeProvider {\n\n\t_serviceBrand: undefined;\n\n\targs: ParsedArgs;\n\n\texecPath: string;\n\tappRoot: string;\n\n\tuserHome: string;\n\tuserDataPath: string;\n\n\tappSettingsHome: URI;\n\n\t// user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// sync resources\n\tuserDataSyncLogResource: URI;\n\tuserDataSyncHome: URI;\n\n\tmachineSettingsResource: URI;\n\n\tglobalStorageHome: string;\n\tworkspaceStorageHome: string;\n\n\tbackupHome: URI;\n\tbackupWorkspacesPath: string;\n\n\tuntitledWorkspacesHome: URI;\n\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tbuiltinExtensionsPath: string;\n\textensionsPath?: string;\n\textraExtensionPaths: string[];\n\textraBuiltinExtensionPaths: string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\textensionEnabledProposedApi?: string[] | undefined;\n\tlogExtensionHostCommunication?: boolean;\n\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\n\tisBuilt: boolean;\n\n\tlogsPath: string;\n\tverbose: boolean;\n\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\tnodeCachedDataDir?: string;\n\n\tinstallSourcePath: string;\n\tdisableUpdates: boolean;\n\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n\n\tserviceMachineIdResource?: URI;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\treadonly manifest: IExtensionManifest;\n\tmetadata: IGalleryMetadata;\n\treadmeUrl: URI | null;\n\tchangelogUrl: URI | null;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport interface IExtensionGalleryService {\n\t_serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<URI>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport interface IExtensionManagementService {\n\t_serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI): Promise<ILocalExtension>;\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An even that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[]) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer, VSBufferWriteableStream, newWriteableBufferStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n}\n\nexport function createReadStream(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: ICreateReadStreamOptions, token?: CancellationToken): VSBufferReadableStream {\n\tconst stream = newWriteableBufferStream();\n\n\t// do not await reading but simply return the stream directly since it operates\n\t// via events. finally end the stream and send through the possible error\n\tlet error: Error | undefined = undefined;\n\n\tdoReadFileIntoStream(provider, resource, stream, options, token).then(undefined, err => error = err).finally(() => stream.end(error));\n\n\treturn stream;\n}\n\nasync function doReadFileIntoStream(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, stream: VSBufferWriteableStream, options: ICreateReadStreamOptions, token?: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\ttry {\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tstream.write(buffer);\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\tstream.write(buffer.slice(0, lastChunkLength));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token?: CancellationToken): boolean {\n\tif (token && token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow it to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(() => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(normalizedFileChanges);\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tthis._entries.forEach((value, key) => callback(key, value));\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.getValue();\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.getValue()[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const enum LanguageType {\n\tCore = 1,\n\tContributed\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\t_serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(type?: LanguageType): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\t_serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\t_serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class LogServiceAdapter extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly adapter: { consoleLog: (type: string, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends LogServiceAdapter implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper({ consoleLog: (type, args) => client.consoleLog(type, args) }, logLevel);\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.args.log === 'string') {\n\t\tconst logLevel = environmentService.args.log.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isAbsolutePath, dirname, basename, joinPath, isEqual, isEqualOrParent } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, bufferToStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, ReadableStreamEvents, consumeReadableWithLimit, consumeStreamWithLimit } from 'vs/base/common/stream';\nimport { Queue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { assign } from 'vs/base/common/objects';\nimport { createReadStream } from 'vs/platform/files/common/io';\n\nexport class FileService extends Disposable implements IFileService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promise.all(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forPaths<true>();\n\t\t\t\ttrie.set(resource.toString(), true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri.toString(), true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource.toString()) || trie.get(stat.resource.toString()))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: getBaseLabel(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promise.all(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promise.all(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tbufferOrReadableOrStream = await consumeStreamWithLimit(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStream = consumeReadableWithLimit(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, bufferOrReadableOrStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, bufferOrReadableOrStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStream) : bufferOrReadableOrStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// file cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tconst stream = await this.doReadAsFileStream(provider, resource, assign({\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t}, options || Object.create(null)));\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadAsFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadAsFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & { preferUnbuffered?: boolean }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelyhood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\tlet fileStreamPromise: Promise<VSBufferReadableStream>;\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStreamPromise = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileStreamed(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileBuffered(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\tconst [fileStat, fileStream] = await Promise.all([statPromise, fileStreamPromise]);\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn this.transformFileReadStream(resource, fileStream, options);\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = createReadStream(provider, resource, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn this.transformFileReadStream(resource, fileStream, options);\n\t}\n\n\tprivate transformFileReadStream(resource: URI, stream: ReadableStreamEvents<Uint8Array | VSBuffer>, options: IReadFileOptions): VSBufferReadableStream {\n\t\treturn transform(stream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate async readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileOptions): Promise<VSBufferReadableStream> {\n\t\tlet buffer = await provider.readFile(resource);\n\n\t\t// respect position option\n\t\tif (options && typeof options.position === 'number') {\n\t\t\tbuffer = buffer.slice(options.position);\n\t\t}\n\n\t\t// respect length option\n\t\tif (options && typeof options.length === 'number') {\n\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\treturn bufferToStream(VSBuffer.wrap(buffer));\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promise.all(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst isPathCaseSensitive = !!(sourceProvider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = isEqual(source, target, true /* ignore case */);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && isEqualOrParent(target, source, !isPathCaseSensitive)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst isPathCaseSensitive = !!(sourceProvider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tif (isEqualOrParent(source, target, !isPathCaseSensitive)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\twhile (!isEqual(directory, dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync del(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<void> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate activeWatchers = new Map<string, { disposable: IDisposable, count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet watchDisposable = toDisposable(() => watchDisposed = true);\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\twatchDisposable = disposable;\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => dispose(watchDisposable));\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\treturn [\n\t\t\tthis.toMapKey(provider, resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate writeQueues: Map<string, Queue<void>> = new Map();\n\n\tprivate ensureWriteQueue(provider: IFileSystemProvider, resource: URI): Queue<void> {\n\t\t// ensure to never write to the same resource without finishing\n\t\t// the one write. this ensures a write finishes consistently\n\t\t// (even with error) before another write is done.\n\t\tconst queueKey = this.toMapKey(provider, resource);\n\t\tlet writeQueue = this.writeQueues.get(queueKey);\n\t\tif (!writeQueue) {\n\t\t\twriteQueue = new Queue<void>();\n\t\t\tthis.writeQueues.set(queueKey, writeQueue);\n\n\t\t\tconst onFinish = Event.once(writeQueue.onFinished);\n\t\t\tonFinish(() => {\n\t\t\t\tthis.writeQueues.delete(queueKey);\n\t\t\t\tdispose(writeQueue);\n\t\t\t});\n\t\t}\n\n\t\treturn writeQueue;\n\t}\n\n\tprivate toMapKey(provider: IFileSystemProvider, resource: URI): string {\n\t\tconst isPathCaseSensitive = !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\treturn isPathCaseSensitive ? resource.toString() : resource.toString().toLowerCase();\n\t}\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, readableOrStream: VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, stream: VSBufferReadableStream): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet posInFile = 0;\n\n\t\t\tstream.on('data', async chunk => {\n\n\t\t\t\t// pause stream to perform async write operation\n\t\t\t\tstream.pause();\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t// handler again before finishing.\n\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t});\n\n\t\t\tstream.on('error', error => reject(error));\n\t\t\tstream.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(() => this.doWriteUnbufferedQueued(provider, resource, bufferOrReadableOrStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStream);\n\t\t}\n\n\t\treturn provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promise.all([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mkdir, open, close, read, write, fdatasync, Dirent, Stats } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { statLink, unlink, move, copy, readFile, truncate, rimraf, RimRafMode, exists, readdirWithFileTypes } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, transform } from 'vs/base/common/stream';\nimport { createReadStream } from 'vs/platform/files/common/io';\nimport { insert } from 'vs/base/common/arrays';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(private logService: ILogService, private options?: IDiskFileSystemProviderOptions) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdirWithFileTypes(this.toFilePath(resource));\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | Dirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to non-existing files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst fileStream = createReadStream(this, resource, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn transform(fileStream, { data: data => data.buffer }, data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate writeHandles: Set<number> = new Set();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (opts.create) {\n\t\t\t\tif (isWindows && await exists(filePath)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (opts.create) {\n\t\t\t\tthis.writeHandles.add(handle);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promisify(mkdir)(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@ben ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(async () => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\t//#endregion\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LoggerChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t\tcase 'consoleLog': this.consoleLog(arg[0], arg[1]); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate consoleLog(severity: string, args: string[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (severity) {\n\t\t\tcase 'error':\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase 'warn':\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n}\n\nexport class LoggerChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLoggerChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n\tconsoleLog(severity: string, args: string[]): void {\n\t\tthis.channel.call('consoleLog', [severity, args]);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private master: LoggerChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(master.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.master.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n\nasync function createSpdLogLogger(processName: string, logsFolder: string): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\treturn _spdlog.createRotatingLoggerAsync(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tprivate buffer: ILog[] = [];\n\tprivate _loggerCreationPromise: Promise<void> | undefined = undefined;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(private readonly name: string, private readonly logsFolder: string, level: LogLevel) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tif (!this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise = createSpdLogLogger(this.name, this.logsFolder)\n\t\t\t\t.then(logger => {\n\t\t\t\t\tif (logger) {\n\t\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buffer = [];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn this._loggerCreationPromise;\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t\tthis._loggerCreationPromise = undefined;\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\treadonly sticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\treadonly silent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\treadonly neverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces (= `NeverShowAgainScope.GLOBAL`).\n\t */\n\treadonly scope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\treadonly severity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\treadonly message: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\treadonly source?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\treadonly progress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\treadonly primary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\treadonly secondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\treadonly infinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\treadonly total?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\treadonly worked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible.\n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\treadonly keepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\treadonly showAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\treadonly hideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param onCancel will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/platform/product/common/productService';\nimport { assign } from 'vs/base/common/objects';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { env } from 'vs/base/common/process';\n\nlet product: IProductConfiguration;\n\n// Web\nif (isWeb) {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tassign(product, {\n\t\t\tversion: '1.44.0-dev',\n\t\t\tnameLong: 'Visual Studio Code Web Dev',\n\t\t\tnameShort: 'VSCode Web Dev',\n\t\t\turlProtocol: 'code-oss'\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tassign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\n// Node: AMD loader\nelse if (typeof require !== 'undefined' && typeof require.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\n\n\tproduct = assign({}, require.__$__nodeRequire(path.join(rootPath, 'product.json')) as IProductConfiguration);\n\tconst pkg = require.__$__nodeRequire(path.join(rootPath, 'package.json')) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tassign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tassign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\n// Unknown\nelse {\n\tthrow new Error('Unable to resolve product configuration');\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, ParsedArgs, IDebugParams, IExtensionHostDebugParams, BACKUPS } from 'vs/platform/environment/common/environment';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport product from 'vs/platform/product/common/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nexport const xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\n\tif (xdgRuntimeDir && !vscodePortable) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\treturn path.join(xdgRuntimeDir, `vscode-${scope}-${product.version}-${type}.sock`);\n\t}\n\n\treturn path.join(userDataPath, `${product.version}-${type}.sock`);\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${product.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport class EnvironmentService implements IEnvironmentService {\n\n\t_serviceBrand: undefined;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): string { return os.homedir(); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'sync'); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(path.join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return resources.joinPath(URI.file(path.join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): string { return path.join(this.appSettingsHome.fsPath, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): string { return path.join(this.appSettingsHome.fsPath, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(path.join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn URI.file(path.join(this.userHome, product.dataFolderName, 'argv.json'));\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): URI { return URI.file(path.join(this.userDataPath, BACKUPS)); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome.fsPath, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn path.join(this.userHome, product.dataFolderName, 'extensions');\n\t}\n\n\t@memoize get extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\t@memoize get extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(p => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(p)) {\n\t\t\t\t\treturn URI.parse(p);\n\t\t\t\t}\n\t\t\t\treturn URI.file(path.normalize(p));\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget extensionEnabledProposedApi(): string[] | undefined {\n\t\tif (Array.isArray(this.args['enable-proposed-api'])) {\n\t\t\treturn this.args['enable-proposed-api'];\n\t\t}\n\n\t\tif ('enable-proposed-api' in this.args) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\t@memoize\n\tget logExtensionHostCommunication(): boolean { return !!this.args.logExtensionHostCommunication; }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget log(): string | undefined { return this._args.log; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return resources.joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n\nexport function parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService, LanguageType } from 'vs/platform/localizations/common/localizations';\nimport product from 'vs/platform/product/common/product';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nconst systemLanguages: string[] = ['de', 'en', 'en-US', 'es', 'fr', 'it', 'ja', 'ko', 'ru', 'zh-CN', 'zh-TW'];\nif (product.quality !== 'stable') {\n\tsystemLanguages.push('hu');\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(type: LanguageType): Promise<string[]> {\n\t\tif (type === LanguageType.Core) {\n\t\t\treturn Promise.resolve([...systemLanguages]);\n\t\t}\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tconst languages = type === LanguageType.Contributed ? Object.keys(languagePacks) : [...systemLanguages, ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\t_serviceBrand: undefined;\n\n}\n\nexport interface IProductConfiguration {\n\treadonly version: string;\n\treadonly date?: string;\n\treadonly quality?: string;\n\treadonly commit?: string;\n\n\treadonly nameShort: string;\n\treadonly nameLong: string;\n\n\treadonly win32AppUserModelId?: string;\n\treadonly win32MutexName?: string;\n\treadonly applicationName: string;\n\n\treadonly urlProtocol: string;\n\treadonly dataFolderName: string;\n\n\treadonly downloadUrl?: string;\n\treadonly updateUrl?: string;\n\treadonly target?: string;\n\n\treadonly settingsSearchBuildId?: number;\n\treadonly settingsSearchUrl?: string;\n\n\treadonly experimentsUrl?: string;\n\n\treadonly extensionsGallery?: {\n\t\treadonly serviceUrl: string;\n\t\treadonly itemUrl: string;\n\t\treadonly controlUrl: string;\n\t\treadonly recommendationsUrl: string;\n\t};\n\n\treadonly extensionTips?: { [id: string]: string; };\n\treadonly extensionImportantTips?: { [id: string]: { name: string; pattern: string; isExtensionPack?: boolean }; };\n\treadonly exeBasedExtensionTips?: { [id: string]: IExeBasedExtensionTip; };\n\treadonly remoteExtensionTips?: { [remoteName: string]: IRemoteExtensionTip; };\n\treadonly extensionKeywords?: { [extension: string]: readonly string[]; };\n\treadonly keymapExtensionTips?: readonly string[];\n\n\treadonly crashReporter?: {\n\t\treadonly companyName: string;\n\t\treadonly productName: string;\n\t};\n\n\treadonly enableTelemetry?: boolean;\n\treadonly aiConfig?: {\n\t\treadonly asimovKey: string;\n\t};\n\n\treadonly sendASmile?: {\n\t\treadonly reportIssueUrl: string,\n\t\treadonly requestFeatureUrl: string\n\t};\n\n\treadonly documentationUrl?: string;\n\treadonly releaseNotesUrl?: string;\n\treadonly keyboardShortcutsUrlMac?: string;\n\treadonly keyboardShortcutsUrlLinux?: string;\n\treadonly keyboardShortcutsUrlWin?: string;\n\treadonly introductoryVideosUrl?: string;\n\treadonly tipsAndTricksUrl?: string;\n\treadonly newsletterSignupUrl?: string;\n\treadonly twitterUrl?: string;\n\treadonly requestFeatureUrl?: string;\n\treadonly reportIssueUrl?: string;\n\treadonly licenseUrl?: string;\n\treadonly privacyStatementUrl?: string;\n\treadonly telemetryOptOutUrl?: string;\n\n\treadonly npsSurveyUrl?: string;\n\treadonly surveys?: readonly ISurveyData[];\n\n\treadonly checksums?: { [path: string]: string; };\n\treadonly checksumFailMoreInfoUrl?: string;\n\n\treadonly appCenter?: {\n\t\treadonly 'win32-ia32': string;\n\t\treadonly 'win32-x64': string;\n\t\treadonly 'linux-x64': string;\n\t\treadonly 'darwin': string;\n\t};\n\n\treadonly portable?: string;\n\n\treadonly extensionKind?: { readonly [extensionId: string]: ExtensionKind[]; };\n\treadonly extensionAllowedProposedApi?: readonly string[];\n\n\treadonly msftInternalDomains?: string[];\n\treadonly linkProtectionTrustedDomains?: readonly string[];\n\n\treadonly 'configurationSync.store'?: { url: string, authenticationProviderId: string };\n}\n\nexport interface IExeBasedExtensionTip {\n\tfriendlyName: string;\n\twindowsPath?: string;\n\trecommendations: readonly string[];\n\timportant?: boolean;\n\texeFriendlyName?: string;\n}\n\nexport interface IRemoteExtensionTip {\n\tfriendlyName: string;\n\textensionId: string;\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { values } from 'vs/base/common/map';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n\tdisallowSyncIgnore?: boolean;\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tmachineSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tmachineOverridableSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of values(this.overrideIdentifiers)) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\tdefault: this.defaultOverridesConfigurationNode.properties![overrideIdentifierProperty]?.default\n\t\t\t};\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, values, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { dirname } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (content) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\tif (scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema && typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW;\n\t}\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), this.scopes);\n\t\tthis._register(this.fileService.watch(dirname(this.userSettingsResource)));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parseContent(content.value.toString() || '{}');\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treprocess(): ConfigurationModel {\n\t\tthis.parser.parse();\n\t\treturn this.parser.configurationModel;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: this._folderConfigurations.keys().reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, values(keys)]));\n\treturn { keys: values(keysSet), overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = values(keysSet);\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationChangeEvent, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { RunOnceScheduler } from 'vs/base/common/async';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\t_serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\t_serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn JSON.parse(buffer.toString());\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope } from 'vs/platform/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { isUUID, generateUuid } from 'vs/base/common/uuid';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<string | null> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\tif (environmentService.serviceMachineIdResource) {\n\t\ttry {\n\t\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\t\tconst value = contents.value.toString();\n\t\t\tuuid = isUUID(value) ? value : null;\n\t\t} catch (e) {\n\t\t\tuuid = null;\n\t\t}\n\n\t\tif (!uuid) {\n\t\t\tuuid = generateUuid();\n\t\t\ttry {\n\t\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t\t} catch (error) {\n\t\t\t\t//noop\n\t\t\t}\n\t\t}\n\t}\n\tif (uuid && storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\t_serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tremoveItem(key: string): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileSync, readFile } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\t_serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\tNONE = 0,\n\tSHUTDOWN = 1\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IWorkspaceStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be converted to a string.\n\t * Storing either undefined or null will remove the entry under the key.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the onWillSaveState to ask\n\t * everyone for latest state.\n\t */\n\tflush(): void;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport interface IWorkspaceStorageChangeEvent {\n\treadonly key: string;\n\treadonly scope: StorageScope;\n}\n\nexport class InMemoryStorageService extends Disposable implements IStorageService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<IWorkspaceStorageChangeEvent>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprotected readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate readonly globalCache = new Map<string, string>();\n\tprivate readonly workspaceCache = new Map<string, string>();\n\n\tprivate getCache(scope: StorageScope): Map<string, string> {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalCache : this.workspaceCache;\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.remove(key, scope);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.getCache(scope).get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// Update in cache\n\t\tthis.getCache(scope).set(key, valueStr);\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tremove(key: string, scope: StorageScope): Promise<void> {\n\t\tconst wasDeleted = this.getCache(scope).delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn Promise.resolve(); // Return early if value already deleted\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tlogStorage(): void {\n\t\tlogStorage(this.globalCache, this.workspaceCache, 'inMemory', 'inMemory');\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n\n\tflush(): void {\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLog2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error, true);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from '../common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tisOptedIn: boolean;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\nexport const trueMachineIdKey = 'telemetry.trueMachineId';\nexport const crashReporterIdStorageKey = 'crashReporter.guid';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { values } from 'vs/base/common/map';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.map(value => ({ filterType, value }))\n\t\t];\n\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy }));\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query(assign({}, this.state, { sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query(assign({}, this.state, { assetTypes }));\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w\\.]+))(:(//)?)([\\w\\.@\\:/\\-~]+)(\\.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = require.toUrl('./media/defaultIcon.png');\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\t_serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn Promise.resolve(extension);\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None)\n\t\t\t.then(({ galleryExtensions }) => {\n\t\t\t\tconst [rawExtension] = galleryExtensions;\n\t\t\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (version) {\n\t\t\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\t\t\tif (versionAsset) {\n\t\t\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\t\t\treturn extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n\t\t\t\t\t.then(rawVersion => {\n\t\t\t\t\t\tif (rawVersion) {\n\t\t\t\t\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\ttype GalleryServiceQueryClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\ttext: { classification: 'CustomerContent', purpose: 'FeatureInsight' };\n\t\t};\n\t\ttype GalleryServiceQueryEvent = {\n\t\t\ttype: string;\n\t\t\ttext: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\treturn this.queryGallery(query, token).then(({ galleryExtensions, total }) => {\n\t\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\t\tconst pageSize = query.pageSize;\n\t\t\tconst getPage = (pageIndex: number, ct: CancellationToken) => {\n\t\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\t\treturn Promise.reject(canceled());\n\t\t\t\t}\n\n\t\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\t\treturn this.queryGallery(nextPageQuery, ct)\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source)));\n\t\t\t};\n\n\t\t\treturn { firstPage: extensions, total, pageSize, getPage } as IPager<IGalleryExtension>;\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst data = JSON.stringify(query.raw);\n\t\t\tconst headers = assign({}, commonHeaders, {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t\t'Content-Length': data.length\n\t\t\t});\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token).then(context => {\n\n\t\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t}\n\n\t\t\t\treturn asJson<IRawGalleryQueryResult>(context).then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst r = result.results[0];\n\t\t\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\t\t\treturn { galleryExtensions, total };\n\t\t\t\t\t}\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None).then(undefined, () => undefined);\n\t\t});\n\t}\n\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<URI> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst zip = joinPath(location, generateUuid());\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', assign(data, { duration }));\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\treturn this.getAsset(downloadAsset)\n\t\t\t.then(context => this.fileService.writeFile(zip, context.stream))\n\t\t\t.then(() => log(new Date().getTime() - startTime))\n\t\t\t.then(() => zip);\n\t}\n\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\treturn this.getAsset(extension.assets.readme, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\treturn this.getAsset(extension.assets.manifest, {}, token)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\treturn this.getAsset(asset[1])\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\treturn this.getAsset(extension.assets.changelog, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions }) => {\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tif (compatible) {\n\t\t\t\t\treturn Promise.all(galleryExtensions[0].versions.map(v => this.getEngine(v).then(engine => isEngineValid(engine, this.productService.version) ? v : null)))\n\t\t\t\t\t\t.then(versions => versions\n\t\t\t\t\t\t\t.filter(v => !!v)\n\t\t\t\t\t\t\t.map(v => ({ version: v!.version, date: v!.lastUpdated })));\n\t\t\t\t} else {\n\t\t\t\t\treturn galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated }));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tprivate getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst baseOptions = { type: 'GET' };\n\t\t\tconst headers = assign({}, commonHeaders, options.headers || {});\n\t\t\toptions = assign({}, options, baseOptions, { headers });\n\n\t\t\tconst url = asset.uri;\n\t\t\tconst fallbackUrl = asset.fallbackUri;\n\t\t\tconst firstOptions = assign({}, options, { url });\n\n\t\t\treturn this.requestService.request(firstOptions, token)\n\t\t\t\t.then(context => {\n\t\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\t\treturn Promise.resolve(context);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn asText(context)\n\t\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t\t})\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\t\t\turl: string;\n\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t};\n\t\t\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\t\t\tconst fallbackOptions = assign({}, options, { url: fallbackUrl });\n\t\t\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion> | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn Promise.resolve(version);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn Promise.resolve(engine);\n\t\t}\n\n\t\tconst manifest = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\treturn this.getAsset(manifest, { headers })\n\t\t\t.then(context => asJson<IExtensionManifest>(context))\n\t\t\t.then(manifest => manifest ? manifest.engines.vscode : Promise.reject<string>('Error while reading manifest'));\n\t}\n\n\tprivate getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.getEngine(version)\n\t\t\t.then(engine => {\n\t\t\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\tversion.properties = version.properties || [];\n\t\t\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None).then(context => {\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn Promise.reject(new Error('Could not get extensions report.'));\n\t\t\t}\n\n\t\t\treturn asJson<IRawExtensionsReport>(context).then(result => {\n\t\t\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const id of result.malicious) {\n\t\t\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\t\t\text.malicious = true;\n\t\t\t\t\t\tmap.set(id, ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(values(map));\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\tif (uuid) {\n\t\theaders['X-Market-User-Id'] = uuid;\n\t}\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n\ttrueMachineId?: string;\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\t_serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\n\t\t\t\tif (config.trueMachineId) {\n\t\t\t\t\ttype MachineIdDisambiguationClassification = {\n\t\t\t\t\t\tcorrectedMachineId: { endPoint: 'MacAddressHash', classification: 'EndUserPseudonymizedInformation', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\tthis.publicLog2<{ correctedMachineId: string }, MachineIdDisambiguationClassification>('machineIdDisambiguation', { correctedMachineId: config.trueMachineId });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\t_serviceBrand: undefined;\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promise.all(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData: { [key: string]: any } = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\t// Whitelisted remote authorities\n\t['ssh-remote', 'dev-container', 'attached-container', 'wsl'].forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t\t@ILogService private _logService?: ILogService\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tif (this._logService) {\n\t\t\tthis._logService.trace(`telemetry/${eventName}`, data);\n\t\t}\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport async function resolveCommonProperties(\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\ttry {\n\t\tconst contents = await readFile(installSourcePath, 'utf8');\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tif (!process || !process.env || !process.env['USERDNSDOMAIN']) {\n\t\treturn false;\n\t}\n\n\tconst domain = process.env['USERDNSDOMAIN']!.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}","import { ReadWriteConnection } from '@coder/node-browser';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const INodeProxyService = createDecorator<INodeProxyService>('nodeProxyService');\n\nexport interface INodeProxyService extends ReadWriteConnection {\n\t_serviceBrand: any;\n\tsend(message: string): void;\n\tonMessage: Event<string>;\n\tonUp: Event<void>;\n\tonClose: Event<void>;\n\tonDown: Event<void>;\n}\n\nexport class NodeProxyChannel implements IServerChannel {\n\tconstructor(private service: INodeProxyService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onMessage': return this.service.onMessage;\n\t\t}\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'send': return this.service.send(args[0]);\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class NodeProxyChannelClient {\n\t_serviceBrand: any;\n\n\tpublic readonly onMessage: Event<string>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.onMessage = this.channel.listen<string>('onMessage');\n\t}\n\n\tpublic send(data: string): void {\n\t\tthis.channel.call('send', [data]);\n\t}\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic get isOptedIn(): boolean {\n\t\treturn true;\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(getPathFromAmdModule(require, ''), 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import * as cp from 'child_process';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tpublic constructor(protected protocol: Protocol, public readonly token: string) {}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(socket, buffer);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(socket: ISocket, buffer: VSBuffer): void;\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protected protocol: Protocol, token: string) {\n\t\tsuper(protocol, token);\n\t\tprotocol.onClose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tthis.protocol.getSocket().end();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis.protocol.beginAcceptReconnection(socket, buffer);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\n\tpublic constructor(\n\t\tlocale:string, protocol: Protocol, buffer: VSBuffer, token: string,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly environment: IEnvironmentService,\n\t) {\n\t\tsuper(protocol, token);\n\t\tthis.protocol.dispose();\n\t\tthis.spawn(locale, buffer).then((p) => this.process = p);\n\t\tthis.protocol.getUnderlyingSocket().pause();\n\t}\n\n\tprotected doDispose(): void {\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t\tthis.protocol.getSocket().end();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\t// This is just to set the new socket.\n\t\tthis.protocol.beginAcceptReconnection(socket, null);\n\t\tthis.protocol.dispose();\n\t\tthis.sendInitMessage(buffer);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer): void {\n\t\tconst socket = this.protocol.getUnderlyingSocket();\n\t\tsocket.pause();\n\t\tthis.process!.send({ // Process must be set at this point.\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (buffer.buffer as Buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.getSocket() instanceof NodeSocket,\n\t\t}, socket);\n\t}\n\n\tprivate async spawn(locale: string, buffer: VSBuffer): Promise<cp.ChildProcess> {\n\t\tconst config = await getNlsConfiguration(locale, this.environment.userDataPath);\n\t\tconst proc = cp.fork(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t[ '--type=extensionHost' ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: process.env.LOG_LEVEL,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', () => this.dispose());\n\t\tproc.on('exit', () => this.dispose());\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.log.info('Extension host stdout', d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.log.error('Extension host stderr', d));\n\t\t}\n\t\tproc.on('message', (event) => {\n\t\t\tif (event && event.type === '__$console') {\n\t\t\t\tconst severity = (<any>this.log)[event.severity] ? event.severity : 'info';\n\t\t\t\t(<any>this.log)[severity]('Extension host', event.arguments);\n\t\t\t}\n\t\t\tif (event && event.type === 'VSCODE_EXTHOST_DISCONNECTED') {\n\t\t\t\tthis.setOffline();\n\t\t\t}\n\t\t});\n\n\t\tconst listen = (message: IExtHostReadyMessage) => {\n\t\t\tif (message.type === 'VSCODE_EXTHOST_IPC_READY') {\n\t\t\t\tproc.removeListener('message', listen);\n\t\t\t\tthis.sendInitMessage(buffer);\n\t\t\t}\n\t\t};\n\n\t\treturn proc.on('message', listen);\n\t}\n}\n","import * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport interface SocketOptions {\n\treadonly reconnectionToken: string;\n\treadonly reconnection: boolean;\n\treadonly skipWebSocketFrames: boolean;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(new NodeSocket(socket)),\n\t\t);\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst message = JSON.parse(rawMessage.toString());\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth': return this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\thandler.dispose();\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault: throw new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler.dispose();\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_message: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host, it just sends\n\t * back a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n}\n","import { URITransformer } from 'vs/base/common/uriIpc';\n\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\treturn new URITransformer(remoteAuthority);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split(\"/\").map((p) => encodeURIComponent(p)).join(\"/\");\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn pfs.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = json.parse(manifestContents.toString(), errors);\n\t\t\tif (errors.length === 0 && json.getNodeType(manifest) === 'object') {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = pfs.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.fileExists(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn pfs.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tpfs.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.fileExists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tlet normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\n\t\t\t\tif (normalizedAbsolutePath.indexOf(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly tanslations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.tanslations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.tanslations, b.tanslations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await pfs.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.fileExists(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { Server } from '@coder/node-browser';\nimport * as path from 'path';\nimport { VSBuffer, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { OS } from 'vs/base/common/platform';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { createReadStream } from 'vs/platform/files/common/io';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INodeProxyService } from 'vs/server/common/nodeProxy';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tlet fileStream: VSBufferReadableStream | undefined;\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tif (!fileStream) {\n\t\t\t\t\tfileStream = createReadStream(this.provider, this.transform(resource), {\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tbufferSize: 64 * 1024, // From DiskFileSystemProvider\n\t\t\t\t\t});\n\t\t\t\t\tfileStream.on('data', (data) => emitter.fire(data));\n\t\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t\t}\n\t\t\t},\n\t\t\tonLastListenerRemove: () => fileStream && fileStream.destroy(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: IEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(locale: string): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tappSettingsHome: this.environment.appSettingsHome,\n\t\t\tsettingsPath: this.environment.machineSettingsResource,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: URI.file(this.environment.globalStorageHome),\n\t\t\tuserHome: URI.file(this.environment.userHome),\n\t\t\textensions: await this.scanExtensions(locale),\n\t\t\tos: OS,\n\t\t};\n\t}\n\n\tprivate async scanExtensions(locale: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(locale, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlocale,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, extension);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n}\n\nexport class NodeProxyService implements INodeProxyService {\n\tpublic _serviceBrand = undefined;\n\n\tpublic readonly server: Server;\n\n\tprivate readonly _onMessage = new Emitter<string>();\n\tpublic readonly onMessage = this._onMessage.event;\n\tprivate readonly _$onMessage = new Emitter<string>();\n\tpublic readonly $onMessage = this._$onMessage.event;\n\tpublic readonly _onDown = new Emitter<void>();\n\tpublic readonly onDown = this._onDown.event;\n\tpublic readonly _onUp = new Emitter<void>();\n\tpublic readonly onUp = this._onUp.event;\n\n\t// Unused because the server connection will never permanently close.\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\n\tpublic constructor() {\n\t\t// TODO: down/up\n\t\tthis.server = new Server({\n\t\t\tonMessage: this.$onMessage,\n\t\t\tonClose: this.onClose,\n\t\t\tonDown: this.onDown,\n\t\t\tonUp: this.onUp,\n\t\t\tsend: (message: string): void => {\n\t\t\t\tthis._onMessage.fire(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic send(message: string): void {\n\t\tthis._$onMessage.fire(message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\tprivate readonly channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities!: FileSystemProviderCapabilities;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper();\n\n\t\tconst connection = remoteAgentService.getConnection()!;\n\t\tthis.channel = connection.getChannel<IChannel>(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\tthis.setCaseSensitive(true);\n\t\tremoteAgentService.getEnvironment().then(remoteAgentEnvironment => this.setCaseSensitive(!!(remoteAgentEnvironment && remoteAgentEnvironment.os === OperatingSystem.Linux)));\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(error);\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\tif (token) {\n\t\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t\t// Ensure to end the stream properly with an error\n\t\t\t\t// to indicate the cancellation.\n\t\t\t\tstream.end(canceled());\n\n\t\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t\t// reading the file.\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistenConnectionEvent as PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\t_serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\tgetEnvironment(bail?: boolean): Promise<IRemoteAgentEnvironment | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(zipfile);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(stream);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { flatten, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { extract, ExtractError, zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, groupByExtension, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion, parseBuiltInExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localizeManifest } from '../common/extensionNls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Limiter, createCancelablePromise, CancelablePromise, Queue } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'semver-umd';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst ERROR_UNKNOWN = 'unknown';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nfunction parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\treturn new Promise((c, e) => {\n\t\ttry {\n\t\t\tconst manifest = JSON.parse(raw);\n\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\tdelete manifest.__metadata;\n\t\t\tc({ manifest, metadata });\n\t\t} catch (err) {\n\t\t\te(new Error(nls.localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t}\n\t});\n}\n\nfunction readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\tconst promises = [\n\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t.then(raw => parseManifest(raw)),\n\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t.then(raw => JSON.parse(raw))\n\t];\n\n\treturn Promise.all(promises).then(([{ manifest, metadata }, translations]) => {\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t});\n}\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata: IGalleryMetadata | null;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\t_serviceBrand: undefined;\n\n\tprivate systemExtensionsPath: string;\n\tprivate extensionsPath: string;\n\tprivate uninstalledPath: string;\n\tprivate uninstalledFileLimiter: Queue<any>;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions: Map<string, CancelablePromise<ILocalExtension>> = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionLifecycle: ExtensionsLifecycle;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath!;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionLifecycle = this._register(new ExtensionsLifecycle(environmentService, this.logService));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\treturn this.collectFiles(extension)\n\t\t\t.then(files => zip(path.join(tmpdir(), generateUuid()), files))\n\t\t\t.then<URI>(path => URI.file(path));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\treturn this.install(zipLocation, type).then(local => local.identifier);\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn collectFilesFromDirectory(extension.location.fsPath)\n\t\t\t.then(files => files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f })));\n\n\t}\n\n\tinstall(vsix: URI, type: ExtensionType = ExtensionType.User): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(token => {\n\t\t\treturn this.downloadVsix(vsix).then(downloadLocation => {\n\t\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t.then(manifest => {\n\t\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\t\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\t\t\t\treturn Promise.reject(new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version)));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t\t\t\t\t.then(installedExtensions => {\n\t\t\t\t\t\t\t\tconst existing = installedExtensions.filter(i => areSameExtensions(identifier, i.identifier))[0];\n\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\t\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\t\t\t\t\t\treturn this.uninstall(existing, true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t\t\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\t\t\t\t\t\treturn this.unsetUninstalledAndGetLocal(identifierWithVersion)\n\t\t\t\t\t\t\t\t\t\t.then(existing => {\n\t\t\t\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\t\t\t\t\t\t\t\treturn this.getMetadata(getGalleryExtensionId(manifest.publisher, manifest.name))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tmetadata => this.installFromZipPath(identifierWithVersion, zipPath, metadata, type, operation, token),\n\t\t\t\t\t\t\t\t\t\t() => this.installFromZipPath(identifierWithVersion, zipPath, null, type, operation, token))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tlocal => { this.logService.info('Successfully installed the extension:', identifier.id); return local; },\n\t\t\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn Promise.resolve(vsix);\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\t\tconst downloadedLocation = path.join(tmpdir(), generateUuid());\n\t\treturn this.downloadService.download(vsix, URI.file(downloadedLocation)).then(() => URI.file(downloadedLocation));\n\t}\n\n\tprivate installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IGalleryMetadata | null, type: ExtensionType, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.toNonCancellablePromise(this.installExtension({ zipPath, identifierWithVersion, metadata }, type, token)\n\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, null)\n\t\t\t\t.then(\n\t\t\t\t\t() => local,\n\t\t\t\t\terror => {\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}))\n\t\t\t.then(\n\t\t\t\tlocal => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, local, operation }); return local; },\n\t\t\t\terror => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, operation, error }); return Promise.reject(error); }\n\t\t\t));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\tconst startTime = new Date().getTime();\n\n\t\tconst onDidInstallExtensionSuccess = (extension: IGalleryExtension, operation: InstallOperation, local: ILocalExtension) => {\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t};\n\n\t\tconst onDidInstallExtensionFailure = (extension: IGalleryExtension, operation: InstallOperation, error: Error) => {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tonDidInstallExtensionFailure(extension, InstallOperation.Install, error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\n\t\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tlet cancellationToken: CancellationToken, successCallback: (local: ILocalExtension) => void, errorCallback: (e?: any) => any | null;\n\t\t\tcancellablePromise = createCancelablePromise(token => { cancellationToken = token; return new Promise((c, e) => { successCallback = c; errorCallback = e; }); });\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\ttry {\n\t\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\t\tconst existingExtension = installed.filter(i => areSameExtensions(i.identifier, extension.identifier))[0];\n\t\t\t\tif (existingExtension) {\n\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t}\n\n\t\t\t\tthis.downloadInstallableExtension(extension, operation)\n\t\t\t\t\t.then(installableExtension => this.installExtension(installableExtension, ExtensionType.User, cancellationToken)\n\t\t\t\t\t\t.then(local => pfs.rimraf(installableExtension.zipPath).finally(() => { }).then(() => local)))\n\t\t\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, existingExtension)\n\t\t\t\t\t\t.then(() => local, error => this.uninstall(local, true).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t\t\t.then(\n\t\t\t\t\t\tasync local => {\n\t\t\t\t\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\t\t\t\t\tawait this.setUninstalled(existingExtension);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionSuccess(extension, operation, local);\n\t\t\t\t\t\t\tsuccessCallback(local);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t});\n\n\t\t\t} catch (error) {\n\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS));\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\n\t\tif (!compatibleExtension) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE));\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\treturn this.findGalleryExtension(extension)\n\t\t\t.then(galleryExtension => {\n\t\t\t\tif (galleryExtension) {\n\t\t\t\t\treturn this.setUninstalled(extension)\n\t\t\t\t\t\t.then(() => this.removeUninstalledExtension(extension)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t() => this.installFromGallery(galleryExtension).then(),\n\t\t\t\t\t\t\t\te => Promise.reject(new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e))))));\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\")));\n\t\t\t});\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.getExtensionsReport()\n\t\t\t.then(report => getMaliciousExtensionsSet(report).has(extension.identifier.id));\n\t}\n\n\tprivate downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<InstallableExtension> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\treturn this.galleryService.download(extension, URI.file(tmpdir()), operation)\n\t\t\t.then(\n\t\t\t\tzip => {\n\t\t\t\t\tconst zipPath = zip.fsPath;\n\t\t\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tmanifest => (<InstallableExtension>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata }),\n\t\t\t\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING))\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING)));\n\t}\n\n\tprivate installExtension(installableExtension: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion)\n\t\t\t.then(\n\t\t\t\tlocal => {\n\t\t\t\t\tif (local) {\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.extractAndInstall(installableExtension, type, token);\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t});\n\t}\n\n\tprivate unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\treturn this.isUninstalled(identifierWithVersion)\n\t\t\t.then<ILocalExtension | null>(isUninstalled => {\n\t\t\t\tif (isUninstalled) {\n\t\t\t\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\t\t\t\treturn this.unsetUninstalled(identifierWithVersion)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(installed => installed.filter(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion))[0]);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tconst location = type === ExtensionType.User ? this.extensionsPath : this.systemExtensionsPath;\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(location, `.${folderName}`);\n\t\tconst extensionPath = path.join(location, folderName);\n\t\treturn pfs.rimraf(extensionPath)\n\t\t\t.then(() => this.extractAndRename(identifier, zipPath, tempPath, extensionPath, token), e => Promise.reject(new ExtensionManagementError(nls.localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifier.id), INSTALL_ERROR_DELETING)))\n\t\t\t.then(() => this.scanExtension(folderName, location, type))\n\t\t\t.then(local => {\n\t\t\t\tif (!local) {\n\t\t\t\t\treturn Promise.reject(nls.localize('cannot read', \"Cannot read the extension from {0}\", location));\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Installation completed.', identifier.id);\n\t\t\t\tif (metadata) {\n\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\treturn this.saveMetadataForLocalExtension(local);\n\t\t\t\t}\n\t\t\t\treturn local;\n\t\t\t}, error => pfs.rimraf(extensionPath).then(() => Promise.reject(error), () => Promise.reject(error)));\n\t}\n\n\tprivate extractAndRename(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, renamePath: string, token: CancellationToken): Promise<void> {\n\t\treturn this.extract(identifier, zipPath, extractPath, token)\n\t\t\t.then(() => this.rename(identifier, extractPath, renamePath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */)\n\t\t\t\t.then(\n\t\t\t\t\t() => this.logService.info('Renamed to', renamePath),\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', extractPath);\n\t\t\t\t\t\treturn pfs.rimraf(extractPath).finally(() => { }).then(() => Promise.reject(e));\n\t\t\t\t\t}));\n\t}\n\n\tprivate extract(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${extractPath}`);\n\t\treturn pfs.rimraf(extractPath)\n\t\t\t.then(\n\t\t\t\t() => extract(zipPath, extractPath, { sourcePath: 'extension', overwrite: true }, token)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t() => this.logService.info(`Extracted extension to ${extractPath}:`, identifier.id),\n\t\t\t\t\t\te => pfs.rimraf(extractPath).finally(() => { })\n\t\t\t\t\t\t\t.then(() => Promise.reject(new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING)))),\n\t\t\t\te => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING)));\n\t}\n\n\tprivate rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\treturn pfs.rename(extractPath, renamePath)\n\t\t\t.then(undefined, error => {\n\t\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new ExtensionManagementError(error.message || nls.localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING));\n\t\t\t});\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | null): Promise<void> {\n\t\tif (this.galleryService.isEnabled()) {\n\t\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\t\tif (installed.manifest.extensionPack) {\n\t\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\treturn this.getInstalled()\n\t\t\t\t\t.then(installed => {\n\t\t\t\t\t\t// filter out installed extensions\n\t\t\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\t\t\tif (names.length) {\n\t\t\t\t\t\t\treturn this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None)\n\t\t\t\t\t\t\t\t.then(galleryResult => {\n\t\t\t\t\t\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\t\t\t\t\t\treturn Promise.all(extensionsToInstall.map(e => this.installFromGallery(e)))\n\t\t\t\t\t\t\t\t\t\t.then(undefined, errors => this.rollback(extensionsToInstall).then(() => Promise.reject(errors), () => Promise.reject(errors)));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed =>\n\t\t\t\tPromise.all(installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))) // Check with version because we want to rollback the exact version\n\t\t\t\t\t.map(local => this.uninstall(local, true))))\n\t\t\t.then(() => undefined, () => undefined);\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.toNonCancellablePromise(this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => {\n\t\t\t\tconst extensionToUninstall = installed.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\t\tif (extensionToUninstall) {\n\t\t\t\t\treturn this.checkForDependenciesAndUninstall(extensionToUninstall, installed).then(undefined, error => Promise.reject(this.joinErrors(error)));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name)));\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal.metadata = metadata;\n\t\treturn this.saveMetadataForLocalExtension(local)\n\t\t\t.then(localExtension => {\n\t\t\t\tthis.manifestCache.invalidate();\n\t\t\t\treturn localExtension;\n\t\t\t});\n\t}\n\n\tprivate saveMetadataForLocalExtension(local: ILocalExtension): Promise<ILocalExtension> {\n\t\tif (!local.metadata) {\n\t\t\treturn Promise.resolve(local);\n\t\t}\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\treturn pfs.readFile(manifestPath, 'utf8')\n\t\t\t.then(raw => parseManifest(raw))\n\t\t\t.then(({ manifest }) => assign(manifest, { __metadata: local.metadata }))\n\t\t\t.then(manifest => pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t')))\n\t\t\t.then(() => local);\n\t}\n\n\tprivate getMetadata(extensionName: string): Promise<IGalleryMetadata | null> {\n\t\treturn this.findGalleryExtensionByName(extensionName)\n\t\t\t.then(galleryExtension => galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : null);\n\t}\n\n\tprivate findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\treturn this.findGalleryExtensionById(local.identifier.uuid)\n\t\t\t\t.then(galleryExtension => galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id));\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tif (packedExtensions.length) {\n\t\t\t\t\treturn this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t\t}\n\t\t\t\treturn this.uninstallExtensions(extension, [], installed);\n\t\t\t})\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extension !== dependent && otherExtensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, remainingDependents)));\n\t\t\t}\n\t\t}\n\t\treturn Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]).then(() => undefined);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate doUninstall(extension: ILocalExtension): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => this.uninstallExtension(extension))\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(pfs.exists(extension.location.fsPath))\n\t\t\t.then(exists => exists ? null : Promise.reject(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => {\n\t\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\t});\n\t}\n\n\tprivate uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(token => this.scanUserExtensions(false)\n\t\t\t\t.then(userExtensions => this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier))))\n\t\t\t\t.then(() => { this.uninstallingExtensions.delete(local.identifier.id); }));\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\treturn Promise.all<ILocalExtension[]>(promises).then(flatten, errors => Promise.reject(this.joinErrors(errors)));\n\t}\n\n\tprivate scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = Promise.all([\n\t\t\tthis.scanExtensions(this.systemExtensionsPath, ExtensionType.System),\n\t\t\t...this.environmentService.extraBuiltinExtensionPaths\n\t\t\t\t.map((path) => this.scanExtensions(path, ExtensionType.System))\n\t\t]).then((results) => {\n\t\t\tconst result = results.reduce((flat, current) => flat.concat(current), []);\n\t\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\t\treturn result;\n\t\t});\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.getDevSystemExtensionsList()\n\t\t\t.then(devSystemExtensionsList => {\n\t\t\t\tif (devSystemExtensionsList.length) {\n\t\t\t\t\treturn this.scanExtensions(this.devSystemExtensionsPath, ExtensionType.System)\n\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\t\t\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t});\n\t\treturn Promise.all([systemExtensionsPromise, devSystemExtensionsPromise])\n\t\t\t.then(([systemExtensions, devSystemExtensions]) => [...systemExtensions, ...devSystemExtensions]);\n\t}\n\n\tprivate scanAllUserExtensions(folderName: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\treturn Promise.all([\n\t\t\tthis.scanExtensions(folderName, type),\n\t\t\t...this.environmentService.extraExtensionPaths.map((p) => this.scanExtensions(p, ExtensionType.User))\n\t\t]).then((results) => results.reduce((flat, current) => flat.concat(current), []));\n\t}\n\n\tprivate scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\treturn Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User)])\n\t\t\t.then(([uninstalled, extensions]) => {\n\t\t\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\t\t\tif (excludeOutdated) {\n\t\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t\t\t}\n\t\t\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\t\t\treturn extensions;\n\t\t\t});\n\t}\n\n\tprivate scanExtensions(root: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\treturn pfs.readdir(root)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn <string[]>[];\n\t\t\t})\n\t\t\t.then(extensionsFolders => Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, root, type)))))\n\t\t\t.then(extensions => extensions.filter(e => e && e.identifier));\n\t}\n\n\tprivate scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\treturn pfs.readdir(extensionPath)\n\t\t\t.then(children => readManifest(extensionPath)\n\t\t\t\t.then(({ manifest, metadata }) => {\n\t\t\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : null;\n\t\t\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : null;\n\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, metadata, location: URI.file(extensionPath), readmeUrl, changelogUrl };\n\t\t\t\t\tif (metadata) {\n\t\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\t}\n\t\t\t\t\treturn local;\n\t\t\t\t}))\n\t\t\t.then(undefined, () => null);\n\t}\n\n\tprivate setMetadata(local: ILocalExtension, metadata: IGalleryMetadata): void {\n\t\tlocal.metadata = metadata;\n\t\tlocal.identifier.uuid = metadata.id;\n\t}\n\n\tasync removeDeprecatedExtensions(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promise.all(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.extensionLifecycle.postUninstall(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promise.all(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate removeOutdatedExtensions(): Promise<void> {\n\t\treturn this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User) // All user extensions\n\t\t\t.then(extensions => {\n\t\t\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t\t\t// Outdated extensions\n\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\t\t\treturn Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t\t\t}).then(() => undefined);\n\t}\n\n\tprivate removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn this.removeExtension(extension, 'uninstalled')\n\t\t\t.then(() => this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]))\n\t\t\t.then(() => undefined);\n\t}\n\n\tprivate removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\treturn pfs.rimraf(extension.location.fsPath).then(() => this.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath));\n\t}\n\n\tprivate isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\treturn this.filterUninstalled(identifier).then(uninstalled => uninstalled.length === 1);\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.withUninstalledExtensions(uninstalled => assign(uninstalled, ids.reduce((result, id) => { result[id.key()] = true; return result; }, {} as { [id: string]: boolean })));\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tprivate getUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tprivate async withUninstalledExtensions<T>(fn: (uninstalled: { [id: string]: boolean; }) => T): Promise<T> {\n\t\treturn await this.uninstalledFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.uninstalledPath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [id: string]: boolean }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(uninstalled => { result = fn(uninstalled); return uninstalled; })\n\t\t\t\t.then(uninstalled => {\n\t\t\t\t\tif (Object.keys(uninstalled).length === 0) {\n\t\t\t\t\t\treturn pfs.rimraf(this.uninstalledPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst raw = JSON.stringify(uninstalled);\n\t\t\t\t\t\treturn pfs.writeFile(this.uninstalledPath, raw);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => result);\n\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate updateReportCache(): Promise<IReportedExtension[]> {\n\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\n\t\treturn this.galleryService.getExtensionsReport()\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\t\treturn result;\n\t\t\t}, err => {\n\t\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate _devSystemExtensionsFilePath: string | null = null;\n\tprivate get devSystemExtensionsFilePath(): string {\n\t\tif (!this._devSystemExtensionsFilePath) {\n\t\t\tthis._devSystemExtensionsFilePath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'build', 'builtInExtensions.json'));\n\t\t}\n\t\treturn this._devSystemExtensionsFilePath;\n\t}\n\n\tprivate getDevSystemExtensionsList(): Promise<string[]> {\n\t\treturn pfs.readFile(this.devSystemExtensionsFilePath, 'utf8')\n\t\t\t.then(data => parseBuiltInExtensions(data, this.productService.quality).map(ext => ext.name));\n\t}\n\n\tprivate toNonCancellablePromise<T>(promise: Promise<T>): Promise<T> {\n\t\treturn new Promise((c, e) => promise.then(result => c(result), error => e(error)));\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog(eventName, assign(extensionData, { success: !error, duration, errorcode }));\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\treturn mkdirp(targetFileName).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\tawait mkdirp(targetDirName, undefined);\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\t_serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request(assign({}, options, {\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}), token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStream<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\n\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension } from 'vs/platform/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-vscode.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\n\nexport class Main {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tasync run(argv: ParsedArgs): Promise<void> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions'], argv['category']);\n\t\t} else if (argv['install-extension']) {\n\t\t\tawait this.installExtensions(argv['install-extension'], !!argv['force']);\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tawait this.uninstallExtension(argv['uninstall-extension']);\n\t\t} else if (argv['locate-extension']) {\n\t\t\tawait this.locateExtension(argv['locate-extension']);\n\t\t} else if (argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(this.environmentService.appRoot, this.environmentService.extensionsPath ? this.environmentService.extensionsPath : undefined));\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<void> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean, category?: string): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t// TODO: we should save this array in a common place so that the command and extensionQuery can use it that way changing it is easier\n\t\tconst categories = ['\"programming languages\"', 'snippets', 'linters', 'themes', 'debuggers', 'formatters', 'keymaps', '\"scm providers\"', 'other', '\"extension packs\"', '\"language packs\"'];\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\tconsole.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\tconsole.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tconsole.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tprivate async installExtensions(extensions: string[], force: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\tconsole.log(localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tfor (const extension of extensions) {\n\t\t\ttry {\n\t\t\t\tconst manifest = await this.installExtension(extension, force);\n\t\t\t\tif (manifest) {\n\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\tfailed.push(extension);\n\t\t\t}\n\t\t}\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t\treturn failed.length ? Promise.reject(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', '))) : Promise.resolve();\n\t}\n\n\tprivate async installExtension(extension: string, force: boolean): Promise<IExtensionManifest | null> {\n\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\textension = path.isAbsolute(extension) ? extension : path.join(process.cwd(), extension);\n\n\t\t\tconst manifest = await getManifest(extension);\n\t\t\tconst valid = await this.validate(manifest, force);\n\n\t\t\tif (valid) {\n\t\t\t\treturn this.extensionManagementService.install(URI.file(extension)).then(id => {\n\t\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(extension)));\n\t\t\t\t\treturn manifest;\n\t\t\t\t}, error => {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(extension)));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [id, version] = getIdAndVersion(extension);\n\t\treturn this.extensionManagementService.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => this.extensionGalleryService.getCompatibleExtension({ id }, version)\n\t\t\t\t.then<IGalleryExtension>(null, err => {\n\t\t\t\t\tif (err.responseText) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = JSON.parse(err.responseText);\n\t\t\t\t\t\t\treturn Promise.reject(response.message);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// noop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t})\n\t\t\t\t.then(async extension => {\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn Promise.reject(new Error(`${notFound(version ? `${id}@${version}` : id)}\\n${useId}`));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(extension, CancellationToken.None);\n\t\t\t\t\tconst [installedExtension] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\t\tif (installedExtension) {\n\t\t\t\t\t\tif (extension.version === installedExtension.manifest.version) {\n\t\t\t\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version && !force) {\n\t\t\t\t\t\t\tconsole.log(localize('forceUpdate', \"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.\", id, installedExtension.manifest.version, extension.version));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, extension.version));\n\t\t\t\t\t}\n\t\t\t\t\tawait this.installFromGallery(id, extension);\n\t\t\t\t\treturn manifest;\n\t\t\t\t}));\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.filter(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version))[0];\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async installFromGallery(id: string, extension: IGalleryExtension): Promise<void> {\n\t\tconsole.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, extension.version));\n\n\t\ttry {\n\t\t\tawait this.extensionManagementService.installFromGallery(extension);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, extension.version));\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async uninstallExtension(extensions: string[]): Promise<void> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst [extensionToUninstall] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\treturn Promise.reject(new Error(`${notInstalled(id)}\\n${useId}`));\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall, true);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async locateExtension(extensions: string[]): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\tconsole.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function main(argv: ParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\tconst disposables = new DisposableStore();\n\n\tconst environmentService = new EnvironmentService(argv, process.execPath);\n\tconst logService: ILogService = new SpdLogService('cli', environmentService.logsPath, getLogLevel(environmentService));\n\tprocess.once('exit', () => logService.dispose());\n\tlogService.info('main', argv);\n\n\tawait Promise.all<void | undefined>([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath]\n\t\t.map((path): undefined | Promise<void> => path ? mkdirp(path) : undefined));\n\n\t// Files\n\tconst fileService = new FileService(logService);\n\tdisposables.add(fileService);\n\tservices.set(IFileService, fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\tdisposables.add(diskFileSystemProvider);\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\tdisposables.add(configurationService);\n\tawait configurationService.initialize();\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, configurationService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst envService = accessor.get(IEnvironmentService);\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = envService;\n\n\t\tconst services = new ServiceCollection();\n\n\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (isBuilt && !extensionDevelopmentLocationURI && !envService.args['disable-telemetry'] && product.enableTelemetry) {\n\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey, logService));\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, product.version, stateService.getItem('telemetry.machineId'), product.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: extensionsPath ? [appRoot, extensionsPath] : [appRoot]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\tconst main = instantiationService2.createInstance(Main);\n\n\t\ttry {\n\t\t\tawait main.run(argv);\n\t\t\t// Flush the remaining data in AI adapter.\n\t\t\tawait combinedAppender(...appenders).flush();\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t});\n}\n","import * as net from 'net';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, IPCServer, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createChannelReceiver } from 'vs/base/parts/ipc/node/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from \"vs/code/node/cliProcessMain\";\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { getLogLevel, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel } from 'vs/platform/log/common/logIpc';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryServiceConfig, TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, LogAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { INodeProxyService, NodeProxyChannel } from 'vs/server/common/nodeProxy';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/server/ipc';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, NodeProxyService } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from \"vs/workbench/services/remote/common/remoteAgentFileSystemChannel\";\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: ParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as IEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\tconst parseUrl = (url: string): URI => {\n\t\t\t// This might be a fully-specified URL or just a path.\n\t\t\ttry {\n\t\t\t\treturn URI.parse(url, true);\n\t\t\t} catch (error) {\n\t\t\t\treturn URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\t\tauthority: options.remoteAuthority,\n\t\t\t\t\tpath: url,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t\tworkspaceProvider: {\n\t\t\t\t\tpayload: [[\"userDataPath\", environment.userDataPath]],\n\t\t\t\t},\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit: product.commit || 'development',\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.sendMessage({ type: 'error', reason: error.message });\n\t\t\tprotocol.dispose();\n\t\t\tprotocol.getSocket().dispose();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst ok = async () => {\n\t\t\t\t\treturn message.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t\t? { debugPort: await this.getDebugPort() }\n\t\t\t\t\t\t: { type: 'ok' };\n\t\t\t\t};\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tif (protocol.options.reconnection && connections.has(token)) {\n\t\t\t\t\tprotocol.sendMessage(await ok());\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tprotocol.dispose();\n\t\t\t\t\treturn connections.get(token)!.reconnect(protocol.getSocket(), buffer);\n\t\t\t\t} else if (protocol.options.reconnection || connections.has(token)) {\n\t\t\t\t\tthrow new Error(protocol.options.reconnection\n\t\t\t\t\t\t? 'Unrecognized reconnection token'\n\t\t\t\t\t\t: 'Duplicate reconnection token'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendMessage(await ok());\n\n\t\t\t\tlet connection: Connection;\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\tconnection = new ManagementConnection(protocol, token);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol, onDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t\t// TODO: Need a way to match clients with a connection. For now\n\t\t\t\t\t// dispose everything which only works because no extensions currently\n\t\t\t\t\t// utilize long-running proxies.\n\t\t\t\t\t(this.services.get(INodeProxyService) as NodeProxyService)._onUp.fire();\n\t\t\t\t\tconnection.onClose(() => (this.services.get(INodeProxyService) as NodeProxyService)._onDown.fire());\n\t\t\t\t} else {\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tmessage.args ? message.args.language : 'en',\n\t\t\t\t\t\tprotocol, buffer, token,\n\t\t\t\t\t\tthis.services.get(ILogService) as ILogService,\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as IEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => connections.delete(token));\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel: return protocol.tunnel();\n\t\t\tdefault: throw new Error('Unrecognized connection type');\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\toffline[i].dispose();\n\t\t}\n\t}\n\n\tprivate async initializeServices(args: ParsedArgs): Promise<void> {\n\t\tconst environmentService = new EnvironmentService(args, process.execPath);\n\t\tconst logService = new SpdLogService(RemoteExtensionLogFileName, environmentService.logsPath, getLogLevel(environmentService));\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LoggerChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\t\tthis.services.set(IConfigurationService, new SyncDescriptor(ConfigurationService, [environmentService.machineSettingsResource, fileService]));\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, { _serviceBrand: undefined, ...product });\n\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\n\t\tif (!environmentService.args['disable-telemetry']) {\n\t\t\tthis.services.set(ITelemetryService, new SyncDescriptor(TelemetryService, [{\n\t\t\t\tappender: combinedAppender(\n\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any, logService),\n\t\t\t\t\tnew LogAppender(logService),\n\t\t\t\t),\n\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\tproduct.commit, product.version, await getMachineId(),\n\t\t\t\t\t[], environmentService.installSourcePath, 'code-server',\n\t\t\t\t),\n\t\t\t\tpiiPaths,\n\t\t\t} as ITelemetryServiceConfig]));\n\t\t} else {\n\t\t\tthis.services.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\t\t\tthis.services.set(ILocalizationsService, instantiationService.createInstance(LocalizationsService));\n\t\t\tthis.services.set(INodeProxyService, instantiationService.createInstance(NodeProxyService));\n\n\t\t\tinstantiationService.invokeFunction(() => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\t\t\t\tconst telemetryService = this.services.get(ITelemetryService) as ITelemetryService;\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\tthis.services.get(IExtensionManagementService) as IExtensionManagementService,\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(this.services.get(IRequestService) as IRequestService));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('nodeProxy', new NodeProxyChannel(this.services.get(INodeProxyService) as INodeProxyService));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>createChannelReceiver(this.services.get(ILocalizationsService) as ILocalizationsService));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tprivate async getDebugPort(): Promise<number | undefined> {\n\t\treturn undefined;\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { CodeServerMessage, VscodeMessage } from 'vs/server/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\n\nsetUnexpectedErrorHandler((error) => logger.warn(error instanceof Error ? error.message : error));\nenableCustomMarketplace();\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"]}