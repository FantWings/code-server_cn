{"version":3,"sources":["vs/loader.js"],"names":["define","AMDLoader","CSSLoaderPlugin","_amdLoaderGlobal","this","_commonjsGlobal","global","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","length","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","result","Array","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ensureError","err","Error","message","String","stack","ConfigurationOptionsUtil","validateConfigurationOptions","options","baseUrl","isBuild","paths","config","catchError","recordStats","urlArgs","onError","phase","console","error","moduleId","neededBy","ignoreDuplicateModules","cspNonce","nodeModules","nodeCachedData","seed","writeDelay","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","i","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","len","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","NodeScriptLoader","BrowserScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","document","createElement","setAttribute","getConfig","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_init","_fs","_vm","_path","_crypto","_initNodeRequire","that","Module","_compile","content","hashData","scriptSource","wrap","recorder","getRecorder","cachedDataPath","_getCachedDataPath","data","readFileSync","slice","cachedData","_e","Script","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_handleCachedData","_verifyCachedData","opts","nodeInstrumenter","c","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","normalizedScriptSrc_1","normalize","vmScriptPathOrUri_1","_getElectronRendererScriptPathOrUri","wantsCachedData_1","Boolean","cachedDataPath_1","_readSourceAndCachedData","charCodeAt","_BOM","_PREFIX","_SUFFIX","scriptOpts","_createAndEvalScript","contents","ret","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","isElectronRenderer","driveLetterMatch","match","toUpperCase","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","unlink","_createAndWriteCachedData","timeout","ceil","random","lastSize","iteration","createLoop","setTimeout","writeFile","pow","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","readFile","encoding","hashDataNow","equals","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","r","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","warn","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","_err","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","DefineFunc","jQuery","_requireFunc_config","RequireFunc","init","_nodeRequire_1","what","doNotInitLoader","BrowserCSSLoader","_pendingLoads","name","linkNode","_insertLinkNode","head","other","insertBefore","createLinkTag","cssUrl","externalCallback","externalErrorback","_linkTagExists","nameAttr","hrefAttr","links","getAttribute","CSSPlugin","_cssLoader","req","NLSLoaderPlugin","__spreadArrays","s","il","k","jl","_isPseudo","location","_format","rest","index","arg","isPseudo","localize","createScopedLocalize","scope","idx","defaultValue","restArgs","NLSPlugin","setPseudoTranslation","pluginConfig","language","availableLanguages","findLanguageForModule","suffix","DEFAULT_TAG","messagesLoaded_1","messages","loadBundle"],"mappings":"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","file":"loader.js","sourcesContent":["/*!--------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = /** @class */ (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = /** @class */ (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = /** @class */ (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n        return NullLoaderEventRecorder;\n    }());\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = /** @class */ (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object') {\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        Utilities.NEXT_ANONYMOUS_ID = 1;\n        Utilities.PERFORMANCE_NOW_PROBED = false;\n        Utilities.HAS_PERFORMANCE_NOW = false;\n        return Utilities;\n    }());\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    function ensureError(err) {\n        if (err instanceof Error) {\n            return err;\n        }\n        var result = new Error(err.message || String(err) || 'Unknown Error');\n        if (err.stack) {\n            result.stack = err.stack;\n        }\n        return result;\n    }\n    AMDLoader.ensureError = ensureError;\n    ;\n    var ConfigurationOptionsUtil = /** @class */ (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.phase === 'loading') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error(err);\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.phase === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err);\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.recordStats === 'undefined') {\n                options.recordStats = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n                    err.phase = 'configuration';\n                    options.onError(err);\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = /** @class */ (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            if (this.nodeModulesMap[moduleId] === true) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = /** @class */ (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                this._scriptLoader = (this._env.isWebWorker\n                    ? new WorkerScriptLoader()\n                    : this._env.isNode\n                        ? new NodeScriptLoader(this._env)\n                        : new BrowserScriptLoader());\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = /** @class */ (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var script = document.createElement('script');\n            script.setAttribute('async', 'async');\n            script.setAttribute('type', 'text/javascript');\n            this.attachListeners(script, callback, errorback);\n            script.setAttribute('src', scriptSrc);\n            // Propagate CSP nonce to dynamically created script tag.\n            var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n            if (cspNonce) {\n                script.setAttribute('nonce', cspNonce);\n            }\n            document.getElementsByTagName('head')[0].appendChild(script);\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = /** @class */ (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = /** @class */ (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData) {\n                return;\n            }\n            if (this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request) {\n                    return Module._resolveFilename(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang and create wrapper function\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n                // create script\n                var recorder = moduleManager.getRecorder();\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n                var options = { filename: filename };\n                var hashData;\n                try {\n                    var data = that._fs.readFileSync(cachedDataPath);\n                    hashData = data.slice(0, 16);\n                    options.cachedData = data.slice(16);\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                }\n                catch (_e) {\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                }\n                var script = new that._vm.Script(scriptSource, options);\n                var compileWrapper = script.runInThisContext(options);\n                // run script\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                // cached data aftermath\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var scriptSource;\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n                    }\n                    else {\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n                    }\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData, moduleManager);\n                });\n            }\n        };\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\n            var recorder = moduleManager.getRecorder();\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\n            var script = new this._vm.Script(contents, options);\n            var ret = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\n            if (!this._env.isElectronRenderer) {\n                return path;\n            }\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n            if (driveLetterMatch) {\n                // windows\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n            }\n            else {\n                // nix\n                return \"file://\" + path;\n            }\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // cached data got rejected -> delete and re-create\n                this._fs.unlink(cachedDataPath, function (err) {\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n                    if (err) {\n                        moduleManager.getConfig().onError(err);\n                    }\n                });\n            }\n            else if (createCachedData) {\n                // no cached data, but wanted\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n            }\n        };\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n        // -V8_CACHED_DATA is what v8 produces\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\n            var _this = this;\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n            var lastSize = -1;\n            var iteration = 0;\n            var hashData = undefined;\n            var createLoop = function () {\n                setTimeout(function () {\n                    if (!hashData) {\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                    }\n                    var cachedData = script.createCachedData();\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n                        return;\n                    }\n                    lastSize = cachedData.length;\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\n                        createLoop();\n                    });\n                }, timeout * (Math.pow(4, iteration++)));\n            };\n            // with some delay (`timeout`) create cached data\n            // and repeat that (with backoff delay) until the\n            // data seems to be not changing anymore\n            createLoop();\n        };\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\n            if (!cachedDataPath) {\n                // no cached data case\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n            }\n            else {\n                // cached data case: read both files in parallel\n                var source_1 = undefined;\n                var cachedData_1 = undefined;\n                var hashData_1 = undefined;\n                var steps_1 = 2;\n                var step_1 = function (err) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else if (--steps_1 === 0) {\n                        callback(undefined, source_1, cachedData_1, hashData_1);\n                    }\n                };\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\n                    source_1 = data;\n                    step_1(err);\n                });\n                this._fs.readFile(cachedDataPath, function (err, data) {\n                    if (!err && data && data.length > 0) {\n                        hashData_1 = data.slice(0, 16);\n                        cachedData_1 = data.slice(16);\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                    }\n                    else {\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                    }\n                    step_1(); // ignored: cached data is optional\n                });\n            }\n        };\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData, moduleManager) {\n            var _this = this;\n            if (!hashData) {\n                // nothing to do\n                return;\n            }\n            if (script.cachedDataRejected) {\n                // invalid anyways\n                return;\n            }\n            setTimeout(function () {\n                // check source hash - the contract is that file paths change when file content\n                // change (e.g use the commit or version id as cache path). this check is\n                // for violations of this contract.\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                if (!hashData.equals(hashDataNow)) {\n                    moduleManager.getConfig().onError(new Error(\"FAILED TO VERIFY CACHED DATA, deleting stale '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\"));\n                    _this._fs.unlink(cachedDataPath, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                    });\n                }\n            }, Math.ceil(5000 * (1 + Math.random())));\n        };\n        NodeScriptLoader._BOM = 0xFEFF;\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n        NodeScriptLoader._SUFFIX = '\\n});';\n        return NodeScriptLoader;\n    }());\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = /** @class */ (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\n        return ModuleIdResolver;\n    }());\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = /** @class */ (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.error = null;\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                var err = AMDLoader.ensureError(producedError);\n                err.phase = 'factory';\n                err.moduleId = this.strId;\n                this.error = err;\n                config.onError(err);\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            this._isComplete = true;\n            this.error = err;\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = /** @class */ (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = /** @class */ (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n        return RegularDependency;\n    }());\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = /** @class */ (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = /** @class */ (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack || null;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            if (m.error) {\n                throw m.error;\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            var err = AMDLoader.ensureError(_err);\n            err.phase = 'loading';\n            err.moduleId = strModuleId;\n            err.neededBy = neededBy;\n            return err;\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            if (!this._modules2[moduleId]) {\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\n            }\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                    if (path !== null) {\n                        path.push(fromId);\n                        return path;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.config = function (params, shouldOverwrite) {\n                if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n                _this.configure(params, shouldOverwrite);\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        module.exportsPassedIn = true;\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule && dependencyModule.isComplete()) {\n                        if (dependencyModule.error) {\n                            module.onDependencyError(dependencyModule.error);\n                            return;\n                        }\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n                        cyclePath.reverse();\n                        cyclePath.push(dependency.id);\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                        // Break the cycle\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    // record inverse dependency\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                    this._inverseDependencies2[dependency.id].push(module.id);\n                    if (dependency instanceof PluginDependency) {\n                        var plugin = this._modules2[dependency.pluginId];\n                        if (plugin && plugin.isComplete()) {\n                            this._loadPluginDependency(plugin.exports, dependency);\n                            continue;\n                        }\n                        // Record dependency for when the plugin gets loaded\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                        if (!inversePluginDeps) {\n                            inversePluginDeps = [];\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                        }\n                        inversePluginDeps.push(dependency);\n                        this._loadModule(dependency.pluginId);\n                        continue;\n                    }\n                    this._loadModule(dependency.id);\n                }\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        dependenciesValues[i] = module.exports;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        dependenciesValues[i] = {\n                            id: module.strId,\n                            config: function () {\n                                return _this._config.getConfigForModule(module.strId);\n                            }\n                        };\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule) {\n                        dependenciesValues[i] = dependencyModule.exports;\n                        continue;\n                    }\n                    dependenciesValues[i] = null;\n                }\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = function (what) {\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\n                    try {\n                        return _nodeRequire_1(what);\n                    }\n                    finally {\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\n                    }\n                };\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar CSSLoaderPlugin;\n(function (CSSLoaderPlugin) {\n    /**\n     * Known issue:\n     * - In IE there is no way to know if the CSS file loaded successfully or not.\n     */\n    var BrowserCSSLoader = /** @class */ (function () {\n        function BrowserCSSLoader() {\n            this._pendingLoads = 0;\n        }\n        BrowserCSSLoader.prototype.attachListeners = function (name, linkNode, callback, errorback) {\n            var unbind = function () {\n                linkNode.removeEventListener('load', loadEventListener);\n                linkNode.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            linkNode.addEventListener('load', loadEventListener);\n            linkNode.addEventListener('error', errorEventListener);\n        };\n        BrowserCSSLoader.prototype._onLoad = function (name, callback) {\n            this._pendingLoads--;\n            callback();\n        };\n        BrowserCSSLoader.prototype._onLoadError = function (name, errorback, err) {\n            this._pendingLoads--;\n            errorback(err);\n        };\n        BrowserCSSLoader.prototype._insertLinkNode = function (linkNode) {\n            this._pendingLoads++;\n            var head = document.head || document.getElementsByTagName('head')[0];\n            var other = head.getElementsByTagName('link') || head.getElementsByTagName('script');\n            if (other.length > 0) {\n                head.insertBefore(linkNode, other[other.length - 1]);\n            }\n            else {\n                head.appendChild(linkNode);\n            }\n        };\n        BrowserCSSLoader.prototype.createLinkTag = function (name, cssUrl, externalCallback, externalErrorback) {\n            var _this = this;\n            var linkNode = document.createElement('link');\n            linkNode.setAttribute('rel', 'stylesheet');\n            linkNode.setAttribute('type', 'text/css');\n            linkNode.setAttribute('data-name', name);\n            var callback = function () { return _this._onLoad(name, externalCallback); };\n            var errorback = function (err) { return _this._onLoadError(name, externalErrorback, err); };\n            this.attachListeners(name, linkNode, callback, errorback);\n            linkNode.setAttribute('href', cssUrl);\n            return linkNode;\n        };\n        BrowserCSSLoader.prototype._linkTagExists = function (name, cssUrl) {\n            var i, len, nameAttr, hrefAttr, links = document.getElementsByTagName('link');\n            for (i = 0, len = links.length; i < len; i++) {\n                nameAttr = links[i].getAttribute('data-name');\n                hrefAttr = links[i].getAttribute('href');\n                if (nameAttr === name || hrefAttr === cssUrl) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        BrowserCSSLoader.prototype.load = function (name, cssUrl, externalCallback, externalErrorback) {\n            if (this._linkTagExists(name, cssUrl)) {\n                externalCallback();\n                return;\n            }\n            var linkNode = this.createLinkTag(name, cssUrl, externalCallback, externalErrorback);\n            this._insertLinkNode(linkNode);\n        };\n        return BrowserCSSLoader;\n    }());\n    // ------------------------------ Finally, the plugin\n    var CSSPlugin = /** @class */ (function () {\n        function CSSPlugin() {\n            this._cssLoader = new BrowserCSSLoader();\n        }\n        CSSPlugin.prototype.load = function (name, req, load) {\n            var cssUrl = req.toUrl(name + '.css');\n            this._cssLoader.load(name, cssUrl, function (contents) {\n                load({});\n            }, function (err) {\n                if (typeof load.error === 'function') {\n                    load.error('Could not find ' + cssUrl + ' or it was empty');\n                }\n            });\n        };\n        return CSSPlugin;\n    }());\n    CSSLoaderPlugin.CSSPlugin = CSSPlugin;\n    define('vs/css', new CSSPlugin());\n})(CSSLoaderPlugin || (CSSLoaderPlugin = {}));\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar NLSLoaderPlugin;\n(function (NLSLoaderPlugin) {\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isPseudo = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isPseudo\", {\n            get: function () {\n                this._detect();\n                return this._isPseudo;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\n        };\n        return Environment;\n    }());\n    function _format(message, args, env) {\n        var result;\n        if (args.length === 0) {\n            result = message;\n        }\n        else {\n            result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n                var index = rest[0];\n                var arg = args[index];\n                var result = match;\n                if (typeof arg === 'string') {\n                    result = arg;\n                }\n                else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                    result = String(arg);\n                }\n                return result;\n            });\n        }\n        if (env.isPseudo) {\n            // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n            result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n        }\n        return result;\n    }\n    function findLanguageForModule(config, name) {\n        var result = config[name];\n        if (result)\n            return result;\n        result = config['*'];\n        if (result)\n            return result;\n        return null;\n    }\n    function localize(env, data, message) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return _format(message, args, env);\n    }\n    function createScopedLocalize(scope, env) {\n        return function (idx, defaultValue) {\n            var restArgs = Array.prototype.slice.call(arguments, 2);\n            return _format(scope[idx], restArgs, env);\n        };\n    }\n    var NLSPlugin = /** @class */ (function () {\n        function NLSPlugin(env) {\n            var _this = this;\n            this._env = env;\n            this.localize = function (data, message) {\n                var args = [];\n                for (var _i = 2; _i < arguments.length; _i++) {\n                    args[_i - 2] = arguments[_i];\n                }\n                return localize.apply(void 0, __spreadArrays([_this._env, data, message], args));\n            };\n        }\n        NLSPlugin.prototype.setPseudoTranslation = function (value) {\n            this._env._isPseudo = value;\n        };\n        NLSPlugin.prototype.create = function (key, data) {\n            return {\n                localize: createScopedLocalize(data[key], this._env)\n            };\n        };\n        NLSPlugin.prototype.load = function (name, req, load, config) {\n            var _this = this;\n            config = config || {};\n            if (!name || name.length === 0) {\n                load({\n                    localize: this.localize\n                });\n            }\n            else {\n                var pluginConfig = config['vs/nls'] || {};\n                var language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n                var suffix = '.nls';\n                if (language !== null && language !== NLSPlugin.DEFAULT_TAG) {\n                    suffix = suffix + '.' + language;\n                }\n                var messagesLoaded_1 = function (messages) {\n                    if (Array.isArray(messages)) {\n                        messages.localize = createScopedLocalize(messages, _this._env);\n                    }\n                    else {\n                        messages.localize = createScopedLocalize(messages[name], _this._env);\n                    }\n                    load(messages);\n                };\n                if (typeof pluginConfig.loadBundle === 'function') {\n                    pluginConfig.loadBundle(name, language, function (err, messages) {\n                        // We have an error. Load the English default strings to not fail\n                        if (err) {\n                            req([name + '.nls'], messagesLoaded_1);\n                        }\n                        else {\n                            messagesLoaded_1(messages);\n                        }\n                    });\n                }\n                else {\n                    req([name + suffix], messagesLoaded_1);\n                }\n            }\n        };\n        NLSPlugin.DEFAULT_TAG = 'i-default';\n        return NLSPlugin;\n    }());\n    NLSLoaderPlugin.NLSPlugin = NLSPlugin;\n    define('vs/nls', new NLSPlugin(new Environment()));\n})(NLSLoaderPlugin || (NLSLoaderPlugin = {}));\n"]}