{"version":3,"sources":["vs/platform/files/node/watcher/nsfw/fake","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/errors.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/arrays.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/functional.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/iterator.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/lifecycle.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/linkedList.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/event.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/cancellation.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/platform.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/process.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/path.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/stream.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/strings.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/buffer.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/types.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/objects.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/uri.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/amd.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/console.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/normalization.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/uuid.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/decoder.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/encoding.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/pfs.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/extpath.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/processes.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherIpc.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/common/files.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/nsfwWatcherService.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherApp.ts"],"names":["__m","__M","deps","result","i","len","length","ErrorHandler","[object Object]","this","listeners","unexpectedErrorHandler","e","setTimeout","stack","Error","message","listener","push","_removeListener","forEach","splice","indexOf","newUnexpectedErrorHandler","emit","exports","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","error","name","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","NotImplementedError","super","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","data","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","n","topStep","m","element","pop","j","firstIndex","fn","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","key","comparator","comp","groupBy","currentGroup","undefined","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","to","move","from","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","Object","create","elem","distinctES6","Set","has","add","fromSet","set","uniqueFilter","lastIndex","first","notFoundValue","index","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","fill","num","value","indexer","merger","t","reduce","r","insert","arrayInsert","target","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","map","asArray","once","_this","didCall","apply","arguments","Iterator","FIN","done","_empty","next","empty","single","fromArray","fromNativeIterator","it","elements","iterator","collect","atMost","Number","POSITIVE_INFINITY","iterators","chain","ChainableIterator","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","max","MappedIterator","MappedNavigator","navigator","previous","parent","last","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","console","log","dispose","disposables","d","isDisposable","thing","combinedDisposable","toDisposable","self","DisposableStore","_toDispose","_isDisposed","clear","item","warn","_store","freeze","MutableDisposable","_value","ReferenceCollection","references","Map","reference","get","counter","object","createReferencedObject","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","iterator_1","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","Date","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","join","count","topStack","topCount","options","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","iter","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","all","catch","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","bind","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","errors","onfinally","finally","raceCancellation","defaultValue","race","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","promiseTask","Delayer","defaultDelay","timeout","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","timer","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","isElectronRenderer","process","versions","electron","type","platform","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","translationsConfigFile","_globals","global","globals","setImmediate","postMessage","importScripts","pending","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","replace","msg","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","offset","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","format","newWriteableStream","reducer","WriteableStreamImpl","isReadableStream","pause","resume","destroy","every","state","flowing","ended","destroyed","flowData","flowErrors","flowEnd","write","fullDataBuffer","consumeReadable","readable","chunks","chunk","read","consumeReadableWithLimit","maxChunks","lastReadChunk","consumeStream","stream","consumeStreamWithLimit","wrapperStream","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","substring","rtrim","haystackLen","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","fromCharCode","substrEquals","aStart","aEnd","bStart","bEnd","isHighSurrogate","charCode","isLowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","endOffset","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","pattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","test","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","Uint8Array","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","text","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","removeAccents","prototype","regex","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt8","destination","writeUInt8","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","toSlashes","osPath","path_1","getRoot","firstLetter","pos","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","_typeof","number","string","function","constructor","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","assertType","condition","assertIsDefined","assertAllDefined","hasOwnProperty","isFunction","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","deepClone","keys","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","types_1","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","stringify","getOrDefault","k","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","_makeFsPath","change","_URI","percentDecode","components","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","uri","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","registerAndGetAmdImageURL","absolutePath","require","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","matches","file","line","column","label","isOneStringArg","consoleArgs","values","forEachable","getOrSet","mapToString","entries","setToString","mapToSerializable","serializable","serializableToMap","StringIterator","_pos","PathIterator","_splitOnBackslash","_from","_to","justSeps","ch","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","segments","_iter","_root","reset","segment","val","hasNext","oldElement","_nodeIterator","_forEach","ResourceMap","toKey","clb","resourceMap","Touch","LinkedMap","_map","_head","_tail","touch","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","some","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","location","pathname","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","hasToIgnoreCase","network_1","parentCandidate","originalFSPath","isEqualAuthority","a1","a2","uriPath","hasTrailingPathSeparator","fsp","fromPath","toPath","getComparisonKey","basenameOrAuthority","second","p1","p2","joinPath","pathFragment","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forPaths","glob_1","rootExpression","findSubstr","toLocalResource","ValueUUID","V4UUID","_randomHex","_oneOf","_timeHighBits","_chars","v4","_UUIDPattern","isUUID","generateUuid","asHex","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","UTF8","UTF8_with_bom","UTF16be","UTF16le","isUTFEncoding","utfEncoding","UTF16be_BOM","UTF16le_BOM","UTF8_BOM","ZERO_BYTE_DETECTION_BUFFER_MAX_LEN","NO_ENCODING_GUESS_MIN_BYTES","AUTO_ENCODING_GUESS_MIN_BYTES","AUTO_ENCODING_GUESS_MAX_BYTES","toNodeEncoding","enc","detectEncodingByBOMFromBuffer","bytesRead","b0","b1","b2","toDecodeStream","minBytesRequiredForDetection","guessEncoding","writer","stream_1","Writable","bufferedChunks","bytesBuffered","decodeStream","decodeStreamPromise","_startDecodeStream","detectEncodingFromBuffer","detected","overwriteEncoding","iconv","pipe","content","encodingExists","encodeStream","IGNORE_ENCODINGS","guessEncodingByBuffer","guessed","resolve_1","reject_1","detect","encodingName","normalizedEncodingName","JSCHARDET_TO_ICONV_ENCODINGS","toIconvLiteEncoding","ibm866","big5","autoGuessEncoding","seemsBinary","couldBeUTF16LE","couldBeUTF16BE","containsZeroByte","isEndian","isZeroByte","readInt8","guessedEncoding","toCanonicalName","RimRafMode","rimraf","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","stat","lstat","isDirectory","isSymbolicLink","chmod","unlink","children","readdir","child","util_1","promisify","fs","rmdir","handleDirectoryChildren","readdirSync","normalization_1","oldPath","newPath","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","exists","statLink","linkStat","linkStatError","isLink","renameIgnoreError","symlink","truncate","readFile","writeFilePathQueues","writeFile","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","encoding_1","charset","addBOM","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","reader","finished","finish","isOpen","createWriteStream","flags","autoClose","descriptor","doWriteFileStreamAndFlush","writeFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","createReadStream","doCopyFile","mkdirp","files","mkdir","recursive","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","fileExists","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","realcaseSync","found","pfs_1","prefix","ix","realpath","access","constants","R_OK","realpathSync","accessSync","State","DataType","RequestType","ResponseType","BufferReader","bytes","BufferWriter","buffer_1","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","send","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","disposable","listen","timeoutTimer","requests","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidChangeConnections","onDidChangeConnections","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","router","getDelayedChannel","routeCall","getChannel","routeEvent","relay","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","define","nls","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","localize","useExec","cc","ee","cp","stdout","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","amd_1","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","fullPath","withExtension","Server","ipc_1","Client","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","child_process_1","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","WatcherChannel","service","watch","onLogMessage","setRoots","setVerboseLogging","stop","WatcherChannelClient","enable","roots","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","createDecorator","serviceId","serviceIds","getServiceDependencies","ctor","IInstantiationService","serviceIdentifier","FileSystemProviderErrorCode","IFileService","instantiation_1","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","nls_1","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","_changes","checkForChangeType","resources_1","getOfType","hasType","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","normalized","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","files_1","nsfwActionToRawChangeType","NsfwWatcherService","_pathWatchers","_onWatchEvent","onWatchEvent","_onLogMessage","undeliveredFileEvents","fileEventDelayer","FS_EVENT_DELAY","readyPromiseResolve","ready","ignored","excludes","glob","enospcErrorLogged","realBasePathDiffers","realBasePathLength","realBasePath","_verboseLogging","nsfw","logPath","action","directory","oldFile","newFile","_isPathIgnored","newDirectory","watcher_1","watcher","startPromise","normalizedRoots","_normalizeRoots","rootsToStartWatching","rootsToStopWatching","normalizedRoot","_watch","enabled","server","ipc_cp_1","nsfwWatcherService_1","watcherIpc_1"],"mappings":"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","file":"watcherApp.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function fromSet<T>(set: Set<T>): T[] {\n\tconst result: T[] = [];\n\tset.forEach(o => result.push(o));\n\treturn result;\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\ninterface NativeIteratorYieldResult<TYield> {\n\tdone?: false;\n\tvalue: TYield;\n}\n\ninterface NativeIteratorReturnResult<TReturn> {\n\tdone: true;\n\tvalue: TReturn;\n}\n\ntype NativeIteratorResult<T, TReturn = any> = NativeIteratorYieldResult<T> | NativeIteratorReturnResult<TReturn>;\n\nexport interface NativeIterator<T> {\n\tnext(): NativeIteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function single<T>(value: T): Iterator<T> {\n\t\tlet done = false;\n\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tdone = true;\n\t\t\t\treturn { done: false, value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromArray<T>(array: ReadonlyArray<T>, index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromNativeIterator<T>(it: NativeIterator<T>): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tconst result = it.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: result.value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>, atMost: number = Number.POSITIVE_INFINITY): T[] {\n\t\tconst result: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\tlet i = 0;\n\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tresult.push(next.value);\n\n\t\t\tif (++i >= atMost) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\texport function concat<T>(...iterators: Iterator<T>[]): Iterator<T> {\n\t\tlet i = 0;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif (i >= iterators.length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tconst iterator = iterators[i];\n\t\t\t\tconst result = iterator.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\ti++;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\t}\n\n\texport function chain<T>(iterator: Iterator<T>): ChainableIterator<T> {\n\t\treturn new ChainableIterator(iterator);\n\t}\n}\n\nexport class ChainableIterator<T> implements Iterator<T> {\n\n\tconstructor(private it: Iterator<T>) { }\n\n\tnext(): IteratorResult<T> { return this.it.next(); }\n\tmap<R>(fn: (t: T) => R): ChainableIterator<R> { return new ChainableIterator(Iterator.map(this.it, fn)); }\n\tfilter(fn: (t: T) => boolean): ChainableIterator<T> { return new ChainableIterator(Iterator.filter(this.it, fn)); }\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: ISequence<T> | undefined): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else if (!arg) {\n\t\treturn Iterator.empty();\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate readonly items: readonly T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T | null) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as any as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as any as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (node === Node.Undefined) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tthis._asyncDeliveryQueue.push([e.value, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (lastSlash !== i - 1 && dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length === 2 || res.length === 1) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tif (res.length > 0) {\n\t\t\t\t\t\tres += `${separator}..`;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = '..';\n\t\t\t\t\t}\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += separator + path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t((pathObject.name || '') + (pathObject.ext || ''));\n\tif (!dir) {\n\t\treturn base;\n\t}\n\tif (dir === pathObject.root) {\n\t\treturn dir + base;\n\t}\n\treturn dir + sep + base;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t} else if (!resolvedDevice) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)['=' + resolvedDevice] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 3).toLowerCase() !==\n\t\t\t\t\tresolvedDevice.toLowerCase() + '\\\\') {\n\t\t\t\t\tpath = resolvedDevice + '\\\\';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len > 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// Possible UNC root\n\n\t\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\t\tisAbsolute = true;\n\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\t\tlet j = 2;\n\t\t\t\t\t\tlet last = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEnd = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t\t// Possible device root\n\n\t\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\t\trootEnd = 2;\n\t\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator\n\t\t\t\trootEnd = 1;\n\t\t\t\tisAbsolute = true;\n\t\t\t}\n\n\t\t\tif (device.length > 0 &&\n\t\t\t\tresolvedDevice.length > 0 &&\n\t\t\t\tdevice.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length === 0 && device.length > 0) {\n\t\t\t\tresolvedDevice = device;\n\t\t\t}\n\t\t\tif (!resolvedAbsolute) {\n\t\t\t\tresolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length > 0 && resolvedAbsolute) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n\t\t\t'.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t\t// path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t\t// is nothing left to process\n\n\t\t\t\t\t\t\t\treturn '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid unnecessary\n\t\t\t// work\n\t\t\treturn '\\\\';\n\t\t}\n\n\t\tlet tail;\n\t\tif (rootEnd < len) {\n\t\t\ttail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\n\t\t\t\tisPathSeparator);\n\t\t} else {\n\t\t\ttail = '';\n\t\t}\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\tif (isAbsolute) {\n\t\t\t\tif (tail.length > 0) {\n\t\t\t\t\treturn '\\\\' + tail;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '\\\\';\n\t\t\t\t}\n\t\t\t} else if (tail.length > 0) {\n\t\t\t\treturn tail;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (isAbsolute) {\n\t\t\tif (tail.length > 0) {\n\t\t\t\treturn device + '\\\\' + tail;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn device + '\\\\';\n\t\t\t}\n\t\t} else if (tail.length > 0) {\n\t\t\treturn device + tail;\n\t\t} else {\n\t\t\treturn device;\n\t\t}\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\tif (isPathSeparator(code)) {\n\t\t\treturn true;\n\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t// Possible device root\n\n\t\t\tif (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '\\\\' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1) {\n\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t\t++slashCount;\n\t\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\tfor (; slashCount < joined.length; ++slashCount) {\n\t\t\t\tif (!isPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = '\\\\' + joined.slice(slashCount);\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\tfor (; fromEnd - 1 > fromStart; --fromEnd) {\n\t\t\tif (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\tfor (; toEnd - 1 > toStart; --toEnd) {\n\t\t\tif (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length && lastCommonSep === -1) {\n\t\t\treturn toOrig;\n\t\t}\n\n\t\tlet out = '';\n\t\tif (lastCommonSep === -1) {\n\t\t\tlastCommonSep = 0;\n\t\t}\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '\\\\..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + toOrig.slice(toStart + lastCommonSep, toEnd);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn toOrig.slice(toStart, toEnd);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length >= 3) {\n\t\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\t\treturn '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\t\t\treturn '\\\\\\\\?\\\\' + resolvedPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = offset = 1;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = offset = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\trootEnd = offset = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn path;\n\t\t}\n\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = rootEnd;\n\t\t\t}\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2) {\n\t\t\tconst drive = path.charCodeAt(0);\n\t\t\tif (isWindowsDeviceRoot(drive)) {\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tstart = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('\\\\', pathObject);\n\t},\n\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = 1;\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\tif (len === 3) {\n\t\t\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\tret.root = ret.dir = path;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t}\n\t\t} else {\n\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\tret.base = path.slice(startPart, end);\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = process.cwd();\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = path + '/' + resolvedPath;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\tif (resolvedPath.length > 0) {\n\t\t\t\treturn '/' + resolvedPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t} else if (resolvedPath.length > 0) {\n\t\t\treturn resolvedPath;\n\t\t} else {\n\t\t\treturn '.';\n\t\t}\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0 && !isAbsolute) {\n\t\t\tpath = '.';\n\t\t}\n\t\tif (path.length > 0 && trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tif (isAbsolute) {\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = arguments[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '/' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 1;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 1;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toEnd = to.length;\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t} else if (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t\t// For example: from='/foo'; to='/'\n\t\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '/..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + to.slice(toStart + lastCommonSep);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn to.slice(toStart);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('/', pathObject);\n\t},\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\t\tret.base = ret.name = path.slice(1, end);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\tret.name = path.slice(1, startDot);\n\t\t\t\tret.base = path.slice(1, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t}\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t */\n\twrite(data: T): void;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\nexport function isReadableStream<T>(obj: any): obj is ReadableStream<T> {\n\tconst candidate: ReadableStream<T> = obj;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer);\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tconstructor(private reducer: IReducer<T>) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: IReducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlet wrapperStream: WriteableStream<T> | undefined = undefined;\n\n\t\tstream.on('data', data => {\n\n\t\t\t// If we reach maxChunks, we start to return a stream\n\t\t\t// and make sure that any data we have already read\n\t\t\t// is in it as well\n\t\t\tif (!wrapperStream && chunks.length === maxChunks) {\n\t\t\t\twrapperStream = newWriteableStream(reducer);\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.write(data);\n\n\t\t\t\treturn resolve(wrapperStream);\n\t\t\t}\n\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.write(data);\n\t\t\t} else {\n\t\t\t\tchunks.push(data);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('error', error => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.error(error);\n\t\t\t} else {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('end', () => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.end();\n\t\t\t} else {\n\t\t\t\treturn resolve(reducer(chunks));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn ((charCode - 0xD800) << 10) + (nextCharCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn ((prevCharCode - 0xD800) << 10) + (charCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, '');\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void {\n\t\tthis.buffer.set(array.buffer, offset);\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nfunction readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nfunction writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, endsWith, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && endsWith(candidate, ':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (endsWith(candidate, ':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n\n/**\n * Reference a resource that might be inlined.\n * Do not inline icons that will be used by the native mac touchbar.\n * Do not rename this method unless you adopt the build scripts.\n */\nexport function registerAndGetAmdImageURL(absolutePath: string): string {\n\treturn require.toUrl(absolutePath);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Iterator, IteratorResult, FIN } from './iterator';\n\n\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport function mapToSerializable(map: Map<string, string>): [string, string][] {\n\tconst serializable: [string, string][] = [];\n\n\tmap.forEach((value, key) => {\n\t\tserializable.push([key, value]);\n\t});\n\n\treturn serializable;\n}\n\nexport function serializableToMap(serializable: [string, string][]): Map<string, string> {\n\tconst items = new Map<string, string>();\n\n\tfor (const [key, value] of serializable) {\n\t\titems.set(key, value);\n\t}\n\n\treturn items;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(private _splitOnBackslash: boolean = true) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment!: string;\n\tvalue: E | undefined;\n\tkey!: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI) => void): void {\n\t\tthis.map.forEach((value, index) => clb(value, URI.parse(index)));\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && strings.endsWith(path, base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && strings.endsWith(pattern, '/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || strings.endsWith(path, slashBase) || strings.endsWith(path, backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || strings.endsWith(path, nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string, basename: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename: string, name: string, hasSibling: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof ((<any>'').normalize) === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function getComparisonKey(resource: URI): string {\n\treturn hasToIgnoreCase(resource) ? resource.toString().toLowerCase() : resource.toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase);\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, ignoreCase, '/');\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests wheter the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\nexport function isEqual(first: URI | undefined, second: URI | undefined, ignoreCase = hasToIgnoreCase(first)): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn p1 === p2 || ignoreCase && equalsIgnoreCase(p1 || '/', p2 || '/');\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tif (resource.scheme === Schemas.file) {\n\t\treturn URI.file(paths.dirname(originalFSPath(resource)));\n\t}\n\tlet dirname = paths.posix.dirname(resource.path);\n\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns the fsPath of an URI where the drive letter is not normalized.\n * See #56403.\n */\nexport function originalFSPath(uri: URI): string {\n\tlet value: string;\n\tconst uriPath = uri.path;\n\tif (uri.authority && uriPath.length > 1 && uri.scheme === Schemas.file) {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uriPath}`;\n\t} else if (\n\t\tisWindows\n\t\t&& uriPath.charCodeAt(0) === CharCode.Slash\n\t\t&& extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\n\t\t&& uriPath.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tvalue = uriPath.substr(1);\n\t} else {\n\t\t// other path\n\t\tvalue = uriPath;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, ignoreCase = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(from.path, to.path);\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (ignoreCase) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<{ root: URI, expression: ParsedExpression }> = TernarySearchTree.forPaths<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root.toString(), { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource.toString());\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex(): string;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value: string) {\n\t\t// empty\n\t}\n\n\tpublic asHex(): string {\n\t\treturn this._value;\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static readonly _chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static readonly _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array: string[]): string {\n\t\treturn array[Math.floor(array.length * Math.random())];\n\t}\n\n\tprivate static _randomHex(): string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\nexport function v4(): UUID {\n\treturn new V4UUID();\n}\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value: string): UUID {\n\tif (!isUUID(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid(): string {\n\treturn v4().asHex();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as iconv from 'iconv-lite';\nimport { Readable, Writable } from 'stream';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport const UTF8 = 'utf8';\nexport const UTF8_with_bom = 'utf8bom';\nexport const UTF16be = 'utf16be';\nexport const UTF16le = 'utf16le';\n\nexport type UTF_ENCODING = typeof UTF8 | typeof UTF8_with_bom | typeof UTF16be | typeof UTF16le;\n\nexport function isUTFEncoding(encoding: string): encoding is UTF_ENCODING {\n\treturn [UTF8, UTF8_with_bom, UTF16be, UTF16le].some(utfEncoding => utfEncoding === encoding);\n}\n\nexport const UTF16be_BOM = [0xFE, 0xFF];\nexport const UTF16le_BOM = [0xFF, 0xFE];\nexport const UTF8_BOM = [0xEF, 0xBB, 0xBF];\n\nconst ZERO_BYTE_DETECTION_BUFFER_MAX_LEN = 512; \t// number of bytes to look at to decide about a file being binary or not\nconst NO_ENCODING_GUESS_MIN_BYTES = 512; \t\t\t// when not auto guessing the encoding, small number of bytes are enough\nconst AUTO_ENCODING_GUESS_MIN_BYTES = 512 * 8; \t\t// with auto guessing we want a lot more content to be read for guessing\nconst AUTO_ENCODING_GUESS_MAX_BYTES = 512 * 128; \t// set an upper limit for the number of bytes we pass on to jschardet\n\nexport interface IDecodeStreamOptions {\n\tguessEncoding: boolean;\n\tminBytesRequiredForDetection?: number;\n\n\toverwriteEncoding(detectedEncoding: string | null): string;\n}\n\nexport interface IDecodeStreamResult {\n\tstream: NodeJS.ReadableStream;\n\tdetected: IDetectedEncodingResult;\n}\n\nexport function toDecodeStream(readable: Readable, options: IDecodeStreamOptions): Promise<IDecodeStreamResult> {\n\tif (!options.minBytesRequiredForDetection) {\n\t\toptions.minBytesRequiredForDetection = options.guessEncoding ? AUTO_ENCODING_GUESS_MIN_BYTES : NO_ENCODING_GUESS_MIN_BYTES;\n\t}\n\n\treturn new Promise<IDecodeStreamResult>((resolve, reject) => {\n\t\tconst writer = new class extends Writable {\n\t\t\tprivate decodeStream: NodeJS.ReadWriteStream | undefined;\n\t\t\tprivate decodeStreamPromise: Promise<void> | undefined;\n\n\t\t\tprivate bufferedChunks: Buffer[] = [];\n\t\t\tprivate bytesBuffered = 0;\n\n\t\t\t_write(chunk: Buffer, encoding: string, callback: (error: Error | null) => void): void {\n\t\t\t\tif (!Buffer.isBuffer(chunk)) {\n\t\t\t\t\treturn callback(new Error('toDecodeStream(): data must be a buffer'));\n\t\t\t\t}\n\n\t\t\t\t// if the decode stream is ready, we just write directly\n\t\t\t\tif (this.decodeStream) {\n\t\t\t\t\tthis.decodeStream.write(chunk, callback);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// otherwise we need to buffer the data until the stream is ready\n\t\t\t\tthis.bufferedChunks.push(chunk);\n\t\t\t\tthis.bytesBuffered += chunk.byteLength;\n\n\t\t\t\t// waiting for the decoder to be ready\n\t\t\t\tif (this.decodeStreamPromise) {\n\t\t\t\t\tthis.decodeStreamPromise.then(() => callback(null), error => callback(error));\n\t\t\t\t}\n\n\t\t\t\t// buffered enough data for encoding detection, create stream and forward data\n\t\t\t\telse if (typeof options.minBytesRequiredForDetection === 'number' && this.bytesBuffered >= options.minBytesRequiredForDetection) {\n\t\t\t\t\tthis._startDecodeStream(callback);\n\t\t\t\t}\n\n\t\t\t\t// only buffering until enough data for encoding detection is there\n\t\t\t\telse {\n\t\t\t\t\tcallback(null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_startDecodeStream(callback: (error: Error | null) => void): void {\n\n\t\t\t\t// detect encoding from buffer\n\t\t\t\tthis.decodeStreamPromise = Promise.resolve(detectEncodingFromBuffer({\n\t\t\t\t\tbuffer: Buffer.concat(this.bufferedChunks),\n\t\t\t\t\tbytesRead: this.bytesBuffered\n\t\t\t\t}, options.guessEncoding)).then(detected => {\n\n\t\t\t\t\t// ensure to respect overwrite of encoding\n\t\t\t\t\tdetected.encoding = options.overwriteEncoding(detected.encoding);\n\n\t\t\t\t\t// decode and write buffer\n\t\t\t\t\tthis.decodeStream = decodeStream(detected.encoding);\n\t\t\t\t\tthis.decodeStream.write(Buffer.concat(this.bufferedChunks), callback);\n\t\t\t\t\tthis.bufferedChunks.length = 0;\n\n\t\t\t\t\t// signal to the outside our detected encoding\n\t\t\t\t\t// and final decoder stream\n\t\t\t\t\tresolve({ detected, stream: this.decodeStream });\n\t\t\t\t}, error => {\n\t\t\t\t\tthis.emit('error', error);\n\n\t\t\t\t\tcallback(error);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t_final(callback: () => void) {\n\n\t\t\t\t// normal finish\n\t\t\t\tif (this.decodeStream) {\n\t\t\t\t\tthis.decodeStream.end(callback);\n\t\t\t\t}\n\n\t\t\t\t// we were still waiting for data to do the encoding\n\t\t\t\t// detection. thus, wrap up starting the stream even\n\t\t\t\t// without all the data to get things going\n\t\t\t\telse {\n\t\t\t\t\tthis._startDecodeStream(() => {\n\t\t\t\t\t\tif (this.decodeStream) {\n\t\t\t\t\t\t\tthis.decodeStream.end(callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// errors\n\t\treadable.on('error', reject);\n\n\t\t// pipe through\n\t\treadable.pipe(writer);\n\t});\n}\n\nexport function decode(buffer: Buffer, encoding: string): string {\n\treturn iconv.decode(buffer, toNodeEncoding(encoding));\n}\n\nexport function encode(content: string | Buffer, encoding: string, options?: { addBOM?: boolean }): Buffer {\n\treturn iconv.encode(content as string /* TODO report into upstream typings */, toNodeEncoding(encoding), options);\n}\n\nexport function encodingExists(encoding: string): boolean {\n\treturn iconv.encodingExists(toNodeEncoding(encoding));\n}\n\nfunction decodeStream(encoding: string | null): NodeJS.ReadWriteStream {\n\treturn iconv.decodeStream(toNodeEncoding(encoding));\n}\n\nexport function encodeStream(encoding: string, options?: { addBOM?: boolean }): NodeJS.ReadWriteStream {\n\treturn iconv.encodeStream(toNodeEncoding(encoding), options);\n}\n\nfunction toNodeEncoding(enc: string | null): string {\n\tif (enc === UTF8_with_bom || enc === null) {\n\t\treturn UTF8; // iconv does not distinguish UTF 8 with or without BOM, so we need to help it\n\t}\n\n\treturn enc;\n}\n\nexport function detectEncodingByBOMFromBuffer(buffer: Buffer | VSBuffer | null, bytesRead: number): typeof UTF8_with_bom | typeof UTF16le | typeof UTF16be | null {\n\tif (!buffer || bytesRead < UTF16be_BOM.length) {\n\t\treturn null;\n\t}\n\n\tconst b0 = buffer.readUInt8(0);\n\tconst b1 = buffer.readUInt8(1);\n\n\t// UTF-16 BE\n\tif (b0 === UTF16be_BOM[0] && b1 === UTF16be_BOM[1]) {\n\t\treturn UTF16be;\n\t}\n\n\t// UTF-16 LE\n\tif (b0 === UTF16le_BOM[0] && b1 === UTF16le_BOM[1]) {\n\t\treturn UTF16le;\n\t}\n\n\tif (bytesRead < UTF8_BOM.length) {\n\t\treturn null;\n\t}\n\n\tconst b2 = buffer.readUInt8(2);\n\n\t// UTF-8\n\tif (b0 === UTF8_BOM[0] && b1 === UTF8_BOM[1] && b2 === UTF8_BOM[2]) {\n\t\treturn UTF8_with_bom;\n\t}\n\n\treturn null;\n}\n\n// we explicitly ignore a specific set of encodings from auto guessing\n// - ASCII: we never want this encoding (most UTF-8 files would happily detect as\n//          ASCII files and then you could not type non-ASCII characters anymore)\n// - UTF-16: we have our own detection logic for UTF-16\n// - UTF-32: we do not support this encoding in VSCode\nconst IGNORE_ENCODINGS = ['ascii', 'utf-16', 'utf-32'];\n\n/**\n * Guesses the encoding from buffer.\n */\nasync function guessEncodingByBuffer(buffer: Buffer): Promise<string | null> {\n\tconst jschardet = await import('jschardet');\n\n\tconst guessed = jschardet.detect(buffer.slice(0, AUTO_ENCODING_GUESS_MAX_BYTES)); // ensure to limit buffer for guessing due to https://github.com/aadsm/jschardet/issues/53\n\tif (!guessed || !guessed.encoding) {\n\t\treturn null;\n\t}\n\n\tconst enc = guessed.encoding.toLowerCase();\n\tif (0 <= IGNORE_ENCODINGS.indexOf(enc)) {\n\t\treturn null; // see comment above why we ignore some encodings\n\t}\n\n\treturn toIconvLiteEncoding(guessed.encoding);\n}\n\nconst JSCHARDET_TO_ICONV_ENCODINGS: { [name: string]: string } = {\n\t'ibm866': 'cp866',\n\t'big5': 'cp950'\n};\n\nfunction toIconvLiteEncoding(encodingName: string): string {\n\tconst normalizedEncodingName = encodingName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\tconst mapped = JSCHARDET_TO_ICONV_ENCODINGS[normalizedEncodingName];\n\n\treturn mapped || normalizedEncodingName;\n}\n\n/**\n * The encodings that are allowed in a settings file don't match the canonical encoding labels specified by WHATWG.\n * See https://encoding.spec.whatwg.org/#names-and-labels\n * Iconv-lite strips all non-alphanumeric characters, but ripgrep doesn't. For backcompat, allow these labels.\n */\nexport function toCanonicalName(enc: string): string {\n\tswitch (enc) {\n\t\tcase 'shiftjis':\n\t\t\treturn 'shift-jis';\n\t\tcase 'utf16le':\n\t\t\treturn 'utf-16le';\n\t\tcase 'utf16be':\n\t\t\treturn 'utf-16be';\n\t\tcase 'big5hkscs':\n\t\t\treturn 'big5-hkscs';\n\t\tcase 'eucjp':\n\t\t\treturn 'euc-jp';\n\t\tcase 'euckr':\n\t\t\treturn 'euc-kr';\n\t\tcase 'koi8r':\n\t\t\treturn 'koi8-r';\n\t\tcase 'koi8u':\n\t\t\treturn 'koi8-u';\n\t\tcase 'macroman':\n\t\t\treturn 'x-mac-roman';\n\t\tcase 'utf8bom':\n\t\t\treturn 'utf8';\n\t\tdefault:\n\t\t\tconst m = enc.match(/windows(\\d+)/);\n\t\t\tif (m) {\n\t\t\t\treturn 'windows-' + m[1];\n\t\t\t}\n\n\t\t\treturn enc;\n\t}\n}\n\nexport interface IDetectedEncodingResult {\n\tencoding: string | null;\n\tseemsBinary: boolean;\n}\n\nexport interface IReadResult {\n\tbuffer: Buffer | null;\n\tbytesRead: number;\n}\n\nexport function detectEncodingFromBuffer(readResult: IReadResult, autoGuessEncoding?: false): IDetectedEncodingResult;\nexport function detectEncodingFromBuffer(readResult: IReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult>;\nexport function detectEncodingFromBuffer({ buffer, bytesRead }: IReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult> | IDetectedEncodingResult {\n\n\t// Always first check for BOM to find out about encoding\n\tlet encoding = detectEncodingByBOMFromBuffer(buffer, bytesRead);\n\n\t// Detect 0 bytes to see if file is binary or UTF-16 LE/BE\n\t// unless we already know that this file has a UTF-16 encoding\n\tlet seemsBinary = false;\n\tif (encoding !== UTF16be && encoding !== UTF16le && buffer) {\n\t\tlet couldBeUTF16LE = true; // e.g. 0xAA 0x00\n\t\tlet couldBeUTF16BE = true; // e.g. 0x00 0xAA\n\t\tlet containsZeroByte = false;\n\n\t\t// This is a simplified guess to detect UTF-16 BE or LE by just checking if\n\t\t// the first 512 bytes have the 0-byte at a specific location. For UTF-16 LE\n\t\t// this would be the odd byte index and for UTF-16 BE the even one.\n\t\t// Note: this can produce false positives (a binary file that uses a 2-byte\n\t\t// encoding of the same format as UTF-16) and false negatives (a UTF-16 file\n\t\t// that is using 4 bytes to encode a character).\n\t\tfor (let i = 0; i < bytesRead && i < ZERO_BYTE_DETECTION_BUFFER_MAX_LEN; i++) {\n\t\t\tconst isEndian = (i % 2 === 1); // assume 2-byte sequences typical for UTF-16\n\t\t\tconst isZeroByte = (buffer.readInt8(i) === 0);\n\n\t\t\tif (isZeroByte) {\n\t\t\t\tcontainsZeroByte = true;\n\t\t\t}\n\n\t\t\t// UTF-16 LE: expect e.g. 0xAA 0x00\n\t\t\tif (couldBeUTF16LE && (isEndian && !isZeroByte || !isEndian && isZeroByte)) {\n\t\t\t\tcouldBeUTF16LE = false;\n\t\t\t}\n\n\t\t\t// UTF-16 BE: expect e.g. 0x00 0xAA\n\t\t\tif (couldBeUTF16BE && (isEndian && isZeroByte || !isEndian && !isZeroByte)) {\n\t\t\t\tcouldBeUTF16BE = false;\n\t\t\t}\n\n\t\t\t// Return if this is neither UTF16-LE nor UTF16-BE and thus treat as binary\n\t\t\tif (isZeroByte && !couldBeUTF16LE && !couldBeUTF16BE) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Handle case of 0-byte included\n\t\tif (containsZeroByte) {\n\t\t\tif (couldBeUTF16LE) {\n\t\t\t\tencoding = UTF16le;\n\t\t\t} else if (couldBeUTF16BE) {\n\t\t\t\tencoding = UTF16be;\n\t\t\t} else {\n\t\t\t\tseemsBinary = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Auto guess encoding if configured\n\tif (autoGuessEncoding && !seemsBinary && !encoding && buffer) {\n\t\treturn guessEncodingByBuffer(buffer.slice(0, bytesRead)).then(guessedEncoding => {\n\t\t\treturn {\n\t\t\t\tseemsBinary: false,\n\t\t\t\tencoding: guessedEncoding\n\t\t\t};\n\t\t});\n\t}\n\n\treturn { seemsBinary, encoding };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { endsWith } from 'vs/base/common/strings';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { encode, encodeStream } from 'vs/base/node/encoding';\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\tstat: fs.Stats;\n\tisSymbolicLink: boolean;\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet linkStat: fs.Stats | undefined;\n\tlet linkStatError: NodeJS.ErrnoException | undefined;\n\ttry {\n\t\tlinkStat = await lstat(path);\n\t} catch (error) {\n\t\tlinkStatError = error;\n\t}\n\n\t// Then stat the target and return that\n\tconst isLink = !!(linkStat && linkStat.isSymbolicLink());\n\tif (linkStatError || isLink) {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn { stat: fileStat, isSymbolicLink: isLink };\n\t}\n\n\treturn { stat: linkStat!, isSymbolicLink: false };\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tfs.rename(oldPath, newPath, () => resolve());\n\t});\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: NodeJS.ReadableStream, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | NodeJS.ReadableStream | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | NodeJS.ReadableStream | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => writeFileAndFlush(path, data, options));\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accomodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n\tencoding?: {\n\t\tcharset: string;\n\t\taddBOM: boolean;\n\t};\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\nfunction writeFileAndFlush(path: string, data: string | Buffer | NodeJS.ReadableStream | Uint8Array, options: IWriteFileOptions | undefined): Promise<void> {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\treturn new Promise((resolve, reject) => {\n\t\tif (typeof data === 'string' || Buffer.isBuffer(data) || data instanceof Uint8Array) {\n\t\t\tdoWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve());\n\t\t} else {\n\t\t\tdoWriteFileStreamAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve());\n\t\t}\n\t});\n}\n\nfunction doWriteFileStreamAndFlush(path: string, reader: NodeJS.ReadableStream, options: IEnsuredWriteFileOptions, callback: (error?: Error) => void): void {\n\n\t// finish only once\n\tlet finished = false;\n\tconst finish = (error?: Error) => {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\n\t\t\t// in error cases we need to manually close streams\n\t\t\t// if the write stream was successfully opened\n\t\t\tif (error) {\n\t\t\t\tif (isOpen) {\n\t\t\t\t\twriter.once('close', () => callback(error));\n\t\t\t\t\twriter.destroy();\n\t\t\t\t} else {\n\t\t\t\t\tcallback(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// otherwise just return without error\n\t\t\telse {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t};\n\n\t// create writer to target. we set autoClose: false because we want to use the streams\n\t// file descriptor to call fs.fdatasync to ensure the data is flushed to disk\n\tconst writer = fs.createWriteStream(path, { mode: options.mode, flags: options.flag, autoClose: false });\n\n\t// Event: 'open'\n\t// Purpose: save the fd for later use and start piping\n\t// Notes: will not be called when there is an error opening the file descriptor!\n\tlet fd: number;\n\tlet isOpen: boolean;\n\twriter.once('open', descriptor => {\n\t\tfd = descriptor;\n\t\tisOpen = true;\n\n\t\t// if an encoding is provided, we need to pipe the stream through\n\t\t// an encoder stream and forward the encoding related options\n\t\tif (options.encoding) {\n\t\t\treader = reader.pipe(encodeStream(options.encoding.charset, { addBOM: options.encoding.addBOM }));\n\t\t}\n\n\t\t// start data piping only when we got a successful open. this ensures that we do\n\t\t// not consume the stream when an error happens and helps to fix this issue:\n\t\t// https://github.com/Microsoft/vscode/issues/42542\n\t\treader.pipe(writer);\n\t});\n\n\t// Event: 'error'\n\t// Purpose: to return the error to the outside and to close the write stream (does not happen automatically)\n\treader.once('error', error => finish(error));\n\twriter.once('error', error => finish(error));\n\n\t// Event: 'finish'\n\t// Purpose: use fs.fdatasync to flush the contents to disk\n\t// Notes: event is called when the writer has finished writing to the underlying resource. we must call writer.close()\n\t// because we have created the WriteStream with autoClose: false\n\twriter.once('finish', () => {\n\n\t\t// flush to disk\n\t\tif (canFlush && isOpen) {\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\twriter.destroy();\n\t\t\t});\n\t\t} else {\n\t\t\twriter.destroy();\n\t\t}\n\t});\n\n\t// Event: 'close'\n\t// Purpose: signal we are done to the outside\n\t// Notes: event is called when the writer's filedescriptor is closed\n\twriter.once('close', () => finish());\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (options.encoding) {\n\t\tdata = encode(data instanceof Uint8Array ? Buffer.from(data) : data, options.encoding.charset, { addBOM: options.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (ensuredOptions.encoding) {\n\t\tdata = encode(data, ensuredOptions.encoding.charset, { addBOM: ensuredOptions.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w',\n\t\tencoding: options.encoding\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || endsWith(source, '.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidChangeConnections: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => this.activeRequests.delete(disposable));\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidChangeConnections = new Emitter<Connection<TContext>>();\n\treadonly onDidChangeConnections: Event<Connection<TContext>> = this._onDidChangeConnections.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidChangeConnections.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tconst channelPromise = router.routeCall(that, command, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tconst channelPromise = router.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidChangeConnections.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidChangeConnections);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone, assign } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/Microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = assign(deepClone(process.env), { 'VSCODE_PARENT_PID': String(process.pid) });\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = assign(forkOpts.env, this.options.env);\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew(first: A1, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\tcreateInstance<Services extends BrandedService[], Ctor extends new (...services: Services) => any, R extends InstanceType<Ctor>>(t: Ctor): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An even that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onFileChanges: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onAfterOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tprivate readonly _changes: readonly IFileChange[];\n\n\tconstructor(changes: readonly IFileChange[]) {\n\t\tthis._changes = changes;\n\t}\n\n\tget changes() {\n\t\treturn this._changes;\n\t}\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this._changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this._changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this._changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as glob from 'vs/base/common/glob';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport * as nsfw from 'vscode-nsfw';\nimport { IWatcherService, IWatcherRequest, IWatcherOptions } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { realcaseSync, realpathSync } from 'vs/base/node/extpath';\n\nconst nsfwActionToRawChangeType: { [key: number]: number } = [];\nnsfwActionToRawChangeType[nsfw.actions.CREATED] = FileChangeType.ADDED;\nnsfwActionToRawChangeType[nsfw.actions.MODIFIED] = FileChangeType.UPDATED;\nnsfwActionToRawChangeType[nsfw.actions.DELETED] = FileChangeType.DELETED;\n\ninterface IWatcherObjet {\n\tstart(): any;\n\tstop(): any;\n}\n\ninterface IPathWatcher {\n\tready: Promise<IWatcherObjet>;\n\twatcher?: IWatcherObjet;\n\tignored: glob.ParsedPattern[];\n}\n\nexport class NsfwWatcherService implements IWatcherService {\n\tprivate static readonly FS_EVENT_DELAY = 50; // aggregate and only emit events when changes have stopped for this duration (in ms)\n\n\tprivate _pathWatchers: { [watchPath: string]: IPathWatcher } = {};\n\tprivate _verboseLogging: boolean | undefined;\n\tprivate enospcErrorLogged: boolean | undefined;\n\n\tprivate readonly _onWatchEvent = new Emitter<IDiskFileChange[]>();\n\treadonly onWatchEvent = this._onWatchEvent.event;\n\n\tprivate readonly _onLogMessage = new Emitter<ILogMessage>();\n\treadonly onLogMessage: Event<ILogMessage> = this._onLogMessage.event;\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.onWatchEvent;\n\t}\n\n\tprivate _watch(request: IWatcherRequest): void {\n\t\tlet undeliveredFileEvents: IDiskFileChange[] = [];\n\t\tconst fileEventDelayer = new ThrottledDelayer<void>(NsfwWatcherService.FS_EVENT_DELAY);\n\n\t\tlet readyPromiseResolve: (watcher: IWatcherObjet) => void;\n\t\tthis._pathWatchers[request.path] = {\n\t\t\tready: new Promise<IWatcherObjet>(resolve => readyPromiseResolve = resolve),\n\t\t\tignored: Array.isArray(request.excludes) ? request.excludes.map(ignored => glob.parse(ignored)) : []\n\t\t};\n\n\t\tprocess.on('uncaughtException', (e: Error | string) => {\n\n\t\t\t// Specially handle ENOSPC errors that can happen when\n\t\t\t// the watcher consumes so many file descriptors that\n\t\t\t// we are running into a limit. We only want to warn\n\t\t\t// once in this case to avoid log spam.\n\t\t\t// See https://github.com/Microsoft/vscode/issues/7950\n\t\t\tif (e === 'Inotify limit reached' && !this.enospcErrorLogged) {\n\t\t\t\tthis.enospcErrorLogged = true;\n\t\t\t\tthis.error('Inotify limit reached (ENOSPC)');\n\t\t\t}\n\t\t});\n\n\t\t// NSFW does not report file changes in the path provided on macOS if\n\t\t// - the path uses wrong casing\n\t\t// - the path is a symbolic link\n\t\t// We have to detect this case and massage the events to correct this.\n\t\tlet realBasePathDiffers = false;\n\t\tlet realBasePathLength = request.path.length;\n\t\tif (platform.isMacintosh) {\n\t\t\ttry {\n\n\t\t\t\t// First check for symbolic link\n\t\t\t\tlet realBasePath = realpathSync(request.path);\n\n\t\t\t\t// Second check for casing difference\n\t\t\t\tif (request.path === realBasePath) {\n\t\t\t\t\trealBasePath = (realcaseSync(request.path) || request.path);\n\t\t\t\t}\n\n\t\t\t\tif (request.path !== realBasePath) {\n\t\t\t\t\trealBasePathLength = realBasePath.length;\n\t\t\t\t\trealBasePathDiffers = true;\n\n\t\t\t\t\tthis.warn(`Watcher basePath does not match version on disk and will be corrected (original: ${request.path}, real: ${realBasePath})`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\n\t\tif (this._verboseLogging) {\n\t\t\tthis.log(`Start watching with nsfw: ${request.path}`);\n\t\t}\n\n\t\tnsfw(request.path, events => {\n\t\t\tfor (const e of events) {\n\t\t\t\t// Logging\n\t\t\t\tif (this._verboseLogging) {\n\t\t\t\t\tconst logPath = e.action === nsfw.actions.RENAMED ? path.join(e.directory, e.oldFile || '') + ' -> ' + e.newFile : path.join(e.directory, e.file || '');\n\t\t\t\t\tthis.log(`${e.action === nsfw.actions.CREATED ? '[CREATED]' : e.action === nsfw.actions.DELETED ? '[DELETED]' : e.action === nsfw.actions.MODIFIED ? '[CHANGED]' : '[RENAMED]'} ${logPath}`);\n\t\t\t\t}\n\n\t\t\t\t// Convert nsfw event to IRawFileChange and add to queue\n\t\t\t\tlet absolutePath: string;\n\t\t\t\tif (e.action === nsfw.actions.RENAMED) {\n\t\t\t\t\t// Rename fires when a file's name changes within a single directory\n\t\t\t\t\tabsolutePath = path.join(e.directory, e.oldFile || '');\n\t\t\t\t\tif (!this._isPathIgnored(absolutePath, this._pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.DELETED, path: absolutePath });\n\t\t\t\t\t} else if (this._verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t\tabsolutePath = path.join(e.newDirectory || e.directory, e.newFile || '');\n\t\t\t\t\tif (!this._isPathIgnored(absolutePath, this._pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.ADDED, path: absolutePath });\n\t\t\t\t\t} else if (this._verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tabsolutePath = path.join(e.directory, e.file || '');\n\t\t\t\t\tif (!this._isPathIgnored(absolutePath, this._pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({\n\t\t\t\t\t\t\ttype: nsfwActionToRawChangeType[e.action],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (this._verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delay and send buffer\n\t\t\tfileEventDelayer.trigger(() => {\n\t\t\t\tconst events = undeliveredFileEvents;\n\t\t\t\tundeliveredFileEvents = [];\n\n\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\tevents.forEach(e => {\n\n\t\t\t\t\t\t// Mac uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\te.path = normalizeNFC(e.path);\n\n\t\t\t\t\t\t// Convert paths back to original form in case it differs\n\t\t\t\t\t\tif (realBasePathDiffers) {\n\t\t\t\t\t\t\te.path = request.path + e.path.substr(realBasePathLength);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Broadcast to clients normalized\n\t\t\t\tconst res = normalizeFileChanges(events);\n\t\t\t\tthis._onWatchEvent.fire(res);\n\n\t\t\t\t// Logging\n\t\t\t\tif (this._verboseLogging) {\n\t\t\t\t\tres.forEach(r => {\n\t\t\t\t\t\tthis.log(` >> normalized ${r.type === FileChangeType.ADDED ? '[ADDED]' : r.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${r.path}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t});\n\t\t}).then(watcher => {\n\t\t\tthis._pathWatchers[request.path].watcher = watcher;\n\t\t\tconst startPromise = watcher.start();\n\t\t\tstartPromise.then(() => readyPromiseResolve(watcher));\n\t\t\treturn startPromise;\n\t\t});\n\t}\n\n\tpublic setRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\tconst promises: Promise<void>[] = [];\n\t\tconst normalizedRoots = this._normalizeRoots(roots);\n\n\t\t// Gather roots that are not currently being watched\n\t\tconst rootsToStartWatching = normalizedRoots.filter(r => {\n\t\t\treturn !(r.path in this._pathWatchers);\n\t\t});\n\n\t\t// Gather current roots that don't exist in the new roots array\n\t\tconst rootsToStopWatching = Object.keys(this._pathWatchers).filter(r => {\n\t\t\treturn normalizedRoots.every(normalizedRoot => normalizedRoot.path !== r);\n\t\t});\n\n\t\t// Logging\n\t\tif (this._verboseLogging) {\n\t\t\tthis.log(`Start watching: [${rootsToStartWatching.map(r => r.path).join(',')}]\\nStop watching: [${rootsToStopWatching.join(',')}]`);\n\t\t}\n\n\t\t// Stop watching some roots\n\t\trootsToStopWatching.forEach(root => {\n\t\t\tthis._pathWatchers[root].ready.then(watcher => watcher.stop());\n\t\t\tdelete this._pathWatchers[root];\n\t\t});\n\n\t\t// Start watching some roots\n\t\trootsToStartWatching.forEach(root => this._watch(root));\n\n\t\t// Refresh ignored arrays in case they changed\n\t\troots.forEach(root => {\n\t\t\tif (root.path in this._pathWatchers) {\n\t\t\t\tthis._pathWatchers[root.path].ignored = Array.isArray(root.excludes) ? root.excludes.map(ignored => glob.parse(ignored)) : [];\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.all(promises).then(() => undefined);\n\t}\n\n\tpublic setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis._verboseLogging = enabled;\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic stop(): Promise<void> {\n\t\tfor (let path in this._pathWatchers) {\n\t\t\tlet watcher = this._pathWatchers[path];\n\t\t\twatcher.ready.then(watcher => watcher.stop());\n\t\t\tdelete this._pathWatchers[path];\n\t\t}\n\t\tthis._pathWatchers = Object.create(null);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Normalizes a set of root paths by removing any root paths that are\n\t * sub-paths of other roots.\n\t */\n\tprotected _normalizeRoots(roots: IWatcherRequest[]): IWatcherRequest[] {\n\t\treturn roots.filter(r => roots.every(other => {\n\t\t\treturn !(r.path.length > other.path.length && extpath.isEqualOrParent(r.path, other.path));\n\t\t}));\n\t}\n\n\tprivate _isPathIgnored(absolutePath: string, ignored: glob.ParsedPattern[]): boolean {\n\t\treturn ignored && ignored.some(i => i(absolutePath));\n\t}\n\n\tprivate log(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'trace', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate warn(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'warn', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate error(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'error', message: `[File Watcher (nsfw)] ` + message });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Server } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { WatcherChannel } from 'vs/platform/files/node/watcher/nsfw/watcherIpc';\nimport { NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/nsfwWatcherService';\n\nconst server = new Server('watcher');\nconst service = new NsfwWatcherService();\nconst channel = new WatcherChannel(service);\nserver.registerChannel('watcher', channel);"]}