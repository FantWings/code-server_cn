{"version":3,"sources":["vs/platform/files/node/watcher/nsfw/fake","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/errors.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/arrays.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/functional.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/lifecycle.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/linkedList.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/event.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/cancellation.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/platform.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/process.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/path.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/stream.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/strings.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/buffer.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/types.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/objects.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/uri.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/amd.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/console.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/normalization.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/common/uuid.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/decoder.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/pfs.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/extpath.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/node/processes.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherIpc.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/common/files.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/nsfwWatcherService.ts","vs/platform/files/node/watcher/nsfw/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherApp.ts"],"names":["__m","__M","deps","result","i","len","length","ErrorHandler","[object Object]","this","listeners","unexpectedErrorHandler","e","setTimeout","stack","Error","message","listener","push","_removeListener","forEach","splice","indexOf","newUnexpectedErrorHandler","emit","exports","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","error","name","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","NotImplementedError","super","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","data","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","n","topStep","m","element","pop","j","firstIndex","fn","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","key","comparator","comp","groupBy","currentGroup","undefined","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","to","move","from","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","Object","create","elem","distinctES6","Set","has","add","uniqueFilter","lastIndex","first","notFoundValue","index","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","indexer","merger","t","reduce","r","insert","arrayInsert","target","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","value","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","map","asArray","getRandomElement","once","_this","didCall","apply","arguments","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","console","log","dispose","disposables","d","isDisposable","thing","combinedDisposable","toDisposable","self","DisposableStore","_toDispose","_isDisposed","clear","item","DISABLE_DISPOSED_WARNING","warn","_store","freeze","MutableDisposable","_value","ReferenceCollection","references","Map","reference","get","counter","object","createReferencedObject","set","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","next","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","Symbol","iterator","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","Date","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","join","count","topStack","topCount","options","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","all","catch","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","bind","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","parent","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","errors","onfinally","finally","raceCancellation","defaultValue","race","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","isElectronRenderer","process","versions","electron","type","navigator","platform","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","translationsConfigFile","_globals","global","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","replace","msg","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","newWriteableStream","reducer","WriteableStreamImpl","isReadableStream","pause","resume","destroy","every","state","flowing","ended","destroyed","flowData","flowErrors","flowEnd","write","fullDataBuffer","consumeReadable","readable","chunks","chunk","read","consumeReadableWithLimit","maxChunks","lastReadChunk","consumeStream","stream","consumeStreamWithLimit","wrapperStream","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","substring","rtrim","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","diff","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","fromCharCode","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","endOffset","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","pattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","text","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","readUInt16LE","writeUInt16LE","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","toSlashes","osPath","path_1","getRoot","firstLetter","pos","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","indexOfPath","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","assertType","condition","assertIsDefined","assertAllDefined","hasOwnProperty","prototype","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","deepClone","keys","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","types_1","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","stringify","getOrDefault","k","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","change","_URI","percentDecode","components","uri","pathFragment","newPath","file","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","matches","line","Number","column","label","isOneStringArg","consoleArgs","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeSettings","webviewPanel","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","location","pathname","values","forEachable","getOrSet","mapToString","entries","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","ch","UriIteratorState","UriIterator","_states","_stateIdx","caseSensitive","network_1","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","segments","_iter","_root","iter","segment","val","oldElement","_nodeIterator","_forEach","done","ResourceMap","toStringTag","toKey","clb","thisArg","tuple","resourceMap","Touch","LinkedMap","_map","_head","_tail","touch","previous","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","max","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","some","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","removeAccents","regex","originalFSPath","hasToIgnoreCase","parentCandidate","isEqualAuthority","a1","a2","hasTrailingPathSeparator","fsp","caseInsensitivePath","fromPath","toPath","getComparisonKey","basenameOrAuthority","second","ignoreFragment","p1","p2","joinPath","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forUris","glob_1","rootExpression","findSubstr","toLocalResource","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","RimRafMode","rimraf","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","stat","lstat","isDirectory","isSymbolicLink","chmod","unlink","children","readdir","child","util_1","promisify","fs","rmdir","handleDirectoryChildren","readdirSync","normalization_1","oldPath","mkdirp","mkdir","recursive","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","exists","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","readFile","writeFilePathQueues","writeFile","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","files","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","fileExists","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","found","pfs_1","prefix","ix","realpath","access","constants","R_OK","realpathSync","accessSync","State","DataType","RequestType","ResponseType","BufferReader","bytes","BufferWriter","buffer_1","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","send","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","disposable","listen","timeoutTimer","requests","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","arrays_1","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","define","nls","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","localize","useExec","cc","ee","cp","stdout","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","amd_1","require","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","fullPath","withExtension","Server","ipc_1","Client","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","child_process_1","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","WatcherChannel","service","watch","onLogMessage","setRoots","setVerboseLogging","stop","WatcherChannelClient","enable","roots","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","createDecorator","serviceId","serviceIds","getServiceDependencies","ctor","IInstantiationService","serviceIdentifier","FileSystemProviderErrorCode","IFileService","instantiation_1","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","nls_1","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","checkForChangeType","resources_1","getOfType","hasType","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","normalized","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","files_1","nsfwActionToRawChangeType","NsfwWatcherService","_pathWatchers","_onWatchEvent","onWatchEvent","_onLogMessage","undeliveredFileEvents","fileEventDelayer","FS_EVENT_DELAY","readyPromiseResolve","ready","ignored","excludes","glob","enospcErrorLogged","realBasePathDiffers","realBasePathLength","realBasePath","_verboseLogging","nsfw","logPath","action","directory","oldFile","newFile","absolutePath","_isPathIgnored","newDirectory","watcher_1","watcher","startPromise","normalizedRoots","_normalizeRoots","rootsToStartWatching","rootsToStopWatching","normalizedRoot","_watch","enabled","server","ipc_cp_1","nsfwWatcherService_1","watcherIpc_1"],"mappings":"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","file":"watcherApp.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * @deprecated ES6: use `Array.findIndex`\n */\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T> {\n\tlet promiseResolve: (() => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.();\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t */\n\twrite(data: T): void;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer);\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tconstructor(private reducer: IReducer<T>) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: IReducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlet wrapperStream: WriteableStream<T> | undefined = undefined;\n\n\t\tstream.on('data', data => {\n\n\t\t\t// If we reach maxChunks, we start to return a stream\n\t\t\t// and make sure that any data we have already read\n\t\t\t// is in it as well\n\t\t\tif (!wrapperStream && chunks.length === maxChunks) {\n\t\t\t\twrapperStream = newWriteableStream(reducer);\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.write(data);\n\n\t\t\t\treturn resolve(wrapperStream);\n\t\t\t}\n\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.write(data);\n\t\t\t} else {\n\t\t\t\tchunks.push(data);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('error', error => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.error(error);\n\t\t\t} else {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('end', () => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.end();\n\t\t\t} else {\n\t\t\t\treturn resolve(reducer(chunks));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * @deprecated ES6: use `String.startsWith`\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated ES6: use `String.endsWith`\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\n/**\n * @deprecated ES6\n */\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n * todo@joh use toJSON-results\n */\nexport type Dto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: T[K] extends Function\n\t? never\n\t: UriDto<T[K]> };\n\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\n/**\n * @deprecated ES6\n */\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\t// NOTE@coder: Use fsPath for Windows support.\n\t\tlet query = `path=${encodeURIComponent(uri.fsPath)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\n\n/**\n * @deprecated ES6: use `[...SetOrMap.values()]`\n */\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\n/**\n * @deprecated ES6: use `[...map.keys()]`\n */\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\t//todo@jrieken the case-sensitive logic is copied form `resources.ts#hasToIgnoreCase`\n\t\t\t// which cannot be used because it depends on this\n\t\t\tconst caseSensitive = key.scheme === Schemas.file && isLinux;\n\t\t\tthis._pathIterator = new PathIterator(false, caseSensitive);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator());\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<K, V>): Iterator<V> {\n\t\tlet res: { done: false; value: V; };\n\t\tlet idx: number;\n\t\tlet data: V[];\n\t\tconst next = (): IteratorResult<V> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: V, index: K) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<K, V> | undefined, callback: (value: V, index: K) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V>{\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n/**\n * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n * URI queries are included, fragments are ignored.\n */\nexport function getComparisonKey(resource: URI, caseInsensitivePath = hasToIgnoreCase(resource)): string {\n\tlet path = resource.path || '/';\n\tif (caseInsensitivePath) {\n\t\tpath = path.toLowerCase();\n\t}\n\treturn resource.with({ authority: resource.authority.toLowerCase(), path: path, fragment: null }).toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * URI queries must match, fragments are ignored.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase) && base.query === parentCandidate.query;\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path || '/', parentCandidate.path || '/', ignoreCase, '/') && base.query === parentCandidate.query;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests whether the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\n/**\n * Tests whether two resources are the same.  URI queries must match, fragments are ignored unless requested.\n */\nexport function isEqual(first: URI | undefined, second: URI | undefined, caseInsensitivePath = hasToIgnoreCase(first), ignoreFragment = true): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn (p1 === p2 || caseInsensitivePath && equalsIgnoreCase(p1, p2)) && first.query === second.query && (ignoreFragment || first.fragment === second.fragment);\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tlet dirname;\n\tif (resource.scheme === Schemas.file) {\n\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t} else {\n\t\tdirname = paths.posix.dirname(resource.path);\n\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t}\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === 'file') {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, caseInsensitivePath = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (caseInsensitivePath) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI, expression: ParsedExpression }> = TernarySearchTree.forUris<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accommodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone, assign } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/Microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = assign(deepClone(process.env), { 'VSCODE_PARENT_PID': String(process.pid) });\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = assign(forkOpts.env, this.options.env);\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An even that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[]) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as glob from 'vs/base/common/glob';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport * as nsfw from 'vscode-nsfw';\nimport { IWatcherService, IWatcherRequest, IWatcherOptions } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { realcaseSync, realpathSync } from 'vs/base/node/extpath';\n\nconst nsfwActionToRawChangeType: { [key: number]: number } = [];\nnsfwActionToRawChangeType[nsfw.actions.CREATED] = FileChangeType.ADDED;\nnsfwActionToRawChangeType[nsfw.actions.MODIFIED] = FileChangeType.UPDATED;\nnsfwActionToRawChangeType[nsfw.actions.DELETED] = FileChangeType.DELETED;\n\ninterface IWatcherObjet {\n\tstart(): any;\n\tstop(): any;\n}\n\ninterface IPathWatcher {\n\tready: Promise<IWatcherObjet>;\n\twatcher?: IWatcherObjet;\n\tignored: glob.ParsedPattern[];\n}\n\nexport class NsfwWatcherService implements IWatcherService {\n\tprivate static readonly FS_EVENT_DELAY = 50; // aggregate and only emit events when changes have stopped for this duration (in ms)\n\n\tprivate _pathWatchers: { [watchPath: string]: IPathWatcher } = {};\n\tprivate _verboseLogging: boolean | undefined;\n\tprivate enospcErrorLogged: boolean | undefined;\n\n\tprivate readonly _onWatchEvent = new Emitter<IDiskFileChange[]>();\n\treadonly onWatchEvent = this._onWatchEvent.event;\n\n\tprivate readonly _onLogMessage = new Emitter<ILogMessage>();\n\treadonly onLogMessage: Event<ILogMessage> = this._onLogMessage.event;\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.onWatchEvent;\n\t}\n\n\tprivate _watch(request: IWatcherRequest): void {\n\t\tlet undeliveredFileEvents: IDiskFileChange[] = [];\n\t\tconst fileEventDelayer = new ThrottledDelayer<void>(NsfwWatcherService.FS_EVENT_DELAY);\n\n\t\tlet readyPromiseResolve: (watcher: IWatcherObjet) => void;\n\t\tthis._pathWatchers[request.path] = {\n\t\t\tready: new Promise<IWatcherObjet>(resolve => readyPromiseResolve = resolve),\n\t\t\tignored: Array.isArray(request.excludes) ? request.excludes.map(ignored => glob.parse(ignored)) : []\n\t\t};\n\n\t\tprocess.on('uncaughtException', (e: Error | string) => {\n\n\t\t\t// Specially handle ENOSPC errors that can happen when\n\t\t\t// the watcher consumes so many file descriptors that\n\t\t\t// we are running into a limit. We only want to warn\n\t\t\t// once in this case to avoid log spam.\n\t\t\t// See https://github.com/Microsoft/vscode/issues/7950\n\t\t\tif (e === 'Inotify limit reached' && !this.enospcErrorLogged) {\n\t\t\t\tthis.enospcErrorLogged = true;\n\t\t\t\tthis.error('Inotify limit reached (ENOSPC)');\n\t\t\t}\n\t\t});\n\n\t\t// NSFW does not report file changes in the path provided on macOS if\n\t\t// - the path uses wrong casing\n\t\t// - the path is a symbolic link\n\t\t// We have to detect this case and massage the events to correct this.\n\t\tlet realBasePathDiffers = false;\n\t\tlet realBasePathLength = request.path.length;\n\t\tif (platform.isMacintosh) {\n\t\t\ttry {\n\n\t\t\t\t// First check for symbolic link\n\t\t\t\tlet realBasePath = realpathSync(request.path);\n\n\t\t\t\t// Second check for casing difference\n\t\t\t\tif (request.path === realBasePath) {\n\t\t\t\t\trealBasePath = (realcaseSync(request.path) || request.path);\n\t\t\t\t}\n\n\t\t\t\tif (request.path !== realBasePath) {\n\t\t\t\t\trealBasePathLength = realBasePath.length;\n\t\t\t\t\trealBasePathDiffers = true;\n\n\t\t\t\t\tthis.warn(`Watcher basePath does not match version on disk and will be corrected (original: ${request.path}, real: ${realBasePath})`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\n\t\tif (this._verboseLogging) {\n\t\t\tthis.log(`Start watching with nsfw: ${request.path}`);\n\t\t}\n\n\t\tnsfw(request.path, events => {\n\t\t\tfor (const e of events) {\n\t\t\t\t// Logging\n\t\t\t\tif (this._verboseLogging) {\n\t\t\t\t\tconst logPath = e.action === nsfw.actions.RENAMED ? path.join(e.directory, e.oldFile || '') + ' -> ' + e.newFile : path.join(e.directory, e.file || '');\n\t\t\t\t\tthis.log(`${e.action === nsfw.actions.CREATED ? '[CREATED]' : e.action === nsfw.actions.DELETED ? '[DELETED]' : e.action === nsfw.actions.MODIFIED ? '[CHANGED]' : '[RENAMED]'} ${logPath}`);\n\t\t\t\t}\n\n\t\t\t\t// Convert nsfw event to IRawFileChange and add to queue\n\t\t\t\tlet absolutePath: string;\n\t\t\t\tif (e.action === nsfw.actions.RENAMED) {\n\t\t\t\t\t// Rename fires when a file's name changes within a single directory\n\t\t\t\t\tabsolutePath = path.join(e.directory, e.oldFile || '');\n\t\t\t\t\tif (!this._isPathIgnored(absolutePath, this._pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.DELETED, path: absolutePath });\n\t\t\t\t\t} else if (this._verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t\tabsolutePath = path.join(e.newDirectory || e.directory, e.newFile || '');\n\t\t\t\t\tif (!this._isPathIgnored(absolutePath, this._pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.ADDED, path: absolutePath });\n\t\t\t\t\t} else if (this._verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tabsolutePath = path.join(e.directory, e.file || '');\n\t\t\t\t\tif (!this._isPathIgnored(absolutePath, this._pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({\n\t\t\t\t\t\t\ttype: nsfwActionToRawChangeType[e.action],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (this._verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delay and send buffer\n\t\t\tfileEventDelayer.trigger(() => {\n\t\t\t\tconst events = undeliveredFileEvents;\n\t\t\t\tundeliveredFileEvents = [];\n\n\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\tevents.forEach(e => {\n\n\t\t\t\t\t\t// Mac uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\te.path = normalizeNFC(e.path);\n\n\t\t\t\t\t\t// Convert paths back to original form in case it differs\n\t\t\t\t\t\tif (realBasePathDiffers) {\n\t\t\t\t\t\t\te.path = request.path + e.path.substr(realBasePathLength);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Broadcast to clients normalized\n\t\t\t\tconst res = normalizeFileChanges(events);\n\t\t\t\tthis._onWatchEvent.fire(res);\n\n\t\t\t\t// Logging\n\t\t\t\tif (this._verboseLogging) {\n\t\t\t\t\tres.forEach(r => {\n\t\t\t\t\t\tthis.log(` >> normalized ${r.type === FileChangeType.ADDED ? '[ADDED]' : r.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${r.path}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t});\n\t\t}).then(watcher => {\n\t\t\tthis._pathWatchers[request.path].watcher = watcher;\n\t\t\tconst startPromise = watcher.start();\n\t\t\tstartPromise.then(() => readyPromiseResolve(watcher));\n\t\t\treturn startPromise;\n\t\t});\n\t}\n\n\tpublic setRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\tconst promises: Promise<void>[] = [];\n\t\tconst normalizedRoots = this._normalizeRoots(roots);\n\n\t\t// Gather roots that are not currently being watched\n\t\tconst rootsToStartWatching = normalizedRoots.filter(r => {\n\t\t\treturn !(r.path in this._pathWatchers);\n\t\t});\n\n\t\t// Gather current roots that don't exist in the new roots array\n\t\tconst rootsToStopWatching = Object.keys(this._pathWatchers).filter(r => {\n\t\t\treturn normalizedRoots.every(normalizedRoot => normalizedRoot.path !== r);\n\t\t});\n\n\t\t// Logging\n\t\tif (this._verboseLogging) {\n\t\t\tthis.log(`Start watching: [${rootsToStartWatching.map(r => r.path).join(',')}]\\nStop watching: [${rootsToStopWatching.join(',')}]`);\n\t\t}\n\n\t\t// Stop watching some roots\n\t\trootsToStopWatching.forEach(root => {\n\t\t\tthis._pathWatchers[root].ready.then(watcher => watcher.stop());\n\t\t\tdelete this._pathWatchers[root];\n\t\t});\n\n\t\t// Start watching some roots\n\t\trootsToStartWatching.forEach(root => this._watch(root));\n\n\t\t// Refresh ignored arrays in case they changed\n\t\troots.forEach(root => {\n\t\t\tif (root.path in this._pathWatchers) {\n\t\t\t\tthis._pathWatchers[root.path].ignored = Array.isArray(root.excludes) ? root.excludes.map(ignored => glob.parse(ignored)) : [];\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.all(promises).then(() => undefined);\n\t}\n\n\tpublic setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis._verboseLogging = enabled;\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic stop(): Promise<void> {\n\t\tfor (let path in this._pathWatchers) {\n\t\t\tlet watcher = this._pathWatchers[path];\n\t\t\twatcher.ready.then(watcher => watcher.stop());\n\t\t\tdelete this._pathWatchers[path];\n\t\t}\n\t\tthis._pathWatchers = Object.create(null);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Normalizes a set of root paths by removing any root paths that are\n\t * sub-paths of other roots.\n\t */\n\tprotected _normalizeRoots(roots: IWatcherRequest[]): IWatcherRequest[] {\n\t\treturn roots.filter(r => roots.every(other => {\n\t\t\treturn !(r.path.length > other.path.length && extpath.isEqualOrParent(r.path, other.path));\n\t\t}));\n\t}\n\n\tprivate _isPathIgnored(absolutePath: string, ignored: glob.ParsedPattern[]): boolean {\n\t\treturn ignored && ignored.some(i => i(absolutePath));\n\t}\n\n\tprivate log(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'trace', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate warn(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'warn', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate error(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'error', message: `[File Watcher (nsfw)] ` + message });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Server } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { WatcherChannel } from 'vs/platform/files/node/watcher/nsfw/watcherIpc';\nimport { NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/nsfwWatcherService';\n\nconst server = new Server('watcher');\nconst service = new NsfwWatcherService();\nconst channel = new WatcherChannel(service);\nserver.registerChannel('watcher', channel);"]}