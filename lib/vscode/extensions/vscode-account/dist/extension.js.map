{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"vscode\"","webpack:///./src/extension.ts","webpack:///./src/AADHelper.ts","webpack:///external \"crypto\"","webpack:///external \"https\"","webpack:///external \"querystring\"","webpack:///./src/authServer.ts","webpack:///external \"http\"","webpack:///external \"url\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///./src/keychain.ts","webpack:///external \"keytar\"","webpack:///./src/logger.ts","webpack:///./src/utils.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","vscode","AADHelper_1","activate","context","loginService","AzureActiveDirectoryService","initialize","authentication","registerAuthenticationProvider","id","displayName","onDidChangeSessions","event","getSessions","Promise","resolve","sessions","login","scopes","__awaiter","this","sort","join","e","window","showErrorMessage","logout","deactivate","crypto","https","querystring","authServer_1","keychain_1","logger_1","utils_1","redirectUrl","loginEndpointUrl","clientId","tenant","EventEmitter","UriEventHandler","[object Object]","uri","fire","_tokens","_refreshTimeouts","Map","_uriHandler","registerUriHandler","storedData","keychain","getToken","parseStoredData","seen","refreshes","filter","session","map","refreshToken","scope","all","clearSessions","pollForChange","data","JSON","parse","serializedData","token","sessionId","setToken","stringify","setTimeout","didChange","promises","some","concat","default","error","message","length","accessToken","split","Buffer","from","toString","Error","convertToSession","info","env","uiKind","UIKind","Web","loginWithoutLocalServer","nonce","randomBytes","server","redirectPromise","codePromise","createServer","port","startServer","openExternal","Uri","encodeURIComponent","redirectReq","err","res","writeHead","Location","end","host","req","headers","updatedPortStr","exec","Array","isArray","state","parseInt","codeVerifier","toBase64UrlEncoding","codeChallenge","createHash","update","digest","loginUrl","codeRes","exchangeCodeForToken","code","close","callbackUri","authority","asExternalUri","uriScheme","match","scheme","getCallbackEnvironment","query","signInUrl","with","timeoutPromise","reject","wait","clearTimeout","race","handleCodeResponse","uriEventListener","reduce","prev","current","queryString","parseQuery","then","result","dispose","catch","existingTokenIndex","findIndex","splice","push","existingTimeout","set","expiresIn","storeTokenData","buffer","json","claims","getTokenClaims","access_token","expires_in","refresh_token","tid","oid","altsecid","email","unique_name","postData","grant_type","client_id","code_verifier","redirect_uri","tokenUrl","post","request","path","method","Content-Type","Content-Length","on","chunk","statusCode","getTokenFromResponse","write","tokenIndex","deleteToken","timeout","delete","forEach","clear","http","url","fs","_typeof","number","string","undefined","function","isUndefined","obj","isUndefinedOrNull","assertIsDefined","arg","sendFile","filepath","contentType","readFile","body","console","createTerminateServer","sockets","socketCount","socket","destroy","portTimer","cancelPortTimer","address","_","listen","deferredRedirect","deferredCode","codeTimer","cancelCodeTimer","reqUrl","pathname","replace","__dirname","error_description","callback","SERVICE_ID","ACCOUNT_ID","Keychain","keytar","log","getKeytar","setPassword","getPassword","deletePassword","padLeft","pad","repeat","Math","max","Logger","output","createOutputChannel","stack","success","logLevel","level","appendLine","now","data2String","Date","getUTCHours","getMinutes","getUTCSeconds","getMilliseconds","base64string"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"vscode\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { AzureActiveDirectoryService, onDidChangeSessions } from './AADHelper';\n\nexport async function activate(context: vscode.ExtensionContext) {\n\n\tconst loginService = new AzureActiveDirectoryService();\n\n\tawait loginService.initialize();\n\n\tvscode.authentication.registerAuthenticationProvider({\n\t\tid: 'MSA',\n\t\tdisplayName: 'Microsoft',\n\t\tonDidChangeSessions: onDidChangeSessions.event,\n\t\tgetSessions: () => Promise.resolve(loginService.sessions),\n\t\tlogin: async (scopes: string[]) => {\n\t\t\ttry {\n\t\t\t\tawait loginService.login(scopes.sort().join(' '));\n\t\t\t\treturn loginService.sessions[0]!;\n\t\t\t} catch (e) {\n\t\t\t\tvscode.window.showErrorMessage(`Logging in failed: ${e}`);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\tlogout: async (id: string) => {\n\t\t\treturn loginService.logout(id);\n\t\t}\n\t});\n\n\treturn;\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() { }\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as crypto from 'crypto';\nimport * as https from 'https';\nimport * as querystring from 'querystring';\nimport * as vscode from 'vscode';\nimport { createServer, startServer } from './authServer';\nimport { keychain } from './keychain';\nimport Logger from './logger';\nimport { toBase64UrlEncoding } from './utils';\n\nconst redirectUrl = 'https://vscode-redirect.azurewebsites.net/';\nconst loginEndpointUrl = 'https://login.microsoftonline.com/';\nconst clientId = 'aebc6443-996d-45c2-90f0-388ff96faa56';\nconst tenant = 'organizations';\n\ninterface IToken {\n\texpiresIn: string; // How long access token is valid, in seconds\n\taccessToken: string;\n\trefreshToken: string;\n\n\tdisplayName: string;\n\tscope: string;\n\tsessionId: string; // The account id + the scope\n}\n\ninterface ITokenClaims {\n\ttid: string;\n\temail?: string;\n\tunique_name?: string;\n\toid?: string;\n\taltsecid?: string;\n\tscp: string;\n}\n\ninterface IStoredSession {\n\tid: string;\n\trefreshToken: string;\n\tscope: string; // Scopes are alphabetized and joined with a space\n}\n\nfunction parseQuery(uri: vscode.Uri) {\n\treturn uri.query.split('&').reduce((prev: any, current) => {\n\t\tconst queryString = current.split('=');\n\t\tprev[queryString[0]] = queryString[1];\n\t\treturn prev;\n\t}, {});\n}\n\nexport const onDidChangeSessions = new vscode.EventEmitter<void>();\n\nclass UriEventHandler extends vscode.EventEmitter<vscode.Uri> implements vscode.UriHandler {\n\tpublic handleUri(uri: vscode.Uri) {\n\t\tthis.fire(uri);\n\t}\n}\n\nexport class AzureActiveDirectoryService {\n\tprivate _tokens: IToken[] = [];\n\tprivate _refreshTimeouts: Map<string, NodeJS.Timeout> = new Map<string, NodeJS.Timeout>();\n\tprivate _uriHandler: UriEventHandler;\n\n\tconstructor() {\n\t\tthis._uriHandler = new UriEventHandler();\n\t\tvscode.window.registerUriHandler(this._uriHandler);\n\t}\n\n\tpublic async initialize(): Promise<void> {\n\t\tconst storedData = await keychain.getToken();\n\t\tif (storedData) {\n\t\t\ttry {\n\t\t\t\tconst sessions = this.parseStoredData(storedData);\n\n\t\t\t\t// TODO remove, temporary fix to delete duplicated refresh tokens from https://github.com/microsoft/vscode/issues/89334\n\t\t\t\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\t\t\t\tconst dedupedSessions = sessions.filter(session => {\n\t\t\t\t\tif (seen[session.id]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tseen[session.id] = true;\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\tconst refreshes = dedupedSessions.map(async session => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.refreshToken(session.refreshToken, session.scope);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tawait this.logout(session.id);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tawait Promise.all(refreshes);\n\t\t\t} catch (e) {\n\t\t\t\tawait this.clearSessions();\n\t\t\t}\n\t\t}\n\n\t\tthis.pollForChange();\n\t}\n\n\tprivate parseStoredData(data: string): IStoredSession[] {\n\t\treturn JSON.parse(data);\n\t}\n\n\tprivate async storeTokenData(): Promise<void> {\n\t\tconst serializedData: IStoredSession[] = this._tokens.map(token => {\n\t\t\treturn {\n\t\t\t\tid: token.sessionId,\n\t\t\t\trefreshToken: token.refreshToken,\n\t\t\t\tscope: token.scope\n\t\t\t};\n\t\t});\n\n\t\tawait keychain.setToken(JSON.stringify(serializedData));\n\t}\n\n\tprivate pollForChange() {\n\t\tsetTimeout(async () => {\n\t\t\tlet didChange = false;\n\t\t\tconst storedData = await keychain.getToken();\n\t\t\tif (storedData) {\n\t\t\t\ttry {\n\t\t\t\t\tconst sessions = this.parseStoredData(storedData);\n\t\t\t\t\tlet promises = sessions.map(async session => {\n\t\t\t\t\t\tconst matchesExisting = this._tokens.some(token => token.scope === session.scope && token.sessionId === session.id);\n\t\t\t\t\t\tif (!matchesExisting) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.refreshToken(session.refreshToken, session.scope);\n\t\t\t\t\t\t\t\tdidChange = true;\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tawait this.logout(session.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tpromises = promises.concat(this._tokens.map(async token => {\n\t\t\t\t\t\tconst matchesExisting = sessions.some(session => token.scope === session.scope && token.sessionId === session.id);\n\t\t\t\t\t\tif (!matchesExisting) {\n\t\t\t\t\t\t\tawait this.logout(token.sessionId);\n\t\t\t\t\t\t\tdidChange = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\n\t\t\t\t\tawait Promise.all(promises);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tLogger.error(e.message);\n\t\t\t\t\t// if data is improperly formatted, remove all of it and send change event\n\t\t\t\t\tthis.clearSessions();\n\t\t\t\t\tdidChange = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._tokens.length) {\n\t\t\t\t\t// Log out all\n\t\t\t\t\tawait this.clearSessions();\n\t\t\t\t\tdidChange = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (didChange) {\n\t\t\t\tonDidChangeSessions.fire();\n\t\t\t}\n\n\t\t\tthis.pollForChange();\n\t\t}, 1000 * 30);\n\t}\n\n\tprivate convertToSession(token: IToken): vscode.Session {\n\t\treturn {\n\t\t\tid: token.sessionId,\n\t\t\taccessToken: token.accessToken,\n\t\t\tdisplayName: token.displayName,\n\t\t\tscopes: token.scope.split(' ')\n\t\t};\n\t}\n\n\tprivate getTokenClaims(accessToken: string): ITokenClaims {\n\t\ttry {\n\t\t\treturn JSON.parse(Buffer.from(accessToken.split('.')[1], 'base64').toString());\n\t\t} catch (e) {\n\t\t\tLogger.error(e.message);\n\t\t\tthrow new Error('Unable to read token claims');\n\t\t}\n\t}\n\n\tget sessions(): vscode.Session[] {\n\t\treturn this._tokens.map(token => this.convertToSession(token));\n\t}\n\n\tpublic async login(scope: string): Promise<void> {\n\t\tLogger.info('Logging in...');\n\n\t\tif (vscode.env.uiKind === vscode.UIKind.Web) {\n\t\t\tawait this.loginWithoutLocalServer(scope);\n\t\t\treturn;\n\t\t}\n\n\t\tconst nonce = crypto.randomBytes(16).toString('base64');\n\t\tconst { server, redirectPromise, codePromise } = createServer(nonce);\n\n\t\tlet token: IToken | undefined;\n\t\ttry {\n\t\t\tconst port = await startServer(server);\n\t\t\tvscode.env.openExternal(vscode.Uri.parse(`http://localhost:${port}/signin?nonce=${encodeURIComponent(nonce)}`));\n\n\t\t\tconst redirectReq = await redirectPromise;\n\t\t\tif ('err' in redirectReq) {\n\t\t\t\tconst { err, res } = redirectReq;\n\t\t\t\tres.writeHead(302, { Location: `/?error=${encodeURIComponent(err && err.message || 'Unknown error')}` });\n\t\t\t\tres.end();\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst host = redirectReq.req.headers.host || '';\n\t\t\tconst updatedPortStr = (/^[^:]+:(\\d+)$/.exec(Array.isArray(host) ? host[0] : host) || [])[1];\n\t\t\tconst updatedPort = updatedPortStr ? parseInt(updatedPortStr, 10) : port;\n\n\t\t\tconst state = `${updatedPort},${encodeURIComponent(nonce)}`;\n\n\t\t\tconst codeVerifier = toBase64UrlEncoding(crypto.randomBytes(32).toString('base64'));\n\t\t\tconst codeChallenge = toBase64UrlEncoding(crypto.createHash('sha256').update(codeVerifier).digest('base64'));\n\t\t\tconst loginUrl = `${loginEndpointUrl}${tenant}/oauth2/v2.0/authorize?response_type=code&response_mode=query&client_id=${encodeURIComponent(clientId)}&redirect_uri=${encodeURIComponent(redirectUrl)}&state=${state}&scope=${encodeURIComponent(scope)}&prompt=select_account&code_challenge_method=S256&code_challenge=${codeChallenge}`;\n\n\t\t\tawait redirectReq.res.writeHead(302, { Location: loginUrl });\n\t\t\tredirectReq.res.end();\n\n\t\t\tconst codeRes = await codePromise;\n\t\t\tconst res = codeRes.res;\n\n\t\t\ttry {\n\t\t\t\tif ('err' in codeRes) {\n\t\t\t\t\tthrow codeRes.err;\n\t\t\t\t}\n\t\t\t\ttoken = await this.exchangeCodeForToken(codeRes.code, codeVerifier, scope);\n\t\t\t\tthis.setToken(token, scope);\n\t\t\t\tLogger.info('Login successful');\n\t\t\t\tres.writeHead(302, { Location: '/' });\n\t\t\t\tres.end();\n\t\t\t} catch (err) {\n\t\t\t\tLogger.error(err.message);\n\t\t\t\tres.writeHead(302, { Location: `/?error=${encodeURIComponent(err && err.message || 'Unknown error')}` });\n\t\t\t\tres.end();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tLogger.error(e.message);\n\n\t\t\t// If the error was about starting the server, try directly hitting the login endpoint instead\n\t\t\tif (e.message === 'Error listening to server' || e.message === 'Closed' || e.message === 'Timeout waiting for port') {\n\t\t\t\tawait this.loginWithoutLocalServer(scope);\n\t\t\t}\n\t\t} finally {\n\t\t\tsetTimeout(() => {\n\t\t\t\tserver.close();\n\t\t\t}, 5000);\n\t\t}\n\t}\n\n\tprivate getCallbackEnvironment(callbackUri: vscode.Uri): string {\n\t\tswitch (callbackUri.authority) {\n\t\t\tcase 'online.visualstudio.com,':\n\t\t\t\treturn 'vso';\n\t\t\tcase 'online-ppe.core.vsengsaas.visualstudio.com':\n\t\t\t\treturn 'vsoppe,';\n\t\t\tcase 'online.dev.core.vsengsaas.visualstudio.com':\n\t\t\t\treturn 'vsodev,';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate async loginWithoutLocalServer(scope: string): Promise<IToken> {\n\t\tconst callbackUri = await vscode.env.asExternalUri(vscode.Uri.parse(`${vscode.env.uriScheme}://vscode.vscode-account`));\n\t\tconst nonce = crypto.randomBytes(16).toString('base64');\n\t\tconst port = (callbackUri.authority.match(/:([0-9]*)$/) || [])[1] || (callbackUri.scheme === 'https' ? 443 : 80);\n\t\tconst callbackEnvironment = this.getCallbackEnvironment(callbackUri);\n\t\tconst state = `${callbackEnvironment}${port},${encodeURIComponent(nonce)},${encodeURIComponent(callbackUri.query)}`;\n\t\tconst signInUrl = `${loginEndpointUrl}${tenant}/oauth2/v2.0/authorize`;\n\t\tlet uri = vscode.Uri.parse(signInUrl);\n\t\tconst codeVerifier = toBase64UrlEncoding(crypto.randomBytes(32).toString('base64'));\n\t\tconst codeChallenge = toBase64UrlEncoding(crypto.createHash('sha256').update(codeVerifier).digest('base64'));\n\t\turi = uri.with({\n\t\t\tquery: `response_type=code&client_id=${encodeURIComponent(clientId)}&response_mode=query&redirect_uri=${redirectUrl}&state=${state}&scope=${scope}&prompt=select_account&code_challenge_method=S256&code_challenge=${codeChallenge}`\n\t\t});\n\t\tvscode.env.openExternal(uri);\n\n\t\tconst timeoutPromise = new Promise((resolve: (value: IToken) => void, reject) => {\n\t\t\tconst wait = setTimeout(() => {\n\t\t\t\tclearTimeout(wait);\n\t\t\t\treject('Login timed out.');\n\t\t\t}, 1000 * 60 * 5);\n\t\t});\n\n\t\treturn Promise.race([this.handleCodeResponse(state, codeVerifier, scope), timeoutPromise]);\n\t}\n\n\tprivate async handleCodeResponse(state: string, codeVerifier: string, scope: string) {\n\t\tlet uriEventListener: vscode.Disposable;\n\t\treturn new Promise((resolve: (value: IToken) => void, reject) => {\n\t\t\turiEventListener = this._uriHandler.event(async (uri: vscode.Uri) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst query = parseQuery(uri);\n\t\t\t\t\tconst code = query.code;\n\n\t\t\t\t\tif (query.state !== state) {\n\t\t\t\t\t\tthrow new Error('State does not match.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst token = await this.exchangeCodeForToken(code, codeVerifier, scope);\n\t\t\t\t\tthis.setToken(token, scope);\n\n\t\t\t\t\tresolve(token);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(result => {\n\t\t\turiEventListener.dispose();\n\t\t\treturn result;\n\t\t}).catch(err => {\n\t\t\turiEventListener.dispose();\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tprivate async setToken(token: IToken, scope: string): Promise<void> {\n\t\tconst existingTokenIndex = this._tokens.findIndex(t => t.sessionId === token.sessionId);\n\t\tif (existingTokenIndex > -1) {\n\t\t\tthis._tokens.splice(existingTokenIndex, 1, token);\n\t\t} else {\n\t\t\tthis._tokens.push(token);\n\t\t}\n\n\t\tconst existingTimeout = this._refreshTimeouts.get(token.sessionId);\n\t\tif (existingTimeout) {\n\t\t\tclearTimeout(existingTimeout);\n\t\t}\n\n\t\tthis._refreshTimeouts.set(token.sessionId, setTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tawait this.refreshToken(token.refreshToken, scope);\n\t\t\t} catch (e) {\n\t\t\t\tawait this.logout(token.sessionId);\n\t\t\t} finally {\n\t\t\t\tonDidChangeSessions.fire();\n\t\t\t}\n\t\t}, 1000 * (parseInt(token.expiresIn) - 30)));\n\n\t\tthis.storeTokenData();\n\t}\n\n\tprivate getTokenFromResponse(buffer: Buffer[], scope: string): IToken {\n\t\tconst json = JSON.parse(Buffer.concat(buffer).toString());\n\t\tconst claims = this.getTokenClaims(json.access_token);\n\t\treturn {\n\t\t\texpiresIn: json.expires_in,\n\t\t\taccessToken: json.access_token,\n\t\t\trefreshToken: json.refresh_token,\n\t\t\tscope,\n\t\t\tsessionId: claims.tid + (claims.oid || claims.altsecid) + scope,\n\t\t\tdisplayName: claims.email || claims.unique_name || 'user@example.com'\n\t\t};\n\t}\n\n\tprivate async exchangeCodeForToken(code: string, codeVerifier: string, scope: string): Promise<IToken> {\n\t\treturn new Promise((resolve: (value: IToken) => void, reject) => {\n\t\t\tLogger.info('Exchanging login code for token');\n\t\t\ttry {\n\t\t\t\tconst postData = querystring.stringify({\n\t\t\t\t\tgrant_type: 'authorization_code',\n\t\t\t\t\tcode: code,\n\t\t\t\t\tclient_id: clientId,\n\t\t\t\t\tscope: scope,\n\t\t\t\t\tcode_verifier: codeVerifier,\n\t\t\t\t\tredirect_uri: redirectUrl\n\t\t\t\t});\n\n\t\t\t\tconst tokenUrl = vscode.Uri.parse(`${loginEndpointUrl}${tenant}/oauth2/v2.0/token`);\n\n\t\t\t\tconst post = https.request({\n\t\t\t\t\thost: tokenUrl.authority,\n\t\t\t\t\tpath: tokenUrl.path,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t\t'Content-Length': postData.length\n\t\t\t\t\t}\n\t\t\t\t}, result => {\n\t\t\t\t\tconst buffer: Buffer[] = [];\n\t\t\t\t\tresult.on('data', (chunk: Buffer) => {\n\t\t\t\t\t\tbuffer.push(chunk);\n\t\t\t\t\t});\n\t\t\t\t\tresult.on('end', () => {\n\t\t\t\t\t\tif (result.statusCode === 200) {\n\t\t\t\t\t\t\tLogger.info('Exchanging login code for token success');\n\t\t\t\t\t\t\tresolve(this.getTokenFromResponse(buffer, scope));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tLogger.error('Exchanging login code for token failed');\n\t\t\t\t\t\t\treject(new Error('Unable to login.'));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tpost.write(postData);\n\n\t\t\t\tpost.end();\n\t\t\t\tpost.on('error', err => {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\n\t\t\t} catch (e) {\n\t\t\t\tLogger.error(e.message);\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async refreshToken(refreshToken: string, scope: string): Promise<IToken> {\n\t\treturn new Promise((resolve: (value: IToken) => void, reject) => {\n\t\t\tLogger.info('Refreshing token...');\n\t\t\tconst postData = querystring.stringify({\n\t\t\t\trefresh_token: refreshToken,\n\t\t\t\tclient_id: clientId,\n\t\t\t\tgrant_type: 'refresh_token',\n\t\t\t\tscope: scope\n\t\t\t});\n\n\t\t\tconst post = https.request({\n\t\t\t\thost: 'login.microsoftonline.com',\n\t\t\t\tpath: `/${tenant}/oauth2/v2.0/token`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t'Content-Length': postData.length\n\t\t\t\t}\n\t\t\t}, result => {\n\t\t\t\tconst buffer: Buffer[] = [];\n\t\t\t\tresult.on('data', (chunk: Buffer) => {\n\t\t\t\t\tbuffer.push(chunk);\n\t\t\t\t});\n\t\t\t\tresult.on('end', async () => {\n\t\t\t\t\tif (result.statusCode === 200) {\n\t\t\t\t\t\tconst token = this.getTokenFromResponse(buffer, scope);\n\t\t\t\t\t\tthis.setToken(token, scope);\n\t\t\t\t\t\tLogger.info('Token refresh success');\n\t\t\t\t\t\tresolve(token);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLogger.error('Refreshing token failed');\n\t\t\t\t\t\treject(new Error('Refreshing token failed.'));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tpost.write(postData);\n\n\t\t\tpost.end();\n\t\t\tpost.on('error', err => {\n\t\t\t\tLogger.error(err.message);\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic async logout(sessionId: string) {\n\t\tLogger.info(`Logging out of session '${sessionId}'`);\n\t\tconst tokenIndex = this._tokens.findIndex(token => token.sessionId === sessionId);\n\t\tif (tokenIndex > -1) {\n\t\t\tthis._tokens.splice(tokenIndex, 1);\n\t\t}\n\n\t\tif (this._tokens.length === 0) {\n\t\t\tawait keychain.deleteToken();\n\t\t} else {\n\t\t\tthis.storeTokenData();\n\t\t}\n\n\t\tconst timeout = this._refreshTimeouts.get(sessionId);\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t\tthis._refreshTimeouts.delete(sessionId);\n\t\t}\n\t}\n\n\tpublic async clearSessions() {\n\t\tLogger.info('Logging out of all sessions');\n\t\tthis._tokens = [];\n\t\tawait keychain.deleteToken();\n\n\t\tthis._refreshTimeouts.forEach(timeout => {\n\t\t\tclearTimeout(timeout);\n\t\t});\n\n\t\tthis._refreshTimeouts.clear();\n\t}\n}\n","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"querystring\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as http from 'http';\nimport * as url from 'url';\nimport * as fs from 'fs';\nimport * as net from 'net';\nimport * as path from 'path';\n\ninterface Deferred<T> {\n\tresolve: (result: T | Promise<T>) => void;\n\treject: (reason: any) => void;\n}\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\nexport function createTerminateServer(server: http.Server) {\n\tconst sockets: Record<number, net.Socket> = {};\n\tlet socketCount = 0;\n\tserver.on('connection', socket => {\n\t\tconst id = socketCount++;\n\t\tsockets[id] = socket;\n\t\tsocket.on('close', () => {\n\t\t\tdelete sockets[id];\n\t\t});\n\t});\n\treturn async () => {\n\t\tconst result = new Promise<Error | undefined>(resolve => server.close(resolve));\n\t\tfor (const id in sockets) {\n\t\t\tsockets[id].destroy();\n\t\t}\n\t\treturn result;\n\t};\n}\n\nexport async function startServer(server: http.Server): Promise<string> {\n\tlet portTimer: NodeJS.Timer;\n\n\tfunction cancelPortTimer() {\n\t\tclearTimeout(portTimer);\n\t}\n\n\tconst port = new Promise<string>((resolve, reject) => {\n\t\tportTimer = setTimeout(() => {\n\t\t\treject(new Error('Timeout waiting for port'));\n\t\t}, 5000);\n\n\t\tserver.on('listening', () => {\n\t\t\tconst address = server.address();\n\t\t\tif (typeof address === 'string') {\n\t\t\t\tresolve(address);\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(address).port.toString());\n\t\t\t}\n\t\t});\n\n\t\tserver.on('error', _ => {\n\t\t\treject(new Error('Error listening to server'));\n\t\t});\n\n\t\tserver.on('close', () => {\n\t\t\treject(new Error('Closed'));\n\t\t});\n\n\t\tserver.listen(0);\n\t});\n\n\tport.then(cancelPortTimer, cancelPortTimer);\n\treturn port;\n}\n\nfunction sendFile(res: http.ServerResponse, filepath: string, contentType: string) {\n\tfs.readFile(filepath, (err, body) => {\n\t\tif (err) {\n\t\t\tconsole.error(err);\n\t\t\tres.writeHead(404);\n\t\t\tres.end();\n\t\t} else {\n\t\t\tres.writeHead(200, {\n\t\t\t\t'Content-Length': body.length,\n\t\t\t\t'Content-Type': contentType\n\t\t\t});\n\t\t\tres.end(body);\n\t\t}\n\t});\n}\n\nasync function callback(nonce: string, reqUrl: url.Url): Promise<string> {\n\tconst query = reqUrl.query;\n\tif (!query || typeof query === 'string') {\n\t\tthrow new Error('No query received.');\n\t}\n\n\tlet error = query.error_description || query.error;\n\n\tif (!error) {\n\t\tconst state = (query.state as string) || '';\n\t\tconst receivedNonce = (state.split(',')[1] || '').replace(/ /g, '+');\n\t\tif (receivedNonce !== nonce) {\n\t\t\terror = 'Nonce does not match.';\n\t\t}\n\t}\n\n\tconst code = query.code as string;\n\tif (!error && code) {\n\t\treturn code;\n\t}\n\n\tthrow new Error((error as string) || 'No code received.');\n}\n\nexport function createServer(nonce: string) {\n\ttype RedirectResult = { req: http.IncomingMessage; res: http.ServerResponse; } | { err: any; res: http.ServerResponse; };\n\tlet deferredRedirect: Deferred<RedirectResult>;\n\tconst redirectPromise = new Promise<RedirectResult>((resolve, reject) => deferredRedirect = { resolve, reject });\n\n\ttype CodeResult = { code: string; res: http.ServerResponse; } | { err: any; res: http.ServerResponse; };\n\tlet deferredCode: Deferred<CodeResult>;\n\tconst codePromise = new Promise<CodeResult>((resolve, reject) => deferredCode = { resolve, reject });\n\n\tconst codeTimer = setTimeout(() => {\n\t\tdeferredCode.reject(new Error('Timeout waiting for code'));\n\t}, 5 * 60 * 1000);\n\n\tfunction cancelCodeTimer() {\n\t\tclearTimeout(codeTimer);\n\t}\n\n\tconst server = http.createServer(function (req, res) {\n\t\tconst reqUrl = url.parse(req.url!, /* parseQueryString */ true);\n\t\tswitch (reqUrl.pathname) {\n\t\t\tcase '/signin':\n\t\t\t\tconst receivedNonce = ((reqUrl.query.nonce as string) || '').replace(/ /g, '+');\n\t\t\t\tif (receivedNonce === nonce) {\n\t\t\t\t\tdeferredRedirect.resolve({ req, res });\n\t\t\t\t} else {\n\t\t\t\t\tconst err = new Error('Nonce does not match.');\n\t\t\t\t\tdeferredRedirect.resolve({ err, res });\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tsendFile(res, path.join(__dirname, '../media/auth.html'), 'text/html; charset=utf-8');\n\t\t\t\tbreak;\n\t\t\tcase '/auth.css':\n\t\t\t\tsendFile(res, path.join(__dirname, '../media/auth.css'), 'text/css; charset=utf-8');\n\t\t\t\tbreak;\n\t\t\tcase '/callback':\n\t\t\t\tdeferredCode.resolve(callback(nonce, reqUrl)\n\t\t\t\t\t.then(code => ({ code, res }), err => ({ err, res })));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tcodePromise.then(cancelCodeTimer, cancelCodeTimer);\n\treturn {\n\t\tserver,\n\t\tredirectPromise,\n\t\tcodePromise\n\t};\n}\n","module.exports = require(\"http\");","module.exports = require(\"url\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// keytar depends on a native module shipped in vscode, so this is\n// how we load it\nimport * as keytarType from 'keytar';\nimport { env } from 'vscode';\n\nfunction getKeytar(): Keytar | undefined {\n\ttry {\n\t\treturn require('keytar');\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n\n\treturn undefined;\n}\n\nexport type Keytar = {\n\tgetPassword: typeof keytarType['getPassword'];\n\tsetPassword: typeof keytarType['setPassword'];\n\tdeletePassword: typeof keytarType['deletePassword'];\n};\n\nconst SERVICE_ID = `${env.uriScheme}-vscode.login`;\nconst ACCOUNT_ID = 'account';\n\nexport class Keychain {\n\tprivate keytar: Keytar;\n\n\tconstructor() {\n\t\tconst keytar = getKeytar();\n\t\tif (!keytar) {\n\t\t\tthrow new Error('System keychain unavailable');\n\t\t}\n\n\t\tthis.keytar = keytar;\n\t}\n\n\tasync setToken(token: string): Promise<void> {\n\t\ttry {\n\t\t\treturn await this.keytar.setPassword(SERVICE_ID, ACCOUNT_ID, token);\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t}\n\n\tasync getToken() {\n\t\ttry {\n\t\t\treturn await this.keytar.getPassword(SERVICE_ID, ACCOUNT_ID);\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t}\n\n\tasync deleteToken() {\n\t\ttry {\n\t\t\treturn await this.keytar.deletePassword(SERVICE_ID, ACCOUNT_ID);\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t}\n}\n\nexport const keychain = new Keychain();\n","module.exports = require(\"keytar\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\ntype LogLevel = 'Trace' | 'Info' | 'Error';\n\nclass Log {\n\tprivate output: vscode.OutputChannel;\n\n\tconstructor() {\n\t\tthis.output = vscode.window.createOutputChannel('Account');\n\t}\n\n\tprivate data2String(data: any): string {\n\t\tif (data instanceof Error) {\n\t\t\treturn data.stack || data.message;\n\t\t}\n\t\tif (data.success === false && data.message) {\n\t\t\treturn data.message;\n\t\t}\n\t\treturn data.toString();\n\t}\n\n\tpublic info(message: string, data?: any): void {\n\t\tthis.logLevel('Info', message, data);\n\t}\n\n\tpublic error(message: string, data?: any): void {\n\t\tthis.logLevel('Error', message, data);\n\t}\n\n\tpublic logLevel(level: LogLevel, message: string, data?: any): void {\n\t\tthis.output.appendLine(`[${level}  - ${this.now()}] ${message}`);\n\t\tif (data) {\n\t\t\tthis.output.appendLine(this.data2String(data));\n\t\t}\n\t}\n\n\tprivate now(): string {\n\t\tconst now = new Date();\n\t\treturn padLeft(now.getUTCHours() + '', 2, '0')\n\t\t\t+ ':' + padLeft(now.getMinutes() + '', 2, '0')\n\t\t\t+ ':' + padLeft(now.getUTCSeconds() + '', 2, '0') + '.' + now.getMilliseconds();\n\t}\n}\n\nfunction padLeft(s: string, n: number, pad = ' ') {\n\treturn pad.repeat(Math.max(0, n - s.length)) + s;\n}\n\nconst Logger = new Log();\nexport default Logger;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function toBase64UrlEncoding(base64string: string) {\n\treturn base64string.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_'); // Need to use base64url encoding\n}\n"],"sourceRoot":""}