{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"external \\\"path\\\"\",\"external \\\"vscode\\\"\",\"/repo/lib/vscode/extensions/configuration-editing/node_modules/vscode-nls/lib/main.js\",\"/repo/lib/vscode/extensions/configuration-editing/node_modules/jsonc-parser/lib/esm/impl/scanner.js\",\"/repo/lib/vscode/extensions/configuration-editing/node_modules/jsonc-parser/lib/esm/impl/format.js\",\"/repo/lib/vscode/extensions/configuration-editing/node_modules/jsonc-parser/lib/esm/impl/parser.js\",\"/repo/lib/vscode/extensions/configuration-editing/node_modules/jsonc-parser/lib/esm/impl/edit.js\",\"/repo/lib/vscode/extensions/configuration-editing/node_modules/jsonc-parser/lib/esm/main.js\",\"/repo/lib/vscode/extensions/configuration-editing/src/extension.ts\",\"external \\\"fs\\\"\",\"/repo/lib/vscode/extensions/configuration-editing/src/settingsDocumentHelper.ts\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"require\",\"MessageFormat\",\"LocalizeInfo\",\"resolvedBundles\",\"options\",\"isPseudo\",\"path\",\"fs\",\"toString\",\"isDefined\",\"isString\",\"readJsonFileSync\",\"filename\",\"JSON\",\"parse\",\"readFileSync\",\"format\",\"message\",\"args\",\"replace\",\"length\",\"match\",\"rest\",\"index\",\"arg\",\"replaced\",\"String\",\"createScopedLocalizeFunction\",\"messages\",\"_i\",\"arguments\",\"isNumber\",\"console\",\"error\",\"Error\",\"stack\",\"warn\",\"localize\",\"cacheBundle\",\"bundle\",\"loadNlsBundleOrCreateFromI18n\",\"header\",\"bundlePath\",\"result\",\"join\",\"cacheRoot\",\"id\",\"hash\",\"useMemoryOnly\",\"writeBundle\",\"encoding\",\"flag\",\"file\",\"Date\",\"utimes\",\"touch\",\"err\",\"code\",\"SyntaxError\",\"log\",\"unlink\",\"metaDataPath\",\"languagePackLocation\",\"translationsConfig\",\"languagePack\",\"contents\",\"metaData\",\"module_2\",\"entry\",\"translations\",\"outDir\",\"resultMessages\",\"keys\",\"messageKey\",\"translatedMessage\",\"undefined\",\"push\",\"createNLSBundle\",\"writeFileSync\",\"stringify\",\"loadDefaultNlsBundle\",\"folder\",\"module_1\",\"createDefaultNlsBundle\",\"loadNlsBundle\",\"languagePackSupport\",\"languagePackId\",\"translationsConfigFile\",\"candidate\",\"root\",\"locale\",\"existsSync\",\"lastIndexOf\",\"substring\",\"findInTheBoxBundle\",\"loadMessageBundle\",\"ext\",\"extname\",\"substr\",\"messageFormat\",\"both\",\"headerFile\",\"dirname\",\"parent\",\"tryFindMetaDataHeaderFile\",\"nlsBundle\",\"module_3\",\"json\",\"resolvedLanguage\",\"cacheLanguageResolution\",\"resolveLanguage\",\"Array\",\"isArray\",\"is\",\"comment\",\"process\",\"env\",\"VSCODE_NLS_CONFIG\",\"vscodeOptions\",\"toLowerCase\",\"isBoolean\",\"_languagePackSupport\",\"_cacheRoot\",\"_languagePackId\",\"_translationsConfigFile\",\"_corruptedFile\",\"writeFile\",\"_a\",\"initializeSettings\",\"config\",\"opts\",\"createScanner\",\"text\",\"ignoreTrivia\",\"pos\",\"len\",\"tokenOffset\",\"token\",\"lineNumber\",\"lineStartOffset\",\"tokenLineStartOffset\",\"prevTokenLineStartOffset\",\"scanError\",\"scanHexDigits\",\"count\",\"exact\",\"digits\",\"ch\",\"charCodeAt\",\"scanNext\",\"isWhiteSpace\",\"fromCharCode\",\"isLineBreak\",\"start\",\"ch_1\",\"scanString\",\"safeLength\",\"commentClosed\",\"isDigit\",\"end\",\"scanNumber\",\"isUnknownContentCharacter\",\"setPosition\",\"newPosition\",\"getPosition\",\"scan\",\"getToken\",\"getTokenValue\",\"getTokenOffset\",\"getTokenLength\",\"getTokenStartLine\",\"getTokenStartCharacter\",\"getTokenError\",\"documentText\",\"range\",\"initialIndentLevel\",\"formatText\",\"formatTextStart\",\"rangeStart\",\"rangeEnd\",\"offset\",\"isEOL\",\"endOffset\",\"content\",\"nChars\",\"tabSize\",\"charAt\",\"Math\",\"floor\",\"computeIndentLevel\",\"indentValue\",\"eol\",\"getEOL\",\"lineBreak\",\"indentLevel\",\"insertSpaces\",\"repeat\",\"scanner\",\"hasError\",\"newLineAndIndent\",\"editOperations\",\"addEdit\",\"startOffset\",\"firstToken\",\"firstTokenStart\",\"firstTokenEnd\",\"secondToken\",\"replaceContent\",\"indexOf\",\"ParseOptions\",\"parseTree\",\"errors\",\"DEFAULT\",\"currentParent\",\"type\",\"children\",\"ensurePropertyComplete\",\"onValue\",\"valueNode\",\"visit\",\"onObjectBegin\",\"onObjectProperty\",\"onObjectEnd\",\"onArrayBegin\",\"onArrayEnd\",\"onLiteralValue\",\"getLiteralNodeType\",\"onSeparator\",\"sep\",\"colonOffset\",\"onError\",\"findNodeAtLocation\",\"node\",\"path_1\",\"segment\",\"found\",\"_b\",\"propertyNode\",\"visitor\",\"_scanner\",\"toNoArgVisit\",\"visitFunction\",\"toOneArgVisit\",\"onComment\",\"disallowComments\",\"allowTrailingComma\",\"handleError\",\"skipUntilAfter\",\"skipUntil\",\"parseString\",\"isValue\",\"parseValue\",\"needsComma\",\"parseArray\",\"parseObject\",\"e\",\"parseLiteral\",\"setProperty\",\"originalPath\",\"formattingOptions\",\"getInsertionIndex\",\"slice\",\"lastSegment\",\"pop\",\"existing\",\"propertyIndex\",\"removeBegin\",\"removeEnd\",\"previous\",\"withFormatting\",\"newProperty\",\"map\",\"edit\",\"removalIndex\",\"toRemove\",\"newText\",\"applyEdit\",\"begin\",\"edits\",\"edit_1\",\"min\",\"max\",\"__webpack_exports__\",\"applyEdits\",\"main_createScanner\",\"main_getLocation\",\"position\",\"segments\",\"earlyReturnException\",\"previousNode\",\"previousNodeInst\",\"isAtPropertyKey\",\"setPreviousNode\",\"last\",\"matches\",\"pattern\",\"k\",\"main_parse\",\"currentProperty\",\"previousParents\",\"array\",\"main_parseTree\",\"main_findNodeAtLocation\",\"main_findNodeAtOffset\",\"findNodeAtOffset\",\"includeRightBound\",\"contains\",\"item\",\"main_getNodePath\",\"getNodePath\",\"main_getNodeValue\",\"getNodeValue\",\"obj\",\"prop\",\"main_visit\",\"main_stripComments\",\"replaceCh\",\"kind\",\"parts\",\"printParseErrorCode\",\"main_format\",\"modify\",\"jsonc_parser_1\",\"vscode\",\"nls\",\"settingsDocumentHelper_1\",\"__dirname\",\"registerVariableCompletions\",\"languages\",\"registerCompletionItemProvider\",\"language\",\"[object Object]\",\"document\",\"_token\",\"location\",\"getLocation\",\"getText\",\"offsetAt\",\"indexOf$\",\"lineAt\",\"line\",\"startPosition\",\"Position\",\"label\",\"detail\",\"variable\",\"Range\",\"provideInstalledExtensionProposals\",\"extensionsContent\",\"alreadyEnteredExtensions\",\"recommendations\",\"knownExtensionProposals\",\"extensions\",\"all\",\"filter\",\"startsWith\",\"CompletionItem\",\"insertText\",\"CompletionItemKind\",\"Value\",\"filterText\",\"example\",\"activate\",\"context\",\"subscriptions\",\"provideCompletionItems\",\"SettingsDocument\",\"getWordRangeAtPosition\",\"registerDocumentSymbolProvider\",\"lastProperty\",\"depthInObjects\",\"_offset\",\"_length\",\"SymbolInformation\",\"SymbolKind\",\"positionAt\",\"this\",\"provideWindowTitleCompletionItems\",\"provideFilesAssociationsCompletionItems\",\"provideExcludeCompletionItems\",\"provideLanguageCompletionItems\",\"then\",\"items\",\"newSimpleCompletionItem\",\"provideLanguageOverridesCompletionItems\",\"_location\",\"completions\",\"Promise\",\"resolve\",\"newSnippetCompletionItem\",\"documentation\",\"snippet\",\"formatFunc\",\"getLanguages\",\"completionItems\",\"configuration\",\"workspace\",\"getConfiguration\",\"inspect\",\"defaultValue\",\"Property\",\"trim\",\"character\",\"description\",\"SnippetString\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 4);\\n\",\"module.exports = require(\\\"path\\\");\",\"module.exports = require(\\\"vscode\\\");\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar path = require(\\\"path\\\");\\r\\nvar fs = require(\\\"fs\\\");\\r\\nvar toString = Object.prototype.toString;\\r\\nfunction isDefined(value) {\\r\\n    return typeof value !== 'undefined';\\r\\n}\\r\\nfunction isNumber(value) {\\r\\n    return toString.call(value) === '[object Number]';\\r\\n}\\r\\nfunction isString(value) {\\r\\n    return toString.call(value) === '[object String]';\\r\\n}\\r\\nfunction isBoolean(value) {\\r\\n    return value === true || value === false;\\r\\n}\\r\\nfunction readJsonFileSync(filename) {\\r\\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\\r\\n}\\r\\nvar MessageFormat;\\r\\n(function (MessageFormat) {\\r\\n    MessageFormat[\\\"file\\\"] = \\\"file\\\";\\r\\n    MessageFormat[\\\"bundle\\\"] = \\\"bundle\\\";\\r\\n    MessageFormat[\\\"both\\\"] = \\\"both\\\";\\r\\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\\r\\nvar LocalizeInfo;\\r\\n(function (LocalizeInfo) {\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\\r\\n    }\\r\\n    LocalizeInfo.is = is;\\r\\n})(LocalizeInfo || (LocalizeInfo = {}));\\r\\nvar resolvedLanguage;\\r\\nvar resolvedBundles;\\r\\nvar options;\\r\\nvar isPseudo;\\r\\nfunction initializeSettings() {\\r\\n    options = { locale: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\\r\\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\\r\\n        try {\\r\\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\\r\\n            if (isString(vscodeOptions.locale)) {\\r\\n                options.locale = vscodeOptions.locale.toLowerCase();\\r\\n            }\\r\\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\\r\\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\\r\\n            }\\r\\n            if (isString(vscodeOptions._cacheRoot)) {\\r\\n                options.cacheRoot = vscodeOptions._cacheRoot;\\r\\n            }\\r\\n            if (isString(vscodeOptions._languagePackId)) {\\r\\n                options.languagePackId = vscodeOptions._languagePackId;\\r\\n            }\\r\\n            if (isString(vscodeOptions._translationsConfigFile)) {\\r\\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\\r\\n                try {\\r\\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\\r\\n                }\\r\\n                catch (error) {\\r\\n                    // We can't read the translation config file. Mark the cache as corrupted.\\r\\n                    if (vscodeOptions._corruptedFile) {\\r\\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\\r\\n                            console.error(err);\\r\\n                        });\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (_a) {\\r\\n            // Do nothing.\\r\\n        }\\r\\n    }\\r\\n    isPseudo = options.locale === 'pseudo';\\r\\n    resolvedLanguage = undefined;\\r\\n    resolvedBundles = Object.create(null);\\r\\n}\\r\\ninitializeSettings();\\r\\nfunction supportsLanguagePack() {\\r\\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\\r\\n        && options.translationsConfig !== undefined;\\r\\n}\\r\\nfunction format(message, args) {\\r\\n    var result;\\r\\n    if (isPseudo) {\\r\\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\\r\\n        message = '\\\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\\\uFF3D';\\r\\n    }\\r\\n    if (args.length === 0) {\\r\\n        result = message;\\r\\n    }\\r\\n    else {\\r\\n        result = message.replace(/\\\\{(\\\\d+)\\\\}/g, function (match, rest) {\\r\\n            var index = rest[0];\\r\\n            var arg = args[index];\\r\\n            var replaced = match;\\r\\n            if (typeof arg === 'string') {\\r\\n                replaced = arg;\\r\\n            }\\r\\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\\r\\n                replaced = String(arg);\\r\\n            }\\r\\n            return replaced;\\r\\n        });\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction createScopedLocalizeFunction(messages) {\\r\\n    return function (key, message) {\\r\\n        var args = [];\\r\\n        for (var _i = 2; _i < arguments.length; _i++) {\\r\\n            args[_i - 2] = arguments[_i];\\r\\n        }\\r\\n        if (isNumber(key)) {\\r\\n            if (key >= messages.length) {\\r\\n                console.error(\\\"Broken localize call found. Index out of bounds. Stacktrace is\\\\n: \\\" + new Error('').stack);\\r\\n                return;\\r\\n            }\\r\\n            return format(messages[key], args);\\r\\n        }\\r\\n        else {\\r\\n            if (isString(message)) {\\r\\n                console.warn(\\\"Message \\\" + message + \\\" didn't get externalized correctly.\\\");\\r\\n                return format(message, args);\\r\\n            }\\r\\n            else {\\r\\n                console.error(\\\"Broken localize call found. Stacktrace is\\\\n: \\\" + new Error('').stack);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n}\\r\\nfunction localize(key, message) {\\r\\n    var args = [];\\r\\n    for (var _i = 2; _i < arguments.length; _i++) {\\r\\n        args[_i - 2] = arguments[_i];\\r\\n    }\\r\\n    return format(message, args);\\r\\n}\\r\\nfunction resolveLanguage(file) {\\r\\n    var resolvedLanguage;\\r\\n    if (options.cacheLanguageResolution && resolvedLanguage) {\\r\\n        resolvedLanguage = resolvedLanguage;\\r\\n    }\\r\\n    else {\\r\\n        if (isPseudo || !options.locale) {\\r\\n            resolvedLanguage = '.nls.json';\\r\\n        }\\r\\n        else {\\r\\n            var locale = options.locale;\\r\\n            while (locale) {\\r\\n                var candidate = '.nls.' + locale + '.json';\\r\\n                if (fs.existsSync(file + candidate)) {\\r\\n                    resolvedLanguage = candidate;\\r\\n                    break;\\r\\n                }\\r\\n                else {\\r\\n                    var index = locale.lastIndexOf('-');\\r\\n                    if (index > 0) {\\r\\n                        locale = locale.substring(0, index);\\r\\n                    }\\r\\n                    else {\\r\\n                        resolvedLanguage = '.nls.json';\\r\\n                        locale = null;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (options.cacheLanguageResolution) {\\r\\n            resolvedLanguage = resolvedLanguage;\\r\\n        }\\r\\n    }\\r\\n    return file + resolvedLanguage;\\r\\n}\\r\\nfunction findInTheBoxBundle(root) {\\r\\n    var locale = options.locale;\\r\\n    while (locale) {\\r\\n        var candidate = path.join(root, \\\"nls.bundle.\\\" + locale + \\\".json\\\");\\r\\n        if (fs.existsSync(candidate)) {\\r\\n            return candidate;\\r\\n        }\\r\\n        else {\\r\\n            var index = locale.lastIndexOf('-');\\r\\n            if (index > 0) {\\r\\n                locale = locale.substring(0, index);\\r\\n            }\\r\\n            else {\\r\\n                locale = undefined;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    // Test if we can reslove the default bundle.\\r\\n    if (locale === undefined) {\\r\\n        var candidate = path.join(root, 'nls.bundle.json');\\r\\n        if (fs.existsSync(candidate)) {\\r\\n            return candidate;\\r\\n        }\\r\\n    }\\r\\n    return undefined;\\r\\n}\\r\\nfunction mkdir(directory) {\\r\\n    try {\\r\\n        fs.mkdirSync(directory);\\r\\n    }\\r\\n    catch (err) {\\r\\n        if (err.code === 'EEXIST') {\\r\\n            return;\\r\\n        }\\r\\n        else if (err.code === 'ENOENT') {\\r\\n            var parent = path.dirname(directory);\\r\\n            if (parent !== directory) {\\r\\n                mkdir(parent);\\r\\n                fs.mkdirSync(directory);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nfunction createDefaultNlsBundle(folder) {\\r\\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\\r\\n    var result = Object.create(null);\\r\\n    for (var module_1 in metaData) {\\r\\n        var entry = metaData[module_1];\\r\\n        result[module_1] = entry.messages;\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction createNLSBundle(header, metaDataPath) {\\r\\n    var languagePackLocation = options.translationsConfig[header.id];\\r\\n    if (!languagePackLocation) {\\r\\n        return undefined;\\r\\n    }\\r\\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\\r\\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\\r\\n    var result = Object.create(null);\\r\\n    for (var module_2 in metaData) {\\r\\n        var entry = metaData[module_2];\\r\\n        var translations = languagePack[header.outDir + \\\"/\\\" + module_2];\\r\\n        if (translations) {\\r\\n            var resultMessages = [];\\r\\n            for (var i = 0; i < entry.keys.length; i++) {\\r\\n                var messageKey = entry.keys[i];\\r\\n                var key = isString(messageKey) ? messageKey : messageKey.key;\\r\\n                var translatedMessage = translations[key];\\r\\n                if (translatedMessage === undefined) {\\r\\n                    translatedMessage = entry.messages[i];\\r\\n                }\\r\\n                resultMessages.push(translatedMessage);\\r\\n            }\\r\\n            result[module_2] = resultMessages;\\r\\n        }\\r\\n        else {\\r\\n            result[module_2] = entry.messages;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction touch(file) {\\r\\n    var d = new Date();\\r\\n    fs.utimes(file, d, d, function () {\\r\\n        // Do nothing. Ignore\\r\\n    });\\r\\n}\\r\\nfunction cacheBundle(key, bundle) {\\r\\n    resolvedBundles[key] = bundle;\\r\\n    return bundle;\\r\\n}\\r\\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\\r\\n    var result;\\r\\n    var bundle = path.join(options.cacheRoot, header.id + \\\"-\\\" + header.hash + \\\".json\\\");\\r\\n    var useMemoryOnly = false;\\r\\n    var writeBundle = false;\\r\\n    try {\\r\\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\\r\\n        touch(bundle);\\r\\n        return result;\\r\\n    }\\r\\n    catch (err) {\\r\\n        if (err.code === 'ENOENT') {\\r\\n            writeBundle = true;\\r\\n        }\\r\\n        else if (err instanceof SyntaxError) {\\r\\n            // We have a syntax error. So no valid JSON. Use\\r\\n            console.log(\\\"Syntax error parsing message bundle: \\\" + err.message + \\\".\\\");\\r\\n            fs.unlink(bundle, function (err) {\\r\\n                if (err) {\\r\\n                    console.error(\\\"Deleting corrupted bundle \\\" + bundle + \\\" failed.\\\");\\r\\n                }\\r\\n            });\\r\\n            useMemoryOnly = true;\\r\\n        }\\r\\n        else {\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n    result = createNLSBundle(header, bundlePath);\\r\\n    if (!result || useMemoryOnly) {\\r\\n        return result;\\r\\n    }\\r\\n    if (writeBundle) {\\r\\n        try {\\r\\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\\r\\n        }\\r\\n        catch (err) {\\r\\n            if (err.code === 'EEXIST') {\\r\\n                return result;\\r\\n            }\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction loadDefaultNlsBundle(bundlePath) {\\r\\n    try {\\r\\n        return createDefaultNlsBundle(bundlePath);\\r\\n    }\\r\\n    catch (err) {\\r\\n        console.log(\\\"Generating default bundle from meta data failed.\\\", err);\\r\\n        return undefined;\\r\\n    }\\r\\n}\\r\\nfunction loadNlsBundle(header, bundlePath) {\\r\\n    var result;\\r\\n    // Core decided to use a language pack. Do the same in the extension\\r\\n    if (supportsLanguagePack()) {\\r\\n        try {\\r\\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\\r\\n        }\\r\\n        catch (err) {\\r\\n            console.log(\\\"Load or create bundle failed \\\", err);\\r\\n        }\\r\\n    }\\r\\n    if (!result) {\\r\\n        // No language pack found, but core is running in language pack mode\\r\\n        // Don't try to use old in the box bundles since the might be stale\\r\\n        // Fall right back to the default bundle.\\r\\n        if (options.languagePackSupport) {\\r\\n            return loadDefaultNlsBundle(bundlePath);\\r\\n        }\\r\\n        var candidate = findInTheBoxBundle(bundlePath);\\r\\n        if (candidate) {\\r\\n            try {\\r\\n                return readJsonFileSync(candidate);\\r\\n            }\\r\\n            catch (err) {\\r\\n                console.log(\\\"Loading in the box message bundle failed.\\\", err);\\r\\n            }\\r\\n        }\\r\\n        result = loadDefaultNlsBundle(bundlePath);\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction tryFindMetaDataHeaderFile(file) {\\r\\n    var result;\\r\\n    var dirname = path.dirname(file);\\r\\n    while (true) {\\r\\n        result = path.join(dirname, 'nls.metadata.header.json');\\r\\n        if (fs.existsSync(result)) {\\r\\n            break;\\r\\n        }\\r\\n        var parent = path.dirname(dirname);\\r\\n        if (parent === dirname) {\\r\\n            result = undefined;\\r\\n            break;\\r\\n        }\\r\\n        else {\\r\\n            dirname = parent;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction loadMessageBundle(file) {\\r\\n    if (!file) {\\r\\n        // No file. We are in dev mode. Return the default\\r\\n        // localize function.\\r\\n        return localize;\\r\\n    }\\r\\n    // Remove extension since we load json files.\\r\\n    var ext = path.extname(file);\\r\\n    if (ext) {\\r\\n        file = file.substr(0, file.length - ext.length);\\r\\n    }\\r\\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\\r\\n        var headerFile = tryFindMetaDataHeaderFile(file);\\r\\n        if (headerFile) {\\r\\n            var bundlePath = path.dirname(headerFile);\\r\\n            var bundle = resolvedBundles[bundlePath];\\r\\n            if (bundle === undefined) {\\r\\n                try {\\r\\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\\r\\n                    try {\\r\\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\\r\\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\\r\\n                    }\\r\\n                    catch (err) {\\r\\n                        console.error('Failed to load nls bundle', err);\\r\\n                        bundle = cacheBundle(bundlePath, null);\\r\\n                    }\\r\\n                }\\r\\n                catch (err) {\\r\\n                    console.error('Failed to read header file', err);\\r\\n                    bundle = cacheBundle(bundlePath, null);\\r\\n                }\\r\\n            }\\r\\n            if (bundle) {\\r\\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\\\\\/g, '/');\\r\\n                var messages = bundle.nlsBundle[module_3];\\r\\n                if (messages === undefined) {\\r\\n                    console.error(\\\"Messages for file \\\" + file + \\\" not found. See console for details.\\\");\\r\\n                    return function () {\\r\\n                        return 'Messages not found.';\\r\\n                    };\\r\\n                }\\r\\n                return createScopedLocalizeFunction(messages);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\\r\\n        // Try to load a single file bundle\\r\\n        try {\\r\\n            var json = readJsonFileSync(resolveLanguage(file));\\r\\n            if (Array.isArray(json)) {\\r\\n                return createScopedLocalizeFunction(json);\\r\\n            }\\r\\n            else {\\r\\n                if (isDefined(json.messages) && isDefined(json.keys)) {\\r\\n                    return createScopedLocalizeFunction(json.messages);\\r\\n                }\\r\\n                else {\\r\\n                    console.error(\\\"String bundle '\\\" + file + \\\"' uses an unsupported format.\\\");\\r\\n                    return function () {\\r\\n                        return 'File bundle has unsupported format. See console for details';\\r\\n                    };\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (err) {\\r\\n            if (err.code !== 'ENOENT') {\\r\\n                console.error('Failed to load single file bundle', err);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    console.error(\\\"Failed to load message bundle for file \\\" + file);\\r\\n    return function () {\\r\\n        return 'Failed to load message bundle. See console for details.';\\r\\n    };\\r\\n}\\r\\nexports.loadMessageBundle = loadMessageBundle;\\r\\nfunction config(opts) {\\r\\n    if (opts) {\\r\\n        if (isString(opts.locale)) {\\r\\n            options.locale = opts.locale.toLowerCase();\\r\\n            resolvedLanguage = undefined;\\r\\n            resolvedBundles = Object.create(null);\\r\\n        }\\r\\n        if (opts.messageFormat !== undefined) {\\r\\n            options.messageFormat = opts.messageFormat;\\r\\n        }\\r\\n    }\\r\\n    isPseudo = options.locale === 'pseudo';\\r\\n    return loadMessageBundle;\\r\\n}\\r\\nexports.config = config;\\r\\n//# sourceMappingURL=main.js.map\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n'use strict';\\n/**\\n * Creates a JSON scanner on the given text.\\n * If ignoreTrivia is set, whitespaces or comments are ignored.\\n */\\nexport function createScanner(text, ignoreTrivia) {\\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* None */;\\n    function scanHexDigits(count, exact) {\\n        var digits = 0;\\n        var value = 0;\\n        while (digits < count || !exact) {\\n            var ch = text.charCodeAt(pos);\\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\\n                value = value * 16 + ch - 48 /* _0 */;\\n            }\\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\\n                value = value * 16 + ch - 65 /* A */ + 10;\\n            }\\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\\n                value = value * 16 + ch - 97 /* a */ + 10;\\n            }\\n            else {\\n                break;\\n            }\\n            pos++;\\n            digits++;\\n        }\\n        if (digits < count) {\\n            value = -1;\\n        }\\n        return value;\\n    }\\n    function setPosition(newPosition) {\\n        pos = newPosition;\\n        value = '';\\n        tokenOffset = 0;\\n        token = 16 /* Unknown */;\\n        scanError = 0 /* None */;\\n    }\\n    function scanNumber() {\\n        var start = pos;\\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\\n            pos++;\\n        }\\n        else {\\n            pos++;\\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\\n                pos++;\\n            }\\n        }\\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\\n            pos++;\\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\\n                pos++;\\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\\n                    pos++;\\n                }\\n            }\\n            else {\\n                scanError = 3 /* UnexpectedEndOfNumber */;\\n                return text.substring(start, pos);\\n            }\\n        }\\n        var end = pos;\\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\\n            pos++;\\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\\n                pos++;\\n            }\\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\\n                pos++;\\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\\n                    pos++;\\n                }\\n                end = pos;\\n            }\\n            else {\\n                scanError = 3 /* UnexpectedEndOfNumber */;\\n            }\\n        }\\n        return text.substring(start, end);\\n    }\\n    function scanString() {\\n        var result = '', start = pos;\\n        while (true) {\\n            if (pos >= len) {\\n                result += text.substring(start, pos);\\n                scanError = 2 /* UnexpectedEndOfString */;\\n                break;\\n            }\\n            var ch = text.charCodeAt(pos);\\n            if (ch === 34 /* doubleQuote */) {\\n                result += text.substring(start, pos);\\n                pos++;\\n                break;\\n            }\\n            if (ch === 92 /* backslash */) {\\n                result += text.substring(start, pos);\\n                pos++;\\n                if (pos >= len) {\\n                    scanError = 2 /* UnexpectedEndOfString */;\\n                    break;\\n                }\\n                ch = text.charCodeAt(pos++);\\n                switch (ch) {\\n                    case 34 /* doubleQuote */:\\n                        result += '\\\\\\\"';\\n                        break;\\n                    case 92 /* backslash */:\\n                        result += '\\\\\\\\';\\n                        break;\\n                    case 47 /* slash */:\\n                        result += '/';\\n                        break;\\n                    case 98 /* b */:\\n                        result += '\\\\b';\\n                        break;\\n                    case 102 /* f */:\\n                        result += '\\\\f';\\n                        break;\\n                    case 110 /* n */:\\n                        result += '\\\\n';\\n                        break;\\n                    case 114 /* r */:\\n                        result += '\\\\r';\\n                        break;\\n                    case 116 /* t */:\\n                        result += '\\\\t';\\n                        break;\\n                    case 117 /* u */:\\n                        var ch_1 = scanHexDigits(4, true);\\n                        if (ch_1 >= 0) {\\n                            result += String.fromCharCode(ch_1);\\n                        }\\n                        else {\\n                            scanError = 4 /* InvalidUnicode */;\\n                        }\\n                        break;\\n                    default:\\n                        scanError = 5 /* InvalidEscapeCharacter */;\\n                }\\n                start = pos;\\n                continue;\\n            }\\n            if (ch >= 0 && ch <= 0x1f) {\\n                if (isLineBreak(ch)) {\\n                    result += text.substring(start, pos);\\n                    scanError = 2 /* UnexpectedEndOfString */;\\n                    break;\\n                }\\n                else {\\n                    scanError = 6 /* InvalidCharacter */;\\n                    // mark as error but continue with string\\n                }\\n            }\\n            pos++;\\n        }\\n        return result;\\n    }\\n    function scanNext() {\\n        value = '';\\n        scanError = 0 /* None */;\\n        tokenOffset = pos;\\n        lineStartOffset = lineNumber;\\n        prevTokenLineStartOffset = tokenLineStartOffset;\\n        if (pos >= len) {\\n            // at the end\\n            tokenOffset = len;\\n            return token = 17 /* EOF */;\\n        }\\n        var code = text.charCodeAt(pos);\\n        // trivia: whitespace\\n        if (isWhiteSpace(code)) {\\n            do {\\n                pos++;\\n                value += String.fromCharCode(code);\\n                code = text.charCodeAt(pos);\\n            } while (isWhiteSpace(code));\\n            return token = 15 /* Trivia */;\\n        }\\n        // trivia: newlines\\n        if (isLineBreak(code)) {\\n            pos++;\\n            value += String.fromCharCode(code);\\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\\n                pos++;\\n                value += '\\\\n';\\n            }\\n            lineNumber++;\\n            tokenLineStartOffset = pos;\\n            return token = 14 /* LineBreakTrivia */;\\n        }\\n        switch (code) {\\n            // tokens: []{}:,\\n            case 123 /* openBrace */:\\n                pos++;\\n                return token = 1 /* OpenBraceToken */;\\n            case 125 /* closeBrace */:\\n                pos++;\\n                return token = 2 /* CloseBraceToken */;\\n            case 91 /* openBracket */:\\n                pos++;\\n                return token = 3 /* OpenBracketToken */;\\n            case 93 /* closeBracket */:\\n                pos++;\\n                return token = 4 /* CloseBracketToken */;\\n            case 58 /* colon */:\\n                pos++;\\n                return token = 6 /* ColonToken */;\\n            case 44 /* comma */:\\n                pos++;\\n                return token = 5 /* CommaToken */;\\n            // strings\\n            case 34 /* doubleQuote */:\\n                pos++;\\n                value = scanString();\\n                return token = 10 /* StringLiteral */;\\n            // comments\\n            case 47 /* slash */:\\n                var start = pos - 1;\\n                // Single-line comment\\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\\n                    pos += 2;\\n                    while (pos < len) {\\n                        if (isLineBreak(text.charCodeAt(pos))) {\\n                            break;\\n                        }\\n                        pos++;\\n                    }\\n                    value = text.substring(start, pos);\\n                    return token = 12 /* LineCommentTrivia */;\\n                }\\n                // Multi-line comment\\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\\n                    pos += 2;\\n                    var safeLength = len - 1; // For lookahead.\\n                    var commentClosed = false;\\n                    while (pos < safeLength) {\\n                        var ch = text.charCodeAt(pos);\\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\\n                            pos += 2;\\n                            commentClosed = true;\\n                            break;\\n                        }\\n                        pos++;\\n                        if (isLineBreak(ch)) {\\n                            if (ch === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\\n                                pos++;\\n                            }\\n                            lineNumber++;\\n                            tokenLineStartOffset = pos;\\n                        }\\n                    }\\n                    if (!commentClosed) {\\n                        pos++;\\n                        scanError = 1 /* UnexpectedEndOfComment */;\\n                    }\\n                    value = text.substring(start, pos);\\n                    return token = 13 /* BlockCommentTrivia */;\\n                }\\n                // just a single slash\\n                value += String.fromCharCode(code);\\n                pos++;\\n                return token = 16 /* Unknown */;\\n            // numbers\\n            case 45 /* minus */:\\n                value += String.fromCharCode(code);\\n                pos++;\\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\\n                    return token = 16 /* Unknown */;\\n                }\\n            // found a minus, followed by a number so\\n            // we fall through to proceed with scanning\\n            // numbers\\n            case 48 /* _0 */:\\n            case 49 /* _1 */:\\n            case 50 /* _2 */:\\n            case 51 /* _3 */:\\n            case 52 /* _4 */:\\n            case 53 /* _5 */:\\n            case 54 /* _6 */:\\n            case 55 /* _7 */:\\n            case 56 /* _8 */:\\n            case 57 /* _9 */:\\n                value += scanNumber();\\n                return token = 11 /* NumericLiteral */;\\n            // literals and unknown symbols\\n            default:\\n                // is a literal? Read the full word.\\n                while (pos < len && isUnknownContentCharacter(code)) {\\n                    pos++;\\n                    code = text.charCodeAt(pos);\\n                }\\n                if (tokenOffset !== pos) {\\n                    value = text.substring(tokenOffset, pos);\\n                    // keywords: true, false, null\\n                    switch (value) {\\n                        case 'true': return token = 8 /* TrueKeyword */;\\n                        case 'false': return token = 9 /* FalseKeyword */;\\n                        case 'null': return token = 7 /* NullKeyword */;\\n                    }\\n                    return token = 16 /* Unknown */;\\n                }\\n                // some\\n                value += String.fromCharCode(code);\\n                pos++;\\n                return token = 16 /* Unknown */;\\n        }\\n    }\\n    function isUnknownContentCharacter(code) {\\n        if (isWhiteSpace(code) || isLineBreak(code)) {\\n            return false;\\n        }\\n        switch (code) {\\n            case 125 /* closeBrace */:\\n            case 93 /* closeBracket */:\\n            case 123 /* openBrace */:\\n            case 91 /* openBracket */:\\n            case 34 /* doubleQuote */:\\n            case 58 /* colon */:\\n            case 44 /* comma */:\\n            case 47 /* slash */:\\n                return false;\\n        }\\n        return true;\\n    }\\n    function scanNextNonTrivia() {\\n        var result;\\n        do {\\n            result = scanNext();\\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\\n        return result;\\n    }\\n    return {\\n        setPosition: setPosition,\\n        getPosition: function () { return pos; },\\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\\n        getToken: function () { return token; },\\n        getTokenValue: function () { return value; },\\n        getTokenOffset: function () { return tokenOffset; },\\n        getTokenLength: function () { return pos - tokenOffset; },\\n        getTokenStartLine: function () { return lineStartOffset; },\\n        getTokenStartCharacter: function () { return tokenOffset - prevTokenLineStartOffset; },\\n        getTokenError: function () { return scanError; },\\n    };\\n}\\nfunction isWhiteSpace(ch) {\\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\\n}\\nfunction isLineBreak(ch) {\\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\\n}\\nfunction isDigit(ch) {\\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\\n}\\n//# sourceMappingURL=scanner.js.map\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n'use strict';\\nimport { createScanner } from './scanner';\\nexport function format(documentText, range, options) {\\n    var initialIndentLevel;\\n    var formatText;\\n    var formatTextStart;\\n    var rangeStart;\\n    var rangeEnd;\\n    if (range) {\\n        rangeStart = range.offset;\\n        rangeEnd = rangeStart + range.length;\\n        formatTextStart = rangeStart;\\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\\n            formatTextStart--;\\n        }\\n        var endOffset = rangeEnd;\\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\\n            endOffset++;\\n        }\\n        formatText = documentText.substring(formatTextStart, endOffset);\\n        initialIndentLevel = computeIndentLevel(formatText, options);\\n    }\\n    else {\\n        formatText = documentText;\\n        initialIndentLevel = 0;\\n        formatTextStart = 0;\\n        rangeStart = 0;\\n        rangeEnd = documentText.length;\\n    }\\n    var eol = getEOL(options, documentText);\\n    var lineBreak = false;\\n    var indentLevel = 0;\\n    var indentValue;\\n    if (options.insertSpaces) {\\n        indentValue = repeat(' ', options.tabSize || 4);\\n    }\\n    else {\\n        indentValue = '\\\\t';\\n    }\\n    var scanner = createScanner(formatText, false);\\n    var hasError = false;\\n    function newLineAndIndent() {\\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\\n    }\\n    function scanNext() {\\n        var token = scanner.scan();\\n        lineBreak = false;\\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\\n            token = scanner.scan();\\n        }\\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\\n        return token;\\n    }\\n    var editOperations = [];\\n    function addEdit(text, startOffset, endOffset) {\\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\\n        }\\n    }\\n    var firstToken = scanNext();\\n    if (firstToken !== 17 /* EOF */) {\\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\\n        var initialIndent = repeat(indentValue, initialIndentLevel);\\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\\n    }\\n    while (firstToken !== 17 /* EOF */) {\\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\\n        var secondToken = scanNext();\\n        var replaceContent = '';\\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\\n            // comments on the same line: keep them on the same line, but ignore them otherwise\\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\\n            addEdit(' ', firstTokenEnd, commentTokenStart);\\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\\n            secondToken = scanNext();\\n        }\\n        if (secondToken === 2 /* CloseBraceToken */) {\\n            if (firstToken !== 1 /* OpenBraceToken */) {\\n                indentLevel--;\\n                replaceContent = newLineAndIndent();\\n            }\\n        }\\n        else if (secondToken === 4 /* CloseBracketToken */) {\\n            if (firstToken !== 3 /* OpenBracketToken */) {\\n                indentLevel--;\\n                replaceContent = newLineAndIndent();\\n            }\\n        }\\n        else {\\n            switch (firstToken) {\\n                case 3 /* OpenBracketToken */:\\n                case 1 /* OpenBraceToken */:\\n                    indentLevel++;\\n                    replaceContent = newLineAndIndent();\\n                    break;\\n                case 5 /* CommaToken */:\\n                case 12 /* LineCommentTrivia */:\\n                    replaceContent = newLineAndIndent();\\n                    break;\\n                case 13 /* BlockCommentTrivia */:\\n                    if (lineBreak) {\\n                        replaceContent = newLineAndIndent();\\n                    }\\n                    else {\\n                        // symbol following comment on the same line: keep on same line, separate with ' '\\n                        replaceContent = ' ';\\n                    }\\n                    break;\\n                case 6 /* ColonToken */:\\n                    replaceContent = ' ';\\n                    break;\\n                case 10 /* StringLiteral */:\\n                    if (secondToken === 6 /* ColonToken */) {\\n                        replaceContent = '';\\n                        break;\\n                    }\\n                // fall through\\n                case 7 /* NullKeyword */:\\n                case 8 /* TrueKeyword */:\\n                case 9 /* FalseKeyword */:\\n                case 11 /* NumericLiteral */:\\n                case 2 /* CloseBraceToken */:\\n                case 4 /* CloseBracketToken */:\\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\\n                        replaceContent = ' ';\\n                    }\\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\\n                        hasError = true;\\n                    }\\n                    break;\\n                case 16 /* Unknown */:\\n                    hasError = true;\\n                    break;\\n            }\\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\\n                replaceContent = newLineAndIndent();\\n            }\\n        }\\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\\n        firstToken = secondToken;\\n    }\\n    return editOperations;\\n}\\nfunction repeat(s, count) {\\n    var result = '';\\n    for (var i = 0; i < count; i++) {\\n        result += s;\\n    }\\n    return result;\\n}\\nfunction computeIndentLevel(content, options) {\\n    var i = 0;\\n    var nChars = 0;\\n    var tabSize = options.tabSize || 4;\\n    while (i < content.length) {\\n        var ch = content.charAt(i);\\n        if (ch === ' ') {\\n            nChars++;\\n        }\\n        else if (ch === '\\\\t') {\\n            nChars += tabSize;\\n        }\\n        else {\\n            break;\\n        }\\n        i++;\\n    }\\n    return Math.floor(nChars / tabSize);\\n}\\nfunction getEOL(options, text) {\\n    for (var i = 0; i < text.length; i++) {\\n        var ch = text.charAt(i);\\n        if (ch === '\\\\r') {\\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\\\n') {\\n                return '\\\\r\\\\n';\\n            }\\n            return '\\\\r';\\n        }\\n        else if (ch === '\\\\n') {\\n            return '\\\\n';\\n        }\\n    }\\n    return (options && options.eol) || '\\\\n';\\n}\\nexport function isEOL(text, offset) {\\n    return '\\\\r\\\\n'.indexOf(text.charAt(offset)) !== -1;\\n}\\n//# sourceMappingURL=format.js.map\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n'use strict';\\nimport { createScanner } from './scanner';\\nvar ParseOptions;\\n(function (ParseOptions) {\\n    ParseOptions.DEFAULT = {\\n        allowTrailingComma: false\\n    };\\n})(ParseOptions || (ParseOptions = {}));\\n/**\\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\\n */\\nexport function getLocation(text, position) {\\n    var segments = []; // strings or numbers\\n    var earlyReturnException = new Object();\\n    var previousNode = void 0;\\n    var previousNodeInst = {\\n        value: {},\\n        offset: 0,\\n        length: 0,\\n        type: 'object',\\n        parent: void 0\\n    };\\n    var isAtPropertyKey = false;\\n    function setPreviousNode(value, offset, length, type) {\\n        previousNodeInst.value = value;\\n        previousNodeInst.offset = offset;\\n        previousNodeInst.length = length;\\n        previousNodeInst.type = type;\\n        previousNodeInst.colonOffset = void 0;\\n        previousNode = previousNodeInst;\\n    }\\n    try {\\n        visit(text, {\\n            onObjectBegin: function (offset, length) {\\n                if (position <= offset) {\\n                    throw earlyReturnException;\\n                }\\n                previousNode = void 0;\\n                isAtPropertyKey = position > offset;\\n                segments.push(''); // push a placeholder (will be replaced)\\n            },\\n            onObjectProperty: function (name, offset, length) {\\n                if (position < offset) {\\n                    throw earlyReturnException;\\n                }\\n                setPreviousNode(name, offset, length, 'property');\\n                segments[segments.length - 1] = name;\\n                if (position <= offset + length) {\\n                    throw earlyReturnException;\\n                }\\n            },\\n            onObjectEnd: function (offset, length) {\\n                if (position <= offset) {\\n                    throw earlyReturnException;\\n                }\\n                previousNode = void 0;\\n                segments.pop();\\n            },\\n            onArrayBegin: function (offset, length) {\\n                if (position <= offset) {\\n                    throw earlyReturnException;\\n                }\\n                previousNode = void 0;\\n                segments.push(0);\\n            },\\n            onArrayEnd: function (offset, length) {\\n                if (position <= offset) {\\n                    throw earlyReturnException;\\n                }\\n                previousNode = void 0;\\n                segments.pop();\\n            },\\n            onLiteralValue: function (value, offset, length) {\\n                if (position < offset) {\\n                    throw earlyReturnException;\\n                }\\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\\n                if (position <= offset + length) {\\n                    throw earlyReturnException;\\n                }\\n            },\\n            onSeparator: function (sep, offset, length) {\\n                if (position <= offset) {\\n                    throw earlyReturnException;\\n                }\\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\\n                    previousNode.colonOffset = offset;\\n                    isAtPropertyKey = false;\\n                    previousNode = void 0;\\n                }\\n                else if (sep === ',') {\\n                    var last = segments[segments.length - 1];\\n                    if (typeof last === 'number') {\\n                        segments[segments.length - 1] = last + 1;\\n                    }\\n                    else {\\n                        isAtPropertyKey = true;\\n                        segments[segments.length - 1] = '';\\n                    }\\n                    previousNode = void 0;\\n                }\\n            }\\n        });\\n    }\\n    catch (e) {\\n        if (e !== earlyReturnException) {\\n            throw e;\\n        }\\n    }\\n    return {\\n        path: segments,\\n        previousNode: previousNode,\\n        isAtPropertyKey: isAtPropertyKey,\\n        matches: function (pattern) {\\n            var k = 0;\\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\\n                    k++;\\n                }\\n                else if (pattern[k] !== '**') {\\n                    return false;\\n                }\\n            }\\n            return k === pattern.length;\\n        }\\n    };\\n}\\n/**\\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\\n * Therefore always check the errors list to find out if the input was valid.\\n */\\nexport function parse(text, errors, options) {\\n    if (errors === void 0) { errors = []; }\\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\\n    var currentProperty = null;\\n    var currentParent = [];\\n    var previousParents = [];\\n    function onValue(value) {\\n        if (Array.isArray(currentParent)) {\\n            currentParent.push(value);\\n        }\\n        else if (currentProperty) {\\n            currentParent[currentProperty] = value;\\n        }\\n    }\\n    var visitor = {\\n        onObjectBegin: function () {\\n            var object = {};\\n            onValue(object);\\n            previousParents.push(currentParent);\\n            currentParent = object;\\n            currentProperty = null;\\n        },\\n        onObjectProperty: function (name) {\\n            currentProperty = name;\\n        },\\n        onObjectEnd: function () {\\n            currentParent = previousParents.pop();\\n        },\\n        onArrayBegin: function () {\\n            var array = [];\\n            onValue(array);\\n            previousParents.push(currentParent);\\n            currentParent = array;\\n            currentProperty = null;\\n        },\\n        onArrayEnd: function () {\\n            currentParent = previousParents.pop();\\n        },\\n        onLiteralValue: onValue,\\n        onError: function (error, offset, length) {\\n            errors.push({ error: error, offset: offset, length: length });\\n        }\\n    };\\n    visit(text, visitor, options);\\n    return currentParent[0];\\n}\\n/**\\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\\n */\\nexport function parseTree(text, errors, options) {\\n    if (errors === void 0) { errors = []; }\\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: void 0 }; // artificial root\\n    function ensurePropertyComplete(endOffset) {\\n        if (currentParent.type === 'property') {\\n            currentParent.length = endOffset - currentParent.offset;\\n            currentParent = currentParent.parent;\\n        }\\n    }\\n    function onValue(valueNode) {\\n        currentParent.children.push(valueNode);\\n        return valueNode;\\n    }\\n    var visitor = {\\n        onObjectBegin: function (offset) {\\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\\n        },\\n        onObjectProperty: function (name, offset, length) {\\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\\n        },\\n        onObjectEnd: function (offset, length) {\\n            currentParent.length = offset + length - currentParent.offset;\\n            currentParent = currentParent.parent;\\n            ensurePropertyComplete(offset + length);\\n        },\\n        onArrayBegin: function (offset, length) {\\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\\n        },\\n        onArrayEnd: function (offset, length) {\\n            currentParent.length = offset + length - currentParent.offset;\\n            currentParent = currentParent.parent;\\n            ensurePropertyComplete(offset + length);\\n        },\\n        onLiteralValue: function (value, offset, length) {\\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\\n            ensurePropertyComplete(offset + length);\\n        },\\n        onSeparator: function (sep, offset, length) {\\n            if (currentParent.type === 'property') {\\n                if (sep === ':') {\\n                    currentParent.colonOffset = offset;\\n                }\\n                else if (sep === ',') {\\n                    ensurePropertyComplete(offset);\\n                }\\n            }\\n        },\\n        onError: function (error, offset, length) {\\n            errors.push({ error: error, offset: offset, length: length });\\n        }\\n    };\\n    visit(text, visitor, options);\\n    var result = currentParent.children[0];\\n    if (result) {\\n        delete result.parent;\\n    }\\n    return result;\\n}\\n/**\\n * Finds the node at the given path in a JSON DOM.\\n */\\nexport function findNodeAtLocation(root, path) {\\n    if (!root) {\\n        return void 0;\\n    }\\n    var node = root;\\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\\n        var segment = path_1[_i];\\n        if (typeof segment === 'string') {\\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\\n                return void 0;\\n            }\\n            var found = false;\\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\\n                var propertyNode = _b[_a];\\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\\n                    node = propertyNode.children[1];\\n                    found = true;\\n                    break;\\n                }\\n            }\\n            if (!found) {\\n                return void 0;\\n            }\\n        }\\n        else {\\n            var index = segment;\\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\\n                return void 0;\\n            }\\n            node = node.children[index];\\n        }\\n    }\\n    return node;\\n}\\n/**\\n * Gets the JSON path of the given JSON DOM node\\n */\\nexport function getNodePath(node) {\\n    if (!node.parent || !node.parent.children) {\\n        return [];\\n    }\\n    var path = getNodePath(node.parent);\\n    if (node.parent.type === 'property') {\\n        var key = node.parent.children[0].value;\\n        path.push(key);\\n    }\\n    else if (node.parent.type === 'array') {\\n        var index = node.parent.children.indexOf(node);\\n        if (index !== -1) {\\n            path.push(index);\\n        }\\n    }\\n    return path;\\n}\\n/**\\n * Evaluates the JavaScript object of the given JSON DOM node\\n */\\nexport function getNodeValue(node) {\\n    switch (node.type) {\\n        case 'array':\\n            return node.children.map(getNodeValue);\\n        case 'object':\\n            var obj = Object.create(null);\\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\\n                var prop = _a[_i];\\n                var valueNode = prop.children[1];\\n                if (valueNode) {\\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\\n                }\\n            }\\n            return obj;\\n        case 'null':\\n        case 'string':\\n        case 'number':\\n        case 'boolean':\\n            return node.value;\\n        default:\\n            return void 0;\\n    }\\n}\\nexport function contains(node, offset, includeRightBound) {\\n    if (includeRightBound === void 0) { includeRightBound = false; }\\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\\n}\\n/**\\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\\n */\\nexport function findNodeAtOffset(node, offset, includeRightBound) {\\n    if (includeRightBound === void 0) { includeRightBound = false; }\\n    if (contains(node, offset, includeRightBound)) {\\n        var children = node.children;\\n        if (Array.isArray(children)) {\\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\\n                if (item) {\\n                    return item;\\n                }\\n            }\\n        }\\n        return node;\\n    }\\n    return void 0;\\n}\\n/**\\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\\n */\\nexport function visit(text, visitor, options) {\\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\\n    var _scanner = createScanner(text, false);\\n    function toNoArgVisit(visitFunction) {\\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\\n    }\\n    function toOneArgVisit(visitFunction) {\\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\\n    }\\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\\n    var disallowComments = options && options.disallowComments;\\n    var allowTrailingComma = options && options.allowTrailingComma;\\n    function scanNext() {\\n        while (true) {\\n            var token = _scanner.scan();\\n            switch (_scanner.getTokenError()) {\\n                case 4 /* InvalidUnicode */:\\n                    handleError(14 /* InvalidUnicode */);\\n                    break;\\n                case 5 /* InvalidEscapeCharacter */:\\n                    handleError(15 /* InvalidEscapeCharacter */);\\n                    break;\\n                case 3 /* UnexpectedEndOfNumber */:\\n                    handleError(13 /* UnexpectedEndOfNumber */);\\n                    break;\\n                case 1 /* UnexpectedEndOfComment */:\\n                    if (!disallowComments) {\\n                        handleError(11 /* UnexpectedEndOfComment */);\\n                    }\\n                    break;\\n                case 2 /* UnexpectedEndOfString */:\\n                    handleError(12 /* UnexpectedEndOfString */);\\n                    break;\\n                case 6 /* InvalidCharacter */:\\n                    handleError(16 /* InvalidCharacter */);\\n                    break;\\n            }\\n            switch (token) {\\n                case 12 /* LineCommentTrivia */:\\n                case 13 /* BlockCommentTrivia */:\\n                    if (disallowComments) {\\n                        handleError(10 /* InvalidCommentToken */);\\n                    }\\n                    else {\\n                        onComment();\\n                    }\\n                    break;\\n                case 16 /* Unknown */:\\n                    handleError(1 /* InvalidSymbol */);\\n                    break;\\n                case 15 /* Trivia */:\\n                case 14 /* LineBreakTrivia */:\\n                    break;\\n                default:\\n                    return token;\\n            }\\n        }\\n    }\\n    function handleError(error, skipUntilAfter, skipUntil) {\\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\\n        if (skipUntil === void 0) { skipUntil = []; }\\n        onError(error);\\n        if (skipUntilAfter.length + skipUntil.length > 0) {\\n            var token = _scanner.getToken();\\n            while (token !== 17 /* EOF */) {\\n                if (skipUntilAfter.indexOf(token) !== -1) {\\n                    scanNext();\\n                    break;\\n                }\\n                else if (skipUntil.indexOf(token) !== -1) {\\n                    break;\\n                }\\n                token = scanNext();\\n            }\\n        }\\n    }\\n    function parseString(isValue) {\\n        var value = _scanner.getTokenValue();\\n        if (isValue) {\\n            onLiteralValue(value);\\n        }\\n        else {\\n            onObjectProperty(value);\\n        }\\n        scanNext();\\n        return true;\\n    }\\n    function parseLiteral() {\\n        switch (_scanner.getToken()) {\\n            case 11 /* NumericLiteral */:\\n                var value = 0;\\n                try {\\n                    value = JSON.parse(_scanner.getTokenValue());\\n                    if (typeof value !== 'number') {\\n                        handleError(2 /* InvalidNumberFormat */);\\n                        value = 0;\\n                    }\\n                }\\n                catch (e) {\\n                    handleError(2 /* InvalidNumberFormat */);\\n                }\\n                onLiteralValue(value);\\n                break;\\n            case 7 /* NullKeyword */:\\n                onLiteralValue(null);\\n                break;\\n            case 8 /* TrueKeyword */:\\n                onLiteralValue(true);\\n                break;\\n            case 9 /* FalseKeyword */:\\n                onLiteralValue(false);\\n                break;\\n            default:\\n                return false;\\n        }\\n        scanNext();\\n        return true;\\n    }\\n    function parseProperty() {\\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\\n            return false;\\n        }\\n        parseString(false);\\n        if (_scanner.getToken() === 6 /* ColonToken */) {\\n            onSeparator(':');\\n            scanNext(); // consume colon\\n            if (!parseValue()) {\\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\\n            }\\n        }\\n        else {\\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\\n        }\\n        return true;\\n    }\\n    function parseObject() {\\n        onObjectBegin();\\n        scanNext(); // consume open brace\\n        var needsComma = false;\\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\\n            if (_scanner.getToken() === 5 /* CommaToken */) {\\n                if (!needsComma) {\\n                    handleError(4 /* ValueExpected */, [], []);\\n                }\\n                onSeparator(',');\\n                scanNext(); // consume comma\\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\\n                    break;\\n                }\\n            }\\n            else if (needsComma) {\\n                handleError(6 /* CommaExpected */, [], []);\\n            }\\n            if (!parseProperty()) {\\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\\n            }\\n            needsComma = true;\\n        }\\n        onObjectEnd();\\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\\n        }\\n        else {\\n            scanNext(); // consume close brace\\n        }\\n        return true;\\n    }\\n    function parseArray() {\\n        onArrayBegin();\\n        scanNext(); // consume open bracket\\n        var needsComma = false;\\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\\n            if (_scanner.getToken() === 5 /* CommaToken */) {\\n                if (!needsComma) {\\n                    handleError(4 /* ValueExpected */, [], []);\\n                }\\n                onSeparator(',');\\n                scanNext(); // consume comma\\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\\n                    break;\\n                }\\n            }\\n            else if (needsComma) {\\n                handleError(6 /* CommaExpected */, [], []);\\n            }\\n            if (!parseValue()) {\\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\\n            }\\n            needsComma = true;\\n        }\\n        onArrayEnd();\\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\\n        }\\n        else {\\n            scanNext(); // consume close bracket\\n        }\\n        return true;\\n    }\\n    function parseValue() {\\n        switch (_scanner.getToken()) {\\n            case 3 /* OpenBracketToken */:\\n                return parseArray();\\n            case 1 /* OpenBraceToken */:\\n                return parseObject();\\n            case 10 /* StringLiteral */:\\n                return parseString(true);\\n            default:\\n                return parseLiteral();\\n        }\\n    }\\n    scanNext();\\n    if (_scanner.getToken() === 17 /* EOF */) {\\n        return true;\\n    }\\n    if (!parseValue()) {\\n        handleError(4 /* ValueExpected */, [], []);\\n        return false;\\n    }\\n    if (_scanner.getToken() !== 17 /* EOF */) {\\n        handleError(9 /* EndOfFileExpected */, [], []);\\n    }\\n    return true;\\n}\\n/**\\n * Takes JSON with JavaScript-style comments and remove\\n * them. Optionally replaces every none-newline character\\n * of comments with a replaceCharacter\\n */\\nexport function stripComments(text, replaceCh) {\\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\\n    do {\\n        pos = _scanner.getPosition();\\n        kind = _scanner.scan();\\n        switch (kind) {\\n            case 12 /* LineCommentTrivia */:\\n            case 13 /* BlockCommentTrivia */:\\n            case 17 /* EOF */:\\n                if (offset !== pos) {\\n                    parts.push(text.substring(offset, pos));\\n                }\\n                if (replaceCh !== void 0) {\\n                    parts.push(_scanner.getTokenValue().replace(/[^\\\\r\\\\n]/g, replaceCh));\\n                }\\n                offset = _scanner.getPosition();\\n                break;\\n        }\\n    } while (kind !== 17 /* EOF */);\\n    return parts.join('');\\n}\\nfunction getLiteralNodeType(value) {\\n    switch (typeof value) {\\n        case 'boolean': return 'boolean';\\n        case 'number': return 'number';\\n        case 'string': return 'string';\\n        default: return 'null';\\n    }\\n}\\n//# sourceMappingURL=parser.js.map\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n'use strict';\\nimport { format, isEOL } from './format';\\nimport { parseTree, findNodeAtLocation } from './parser';\\nexport function removeProperty(text, path, formattingOptions) {\\n    return setProperty(text, path, void 0, formattingOptions);\\n}\\nexport function setProperty(text, originalPath, value, formattingOptions, getInsertionIndex) {\\n    var _a;\\n    var path = originalPath.slice();\\n    var errors = [];\\n    var root = parseTree(text, errors);\\n    var parent = void 0;\\n    var lastSegment = void 0;\\n    while (path.length > 0) {\\n        lastSegment = path.pop();\\n        parent = findNodeAtLocation(root, path);\\n        if (parent === void 0 && value !== void 0) {\\n            if (typeof lastSegment === 'string') {\\n                value = (_a = {}, _a[lastSegment] = value, _a);\\n            }\\n            else {\\n                value = [value];\\n            }\\n        }\\n        else {\\n            break;\\n        }\\n    }\\n    if (!parent) {\\n        // empty document\\n        if (value === void 0) { // delete\\n            throw new Error('Can not delete in empty document');\\n        }\\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\\n    }\\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\\n        var existing = findNodeAtLocation(parent, [lastSegment]);\\n        if (existing !== void 0) {\\n            if (value === void 0) { // delete\\n                if (!existing.parent) {\\n                    throw new Error('Malformed AST');\\n                }\\n                var propertyIndex = parent.children.indexOf(existing.parent);\\n                var removeBegin = void 0;\\n                var removeEnd = existing.parent.offset + existing.parent.length;\\n                if (propertyIndex > 0) {\\n                    // remove the comma of the previous node\\n                    var previous = parent.children[propertyIndex - 1];\\n                    removeBegin = previous.offset + previous.length;\\n                }\\n                else {\\n                    removeBegin = parent.offset + 1;\\n                    if (parent.children.length > 1) {\\n                        // remove the comma of the next node\\n                        var next = parent.children[1];\\n                        removeEnd = next.offset;\\n                    }\\n                }\\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\\n            }\\n            else {\\n                // set value of existing property\\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\\n            }\\n        }\\n        else {\\n            if (value === void 0) { // delete\\n                return []; // property does not exist, nothing to do\\n            }\\n            var newProperty = JSON.stringify(lastSegment) + \\\": \\\" + JSON.stringify(value);\\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\\n            var edit = void 0;\\n            if (index > 0) {\\n                var previous = parent.children[index - 1];\\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\\n            }\\n            else if (parent.children.length === 0) {\\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\\n            }\\n            else {\\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\\n            }\\n            return withFormatting(text, edit, formattingOptions);\\n        }\\n    }\\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\\n        var insertIndex = lastSegment;\\n        if (insertIndex === -1) {\\n            // Insert\\n            var newProperty = \\\"\\\" + JSON.stringify(value);\\n            var edit = void 0;\\n            if (parent.children.length === 0) {\\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\\n            }\\n            else {\\n                var previous = parent.children[parent.children.length - 1];\\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\\n            }\\n            return withFormatting(text, edit, formattingOptions);\\n        }\\n        else {\\n            if (value === void 0 && parent.children.length >= 0) {\\n                //Removal\\n                var removalIndex = lastSegment;\\n                var toRemove = parent.children[removalIndex];\\n                var edit = void 0;\\n                if (parent.children.length === 1) {\\n                    // only item\\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\\n                }\\n                else if (parent.children.length - 1 === removalIndex) {\\n                    // last item\\n                    var previous = parent.children[removalIndex - 1];\\n                    var offset = previous.offset + previous.length;\\n                    var parentEndOffset = parent.offset + parent.length;\\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\\n                }\\n                else {\\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\\n                }\\n                return withFormatting(text, edit, formattingOptions);\\n            }\\n            else {\\n                throw new Error('Array modification not supported yet');\\n            }\\n        }\\n    }\\n    else {\\n        throw new Error(\\\"Can not add \\\" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \\\" to parent of type \\\" + parent.type);\\n    }\\n}\\nfunction withFormatting(text, edit, formattingOptions) {\\n    // apply the edit\\n    var newText = applyEdit(text, edit);\\n    // format the new text\\n    var begin = edit.offset;\\n    var end = edit.offset + edit.content.length;\\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\\n            begin--;\\n        }\\n        while (end < newText.length && !isEOL(newText, end)) {\\n            end++;\\n        }\\n    }\\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\\n    // apply the formatting edits and track the begin and end offsets of the changes\\n    for (var i = edits.length - 1; i >= 0; i--) {\\n        var edit_1 = edits[i];\\n        newText = applyEdit(newText, edit_1);\\n        begin = Math.min(begin, edit_1.offset);\\n        end = Math.max(end, edit_1.offset + edit_1.length);\\n        end += edit_1.content.length - edit_1.length;\\n    }\\n    // create a single edit with all changes\\n    var editLength = text.length - (newText.length - end) - begin;\\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\\n}\\nexport function applyEdit(text, edit) {\\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\\n}\\nexport function isWS(text, offset) {\\n    return '\\\\r\\\\n \\\\t'.indexOf(text.charAt(offset)) !== -1;\\n}\\n//# sourceMappingURL=edit.js.map\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n'use strict';\\nimport * as formatter from './impl/format';\\nimport * as edit from './impl/edit';\\nimport * as scanner from './impl/scanner';\\nimport * as parser from './impl/parser';\\n/**\\n * Creates a JSON scanner on the given text.\\n * If ignoreTrivia is set, whitespaces or comments are ignored.\\n */\\nexport var createScanner = scanner.createScanner;\\n/**\\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\\n */\\nexport var getLocation = parser.getLocation;\\n/**\\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\\n * Therefore, always check the errors list to find out if the input was valid.\\n */\\nexport var parse = parser.parse;\\n/**\\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\\n */\\nexport var parseTree = parser.parseTree;\\n/**\\n * Finds the node at the given path in a JSON DOM.\\n */\\nexport var findNodeAtLocation = parser.findNodeAtLocation;\\n/**\\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\\n */\\nexport var findNodeAtOffset = parser.findNodeAtOffset;\\n/**\\n * Gets the JSON path of the given JSON DOM node\\n */\\nexport var getNodePath = parser.getNodePath;\\n/**\\n * Evaluates the JavaScript object of the given JSON DOM node\\n */\\nexport var getNodeValue = parser.getNodeValue;\\n/**\\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\\n */\\nexport var visit = parser.visit;\\n/**\\n * Takes JSON with JavaScript-style comments and remove\\n * them. Optionally replaces every none-newline character\\n * of comments with a replaceCharacter\\n */\\nexport var stripComments = parser.stripComments;\\nexport function printParseErrorCode(code) {\\n    switch (code) {\\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\\n        case 4 /* ValueExpected */: return 'ValueExpected';\\n        case 5 /* ColonExpected */: return 'ColonExpected';\\n        case 6 /* CommaExpected */: return 'CommaExpected';\\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\\n    }\\n    return '<unknown ParseErrorCode>';\\n}\\n/**\\n * Computes the edits needed to format a JSON document.\\n *\\n * @param documentText The input text\\n * @param range The range to format or `undefined` to format the full content\\n * @param options The formatting options\\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\\n * text in the original document. However, multiple edits can have\\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\\n * To apply edits to an input, you can use `applyEdits`.\\n */\\nexport function format(documentText, range, options) {\\n    return formatter.format(documentText, range, options);\\n}\\n/**\\n * Computes the edits needed to modify a value in the JSON document.\\n *\\n * @param documentText The input text\\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\\n * If the path points to an non-existing property or item, it will be created.\\n * @param value The new value for the specified property or item. If the value is undefined,\\n * the property or item will be removed.\\n * @param options Options\\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\\n * text in the original document. However, multiple edits can have\\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\\n * To apply edits to an input, you can use `applyEdits`.\\n */\\nexport function modify(text, path, value, options) {\\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\\n}\\n/**\\n * Applies edits to a input string.\\n */\\nexport function applyEdits(text, edits) {\\n    for (var i = edits.length - 1; i >= 0; i--) {\\n        text = edit.applyEdit(text, edits[i]);\\n    }\\n    return text;\\n}\\n//# sourceMappingURL=main.js.map\",null,\"module.exports = require(\\\"fs\\\");\",null]}","code":"!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=4)}([function(e,t){e.exports=require(\"path\")},function(e,t){e.exports=require(\"vscode\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,o,i,a,l,s=n(0),u=n(5),c=Object.prototype.toString;function f(e){return void 0!==e}function d(e){return\"[object String]\"===c.call(e)}function p(e){return JSON.parse(u.readFileSync(e,\"utf8\"))}function g(e,t){return l&&(e=\"［\"+e.replace(/[aouei]/g,\"$&$&\")+\"］\"),0===t.length?e:e.replace(/\\{(\\d+)\\}/g,function(e,n){var r=n[0],o=t[r],i=e;return\"string\"==typeof o?i=o:\"number\"!=typeof o&&\"boolean\"!=typeof o&&void 0!==o&&null!==o||(i=String(o)),i})}function h(e){return function(t,n){for(var r=[],o=2;o<arguments.length;o++)r[o-2]=arguments[o];return function(e){return\"[object Number]\"===c.call(e)}(t)?t>=e.length?void console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \"+new Error(\"\").stack):g(e[t],r):d(n)?(console.warn(\"Message \"+n+\" didn't get externalized correctly.\"),g(n,r)):void console.error(\"Broken localize call found. Stacktrace is\\n: \"+new Error(\"\").stack)}}function m(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];return g(t,n)}function v(e,t){return i[e]=t,t}function b(e,t){var n,r=s.join(a.cacheRoot,e.id+\"-\"+e.hash+\".json\"),o=!1,i=!1;try{return n=JSON.parse(u.readFileSync(r,{encoding:\"utf8\",flag:\"r\"})),function(e){var t=new Date;u.utimes(e,t,t,function(){})}(r),n}catch(e){if(\"ENOENT\"===e.code)i=!0;else{if(!(e instanceof SyntaxError))throw e;console.log(\"Syntax error parsing message bundle: \"+e.message+\".\"),u.unlink(r,function(e){e&&console.error(\"Deleting corrupted bundle \"+r+\" failed.\")}),o=!0}}if(!(n=function(e,t){var n=a.translationsConfig[e.id];if(n){var r=p(n).contents,o=p(s.join(t,\"nls.metadata.json\")),i=Object.create(null);for(var l in o){var u=o[l],c=r[e.outDir+\"/\"+l];if(c){for(var f=[],g=0;g<u.keys.length;g++){var h=u.keys[g],m=c[d(h)?h:h.key];void 0===m&&(m=u.messages[g]),f.push(m)}i[l]=f}else i[l]=u.messages}return i}}(e,t))||o)return n;if(i)try{u.writeFileSync(r,JSON.stringify(n),{encoding:\"utf8\",flag:\"wx\"})}catch(e){if(\"EEXIST\"===e.code)return n;throw e}return n}function y(e){try{return function(e){var t=p(s.join(e,\"nls.metadata.json\")),n=Object.create(null);for(var r in t){var o=t[r];n[r]=o.messages}return n}(e)}catch(e){return void console.log(\"Generating default bundle from meta data failed.\",e)}}function C(e,t){var n;if(!0===a.languagePackSupport&&void 0!==a.cacheRoot&&void 0!==a.languagePackId&&void 0!==a.translationsConfigFile&&void 0!==a.translationsConfig)try{n=b(e,t)}catch(e){console.log(\"Load or create bundle failed \",e)}if(!n){if(a.languagePackSupport)return y(t);var r=function(e){for(var t=a.locale;t;){var n=s.join(e,\"nls.bundle.\"+t+\".json\");if(u.existsSync(n))return n;var r=t.lastIndexOf(\"-\");t=r>0?t.substring(0,r):void 0}if(void 0===t&&(n=s.join(e,\"nls.bundle.json\"),u.existsSync(n)))return n}(t);if(r)try{return p(r)}catch(e){console.log(\"Loading in the box message bundle failed.\",e)}n=y(t)}return n}function k(e){if(!e)return m;var t=s.extname(e);if(t&&(e=e.substr(0,e.length-t.length)),a.messageFormat===r.both||a.messageFormat===r.bundle){var n=function(e){for(var t,n=s.dirname(e);t=s.join(n,\"nls.metadata.header.json\"),!u.existsSync(t);){var r=s.dirname(n);if(r===n){t=void 0;break}n=r}return t}(e);if(n){var o=s.dirname(n),c=i[o];if(void 0===c)try{var d=JSON.parse(u.readFileSync(n,\"utf8\"));try{var g=C(d,o);c=v(o,g?{header:d,nlsBundle:g}:null)}catch(e){console.error(\"Failed to load nls bundle\",e),c=v(o,null)}}catch(e){console.error(\"Failed to read header file\",e),c=v(o,null)}if(c){var b=e.substr(o.length+1).replace(/\\\\/g,\"/\"),y=c.nlsBundle[b];return void 0===y?(console.error(\"Messages for file \"+e+\" not found. See console for details.\"),function(){return\"Messages not found.\"}):h(y)}}}if(a.messageFormat===r.both||a.messageFormat===r.file)try{var k=p(function(e){var t;if(a.cacheLanguageResolution&&t)t=t;else{if(l||!a.locale)t=\".nls.json\";else for(var n=a.locale;n;){var r=\".nls.\"+n+\".json\";if(u.existsSync(e+r)){t=r;break}var o=n.lastIndexOf(\"-\");o>0?n=n.substring(0,o):(t=\".nls.json\",n=null)}a.cacheLanguageResolution&&(t=t)}return e+t}(e));return Array.isArray(k)?h(k):f(k.messages)&&f(k.keys)?h(k.messages):(console.error(\"String bundle '\"+e+\"' uses an unsupported format.\"),function(){return\"File bundle has unsupported format. See console for details\"})}catch(e){\"ENOENT\"!==e.code&&console.error(\"Failed to load single file bundle\",e)}return console.error(\"Failed to load message bundle for file \"+e),function(){return\"Failed to load message bundle. See console for details.\"}}!function(e){e.file=\"file\",e.bundle=\"bundle\",e.both=\"both\"}(r=t.MessageFormat||(t.MessageFormat={})),function(e){e.is=function(e){var t=e;return t&&f(t.key)&&f(t.comment)}}(o||(o={})),function(){if(a={locale:void 0,languagePackSupport:!1,cacheLanguageResolution:!0,messageFormat:r.bundle},d(process.env.VSCODE_NLS_CONFIG))try{var e=JSON.parse(process.env.VSCODE_NLS_CONFIG);if(d(e.locale)&&(a.locale=e.locale.toLowerCase()),function(e){return!0===e||!1===e}(e._languagePackSupport)&&(a.languagePackSupport=e._languagePackSupport),d(e._cacheRoot)&&(a.cacheRoot=e._cacheRoot),d(e._languagePackId)&&(a.languagePackId=e._languagePackId),d(e._translationsConfigFile)){a.translationsConfigFile=e._translationsConfigFile;try{a.translationsConfig=p(a.translationsConfigFile)}catch(t){e._corruptedFile&&u.writeFile(e._corruptedFile,\"corrupted\",\"utf8\",function(e){console.error(e)})}}}catch(e){}l=\"pseudo\"===a.locale,void 0,i=Object.create(null)}(),t.loadMessageBundle=k,t.config=function(e){return e&&(d(e.locale)&&(a.locale=e.locale.toLowerCase(),void 0,i=Object.create(null)),void 0!==e.messageFormat&&(a.messageFormat=e.messageFormat)),l=\"pseudo\"===a.locale,k}},function(e,t,n){\"use strict\";function r(e,t){void 0===t&&(t=!1);var n=0,r=e.length,l=\"\",s=0,u=16,c=0,f=0,d=0,p=0,g=0;function h(t,r){for(var o=0,i=0;o<t||!r;){var a=e.charCodeAt(n);if(a>=48&&a<=57)i=16*i+a-48;else if(a>=65&&a<=70)i=16*i+a-65+10;else{if(!(a>=97&&a<=102))break;i=16*i+a-97+10}n++,o++}return o<t&&(i=-1),i}function m(){if(l=\"\",g=0,s=n,f=c,p=d,n>=r)return s=r,u=17;var t=e.charCodeAt(n);if(o(t)){do{n++,l+=String.fromCharCode(t),t=e.charCodeAt(n)}while(o(t));return u=15}if(i(t))return n++,l+=String.fromCharCode(t),13===t&&10===e.charCodeAt(n)&&(n++,l+=\"\\n\"),c++,d=n,u=14;switch(t){case 123:return n++,u=1;case 125:return n++,u=2;case 91:return n++,u=3;case 93:return n++,u=4;case 58:return n++,u=6;case 44:return n++,u=5;case 34:return n++,l=function(){for(var t=\"\",o=n;;){if(n>=r){t+=e.substring(o,n),g=2;break}var a=e.charCodeAt(n);if(34===a){t+=e.substring(o,n),n++;break}if(92!==a){if(a>=0&&a<=31){if(i(a)){t+=e.substring(o,n),g=2;break}g=6}n++}else{if(t+=e.substring(o,n),++n>=r){g=2;break}switch(a=e.charCodeAt(n++)){case 34:t+='\"';break;case 92:t+=\"\\\\\";break;case 47:t+=\"/\";break;case 98:t+=\"\\b\";break;case 102:t+=\"\\f\";break;case 110:t+=\"\\n\";break;case 114:t+=\"\\r\";break;case 116:t+=\"\\t\";break;case 117:var l=h(4,!0);l>=0?t+=String.fromCharCode(l):g=4;break;default:g=5}o=n}}return t}(),u=10;case 47:var m=n-1;if(47===e.charCodeAt(n+1)){for(n+=2;n<r&&!i(e.charCodeAt(n));)n++;return l=e.substring(m,n),u=12}if(42===e.charCodeAt(n+1)){n+=2;for(var b=r-1,y=!1;n<b;){var C=e.charCodeAt(n);if(42===C&&47===e.charCodeAt(n+1)){n+=2,y=!0;break}n++,i(C)&&(13===C&&10===e.charCodeAt(n)&&n++,c++,d=n)}return y||(n++,g=1),l=e.substring(m,n),u=13}return l+=String.fromCharCode(t),n++,u=16;case 45:if(l+=String.fromCharCode(t),++n===r||!a(e.charCodeAt(n)))return u=16;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return l+=function(){var t=n;if(48===e.charCodeAt(n))n++;else for(n++;n<e.length&&a(e.charCodeAt(n));)n++;if(n<e.length&&46===e.charCodeAt(n)){if(!(++n<e.length&&a(e.charCodeAt(n))))return g=3,e.substring(t,n);for(n++;n<e.length&&a(e.charCodeAt(n));)n++}var r=n;if(n<e.length&&(69===e.charCodeAt(n)||101===e.charCodeAt(n)))if((++n<e.length&&43===e.charCodeAt(n)||45===e.charCodeAt(n))&&n++,n<e.length&&a(e.charCodeAt(n))){for(n++;n<e.length&&a(e.charCodeAt(n));)n++;r=n}else g=3;return e.substring(t,r)}(),u=11;default:for(;n<r&&v(t);)n++,t=e.charCodeAt(n);if(s!==n){switch(l=e.substring(s,n)){case\"true\":return u=8;case\"false\":return u=9;case\"null\":return u=7}return u=16}return l+=String.fromCharCode(t),n++,u=16}}function v(e){if(o(e)||i(e))return!1;switch(e){case 125:case 93:case 123:case 91:case 34:case 58:case 44:case 47:return!1}return!0}return{setPosition:function(e){n=e,l=\"\",s=0,u=16,g=0},getPosition:function(){return n},scan:t?function(){var e;do{e=m()}while(e>=12&&e<=15);return e}:m,getToken:function(){return u},getTokenValue:function(){return l},getTokenOffset:function(){return s},getTokenLength:function(){return n-s},getTokenStartLine:function(){return f},getTokenStartCharacter:function(){return s-p},getTokenError:function(){return g}}}function o(e){return 32===e||9===e||11===e||12===e||160===e||5760===e||e>=8192&&e<=8203||8239===e||8287===e||12288===e||65279===e}function i(e){return 10===e||13===e||8232===e||8233===e}function a(e){return e>=48&&e<=57}function l(e,t,n){var o,i,a,l,c;if(t){for(l=t.offset,c=l+t.length,a=l;a>0&&!u(e,a-1);)a--;for(var f=c;f<e.length&&!u(e,f);)f++;i=e.substring(a,f),o=function(e,t){var n=0,r=0,o=t.tabSize||4;for(;n<e.length;){var i=e.charAt(n);if(\" \"===i)r++;else{if(\"\\t\"!==i)break;r+=o}n++}return Math.floor(r/o)}(i,n)}else i=e,o=0,a=0,l=0,c=e.length;var d,p=function(e,t){for(var n=0;n<t.length;n++){var r=t.charAt(n);if(\"\\r\"===r)return n+1<t.length&&\"\\n\"===t.charAt(n+1)?\"\\r\\n\":\"\\r\";if(\"\\n\"===r)return\"\\n\"}return e&&e.eol||\"\\n\"}(n,e),g=!1,h=0;d=n.insertSpaces?s(\" \",n.tabSize||4):\"\\t\";var m=r(i,!1),v=!1;function b(){return p+s(d,o+h)}function y(){var e=m.scan();for(g=!1;15===e||14===e;)g=g||14===e,e=m.scan();return v=16===e||0!==m.getTokenError(),e}var C=[];function k(t,n,r){!v&&n<c&&r>l&&e.substring(n,r)!==t&&C.push({offset:n,length:r-n,content:t})}var w=y();if(17!==w){var S=m.getTokenOffset()+a;k(s(d,o),a,S)}for(;17!==w;){for(var A=m.getTokenOffset()+m.getTokenLength()+a,x=y(),I=\"\";!g&&(12===x||13===x);){k(\" \",A,m.getTokenOffset()+a),A=m.getTokenOffset()+m.getTokenLength()+a,I=12===x?b():\"\",x=y()}if(2===x)1!==w&&(h--,I=b());else if(4===x)3!==w&&(h--,I=b());else{switch(w){case 3:case 1:h++,I=b();break;case 5:case 12:I=b();break;case 13:I=g?b():\" \";break;case 6:I=\" \";break;case 10:if(6===x){I=\"\";break}case 7:case 8:case 9:case 11:case 2:case 4:12===x||13===x?I=\" \":5!==x&&17!==x&&(v=!0);break;case 16:v=!0}!g||12!==x&&13!==x||(I=b())}k(I,A,m.getTokenOffset()+a),w=x}return C}function s(e,t){for(var n=\"\",r=0;r<t;r++)n+=e;return n}function u(e,t){return-1!==\"\\r\\n\".indexOf(e.charAt(t))}var c;function f(e,t,n){void 0===t&&(t=[]),void 0===n&&(n=c.DEFAULT);var r={type:\"array\",offset:-1,length:-1,children:[],parent:void 0};function o(e){\"property\"===r.type&&(r.length=e-r.offset,r=r.parent)}function i(e){return r.children.push(e),e}p(e,{onObjectBegin:function(e){r=i({type:\"object\",offset:e,length:-1,parent:r,children:[]})},onObjectProperty:function(e,t,n){(r=i({type:\"property\",offset:t,length:-1,parent:r,children:[]})).children.push({type:\"string\",value:e,offset:t,length:n,parent:r})},onObjectEnd:function(e,t){r.length=e+t-r.offset,r=r.parent,o(e+t)},onArrayBegin:function(e,t){r=i({type:\"array\",offset:e,length:-1,parent:r,children:[]})},onArrayEnd:function(e,t){r.length=e+t-r.offset,r=r.parent,o(e+t)},onLiteralValue:function(e,t,n){i({type:g(e),offset:t,length:n,parent:r,value:e}),o(t+n)},onSeparator:function(e,t,n){\"property\"===r.type&&(\":\"===e?r.colonOffset=t:\",\"===e&&o(t))},onError:function(e,n,r){t.push({error:e,offset:n,length:r})}},n);var a=r.children[0];return a&&delete a.parent,a}function d(e,t){if(e){for(var n=e,r=0,o=t;r<o.length;r++){var i=o[r];if(\"string\"==typeof i){if(\"object\"!==n.type||!Array.isArray(n.children))return;for(var a=!1,l=0,s=n.children;l<s.length;l++){var u=s[l];if(Array.isArray(u.children)&&u.children[0].value===i){n=u.children[1],a=!0;break}}if(!a)return}else{var c=i;if(\"array\"!==n.type||c<0||!Array.isArray(n.children)||c>=n.children.length)return;n=n.children[c]}}return n}}function p(e,t,n){void 0===n&&(n=c.DEFAULT);var o=r(e,!1);function i(e){return e?function(){return e(o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter())}:function(){return!0}}function a(e){return e?function(t){return e(t,o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter())}:function(){return!0}}var l=i(t.onObjectBegin),s=a(t.onObjectProperty),u=i(t.onObjectEnd),f=i(t.onArrayBegin),d=i(t.onArrayEnd),p=a(t.onLiteralValue),g=a(t.onSeparator),h=i(t.onComment),m=a(t.onError),v=n&&n.disallowComments,b=n&&n.allowTrailingComma;function y(){for(;;){var e=o.scan();switch(o.getTokenError()){case 4:C(14);break;case 5:C(15);break;case 3:C(13);break;case 1:v||C(11);break;case 2:C(12);break;case 6:C(16)}switch(e){case 12:case 13:v?C(10):h();break;case 16:C(1);break;case 15:case 14:break;default:return e}}}function C(e,t,n){if(void 0===t&&(t=[]),void 0===n&&(n=[]),m(e),t.length+n.length>0)for(var r=o.getToken();17!==r;){if(-1!==t.indexOf(r)){y();break}if(-1!==n.indexOf(r))break;r=y()}}function k(e){var t=o.getTokenValue();return e?p(t):s(t),y(),!0}function w(){switch(o.getToken()){case 3:return function(){f(),y();for(var e=!1;4!==o.getToken()&&17!==o.getToken();){if(5===o.getToken()){if(e||C(4,[],[]),g(\",\"),y(),4===o.getToken()&&b)break}else e&&C(6,[],[]);w()||C(4,[],[4,5]),e=!0}return d(),4!==o.getToken()?C(8,[4],[]):y(),!0}();case 1:return function(){l(),y();for(var e=!1;2!==o.getToken()&&17!==o.getToken();){if(5===o.getToken()){if(e||C(4,[],[]),g(\",\"),y(),2===o.getToken()&&b)break}else e&&C(6,[],[]);(10!==o.getToken()?(C(3,[],[2,5]),0):(k(!1),6===o.getToken()?(g(\":\"),y(),w()||C(4,[],[2,5])):C(5,[],[2,5]),1))||C(4,[],[2,5]),e=!0}return u(),2!==o.getToken()?C(7,[2],[]):y(),!0}();case 10:return k(!0);default:return function(){switch(o.getToken()){case 11:var e=0;try{\"number\"!=typeof(e=JSON.parse(o.getTokenValue()))&&(C(2),e=0)}catch(e){C(2)}p(e);break;case 7:p(null);break;case 8:p(!0);break;case 9:p(!1);break;default:return!1}return y(),!0}()}}return y(),17===o.getToken()||(w()?(17!==o.getToken()&&C(9,[],[]),!0):(C(4,[],[]),!1))}function g(e){switch(typeof e){case\"boolean\":return\"boolean\";case\"number\":return\"number\";case\"string\":return\"string\";default:return\"null\"}}function h(e,t,n,r,o){for(var i,a=t.slice(),l=f(e,[]),s=void 0,u=void 0;a.length>0&&(u=a.pop(),void 0===(s=d(l,a))&&void 0!==n);)\"string\"==typeof u?((i={})[u]=n,n=i):n=[n];if(s){if(\"object\"===s.type&&\"string\"==typeof u&&Array.isArray(s.children)){var c=d(s,[u]);if(void 0!==c){if(void 0===n){if(!c.parent)throw new Error(\"Malformed AST\");var p=s.children.indexOf(c.parent),g=void 0,h=c.parent.offset+c.parent.length;if(p>0)g=(w=s.children[p-1]).offset+w.length;else if(g=s.offset+1,s.children.length>1)h=s.children[1].offset;return m(e,{offset:g,length:h-g,content:\"\"},r)}return m(e,{offset:c.offset,length:c.length,content:JSON.stringify(n)},r)}if(void 0===n)return[];var v=JSON.stringify(u)+\": \"+JSON.stringify(n),b=o?o(s.children.map(function(e){return e.children[0].value})):s.children.length,y=void 0;return m(e,y=b>0?{offset:(w=s.children[b-1]).offset+w.length,length:0,content:\",\"+v}:0===s.children.length?{offset:s.offset+1,length:0,content:v}:{offset:s.offset+1,length:0,content:v+\",\"},r)}if(\"array\"===s.type&&\"number\"==typeof u&&Array.isArray(s.children)){if(-1===u){v=\"\"+JSON.stringify(n),y=void 0;if(0===s.children.length)y={offset:s.offset+1,length:0,content:v};else y={offset:(w=s.children[s.children.length-1]).offset+w.length,length:0,content:\",\"+v};return m(e,y,r)}if(void 0===n&&s.children.length>=0){var C=u,k=s.children[C];y=void 0;if(1===s.children.length)y={offset:s.offset+1,length:s.length-2,content:\"\"};else if(s.children.length-1===C){var w,S=(w=s.children[C-1]).offset+w.length;y={offset:S,length:s.offset+s.length-2-S,content:\"\"}}else y={offset:k.offset,length:s.children[C+1].offset-k.offset,content:\"\"};return m(e,y,r)}throw new Error(\"Array modification not supported yet\")}throw new Error(\"Can not add \"+(\"number\"!=typeof u?\"index\":\"property\")+\" to parent of type \"+s.type)}if(void 0===n)throw new Error(\"Can not delete in empty document\");return m(e,{offset:l?l.offset:0,length:l?l.length:0,content:JSON.stringify(n)},r)}function m(e,t,n){var r=v(e,t),o=t.offset,i=t.offset+t.content.length;if(0===t.length||0===t.content.length){for(;o>0&&!u(r,o-1);)o--;for(;i<r.length&&!u(r,i);)i++}for(var a=l(r,{offset:o,length:i-o},n),s=a.length-1;s>=0;s--){var c=a[s];r=v(r,c),o=Math.min(o,c.offset),i=Math.max(i,c.offset+c.length),i+=c.content.length-c.length}return[{offset:o,length:e.length-(r.length-i)-o,content:r.substring(o,i)}]}function v(e,t){return e.substring(0,t.offset)+t.content+e.substring(t.offset+t.length)}n.r(t),function(e){e.DEFAULT={allowTrailingComma:!1}}(c||(c={})),n.d(t,\"createScanner\",function(){return b}),n.d(t,\"getLocation\",function(){return y}),n.d(t,\"parse\",function(){return C}),n.d(t,\"parseTree\",function(){return k}),n.d(t,\"findNodeAtLocation\",function(){return w}),n.d(t,\"findNodeAtOffset\",function(){return S}),n.d(t,\"getNodePath\",function(){return A}),n.d(t,\"getNodeValue\",function(){return x}),n.d(t,\"visit\",function(){return I}),n.d(t,\"stripComments\",function(){return O}),n.d(t,\"printParseErrorCode\",function(){return T}),n.d(t,\"format\",function(){return j}),n.d(t,\"modify\",function(){return P}),n.d(t,\"applyEdits\",function(){return E});var b=r,y=function(e,t){var n=[],r=new Object,o=void 0,i={value:{},offset:0,length:0,type:\"object\",parent:void 0},a=!1;function l(e,t,n,r){i.value=e,i.offset=t,i.length=n,i.type=r,i.colonOffset=void 0,o=i}try{p(e,{onObjectBegin:function(e,i){if(t<=e)throw r;o=void 0,a=t>e,n.push(\"\")},onObjectProperty:function(e,o,i){if(t<o)throw r;if(l(e,o,i,\"property\"),n[n.length-1]=e,t<=o+i)throw r},onObjectEnd:function(e,i){if(t<=e)throw r;o=void 0,n.pop()},onArrayBegin:function(e,i){if(t<=e)throw r;o=void 0,n.push(0)},onArrayEnd:function(e,i){if(t<=e)throw r;o=void 0,n.pop()},onLiteralValue:function(e,n,o){if(t<n)throw r;if(l(e,n,o,g(e)),t<=n+o)throw r},onSeparator:function(e,i,l){if(t<=i)throw r;if(\":\"===e&&o&&\"property\"===o.type)o.colonOffset=i,a=!1,o=void 0;else if(\",\"===e){var s=n[n.length-1];\"number\"==typeof s?n[n.length-1]=s+1:(a=!0,n[n.length-1]=\"\"),o=void 0}}})}catch(e){if(e!==r)throw e}return{path:n,previousNode:o,isAtPropertyKey:a,matches:function(e){for(var t=0,r=0;t<e.length&&r<n.length;r++)if(e[t]===n[r]||\"*\"===e[t])t++;else if(\"**\"!==e[t])return!1;return t===e.length}}},C=function(e,t,n){void 0===t&&(t=[]),void 0===n&&(n=c.DEFAULT);var r=null,o=[],i=[];function a(e){Array.isArray(o)?o.push(e):r&&(o[r]=e)}return p(e,{onObjectBegin:function(){var e={};a(e),i.push(o),o=e,r=null},onObjectProperty:function(e){r=e},onObjectEnd:function(){o=i.pop()},onArrayBegin:function(){var e=[];a(e),i.push(o),o=e,r=null},onArrayEnd:function(){o=i.pop()},onLiteralValue:a,onError:function(e,n,r){t.push({error:e,offset:n,length:r})}},n),o[0]},k=f,w=d,S=function e(t,n,r){if(void 0===r&&(r=!1),function(e,t,n){return void 0===n&&(n=!1),t>=e.offset&&t<e.offset+e.length||n&&t===e.offset+e.length}(t,n,r)){var o=t.children;if(Array.isArray(o))for(var i=0;i<o.length&&o[i].offset<=n;i++){var a=e(o[i],n,r);if(a)return a}return t}},A=function e(t){if(!t.parent||!t.parent.children)return[];var n=e(t.parent);if(\"property\"===t.parent.type){var r=t.parent.children[0].value;n.push(r)}else if(\"array\"===t.parent.type){var o=t.parent.children.indexOf(t);-1!==o&&n.push(o)}return n},x=function e(t){switch(t.type){case\"array\":return t.children.map(e);case\"object\":for(var n=Object.create(null),r=0,o=t.children;r<o.length;r++){var i=o[r],a=i.children[1];a&&(n[i.children[0].value]=e(a))}return n;case\"null\":case\"string\":case\"number\":case\"boolean\":return t.value;default:return}},I=p,O=function(e,t){var n,o,i=r(e),a=[],l=0;do{switch(o=i.getPosition(),n=i.scan()){case 12:case 13:case 17:l!==o&&a.push(e.substring(l,o)),void 0!==t&&a.push(i.getTokenValue().replace(/[^\\r\\n]/g,t)),l=i.getPosition()}}while(17!==n);return a.join(\"\")};function T(e){switch(e){case 1:return\"InvalidSymbol\";case 2:return\"InvalidNumberFormat\";case 3:return\"PropertyNameExpected\";case 4:return\"ValueExpected\";case 5:return\"ColonExpected\";case 6:return\"CommaExpected\";case 7:return\"CloseBraceExpected\";case 8:return\"CloseBracketExpected\";case 9:return\"EndOfFileExpected\";case 10:return\"InvalidCommentToken\";case 11:return\"UnexpectedEndOfComment\";case 12:return\"UnexpectedEndOfString\";case 13:return\"UnexpectedEndOfNumber\";case 14:return\"InvalidUnicode\";case 15:return\"InvalidEscapeCharacter\";case 16:return\"InvalidCharacter\"}return\"<unknown ParseErrorCode>\"}function j(e,t,n){return l(e,t,n)}function P(e,t,n,r){return h(e,t,n,r.formattingOptions,r.getInsertionIndex)}function E(e,t){for(var n=t.length-1;n>=0;n--)e=v(e,t[n]);return e}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const r=n(3),o=n(1),i=n(2),a=n(6),l=i.loadMessageBundle(n(0).join(__dirname,\"extension.ts\"));function s(e){return o.languages.registerCompletionItemProvider({language:\"jsonc\",pattern:e},{provideCompletionItems(e,t,n){const i=r.getLocation(e.getText(),e.offsetAt(t));if(!i.isAtPropertyKey&&i.previousNode&&\"string\"===i.previousNode.type){const n=e.lineAt(t.line).text.indexOf(\"$\"),r=n>=0?new o.Position(t.line,n):t;return[{label:\"workspaceFolder\",detail:l(0,null)},{label:\"workspaceFolderBasename\",detail:l(1,null)},{label:\"relativeFile\",detail:l(2,null)},{label:\"relativeFileDirname\",detail:l(3,null)},{label:\"file\",detail:l(4,null)},{label:\"cwd\",detail:l(5,null)},{label:\"lineNumber\",detail:l(6,null)},{label:\"selectedText\",detail:l(7,null)},{label:\"fileDirname\",detail:l(8,null)},{label:\"fileExtname\",detail:l(9,null)},{label:\"fileBasename\",detail:l(10,null)},{label:\"fileBasenameNoExtension\",detail:l(11,null)},{label:\"defaultBuildTask\",detail:l(12,null)}].map(e=>({label:\"${\"+e.label+\"}\",range:new o.Range(r,t),detail:e.detail}))}return[]}})}function u(e,t){const n=e&&e.recommendations||[];if(Array.isArray(n)){const e=o.extensions.all.filter(e=>!(e.id.startsWith(\"vscode.\")||\"Microsoft.vscode-markdown\"===e.id||n.indexOf(e.id)>-1));if(e.length)return e.map(e=>{const n=new o.CompletionItem(e.id),r=`\"${e.id}\"`;return n.kind=o.CompletionItemKind.Value,n.insertText=r,n.range=t,n.filterText=r,n});{const e=new o.CompletionItem(l(13,null));return e.insertText='\"vscode.csharp\"',e.kind=o.CompletionItemKind.Value,e.range=t,[e]}}}t.activate=function(e){e.subscriptions.push(o.languages.registerCompletionItemProvider({language:\"jsonc\",pattern:\"**/settings.json\"},{provideCompletionItems:(e,t,n)=>new a.SettingsDocument(e).provideCompletionItems(t,n)})),e.subscriptions.push(...[o.languages.registerCompletionItemProvider({pattern:\"**/extensions.json\"},{provideCompletionItems(e,t,n){const i=r.getLocation(e.getText(),e.offsetAt(t)),a=e.getWordRangeAtPosition(t)||new o.Range(t,t);if(\"recommendations\"===i.path[0]){const t=r.parse(e.getText());return u(t,a)}return[]}}),o.languages.registerCompletionItemProvider({pattern:\"**/*.code-workspace\"},{provideCompletionItems(e,t,n){const i=r.getLocation(e.getText(),e.offsetAt(t)),a=e.getWordRangeAtPosition(t)||new o.Range(t,t);if(\"extensions\"===i.path[0]&&\"recommendations\"===i.path[1]){const t=r.parse(e.getText()).extensions;return u(t,a)}return[]}})]),e.subscriptions.push(s(\"**/launch.json\")),e.subscriptions.push(s(\"**/tasks.json\"))},o.languages.registerDocumentSymbolProvider({pattern:\"**/launch.json\",language:\"jsonc\"},{provideDocumentSymbols(e,t){const n=[];let i=\"\",a=\"\",l=0,s=0;return r.visit(e.getText(),{onObjectProperty:(e,t,n)=>{a=e},onLiteralValue:(e,t,n)=>{\"name\"===a&&(i=e)},onObjectBegin:(e,t)=>{2===++s&&(l=e)},onObjectEnd:(t,r)=>{i&&2===s&&n.push(new o.SymbolInformation(i,o.SymbolKind.Object,new o.Range(e.positionAt(l),e.positionAt(t)))),s--}}),n}},{label:\"Launch Targets\"})},function(e,t){e.exports=require(\"fs\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const r=n(1),o=n(3),i=n(2).loadMessageBundle(n(0).join(__dirname,\"settingsDocumentHelper.ts\"));t.SettingsDocument=class{constructor(e){this.document=e}provideCompletionItems(e,t){const n=o.getLocation(this.document.getText(),this.document.offsetAt(e)),a=this.document.getWordRangeAtPosition(e)||new r.Range(e,e);return\"window.title\"===n.path[0]?this.provideWindowTitleCompletionItems(n,a):\"files.associations\"===n.path[0]?this.provideFilesAssociationsCompletionItems(n,a):\"files.exclude\"===n.path[0]||\"search.exclude\"===n.path[0]?this.provideExcludeCompletionItems(n,a):\"files.defaultLanguage\"===n.path[0]?this.provideLanguageCompletionItems(n,a).then(e=>[this.newSimpleCompletionItem(JSON.stringify(\"${activeEditorLanguage}\"),a,i(0,null)),...e]):this.provideLanguageOverridesCompletionItems(n,e)}provideWindowTitleCompletionItems(e,t){const n=[];return n.push(this.newSimpleCompletionItem(\"${activeEditorShort}\",t,i(1,null))),n.push(this.newSimpleCompletionItem(\"${activeEditorMedium}\",t,i(2,null))),n.push(this.newSimpleCompletionItem(\"${activeEditorLong}\",t,i(3,null))),n.push(this.newSimpleCompletionItem(\"${activeFolderShort}\",t,i(4,null))),n.push(this.newSimpleCompletionItem(\"${activeFolderMedium}\",t,i(5,null))),n.push(this.newSimpleCompletionItem(\"${activeFolderLong}\",t,i(6,null))),n.push(this.newSimpleCompletionItem(\"${rootName}\",t,i(7,null))),n.push(this.newSimpleCompletionItem(\"${rootPath}\",t,i(8,null))),n.push(this.newSimpleCompletionItem(\"${folderName}\",t,i(9,null))),n.push(this.newSimpleCompletionItem(\"${folderPath}\",t,i(10,null))),n.push(this.newSimpleCompletionItem(\"${appName}\",t,i(11,null))),n.push(this.newSimpleCompletionItem(\"${remoteName}\",t,i(12,null))),n.push(this.newSimpleCompletionItem(\"${dirty}\",t,i(13,null))),n.push(this.newSimpleCompletionItem(\"${separator}\",t,i(14,null))),Promise.resolve(n)}provideFilesAssociationsCompletionItems(e,t){const n=[];if(2===e.path.length){if(e.isAtPropertyKey&&\"\"!==e.path[1])return this.provideLanguageCompletionItems(e,t);n.push(this.newSnippetCompletionItem({label:i(15,null),documentation:i(16,null),snippet:e.isAtPropertyKey?'\"*.${1:extension}\": \"${2:language}\"':'{ \"*.${1:extension}\": \"${2:language}\" }',range:t})),n.push(this.newSnippetCompletionItem({label:i(17,null),documentation:i(18,null),snippet:e.isAtPropertyKey?'\"/${1:path to file}/*.${2:extension}\": \"${3:language}\"':'{ \"/${1:path to file}/*.${2:extension}\": \"${3:language}\" }',range:t}))}return Promise.resolve(n)}provideExcludeCompletionItems(e,t){const n=[];return 1===e.path.length?(n.push(this.newSnippetCompletionItem({label:i(19,null),documentation:i(20,null),snippet:e.isAtPropertyKey?'\"**/*.${1:extension}\": true':'{ \"**/*.${1:extension}\": true }',range:t})),n.push(this.newSnippetCompletionItem({label:i(21,null),documentation:i(22,null),snippet:e.isAtPropertyKey?'\"**/*.{ext1,ext2,ext3}\": true':'{ \"**/*.{ext1,ext2,ext3}\": true }',range:t})),n.push(this.newSnippetCompletionItem({label:i(23,null),documentation:i(24,null),snippet:e.isAtPropertyKey?'\"**/*.${1:source-extension}\": { \"when\": \"$(basename).${2:target-extension}\" }':'{ \"**/*.${1:source-extension}\": { \"when\": \"$(basename).${2:target-extension}\" } }',range:t})),n.push(this.newSnippetCompletionItem({label:i(25,null),documentation:i(26,null),snippet:e.isAtPropertyKey?'\"${1:name}\": true':'{ \"${1:name}\": true }',range:t})),n.push(this.newSnippetCompletionItem({label:i(27,null),documentation:i(28,null),snippet:e.isAtPropertyKey?'\"{folder1,folder2,folder3}\": true':'{ \"{folder1,folder2,folder3}\": true }',range:t})),n.push(this.newSnippetCompletionItem({label:i(29,null),documentation:i(30,null),snippet:e.isAtPropertyKey?'\"**/${1:name}\": true':'{ \"**/${1:name}\": true }',range:t}))):(n.push(this.newSimpleCompletionItem(\"false\",t,i(31,null))),n.push(this.newSimpleCompletionItem(\"true\",t,i(32,null))),n.push(this.newSnippetCompletionItem({label:i(33,null),documentation:i(34,null),snippet:'{ \"when\": \"$(basename).${1:extension}\" }',range:t}))),Promise.resolve(n)}provideLanguageCompletionItems(e,t,n=(e=>JSON.stringify(e))){return r.languages.getLanguages().then(e=>{const o=[],i=r.workspace.getConfiguration();for(const a of e){const e=i.inspect(`[${a}]`);if(!e||!e.defaultValue){const e=new r.CompletionItem(n(a));e.kind=r.CompletionItemKind.Property,e.range=t,o.push(e)}}return o})}provideLanguageOverridesCompletionItems(e,t){if(0===e.path.length){let n=this.document.getWordRangeAtPosition(t,/^\\s*\\[.*]?/)||new r.Range(t,t),o=this.document.getText(n);if(o&&o.trim().startsWith(\"[\"))return n=new r.Range(new r.Position(n.start.line,n.start.character+o.indexOf(\"[\")),n.end),this.provideLanguageCompletionItems(e,n,e=>`\"[${e}]\"`);n=this.document.getWordRangeAtPosition(t)||new r.Range(t,t);let a='\"[${1:language}]\": {\\n\\t\"$0\"\\n}';return(o=this.document.getText(n))&&o.startsWith('\"')&&(n=new r.Range(new r.Position(n.start.line,n.start.character+1),n.end),a=a.substring(1)),Promise.resolve([this.newSnippetCompletionItem({label:i(35,null),documentation:i(36,null),snippet:a,range:n})])}if(1===e.path.length&&e.previousNode&&\"string\"==typeof e.previousNode.value&&e.previousNode.value.startsWith(\"[\")){let n=this.document.getWordRangeAtPosition(t)||new r.Range(t,t);return this.provideLanguageCompletionItems(e,n,e=>`\"[${e}]\"`)}return Promise.resolve([])}newSimpleCompletionItem(e,t,n,o){const i=new r.CompletionItem(e);return i.kind=r.CompletionItemKind.Value,i.detail=n,i.insertText=o||e,i.range=t,i}newSnippetCompletionItem(e){const t=new r.CompletionItem(e.label);return t.kind=r.CompletionItemKind.Value,t.documentation=e.documentation,t.insertText=new r.SnippetString(e.snippet),t.range=e.range,t}}}]));","extractedComments":[]}