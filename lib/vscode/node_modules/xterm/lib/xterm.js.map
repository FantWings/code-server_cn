{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/common/services/Services.ts","webpack:///./src/common/EventEmitter.ts","webpack:///./src/common/Lifecycle.ts","webpack:///./src/common/buffer/Constants.ts","webpack:///./src/browser/services/Services.ts","webpack:///./src/common/buffer/CellData.ts","webpack:///./src/common/buffer/AttributeData.ts","webpack:///./src/browser/Lifecycle.ts","webpack:///./src/common/input/TextDecoder.ts","webpack:///./src/browser/renderer/atlas/Constants.ts","webpack:///./src/browser/Color.ts","webpack:///./src/common/Platform.ts","webpack:///./src/common/data/EscapeSequences.ts","webpack:///./src/browser/renderer/BaseRenderLayer.ts","webpack:///./src/common/services/ServiceRegistry.ts","webpack:///./src/common/TypedArrayUtils.ts","webpack:///./src/common/buffer/BufferLine.ts","webpack:///./src/browser/LocalizableStrings.ts","webpack:///./src/common/data/Charsets.ts","webpack:///./src/common/CharWidth.ts","webpack:///./src/common/parser/Params.ts","webpack:///./src/common/parser/OscParser.ts","webpack:///./src/common/parser/Constants.ts","webpack:///./src/common/parser/DcsParser.ts","webpack:///./src/browser/renderer/atlas/CharAtlasCache.ts","webpack:///./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:///./src/browser/ColorManager.ts","webpack:///./src/browser/renderer/RendererUtils.ts","webpack:///./src/browser/renderer/CharacterJoinerRegistry.ts","webpack:///./src/browser/input/Mouse.ts","webpack:///./src/browser/RenderDebouncer.ts","webpack:///./src/browser/ScreenDprMonitor.ts","webpack:///./src/common/Clone.ts","webpack:///./src/public/Terminal.ts","webpack:///./src/Terminal.ts","webpack:///./src/browser/input/CompositionHelper.ts","webpack:///./src/browser/Viewport.ts","webpack:///./src/browser/Clipboard.ts","webpack:///./src/InputHandler.ts","webpack:///./src/common/parser/EscapeSequenceParser.ts","webpack:///./src/browser/renderer/Renderer.ts","webpack:///./src/browser/renderer/TextRenderLayer.ts","webpack:///./src/browser/renderer/GridCache.ts","webpack:///./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:///./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:///./src/browser/ColorContrastCache.ts","webpack:///./src/browser/renderer/atlas/LRUMap.ts","webpack:///./src/browser/renderer/SelectionRenderLayer.ts","webpack:///./src/browser/renderer/CursorRenderLayer.ts","webpack:///./src/browser/renderer/LinkRenderLayer.ts","webpack:///./src/browser/Linkifier.ts","webpack:///./src/browser/services/SelectionService.ts","webpack:///./src/browser/selection/SelectionModel.ts","webpack:///./src/browser/input/MoveToCell.ts","webpack:///./src/browser/services/SoundService.ts","webpack:///./src/browser/MouseZoneManager.ts","webpack:///./src/AccessibilityManager.ts","webpack:///./src/browser/renderer/dom/DomRenderer.ts","webpack:///./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:///./src/common/input/Keyboard.ts","webpack:///./src/common/WindowsMode.ts","webpack:///./src/browser/services/RenderService.ts","webpack:///./src/common/services/OptionsService.ts","webpack:///./src/browser/services/CharSizeService.ts","webpack:///./src/common/services/BufferService.ts","webpack:///./src/common/buffer/BufferSet.ts","webpack:///./src/common/buffer/Buffer.ts","webpack:///./src/common/CircularList.ts","webpack:///./src/common/buffer/BufferReflow.ts","webpack:///./src/common/buffer/Marker.ts","webpack:///./src/browser/services/MouseService.ts","webpack:///./src/common/services/CoreService.ts","webpack:///./src/common/services/LogService.ts","webpack:///./src/common/services/DirtyRowService.ts","webpack:///./src/common/services/InstantiationService.ts","webpack:///./src/common/services/CoreMouseService.ts","webpack:///./src/common/input/WriteBuffer.ts","webpack:///./src/browser/services/CoreBrowserService.ts","webpack:///./src/common/services/CharsetService.ts","webpack:///./src/public/AddonManager.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","IBufferService","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","_listeners","_disposed","this","_event","listener","push","dispose","length","splice","fire","arg1","arg2","queue","undefined","EventEmitter","_disposables","_isDisposed","forEach","register","unregister","index","indexOf","Disposable","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","ICharSizeService","ICoreBrowserService","IMouseService","IRenderService","ISelectionService","ISoundService","content","fg","bg","combinedData","fromCharData","obj","CellData","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","getFgColor","getBgColor","node","type","handler","useCapture","addEventListener","disposed","removeEventListener","codePoint","String","fromCharCode","data","start","end","result","codepoint","_interim","clear","decode","input","target","size","startPos","StringToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","channels","rgb","rgba","toPaddedHex","toString","contrastRatio","l1","l2","toCss","g","b","toRgba","color","blend","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","ensureContrastRatio","ratio","toColor","opaque","rgbaColor","parseInt","slice","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","bgL","fgL","toChannels","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","options","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","contrastColor","_getContrastColor","_drawUncachedChars","drawBoldTextInBrightColors","draw","fgOverride","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","minimumContrastRatio","adjustedColor","contrastCache","getColor","fgColor","fgColorMode","bgColor","bgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","setColor","inverse","BaseRenderLayer","DI_TARGET","DI_DEPENDENCIES","storeServiceDependency","serviceRegistry","Map","ctor","has","decorator","arguments","Error","set","fillFallback","array","constructor","CELL_SIZE","DEFAULT_ATTR_DATA","freeze","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","eraseAttr","deleteCells","replaceCells","subarray","keys","copyFrom","line","newLine","BufferLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","wcwidth","opts","COMBINING_BMP","COMBINING_HIGH","control","table","nul","num","ucs","mid","bisearch","MAX_SUBPARAMS","maxLength","maxSubParamsLength","params","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","Params","Array","k","addSubParam","addParam","newParams","toArray","res","reset","hasSubParams","idx","getSubParams","getSubParamsAll","addDigit","store","cur","_state","_id","_handlers","_handlerFb","addHandler","ident","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","j","_put","put","utf32ToString","_end","success","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","ret","OscHandler","EMPTY_HANDLERS","_active","_ident","unhook","hook","DcsParser","_params","DcsHandler","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","colorCode","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","v","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","ColorContrastCache","selectionOpaque","onOptionsChange","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","substring","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","event","element","getBoundingClientRect","clientX","left","clientY","top","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","ScreenDprMonitor","val","depth","clonedObject","isArray","_core","Terminal","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onBinary","onTitleChange","onScroll","onKey","onRender","onResize","_parser","ParserApi","textarea","BufferApiView","markers","blur","focus","columns","_verifyIntegers","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","registerMarker","cursorYOffset","addMarker","hasSelection","select","column","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","callback","writeUtf8","writeln","paste","getOption","optionsService","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","ydisp","ybase","getLine","BufferLineApiView","_line","getCell","BufferCellApiView","startColumn","endColumn","_x","registerCsiHandler","addCsiHandler","registerDcsHandler","addDcsHandler","registerEscHandler","addEscHandler","registerOscHandler","addOscHandler","browser","Browser","mouseEvents","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onBinary","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","e","_coreMouseService","CoreMouseService","_dirtyRowService","DirtyRowService","_charsetService","CharsetService","_setupOptionsListeners","_setup","_writeBuffer","WriteBuffer","_inputHandler","parse","_windowsMode","_renderService","_customKeyEventHandler","parentNode","insertMode","bracketedPasteMode","_userScrolling","InputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestReset","linkifier","Linkifier","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","buffers","active","preventScroll","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","body","_document","ownerDocument","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","coreBrowserService","CoreBrowserService","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","self","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","ctrl","ctrlKey","alt","altKey","shift","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","preventDefault","onProtocolChange","events","logLevel","debug","explainEvents","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","isCursorInitialized","scroll","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","wasModifierKeyOnlyEvent","charCode","which","_soundBell","playBellSound","_visualBell","clearTimeout","_visualBellTimer","setTimeout","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","is","term","termName","handleTitle","title","userScrolling","force","cancelEvents","stopPropagation","bellStyle","writeSync","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","oldValue","diff","replace","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","FALLBACK_SCROLL_BAR_WIDTH","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","dimensions","offsetHeight","newBufferHeight","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","position","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","GLEVEL","concat","pt","cursorStyle","cursorBlink","_terminal","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","_curAttrData","_eraseAttrDataInternal","_onRequestRefreshRows","_onRequestReset","_onRequestBell","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","setTitle","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","screenAlignmentPattern","setErrorHandler","state","error","setDcsHandler","DECRQSS","cursorStartX","cursorStartY","clearRange","len","chWidth","charset","wraparoundMode","wraparound","curAttr","bufferRow","markDirty","ch","_eraseAttrData","getNullCell","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","trimStart","scrollBottomRowsOffset","scrollBottomAbsolute","setgCharset","savedCols","applicationKeypad","activeEncoding","isCursorHidden","activateAltBuffer","activateNormalBuffer","_extractColor","attr","accu","cSpace","advance","subparams","isBlinking","bottom","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","setDefault","next","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","apply","map","unused","PRINTABLES","EXECUTABLES","states","TRANSITIONS","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","abort","handlersEsc","jj","nextRendererId","_screenElement","_linkifier","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","container","characterJoinerRegistry","bufferService","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_color","_rgba","setCss","getCss","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","pop","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_onRequestRefreshRowsEvent","_coreBrowserService","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","getStringCellWidth","MouseZone","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","mod","str","rpt","moveHorizontallyOnly","resetStartingRow","moveToRequestedCol","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","bytes","dataURI","split","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","_applyMinimumContrast","_addStyle","padStart","padChar","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","scrollback","disableStdin","tabStopWidth","screenKeys","useFlowControl","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","parentElement","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","triggerBinaryEvent","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","_entries","entries","service","instance","ServiceCollection","_services","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","DOWN","UP","MOVE","WHEEL","e1","e2","_action","_callbacks","_pendingData","_bufferOffset","cb","_innerWrite","startTime","activeElement","hasFocus","charsets","glevel","_addons","terminal","loadedAddon","_wrappedAddonDispose","activate"],"mappings":"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AC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,K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","file":"xterm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): {[event: string]: boolean};\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n   triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: any;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n  readonly charsets: ReadonlyArray<ICharset>;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n   setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  screenKeys: boolean;\n  termName: string;\n  useFlowControl: boolean;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: any;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (!disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    return {\n      css,\n      rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio * width,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        this._bufferService.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator = <any>function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params ? this._params : new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})();\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selection);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css: channels.toCss(r, g, b, alpha)\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) {}\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) {}\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public getCell(x: number): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n    return new BufferCellApiView(this._line, x);\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass BufferCellApiView implements IBufferCellApi {\n  constructor(private _line: IBufferLine, private _x: number) {}\n  public get char(): string { return this._line.getString(this._x); }\n  public get width(): number { return this._line.getWidth(this._x); }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) {}\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, IBufferLine, IAttributeData, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreMouseService, ICoreService, ILogService, IDirtyRowService, IInstantiationService, ICharsetService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CharsetService } from 'common/services/CharsetService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _charsetService: ICharsetService;\n  private _coreMouseService: ICoreMouseService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public insertMode: boolean;\n  public bracketedPasteMode: boolean;\n\n  // mouse properties\n  public mouseEvents: CoreMouseEventType = CoreMouseEventType.NONE;\n  public sendFocus: boolean;\n\n  // misc\n  public savedCols: number;\n\n  // write buffer\n  private _writeBuffer: WriteBuffer;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._coreService.onBinary(e => this._onBinary.fire(e));\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    this._setupOptionsListeners();\n    this._setup();\n\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n    this._renderService?.dispose();\n    this._customKeyEventHandler = null;\n    this.write = () => {};\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  private _setup(): void {\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.insertMode = false;\n    this.bracketedPasteMode = false;\n\n    this._userScrolling = false;\n\n    if (this._inputHandler) {\n      this._inputHandler.reset();\n    } else {\n      // Register input handler and refire/handle events\n      this._inputHandler = new InputHandler(this, this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService);\n      this._inputHandler.onRequestBell(() => this.bell());\n      this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end));\n      this._inputHandler.onRequestReset(() => this.reset());\n      this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n      this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n      this.register(this._inputHandler);\n    }\n\n    if (!this.linkifier) {\n      this.linkifier = new Linkifier(this._bufferService, this._logService);\n    }\n\n    if (this.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  private _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.addCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          disposables.forEach(d => d.dispose());\n        }\n      };\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          this._renderService?.clear();\n          this._charSizeService?.measure();\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n        case 'minimumContrastRatio':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n            this._renderService.onResize(this.cols, this.rows);\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          this.viewport?.syncScrollArea();\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            this._accessibilityManager?.dispose();\n            this._accessibilityManager = null;\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            this._enableWindowsMode();\n          } else {\n            this._windowsMode?.dispose();\n            this._windowsMode = undefined;\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => handlePasteEvent(event, this.textarea, this.bracketedPasteMode, this._coreService);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.warn('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this.options.theme = undefined;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.optionsService.onOptionChange(e => this._colorManager.onOptionsChange(e));\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager.colors, this.screenElement, this.linkifier);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager.colors, this.element, this.screenElement, this._viewportElement, this.linkifier);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      let pos;\n\n      // get mouse coordinates\n      pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n                  ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                  ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: {[key: string]: ((ev: Event) => void) | null} = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: {[key: string]: (ev: Event) => void} = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n          if (requestedEvents.mousedrag) {\n            this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      this.mouseEvents = events;\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element.classList.add('enable-mouse-events');\n        this._selectionService.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element.classList.remove('enable-mouse-events');\n        this._selectionService.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel);\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    });\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      if (!this.viewport.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea, this.bracketedPasteMode, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport.syncScrollArea(true);\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n        (amount > 0 &&  scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n        (modifier === 'ctrl' && ev.ctrlKey) ||\n        (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, bracketedPasteMode, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = '';\n    textarea.style.width = '';\n    textarea.style.height = '';\n    textarea.style.left = '';\n    textarea.style.top = '';\n    textarea.style.zIndex = '';\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { wcwidth } from 'common/CharWidth';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    private _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => this.setTitle(data)));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.fullReset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._terminal.scroll(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._onRequestBell.fire();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._charsetService.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._charsetService.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * Currently same functionality as CUF.\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y);\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._terminal.is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._terminal.is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._terminal.is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._terminal.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          // TODO: move DECCOLM into compat addon\n          this._terminal.savedCols = this._bufferService.cols;\n          this._terminal.resize(132, this._bufferService.rows);\n          this._onRequestReset.fire();\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._terminal.viewport?.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._terminal.viewport?.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          // TODO: move DECCOLM into compat addon\n          // Note: This impl currently does not enforce col 80, instead reverts\n          // to previous terminal width before entering DECCOLM 132\n          if (this._bufferService.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._bufferService.rows);\n          }\n          delete this._terminal.savedCols;\n          this._onRequestReset.fire();\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._terminal.viewport?.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n        this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._terminal.viewport?.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) {\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: IParams): void {\n    this._coreService.isCursorHidden = false;\n    this._terminal.insertMode = false;\n    this._terminal.viewport?.syncScrollArea();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._bufferService.buffer.x = this._bufferService.buffer.y = 0; // ?\n    this._coreService.reset();\n    this._charsetService.reset();\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._terminal.viewport?.syncScrollArea();\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._terminal.viewport?.syncScrollArea();\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): void {\n    this._parser.reset();\n    this._onRequestReset.fire();\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._charsetService.setgLevel(level);\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * TODO: move DECALN into compat addon\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService readonly coreService: ICoreService,\n    @ICoreBrowserService readonly coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, this._linkifier, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRefreshRows, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRefreshRowsEvent>,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(this._bufferService.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = this._bufferService.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === this._bufferService.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = this._bufferService.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { getStringCellWidth } from 'common/CharWidth';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey && this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  return moveHorizontallyOnly(startX, startY, targetX, targetY, bufferService, applicationCursor);\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.removeChild(this._rowContainer);\n    this._screenElement.removeChild(this._selectionContainer);\n    this._screenElement.removeChild(this._themeStyleElement);\n    this._screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._optionsService.options.fontFamily};` +\n        ` font-size: ${this._optionsService.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._optionsService.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink_box_shadow {` +\n        ` 50% {` +\n        `  box-shadow: none;` +\n        ` }` +\n        `}`;\n    styles +=\n        `@keyframes blink_block {` +\n        ` 0% {` +\n        `  background-color: ${this._colors.cursor.css};` +\n        `  color: ${this._colors.cursorAccent.css};` +\n        ` }` +\n        ` 50% {` +\n        `  background-color: ${this._colors.cursorAccent.css};` +\n        `  color: ${this._colors.cursor.css};` +\n        ` }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n        ` animation: blink_box_shadow 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` animation: blink_block 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = this._bufferService.buffer.x;\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _optionsService: IOptionsService,\n    private _colors: IColorSet\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (this._workCell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = this._workCell.getFgColor();\n      let fgColorMode = this._workCell.getFgColorMode();\n      let bg = this._workCell.getBgColor();\n      let bgColorMode = this._workCell.getBgColorMode();\n      const isInverse = !!this._workCell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (this._workCell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowsMode: false,\n\n  convertEol: false,\n  termName: 'xterm',\n  screenKeys: false,\n  cancelEvents: false,\n  useFlowControl: false,\n  wordSeparator: ' ()[]{}\\',:;\"`'\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, ICharset } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  origin: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): any {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return <T>new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    Object.keys(DEFAULT_PROTOCOLS).forEach(name => this.addProtocol(name, DEFAULT_PROTOCOLS[name]));\n    Object.keys(DEFAULT_ENCODINGS).forEach(name => this.addEncoding(name, DEFAULT_ENCODINGS[name]));\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      DOWN: !!(events & CoreMouseEventType.DOWN),\n      UP: !!(events & CoreMouseEventType.UP),\n      DRAG: !!(events & CoreMouseEventType.DRAG),\n      MOVE: !!(events & CoreMouseEventType.MOVE),\n      WHEEL: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  serviceBrand: any;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public charsets: ICharset[] = [];\n  public glevel: number = 0;\n\n  public reset(): void {\n    this.charset = undefined;\n    this.charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}